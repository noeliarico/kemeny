
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,70,71,63,76,56,74,72],
[61,0,63,57,67,50,61,72],
[60,68,0,66,80,71,68,68],
[68,74,65,0,78,64,73,81],
[55,64,51,53,0,56,64,71],
[75,81,60,67,75,0,75,79],
[57,70,63,58,67,56,0,70],
[59,59,63,50,60,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,70,70,68,67,71,61],
[73,0,68,72,67,60,70,63],
[61,63,0,64,64,59,65,57],
[61,59,67,0,66,66,70,58],
[63,64,67,65,0,65,71,60],
[64,71,72,65,66,0,68,68],
[60,61,66,61,60,63,0,62],
[70,68,74,73,71,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,66,77,66,76,58],
[61,0,65,63,68,64,67,66],
[61,66,0,58,66,63,64,61],
[65,68,73,0,70,67,69,63],
[54,63,65,61,0,62,62,58],
[65,67,68,64,69,0,68,57],
[55,64,67,62,69,63,0,56],
[73,65,70,68,73,74,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,77,69,71,92,65,68],
[42,0,51,72,24,69,57,60],
[54,80,0,69,44,66,36,63],
[62,59,62,0,47,71,62,65],
[60,107,87,84,0,84,87,63],
[39,62,65,60,47,0,65,45],
[66,74,95,69,44,66,0,69],
[63,71,68,66,68,86,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,83,55,66,79,67,64],
[59,0,87,68,59,83,70,66],
[48,44,0,42,45,52,45,51],
[76,63,89,0,63,74,69,74],
[65,72,86,68,0,74,70,64],
[52,48,79,57,57,0,61,64],
[64,61,86,62,61,70,0,63],
[67,65,80,57,67,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,63,54,61,56,38],
[78,0,63,70,91,73,78,72],
[69,68,0,68,68,71,76,50],
[68,61,63,0,52,69,65,62],
[77,40,63,79,0,64,68,57],
[70,58,60,62,67,0,47,49],
[75,53,55,66,63,84,0,61],
[93,59,81,69,74,82,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,70,63,62,66,53],
[65,0,47,67,48,60,53,39],
[70,84,0,66,65,65,73,46],
[61,64,65,0,66,60,51,46],
[68,83,66,65,0,73,69,70],
[69,71,66,71,58,0,70,57],
[65,78,58,80,62,61,0,41],
[78,92,85,85,61,74,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,64,72,69,64,65],
[73,0,65,60,74,65,66,66],
[73,66,0,68,75,68,66,63],
[67,71,63,0,79,66,65,60],
[59,57,56,52,0,62,59,58],
[62,66,63,65,69,0,62,64],
[67,65,65,66,72,69,0,61],
[66,65,68,71,73,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,73,77,65,77,66],
[59,0,69,75,62,70,69,67],
[62,62,0,67,64,70,60,61],
[58,56,64,0,65,71,61,62],
[54,69,67,66,0,66,69,65],
[66,61,61,60,65,0,73,63],
[54,62,71,70,62,58,0,56],
[65,64,70,69,66,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,66,58,46,56,75],
[61,0,55,48,53,49,54,65],
[63,76,0,60,58,58,62,77],
[65,83,71,0,71,73,53,75],
[73,78,73,60,0,67,61,69],
[85,82,73,58,64,0,68,84],
[75,77,69,78,70,63,0,72],
[56,66,54,56,62,47,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,71,72,73,69,78],
[58,0,73,67,65,60,68,59],
[69,58,0,65,57,68,65,65],
[60,64,66,0,64,62,64,62],
[59,66,74,67,0,72,72,71],
[58,71,63,69,59,0,69,61],
[62,63,66,67,59,62,0,69],
[53,72,66,69,60,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,81,65,67,67,58,60],
[60,0,60,75,61,62,61,54],
[50,71,0,58,68,62,61,54],
[66,56,73,0,60,74,60,51],
[64,70,63,71,0,62,59,67],
[64,69,69,57,69,0,57,58],
[73,70,70,71,72,74,0,65],
[71,77,77,80,64,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,90,57,72,80,51,72],
[68,0,85,72,74,70,61,64],
[41,46,0,48,61,64,37,41],
[74,59,83,0,90,87,73,53],
[59,57,70,41,0,64,52,49],
[51,61,67,44,67,0,36,58],
[80,70,94,58,79,95,0,67],
[59,67,90,78,82,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,72,64,75,75,84,59],
[85,0,74,70,67,60,70,69],
[59,57,0,65,79,60,72,49],
[67,61,66,0,51,64,59,59],
[56,64,52,80,0,72,68,44],
[56,71,71,67,59,0,56,54],
[47,61,59,72,63,75,0,51],
[72,62,82,72,87,77,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,73,75,79,56,71,72],
[50,0,46,47,47,46,60,59],
[58,85,0,72,75,65,75,77],
[56,84,59,0,74,69,77,73],
[52,84,56,57,0,51,66,59],
[75,85,66,62,80,0,71,65],
[60,71,56,54,65,60,0,67],
[59,72,54,58,72,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,57,67,66,69,67],
[64,0,67,64,70,65,76,67],
[75,64,0,65,70,70,64,69],
[74,67,66,0,71,67,53,73],
[64,61,61,60,0,65,57,65],
[65,66,61,64,66,0,67,59],
[62,55,67,78,74,64,0,58],
[64,64,62,58,66,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,53,73,64,66,57],
[75,0,62,60,74,64,66,71],
[68,69,0,58,70,58,63,62],
[78,71,73,0,72,65,65,69],
[58,57,61,59,0,63,56,50],
[67,67,73,66,68,0,57,61],
[65,65,68,66,75,74,0,73],
[74,60,69,62,81,70,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,61,70,82,80,70,68],
[57,0,59,60,73,58,58,72],
[70,72,0,59,74,64,58,64],
[61,71,72,0,77,73,70,76],
[49,58,57,54,0,53,52,59],
[51,73,67,58,78,0,54,64],
[61,73,73,61,79,77,0,75],
[63,59,67,55,72,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,73,58,73,68,66],
[63,0,57,58,59,56,58,64],
[60,74,0,66,69,65,61,73],
[58,73,65,0,70,63,68,69],
[73,72,62,61,0,68,67,62],
[58,75,66,68,63,0,60,68],
[63,73,70,63,64,71,0,64],
[65,67,58,62,69,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,64,57,67,69,72],
[66,0,60,61,63,70,72,59],
[67,71,0,62,63,65,63,62],
[67,70,69,0,70,80,68,61],
[74,68,68,61,0,72,68,71],
[64,61,66,51,59,0,54,55],
[62,59,68,63,63,77,0,65],
[59,72,69,70,60,76,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,70,66,59,69,69,73],
[51,0,72,45,38,40,54,63],
[61,59,0,55,53,54,63,64],
[65,86,76,0,51,74,80,82],
[72,93,78,80,0,80,65,72],
[62,91,77,57,51,0,55,67],
[62,77,68,51,66,76,0,73],
[58,68,67,49,59,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,68,66,77,76,57],
[75,0,63,70,77,76,80,72],
[64,68,0,65,70,78,74,65],
[63,61,66,0,75,81,72,72],
[65,54,61,56,0,78,74,63],
[54,55,53,50,53,0,63,60],
[55,51,57,59,57,68,0,65],
[74,59,66,59,68,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,71,62,71,71,69],
[63,0,78,75,75,73,83,94],
[61,53,0,61,67,62,67,67],
[60,56,70,0,56,63,69,75],
[69,56,64,75,0,65,76,78],
[60,58,69,68,66,0,74,71],
[60,48,64,62,55,57,0,62],
[62,37,64,56,53,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,84,67,74,60,71,72],
[58,0,59,72,70,67,59,82],
[47,72,0,71,50,63,47,58],
[64,59,60,0,65,55,58,63],
[57,61,81,66,0,61,39,58],
[71,64,68,76,70,0,67,62],
[60,72,84,73,92,64,0,62],
[59,49,73,68,73,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,66,55,63,67,61],
[74,0,66,63,75,62,72,71],
[68,65,0,68,64,70,78,56],
[65,68,63,0,64,61,71,57],
[76,56,67,67,0,64,67,59],
[68,69,61,70,67,0,76,65],
[64,59,53,60,64,55,0,58],
[70,60,75,74,72,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,58,59,59,49,48],
[65,0,73,61,66,64,75,67],
[67,58,0,55,62,49,60,52],
[73,70,76,0,64,71,79,77],
[72,65,69,67,0,66,79,69],
[72,67,82,60,65,0,74,71],
[82,56,71,52,52,57,0,47],
[83,64,79,54,62,60,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,55,63,62,67,50,67],
[84,0,78,66,73,86,65,81],
[76,53,0,56,71,73,59,61],
[68,65,75,0,66,76,66,79],
[69,58,60,65,0,69,63,75],
[64,45,58,55,62,0,58,71],
[81,66,72,65,68,73,0,80],
[64,50,70,52,56,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,61,57,85,45,26,72],
[52,0,34,36,54,46,54,54],
[70,97,0,59,88,69,42,84],
[74,95,72,0,96,59,68,110],
[46,77,43,35,0,37,22,40],
[86,85,62,72,94,0,62,72],
[105,77,89,63,109,69,0,92],
[59,77,47,21,91,59,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,72,68,75,64,72],
[70,0,66,72,69,75,58,72],
[66,65,0,75,56,64,61,64],
[59,59,56,0,56,60,59,65],
[63,62,75,75,0,71,71,68],
[56,56,67,71,60,0,55,58],
[67,73,70,72,60,76,0,75],
[59,59,67,66,63,73,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,76,70,67,59,61,80],
[46,0,49,45,50,54,67,59],
[55,82,0,69,57,63,59,74],
[61,86,62,0,59,49,52,58],
[64,81,74,72,0,76,74,70],
[72,77,68,82,55,0,66,77],
[70,64,72,79,57,65,0,85],
[51,72,57,73,61,54,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,65,54,63,55,62],
[72,0,66,69,79,66,63,78],
[80,65,0,66,73,63,64,64],
[66,62,65,0,61,65,54,69],
[77,52,58,70,0,62,58,66],
[68,65,68,66,69,0,71,81],
[76,68,67,77,73,60,0,78],
[69,53,67,62,65,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,78,67,69,65,73],
[63,0,62,64,65,69,50,61],
[69,69,0,70,57,65,63,66],
[53,67,61,0,61,65,64,55],
[64,66,74,70,0,77,71,79],
[62,62,66,66,54,0,71,65],
[66,81,68,67,60,60,0,71],
[58,70,65,76,52,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,70,73,69,76,66],
[61,0,62,61,64,56,64,67],
[69,69,0,65,61,67,68,61],
[61,70,66,0,64,72,64,68],
[58,67,70,67,0,70,77,72],
[62,75,64,59,61,0,70,65],
[55,67,63,67,54,61,0,66],
[65,64,70,63,59,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,70,74,79,82,72],
[65,0,77,80,95,77,89,88],
[68,54,0,71,72,75,66,75],
[61,51,60,0,70,55,60,57],
[57,36,59,61,0,46,63,64],
[52,54,56,76,85,0,71,76],
[49,42,65,71,68,60,0,59],
[59,43,56,74,67,55,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,63,70,70,65,65],
[68,0,74,56,70,65,66,66],
[74,57,0,56,60,65,57,61],
[68,75,75,0,80,64,72,65],
[61,61,71,51,0,56,62,63],
[61,66,66,67,75,0,74,66],
[66,65,74,59,69,57,0,73],
[66,65,70,66,68,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,55,50,59,56,65,56],
[67,0,64,58,58,58,59,59],
[76,67,0,63,64,61,60,69],
[81,73,68,0,68,58,68,70],
[72,73,67,63,0,68,74,74],
[75,73,70,73,63,0,71,70],
[66,72,71,63,57,60,0,69],
[75,72,62,61,57,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,92,63,92,66,72,78],
[60,0,82,54,53,40,65,52],
[39,49,0,27,41,33,50,43],
[68,77,104,0,80,70,73,61],
[39,78,90,51,0,58,67,74],
[65,91,98,61,73,0,57,90],
[59,66,81,58,64,74,0,58],
[53,79,88,70,57,41,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,80,68,76,65,78,82],
[56,0,68,60,66,67,68,81],
[51,63,0,50,62,54,62,71],
[63,71,81,0,70,73,64,69],
[55,65,69,61,0,51,55,76],
[66,64,77,58,80,0,68,69],
[53,63,69,67,76,63,0,71],
[49,50,60,62,55,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,61,76,74,68,73],
[62,0,77,70,75,67,58,70],
[61,54,0,56,66,62,53,62],
[70,61,75,0,69,69,59,68],
[55,56,65,62,0,62,54,64],
[57,64,69,62,69,0,58,59],
[63,73,78,72,77,73,0,69],
[58,61,69,63,67,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,56,76,53,56,56],
[70,0,54,58,61,68,65,60],
[67,77,0,59,69,80,69,62],
[75,73,72,0,76,72,67,63],
[55,70,62,55,0,68,67,46],
[78,63,51,59,63,0,77,48],
[75,66,62,64,64,54,0,68],
[75,71,69,68,85,83,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,11,22,22,29,42],
[96,0,84,60,76,96,85,91],
[96,47,0,58,27,58,36,58],
[120,71,73,0,51,58,60,77],
[109,55,104,80,0,91,60,80],
[109,35,73,73,40,0,60,55],
[102,46,95,71,71,71,0,102],
[89,40,73,54,51,76,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,82,71,87,90,57],
[57,0,63,70,71,78,66,67],
[61,68,0,80,55,84,68,66],
[49,61,51,0,71,65,48,56],
[60,60,76,60,0,75,68,57],
[44,53,47,66,56,0,62,69],
[41,65,63,83,63,69,0,51],
[74,64,65,75,74,62,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,52,64,60,66,68],
[61,0,60,56,51,60,74,58],
[60,71,0,62,62,70,70,73],
[79,75,69,0,65,74,72,61],
[67,80,69,66,0,63,73,65],
[71,71,61,57,68,0,71,62],
[65,57,61,59,58,60,0,61],
[63,73,58,70,66,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,52,39,17,44,48,70],
[70,0,66,53,45,57,59,60],
[79,65,0,32,32,54,32,65],
[92,78,99,0,52,88,85,74],
[114,86,99,79,0,87,65,80],
[87,74,77,43,44,0,71,60],
[83,72,99,46,66,60,0,78],
[61,71,66,57,51,71,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,75,69,64,70,78],
[63,0,65,68,57,70,66,70],
[65,66,0,72,65,76,67,81],
[56,63,59,0,70,64,61,69],
[62,74,66,61,0,62,64,64],
[67,61,55,67,69,0,69,70],
[61,65,64,70,67,62,0,73],
[53,61,50,62,67,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,66,51,69,66,58],
[58,0,66,56,59,63,59,60],
[60,65,0,65,55,59,61,58],
[65,75,66,0,58,63,58,58],
[80,72,76,73,0,69,65,69],
[62,68,72,68,62,0,72,58],
[65,72,70,73,66,59,0,60],
[73,71,73,73,62,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,108,94,85,93,95,63],
[42,0,76,63,98,81,87,68],
[23,55,0,46,65,65,73,62],
[37,68,85,0,88,100,78,66],
[46,33,66,43,0,43,72,71],
[38,50,66,31,88,0,80,43],
[36,44,58,53,59,51,0,76],
[68,63,69,65,60,88,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,51,59,62,44,55,63],
[92,0,73,62,63,56,62,74],
[80,58,0,65,61,63,53,62],
[72,69,66,0,70,62,72,67],
[69,68,70,61,0,62,62,71],
[87,75,68,69,69,0,62,80],
[76,69,78,59,69,69,0,63],
[68,57,69,64,60,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,71,57,64,69,71],
[62,0,74,84,91,54,86,63],
[63,57,0,90,88,69,83,66],
[60,47,41,0,48,57,59,62],
[74,40,43,83,0,59,90,64],
[67,77,62,74,72,0,72,56],
[62,45,48,72,41,59,0,50],
[60,68,65,69,67,75,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,63,49,62,70,56],
[79,0,68,67,66,59,59,81],
[74,63,0,71,72,76,74,67],
[68,64,60,0,68,68,70,64],
[82,65,59,63,0,60,58,81],
[69,72,55,63,71,0,77,71],
[61,72,57,61,73,54,0,64],
[75,50,64,67,50,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,72,66,58,69,77,67],
[71,0,75,73,64,79,71,67],
[59,56,0,53,47,56,53,62],
[65,58,78,0,65,68,81,75],
[73,67,84,66,0,67,91,55],
[62,52,75,63,64,0,62,55],
[54,60,78,50,40,69,0,55],
[64,64,69,56,76,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,83,59,63,78,67],
[61,0,66,71,66,60,67,80],
[72,65,0,74,67,67,74,75],
[48,60,57,0,56,61,61,67],
[72,65,64,75,0,66,72,77],
[68,71,64,70,65,0,69,68],
[53,64,57,70,59,62,0,70],
[64,51,56,64,54,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,50,77,92,69,63,77],
[60,0,59,68,66,63,73,80],
[81,72,0,62,96,75,83,72],
[54,63,69,0,89,53,76,85],
[39,65,35,42,0,25,53,62],
[62,68,56,78,106,0,70,80],
[68,58,48,55,78,61,0,80],
[54,51,59,46,69,51,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,46,54,38,71,99,64],
[65,0,42,61,39,66,89,61],
[85,89,0,71,45,79,101,71],
[77,70,60,0,66,67,87,67],
[93,92,86,65,0,83,103,88],
[60,65,52,64,48,0,87,57],
[32,42,30,44,28,44,0,45],
[67,70,60,64,43,74,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,80,59,74,74,108],
[67,0,80,80,98,87,64,82],
[67,51,0,98,98,105,25,82],
[51,51,33,0,51,48,58,90],
[72,33,33,80,0,87,58,100],
[57,44,26,83,44,0,36,93],
[57,67,106,73,73,95,0,67],
[23,49,49,41,31,38,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,42,56,43,31,74,71],
[71,0,48,49,57,62,65,62],
[89,83,0,89,62,67,103,98],
[75,82,42,0,52,65,79,83],
[88,74,69,79,0,52,90,86],
[100,69,64,66,79,0,65,82],
[57,66,28,52,41,66,0,58],
[60,69,33,48,45,49,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,82,79,69,67,66],
[64,0,76,86,67,62,71,70],
[71,55,0,73,67,62,59,61],
[49,45,58,0,63,59,58,65],
[52,64,64,68,0,58,63,66],
[62,69,69,72,73,0,68,60],
[64,60,72,73,68,63,0,59],
[65,61,70,66,65,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,58,55,50,46,67],
[64,0,62,64,64,63,54,65],
[72,69,0,64,72,62,63,72],
[73,67,67,0,64,70,63,72],
[76,67,59,67,0,66,69,64],
[81,68,69,61,65,0,59,76],
[85,77,68,68,62,72,0,84],
[64,66,59,59,67,55,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,58,66,69,58,77,67],
[63,0,60,59,63,53,68,72],
[73,71,0,64,77,67,81,73],
[65,72,67,0,78,63,84,83],
[62,68,54,53,0,58,67,77],
[73,78,64,68,73,0,76,81],
[54,63,50,47,64,55,0,65],
[64,59,58,48,54,50,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,67,64,75,67,68],
[63,0,60,58,63,70,67,64],
[56,71,0,63,66,73,65,69],
[64,73,68,0,65,75,76,70],
[67,68,65,66,0,71,72,60],
[56,61,58,56,60,0,61,57],
[64,64,66,55,59,70,0,59],
[63,67,62,61,71,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,63,74,71,59,64],
[70,0,73,67,66,80,72,63],
[61,58,0,56,60,68,64,59],
[68,64,75,0,70,75,71,67],
[57,65,71,61,0,72,58,70],
[60,51,63,56,59,0,58,54],
[72,59,67,60,73,73,0,66],
[67,68,72,64,61,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,73,66,66,59,63],
[62,0,71,57,58,67,68,55],
[63,60,0,62,56,73,68,46],
[58,74,69,0,48,67,47,40],
[65,73,75,83,0,88,80,74],
[65,64,58,64,43,0,52,45],
[72,63,63,84,51,79,0,59],
[68,76,85,91,57,86,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,65,77,75,76,62],
[67,0,68,64,68,75,71,58],
[60,63,0,73,68,69,73,56],
[66,67,58,0,75,84,81,66],
[54,63,63,56,0,68,76,53],
[56,56,62,47,63,0,75,52],
[55,60,58,50,55,56,0,57],
[69,73,75,65,78,79,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,41,96,21,9,21,27],
[69,0,76,113,69,69,81,34],
[90,55,0,131,90,87,99,52],
[35,18,0,0,35,9,21,9],
[110,62,41,96,0,41,53,84],
[122,62,44,122,90,0,30,55],
[110,50,32,110,78,101,0,75],
[104,97,79,122,47,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,45,48,70,63,60,67],
[60,0,57,66,60,54,54,62],
[86,74,0,67,82,63,55,73],
[83,65,64,0,86,74,64,65],
[61,71,49,45,0,55,51,60],
[68,77,68,57,76,0,61,61],
[71,77,76,67,80,70,0,65],
[64,69,58,66,71,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,48,27,72,83,58,72],
[118,0,74,29,72,110,50,127],
[83,57,0,34,54,89,81,88],
[104,102,97,0,46,99,81,101],
[59,59,77,85,0,86,84,64],
[48,21,42,32,45,0,46,49],
[73,81,50,50,47,85,0,102],
[59,4,43,30,67,82,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,102,71,52,77,68,67],
[59,0,103,38,54,59,52,57],
[29,28,0,28,32,39,46,20],
[60,93,103,0,76,65,81,64],
[79,77,99,55,0,72,72,69],
[54,72,92,66,59,0,64,43],
[63,79,85,50,59,67,0,55],
[64,74,111,67,62,88,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,55,50,54,68,95],
[62,0,106,89,71,92,67,110],
[60,25,0,40,57,73,43,94],
[76,42,91,0,84,87,45,104],
[81,60,74,47,0,60,57,84],
[77,39,58,44,71,0,43,81],
[63,64,88,86,74,88,0,92],
[36,21,37,27,47,50,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,63,69,65,63,60],
[70,0,75,73,63,71,70,66],
[70,56,0,60,78,61,66,60],
[68,58,71,0,74,68,71,72],
[62,68,53,57,0,63,63,54],
[66,60,70,63,68,0,62,70],
[68,61,65,60,68,69,0,71],
[71,65,71,59,77,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,57,55,69,62,61,61],
[58,0,60,71,76,61,65,62],
[74,71,0,58,72,68,78,66],
[76,60,73,0,70,63,62,62],
[62,55,59,61,0,66,50,61],
[69,70,63,68,65,0,58,54],
[70,66,53,69,81,73,0,70],
[70,69,65,69,70,77,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,55,77,110,76,77,56],
[89,0,35,35,89,112,57,72],
[76,96,0,93,55,78,58,57],
[54,96,38,0,55,95,40,75],
[21,42,76,76,0,76,77,77],
[55,19,53,36,55,0,75,19],
[54,74,73,91,54,56,0,57],
[75,59,74,56,54,112,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,47,51,58,67,65],
[65,0,56,47,62,56,54,63],
[69,75,0,58,71,68,73,76],
[84,84,73,0,63,77,80,80],
[80,69,60,68,0,77,74,80],
[73,75,63,54,54,0,66,73],
[64,77,58,51,57,65,0,64],
[66,68,55,51,51,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,59,67,74,63,80,80],
[54,0,74,73,71,69,60,62],
[72,57,0,58,74,64,67,62],
[64,58,73,0,63,69,73,79],
[57,60,57,68,0,63,59,62],
[68,62,67,62,68,0,74,53],
[51,71,64,58,72,57,0,71],
[51,69,69,52,69,78,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,70,82,56,58,78,88],
[56,0,48,75,61,51,76,57],
[61,83,0,73,74,66,66,82],
[49,56,58,0,56,52,79,92],
[75,70,57,75,0,59,59,81],
[73,80,65,79,72,0,85,96],
[53,55,65,52,72,46,0,76],
[43,74,49,39,50,35,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,52,66,70,76,62],
[72,0,72,68,63,75,72,64],
[70,59,0,66,69,72,80,59],
[79,63,65,0,86,70,85,53],
[65,68,62,45,0,60,71,62],
[61,56,59,61,71,0,63,54],
[55,59,51,46,60,68,0,69],
[69,67,72,78,69,77,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,46,74,65,59,56,65],
[75,0,63,67,64,76,70,95],
[85,68,0,81,73,60,66,92],
[57,64,50,0,53,56,50,86],
[66,67,58,78,0,71,68,89],
[72,55,71,75,60,0,68,82],
[75,61,65,81,63,63,0,90],
[66,36,39,45,42,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,55,65,60,56,64,67],
[64,0,76,65,70,75,65,74],
[76,55,0,62,67,56,79,75],
[66,66,69,0,70,56,85,77],
[71,61,64,61,0,71,73,74],
[75,56,75,75,60,0,82,82],
[67,66,52,46,58,49,0,58],
[64,57,56,54,57,49,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,71,63,54,65,43],
[68,0,68,68,62,68,60,47],
[78,63,0,66,82,67,61,55],
[60,63,65,0,56,48,66,66],
[68,69,49,75,0,51,64,63],
[77,63,64,83,80,0,61,55],
[66,71,70,65,67,70,0,59],
[88,84,76,65,68,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,71,63,62,66,65,70],
[71,0,69,71,65,63,65,63],
[60,62,0,63,71,72,66,70],
[68,60,68,0,63,67,65,67],
[69,66,60,68,0,66,68,65],
[65,68,59,64,65,0,65,62],
[66,66,65,66,63,66,0,76],
[61,68,61,64,66,69,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,52,55,47,33,40,40],
[72,0,55,53,52,67,57,66],
[79,76,0,69,60,64,59,71],
[76,78,62,0,54,79,64,42],
[84,79,71,77,0,76,76,63],
[98,64,67,52,55,0,57,67],
[91,74,72,67,55,74,0,43],
[91,65,60,89,68,64,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,60,75,67,59,58],
[67,0,68,56,70,50,61,65],
[62,63,0,76,72,77,74,84],
[71,75,55,0,89,52,80,78],
[56,61,59,42,0,51,68,74],
[64,81,54,79,80,0,87,90],
[72,70,57,51,63,44,0,72],
[73,66,47,53,57,41,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,49,49,66,75,55,88],
[74,0,47,71,92,85,70,105],
[82,84,0,57,82,94,70,100],
[82,60,74,0,85,78,71,109],
[65,39,49,46,0,53,39,68],
[56,46,37,53,78,0,62,73],
[76,61,61,60,92,69,0,81],
[43,26,31,22,63,58,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,62,67,57,70,65],
[64,0,57,48,52,54,56,56],
[68,74,0,71,66,67,69,63],
[69,83,60,0,66,63,69,64],
[64,79,65,65,0,65,69,68],
[74,77,64,68,66,0,68,66],
[61,75,62,62,62,63,0,68],
[66,75,68,67,63,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,82,31,46,43,65,39],
[84,0,36,35,62,47,62,39],
[49,95,0,49,49,60,54,62],
[100,96,82,0,100,69,65,51],
[85,69,82,31,0,65,30,39],
[88,84,71,62,66,0,54,74],
[66,69,77,66,101,77,0,48],
[92,92,69,80,92,57,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,62,64,63,66,67],
[56,0,55,56,53,50,58,53],
[64,76,0,63,76,63,65,61],
[69,75,68,0,73,68,73,61],
[67,78,55,58,0,61,68,57],
[68,81,68,63,70,0,64,62],
[65,73,66,58,63,67,0,63],
[64,78,70,70,74,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,56,57,61,56,57],
[70,0,67,60,59,75,56,61],
[76,64,0,64,66,76,71,71],
[75,71,67,0,80,95,62,65],
[74,72,65,51,0,81,67,62],
[70,56,55,36,50,0,57,47],
[75,75,60,69,64,74,0,66],
[74,70,60,66,69,84,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,63,69,52,85,58],
[56,0,70,50,74,66,77,70],
[54,61,0,49,73,65,75,70],
[68,81,82,0,70,56,78,73],
[62,57,58,61,0,53,80,64],
[79,65,66,75,78,0,85,73],
[46,54,56,53,51,46,0,55],
[73,61,61,58,67,58,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,131,96,60,130,96,95,96],
[0,0,1,1,35,1,36,0],
[35,130,0,95,130,131,61,104],
[71,130,36,0,130,96,35,69],
[1,96,1,1,0,96,36,70],
[35,130,0,35,35,0,35,33],
[36,95,70,96,95,96,0,69],
[35,131,27,62,61,98,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,66,66,64,57,68],
[57,0,67,58,69,63,59,64],
[60,64,0,57,63,60,67,62],
[65,73,74,0,61,66,65,58],
[65,62,68,70,0,63,64,61],
[67,68,71,65,68,0,61,58],
[74,72,64,66,67,70,0,60],
[63,67,69,73,70,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,71,68,78,61,68],
[58,0,75,60,65,65,59,52],
[79,56,0,76,64,62,67,65],
[60,71,55,0,75,72,59,54],
[63,66,67,56,0,63,59,52],
[53,66,69,59,68,0,46,57],
[70,72,64,72,72,85,0,59],
[63,79,66,77,79,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,64,61,51,65,58],
[69,0,70,65,70,65,72,72],
[73,61,0,70,74,65,69,67],
[67,66,61,0,64,59,61,66],
[70,61,57,67,0,67,62,68],
[80,66,66,72,64,0,68,72],
[66,59,62,70,69,63,0,71],
[73,59,64,65,63,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,41,54,50,58,49,51],
[79,0,65,67,61,65,67,56],
[90,66,0,52,72,75,75,49],
[77,64,79,0,67,73,81,59],
[81,70,59,64,0,67,60,66],
[73,66,56,58,64,0,72,54],
[82,64,56,50,71,59,0,59],
[80,75,82,72,65,77,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,57,64,64,81,74],
[63,0,64,45,41,61,65,58],
[65,67,0,69,60,73,86,81],
[74,86,62,0,66,82,83,78],
[67,90,71,65,0,65,77,89],
[67,70,58,49,66,0,71,62],
[50,66,45,48,54,60,0,55],
[57,73,50,53,42,69,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,55,49,42,42,41,33],
[81,0,74,69,90,74,83,60],
[76,57,0,42,69,75,59,54],
[82,62,89,0,68,71,84,44],
[89,41,62,63,0,47,93,30],
[89,57,56,60,84,0,73,82],
[90,48,72,47,38,58,0,38],
[98,71,77,87,101,49,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,66,76,73,81,72],
[73,0,69,73,77,67,88,63],
[64,62,0,77,81,70,74,57],
[65,58,54,0,62,57,62,55],
[55,54,50,69,0,65,78,65],
[58,64,61,74,66,0,74,68],
[50,43,57,69,53,57,0,45],
[59,68,74,76,66,63,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,71,63,77,68,63,73],
[54,0,62,60,64,64,65,66],
[60,69,0,61,57,67,53,72],
[68,71,70,0,60,65,60,67],
[54,67,74,71,0,73,66,63],
[63,67,64,66,58,0,65,65],
[68,66,78,71,65,66,0,65],
[58,65,59,64,68,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,83,63,78,84,77,74],
[46,0,55,55,78,82,44,79],
[48,76,0,66,86,78,62,56],
[68,76,65,0,97,71,52,87],
[53,53,45,34,0,63,37,60],
[47,49,53,60,68,0,58,62],
[54,87,69,79,94,73,0,81],
[57,52,75,44,71,69,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,82,58,73,70,83,85],
[58,0,61,67,62,71,75,69],
[49,70,0,47,67,75,69,71],
[73,64,84,0,80,81,78,73],
[58,69,64,51,0,56,77,68],
[61,60,56,50,75,0,72,71],
[48,56,62,53,54,59,0,67],
[46,62,60,58,63,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,66,68,69,49,65],
[71,0,66,69,69,78,58,71],
[62,65,0,68,72,78,59,72],
[65,62,63,0,68,82,74,63],
[63,62,59,63,0,73,57,65],
[62,53,53,49,58,0,42,63],
[82,73,72,57,74,89,0,76],
[66,60,59,68,66,68,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,63,91,66,91,76,69],
[43,0,53,64,49,59,58,56],
[68,78,0,78,63,71,76,52],
[40,67,53,0,52,61,62,34],
[65,82,68,79,0,89,95,64],
[40,72,60,70,42,0,79,67],
[55,73,55,69,36,52,0,44],
[62,75,79,97,67,64,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,71,73,83,71,71],
[64,0,67,93,85,92,75,73],
[77,64,0,79,47,92,69,67],
[60,38,52,0,46,65,73,52],
[58,46,84,85,0,87,85,78],
[48,39,39,66,44,0,70,63],
[60,56,62,58,46,61,0,63],
[60,58,64,79,53,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,90,64,66,74,55],
[59,0,52,69,55,57,55,55],
[72,79,0,91,66,73,72,58],
[41,62,40,0,41,48,61,46],
[67,76,65,90,0,72,73,70],
[65,74,58,83,59,0,73,44],
[57,76,59,70,58,58,0,56],
[76,76,73,85,61,87,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,68,62,69,69,69],
[62,0,62,76,64,72,80,64],
[70,69,0,75,67,64,66,75],
[63,55,56,0,53,57,69,63],
[69,67,64,78,0,73,73,71],
[62,59,67,74,58,0,74,79],
[62,51,65,62,58,57,0,71],
[62,67,56,68,60,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,45,45,68,62,81,77],
[69,0,45,95,45,85,81,54],
[86,86,0,77,23,81,108,32],
[86,36,54,0,23,48,81,32],
[63,86,108,108,0,81,108,82],
[69,46,50,83,50,0,86,59],
[50,50,23,50,23,45,0,46],
[54,77,99,99,49,72,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,78,74,75,45,52],
[55,0,49,30,47,72,44,46],
[62,82,0,84,105,81,56,56],
[53,101,47,0,73,73,69,73],
[57,84,26,58,0,61,49,57],
[56,59,50,58,70,0,44,76],
[86,87,75,62,82,87,0,59],
[79,85,75,58,74,55,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,63,65,66,69,65],
[77,0,69,64,62,69,73,74],
[71,62,0,69,68,71,70,76],
[68,67,62,0,73,63,73,68],
[66,69,63,58,0,65,71,63],
[65,62,60,68,66,0,74,70],
[62,58,61,58,60,57,0,61],
[66,57,55,63,68,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,71,62,66,58,68,60],
[73,0,66,71,72,61,64,72],
[60,65,0,69,66,69,65,70],
[69,60,62,0,58,65,66,59],
[65,59,65,73,0,63,59,65],
[73,70,62,66,68,0,63,75],
[63,67,66,65,72,68,0,76],
[71,59,61,72,66,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,78,72,83,71,59,87],
[45,0,52,62,72,62,54,62],
[53,79,0,62,73,66,64,82],
[59,69,69,0,84,76,71,86],
[48,59,58,47,0,65,48,62],
[60,69,65,55,66,0,47,62],
[72,77,67,60,83,84,0,66],
[44,69,49,45,69,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,71,75,67,74,76],
[53,0,43,54,64,63,56,53],
[66,88,0,60,78,72,72,74],
[60,77,71,0,72,73,82,60],
[56,67,53,59,0,59,64,66],
[64,68,59,58,72,0,66,67],
[57,75,59,49,67,65,0,54],
[55,78,57,71,65,64,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,51,70,63,69,54,72],
[66,0,69,68,64,65,49,69],
[80,62,0,70,70,66,46,73],
[61,63,61,0,59,60,62,59],
[68,67,61,72,0,69,77,69],
[62,66,65,71,62,0,55,62],
[77,82,85,69,54,76,0,73],
[59,62,58,72,62,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,90,75,83,61,71],
[56,0,71,85,63,63,52,65],
[52,60,0,83,54,64,57,48],
[41,46,48,0,38,48,56,48],
[56,68,77,93,0,70,71,88],
[48,68,67,83,61,0,68,62],
[70,79,74,75,60,63,0,67],
[60,66,83,83,43,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,77,74,60,74,61],
[65,0,61,69,66,64,61,62],
[59,70,0,63,65,61,58,74],
[54,62,68,0,64,62,67,62],
[57,65,66,67,0,67,67,63],
[71,67,70,69,64,0,70,68],
[57,70,73,64,64,61,0,73],
[70,69,57,69,68,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,58,54,62,44,64],
[72,0,52,56,59,54,49,58],
[80,79,0,66,65,73,64,60],
[73,75,65,0,74,81,65,69],
[77,72,66,57,0,74,60,57],
[69,77,58,50,57,0,64,63],
[87,82,67,66,71,67,0,62],
[67,73,71,62,74,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,67,65,65,65,79],
[62,0,75,55,51,57,58,77],
[59,56,0,51,52,54,53,62],
[64,76,80,0,69,75,74,84],
[66,80,79,62,0,67,63,85],
[66,74,77,56,64,0,66,76],
[66,73,78,57,68,65,0,80],
[52,54,69,47,46,55,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,66,62,59,66,63],
[65,0,67,68,63,64,60,64],
[70,64,0,72,66,66,69,64],
[65,63,59,0,61,65,57,70],
[69,68,65,70,0,69,63,62],
[72,67,65,66,62,0,57,64],
[65,71,62,74,68,74,0,69],
[68,67,67,61,69,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,63,63,72,69,72,69],
[53,0,55,65,66,62,71,78],
[68,76,0,73,58,62,75,75],
[68,66,58,0,62,66,64,72],
[59,65,73,69,0,62,71,68],
[62,69,69,65,69,0,73,70],
[59,60,56,67,60,58,0,58],
[62,53,56,59,63,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,70,52,72,64,59],
[59,0,67,75,55,71,57,68],
[64,64,0,73,61,67,51,63],
[61,56,58,0,49,66,62,52],
[79,76,70,82,0,80,66,60],
[59,60,64,65,51,0,75,53],
[67,74,80,69,65,56,0,65],
[72,63,68,79,71,78,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,59,81,78,76,70],
[58,0,57,66,72,81,57,62],
[64,74,0,51,63,49,39,42],
[72,65,80,0,82,84,47,58],
[50,59,68,49,0,73,32,62],
[53,50,82,47,58,0,44,58],
[55,74,92,84,99,87,0,77],
[61,69,89,73,69,73,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,77,87,66,61,44],
[59,0,74,77,88,67,64,68],
[68,57,0,66,73,70,56,75],
[54,54,65,0,79,68,69,60],
[44,43,58,52,0,49,49,41],
[65,64,61,63,82,0,61,62],
[70,67,75,62,82,70,0,67],
[87,63,56,71,90,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,69,64,60,73,70],
[66,0,68,63,64,69,75,65],
[70,63,0,64,57,60,68,63],
[62,68,67,0,68,70,74,61],
[67,67,74,63,0,72,88,72],
[71,62,71,61,59,0,79,60],
[58,56,63,57,43,52,0,55],
[61,66,68,70,59,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,56,58,56,68,75],
[66,0,74,80,72,65,72,77],
[65,57,0,69,58,69,65,67],
[75,51,62,0,59,59,60,63],
[73,59,73,72,0,53,67,61],
[75,66,62,72,78,0,79,62],
[63,59,66,71,64,52,0,72],
[56,54,64,68,70,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,59,63,60,64,68,80],
[52,0,46,49,63,43,52,51],
[72,85,0,67,63,65,76,95],
[68,82,64,0,89,62,70,76],
[71,68,68,42,0,68,55,64],
[67,88,66,69,63,0,73,82],
[63,79,55,61,76,58,0,76],
[51,80,36,55,67,49,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,113,80,87,91,55,55],
[38,0,91,73,79,84,51,51],
[18,40,0,27,29,80,31,48],
[51,58,104,0,78,80,102,69],
[44,52,102,53,0,62,48,66],
[40,47,51,51,69,0,40,40],
[76,80,100,29,83,91,0,72],
[76,80,83,62,65,91,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,50,27,34,59,37,35],
[96,0,85,56,77,65,82,74],
[81,46,0,32,51,45,61,32],
[104,75,99,0,49,71,83,75],
[97,54,80,82,0,92,91,56],
[72,66,86,60,39,0,55,53],
[94,49,70,48,40,76,0,45],
[96,57,99,56,75,78,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,67,69,54,60,68,68],
[46,0,54,58,53,65,57,56],
[64,77,0,77,71,70,73,72],
[62,73,54,0,53,56,61,64],
[77,78,60,78,0,76,75,71],
[71,66,61,75,55,0,65,68],
[63,74,58,70,56,66,0,71],
[63,75,59,67,60,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,65,54,66,68,64],
[69,0,65,68,64,73,65,66],
[67,66,0,65,73,78,59,71],
[66,63,66,0,76,65,72,74],
[77,67,58,55,0,65,59,62],
[65,58,53,66,66,0,60,61],
[63,66,72,59,72,71,0,66],
[67,65,60,57,69,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,67,65,64,71,61],
[64,0,66,67,65,60,69,61],
[61,65,0,57,68,57,65,64],
[64,64,74,0,71,64,76,65],
[66,66,63,60,0,63,64,64],
[67,71,74,67,68,0,71,62],
[60,62,66,55,67,60,0,66],
[70,70,67,66,67,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,73,71,62,64,62,66],
[79,0,62,86,66,69,66,69],
[58,69,0,63,59,63,57,58],
[60,45,68,0,58,57,39,52],
[69,65,72,73,0,66,54,63],
[67,62,68,74,65,0,61,59],
[69,65,74,92,77,70,0,69],
[65,62,73,79,68,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,54,77,75,63,67],
[63,0,69,68,70,74,77,79],
[61,62,0,64,68,68,68,77],
[77,63,67,0,69,78,64,82],
[54,61,63,62,0,67,67,74],
[56,57,63,53,64,0,61,63],
[68,54,63,67,64,70,0,63],
[64,52,54,49,57,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,36,58,42,68,53,51],
[66,0,69,73,53,98,69,63],
[95,62,0,86,61,104,65,70],
[73,58,45,0,37,86,54,65],
[89,78,70,94,0,104,58,70],
[63,33,27,45,27,0,20,30],
[78,62,66,77,73,111,0,67],
[80,68,61,66,61,101,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,76,86,53,68,52],
[76,0,87,86,92,70,70,53],
[69,44,0,76,75,51,85,68],
[55,45,55,0,103,67,76,62],
[45,39,56,28,0,37,67,39],
[78,61,80,64,94,0,69,64],
[63,61,46,55,64,62,0,60],
[79,78,63,69,92,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,52,62,52,63,68,57],
[82,0,64,73,68,77,74,67],
[79,67,0,89,78,80,81,64],
[69,58,42,0,54,56,65,58],
[79,63,53,77,0,76,71,71],
[68,54,51,75,55,0,69,61],
[63,57,50,66,60,62,0,48],
[74,64,67,73,60,70,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,78,82,61,77,65,53],
[49,0,51,40,69,71,39,23],
[53,80,0,49,76,62,79,59],
[49,91,82,0,70,59,72,32],
[70,62,55,61,0,44,50,39],
[54,60,69,72,87,0,64,69],
[66,92,52,59,81,67,0,71],
[78,108,72,99,92,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,67,62,76,73,87],
[70,0,75,60,71,82,82,78],
[68,56,0,58,63,67,77,74],
[64,71,73,0,62,57,70,74],
[69,60,68,69,0,74,76,89],
[55,49,64,74,57,0,64,74],
[58,49,54,61,55,67,0,75],
[44,53,57,57,42,57,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,51,54,75,77,65],
[61,0,66,67,49,65,65,71],
[58,65,0,45,54,63,61,68],
[80,64,86,0,66,71,73,81],
[77,82,77,65,0,81,74,85],
[56,66,68,60,50,0,75,53],
[54,66,70,58,57,56,0,63],
[66,60,63,50,46,78,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,52,60,75,58,70,74],
[80,0,63,69,87,67,74,74],
[79,68,0,64,84,73,74,72],
[71,62,67,0,85,65,81,77],
[56,44,47,46,0,53,57,46],
[73,64,58,66,78,0,70,77],
[61,57,57,50,74,61,0,56],
[57,57,59,54,85,54,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,67,65,79,64,67],
[61,0,66,65,64,64,67,73],
[63,65,0,71,67,78,65,74],
[64,66,60,0,53,63,55,62],
[66,67,64,78,0,76,62,81],
[52,67,53,68,55,0,66,62],
[67,64,66,76,69,65,0,75],
[64,58,57,69,50,69,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,33,58,44,66,49,45],
[64,0,50,66,42,79,66,40],
[98,81,0,79,70,97,97,60],
[73,65,52,0,41,62,76,33],
[87,89,61,90,0,105,84,75],
[65,52,34,69,26,0,67,32],
[82,65,34,55,47,64,0,47],
[86,91,71,98,56,99,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,53,54,61,54,54],
[69,0,64,59,61,72,58,80],
[80,67,0,46,54,68,56,81],
[78,72,85,0,59,66,74,86],
[77,70,77,72,0,73,63,81],
[70,59,63,65,58,0,59,75],
[77,73,75,57,68,72,0,71],
[77,51,50,45,50,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,70,68,58,64,75],
[65,0,70,64,65,67,71,65],
[74,61,0,65,68,62,63,71],
[61,67,66,0,66,66,72,63],
[63,66,63,65,0,64,66,60],
[73,64,69,65,67,0,74,65],
[67,60,68,59,65,57,0,68],
[56,66,60,68,71,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,67,71,54,71,68],
[65,0,72,71,81,66,68,67],
[61,59,0,66,71,66,64,63],
[64,60,65,0,62,63,65,62],
[60,50,60,69,0,62,56,56],
[77,65,65,68,69,0,68,65],
[60,63,67,66,75,63,0,66],
[63,64,68,69,75,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,61,58,63,69,74],
[67,0,63,57,68,61,58,64],
[69,68,0,67,56,67,63,70],
[70,74,64,0,68,67,67,76],
[73,63,75,63,0,65,69,77],
[68,70,64,64,66,0,68,74],
[62,73,68,64,62,63,0,78],
[57,67,61,55,54,57,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,61,66,64,66,52],
[66,0,58,68,76,64,60,68],
[72,73,0,65,67,58,48,58],
[70,63,66,0,74,69,61,72],
[65,55,64,57,0,58,50,67],
[67,67,73,62,73,0,71,71],
[65,71,83,70,81,60,0,78],
[79,63,73,59,64,60,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,77,57,72,70,73],
[66,0,61,64,68,66,69,67],
[60,70,0,70,70,68,65,54],
[54,67,61,0,62,71,69,73],
[74,63,61,69,0,59,69,60],
[59,65,63,60,72,0,63,72],
[61,62,66,62,62,68,0,68],
[58,64,77,58,71,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,70,76,62,71,62,63],
[56,0,61,67,59,69,65,65],
[61,70,0,71,61,70,64,69],
[55,64,60,0,57,65,62,61],
[69,72,70,74,0,75,67,63],
[60,62,61,66,56,0,60,58],
[69,66,67,69,64,71,0,70],
[68,66,62,70,68,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,87,76,74,76,80,76],
[69,0,92,78,59,80,88,83],
[44,39,0,49,42,52,59,54],
[55,53,82,0,56,53,77,59],
[57,72,89,75,0,83,87,80],
[55,51,79,78,48,0,65,81],
[51,43,72,54,44,66,0,55],
[55,48,77,72,51,50,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,64,76,67,77,58],
[59,0,64,63,76,58,65,60],
[67,67,0,53,75,54,82,60],
[67,68,78,0,70,54,67,65],
[55,55,56,61,0,54,67,58],
[64,73,77,77,77,0,80,60],
[54,66,49,64,64,51,0,66],
[73,71,71,66,73,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,93,79,65,76,74,78],
[63,0,82,92,74,80,69,74],
[38,49,0,79,49,54,50,68],
[52,39,52,0,72,62,58,50],
[66,57,82,59,0,76,53,71],
[55,51,77,69,55,0,68,52],
[57,62,81,73,78,63,0,56],
[53,57,63,81,60,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,78,52,77,79,67],
[61,0,53,67,61,55,63,72],
[61,78,0,66,66,61,82,79],
[53,64,65,0,57,60,63,60],
[79,70,65,74,0,54,77,81],
[54,76,70,71,77,0,74,68],
[52,68,49,68,54,57,0,65],
[64,59,52,71,50,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,57,13,61,70,70],
[61,0,74,61,74,61,118,131],
[61,57,0,61,13,61,57,70],
[74,70,70,0,13,74,70,70],
[118,57,118,118,0,118,118,118],
[70,70,70,57,13,0,70,70],
[61,13,74,61,13,61,0,13],
[61,0,61,61,13,61,118,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,60,55,58,45,57],
[72,0,72,75,68,73,69,51],
[74,59,0,67,57,55,62,58],
[71,56,64,0,73,67,54,66],
[76,63,74,58,0,69,57,69],
[73,58,76,64,62,0,51,56],
[86,62,69,77,74,80,0,61],
[74,80,73,65,62,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,72,61,72,70,69],
[63,0,59,80,53,76,62,71],
[69,72,0,78,50,80,82,63],
[59,51,53,0,68,70,70,74],
[70,78,81,63,0,65,69,69],
[59,55,51,61,66,0,55,67],
[61,69,49,61,62,76,0,59],
[62,60,68,57,62,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,70,46,52,70,50],
[68,0,57,67,71,66,74,56],
[70,74,0,76,52,59,70,66],
[61,64,55,0,52,60,67,52],
[85,60,79,79,0,65,70,59],
[79,65,72,71,66,0,70,67],
[61,57,61,64,61,61,0,51],
[81,75,65,79,72,64,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,50,59,46,51,65,48],
[66,0,71,67,68,59,72,63],
[81,60,0,67,57,62,70,53],
[72,64,64,0,74,68,81,59],
[85,63,74,57,0,61,76,54],
[80,72,69,63,70,0,79,75],
[66,59,61,50,55,52,0,50],
[83,68,78,72,77,56,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,68,61,70,69,63],
[64,0,62,58,61,65,57,57],
[69,69,0,76,58,59,69,65],
[63,73,55,0,61,63,70,62],
[70,70,73,70,0,64,72,66],
[61,66,72,68,67,0,73,65],
[62,74,62,61,59,58,0,61],
[68,74,66,69,65,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,88,88,69,82,92],
[90,0,82,83,61,74,104,71],
[100,49,0,90,88,70,125,92],
[43,48,41,0,31,70,104,62],
[43,70,43,100,0,70,87,62],
[62,57,61,61,61,0,82,92],
[49,27,6,27,44,49,0,48],
[39,60,39,69,69,39,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,56,54,55,64,62],
[77,0,66,66,68,73,71,64],
[71,65,0,69,66,62,75,74],
[75,65,62,0,71,70,69,66],
[77,63,65,60,0,60,65,65],
[76,58,69,61,71,0,70,73],
[67,60,56,62,66,61,0,65],
[69,67,57,65,66,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,81,67,63,67,74],
[64,0,58,78,60,51,83,61],
[57,73,0,72,59,61,66,59],
[50,53,59,0,58,56,71,74],
[64,71,72,73,0,66,72,74],
[68,80,70,75,65,0,78,71],
[64,48,65,60,59,53,0,62],
[57,70,72,57,57,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,57,69,65,76,66,67],
[57,0,53,59,59,61,60,58],
[74,78,0,70,63,74,74,66],
[62,72,61,0,66,67,62,52],
[66,72,68,65,0,65,66,64],
[55,70,57,64,66,0,60,66],
[65,71,57,69,65,71,0,64],
[64,73,65,79,67,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,76,59,60,72,64,62],
[70,0,58,69,65,67,53,62],
[55,73,0,69,64,66,47,59],
[72,62,62,0,62,70,55,51],
[71,66,67,69,0,76,67,64],
[59,64,65,61,55,0,49,62],
[67,78,84,76,64,82,0,73],
[69,69,72,80,67,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,68,62,71,60,68],
[74,0,69,62,67,77,72,72],
[71,62,0,66,72,70,70,74],
[63,69,65,0,70,74,71,75],
[69,64,59,61,0,69,60,68],
[60,54,61,57,62,0,59,54],
[71,59,61,60,71,72,0,74],
[63,59,57,56,63,77,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,59,64,74,72,69],
[70,0,73,60,64,62,70,69],
[66,58,0,64,68,62,73,70],
[72,71,67,0,68,62,69,62],
[67,67,63,63,0,69,72,65],
[57,69,69,69,62,0,70,67],
[59,61,58,62,59,61,0,60],
[62,62,61,69,66,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,89,57,72,72,84,69],
[49,0,59,43,50,57,58,61],
[42,72,0,44,50,59,73,66],
[74,88,87,0,76,82,92,63],
[59,81,81,55,0,71,80,73],
[59,74,72,49,60,0,67,65],
[47,73,58,39,51,64,0,44],
[62,70,65,68,58,66,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,77,59,50,74,78,74],
[53,0,97,89,79,65,109,87],
[54,34,0,50,55,42,45,51],
[72,42,81,0,87,53,101,98],
[81,52,76,44,0,39,75,83],
[57,66,89,78,92,0,89,74],
[53,22,86,30,56,42,0,51],
[57,44,80,33,48,57,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,57,62,63,48,59],
[58,0,53,61,61,55,60,67],
[79,78,0,78,77,74,65,83],
[74,70,53,0,64,60,51,60],
[69,70,54,67,0,54,58,65],
[68,76,57,71,77,0,69,76],
[83,71,66,80,73,62,0,79],
[72,64,48,71,66,55,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,58,64,63,32,28],
[71,0,69,65,51,71,46,23],
[63,62,0,81,48,95,37,34],
[73,66,50,0,47,76,75,23],
[67,80,83,84,0,83,62,83],
[68,60,36,55,48,0,34,16],
[99,85,94,56,69,97,0,54],
[103,108,97,108,48,115,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,62,65,60,59,59],
[60,0,63,70,72,66,71,61],
[67,68,0,60,69,61,64,65],
[69,61,71,0,72,62,68,69],
[66,59,62,59,0,62,65,52],
[71,65,70,69,69,0,69,54],
[72,60,67,63,66,62,0,63],
[72,70,66,62,79,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,61,83,66,67,73],
[63,0,64,59,77,68,58,69],
[67,67,0,61,78,64,62,66],
[70,72,70,0,77,70,65,76],
[48,54,53,54,0,59,49,57],
[65,63,67,61,72,0,62,74],
[64,73,69,66,82,69,0,77],
[58,62,65,55,74,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,69,71,57,61,62,71],
[80,0,82,86,57,63,72,85],
[62,49,0,68,53,59,69,82],
[60,45,63,0,55,65,47,75],
[74,74,78,76,0,73,65,83],
[70,68,72,66,58,0,67,80],
[69,59,62,84,66,64,0,81],
[60,46,49,56,48,51,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,64,65,66,71,57],
[69,0,67,66,69,64,70,65],
[63,64,0,64,65,60,73,65],
[67,65,67,0,64,64,68,58],
[66,62,66,67,0,64,64,70],
[65,67,71,67,67,0,69,66],
[60,61,58,63,67,62,0,59],
[74,66,66,73,61,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,71,79,69,61,66],
[72,0,83,59,79,75,77,73],
[58,48,0,56,60,53,55,65],
[60,72,75,0,73,58,77,78],
[52,52,71,58,0,61,65,74],
[62,56,78,73,70,0,73,72],
[70,54,76,54,66,58,0,67],
[65,58,66,53,57,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,61,63,63,64,62],
[59,0,70,61,72,68,54,57],
[68,61,0,61,72,64,53,56],
[70,70,70,0,69,66,61,61],
[68,59,59,62,0,63,52,53],
[68,63,67,65,68,0,71,68],
[67,77,78,70,79,60,0,67],
[69,74,75,70,78,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,72,66,66,65,84,79],
[45,0,73,55,51,59,67,70],
[59,58,0,72,49,49,62,80],
[65,76,59,0,58,55,59,75],
[65,80,82,73,0,69,85,90],
[66,72,82,76,62,0,80,83],
[47,64,69,72,46,51,0,67],
[52,61,51,56,41,48,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,55,64,70,69,55],
[63,0,69,57,65,74,59,62],
[65,62,0,56,58,69,62,66],
[76,74,75,0,72,74,64,70],
[67,66,73,59,0,73,79,66],
[61,57,62,57,58,0,56,60],
[62,72,69,67,52,75,0,59],
[76,69,65,61,65,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,68,50,67,64,57],
[66,0,69,66,52,57,57,67],
[72,62,0,65,66,68,65,73],
[63,65,66,0,59,70,62,78],
[81,79,65,72,0,82,76,79],
[64,74,63,61,49,0,69,67],
[67,74,66,69,55,62,0,75],
[74,64,58,53,52,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,68,62,69,56,68],
[63,0,69,62,72,75,71,70],
[56,62,0,54,56,70,66,57],
[63,69,77,0,66,59,69,72],
[69,59,75,65,0,66,70,61],
[62,56,61,72,65,0,61,60],
[75,60,65,62,61,70,0,72],
[63,61,74,59,70,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,77,72,64,63,66,70],
[62,0,66,59,66,65,72,65],
[54,65,0,59,62,60,57,57],
[59,72,72,0,71,67,67,65],
[67,65,69,60,0,69,66,62],
[68,66,71,64,62,0,70,68],
[65,59,74,64,65,61,0,78],
[61,66,74,66,69,63,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,60,96,69,85,78],
[66,0,65,67,77,66,57,66],
[61,66,0,61,70,60,59,74],
[71,64,70,0,80,76,80,78],
[35,54,61,51,0,62,47,58],
[62,65,71,55,69,0,58,69],
[46,74,72,51,84,73,0,65],
[53,65,57,53,73,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,80,85,82,59,77],
[71,0,69,60,68,71,74,76],
[68,62,0,54,65,78,82,66],
[51,71,77,0,77,72,71,71],
[46,63,66,54,0,60,62,58],
[49,60,53,59,71,0,69,71],
[72,57,49,60,69,62,0,78],
[54,55,65,60,73,60,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,58,65,63,66,50,67],
[54,0,60,67,61,59,67,69],
[73,71,0,71,66,63,65,70],
[66,64,60,0,74,58,60,66],
[68,70,65,57,0,60,66,60],
[65,72,68,73,71,0,68,69],
[81,64,66,71,65,63,0,60],
[64,62,61,65,71,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,67,69,66,62,60],
[63,0,65,67,63,71,66,75],
[60,66,0,58,51,59,58,50],
[64,64,73,0,65,59,63,68],
[62,68,80,66,0,68,67,70],
[65,60,72,72,63,0,63,63],
[69,65,73,68,64,68,0,63],
[71,56,81,63,61,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,65,51,63,50,69],
[62,0,59,56,55,65,53,76],
[69,72,0,64,67,67,62,78],
[66,75,67,0,59,70,62,76],
[80,76,64,72,0,75,69,77],
[68,66,64,61,56,0,63,76],
[81,78,69,69,62,68,0,75],
[62,55,53,55,54,55,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,83,71,53,61,85,61],
[62,0,46,55,50,51,88,82],
[48,85,0,82,84,75,87,61],
[60,76,49,0,56,68,77,82],
[78,81,47,75,0,52,73,88],
[70,80,56,63,79,0,82,88],
[46,43,44,54,58,49,0,77],
[70,49,70,49,43,43,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,60,54,64,69,67],
[69,0,69,64,64,63,72,59],
[62,62,0,64,57,67,58,64],
[71,67,67,0,62,66,71,57],
[77,67,74,69,0,59,65,72],
[67,68,64,65,72,0,66,57],
[62,59,73,60,66,65,0,61],
[64,72,67,74,59,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,68,75,72,63,62],
[69,0,66,73,74,66,64,61],
[68,65,0,72,68,70,69,61],
[63,58,59,0,74,78,67,63],
[56,57,63,57,0,60,60,52],
[59,65,61,53,71,0,63,63],
[68,67,62,64,71,68,0,66],
[69,70,70,68,79,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,69,70,61,70,62],
[56,0,64,75,66,66,64,63],
[66,67,0,71,67,63,63,61],
[62,56,60,0,59,60,56,58],
[61,65,64,72,0,70,65,68],
[70,65,68,71,61,0,63,55],
[61,67,68,75,66,68,0,64],
[69,68,70,73,63,76,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,56,63,76,74,60],
[63,0,68,70,78,62,77,64],
[67,63,0,63,69,71,75,49],
[75,61,68,0,71,74,76,66],
[68,53,62,60,0,68,68,62],
[55,69,60,57,63,0,72,58],
[57,54,56,55,63,59,0,49],
[71,67,82,65,69,73,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,56,70,69,64,59,62],
[77,0,81,76,84,81,63,74],
[75,50,0,63,66,88,77,60],
[61,55,68,0,67,63,64,61],
[62,47,65,64,0,76,54,63],
[67,50,43,68,55,0,63,51],
[72,68,54,67,77,68,0,58],
[69,57,71,70,68,80,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,66,64,61,71,75],
[64,0,67,63,58,57,71,68],
[59,64,0,61,64,52,64,69],
[65,68,70,0,66,64,69,64],
[67,73,67,65,0,68,63,69],
[70,74,79,67,63,0,77,79],
[60,60,67,62,68,54,0,71],
[56,63,62,67,62,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,38,62,79,65,49,53],
[71,0,60,79,73,90,70,64],
[93,71,0,62,92,86,70,76],
[69,52,69,0,70,61,54,68],
[52,58,39,61,0,56,41,53],
[66,41,45,70,75,0,51,56],
[82,61,61,77,90,80,0,85],
[78,67,55,63,78,75,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,68,70,70,73,63],
[60,0,78,66,62,64,66,58],
[56,53,0,67,67,66,64,67],
[63,65,64,0,72,71,58,61],
[61,69,64,59,0,62,71,74],
[61,67,65,60,69,0,64,63],
[58,65,67,73,60,67,0,70],
[68,73,64,70,57,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,71,60,68,64,59,57],
[83,0,78,69,74,60,80,62],
[60,53,0,58,52,56,68,52],
[71,62,73,0,75,63,73,66],
[63,57,79,56,0,61,77,56],
[67,71,75,68,70,0,81,62],
[72,51,63,58,54,50,0,61],
[74,69,79,65,75,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,57,52,53,71,63],
[71,0,56,70,55,56,63,73],
[74,75,0,53,70,61,76,77],
[74,61,78,0,68,63,71,65],
[79,76,61,63,0,60,64,67],
[78,75,70,68,71,0,71,64],
[60,68,55,60,67,60,0,61],
[68,58,54,66,64,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,75,49,71,36,64,62],
[84,0,62,57,68,46,50,56],
[56,69,0,50,79,52,66,58],
[82,74,81,0,92,59,66,71],
[60,63,52,39,0,57,41,48],
[95,85,79,72,74,0,63,61],
[67,81,65,65,90,68,0,66],
[69,75,73,60,83,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,47,52,61,60,52],
[69,0,73,57,51,58,62,54],
[65,58,0,48,63,58,66,58],
[84,74,83,0,64,79,83,72],
[79,80,68,67,0,64,83,75],
[70,73,73,52,67,0,79,66],
[71,69,65,48,48,52,0,57],
[79,77,73,59,56,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,68,87,62,72,79,70],
[51,0,69,47,68,98,65,72],
[63,62,0,55,81,111,93,64],
[44,84,76,0,70,75,86,89],
[69,63,50,61,0,75,75,49],
[59,33,20,56,56,0,39,32],
[52,66,38,45,56,92,0,36],
[61,59,67,42,82,99,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,49,46,34,63,51,69],
[88,0,78,78,58,76,76,101],
[82,53,0,45,61,82,82,97],
[85,53,86,0,89,75,91,94],
[97,73,70,42,0,66,85,94],
[68,55,49,56,65,0,71,88],
[80,55,49,40,46,60,0,72],
[62,30,34,37,37,43,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,72,69,69,48,72],
[64,0,77,60,63,70,50,79],
[52,54,0,58,61,48,50,62],
[59,71,73,0,74,69,75,65],
[62,68,70,57,0,54,58,58],
[62,61,83,62,77,0,50,66],
[83,81,81,56,73,81,0,77],
[59,52,69,66,73,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,57,63,60,69,66,77],
[57,0,58,70,57,65,56,74],
[74,73,0,65,66,77,63,75],
[68,61,66,0,63,73,66,71],
[71,74,65,68,0,80,68,77],
[62,66,54,58,51,0,66,84],
[65,75,68,65,63,65,0,81],
[54,57,56,60,54,47,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,64,69,65,66,65],
[64,0,70,64,69,65,75,66],
[69,61,0,58,65,66,64,70],
[67,67,73,0,64,65,63,69],
[62,62,66,67,0,62,63,66],
[66,66,65,66,69,0,68,62],
[65,56,67,68,68,63,0,65],
[66,65,61,62,65,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,67,58,72,56,55,58],
[79,0,63,67,79,79,53,82],
[64,68,0,68,78,67,74,79],
[73,64,63,0,87,69,57,74],
[59,52,53,44,0,70,55,61],
[75,52,64,62,61,0,63,68],
[76,78,57,74,76,68,0,73],
[73,49,52,57,70,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,76,69,64,69,73],
[63,0,69,73,67,68,66,67],
[68,62,0,66,67,67,63,59],
[55,58,65,0,58,58,62,58],
[62,64,64,73,0,59,61,63],
[67,63,64,73,72,0,66,65],
[62,65,68,69,70,65,0,59],
[58,64,72,73,68,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,79,84,67,56,63],
[66,0,54,74,79,72,57,61],
[58,77,0,78,77,73,72,65],
[52,57,53,0,87,66,39,48],
[47,52,54,44,0,68,62,45],
[64,59,58,65,63,0,38,56],
[75,74,59,92,69,93,0,75],
[68,70,66,83,86,75,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,65,66,63,67,70],
[71,0,63,81,69,71,66,65],
[65,68,0,79,72,65,76,67],
[66,50,52,0,46,47,52,61],
[65,62,59,85,0,69,70,77],
[68,60,66,84,62,0,62,69],
[64,65,55,79,61,69,0,68],
[61,66,64,70,54,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,64,67,61,61,75],
[74,0,86,71,57,71,74,76],
[65,45,0,61,38,57,61,56],
[67,60,70,0,63,58,62,68],
[64,74,93,68,0,78,80,79],
[70,60,74,73,53,0,63,72],
[70,57,70,69,51,68,0,65],
[56,55,75,63,52,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,50,65,79,53,68,64],
[72,0,62,83,77,59,68,71],
[81,69,0,75,70,65,63,78],
[66,48,56,0,65,57,60,60],
[52,54,61,66,0,62,54,66],
[78,72,66,74,69,0,62,68],
[63,63,68,71,77,69,0,64],
[67,60,53,71,65,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,74,70,69,68,64],
[66,0,78,74,69,61,68,67],
[64,53,0,68,67,60,65,61],
[57,57,63,0,61,56,64,57],
[61,62,64,70,0,64,68,64],
[62,70,71,75,67,0,70,67],
[63,63,66,67,63,61,0,66],
[67,64,70,74,67,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,75,65,65,66,70,66],
[65,0,67,70,68,71,71,68],
[56,64,0,65,55,51,65,57],
[66,61,66,0,68,60,67,65],
[66,63,76,63,0,58,70,66],
[65,60,80,71,73,0,76,69],
[61,60,66,64,61,55,0,61],
[65,63,74,66,65,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,31,121,53,31,131],
[63,0,73,53,121,73,94,94],
[59,58,0,68,121,90,31,131],
[100,78,63,0,121,110,94,121],
[10,10,10,10,0,10,31,51],
[78,58,41,21,121,0,62,121],
[100,37,100,37,100,69,0,100],
[0,37,0,10,80,10,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,113,86,39,65,56,38,39],
[18,0,38,17,17,56,56,39],
[45,93,0,62,83,18,56,22],
[92,114,69,0,69,65,39,43],
[66,114,48,62,0,66,66,70],
[75,75,113,66,65,0,38,39],
[93,75,75,92,65,93,0,48],
[92,92,109,88,61,92,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,68,49,56,50,51],
[74,0,70,73,69,53,57,57],
[64,61,0,75,64,69,72,67],
[63,58,56,0,55,67,54,53],
[82,62,67,76,0,68,64,70],
[75,78,62,64,63,0,66,69],
[81,74,59,77,67,65,0,69],
[80,74,64,78,61,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,68,76,63,61,61],
[66,0,71,68,64,64,52,57],
[54,60,0,60,70,58,50,62],
[63,63,71,0,64,70,61,67],
[55,67,61,67,0,68,61,63],
[68,67,73,61,63,0,68,69],
[70,79,81,70,70,63,0,71],
[70,74,69,64,68,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,68,80,100,73,73],
[66,0,107,54,36,91,65,36],
[66,24,0,60,44,65,57,36],
[63,77,71,0,71,91,93,73],
[51,95,87,60,0,107,79,67],
[31,40,66,40,24,0,37,36],
[58,66,74,38,52,94,0,55],
[58,95,95,58,64,95,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,65,57,63,62,75],
[74,0,64,67,65,71,62,74],
[72,67,0,67,58,68,64,74],
[66,64,64,0,59,63,58,69],
[74,66,73,72,0,61,71,75],
[68,60,63,68,70,0,66,75],
[69,69,67,73,60,65,0,76],
[56,57,57,62,56,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,73,72,61,69,60],
[56,0,67,63,71,60,59,52],
[58,64,0,55,76,59,71,67],
[58,68,76,0,59,63,71,70],
[59,60,55,72,0,57,64,52],
[70,71,72,68,74,0,70,62],
[62,72,60,60,67,61,0,74],
[71,79,64,61,79,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,55,58,55,66,65,56],
[79,0,77,65,60,67,82,63],
[76,54,0,61,65,71,88,63],
[73,66,70,0,60,77,72,65],
[76,71,66,71,0,62,84,73],
[65,64,60,54,69,0,75,60],
[66,49,43,59,47,56,0,46],
[75,68,68,66,58,71,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,35,131,73,70,68,126],
[49,0,46,91,3,5,3,91],
[96,85,0,96,50,47,38,126],
[0,40,35,0,40,5,35,111],
[58,128,81,91,0,63,111,123],
[61,126,84,126,68,0,68,126],
[63,128,93,96,20,63,0,126],
[5,40,5,20,8,5,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,76,68,70,68,81],
[64,0,65,75,63,71,63,72],
[71,66,0,68,68,70,63,78],
[55,56,63,0,63,59,68,72],
[63,68,63,68,0,67,71,87],
[61,60,61,72,64,0,58,72],
[63,68,68,63,60,73,0,76],
[50,59,53,59,44,59,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,52,51,74,49,52],
[68,0,57,66,67,68,56,60],
[61,74,0,55,56,79,53,64],
[79,65,76,0,59,92,61,50],
[80,64,75,72,0,79,67,73],
[57,63,52,39,52,0,37,52],
[82,75,78,70,64,94,0,84],
[79,71,67,81,58,79,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,69,58,66,59,52],
[71,0,68,76,64,70,66,71],
[69,63,0,70,66,73,63,65],
[62,55,61,0,60,64,53,58],
[73,67,65,71,0,66,58,64],
[65,61,58,67,65,0,59,61],
[72,65,68,78,73,72,0,65],
[79,60,66,73,67,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,74,67,68,64,61,62],
[75,0,75,60,67,71,66,63],
[57,56,0,58,55,52,61,57],
[64,71,73,0,55,59,76,66],
[63,64,76,76,0,73,60,73],
[67,60,79,72,58,0,67,54],
[70,65,70,55,71,64,0,66],
[69,68,74,65,58,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,78,72,80,70,69,74],
[69,0,80,69,79,64,68,81],
[53,51,0,53,62,59,67,64],
[59,62,78,0,73,69,62,75],
[51,52,69,58,0,61,64,70],
[61,67,72,62,70,0,72,69],
[62,63,64,69,67,59,0,68],
[57,50,67,56,61,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,55,54,62,59,57,63],
[79,0,47,62,48,60,50,51],
[76,84,0,68,68,67,68,59],
[77,69,63,0,61,60,79,62],
[69,83,63,70,0,74,77,79],
[72,71,64,71,57,0,80,61],
[74,81,63,52,54,51,0,73],
[68,80,72,69,52,70,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,38,91,61,59,78],
[85,0,83,59,87,48,67,54],
[90,48,0,55,78,56,63,71],
[93,72,76,0,74,40,68,62],
[40,44,53,57,0,56,56,51],
[70,83,75,91,75,0,54,53],
[72,64,68,63,75,77,0,97],
[53,77,60,69,80,78,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,72,61,70,65,65],
[68,0,79,69,72,53,63,60],
[53,52,0,57,59,54,54,68],
[59,62,74,0,52,54,69,68],
[70,59,72,79,0,66,69,65],
[61,78,77,77,65,0,69,68],
[66,68,77,62,62,62,0,60],
[66,71,63,63,66,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,77,68,58,63,59,61],
[51,0,91,79,52,56,51,60],
[54,40,0,59,55,47,55,48],
[63,52,72,0,62,39,49,40],
[73,79,76,69,0,65,72,75],
[68,75,84,92,66,0,54,66],
[72,80,76,82,59,77,0,53],
[70,71,83,91,56,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,58,63,60,70,62,65],
[63,0,53,61,66,71,67,60],
[73,78,0,58,59,67,74,70],
[68,70,73,0,69,70,59,66],
[71,65,72,62,0,76,68,65],
[61,60,64,61,55,0,57,59],
[69,64,57,72,63,74,0,66],
[66,71,61,65,66,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,66,58,94,68,73],
[51,0,73,64,73,88,65,67],
[64,58,0,61,52,70,63,66],
[65,67,70,0,66,81,62,65],
[73,58,79,65,0,69,58,64],
[37,43,61,50,62,0,43,42],
[63,66,68,69,73,88,0,66],
[58,64,65,66,67,89,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,50,77,55,37,42,59],
[67,0,88,80,43,46,50,51],
[81,43,0,53,68,53,78,76],
[54,51,78,0,64,43,58,58],
[76,88,63,67,0,67,94,72],
[94,85,78,88,64,0,85,99],
[89,81,53,73,37,46,0,65],
[72,80,55,73,59,32,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,64,57,62,59,65],
[62,0,57,67,65,62,65,61],
[64,74,0,69,69,66,70,74],
[67,64,62,0,61,68,70,65],
[74,66,62,70,0,71,69,76],
[69,69,65,63,60,0,64,63],
[72,66,61,61,62,67,0,67],
[66,70,57,66,55,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,77,76,86,65,67,82],
[44,0,54,73,67,54,49,61],
[54,77,0,84,81,69,66,71],
[55,58,47,0,60,45,63,61],
[45,64,50,71,0,37,53,56],
[66,77,62,86,94,0,78,74],
[64,82,65,68,78,53,0,74],
[49,70,60,70,75,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,55,79,68,76,62],
[71,0,72,65,88,71,62,69],
[66,59,0,68,83,62,66,68],
[76,66,63,0,93,66,70,71],
[52,43,48,38,0,52,54,58],
[63,60,69,65,79,0,75,66],
[55,69,65,61,77,56,0,52],
[69,62,63,60,73,65,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,50,67,62,103,65],
[62,0,90,53,86,50,106,64],
[64,41,0,45,62,56,77,43],
[81,78,86,0,83,50,93,66],
[64,45,69,48,0,40,61,43],
[69,81,75,81,91,0,101,62],
[28,25,54,38,70,30,0,36],
[66,67,88,65,88,69,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,67,63,59,59,68],
[57,0,74,68,62,63,60,69],
[64,57,0,56,64,62,54,67],
[64,63,75,0,60,70,60,74],
[68,69,67,71,0,65,66,71],
[72,68,69,61,66,0,58,70],
[72,71,77,71,65,73,0,72],
[63,62,64,57,60,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,58,67,71,64,68,78],
[58,0,63,65,62,53,62,64],
[73,68,0,80,72,67,64,90],
[64,66,51,0,68,72,74,83],
[60,69,59,63,0,58,65,83],
[67,78,64,59,73,0,54,76],
[63,69,67,57,66,77,0,82],
[53,67,41,48,48,55,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,75,97,88,65,66,71],
[78,0,79,95,101,91,52,68],
[56,52,0,80,74,68,42,58],
[34,36,51,0,43,37,46,55],
[43,30,57,88,0,37,43,56],
[66,40,63,94,94,0,41,64],
[65,79,89,85,88,90,0,70],
[60,63,73,76,75,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,76,57,64,67,70,72],
[69,0,64,54,59,59,57,53],
[55,67,0,54,69,58,68,63],
[74,77,77,0,63,75,71,64],
[67,72,62,68,0,71,68,69],
[64,72,73,56,60,0,61,69],
[61,74,63,60,63,70,0,63],
[59,78,68,67,62,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,59,65,65,60,87],
[55,0,66,82,73,72,52,95],
[57,65,0,66,71,75,60,91],
[72,49,65,0,47,55,49,67],
[66,58,60,84,0,69,48,56],
[66,59,56,76,62,0,71,75],
[71,79,71,82,83,60,0,76],
[44,36,40,64,75,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,64,60,71,58,64],
[67,0,59,65,67,72,64,67],
[66,72,0,64,67,78,66,69],
[67,66,67,0,65,72,63,69],
[71,64,64,66,0,79,62,67],
[60,59,53,59,52,0,56,66],
[73,67,65,68,69,75,0,68],
[67,64,62,62,64,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,64,74,69,77,59,60],
[53,0,54,68,65,78,51,51],
[67,77,0,84,71,78,63,69],
[57,63,47,0,75,68,50,52],
[62,66,60,56,0,74,54,53],
[54,53,53,63,57,0,64,61],
[72,80,68,81,77,67,0,62],
[71,80,62,79,78,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,64,64,67,62,62],
[63,0,76,57,66,69,66,73],
[60,55,0,61,53,60,56,62],
[67,74,70,0,56,75,68,69],
[67,65,78,75,0,66,63,64],
[64,62,71,56,65,0,57,65],
[69,65,75,63,68,74,0,70],
[69,58,69,62,67,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,72,71,75,76,69],
[73,0,57,75,66,71,64,65],
[62,74,0,68,62,81,73,73],
[59,56,63,0,68,68,63,61],
[60,65,69,63,0,67,71,70],
[56,60,50,63,64,0,60,70],
[55,67,58,68,60,71,0,68],
[62,66,58,70,61,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,62,62,62,56,63],
[66,0,63,58,59,65,77,71],
[71,68,0,46,67,71,75,66],
[69,73,85,0,61,79,82,66],
[69,72,64,70,0,68,66,76],
[69,66,60,52,63,0,71,62],
[75,54,56,49,65,60,0,56],
[68,60,65,65,55,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,65,65,55,61,56],
[67,0,65,56,57,60,69,57],
[62,66,0,51,57,56,65,56],
[66,75,80,0,69,59,76,63],
[66,74,74,62,0,60,76,77],
[76,71,75,72,71,0,81,65],
[70,62,66,55,55,50,0,52],
[75,74,75,68,54,66,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,60,66,64,82,68],
[70,0,72,69,73,70,63,65],
[65,59,0,55,50,68,73,56],
[71,62,76,0,63,58,84,70],
[65,58,81,68,0,53,68,67],
[67,61,63,73,78,0,72,62],
[49,68,58,47,63,59,0,73],
[63,66,75,61,64,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,68,71,70,80,81],
[55,0,61,58,65,65,63,63],
[66,70,0,58,72,80,75,69],
[63,73,73,0,74,71,69,83],
[60,66,59,57,0,67,69,69],
[61,66,51,60,64,0,66,73],
[51,68,56,62,62,65,0,77],
[50,68,62,48,62,58,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,57,72,66,53,43],
[76,0,64,64,67,67,64,57],
[63,67,0,80,62,72,57,50],
[74,67,51,0,81,66,70,48],
[59,64,69,50,0,50,77,55],
[65,64,59,65,81,0,72,66],
[78,67,74,61,54,59,0,56],
[88,74,81,83,76,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,52,30,49,54,24,0],
[101,0,52,68,98,49,76,44],
[79,79,0,79,98,79,79,55],
[101,63,52,0,74,24,76,44],
[82,33,33,57,0,57,57,33],
[77,82,52,107,74,0,52,77],
[107,55,52,55,74,79,0,25],
[131,87,76,87,98,54,106,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,74,71,66,62,62,58],
[66,0,73,69,62,60,58,60],
[57,58,0,62,57,58,61,58],
[60,62,69,0,57,60,60,59],
[65,69,74,74,0,67,61,67],
[69,71,73,71,64,0,60,63],
[69,73,70,71,70,71,0,56],
[73,71,73,72,64,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,44,64,50,52,50],
[84,0,63,66,75,73,72,57],
[87,68,0,66,86,52,96,76],
[87,65,65,0,80,73,84,76],
[67,56,45,51,0,71,53,65],
[81,58,79,58,60,0,83,59],
[79,59,35,47,78,48,0,48],
[81,74,55,55,66,72,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,55,52,66,64,78,65],
[94,0,62,67,76,80,88,80],
[76,69,0,61,83,71,91,78],
[79,64,70,0,93,55,79,75],
[65,55,48,38,0,68,57,63],
[67,51,60,76,63,0,78,69],
[53,43,40,52,74,53,0,60],
[66,51,53,56,68,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,68,75,58,73,61],
[59,0,68,53,67,66,57,50],
[61,63,0,62,67,72,71,66],
[63,78,69,0,72,78,72,65],
[56,64,64,59,0,66,53,50],
[73,65,59,53,65,0,61,71],
[58,74,60,59,78,70,0,56],
[70,81,65,66,81,60,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,68,77,84,64,47,70],
[95,0,80,89,83,101,52,91],
[63,51,0,66,74,79,67,64],
[54,42,65,0,77,65,53,66],
[47,48,57,54,0,66,38,75],
[67,30,52,66,65,0,43,85],
[84,79,64,78,93,88,0,70],
[61,40,67,65,56,46,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,63,53,60,63,55],
[65,0,57,62,66,69,61,57],
[73,74,0,69,64,70,64,64],
[68,69,62,0,62,65,70,61],
[78,65,67,69,0,76,69,72],
[71,62,61,66,55,0,68,62],
[68,70,67,61,62,63,0,63],
[76,74,67,70,59,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,66,70,60,62,67,85],
[52,0,78,77,68,80,66,71],
[65,53,0,71,59,70,69,69],
[61,54,60,0,71,69,78,76],
[71,63,72,60,0,72,81,72],
[69,51,61,62,59,0,67,67],
[64,65,62,53,50,64,0,52],
[46,60,62,55,59,64,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,59,58,56,64,63],
[61,0,55,61,62,68,62,64],
[62,76,0,66,63,68,72,61],
[72,70,65,0,70,73,66,59],
[73,69,68,61,0,67,71,69],
[75,63,63,58,64,0,66,59],
[67,69,59,65,60,65,0,63],
[68,67,70,72,62,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,82,67,54,73,66,65],
[60,0,63,62,66,63,66,68],
[49,68,0,63,60,57,59,55],
[64,69,68,0,58,70,64,63],
[77,65,71,73,0,66,61,56],
[58,68,74,61,65,0,60,71],
[65,65,72,67,70,71,0,64],
[66,63,76,68,75,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,66,45,66,66,107,47],
[85,0,46,79,42,65,85,67],
[65,85,0,58,58,104,111,85],
[86,52,73,0,72,73,86,54],
[65,89,73,59,0,73,86,54],
[65,66,27,58,58,0,90,58],
[24,46,20,45,45,41,0,21],
[84,64,46,77,77,73,110,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,59,78,67,65,71],
[65,0,62,69,71,61,61,59],
[68,69,0,63,78,70,72,69],
[72,62,68,0,79,70,67,70],
[53,60,53,52,0,52,56,53],
[64,70,61,61,79,0,69,68],
[66,70,59,64,75,62,0,62],
[60,72,62,61,78,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,67,70,64,73,51],
[63,0,67,59,76,61,61,65],
[64,64,0,65,65,58,64,60],
[64,72,66,0,74,66,70,67],
[61,55,66,57,0,58,57,54],
[67,70,73,65,73,0,69,64],
[58,70,67,61,74,62,0,67],
[80,66,71,64,77,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,73,79,70,76,73],
[67,0,60,75,70,62,72,60],
[58,71,0,69,66,62,68,67],
[58,56,62,0,71,63,65,62],
[52,61,65,60,0,59,64,71],
[61,69,69,68,72,0,61,74],
[55,59,63,66,67,70,0,68],
[58,71,64,69,60,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,62,57,60,70,69],
[73,0,70,66,61,74,78,77],
[67,61,0,66,63,67,75,69],
[69,65,65,0,72,69,80,70],
[74,70,68,59,0,74,76,73],
[71,57,64,62,57,0,81,69],
[61,53,56,51,55,50,0,62],
[62,54,62,61,58,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,63,58,65,55,50],
[62,0,60,57,57,58,56,55],
[73,71,0,66,63,74,66,57],
[68,74,65,0,72,71,58,60],
[73,74,68,59,0,66,64,66],
[66,73,57,60,65,0,58,61],
[76,75,65,73,67,73,0,68],
[81,76,74,71,65,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,56,63,69,65,67],
[58,0,71,62,68,66,62,68],
[58,60,0,63,67,65,60,61],
[75,69,68,0,61,65,66,70],
[68,63,64,70,0,66,63,70],
[62,65,66,66,65,0,69,64],
[66,69,71,65,68,62,0,69],
[64,63,70,61,61,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,73,64,68,66,85],
[57,0,57,57,59,56,66,74],
[64,74,0,74,81,74,79,81],
[58,74,57,0,64,58,68,69],
[67,72,50,67,0,66,66,71],
[63,75,57,73,65,0,63,76],
[65,65,52,63,65,68,0,75],
[46,57,50,62,60,55,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,59,55,65,55,42],
[71,0,68,53,59,80,65,68],
[70,63,0,75,50,58,48,55],
[72,78,56,0,53,67,54,53],
[76,72,81,78,0,82,62,72],
[66,51,73,64,49,0,52,55],
[76,66,83,77,69,79,0,58],
[89,63,76,78,59,76,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,45,73,47,63,48,39],
[66,0,39,70,38,49,68,49],
[86,92,0,90,75,76,85,61],
[58,61,41,0,30,46,50,48],
[84,93,56,101,0,72,64,61],
[68,82,55,85,59,0,86,67],
[83,63,46,81,67,45,0,29],
[92,82,70,83,70,64,102,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,43,46,82,58,67,44],
[77,0,63,59,76,58,61,74],
[88,68,0,61,64,68,64,63],
[85,72,70,0,78,56,59,55],
[49,55,67,53,0,62,62,53],
[73,73,63,75,69,0,68,63],
[64,70,67,72,69,63,0,53],
[87,57,68,76,78,68,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,67,61,61,54,60,56],
[81,0,69,88,76,65,73,81],
[64,62,0,75,59,67,72,70],
[70,43,56,0,61,64,61,60],
[70,55,72,70,0,58,70,77],
[77,66,64,67,73,0,70,77],
[71,58,59,70,61,61,0,73],
[75,50,61,71,54,54,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,43,54,65,63,63],
[70,0,76,66,67,65,80,70],
[70,55,0,45,61,60,69,59],
[88,65,86,0,82,75,90,72],
[77,64,70,49,0,64,73,68],
[66,66,71,56,67,0,66,72],
[68,51,62,41,58,65,0,55],
[68,61,72,59,63,59,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,74,70,59,69,52],
[65,0,36,68,31,74,69,49],
[72,95,0,79,58,73,83,71],
[57,63,52,0,70,71,72,49],
[61,100,73,61,0,65,85,79],
[72,57,58,60,66,0,62,60],
[62,62,48,59,46,69,0,35],
[79,82,60,82,52,71,96,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,63,61,62,67,65],
[75,0,68,68,62,67,73,62],
[66,63,0,64,62,75,63,64],
[68,63,67,0,67,67,67,71],
[70,69,69,64,0,71,60,64],
[69,64,56,64,60,0,70,64],
[64,58,68,64,71,61,0,68],
[66,69,67,60,67,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,83,90,65,68,63,78],
[68,0,100,83,67,57,45,83],
[48,31,0,70,38,19,36,60],
[41,48,61,0,74,45,42,66],
[66,64,93,57,0,43,64,82],
[63,74,112,86,88,0,78,107],
[68,86,95,89,67,53,0,83],
[53,48,71,65,49,24,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,71,61,66,70,67],
[63,0,75,57,56,64,61,73],
[63,56,0,56,57,60,63,58],
[60,74,75,0,68,70,67,68],
[70,75,74,63,0,76,72,70],
[65,67,71,61,55,0,64,63],
[61,70,68,64,59,67,0,64],
[64,58,73,63,61,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,66,76,56,83,57,54],
[76,0,69,64,66,68,49,49],
[65,62,0,70,47,63,74,38],
[55,67,61,0,53,77,59,56],
[75,65,84,78,0,86,73,67],
[48,63,68,54,45,0,52,38],
[74,82,57,72,58,79,0,56],
[77,82,93,75,64,93,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,61,58,58,59,55],
[66,0,57,71,52,56,68,63],
[72,74,0,66,69,65,66,68],
[70,60,65,0,64,66,68,73],
[73,79,62,67,0,65,70,67],
[73,75,66,65,66,0,71,70],
[72,63,65,63,61,60,0,71],
[76,68,63,58,64,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,54,59,61,70,66],
[61,0,69,61,56,62,58,66],
[67,62,0,53,58,56,63,61],
[77,70,78,0,65,67,60,66],
[72,75,73,66,0,64,70,73],
[70,69,75,64,67,0,61,73],
[61,73,68,71,61,70,0,68],
[65,65,70,65,58,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,90,75,92,70,89,65],
[40,0,77,54,75,50,78,51],
[41,54,0,41,62,45,50,45],
[56,77,90,0,69,52,90,67],
[39,56,69,62,0,46,56,39],
[61,81,86,79,85,0,91,72],
[42,53,81,41,75,40,0,34],
[66,80,86,64,92,59,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,60,60,47,64,54],
[62,0,57,64,60,54,65,61],
[74,74,0,58,74,66,64,66],
[71,67,73,0,58,63,64,61],
[71,71,57,73,0,60,70,64],
[84,77,65,68,71,0,73,68],
[67,66,67,67,61,58,0,61],
[77,70,65,70,67,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,72,60,70,67,58,50],
[74,0,74,68,78,64,66,65],
[59,57,0,58,65,54,53,58],
[71,63,73,0,74,58,61,68],
[61,53,66,57,0,57,54,62],
[64,67,77,73,74,0,64,65],
[73,65,78,70,77,67,0,61],
[81,66,73,63,69,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,67,56,51,63,54,52],
[79,0,79,62,49,73,73,74],
[64,52,0,51,55,71,64,51],
[75,69,80,0,55,77,74,62],
[80,82,76,76,0,78,64,72],
[68,58,60,54,53,0,57,48],
[77,58,67,57,67,74,0,61],
[79,57,80,69,59,83,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,58,61,68,76,73],
[65,0,65,53,66,62,67,68],
[68,66,0,62,62,61,66,72],
[73,78,69,0,62,66,72,76],
[70,65,69,69,0,63,70,68],
[63,69,70,65,68,0,69,71],
[55,64,65,59,61,62,0,71],
[58,63,59,55,63,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,61,50,70,73,58],
[56,0,57,65,57,57,66,59],
[64,74,0,62,47,66,61,47],
[70,66,69,0,60,70,70,68],
[81,74,84,71,0,73,79,61],
[61,74,65,61,58,0,64,58],
[58,65,70,61,52,67,0,56],
[73,72,84,63,70,73,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,63,71,68,67,61,75],
[53,0,60,59,56,67,55,63],
[68,71,0,56,63,61,64,72],
[60,72,75,0,71,68,67,71],
[63,75,68,60,0,66,56,63],
[64,64,70,63,65,0,63,68],
[70,76,67,64,75,68,0,75],
[56,68,59,60,68,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,85,65,68,79,80,68],
[57,0,68,64,67,70,57,51],
[46,63,0,55,62,53,57,52],
[66,67,76,0,66,68,70,63],
[63,64,69,65,0,66,59,55],
[52,61,78,63,65,0,60,51],
[51,74,74,61,72,71,0,58],
[63,80,79,68,76,80,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,78,69,65,71,57],
[61,0,64,70,71,65,66,57],
[58,67,0,65,73,57,57,66],
[53,61,66,0,65,63,64,59],
[62,60,58,66,0,52,63,57],
[66,66,74,68,79,0,69,48],
[60,65,74,67,68,62,0,69],
[74,74,65,72,74,83,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,77,68,69,68,64],
[62,0,65,71,73,63,60,68],
[66,66,0,81,66,67,64,72],
[54,60,50,0,65,64,60,52],
[63,58,65,66,0,55,62,62],
[62,68,64,67,76,0,62,72],
[63,71,67,71,69,69,0,64],
[67,63,59,79,69,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,89,81,72,73,97,80],
[67,0,89,59,83,64,94,61],
[42,42,0,59,59,55,58,55],
[50,72,72,0,78,69,83,59],
[59,48,72,53,0,57,75,58],
[58,67,76,62,74,0,79,69],
[34,37,73,48,56,52,0,48],
[51,70,76,72,73,62,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,72,65,66,49,64],
[61,0,63,76,71,75,61,66],
[68,68,0,76,83,60,61,56],
[59,55,55,0,61,45,54,52],
[66,60,48,70,0,51,57,63],
[65,56,71,86,80,0,60,67],
[82,70,70,77,74,71,0,55],
[67,65,75,79,68,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,54,61,59,62,59],
[77,0,72,66,71,65,70,71],
[72,59,0,74,69,78,71,70],
[77,65,57,0,77,77,62,76],
[70,60,62,54,0,70,74,55],
[72,66,53,54,61,0,79,66],
[69,61,60,69,57,52,0,67],
[72,60,61,55,76,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,49,68,65,60,65],
[64,0,63,69,59,54,58,70],
[65,68,0,62,51,58,66,74],
[82,62,69,0,63,64,64,74],
[63,72,80,68,0,71,64,88],
[66,77,73,67,60,0,71,73],
[71,73,65,67,67,60,0,70],
[66,61,57,57,43,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,72,73,63,72,64],
[70,0,60,58,63,68,81,60],
[74,71,0,65,64,61,65,70],
[59,73,66,0,64,73,76,61],
[58,68,67,67,0,63,62,57],
[68,63,70,58,68,0,86,70],
[59,50,66,55,69,45,0,54],
[67,71,61,70,74,61,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,65,59,37,57,54],
[78,0,72,95,78,67,51,60],
[69,59,0,74,71,61,48,73],
[66,36,57,0,64,45,54,54],
[72,53,60,67,0,44,51,69],
[94,64,70,86,87,0,75,62],
[74,80,83,77,80,56,0,77],
[77,71,58,77,62,69,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,75,67,84,78,58,78],
[69,0,68,71,79,80,63,66],
[56,63,0,64,74,74,76,64],
[64,60,67,0,74,64,61,55],
[47,52,57,57,0,51,48,60],
[53,51,57,67,80,0,58,64],
[73,68,55,70,83,73,0,75],
[53,65,67,76,71,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,79,73,63,73,72],
[56,0,61,60,57,64,48,49],
[58,70,0,64,62,57,61,72],
[52,71,67,0,56,62,61,55],
[58,74,69,75,0,62,60,67],
[68,67,74,69,69,0,60,66],
[58,83,70,70,71,71,0,71],
[59,82,59,76,64,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,44,45,35,71,61,43],
[106,0,70,78,74,83,60,73],
[87,61,0,52,71,69,56,71],
[86,53,79,0,57,62,67,58],
[96,57,60,74,0,76,54,80],
[60,48,62,69,55,0,45,67],
[70,71,75,64,77,86,0,87],
[88,58,60,73,51,64,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,56,69,71,59,58,57],
[55,0,43,58,70,55,63,61],
[75,88,0,73,91,73,64,81],
[62,73,58,0,64,57,64,70],
[60,61,40,67,0,54,56,60],
[72,76,58,74,77,0,66,61],
[73,68,67,67,75,65,0,59],
[74,70,50,61,71,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,58,69,85,86,69,62],
[38,0,54,64,85,66,70,76],
[73,77,0,75,99,65,73,66],
[62,67,56,0,55,64,72,51],
[46,46,32,76,0,37,78,50],
[45,65,66,67,94,0,82,70],
[62,61,58,59,53,49,0,65],
[69,55,65,80,81,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,67,61,62,72,73],
[70,0,59,68,72,63,70,71],
[64,72,0,65,68,67,73,67],
[64,63,66,0,70,61,73,69],
[70,59,63,61,0,61,70,69],
[69,68,64,70,70,0,77,72],
[59,61,58,58,61,54,0,62],
[58,60,64,62,62,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,76,69,73,71,64,83],
[60,0,71,68,60,62,70,75],
[55,60,0,65,58,67,61,69],
[62,63,66,0,65,65,59,70],
[58,71,73,66,0,66,65,74],
[60,69,64,66,65,0,66,75],
[67,61,70,72,66,65,0,71],
[48,56,62,61,57,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,62,69,58,48,81],
[72,0,66,81,67,68,61,75],
[80,65,0,78,85,68,65,84],
[69,50,53,0,73,70,47,71],
[62,64,46,58,0,56,74,85],
[73,63,63,61,75,0,60,76],
[83,70,66,84,57,71,0,76],
[50,56,47,60,46,55,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,77,61,59,59,59,71],
[73,0,69,79,62,60,66,72],
[54,62,0,69,65,42,61,57],
[70,52,62,0,73,56,65,63],
[72,69,66,58,0,57,67,55],
[72,71,89,75,74,0,79,63],
[72,65,70,66,64,52,0,69],
[60,59,74,68,76,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,53,62,61,52,60,63],
[75,0,69,67,53,61,71,65],
[78,62,0,68,61,63,62,78],
[69,64,63,0,66,62,56,72],
[70,78,70,65,0,64,63,60],
[79,70,68,69,67,0,64,63],
[71,60,69,75,68,67,0,68],
[68,66,53,59,71,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,77,77,76,74,70],
[71,0,75,68,59,83,63,70],
[65,56,0,56,60,68,62,58],
[54,63,75,0,69,71,59,59],
[54,72,71,62,0,66,70,65],
[55,48,63,60,65,0,56,61],
[57,68,69,72,61,75,0,64],
[61,61,73,72,66,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,81,80,86,79,95,72],
[82,0,76,53,59,78,78,47],
[50,55,0,51,49,57,55,50],
[51,78,80,0,63,60,78,59],
[45,72,82,68,0,72,70,62],
[52,53,74,71,59,0,87,82],
[36,53,76,53,61,44,0,46],
[59,84,81,72,69,49,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,74,75,71,69,63],
[62,0,81,66,80,70,59,72],
[58,50,0,61,71,59,55,66],
[57,65,70,0,71,64,60,61],
[56,51,60,60,0,58,53,66],
[60,61,72,67,73,0,60,70],
[62,72,76,71,78,71,0,74],
[68,59,65,70,65,61,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,62,66,66,65,67],
[69,0,69,60,70,67,65,70],
[67,62,0,57,65,62,62,65],
[69,71,74,0,72,65,71,69],
[65,61,66,59,0,61,70,61],
[65,64,69,66,70,0,63,63],
[66,66,69,60,61,68,0,68],
[64,61,66,62,70,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,69,73,64,74,74,69],
[53,0,62,55,58,73,58,65],
[62,69,0,54,57,65,66,60],
[58,76,77,0,69,76,64,73],
[67,73,74,62,0,76,78,67],
[57,58,66,55,55,0,66,64],
[57,73,65,67,53,65,0,60],
[62,66,71,58,64,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,63,51,63,62,54],
[71,0,64,61,61,64,65,63],
[69,67,0,75,63,66,70,71],
[68,70,56,0,70,68,73,59],
[80,70,68,61,0,68,76,68],
[68,67,65,63,63,0,67,61],
[69,66,61,58,55,64,0,65],
[77,68,60,72,63,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,64,66,82,65,74],
[58,0,72,58,58,65,63,63],
[58,59,0,60,52,69,61,64],
[67,73,71,0,70,78,59,71],
[65,73,79,61,0,84,70,78],
[49,66,62,53,47,0,56,58],
[66,68,70,72,61,75,0,73],
[57,68,67,60,53,73,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,53,49,54,71,46,53],
[79,0,47,69,61,75,63,80],
[78,84,0,91,69,91,53,84],
[82,62,40,0,66,73,52,67],
[77,70,62,65,0,78,74,67],
[60,56,40,58,53,0,55,72],
[85,68,78,79,57,76,0,65],
[78,51,47,64,64,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,77,70,71,69,65],
[61,0,61,66,62,54,65,59],
[54,70,0,71,70,63,65,52],
[54,65,60,0,64,59,65,53],
[61,69,61,67,0,69,70,70],
[60,77,68,72,62,0,67,66],
[62,66,66,66,61,64,0,68],
[66,72,79,78,61,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,70,66,65,69,71,60],
[46,0,57,66,61,65,61,45],
[61,74,0,63,72,73,73,67],
[65,65,68,0,63,57,71,67],
[66,70,59,68,0,66,67,55],
[62,66,58,74,65,0,69,72],
[60,70,58,60,64,62,0,57],
[71,86,64,64,76,59,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,77,61,63,62,66,66],
[71,0,71,63,68,67,71,62],
[54,60,0,60,62,62,62,59],
[70,68,71,0,58,62,60,54],
[68,63,69,73,0,57,61,64],
[69,64,69,69,74,0,73,65],
[65,60,69,71,70,58,0,60],
[65,69,72,77,67,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,57,41,59,31,58,58],
[87,0,81,67,97,55,105,63],
[74,50,0,66,69,44,77,65],
[90,64,65,0,102,73,95,75],
[72,34,62,29,0,30,59,49],
[100,76,87,58,101,0,101,98],
[73,26,54,36,72,30,0,49],
[73,68,66,56,82,33,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,65,69,61,69,76],
[64,0,60,66,61,64,70,60],
[66,71,0,65,74,73,69,66],
[66,65,66,0,71,69,68,60],
[62,70,57,60,0,62,63,54],
[70,67,58,62,69,0,67,55],
[62,61,62,63,68,64,0,60],
[55,71,65,71,77,76,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,50,36,70,51,57,54],
[50,0,62,44,55,50,26,36],
[81,69,0,81,77,77,62,66],
[95,87,50,0,64,105,71,66],
[61,76,54,67,0,80,66,75],
[80,81,54,26,51,0,57,54],
[74,105,69,60,65,74,0,77],
[77,95,65,65,56,77,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,79,38,22,21,11,62],
[59,0,55,38,33,16,6,62],
[52,76,0,52,12,11,16,82],
[93,93,79,0,69,58,74,82],
[109,98,119,62,0,92,57,81],
[110,115,120,73,39,0,63,104],
[120,125,115,57,74,68,0,76],
[69,69,49,49,50,27,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,91,55,83,40,43,58],
[65,0,95,76,93,76,78,57],
[40,36,0,37,49,24,47,11],
[76,55,94,0,97,41,52,78],
[48,38,82,34,0,48,47,49],
[91,55,107,90,83,0,70,70],
[88,53,84,79,84,61,0,53],
[73,74,120,53,82,61,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,63,62,73,70,71],
[67,0,62,56,63,67,68,68],
[63,69,0,59,58,68,66,59],
[68,75,72,0,65,71,69,72],
[69,68,73,66,0,65,78,71],
[58,64,63,60,66,0,68,64],
[61,63,65,62,53,63,0,62],
[60,63,72,59,60,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,71,78,64,69,64],
[60,0,63,66,66,65,53,62],
[63,68,0,72,78,71,67,68],
[60,65,59,0,64,61,60,67],
[53,65,53,67,0,71,56,63],
[67,66,60,70,60,0,55,69],
[62,78,64,71,75,76,0,62],
[67,69,63,64,68,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,52,70,60,75,47],
[68,0,60,63,71,60,76,54],
[60,71,0,61,77,75,70,55],
[79,68,70,0,71,56,79,57],
[61,60,54,60,0,65,66,52],
[71,71,56,75,66,0,81,69],
[56,55,61,52,65,50,0,52],
[84,77,76,74,79,62,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,51,40,37,27,44,42],
[63,0,56,53,65,38,48,51],
[80,75,0,65,58,49,65,69],
[91,78,66,0,73,80,59,71],
[94,66,73,58,0,47,67,76],
[104,93,82,51,84,0,68,85],
[87,83,66,72,64,63,0,69],
[89,80,62,60,55,46,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,82,65,64,79,66,66],
[51,0,70,58,60,64,59,67],
[49,61,0,62,55,60,62,59],
[66,73,69,0,63,65,69,67],
[67,71,76,68,0,68,73,64],
[52,67,71,66,63,0,68,67],
[65,72,69,62,58,63,0,64],
[65,64,72,64,67,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,62,69,83,65,69],
[64,0,81,59,63,68,62,59],
[51,50,0,44,53,63,52,57],
[69,72,87,0,61,81,70,64],
[62,68,78,70,0,75,65,60],
[48,63,68,50,56,0,60,65],
[66,69,79,61,66,71,0,62],
[62,72,74,67,71,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,71,45,45,53,66,53],
[49,0,49,48,36,54,63,43],
[60,82,0,66,53,62,78,59],
[86,83,65,0,73,82,86,73],
[86,95,78,58,0,66,81,71],
[78,77,69,49,65,0,78,69],
[65,68,53,45,50,53,0,67],
[78,88,72,58,60,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,82,81,77,35,45,60],
[26,0,61,26,42,40,38,60],
[49,70,0,67,33,25,30,25],
[50,105,64,0,50,40,56,53],
[54,89,98,81,0,73,81,99],
[96,91,106,91,58,0,63,102],
[86,93,101,75,50,68,0,89],
[71,71,106,78,32,29,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,74,65,80,60,59],
[70,0,81,73,68,68,56,68],
[60,50,0,61,66,55,67,51],
[57,58,70,0,66,56,46,68],
[66,63,65,65,0,56,68,65],
[51,63,76,75,75,0,86,70],
[71,75,64,85,63,45,0,69],
[72,63,80,63,66,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,62,69,62,64,65],
[64,0,76,59,69,73,70,67],
[52,55,0,56,62,65,64,59],
[69,72,75,0,70,71,59,64],
[62,62,69,61,0,57,73,61],
[69,58,66,60,74,0,67,66],
[67,61,67,72,58,64,0,58],
[66,64,72,67,70,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,56,56,63,70,68],
[70,0,61,59,57,64,69,66],
[68,70,0,73,65,72,75,77],
[75,72,58,0,69,67,72,71],
[75,74,66,62,0,78,73,72],
[68,67,59,64,53,0,64,62],
[61,62,56,59,58,67,0,63],
[63,65,54,60,59,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,68,60,60,68,57],
[67,0,66,62,63,66,63,64],
[58,65,0,67,69,57,63,65],
[63,69,64,0,70,61,68,62],
[71,68,62,61,0,57,67,65],
[71,65,74,70,74,0,70,68],
[63,68,68,63,64,61,0,66],
[74,67,66,69,66,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,70,63,76,69,82],
[55,0,62,47,61,75,52,62],
[62,69,0,49,56,74,60,67],
[61,84,82,0,68,83,69,71],
[68,70,75,63,0,82,71,65],
[55,56,57,48,49,0,51,63],
[62,79,71,62,60,80,0,77],
[49,69,64,60,66,68,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,81,67,56,66,67,62],
[71,0,72,69,72,61,76,67],
[50,59,0,54,50,66,74,64],
[64,62,77,0,61,83,65,67],
[75,59,81,70,0,68,73,70],
[65,70,65,48,63,0,66,54],
[64,55,57,66,58,65,0,68],
[69,64,67,64,61,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,78,58,56,60,68],
[70,0,74,80,60,70,63,68],
[71,57,0,72,59,50,62,64],
[53,51,59,0,53,47,55,60],
[73,71,72,78,0,68,65,71],
[75,61,81,84,63,0,66,71],
[71,68,69,76,66,65,0,64],
[63,63,67,71,60,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,66,80,75,66,80],
[66,0,69,73,73,72,64,83],
[54,62,0,60,64,46,47,67],
[65,58,71,0,71,56,65,67],
[51,58,67,60,0,55,52,70],
[56,59,85,75,76,0,70,71],
[65,67,84,66,79,61,0,65],
[51,48,64,64,61,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,43,56,45,44,48,41],
[76,0,54,89,63,76,63,55],
[88,77,0,80,59,66,53,56],
[75,42,51,0,50,55,53,45],
[86,68,72,81,0,49,61,48],
[87,55,65,76,82,0,75,71],
[83,68,78,78,70,56,0,46],
[90,76,75,86,83,60,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,62,70,63,64,66],
[69,0,72,69,67,62,59,69],
[69,59,0,60,56,57,55,64],
[69,62,71,0,59,62,63,63],
[61,64,75,72,0,61,64,71],
[68,69,74,69,70,0,63,68],
[67,72,76,68,67,68,0,65],
[65,62,67,68,60,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,55,64,70,67,77],
[57,0,55,46,62,53,51,72],
[63,76,0,58,62,63,61,71],
[76,85,73,0,71,65,68,82],
[67,69,69,60,0,73,59,65],
[61,78,68,66,58,0,62,69],
[64,80,70,63,72,69,0,75],
[54,59,60,49,66,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,72,67,58,67,59,65],
[77,0,68,65,64,79,67,80],
[59,63,0,68,62,68,61,64],
[64,66,63,0,51,70,60,74],
[73,67,69,80,0,77,64,71],
[64,52,63,61,54,0,56,65],
[72,64,70,71,67,75,0,70],
[66,51,67,57,60,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,61,58,66,67,67,66],
[56,0,64,56,52,72,60,54],
[70,67,0,61,64,67,70,72],
[73,75,70,0,61,78,68,68],
[65,79,67,70,0,76,67,68],
[64,59,64,53,55,0,60,62],
[64,71,61,63,64,71,0,64],
[65,77,59,63,63,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,73,80,60,67,68],
[69,0,59,65,66,72,69,49],
[63,72,0,61,58,61,73,67],
[58,66,70,0,62,78,64,58],
[51,65,73,69,0,69,66,57],
[71,59,70,53,62,0,83,66],
[64,62,58,67,65,48,0,57],
[63,82,64,73,74,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,68,54,66,55,46],
[69,0,70,71,82,77,61,70],
[60,61,0,61,59,67,45,42],
[63,60,70,0,57,66,56,61],
[77,49,72,74,0,65,76,56],
[65,54,64,65,66,0,56,49],
[76,70,86,75,55,75,0,68],
[85,61,89,70,75,82,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,64,67,49,73,44],
[66,0,58,55,76,72,64,56],
[73,73,0,68,56,89,95,65],
[67,76,63,0,77,82,83,81],
[64,55,75,54,0,58,83,78],
[82,59,42,49,73,0,85,58],
[58,67,36,48,48,46,0,54],
[87,75,66,50,53,73,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,83,86,79,55,79,84],
[43,0,50,67,77,56,75,65],
[48,81,0,84,87,74,98,78],
[45,64,47,0,75,56,74,58],
[52,54,44,56,0,61,85,74],
[76,75,57,75,70,0,72,84],
[52,56,33,57,46,59,0,49],
[47,66,53,73,57,47,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,83,49,74,67,72,58],
[51,0,62,40,77,63,63,44],
[48,69,0,65,77,55,53,58],
[82,91,66,0,92,69,64,69],
[57,54,54,39,0,31,62,59],
[64,68,76,62,100,0,69,65],
[59,68,78,67,69,62,0,58],
[73,87,73,62,72,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,81,65,69,71,71],
[51,0,52,59,56,59,57,63],
[64,79,0,71,73,66,68,72],
[50,72,60,0,65,74,58,56],
[66,75,58,66,0,69,57,63],
[62,72,65,57,62,0,54,67],
[60,74,63,73,74,77,0,69],
[60,68,59,75,68,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,65,48,51,65,49,49],
[88,0,90,64,63,66,60,58],
[66,41,0,57,56,58,48,56],
[83,67,74,0,74,72,67,64],
[80,68,75,57,0,77,62,67],
[66,65,73,59,54,0,55,63],
[82,71,83,64,69,76,0,67],
[82,73,75,67,64,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,59,85,64,68,95,59],
[56,0,69,86,35,70,80,70],
[72,62,0,59,72,65,83,72],
[46,45,72,0,56,73,66,59],
[67,96,59,75,0,59,101,89],
[63,61,66,58,72,0,82,72],
[36,51,48,65,30,49,0,42],
[72,61,59,72,42,59,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,76,56,84,59,57],
[59,0,73,82,69,80,53,74],
[58,58,0,77,61,73,57,58],
[55,49,54,0,58,78,56,48],
[75,62,70,73,0,72,59,70],
[47,51,58,53,59,0,54,54],
[72,78,74,75,72,77,0,65],
[74,57,73,83,61,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,74,69,66,71,62,57],
[72,0,72,70,71,76,62,70],
[57,59,0,64,65,65,58,61],
[62,61,67,0,64,56,53,57],
[65,60,66,67,0,70,58,62],
[60,55,66,75,61,0,59,60],
[69,69,73,78,73,72,0,60],
[74,61,70,74,69,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,72,69,68,62,70],
[62,0,64,72,64,70,63,65],
[62,67,0,69,74,72,63,69],
[59,59,62,0,69,63,58,62],
[62,67,57,62,0,73,57,67],
[63,61,59,68,58,0,55,61],
[69,68,68,73,74,76,0,64],
[61,66,62,69,64,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,69,74,55,59,65],
[74,0,62,67,75,65,74,69],
[75,69,0,72,76,79,65,70],
[62,64,59,0,65,59,59,57],
[57,56,55,66,0,57,58,53],
[76,66,52,72,74,0,67,67],
[72,57,66,72,73,64,0,69],
[66,62,61,74,78,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,74,56,62,70,65],
[71,0,69,75,72,64,61,67],
[63,62,0,85,62,66,79,72],
[57,56,46,0,54,50,68,52],
[75,59,69,77,0,60,58,73],
[69,67,65,81,71,0,61,64],
[61,70,52,63,73,70,0,61],
[66,64,59,79,58,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,61,49,60,65,52,62],
[82,0,72,67,60,73,55,63],
[70,59,0,55,63,62,59,54],
[82,64,76,0,56,67,56,60],
[71,71,68,75,0,74,61,65],
[66,58,69,64,57,0,55,66],
[79,76,72,75,70,76,0,63],
[69,68,77,71,66,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,65,62,72,62,67],
[56,0,56,58,63,61,71,67],
[62,75,0,64,67,64,74,58],
[66,73,67,0,65,78,71,68],
[69,68,64,66,0,73,68,62],
[59,70,67,53,58,0,65,61],
[69,60,57,60,63,66,0,58],
[64,64,73,63,69,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,77,57,70,50,71,54],
[70,0,68,73,50,47,59,51],
[54,63,0,82,63,59,50,60],
[74,58,49,0,62,64,51,34],
[61,81,68,69,0,69,63,61],
[81,84,72,67,62,0,46,73],
[60,72,81,80,68,85,0,69],
[77,80,71,97,70,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,77,66,68,61,72,73],
[70,0,65,63,61,65,67,61],
[54,66,0,67,71,55,64,59],
[65,68,64,0,66,65,71,66],
[63,70,60,65,0,62,64,65],
[70,66,76,66,69,0,74,65],
[59,64,67,60,67,57,0,63],
[58,70,72,65,66,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,88,90,80,89,63,77],
[66,0,80,82,70,81,64,64],
[43,51,0,51,25,40,23,23],
[41,49,80,0,64,64,56,64],
[51,61,106,67,0,107,90,64],
[42,50,91,67,24,0,81,77],
[68,67,108,75,41,50,0,53],
[54,67,108,67,67,54,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,76,69,67,66,74,79],
[70,0,61,68,75,61,75,72],
[55,70,0,68,66,61,64,63],
[62,63,63,0,54,73,78,68],
[64,56,65,77,0,58,65,67],
[65,70,70,58,73,0,75,76],
[57,56,67,53,66,56,0,69],
[52,59,68,63,64,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,68,68,68,68,68],
[66,0,74,67,64,67,67,64],
[59,57,0,65,66,62,68,58],
[63,64,66,0,62,70,63,65],
[63,67,65,69,0,74,64,63],
[63,64,69,61,57,0,58,64],
[63,64,63,68,67,73,0,66],
[63,67,73,66,68,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,68,71,70,67,75],
[74,0,68,76,72,78,63,59],
[63,63,0,66,77,76,52,52],
[63,55,65,0,60,61,60,63],
[60,59,54,71,0,67,58,52],
[61,53,55,70,64,0,68,65],
[64,68,79,71,73,63,0,67],
[56,72,79,68,79,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,62,47,57,66,50],
[90,0,63,74,69,65,77,61],
[81,68,0,77,63,59,76,62],
[69,57,54,0,47,66,76,52],
[84,62,68,84,0,89,99,77],
[74,66,72,65,42,0,78,58],
[65,54,55,55,32,53,0,45],
[81,70,69,79,54,73,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,70,75,64,74,62,75],
[48,0,48,64,45,57,57,58],
[61,83,0,84,72,75,66,70],
[56,67,47,0,57,73,58,58],
[67,86,59,74,0,84,75,87],
[57,74,56,58,47,0,52,67],
[69,74,65,73,56,79,0,73],
[56,73,61,73,44,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,67,64,64,63,66],
[72,0,77,68,81,66,65,70],
[63,54,0,65,68,65,63,65],
[64,63,66,0,75,65,58,66],
[67,50,63,56,0,68,60,67],
[67,65,66,66,63,0,70,69],
[68,66,68,73,71,61,0,72],
[65,61,66,65,64,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,68,68,75,70,64],
[63,0,64,82,69,64,96,69],
[68,67,0,65,74,66,72,61],
[63,49,66,0,60,64,75,70],
[63,62,57,71,0,67,71,59],
[56,67,65,67,64,0,74,72],
[61,35,59,56,60,57,0,62],
[67,62,70,61,72,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,78,66,70,57,66],
[75,0,64,82,73,75,63,68],
[73,67,0,91,71,72,60,69],
[53,49,40,0,58,64,38,50],
[65,58,60,73,0,73,70,66],
[61,56,59,67,58,0,58,58],
[74,68,71,93,61,73,0,76],
[65,63,62,81,65,73,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,87,74,69,67,77,67],
[69,0,65,69,69,57,60,75],
[44,66,0,62,77,57,58,57],
[57,62,69,0,67,56,52,73],
[62,62,54,64,0,56,51,62],
[64,74,74,75,75,0,66,69],
[54,71,73,79,80,65,0,56],
[64,56,74,58,69,62,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,66,68,66,59,66],
[60,0,72,71,69,66,65,64],
[66,59,0,67,62,58,60,58],
[65,60,64,0,67,55,60,58],
[63,62,69,64,0,63,63,52],
[65,65,73,76,68,0,67,67],
[72,66,71,71,68,64,0,59],
[65,67,73,73,79,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,66,66,82,72,64],
[57,0,59,52,58,64,59,68],
[61,72,0,59,68,62,67,77],
[65,79,72,0,48,69,74,75],
[65,73,63,83,0,88,81,78],
[49,67,69,62,43,0,74,77],
[59,72,64,57,50,57,0,72],
[67,63,54,56,53,54,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,63,65,77,45,91],
[71,0,66,65,70,63,61,69],
[68,65,0,77,74,71,69,79],
[68,66,54,0,54,63,47,64],
[66,61,57,77,0,71,60,79],
[54,68,60,68,60,0,56,70],
[86,70,62,84,71,75,0,70],
[40,62,52,67,52,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,54,56,56,58,60],
[67,0,61,57,53,63,59,54],
[66,70,0,63,64,67,68,68],
[77,74,68,0,66,56,66,65],
[75,78,67,65,0,67,72,71],
[75,68,64,75,64,0,66,68],
[73,72,63,65,59,65,0,66],
[71,77,63,66,60,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,63,32,15,63,36],
[51,0,68,63,68,15,99,36],
[51,63,0,48,17,30,99,36],
[68,68,83,0,53,30,99,36],
[99,63,114,78,0,78,99,99],
[116,116,101,101,53,0,116,53],
[68,32,32,32,32,15,0,36],
[95,95,95,95,32,78,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,47,62,51,50,55],
[92,0,68,70,64,66,60,73],
[83,63,0,66,72,63,78,74],
[84,61,65,0,77,64,61,65],
[69,67,59,54,0,53,46,48],
[80,65,68,67,78,0,63,70],
[81,71,53,70,85,68,0,63],
[76,58,57,66,83,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,60,61,63,66,69,66],
[76,0,70,70,66,69,59,83],
[71,61,0,74,71,73,68,72],
[70,61,57,0,56,59,65,63],
[68,65,60,75,0,66,67,67],
[65,62,58,72,65,0,72,65],
[62,72,63,66,64,59,0,68],
[65,48,59,68,64,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,50,56,66,57,69,67],
[63,0,54,65,56,63,77,70],
[81,77,0,76,75,72,64,72],
[75,66,55,0,72,67,60,69],
[65,75,56,59,0,59,57,63],
[74,68,59,64,72,0,54,60],
[62,54,67,71,74,77,0,60],
[64,61,59,62,68,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,55,55,57,51,59],
[71,0,67,70,58,61,61,65],
[72,64,0,65,60,60,58,64],
[76,61,66,0,59,49,55,58],
[76,73,71,72,0,65,66,69],
[74,70,71,82,66,0,63,74],
[80,70,73,76,65,68,0,71],
[72,66,67,73,62,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,70,69,81,76,68],
[67,0,68,71,66,70,60,66],
[60,63,0,55,51,71,64,55],
[61,60,76,0,67,68,65,53],
[62,65,80,64,0,69,71,64],
[50,61,60,63,62,0,50,48],
[55,71,67,66,60,81,0,61],
[63,65,76,78,67,83,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,74,65,64,65,69],
[72,0,69,79,76,62,74,71],
[61,62,0,70,66,58,62,60],
[57,52,61,0,70,51,53,59],
[66,55,65,61,0,48,54,68],
[67,69,73,80,83,0,64,76],
[66,57,69,78,77,67,0,79],
[62,60,71,72,63,55,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,51,66,63,65,72,67],
[50,0,48,59,55,54,62,60],
[80,83,0,70,79,62,79,76],
[65,72,61,0,64,75,74,78],
[68,76,52,67,0,62,74,68],
[66,77,69,56,69,0,72,73],
[59,69,52,57,57,59,0,61],
[64,71,55,53,63,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,70,70,76,77,66],
[68,0,62,76,71,71,70,72],
[64,69,0,71,75,71,73,67],
[61,55,60,0,69,55,70,67],
[61,60,56,62,0,66,71,71],
[55,60,60,76,65,0,78,72],
[54,61,58,61,60,53,0,60],
[65,59,64,64,60,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,60,69,63,60,60],
[63,0,74,75,71,68,62,59],
[61,57,0,67,65,70,69,56],
[71,56,64,0,71,66,66,57],
[62,60,66,60,0,53,60,58],
[68,63,61,65,78,0,63,66],
[71,69,62,65,71,68,0,65],
[71,72,75,74,73,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,68,68,61,65,47],
[68,0,61,68,70,61,63,53],
[65,70,0,70,69,65,71,56],
[63,63,61,0,66,67,59,48],
[63,61,62,65,0,63,60,58],
[70,70,66,64,68,0,63,57],
[66,68,60,72,71,68,0,67],
[84,78,75,83,73,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,62,77,63,63,66],
[72,0,64,64,78,63,67,69],
[61,67,0,67,70,69,72,63],
[69,67,64,0,71,57,67,66],
[54,53,61,60,0,53,65,61],
[68,68,62,74,78,0,68,66],
[68,64,59,64,66,63,0,66],
[65,62,68,65,70,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,66,63,68,65,65],
[58,0,68,56,64,65,59,72],
[58,63,0,68,62,58,63,69],
[65,75,63,0,70,67,75,70],
[68,67,69,61,0,64,69,63],
[63,66,73,64,67,0,73,72],
[66,72,68,56,62,58,0,63],
[66,59,62,61,68,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,55,62,54,58,64],
[68,0,50,51,62,53,65,54],
[78,81,0,52,62,71,77,65],
[76,80,79,0,64,76,73,70],
[69,69,69,67,0,57,74,59],
[77,78,60,55,74,0,79,52],
[73,66,54,58,57,52,0,51],
[67,77,66,61,72,79,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,65,56,83,68,77],
[54,0,73,57,44,64,61,58],
[61,58,0,76,63,76,83,65],
[66,74,55,0,59,74,64,53],
[75,87,68,72,0,71,71,58],
[48,67,55,57,60,0,65,47],
[63,70,48,67,60,66,0,74],
[54,73,66,78,73,84,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,74,46,64,53,49,47],
[52,0,63,47,63,51,35,38],
[57,68,0,42,70,55,65,53],
[85,84,89,0,94,68,65,67],
[67,68,61,37,0,43,54,42],
[78,80,76,63,88,0,64,78],
[82,96,66,66,77,67,0,61],
[84,93,78,64,89,53,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,60,78,69,52,72],
[67,0,69,77,62,65,58,77],
[72,62,0,59,57,67,55,72],
[71,54,72,0,61,81,57,59],
[53,69,74,70,0,73,60,76],
[62,66,64,50,58,0,69,77],
[79,73,76,74,71,62,0,74],
[59,54,59,72,55,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,69,66,65,66,65],
[70,0,50,73,73,79,58,75],
[63,81,0,76,70,78,79,88],
[62,58,55,0,63,76,58,73],
[65,58,61,68,0,73,91,67],
[66,52,53,55,58,0,85,69],
[65,73,52,73,40,46,0,40],
[66,56,43,58,64,62,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,82,73,66,57,73],
[68,0,55,88,75,73,67,69],
[63,76,0,81,72,78,67,70],
[49,43,50,0,59,68,44,62],
[58,56,59,72,0,66,48,62],
[65,58,53,63,65,0,58,59],
[74,64,64,87,83,73,0,72],
[58,62,61,69,69,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,67,61,68,68,67],
[63,0,66,69,57,71,68,65],
[63,65,0,66,56,68,71,58],
[64,62,65,0,55,66,69,64],
[70,74,75,76,0,72,73,65],
[63,60,63,65,59,0,70,55],
[63,63,60,62,58,61,0,61],
[64,66,73,67,66,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,72,70,80,62,62],
[58,0,64,63,68,71,52,66],
[65,67,0,68,61,74,51,58],
[59,68,63,0,78,66,53,70],
[61,63,70,53,0,64,54,49],
[51,60,57,65,67,0,61,59],
[69,79,80,78,77,70,0,61],
[69,65,73,61,82,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,65,70,73,65,68],
[65,0,76,74,80,77,81,80],
[64,55,0,64,73,70,66,72],
[66,57,67,0,71,78,76,70],
[61,51,58,60,0,65,65,62],
[58,54,61,53,66,0,61,68],
[66,50,65,55,66,70,0,69],
[63,51,59,61,69,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,55,65,66,60,58,57],
[69,0,60,59,75,60,57,56],
[76,71,0,66,77,64,78,63],
[66,72,65,0,74,59,57,54],
[65,56,54,57,0,49,59,47],
[71,71,67,72,82,0,63,67],
[73,74,53,74,72,68,0,61],
[74,75,68,77,84,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,59,84,78,62,67,83],
[50,0,63,73,70,52,58,74],
[72,68,0,67,61,57,63,84],
[47,58,64,0,71,38,53,70],
[53,61,70,60,0,51,62,76],
[69,79,74,93,80,0,64,83],
[64,73,68,78,69,67,0,84],
[48,57,47,61,55,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,69,64,71,69,66],
[58,0,66,60,54,60,61,61],
[58,65,0,68,63,57,60,68],
[62,71,63,0,52,62,62,66],
[67,77,68,79,0,62,61,77],
[60,71,74,69,69,0,57,74],
[62,70,71,69,70,74,0,66],
[65,70,63,65,54,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,79,97,70,110,92,98],
[67,0,69,84,60,100,75,34],
[52,62,0,31,93,71,83,28],
[34,47,100,0,82,122,72,72],
[61,71,38,49,0,49,75,41],
[21,31,60,9,82,0,65,34],
[39,56,48,59,56,66,0,52],
[33,97,103,59,90,97,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,62,65,74,77,66],
[54,0,62,52,65,57,63,58],
[59,69,0,62,55,62,77,65],
[69,79,69,0,67,73,75,63],
[66,66,76,64,0,70,67,58],
[57,74,69,58,61,0,71,55],
[54,68,54,56,64,60,0,56],
[65,73,66,68,73,76,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,72,73,63,73,71],
[59,0,69,64,68,64,66,68],
[61,62,0,55,69,64,71,66],
[59,67,76,0,77,69,83,76],
[58,63,62,54,0,63,64,69],
[68,67,67,62,68,0,68,69],
[58,65,60,48,67,63,0,60],
[60,63,65,55,62,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,55,63,52,64,68,71],
[85,0,63,74,74,58,83,77],
[76,68,0,65,63,64,81,73],
[68,57,66,0,65,63,72,82],
[79,57,68,66,0,67,66,83],
[67,73,67,68,64,0,70,81],
[63,48,50,59,65,61,0,67],
[60,54,58,49,48,50,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,62,77,64,60,80],
[64,0,68,81,91,50,66,70],
[63,63,0,76,69,77,66,83],
[69,50,55,0,78,52,57,72],
[54,40,62,53,0,46,52,78],
[67,81,54,79,85,0,69,88],
[71,65,65,74,79,62,0,74],
[51,61,48,59,53,43,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,58,68,75,78,80,77],
[54,0,62,69,61,62,74,76],
[73,69,0,71,71,64,84,77],
[63,62,60,0,43,75,63,70],
[56,70,60,88,0,66,68,62],
[53,69,67,56,65,0,73,65],
[51,57,47,68,63,58,0,51],
[54,55,54,61,69,66,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,33,61,33,40,46],
[70,0,91,76,80,39,61,68],
[81,40,0,62,79,79,57,49],
[98,55,69,0,76,60,59,58],
[70,51,52,55,0,56,47,47],
[98,92,52,71,75,0,70,59],
[91,70,74,72,84,61,0,51],
[85,63,82,73,84,72,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,81,63,63,71,66,77],
[56,0,76,86,67,88,92,95],
[50,55,0,66,67,71,47,68],
[68,45,65,0,58,66,56,76],
[68,64,64,73,0,79,79,74],
[60,43,60,65,52,0,52,79],
[65,39,84,75,52,79,0,99],
[54,36,63,55,57,52,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,77,64,56,65,68,63],
[58,0,51,56,47,67,59,52],
[54,80,0,63,70,71,66,72],
[67,75,68,0,54,69,76,64],
[75,84,61,77,0,71,69,63],
[66,64,60,62,60,0,67,59],
[63,72,65,55,62,64,0,63],
[68,79,59,67,68,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,64,70,69,65,64],
[61,0,62,70,66,68,57,60],
[72,69,0,71,73,72,68,59],
[67,61,60,0,71,69,62,67],
[61,65,58,60,0,61,58,57],
[62,63,59,62,70,0,54,59],
[66,74,63,69,73,77,0,70],
[67,71,72,64,74,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,64,67,69,67,58],
[61,0,68,72,76,73,62,67],
[54,63,0,62,71,67,55,50],
[67,59,69,0,63,66,61,59],
[64,55,60,68,0,76,57,60],
[62,58,64,65,55,0,53,59],
[64,69,76,70,74,78,0,67],
[73,64,81,72,71,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,58,55,65,62,57,58],
[76,0,69,62,78,71,67,69],
[73,62,0,62,73,60,71,63],
[76,69,69,0,77,65,68,69],
[66,53,58,54,0,62,65,66],
[69,60,71,66,69,0,72,65],
[74,64,60,63,66,59,0,68],
[73,62,68,62,65,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,79,59,56,62,70,54],
[53,0,53,51,56,50,42,63],
[52,78,0,52,52,55,59,68],
[72,80,79,0,66,58,75,63],
[75,75,79,65,0,66,58,65],
[69,81,76,73,65,0,71,73],
[61,89,72,56,73,60,0,53],
[77,68,63,68,66,58,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,62,59,66,60,77],
[58,0,60,62,62,62,68,70],
[64,71,0,67,65,65,70,72],
[69,69,64,0,64,73,66,71],
[72,69,66,67,0,63,70,72],
[65,69,66,58,68,0,63,70],
[71,63,61,65,61,68,0,68],
[54,61,59,60,59,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,74,81,76,70,67],
[66,0,64,77,79,70,70,69],
[65,67,0,69,75,71,66,64],
[57,54,62,0,73,65,67,65],
[50,52,56,58,0,67,66,59],
[55,61,60,66,64,0,65,67],
[61,61,65,64,65,66,0,65],
[64,62,67,66,72,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,62,67,65,65,60],
[61,0,73,66,67,64,61,67],
[55,58,0,57,52,81,73,64],
[69,65,74,0,77,67,78,54],
[64,64,79,54,0,71,53,54],
[66,67,50,64,60,0,70,58],
[66,70,58,53,78,61,0,45],
[71,64,67,77,77,73,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,64,71,77,58,76],
[64,0,63,64,70,70,59,73],
[65,68,0,68,72,77,61,74],
[67,67,63,0,70,73,68,69],
[60,61,59,61,0,72,58,69],
[54,61,54,58,59,0,57,65],
[73,72,70,63,73,74,0,74],
[55,58,57,62,62,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,62,62,72,66,64],
[71,0,65,67,75,81,73,64],
[74,66,0,73,71,75,63,71],
[69,64,58,0,69,65,70,66],
[69,56,60,62,0,67,64,66],
[59,50,56,66,64,0,67,61],
[65,58,68,61,67,64,0,63],
[67,67,60,65,65,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,75,87,47,76,86,70],
[67,0,59,90,56,77,84,65],
[56,72,0,68,69,79,75,62],
[44,41,63,0,53,46,65,62],
[84,75,62,78,0,70,79,63],
[55,54,52,85,61,0,84,65],
[45,47,56,66,52,47,0,40],
[61,66,69,69,68,66,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,60,73,66,77,75],
[65,0,61,46,64,67,66,65],
[62,70,0,55,61,63,66,62],
[71,85,76,0,58,73,84,69],
[58,67,70,73,0,64,79,68],
[65,64,68,58,67,0,71,70],
[54,65,65,47,52,60,0,68],
[56,66,69,62,63,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,62,61,60,63,60,63],
[57,0,64,61,55,55,59,59],
[69,67,0,63,68,62,59,63],
[70,70,68,0,67,63,64,64],
[71,76,63,64,0,60,62,65],
[68,76,69,68,71,0,59,71],
[71,72,72,67,69,72,0,63],
[68,72,68,67,66,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,62,69,65,58,70],
[63,0,79,67,69,70,66,67],
[69,52,0,69,74,62,65,73],
[69,64,62,0,51,61,55,63],
[62,62,57,80,0,71,62,71],
[66,61,69,70,60,0,50,63],
[73,65,66,76,69,81,0,74],
[61,64,58,68,60,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,58,71,58,63,67],
[73,0,63,64,66,65,60,67],
[65,68,0,70,61,67,74,80],
[73,67,61,0,72,66,70,69],
[60,65,70,59,0,61,71,72],
[73,66,64,65,70,0,76,70],
[68,71,57,61,60,55,0,69],
[64,64,51,62,59,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,45,61,56,50,68],
[67,0,57,55,71,59,66,61],
[70,74,0,46,72,65,73,68],
[86,76,85,0,66,53,100,85],
[70,60,59,65,0,69,62,76],
[75,72,66,78,62,0,64,56],
[81,65,58,31,69,67,0,63],
[63,70,63,46,55,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,77,62,74,78,72,61],
[51,0,66,74,69,80,65,71],
[54,65,0,50,73,69,57,54],
[69,57,81,0,77,82,69,53],
[57,62,58,54,0,73,68,53],
[53,51,62,49,58,0,62,40],
[59,66,74,62,63,69,0,50],
[70,60,77,78,78,91,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,109,94,70,59,59,59],
[37,0,19,85,89,81,70,70],
[22,112,0,81,74,81,70,66],
[37,46,50,0,74,81,66,66],
[61,42,57,57,0,7,7,7],
[72,50,50,50,124,0,7,7],
[72,61,61,65,124,124,0,120],
[72,61,65,65,124,124,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,84,65,52,66,67,69],
[66,0,83,71,64,69,75,78],
[47,48,0,47,43,48,42,54],
[66,60,84,0,59,66,77,65],
[79,67,88,72,0,69,64,63],
[65,62,83,65,62,0,73,66],
[64,56,89,54,67,58,0,79],
[62,53,77,66,68,65,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,59,67,75,68,76],
[68,0,63,67,52,61,62,73],
[69,68,0,59,68,68,68,73],
[72,64,72,0,65,70,72,71],
[64,79,63,66,0,68,67,73],
[56,70,63,61,63,0,67,72],
[63,69,63,59,64,64,0,69],
[55,58,58,60,58,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,62,59,51,47,59],
[80,0,71,78,65,74,75,68],
[80,60,0,70,60,71,86,49],
[69,53,61,0,65,57,63,55],
[72,66,71,66,0,63,57,54],
[80,57,60,74,68,0,74,54],
[84,56,45,68,74,57,0,68],
[72,63,82,76,77,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,70,58,62,70,55],
[66,0,55,69,55,70,76,65],
[62,76,0,61,73,66,71,64],
[61,62,70,0,70,68,59,71],
[73,76,58,61,0,74,68,74],
[69,61,65,63,57,0,65,61],
[61,55,60,72,63,66,0,58],
[76,66,67,60,57,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,54,58,64,61,70,63],
[63,0,63,60,67,64,63,66],
[77,68,0,69,65,71,71,73],
[73,71,62,0,65,69,72,62],
[67,64,66,66,0,70,69,63],
[70,67,60,62,61,0,70,62],
[61,68,60,59,62,61,0,64],
[68,65,58,69,68,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,57,60,64,63,58],
[67,0,67,71,62,77,78,67],
[60,64,0,60,60,76,80,68],
[74,60,71,0,68,69,82,73],
[71,69,71,63,0,82,81,63],
[67,54,55,62,49,0,71,58],
[68,53,51,49,50,60,0,67],
[73,64,63,58,68,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,61,54,55,55,63],
[67,0,59,71,64,53,71,67],
[59,72,0,63,62,51,57,74],
[70,60,68,0,65,63,68,75],
[77,67,69,66,0,59,63,82],
[76,78,80,68,72,0,64,75],
[76,60,74,63,68,67,0,72],
[68,64,57,56,49,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,80,54,74,67,60,81],
[58,0,78,58,70,85,67,85],
[51,53,0,63,64,42,58,59],
[77,73,68,0,57,42,49,60],
[57,61,67,74,0,88,82,71],
[64,46,89,89,43,0,53,68],
[71,64,73,82,49,78,0,67],
[50,46,72,71,60,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,61,65,71,59,66],
[72,0,50,90,79,71,62,72],
[71,81,0,73,73,65,64,65],
[70,41,58,0,78,55,62,65],
[66,52,58,53,0,69,65,66],
[60,60,66,76,62,0,64,66],
[72,69,67,69,66,67,0,65],
[65,59,66,66,65,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,53,75,85,98,78,84],
[48,0,75,64,67,69,64,61],
[78,56,0,85,75,79,75,72],
[56,67,46,0,65,45,87,58],
[46,64,56,66,0,64,88,64],
[33,62,52,86,67,0,66,43],
[53,67,56,44,43,65,0,53],
[47,70,59,73,67,88,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,84,80,62,86,69,96],
[52,0,61,63,84,51,52,86],
[47,70,0,64,56,53,38,84],
[51,68,67,0,51,76,58,82],
[69,47,75,80,0,76,47,77],
[45,80,78,55,55,0,56,88],
[62,79,93,73,84,75,0,90],
[35,45,47,49,54,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,60,60,73,87,64],
[68,0,68,84,66,62,77,69],
[64,63,0,95,82,70,85,79],
[71,47,36,0,63,55,69,59],
[71,65,49,68,0,49,62,74],
[58,69,61,76,82,0,83,70],
[44,54,46,62,69,48,0,53],
[67,62,52,72,57,61,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,62,70,63,65,77],
[56,0,64,58,65,62,62,60],
[58,67,0,67,68,66,66,73],
[69,73,64,0,65,68,69,72],
[61,66,63,66,0,71,63,65],
[68,69,65,63,60,0,64,70],
[66,69,65,62,68,67,0,67],
[54,71,58,59,66,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,87,76,55,65,69,76],
[53,0,76,56,50,56,59,70],
[44,55,0,57,39,42,71,59],
[55,75,74,0,61,65,64,60],
[76,81,92,70,0,69,75,63],
[66,75,89,66,62,0,72,72],
[62,72,60,67,56,59,0,68],
[55,61,72,71,68,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,62,60,62,56,55,64],
[55,0,49,65,57,49,52,54],
[69,82,0,62,68,68,63,68],
[71,66,69,0,65,53,65,70],
[69,74,63,66,0,67,60,63],
[75,82,63,78,64,0,71,64],
[76,79,68,66,71,60,0,68],
[67,77,63,61,68,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,65,60,66,72,63],
[64,0,69,67,63,71,71,65],
[75,62,0,73,58,66,73,70],
[66,64,58,0,63,65,66,63],
[71,68,73,68,0,75,74,65],
[65,60,65,66,56,0,65,60],
[59,60,58,65,57,66,0,55],
[68,66,61,68,66,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,78,70,69,80,79,60],
[56,0,63,56,61,57,62,59],
[53,68,0,61,66,64,66,62],
[61,75,70,0,63,68,74,58],
[62,70,65,68,0,72,74,66],
[51,74,67,63,59,0,69,65],
[52,69,65,57,57,62,0,58],
[71,72,69,73,65,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,71,63,62,59,63],
[63,0,59,66,64,64,55,60],
[72,72,0,70,54,81,66,64],
[60,65,61,0,58,64,79,58],
[68,67,77,73,0,86,59,50],
[69,67,50,67,45,0,55,62],
[72,76,65,52,72,76,0,68],
[68,71,67,73,81,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,43,56,15,45,47,69],
[72,0,62,55,22,39,39,59],
[88,69,0,55,55,61,61,96],
[75,76,76,0,42,57,74,62],
[116,109,76,89,0,65,73,85],
[86,92,70,74,66,0,39,76],
[84,92,70,57,58,92,0,68],
[62,72,35,69,46,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,68,63,63,60,58],
[74,0,72,74,69,72,64,69],
[66,59,0,73,47,69,63,68],
[63,57,58,0,61,64,58,78],
[68,62,84,70,0,77,68,74],
[68,59,62,67,54,0,59,76],
[71,67,68,73,63,72,0,69],
[73,62,63,53,57,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,56,53,54,68,57,63],
[70,0,66,61,57,68,57,63],
[75,65,0,62,60,69,62,67],
[78,70,69,0,58,72,70,60],
[77,74,71,73,0,65,66,64],
[63,63,62,59,66,0,59,64],
[74,74,69,61,65,72,0,70],
[68,68,64,71,67,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,63,68,78,71,68,76],
[51,0,66,68,64,69,72,68],
[68,65,0,69,66,72,69,82],
[63,63,62,0,72,51,52,77],
[53,67,65,59,0,56,60,71],
[60,62,59,80,75,0,68,73],
[63,59,62,79,71,63,0,82],
[55,63,49,54,60,58,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,67,60,54,58,64],
[65,0,72,67,57,46,58,65],
[65,59,0,57,56,53,55,62],
[64,64,74,0,57,58,65,68],
[71,74,75,74,0,60,66,75],
[77,85,78,73,71,0,65,84],
[73,73,76,66,65,66,0,76],
[67,66,69,63,56,47,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,46,40,61,30,40,51],
[62,0,79,39,63,52,53,59],
[85,52,0,61,91,30,31,42],
[91,92,70,0,72,59,66,73],
[70,68,40,59,0,52,56,52],
[101,79,101,72,79,0,64,66],
[91,78,100,65,75,67,0,82],
[80,72,89,58,79,65,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,56,61,66,58,59],
[67,0,59,63,64,68,62,60],
[68,72,0,64,70,67,62,67],
[75,68,67,0,69,63,63,70],
[70,67,61,62,0,70,62,63],
[65,63,64,68,61,0,63,53],
[73,69,69,68,69,68,0,61],
[72,71,64,61,68,78,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,61,69,79,78,67,72],
[51,0,45,56,67,67,65,60],
[70,86,0,63,77,67,69,70],
[62,75,68,0,74,70,74,75],
[52,64,54,57,0,62,59,62],
[53,64,64,61,69,0,62,68],
[64,66,62,57,72,69,0,65],
[59,71,61,56,69,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,78,60,58,57,57],
[72,0,57,68,62,71,60,67],
[64,74,0,66,72,61,62,72],
[53,63,65,0,60,53,70,57],
[71,69,59,71,0,81,64,78],
[73,60,70,78,50,0,75,74],
[74,71,69,61,67,56,0,74],
[74,64,59,74,53,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,94,59,123,64,74,86],
[37,0,49,49,86,74,47,59],
[37,82,0,74,37,74,47,37],
[72,82,57,0,64,74,74,86],
[8,45,94,67,0,45,55,49],
[67,57,57,57,86,0,69,49],
[57,84,84,57,76,62,0,49],
[45,72,94,45,82,82,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,61,69,63,62,54,65],
[86,0,71,70,59,66,70,69],
[70,60,0,67,49,68,65,65],
[62,61,64,0,61,64,60,68],
[68,72,82,70,0,75,72,64],
[69,65,63,67,56,0,68,56],
[77,61,66,71,59,63,0,66],
[66,62,66,63,67,75,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,70,76,71,56,65],
[68,0,72,63,70,58,72,65],
[60,59,0,71,69,62,55,64],
[61,68,60,0,63,58,59,68],
[55,61,62,68,0,73,58,73],
[60,73,69,73,58,0,59,61],
[75,59,76,72,73,72,0,69],
[66,66,67,63,58,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,51,55,53,62,62],
[74,0,68,62,67,69,64,60],
[79,63,0,75,72,71,70,66],
[80,69,56,0,67,66,67,66],
[76,64,59,64,0,70,68,60],
[78,62,60,65,61,0,62,64],
[69,67,61,64,63,69,0,63],
[69,71,65,65,71,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,44,71,43,45,55,34],
[70,0,73,102,65,88,84,58],
[87,58,0,73,64,78,88,65],
[60,29,58,0,40,51,67,39],
[88,66,67,91,0,71,64,76],
[86,43,53,80,60,0,72,51],
[76,47,43,64,67,59,0,63],
[97,73,66,92,55,80,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,77,74,67,64,64],
[70,0,63,64,62,61,69,66],
[64,68,0,68,74,75,69,65],
[54,67,63,0,69,70,69,61],
[57,69,57,62,0,58,68,69],
[64,70,56,61,73,0,64,69],
[67,62,62,62,63,67,0,67],
[67,65,66,70,62,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,69,65,71,67,68],
[63,0,65,59,62,65,66,60],
[59,66,0,61,62,65,72,60],
[62,72,70,0,72,70,79,67],
[66,69,69,59,0,75,74,65],
[60,66,66,61,56,0,65,66],
[64,65,59,52,57,66,0,66],
[63,71,71,64,66,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,131,94,37,53,90,37],
[41,0,41,94,41,94,94,41],
[0,90,0,94,37,53,90,37],
[37,37,37,0,37,90,37,37],
[94,90,94,94,0,53,53,94],
[78,37,78,41,78,0,37,78],
[41,37,41,94,78,94,0,41],
[94,90,94,94,37,53,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,74,58,67,76,68],
[70,0,69,71,75,79,79,63],
[63,62,0,61,72,73,68,65],
[57,60,70,0,63,75,72,63],
[73,56,59,68,0,79,54,61],
[64,52,58,56,52,0,59,59],
[55,52,63,59,77,72,0,73],
[63,68,66,68,70,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,49,59,64,59,56,69],
[60,0,60,62,61,63,49,66],
[82,71,0,62,63,66,60,62],
[72,69,69,0,67,65,71,80],
[67,70,68,64,0,70,69,74],
[72,68,65,66,61,0,56,75],
[75,82,71,60,62,75,0,68],
[62,65,69,51,57,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,52,73,53,67,76],
[62,0,45,43,45,43,36,21],
[74,86,0,72,54,78,70,82],
[79,88,59,0,87,64,79,42],
[58,86,77,44,0,70,42,45],
[78,88,53,67,61,0,53,103],
[64,95,61,52,89,78,0,65],
[55,110,49,89,86,28,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,57,57,67,61,63],
[78,0,62,67,72,72,69,69],
[66,69,0,65,68,72,63,79],
[74,64,66,0,75,78,71,76],
[74,59,63,56,0,67,68,65],
[64,59,59,53,64,0,64,75],
[70,62,68,60,63,67,0,66],
[68,62,52,55,66,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,55,69,71,59,69],
[65,0,59,50,76,61,59,62],
[73,72,0,66,72,76,64,68],
[76,81,65,0,81,72,71,72],
[62,55,59,50,0,58,54,61],
[60,70,55,59,73,0,67,66],
[72,72,67,60,77,64,0,66],
[62,69,63,59,70,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,63,71,69,68,64],
[57,0,65,67,61,65,59,62],
[67,66,0,68,57,53,77,78],
[68,64,63,0,62,56,75,63],
[60,70,74,69,0,68,69,76],
[62,66,78,75,63,0,78,74],
[63,72,54,56,62,53,0,68],
[67,69,53,68,55,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,72,75,56,61,56],
[65,0,65,66,56,43,55,53],
[73,66,0,72,63,56,64,62],
[59,65,59,0,59,50,64,51],
[56,75,68,72,0,54,56,59],
[75,88,75,81,77,0,63,77],
[70,76,67,67,75,68,0,63],
[75,78,69,80,72,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,74,62,74,68,70,63],
[68,0,61,66,69,65,74,54],
[57,70,0,59,70,75,66,67],
[69,65,72,0,72,80,74,61],
[57,62,61,59,0,66,63,57],
[63,66,56,51,65,0,71,55],
[61,57,65,57,68,60,0,54],
[68,77,64,70,74,76,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,56,62,60,70,60],
[72,0,70,62,64,68,74,58],
[71,61,0,68,74,63,70,55],
[75,69,63,0,76,68,68,67],
[69,67,57,55,0,51,62,60],
[71,63,68,63,80,0,72,67],
[61,57,61,63,69,59,0,48],
[71,73,76,64,71,64,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,70,61,64,69,77],
[57,0,62,64,61,59,60,72],
[60,69,0,73,64,61,69,69],
[61,67,58,0,59,57,67,62],
[70,70,67,72,0,63,69,74],
[67,72,70,74,68,0,62,72],
[62,71,62,64,62,69,0,70],
[54,59,62,69,57,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,68,61,69,55,64],
[71,0,77,70,62,62,67,73],
[65,54,0,64,58,57,56,60],
[63,61,67,0,65,59,60,61],
[70,69,73,66,0,61,69,66],
[62,69,74,72,70,0,73,67],
[76,64,75,71,62,58,0,71],
[67,58,71,70,65,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,61,62,66,55,66,38],
[83,0,69,67,77,58,81,74],
[70,62,0,70,64,68,67,53],
[69,64,61,0,70,56,71,64],
[65,54,67,61,0,52,65,57],
[76,73,63,75,79,0,79,68],
[65,50,64,60,66,52,0,54],
[93,57,78,67,74,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,78,71,84,64,77,67],
[57,0,64,69,75,64,64,69],
[53,67,0,71,83,72,66,62],
[60,62,60,0,74,61,57,59],
[47,56,48,57,0,56,48,42],
[67,67,59,70,75,0,71,66],
[54,67,65,74,83,60,0,66],
[64,62,69,72,89,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,45,70,71,88,87,64],
[59,0,69,89,68,102,71,67],
[86,62,0,95,63,86,86,74],
[61,42,36,0,51,65,74,56],
[60,63,68,80,0,76,78,67],
[43,29,45,66,55,0,61,50],
[44,60,45,57,53,70,0,50],
[67,64,57,75,64,81,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,68,67,60,62,68],
[68,0,61,76,56,56,56,75],
[73,70,0,78,75,62,69,69],
[63,55,53,0,50,54,61,57],
[64,75,56,81,0,68,67,79],
[71,75,69,77,63,0,70,76],
[69,75,62,70,64,61,0,73],
[63,56,62,74,52,55,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,68,80,71,54,64],
[63,0,69,65,66,57,65,66],
[61,62,0,70,81,71,74,72],
[63,66,61,0,66,52,62,60],
[51,65,50,65,0,63,74,63],
[60,74,60,79,68,0,69,68],
[77,66,57,69,57,62,0,65],
[67,65,59,71,68,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,84,71,68,85,63,70],
[62,0,68,70,63,65,50,60],
[47,63,0,54,57,54,63,58],
[60,61,77,0,73,76,71,67],
[63,68,74,58,0,67,64,62],
[46,66,77,55,64,0,60,67],
[68,81,68,60,67,71,0,70],
[61,71,73,64,69,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,66,71,61,74,85,76],
[47,0,63,63,58,67,62,68],
[65,68,0,57,73,69,79,78],
[60,68,74,0,55,72,78,79],
[70,73,58,76,0,83,69,92],
[57,64,62,59,48,0,66,73],
[46,69,52,53,62,65,0,68],
[55,63,53,52,39,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,66,74,61,65,72],
[67,0,63,70,64,72,62,57],
[68,68,0,61,74,74,66,75],
[65,61,70,0,72,81,64,71],
[57,67,57,59,0,75,61,72],
[70,59,57,50,56,0,56,55],
[66,69,65,67,70,75,0,59],
[59,74,56,60,59,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,73,69,65,61,77],
[68,0,74,67,68,73,63,78],
[68,57,0,67,63,72,68,70],
[58,64,64,0,63,64,61,72],
[62,63,68,68,0,73,61,81],
[66,58,59,67,58,0,61,75],
[70,68,63,70,70,70,0,76],
[54,53,61,59,50,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,48,66,83,64,57,75],
[58,0,46,55,90,53,44,70],
[83,85,0,78,99,64,67,90],
[65,76,53,0,91,85,52,82],
[48,41,32,40,0,43,17,47],
[67,78,67,46,88,0,38,70],
[74,87,64,79,114,93,0,98],
[56,61,41,49,84,61,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,51,63,68,58,58,56],
[56,0,44,46,39,39,42,50],
[80,87,0,60,74,59,71,75],
[68,85,71,0,73,54,65,69],
[63,92,57,58,0,59,59,59],
[73,92,72,77,72,0,62,74],
[73,89,60,66,72,69,0,73],
[75,81,56,62,72,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,106,75,81,65,104,100],
[73,0,97,36,75,83,81,77],
[25,34,0,27,34,43,33,53],
[56,95,104,0,75,80,78,89],
[50,56,97,56,0,59,83,63],
[66,48,88,51,72,0,76,82],
[27,50,98,53,48,55,0,52],
[31,54,78,42,68,49,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,69,62,66,64,61],
[69,0,63,65,61,66,63,62],
[67,68,0,64,60,61,63,62],
[62,66,67,0,66,62,67,61],
[69,70,71,65,0,61,60,64],
[65,65,70,69,70,0,69,70],
[67,68,68,64,71,62,0,66],
[70,69,69,70,67,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,54,53,54,60,52,57],
[63,0,64,67,55,61,61,59],
[77,67,0,67,58,62,64,69],
[78,64,64,0,61,68,61,62],
[77,76,73,70,0,71,64,72],
[71,70,69,63,60,0,65,62],
[79,70,67,70,67,66,0,61],
[74,72,62,69,59,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,0,0,0,66,4,65],
[95,0,32,30,0,66,4,29],
[131,99,0,95,95,102,63,95],
[131,101,36,0,101,102,65,97],
[131,131,36,30,0,66,95,95],
[65,65,29,29,65,0,33,65],
[127,127,68,66,36,98,0,65],
[66,102,36,34,36,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,81,70,79,79,73,57],
[58,0,72,77,73,78,99,34],
[50,59,0,73,63,64,74,58],
[61,54,58,0,72,71,97,40],
[52,58,68,59,0,68,79,78],
[52,53,67,60,63,0,65,50],
[58,32,57,34,52,66,0,54],
[74,97,73,91,53,81,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,91,74,31,73,45,74],
[72,0,118,90,90,73,79,61],
[40,13,0,42,31,41,31,60],
[57,41,89,0,57,73,59,102],
[100,41,100,74,0,55,55,102],
[58,58,90,58,76,0,76,47],
[86,52,100,72,76,55,0,102],
[57,70,71,29,29,84,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,93,95,79,70,67,35],
[38,0,86,88,74,42,70,35],
[38,45,0,61,49,47,70,38],
[36,43,70,0,26,70,103,38],
[52,57,82,105,0,49,82,68],
[61,89,84,61,82,0,70,68],
[64,61,61,28,49,61,0,58],
[96,96,93,93,63,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,61,83,74,74,67],
[56,0,72,70,88,55,78,67],
[52,59,0,53,47,60,65,57],
[70,61,78,0,84,61,90,49],
[48,43,84,47,0,59,59,63],
[57,76,71,70,72,0,87,75],
[57,53,66,41,72,44,0,47],
[64,64,74,82,68,56,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,37,72,71,70,65],
[71,0,69,52,72,77,73,75],
[68,62,0,46,71,55,64,81],
[94,79,85,0,66,85,61,83],
[59,59,60,65,0,81,47,61],
[60,54,76,46,50,0,58,60],
[61,58,67,70,84,73,0,58],
[66,56,50,48,70,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,84,72,68,72,71],
[68,0,77,73,70,66,70,65],
[69,54,0,66,70,72,67,59],
[47,58,65,0,59,54,44,54],
[59,61,61,72,0,62,63,59],
[63,65,59,77,69,0,49,66],
[59,61,64,87,68,82,0,72],
[60,66,72,77,72,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,87,81,73,74,72,63],
[47,0,56,74,45,60,48,62],
[44,75,0,42,50,59,51,43],
[50,57,89,0,55,60,39,61],
[58,86,81,76,0,72,52,84],
[57,71,72,71,59,0,52,56],
[59,83,80,92,79,79,0,56],
[68,69,88,70,47,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,66,60,58,62,70],
[67,0,60,71,75,68,75,68],
[64,71,0,69,78,62,63,68],
[65,60,62,0,74,71,62,68],
[71,56,53,57,0,62,56,70],
[73,63,69,60,69,0,74,68],
[69,56,68,69,75,57,0,73],
[61,63,63,63,61,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,63,71,47,65,60],
[61,0,58,59,68,55,68,61],
[68,73,0,58,83,63,75,64],
[68,72,73,0,78,71,73,63],
[60,63,48,53,0,53,66,67],
[84,76,68,60,78,0,77,63],
[66,63,56,58,65,54,0,61],
[71,70,67,68,64,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,63,71,76,75,59,67],
[52,0,58,74,60,78,47,62],
[68,73,0,81,74,75,61,74],
[60,57,50,0,63,75,48,67],
[55,71,57,68,0,71,67,71],
[56,53,56,56,60,0,52,61],
[72,84,70,83,64,79,0,60],
[64,69,57,64,60,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,68,57,56,56,69],
[66,0,79,72,51,62,60,66],
[67,52,0,61,56,51,50,45],
[63,59,70,0,69,58,54,47],
[74,80,75,62,0,55,54,64],
[75,69,80,73,76,0,61,65],
[75,71,81,77,77,70,0,62],
[62,65,86,84,67,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,64,66,60,58,76,72],
[54,0,53,48,51,56,67,58],
[67,78,0,66,51,57,73,70],
[65,83,65,0,62,55,73,64],
[71,80,80,69,0,59,74,74],
[73,75,74,76,72,0,62,77],
[55,64,58,58,57,69,0,63],
[59,73,61,67,57,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,60,72,74,63,58],
[75,0,63,73,86,72,66,68],
[64,68,0,75,79,65,73,74],
[71,58,56,0,59,59,59,64],
[59,45,52,72,0,54,60,53],
[57,59,66,72,77,0,58,56],
[68,65,58,72,71,73,0,78],
[73,63,57,67,78,75,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,77,61,70,71,62],
[67,0,85,86,64,94,86,67],
[57,46,0,54,57,71,65,56],
[54,45,77,0,61,62,58,57],
[70,67,74,70,0,71,71,54],
[61,37,60,69,60,0,77,52],
[60,45,66,73,60,54,0,56],
[69,64,75,74,77,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,53,74,79,88,63,73],
[48,0,66,79,61,72,50,43],
[78,65,0,70,45,73,66,63],
[57,52,61,0,54,44,55,43],
[52,70,86,77,0,80,43,62],
[43,59,58,87,51,0,58,86],
[68,81,65,76,88,73,0,66],
[58,88,68,88,69,45,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,46,63,54,74,79,63],
[72,0,68,67,60,84,89,75],
[85,63,0,56,68,85,89,56],
[68,64,75,0,83,80,73,69],
[77,71,63,48,0,87,69,59],
[57,47,46,51,44,0,63,43],
[52,42,42,58,62,68,0,57],
[68,56,75,62,72,88,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,77,64,71,58,66],
[63,0,60,70,54,71,63,64],
[63,71,0,65,65,73,57,67],
[54,61,66,0,66,65,62,60],
[67,77,66,65,0,76,64,63],
[60,60,58,66,55,0,66,66],
[73,68,74,69,67,65,0,67],
[65,67,64,71,68,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,58,71,68,69,66],
[58,0,61,59,56,47,72,60],
[69,70,0,66,66,63,66,62],
[73,72,65,0,64,74,75,69],
[60,75,65,67,0,64,69,72],
[63,84,68,57,67,0,71,61],
[62,59,65,56,62,60,0,58],
[65,71,69,62,59,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,61,64,59,65,67],
[65,0,60,56,63,58,65,69],
[67,71,0,55,73,66,67,71],
[70,75,76,0,72,64,79,70],
[67,68,58,59,0,60,69,66],
[72,73,65,67,71,0,72,72],
[66,66,64,52,62,59,0,59],
[64,62,60,61,65,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,101,68,60,58,66,89,58],
[30,0,48,28,41,27,62,40],
[63,83,0,54,62,62,82,85],
[71,103,77,0,56,77,114,71],
[73,90,69,75,0,72,100,63],
[65,104,69,54,59,0,78,83],
[42,69,49,17,31,53,0,52],
[73,91,46,60,68,48,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,64,72,67,73,64,66],
[55,0,52,71,59,63,52,54],
[67,79,0,65,60,77,66,68],
[59,60,66,0,57,68,62,60],
[64,72,71,74,0,74,65,60],
[58,68,54,63,57,0,55,64],
[67,79,65,69,66,76,0,61],
[65,77,63,71,71,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,61,56,45,48,61,52],
[86,0,66,71,66,60,75,68],
[70,65,0,67,57,66,73,63],
[75,60,64,0,62,52,62,71],
[86,65,74,69,0,66,81,48],
[83,71,65,79,65,0,83,63],
[70,56,58,69,50,48,0,65],
[79,63,68,60,83,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,45,65,63,63,63],
[69,0,77,68,69,66,80,65],
[58,54,0,59,52,61,65,52],
[86,63,72,0,64,69,76,77],
[66,62,79,67,0,72,80,63],
[68,65,70,62,59,0,84,66],
[68,51,66,55,51,47,0,61],
[68,66,79,54,68,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,69,66,64,63,65],
[58,0,53,55,57,58,57,59],
[65,78,0,59,61,63,67,66],
[62,76,72,0,69,69,72,69],
[65,74,70,62,0,65,67,68],
[67,73,68,62,66,0,64,73],
[68,74,64,59,64,67,0,63],
[66,72,65,62,63,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,58,62,76,66,65],
[61,0,52,47,45,76,64,55],
[73,79,0,61,69,69,59,62],
[73,84,70,0,57,85,79,64],
[69,86,62,74,0,81,60,65],
[55,55,62,46,50,0,43,54],
[65,67,72,52,71,88,0,69],
[66,76,69,67,66,77,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,116,116,83,41,41,83,41],
[15,0,75,42,0,4,0,0],
[15,56,0,41,56,4,0,45],
[48,89,90,0,89,48,11,78],
[90,131,75,42,0,4,42,0],
[90,127,127,83,127,0,42,41],
[48,131,131,120,89,89,0,78],
[90,131,86,53,131,90,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,76,67,64,75,71],
[54,0,60,59,61,66,66,61],
[64,71,0,67,61,62,73,68],
[55,72,64,0,67,69,76,66],
[64,70,70,64,0,62,76,71],
[67,65,69,62,69,0,67,63],
[56,65,58,55,55,64,0,64],
[60,70,63,65,60,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,59,54,67,48,58],
[70,0,38,65,71,80,71,52],
[65,93,0,100,76,81,77,67],
[72,66,31,0,55,79,55,64],
[77,60,55,76,0,71,44,56],
[64,51,50,52,60,0,42,45],
[83,60,54,76,87,89,0,65],
[73,79,64,67,75,86,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,63,60,62,61,67],
[76,0,62,69,57,56,72,64],
[74,69,0,71,55,64,67,75],
[68,62,60,0,57,66,76,65],
[71,74,76,74,0,61,76,70],
[69,75,67,65,70,0,64,59],
[70,59,64,55,55,67,0,60],
[64,67,56,66,61,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,76,65,63,70,62],
[62,0,57,81,69,60,71,69],
[64,74,0,80,74,70,71,72],
[55,50,51,0,58,55,57,52],
[66,62,57,73,0,60,75,59],
[68,71,61,76,71,0,70,65],
[61,60,60,74,56,61,0,62],
[69,62,59,79,72,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,64,60,62,55,64],
[69,0,73,71,55,71,53,65],
[71,58,0,74,59,64,59,59],
[67,60,57,0,58,58,59,57],
[71,76,72,73,0,60,56,59],
[69,60,67,73,71,0,66,56],
[76,78,72,72,75,65,0,67],
[67,66,72,74,72,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,68,69,68,69,64],
[59,0,67,63,69,69,69,52],
[71,64,0,68,68,71,65,66],
[63,68,63,0,73,68,69,54],
[62,62,63,58,0,68,61,56],
[63,62,60,63,63,0,68,55],
[62,62,66,62,70,63,0,55],
[67,79,65,77,75,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,47,62,59,55,54],
[72,0,69,57,69,64,61,65],
[75,62,0,54,65,63,67,66],
[84,74,77,0,69,74,72,65],
[69,62,66,62,0,67,69,57],
[72,67,68,57,64,0,65,62],
[76,70,64,59,62,66,0,64],
[77,66,65,66,74,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,65,80,60,54,74],
[59,0,64,66,76,58,64,72],
[58,67,0,65,80,55,68,72],
[66,65,66,0,72,65,59,66],
[51,55,51,59,0,57,53,58],
[71,73,76,66,74,0,57,67],
[77,67,63,72,78,74,0,72],
[57,59,59,65,73,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,67,61,56,66,56,58],
[75,0,69,63,59,74,69,70],
[64,62,0,56,55,64,58,58],
[70,68,75,0,63,67,63,66],
[75,72,76,68,0,81,65,74],
[65,57,67,64,50,0,54,57],
[75,62,73,68,66,77,0,65],
[73,61,73,65,57,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,54,61,63,61,58,72],
[70,0,57,69,70,64,62,80],
[77,74,0,78,77,74,56,75],
[70,62,53,0,63,60,65,70],
[68,61,54,68,0,58,51,68],
[70,67,57,71,73,0,68,82],
[73,69,75,66,80,63,0,80],
[59,51,56,61,63,49,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,59,66,61,67,57],
[69,0,62,57,66,60,68,58],
[73,69,0,64,69,61,73,70],
[72,74,67,0,69,64,72,60],
[65,65,62,62,0,62,59,58],
[70,71,70,67,69,0,61,61],
[64,63,58,59,72,70,0,65],
[74,73,61,71,73,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,69,45,61,65,66,69],
[48,0,51,48,51,54,50,60],
[62,80,0,52,60,70,60,66],
[86,83,79,0,76,73,64,77],
[70,80,71,55,0,78,60,73],
[66,77,61,58,53,0,64,67],
[65,81,71,67,71,67,0,73],
[62,71,65,54,58,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,65,66,67,63,61],
[66,0,66,63,63,60,63,64],
[72,65,0,66,72,68,62,62],
[66,68,65,0,65,65,60,57],
[65,68,59,66,0,66,64,60],
[64,71,63,66,65,0,68,70],
[68,68,69,71,67,63,0,64],
[70,67,69,74,71,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,71,56,69,65,68],
[67,0,68,68,61,64,66,63],
[67,63,0,63,57,60,57,50],
[60,63,68,0,56,59,61,53],
[75,70,74,75,0,62,66,67],
[62,67,71,72,69,0,74,73],
[66,65,74,70,65,57,0,61],
[63,68,81,78,64,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,71,64,66,67,68],
[64,0,74,81,74,73,75,72],
[63,57,0,69,63,67,67,63],
[60,50,62,0,59,63,59,61],
[67,57,68,72,0,72,74,62],
[65,58,64,68,59,0,69,55],
[64,56,64,72,57,62,0,60],
[63,59,68,70,69,76,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,62,64,66,67,70],
[65,0,66,60,66,66,67,69],
[59,65,0,63,61,67,69,63],
[69,71,68,0,58,67,71,71],
[67,65,70,73,0,72,69,67],
[65,65,64,64,59,0,66,61],
[64,64,62,60,62,65,0,59],
[61,62,68,60,64,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,58,78,109,131,98,125],
[38,0,73,93,85,107,66,72],
[73,58,0,38,71,88,72,115],
[53,38,93,0,37,82,43,93],
[22,46,60,94,0,130,46,81],
[0,24,43,49,1,0,8,64],
[33,65,59,88,85,123,0,96],
[6,59,16,38,50,67,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,66,60,61,67,84],
[64,0,62,67,60,69,61,76],
[60,69,0,58,62,60,60,72],
[65,64,73,0,60,64,80,75],
[71,71,69,71,0,65,74,82],
[70,62,71,67,66,0,66,76],
[64,70,71,51,57,65,0,76],
[47,55,59,56,49,55,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,78,86,74,86,40,80],
[53,0,85,72,72,49,26,99],
[53,46,0,56,59,43,39,60],
[45,59,75,0,92,80,55,67],
[57,59,72,39,0,43,39,49],
[45,82,88,51,88,0,75,109],
[91,105,92,76,92,56,0,92],
[51,32,71,64,82,22,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,64,69,77,68,73],
[62,0,75,68,60,66,68,82],
[60,56,0,48,53,58,71,73],
[67,63,83,0,66,64,73,70],
[62,71,78,65,0,80,80,79],
[54,65,73,67,51,0,55,66],
[63,63,60,58,51,76,0,78],
[58,49,58,61,52,65,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,60,54,68,62,56],
[69,0,65,72,61,71,64,64],
[67,66,0,68,63,69,65,66],
[71,59,63,0,63,66,58,65],
[77,70,68,68,0,72,68,64],
[63,60,62,65,59,0,67,57],
[69,67,66,73,63,64,0,69],
[75,67,65,66,67,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,59,62,69,60,66],
[70,0,64,50,62,65,64,59],
[60,67,0,57,73,63,68,59],
[72,81,74,0,85,70,58,60],
[69,69,58,46,0,65,56,55],
[62,66,68,61,66,0,51,52],
[71,67,63,73,75,80,0,64],
[65,72,72,71,76,79,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,56,68,58,69,69],
[66,0,67,66,68,60,75,57],
[58,64,0,62,64,61,74,66],
[75,65,69,0,70,62,67,67],
[63,63,67,61,0,59,70,64],
[73,71,70,69,72,0,71,61],
[62,56,57,64,61,60,0,57],
[62,74,65,64,67,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,55,34,51,36,31,41],
[95,0,80,71,63,80,60,68],
[76,51,0,59,46,47,54,62],
[97,60,72,0,58,54,53,70],
[80,68,85,73,0,67,70,62],
[95,51,84,77,64,0,54,69],
[100,71,77,78,61,77,0,78],
[90,63,69,61,69,62,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,65,72,72,69,68],
[60,0,67,60,70,73,64,62],
[65,64,0,55,72,65,64,52],
[66,71,76,0,73,65,71,68],
[59,61,59,58,0,62,55,63],
[59,58,66,66,69,0,75,64],
[62,67,67,60,76,56,0,59],
[63,69,79,63,68,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,91,78,80,73,79,61],
[59,0,85,81,75,66,65,65],
[40,46,0,63,63,59,61,63],
[53,50,68,0,60,52,60,48],
[51,56,68,71,0,50,76,61],
[58,65,72,79,81,0,71,79],
[52,66,70,71,55,60,0,68],
[70,66,68,83,70,52,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,74,69,68,68,63],
[68,0,70,75,72,72,61,64],
[64,61,0,65,61,70,55,54],
[57,56,66,0,64,60,53,54],
[62,59,70,67,0,65,59,57],
[63,59,61,71,66,0,60,66],
[63,70,76,78,72,71,0,70],
[68,67,77,77,74,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,63,63,66,70,65],
[66,0,70,68,68,61,69,71],
[69,61,0,61,60,63,71,68],
[68,63,70,0,67,70,77,76],
[68,63,71,64,0,60,76,68],
[65,70,68,61,71,0,73,68],
[61,62,60,54,55,58,0,62],
[66,60,63,55,63,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,75,53,71,61,53],
[67,0,75,77,48,66,89,58],
[64,56,0,64,49,69,67,73],
[56,54,67,0,33,74,72,58],
[78,83,82,98,0,84,95,64],
[60,65,62,57,47,0,60,66],
[70,42,64,59,36,71,0,52],
[78,73,58,73,67,65,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,68,72,61,68,77,75],
[46,0,50,60,50,55,61,63],
[63,81,0,71,63,68,55,75],
[59,71,60,0,60,68,67,76],
[70,81,68,71,0,79,61,83],
[63,76,63,63,52,0,64,86],
[54,70,76,64,70,67,0,61],
[56,68,56,55,48,45,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,61,76,78,83,94,73],
[52,0,58,84,50,56,66,59],
[70,73,0,64,62,67,82,74],
[55,47,67,0,50,62,75,73],
[53,81,69,81,0,66,76,84],
[48,75,64,69,65,0,75,64],
[37,65,49,56,55,56,0,54],
[58,72,57,58,47,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,53,61,61,64,63,58],
[76,0,64,79,68,67,64,61],
[78,67,0,68,60,64,70,67],
[70,52,63,0,62,63,59,62],
[70,63,71,69,0,66,64,74],
[67,64,67,68,65,0,63,71],
[68,67,61,72,67,68,0,73],
[73,70,64,69,57,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,66,58,59,57,57],
[67,0,63,69,61,72,62,60],
[69,68,0,69,68,74,64,62],
[65,62,62,0,53,64,64,63],
[73,70,63,78,0,73,65,66],
[72,59,57,67,58,0,61,61],
[74,69,67,67,66,70,0,64],
[74,71,69,68,65,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,81,68,74,79,82,57],
[62,0,55,59,58,59,61,48],
[50,76,0,74,55,84,81,62],
[63,72,57,0,69,75,80,67],
[57,73,76,62,0,65,74,52],
[52,72,47,56,66,0,72,61],
[49,70,50,51,57,59,0,36],
[74,83,69,64,79,70,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,63,79,66,66,78,68],
[54,0,55,70,59,57,63,71],
[68,76,0,76,74,65,70,71],
[52,61,55,0,66,52,57,61],
[65,72,57,65,0,63,72,67],
[65,74,66,79,68,0,76,70],
[53,68,61,74,59,55,0,64],
[63,60,60,70,64,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,52,59,43,50,56],
[69,0,60,57,60,63,52,67],
[68,71,0,57,61,56,53,63],
[79,74,74,0,65,65,60,68],
[72,71,70,66,0,60,59,68],
[88,68,75,66,71,0,64,69],
[81,79,78,71,72,67,0,60],
[75,64,68,63,63,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,68,56,55,50,54],
[73,0,64,73,57,56,69,71],
[76,67,0,83,64,70,70,82],
[63,58,48,0,54,47,58,63],
[75,74,67,77,0,59,67,72],
[76,75,61,84,72,0,52,73],
[81,62,61,73,64,79,0,76],
[77,60,49,68,59,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,50,63,62,64,63,55],
[62,0,56,65,60,72,58,57],
[81,75,0,75,65,63,75,74],
[68,66,56,0,57,80,62,59],
[69,71,66,74,0,82,63,62],
[67,59,68,51,49,0,59,64],
[68,73,56,69,68,72,0,53],
[76,74,57,72,69,67,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,56,69,62,59,64,57],
[77,0,75,63,68,57,78,61],
[75,56,0,66,74,60,72,57],
[62,68,65,0,68,67,75,58],
[69,63,57,63,0,62,65,53],
[72,74,71,64,69,0,68,69],
[67,53,59,56,66,63,0,58],
[74,70,74,73,78,62,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,71,65,62,56,76],
[60,0,62,51,63,66,67,71],
[66,69,0,64,63,64,58,69],
[60,80,67,0,74,70,80,71],
[66,68,68,57,0,68,63,62],
[69,65,67,61,63,0,69,69],
[75,64,73,51,68,62,0,71],
[55,60,62,60,69,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,85,74,68,59,66,76],
[46,0,65,53,49,42,56,43],
[46,66,0,53,55,52,39,56],
[57,78,78,0,64,60,53,74],
[63,82,76,67,0,65,71,66],
[72,89,79,71,66,0,66,60],
[65,75,92,78,60,65,0,71],
[55,88,75,57,65,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,69,76,76,75,71,65],
[57,0,51,58,47,50,71,39],
[62,80,0,87,83,79,71,67],
[55,73,44,0,52,66,46,68],
[55,84,48,79,0,73,74,65],
[56,81,52,65,58,0,51,77],
[60,60,60,85,57,80,0,60],
[66,92,64,63,66,54,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,77,76,74,81,59,75],
[54,0,76,67,63,77,61,78],
[54,55,0,68,59,74,55,63],
[55,64,63,0,62,63,53,60],
[57,68,72,69,0,78,66,75],
[50,54,57,68,53,0,49,52],
[72,70,76,78,65,82,0,74],
[56,53,68,71,56,79,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,77,69,71,58,75,76],
[60,0,59,69,59,51,62,57],
[54,72,0,50,57,56,58,62],
[62,62,81,0,66,70,78,69],
[60,72,74,65,0,52,69,67],
[73,80,75,61,79,0,68,69],
[56,69,73,53,62,63,0,68],
[55,74,69,62,64,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,73,79,59,54,77],
[54,0,67,66,73,58,51,61],
[61,64,0,63,64,55,54,59],
[58,65,68,0,70,68,51,72],
[52,58,67,61,0,57,57,72],
[72,73,76,63,74,0,69,80],
[77,80,77,80,74,62,0,77],
[54,70,72,59,59,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,57,54,63,55,69],
[72,0,66,66,67,72,61,78],
[68,65,0,62,72,69,69,76],
[74,65,69,0,64,72,61,73],
[77,64,59,67,0,64,57,75],
[68,59,62,59,67,0,57,71],
[76,70,62,70,74,74,0,78],
[62,53,55,58,56,60,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,54,57,41,63,52,51],
[78,0,59,68,75,79,56,70],
[77,72,0,73,66,70,59,61],
[74,63,58,0,58,68,50,63],
[90,56,65,73,0,66,66,72],
[68,52,61,63,65,0,69,56],
[79,75,72,81,65,62,0,60],
[80,61,70,68,59,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,72,59,69,56,66],
[66,0,60,58,63,67,64,56],
[68,71,0,65,71,73,72,71],
[59,73,66,0,68,70,69,62],
[72,68,60,63,0,70,69,66],
[62,64,58,61,61,0,64,63],
[75,67,59,62,62,67,0,59],
[65,75,60,69,65,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,71,68,66,68,59,60],
[71,0,85,72,73,67,65,64],
[60,46,0,61,65,63,60,58],
[63,59,70,0,72,62,60,59],
[65,58,66,59,0,58,63,66],
[63,64,68,69,73,0,72,61],
[72,66,71,71,68,59,0,64],
[71,67,73,72,65,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,61,58,75,70,68],
[63,0,74,57,65,71,60,68],
[65,57,0,54,58,67,59,58],
[70,74,77,0,65,81,63,72],
[73,66,73,66,0,65,61,63],
[56,60,64,50,66,0,57,54],
[61,71,72,68,70,74,0,78],
[63,63,73,59,68,77,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,60,51,53,55,68],
[75,0,67,77,71,65,63,79],
[75,64,0,70,61,61,69,73],
[71,54,61,0,44,64,50,66],
[80,60,70,87,0,76,57,84],
[78,66,70,67,55,0,71,67],
[76,68,62,81,74,60,0,79],
[63,52,58,65,47,64,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,56,69,48,71,68],
[70,0,61,62,61,65,57,71],
[71,70,0,66,68,68,64,63],
[75,69,65,0,70,65,64,72],
[62,70,63,61,0,67,67,64],
[83,66,63,66,64,0,75,70],
[60,74,67,67,64,56,0,70],
[63,60,68,59,67,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,66,69,77,57,64],
[58,0,62,64,65,43,58,54],
[61,69,0,78,62,72,68,64],
[65,67,53,0,61,52,74,54],
[62,66,69,70,0,64,69,60],
[54,88,59,79,67,0,69,74],
[74,73,63,57,62,62,0,54],
[67,77,67,77,71,57,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,70,59,49,53,57,47],
[75,0,70,65,72,70,61,66],
[61,61,0,44,58,66,55,45],
[72,66,87,0,63,70,50,60],
[82,59,73,68,0,84,69,64],
[78,61,65,61,47,0,63,63],
[74,70,76,81,62,68,0,59],
[84,65,86,71,67,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,62,71,67,71,68],
[68,0,71,69,73,67,63,66],
[64,60,0,60,63,73,67,72],
[69,62,71,0,66,70,73,74],
[60,58,68,65,0,64,66,67],
[64,64,58,61,67,0,69,70],
[60,68,64,58,65,62,0,66],
[63,65,59,57,64,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,59,62,66,55,71],
[65,0,88,33,42,40,57,67],
[58,43,0,45,57,48,54,60],
[72,98,86,0,62,83,81,86],
[69,89,74,69,0,54,46,90],
[65,91,83,48,77,0,57,76],
[76,74,77,50,85,74,0,73],
[60,64,71,45,41,55,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,68,71,72,66,74],
[67,0,64,68,76,71,69,60],
[63,67,0,62,70,65,65,75],
[63,63,69,0,64,61,70,69],
[60,55,61,67,0,61,69,60],
[59,60,66,70,70,0,65,66],
[65,62,66,61,62,66,0,67],
[57,71,56,62,71,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,74,73,70,74,65],
[63,0,66,69,72,65,73,68],
[54,65,0,73,71,70,75,66],
[57,62,58,0,60,58,68,59],
[58,59,60,71,0,62,71,53],
[61,66,61,73,69,0,80,72],
[57,58,56,63,60,51,0,52],
[66,63,65,72,78,59,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,67,87,76,83,80],
[60,0,64,66,79,65,72,72],
[66,67,0,76,77,74,63,85],
[64,65,55,0,58,75,59,72],
[44,52,54,73,0,61,63,73],
[55,66,57,56,70,0,60,62],
[48,59,68,72,68,71,0,84],
[51,59,46,59,58,69,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,50,53,51,57,67,50],
[91,0,57,65,53,52,71,64],
[81,74,0,100,63,74,64,92],
[78,66,31,0,62,78,49,64],
[80,78,68,69,0,68,59,87],
[74,79,57,53,63,0,59,61],
[64,60,67,82,72,72,0,87],
[81,67,39,67,44,70,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,66,66,68,62,64],
[64,0,60,54,52,59,59,57],
[54,71,0,60,61,65,58,47],
[65,77,71,0,69,65,67,80],
[65,79,70,62,0,69,63,67],
[63,72,66,66,62,0,61,64],
[69,72,73,64,68,70,0,60],
[67,74,84,51,64,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,70,68,71,69,66],
[73,0,63,69,84,75,80,63],
[67,68,0,74,64,83,82,69],
[61,62,57,0,64,71,71,60],
[63,47,67,67,0,68,57,56],
[60,56,48,60,63,0,55,57],
[62,51,49,60,74,76,0,51],
[65,68,62,71,75,74,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,70,75,67,74,82],
[71,0,66,67,77,56,74,75],
[66,65,0,63,72,60,72,76],
[61,64,68,0,70,66,67,79],
[56,54,59,61,0,50,57,63],
[64,75,71,65,81,0,81,81],
[57,57,59,64,74,50,0,61],
[49,56,55,52,68,50,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,47,47,47,47,33,0],
[51,0,47,47,47,47,33,0],
[84,84,0,84,33,84,84,33],
[84,84,47,0,80,98,84,33],
[84,84,98,51,0,98,84,84],
[84,84,47,33,33,0,84,33],
[98,98,47,47,47,47,0,47],
[131,131,98,98,47,98,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,82,59,71,63,52],
[77,0,70,86,70,90,56,64],
[64,61,0,72,68,84,62,55],
[49,45,59,0,62,70,65,48],
[72,61,63,69,0,75,69,53],
[60,41,47,61,56,0,49,54],
[68,75,69,66,62,82,0,67],
[79,67,76,83,78,77,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,49,62,84,57,55,68],
[66,0,66,66,78,56,70,76],
[82,65,0,77,91,72,79,76],
[69,65,54,0,68,64,61,68],
[47,53,40,63,0,47,51,58],
[74,75,59,67,84,0,70,63],
[76,61,52,70,80,61,0,72],
[63,55,55,63,73,68,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,78,76,73,72,65],
[64,0,72,72,74,70,74,71],
[55,59,0,79,75,60,67,58],
[53,59,52,0,70,66,58,66],
[55,57,56,61,0,54,51,58],
[58,61,71,65,77,0,67,53],
[59,57,64,73,80,64,0,63],
[66,60,73,65,73,78,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,66,65,59,62,72,77],
[48,0,59,68,64,63,68,80],
[65,72,0,49,73,51,56,67],
[66,63,82,0,79,63,66,68],
[72,67,58,52,0,64,60,55],
[69,68,80,68,67,0,59,83],
[59,63,75,65,71,72,0,70],
[54,51,64,63,76,48,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,69,51,72,48,60,45],
[84,0,85,76,81,76,65,76],
[62,46,0,60,72,56,51,65],
[80,55,71,0,62,54,58,67],
[59,50,59,69,0,35,43,46],
[83,55,75,77,96,0,69,68],
[71,66,80,73,88,62,0,64],
[86,55,66,64,85,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,56,60,64,57,64],
[67,0,62,67,58,76,59,65],
[67,69,0,67,65,70,54,66],
[75,64,64,0,72,65,55,69],
[71,73,66,59,0,78,47,59],
[67,55,61,66,53,0,57,55],
[74,72,77,76,84,74,0,62],
[67,66,65,62,72,76,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,115,82,88,84,61,80],
[58,0,94,51,76,66,48,75],
[16,37,0,51,44,39,41,37],
[49,80,80,0,49,57,21,74],
[43,55,87,82,0,68,63,64],
[47,65,92,74,63,0,66,68],
[70,83,90,110,68,65,0,89],
[51,56,94,57,67,63,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,77,67,63,67,72],
[60,0,62,66,69,75,64,64],
[59,69,0,67,64,60,65,73],
[54,65,64,0,65,68,66,71],
[64,62,67,66,0,67,66,72],
[68,56,71,63,64,0,66,72],
[64,67,66,65,65,65,0,75],
[59,67,58,60,59,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,64,62,61,63,57],
[70,0,69,69,76,65,59,66],
[76,62,0,73,68,67,63,74],
[67,62,58,0,71,62,60,69],
[69,55,63,60,0,61,62,67],
[70,66,64,69,70,0,69,64],
[68,72,68,71,69,62,0,69],
[74,65,57,62,64,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,55,59,70,55,61,65],
[65,0,53,64,57,66,59,63],
[76,78,0,76,68,61,77,69],
[72,67,55,0,73,68,73,70],
[61,74,63,58,0,60,63,67],
[76,65,70,63,71,0,77,71],
[70,72,54,58,68,54,0,66],
[66,68,62,61,64,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,63,62,70,67,69],
[69,0,72,72,64,81,73,61],
[61,59,0,62,61,70,57,62],
[68,59,69,0,65,73,67,54],
[69,67,70,66,0,78,64,64],
[61,50,61,58,53,0,51,54],
[64,58,74,64,67,80,0,63],
[62,70,69,77,67,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,55,55,65,66,67],
[71,0,69,61,64,79,69,84],
[64,62,0,42,56,64,75,66],
[76,70,89,0,63,66,68,75],
[76,67,75,68,0,54,77,69],
[66,52,67,65,77,0,68,62],
[65,62,56,63,54,63,0,71],
[64,47,65,56,62,69,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,49,41,54,53,63,41],
[77,0,72,55,66,48,61,54],
[82,59,0,58,76,54,82,62],
[90,76,73,0,69,57,68,78],
[77,65,55,62,0,57,59,68],
[78,83,77,74,74,0,97,62],
[68,70,49,63,72,34,0,63],
[90,77,69,53,63,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,73,70,75,68,65],
[68,0,68,76,68,75,76,64],
[59,63,0,69,70,67,61,63],
[58,55,62,0,65,66,59,61],
[61,63,61,66,0,68,66,62],
[56,56,64,65,63,0,56,58],
[63,55,70,72,65,75,0,70],
[66,67,68,70,69,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,72,52,68,56,59,63],
[79,0,79,58,70,61,66,64],
[59,52,0,44,59,55,43,48],
[79,73,87,0,70,68,52,66],
[63,61,72,61,0,62,51,59],
[75,70,76,63,69,0,60,62],
[72,65,88,79,80,71,0,86],
[68,67,83,65,72,69,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,59,46,64,56,66],
[74,0,66,59,50,72,58,66],
[62,65,0,43,37,64,37,57],
[72,72,88,0,56,80,69,75],
[85,81,94,75,0,82,62,77],
[67,59,67,51,49,0,54,54],
[75,73,94,62,69,77,0,72],
[65,65,74,56,54,77,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,67,73,65,67,65],
[61,0,62,56,62,61,60,62],
[68,69,0,68,69,68,70,62],
[64,75,63,0,59,69,67,68],
[58,69,62,72,0,66,62,63],
[66,70,63,62,65,0,71,62],
[64,71,61,64,69,60,0,59],
[66,69,69,63,68,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,69,70,69,61,70,64],
[79,0,69,76,82,64,70,67],
[62,62,0,72,73,70,80,66],
[61,55,59,0,63,46,63,60],
[62,49,58,68,0,55,74,64],
[70,67,61,85,76,0,79,73],
[61,61,51,68,57,52,0,53],
[67,64,65,71,67,58,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,79,70,66,64,61,64],
[42,0,65,54,51,57,49,53],
[52,66,0,53,52,55,47,48],
[61,77,78,0,60,69,70,77],
[65,80,79,71,0,64,69,69],
[67,74,76,62,67,0,73,67],
[70,82,84,61,62,58,0,74],
[67,78,83,54,62,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,67,56,51,60,77],
[71,0,65,60,57,64,65,79],
[73,66,0,70,69,67,65,57],
[64,71,61,0,82,74,80,76],
[75,74,62,49,0,52,73,72],
[80,67,64,57,79,0,66,82],
[71,66,66,51,58,65,0,80],
[54,52,74,55,59,49,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,64,52,67,61,60],
[65,0,63,66,62,69,63,58],
[65,68,0,64,66,59,64,59],
[67,65,67,0,55,64,64,55],
[79,69,65,76,0,71,76,66],
[64,62,72,67,60,0,61,54],
[70,68,67,67,55,70,0,58],
[71,73,72,76,65,77,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,51,97,68,62,76,53],
[79,0,68,72,96,82,65,75],
[80,63,0,83,67,62,87,94],
[34,59,48,0,49,55,70,80],
[63,35,64,82,0,79,73,48],
[69,49,69,76,52,0,55,64],
[55,66,44,61,58,76,0,64],
[78,56,37,51,83,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,73,76,67,58,71,74],
[76,0,63,75,67,67,69,72],
[58,68,0,71,73,65,69,75],
[55,56,60,0,62,57,61,63],
[64,64,58,69,0,59,65,72],
[73,64,66,74,72,0,59,73],
[60,62,62,70,66,72,0,75],
[57,59,56,68,59,58,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,61,80,70,78,69,75],
[83,0,72,76,58,74,75,84],
[70,59,0,62,59,57,53,97],
[51,55,69,0,74,63,64,80],
[61,73,72,57,0,61,65,87],
[53,57,74,68,70,0,53,85],
[62,56,78,67,66,78,0,97],
[56,47,34,51,44,46,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,45,59,58,71,58],
[60,0,59,44,68,69,63,62],
[72,72,0,78,63,65,76,69],
[86,87,53,0,72,75,84,58],
[72,63,68,59,0,70,69,66],
[73,62,66,56,61,0,73,62],
[60,68,55,47,62,58,0,56],
[73,69,62,73,65,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,60,69,56,48,80],
[72,0,89,70,75,80,61,76],
[62,42,0,70,64,66,58,72],
[71,61,61,0,75,51,64,68],
[62,56,67,56,0,33,45,68],
[75,51,65,80,98,0,70,83],
[83,70,73,67,86,61,0,75],
[51,55,59,63,63,48,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,28,59,42,48,41,45],
[88,0,68,57,79,63,60,66],
[103,63,0,66,83,74,68,74],
[72,74,65,0,72,72,55,62],
[89,52,48,59,0,72,48,54],
[83,68,57,59,59,0,75,69],
[90,71,63,76,83,56,0,72],
[86,65,57,69,77,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,56,58,59,60,54],
[58,0,64,61,60,71,63,59],
[67,67,0,55,57,67,68,58],
[75,70,76,0,66,74,67,63],
[73,71,74,65,0,74,69,66],
[72,60,64,57,57,0,66,62],
[71,68,63,64,62,65,0,61],
[77,72,73,68,65,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,61,56,67,60,62],
[70,0,74,63,71,70,67,68],
[63,57,0,50,58,58,63,58],
[70,68,81,0,76,66,61,74],
[75,60,73,55,0,71,69,55],
[64,61,73,65,60,0,61,61],
[71,64,68,70,62,70,0,74],
[69,63,73,57,76,70,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,64,67,72,70,70],
[63,0,81,71,74,67,69,74],
[54,50,0,53,67,49,64,70],
[67,60,78,0,67,69,65,71],
[64,57,64,64,0,67,72,72],
[59,64,82,62,64,0,73,75],
[61,62,67,66,59,58,0,61],
[61,57,61,60,59,56,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,63,52,54,48,60,59],
[81,0,71,75,62,70,73,72],
[68,60,0,56,56,60,50,70],
[79,56,75,0,71,72,74,66],
[77,69,75,60,0,77,72,65],
[83,61,71,59,54,0,68,67],
[71,58,81,57,59,63,0,70],
[72,59,61,65,66,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,86,81,61,70,76,75],
[65,0,87,80,69,73,75,73],
[45,44,0,54,50,43,57,46],
[50,51,77,0,53,50,64,52],
[70,62,81,78,0,71,79,77],
[61,58,88,81,60,0,62,67],
[55,56,74,67,52,69,0,58],
[56,58,85,79,54,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,56,71,65,30,30],
[63,0,65,51,69,81,37,51],
[57,66,0,45,56,73,42,46],
[75,80,86,0,71,89,75,59],
[60,62,75,60,0,76,47,42],
[66,50,58,42,55,0,49,52],
[101,94,89,56,84,82,0,68],
[101,80,85,72,89,79,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,73,64,65,67,60],
[70,0,65,75,68,74,67,67],
[63,66,0,69,62,70,59,70],
[58,56,62,0,54,59,67,57],
[67,63,69,77,0,63,62,58],
[66,57,61,72,68,0,65,66],
[64,64,72,64,69,66,0,61],
[71,64,61,74,73,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,78,63,59,63,73,68],
[60,0,93,68,75,68,79,72],
[53,38,0,53,50,46,59,56],
[68,63,78,0,66,54,78,68],
[72,56,81,65,0,50,75,73],
[68,63,85,77,81,0,86,72],
[58,52,72,53,56,45,0,56],
[63,59,75,63,58,59,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,82,66,44,66,73,78],
[61,0,86,64,51,65,62,66],
[49,45,0,53,47,82,48,57],
[65,67,78,0,49,75,60,47],
[87,80,84,82,0,81,70,65],
[65,66,49,56,50,0,49,54],
[58,69,83,71,61,82,0,55],
[53,65,74,84,66,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,55,61,60,67,72],
[72,0,73,54,49,72,70,67],
[67,58,0,56,49,64,62,76],
[76,77,75,0,53,72,72,75],
[70,82,82,78,0,64,75,68],
[71,59,67,59,67,0,64,62],
[64,61,69,59,56,67,0,56],
[59,64,55,56,63,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,62,60,67,60,75],
[65,0,69,65,56,70,55,65],
[66,62,0,71,66,65,67,70],
[69,66,60,0,56,73,57,70],
[71,75,65,75,0,74,61,66],
[64,61,66,58,57,0,62,62],
[71,76,64,74,70,69,0,74],
[56,66,61,61,65,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,67,69,69,73,59],
[63,0,71,61,74,77,70,65],
[57,60,0,56,58,65,63,59],
[64,70,75,0,62,75,70,69],
[62,57,73,69,0,69,74,62],
[62,54,66,56,62,0,63,57],
[58,61,68,61,57,68,0,60],
[72,66,72,62,69,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,61,58,61,57,57],
[78,0,69,68,70,68,71,61],
[73,62,0,61,59,66,66,67],
[70,63,70,0,66,67,67,64],
[73,61,72,65,0,70,73,58],
[70,63,65,64,61,0,75,64],
[74,60,65,64,58,56,0,60],
[74,70,64,67,73,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,60,40,49,65,58,58],
[81,0,69,60,71,81,70,76],
[71,62,0,74,71,68,57,61],
[91,71,57,0,80,84,63,64],
[82,60,60,51,0,55,68,66],
[66,50,63,47,76,0,66,53],
[73,61,74,68,63,65,0,50],
[73,55,70,67,65,78,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,79,81,60,67,77,69],
[59,0,67,59,60,66,68,59],
[52,64,0,59,57,66,57,62],
[50,72,72,0,57,70,66,66],
[71,71,74,74,0,70,73,61],
[64,65,65,61,61,0,65,67],
[54,63,74,65,58,66,0,70],
[62,72,69,65,70,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,66,75,76,62,67],
[61,0,61,65,62,76,64,61],
[71,70,0,66,70,83,62,70],
[65,66,65,0,67,79,68,66],
[56,69,61,64,0,83,73,66],
[55,55,48,52,48,0,53,51],
[69,67,69,63,58,78,0,63],
[64,70,61,65,65,80,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,62,69,71,66,68],
[69,0,65,66,72,66,73,69],
[73,66,0,57,74,72,65,69],
[69,65,74,0,74,74,68,68],
[62,59,57,57,0,68,56,60],
[60,65,59,57,63,0,56,63],
[65,58,66,63,75,75,0,71],
[63,62,62,63,71,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,54,75,67,74,84],
[68,0,60,46,67,47,50,68],
[76,71,0,51,65,53,58,71],
[77,85,80,0,83,62,74,80],
[56,64,66,48,0,49,51,53],
[64,84,78,69,82,0,67,70],
[57,81,73,57,80,64,0,88],
[47,63,60,51,78,61,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,64,67,62,62,63],
[66,0,63,68,65,62,61,61],
[69,68,0,72,62,57,64,67],
[67,63,59,0,72,69,67,66],
[64,66,69,59,0,60,57,66],
[69,69,74,62,71,0,74,70],
[69,70,67,64,74,57,0,68],
[68,70,64,65,65,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,58,61,52,49,53],
[66,0,72,64,70,61,63,53],
[58,59,0,61,48,60,63,62],
[73,67,70,0,54,74,52,76],
[70,61,83,77,0,75,62,75],
[79,70,71,57,56,0,59,76],
[82,68,68,79,69,72,0,65],
[78,78,69,55,56,55,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,60,64,63,64,71,64],
[60,0,64,65,57,71,65,56],
[71,67,0,72,62,67,67,66],
[67,66,59,0,63,62,62,63],
[68,74,69,68,0,66,67,64],
[67,60,64,69,65,0,65,60],
[60,66,64,69,64,66,0,52],
[67,75,65,68,67,71,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,56,64,59,53,45,52],
[76,0,57,66,65,64,62,61],
[75,74,0,68,63,57,59,62],
[67,65,63,0,65,69,62,62],
[72,66,68,66,0,65,63,60],
[78,67,74,62,66,0,72,71],
[86,69,72,69,68,59,0,77],
[79,70,69,69,71,60,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,71,66,71,70,57],
[70,0,70,73,57,61,54,63],
[69,61,0,75,67,79,70,74],
[60,58,56,0,75,61,80,67],
[65,74,64,56,0,69,88,81],
[60,70,52,70,62,0,62,72],
[61,77,61,51,43,69,0,79],
[74,68,57,64,50,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,67,72,65,56,65],
[67,0,62,68,65,77,70,61],
[65,69,0,60,76,68,62,59],
[64,63,71,0,69,71,64,73],
[59,66,55,62,0,67,60,65],
[66,54,63,60,64,0,63,55],
[75,61,69,67,71,68,0,66],
[66,70,72,58,66,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,52,61,70,48,61],
[68,0,80,66,71,109,66,63],
[66,51,0,56,56,91,44,78],
[79,65,75,0,89,106,65,82],
[70,60,75,42,0,84,71,62],
[61,22,40,25,47,0,19,47],
[83,65,87,66,60,112,0,94],
[70,68,53,49,69,84,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,58,63,64,69,61],
[65,0,69,59,62,65,68,63],
[63,62,0,55,66,65,63,64],
[73,72,76,0,69,63,70,66],
[68,69,65,62,0,70,69,63],
[67,66,66,68,61,0,69,68],
[62,63,68,61,62,62,0,63],
[70,68,67,65,68,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,66,58,60,91,56],
[62,0,63,63,70,57,77,60],
[67,68,0,71,69,65,83,71],
[65,68,60,0,59,66,78,65],
[73,61,62,72,0,70,84,68],
[71,74,66,65,61,0,88,77],
[40,54,48,53,47,43,0,47],
[75,71,60,66,63,54,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,64,74,67,67,50],
[71,0,69,52,83,74,69,82],
[61,62,0,67,73,73,77,51],
[67,79,64,0,75,57,70,54],
[57,48,58,56,0,53,55,46],
[64,57,58,74,78,0,73,54],
[64,62,54,61,76,58,0,34],
[81,49,80,77,85,77,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,63,52,68,65,74],
[64,0,82,76,57,54,69,68],
[54,49,0,67,54,52,54,61],
[68,55,64,0,68,56,68,66],
[79,74,77,63,0,64,60,76],
[63,77,79,75,67,0,63,74],
[66,62,77,63,71,68,0,68],
[57,63,70,65,55,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,89,74,65,75,66,67],
[68,0,78,74,64,69,62,63],
[42,53,0,56,54,63,49,49],
[57,57,75,0,60,71,60,62],
[66,67,77,71,0,64,67,75],
[56,62,68,60,67,0,52,61],
[65,69,82,71,64,79,0,63],
[64,68,82,69,56,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,78,68,72,66,71],
[67,0,62,72,75,71,64,62],
[64,69,0,70,64,56,61,66],
[53,59,61,0,74,56,62,67],
[63,56,67,57,0,66,61,55],
[59,60,75,75,65,0,57,65],
[65,67,70,69,70,74,0,71],
[60,69,65,64,76,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,59,56,57,68,65],
[63,0,65,52,54,55,65,62],
[69,66,0,67,64,75,56,77],
[72,79,64,0,67,70,77,65],
[75,77,67,64,0,75,65,73],
[74,76,56,61,56,0,68,70],
[63,66,75,54,66,63,0,57],
[66,69,54,66,58,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,56,72,68,56,66],
[63,0,76,87,79,81,74,72],
[65,55,0,65,53,74,62,61],
[75,44,66,0,54,74,55,65],
[59,52,78,77,0,87,60,74],
[63,50,57,57,44,0,53,61],
[75,57,69,76,71,78,0,67],
[65,59,70,66,57,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,67,93,74,63,70],
[63,0,56,70,75,70,69,67],
[64,75,0,73,82,81,66,76],
[64,61,58,0,85,73,69,70],
[38,56,49,46,0,61,37,54],
[57,61,50,58,70,0,58,58],
[68,62,65,62,94,73,0,75],
[61,64,55,61,77,73,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,73,73,73,65,56],
[71,0,56,73,67,73,61,68],
[68,75,0,64,78,80,67,63],
[58,58,67,0,69,81,51,63],
[58,64,53,62,0,64,58,55],
[58,58,51,50,67,0,58,53],
[66,70,64,80,73,73,0,66],
[75,63,68,68,76,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,80,61,51,71,72,72],
[79,0,74,66,74,76,63,66],
[51,57,0,53,51,58,78,54],
[70,65,78,0,63,69,67,63],
[80,57,80,68,0,75,62,64],
[60,55,73,62,56,0,76,56],
[59,68,53,64,69,55,0,68],
[59,65,77,68,67,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,64,61,69,66,68],
[68,0,73,66,70,72,61,70],
[63,58,0,66,61,65,63,66],
[67,65,65,0,58,74,65,74],
[70,61,70,73,0,69,65,77],
[62,59,66,57,62,0,64,70],
[65,70,68,66,66,67,0,75],
[63,61,65,57,54,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,55,60,58,72,51,56],
[63,0,72,67,68,79,66,71],
[76,59,0,57,68,90,61,60],
[71,64,74,0,64,74,60,63],
[73,63,63,67,0,78,69,62],
[59,52,41,57,53,0,38,58],
[80,65,70,71,62,93,0,63],
[75,60,71,68,69,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,48,60,46,67,75,62],
[75,0,65,66,67,63,68,75],
[83,66,0,68,81,76,64,70],
[71,65,63,0,56,65,64,63],
[85,64,50,75,0,58,70,60],
[64,68,55,66,73,0,55,57],
[56,63,67,67,61,76,0,68],
[69,56,61,68,71,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,69,50,93,61,62],
[62,0,72,56,67,67,65,65],
[52,59,0,61,62,85,64,58],
[62,75,70,0,62,92,67,68],
[81,64,69,69,0,94,78,66],
[38,64,46,39,37,0,57,57],
[70,66,67,64,53,74,0,61],
[69,66,73,63,65,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,56,70,56,47,63,65],
[80,0,54,50,53,58,84,66],
[75,77,0,62,48,72,52,84],
[61,81,69,0,45,70,82,62],
[75,78,83,86,0,61,94,85],
[84,73,59,61,70,0,76,83],
[68,47,79,49,37,55,0,69],
[66,65,47,69,46,48,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,70,66,71,64,61],
[65,0,70,75,68,69,68,57],
[63,61,0,76,66,72,66,63],
[61,56,55,0,62,67,60,65],
[65,63,65,69,0,69,68,72],
[60,62,59,64,62,0,68,72],
[67,63,65,71,63,63,0,62],
[70,74,68,66,59,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,87,59,73,71,48,39],
[86,0,83,81,74,82,83,62],
[44,48,0,61,72,72,71,62],
[72,50,70,0,97,72,71,66],
[58,57,59,34,0,79,61,45],
[60,49,59,59,52,0,43,67],
[83,48,60,60,70,88,0,57],
[92,69,69,65,86,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,67,57,49,75,63],
[64,0,69,67,78,73,87,62],
[66,62,0,71,63,57,66,60],
[64,64,60,0,46,62,86,53],
[74,53,68,85,0,86,78,68],
[82,58,74,69,45,0,61,72],
[56,44,65,45,53,70,0,69],
[68,69,71,78,63,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,84,60,68,84,69,56],
[59,0,66,53,50,66,54,56],
[47,65,0,49,53,69,66,56],
[71,78,82,0,77,84,59,67],
[63,81,78,54,0,79,73,69],
[47,65,62,47,52,0,56,45],
[62,77,65,72,58,75,0,57],
[75,75,75,64,62,86,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,94,98,131,94,126,122],
[78,0,74,78,78,41,78,79],
[37,57,0,57,118,81,80,81],
[33,53,74,0,83,46,74,74],
[0,53,13,48,0,53,48,53],
[37,90,50,85,78,0,113,66],
[5,53,51,57,83,18,0,79],
[9,52,50,57,78,65,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,64,67,55,66,63],
[61,0,59,64,66,55,62,61],
[67,72,0,72,67,67,73,65],
[67,67,59,0,68,59,64,63],
[64,65,64,63,0,61,65,67],
[76,76,64,72,70,0,75,68],
[65,69,58,67,66,56,0,58],
[68,70,66,68,64,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,56,60,59,56,62,55],
[67,0,54,57,65,61,65,58],
[75,77,0,57,76,61,63,62],
[71,74,74,0,72,77,71,63],
[72,66,55,59,0,58,67,57],
[75,70,70,54,73,0,72,68],
[69,66,68,60,64,59,0,54],
[76,73,69,68,74,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,75,74,76,88,81],
[69,0,67,63,74,67,68,68],
[72,64,0,80,81,77,81,68],
[56,68,51,0,75,56,59,54],
[57,57,50,56,0,65,63,58],
[55,64,54,75,66,0,78,63],
[43,63,50,72,68,53,0,58],
[50,63,63,77,73,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,74,67,50,49,70],
[55,0,82,84,69,62,66,72],
[57,49,0,69,54,66,45,62],
[57,47,62,0,69,77,51,80],
[64,62,77,62,0,62,48,93],
[81,69,65,54,69,0,58,80],
[82,65,86,80,83,73,0,89],
[61,59,69,51,38,51,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,52,56,65,58,66],
[76,0,67,64,73,76,66,69],
[74,64,0,69,71,77,62,72],
[79,67,62,0,66,74,67,71],
[75,58,60,65,0,79,53,73],
[66,55,54,57,52,0,55,63],
[73,65,69,64,78,76,0,76],
[65,62,59,60,58,68,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,87,61,79,85,68,83],
[52,0,68,61,65,76,61,69],
[44,63,0,63,63,69,42,66],
[70,70,68,0,102,85,64,93],
[52,66,68,29,0,77,44,63],
[46,55,62,46,54,0,57,54],
[63,70,89,67,87,74,0,109],
[48,62,65,38,68,77,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,70,79,82,75,48],
[63,0,59,70,63,66,68,51],
[72,72,0,63,68,76,73,58],
[61,61,68,0,79,79,90,69],
[52,68,63,52,0,75,59,54],
[49,65,55,52,56,0,67,73],
[56,63,58,41,72,64,0,46],
[83,80,73,62,77,58,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,56,61,58,56,59],
[69,0,69,73,69,62,65,76],
[71,62,0,59,61,63,56,68],
[75,58,72,0,58,69,60,68],
[70,62,70,73,0,65,64,65],
[73,69,68,62,66,0,70,68],
[75,66,75,71,67,61,0,73],
[72,55,63,63,66,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,69,42,65,69,53],
[55,0,76,70,61,59,68,71],
[59,55,0,60,41,45,56,89],
[62,61,71,0,72,72,75,70],
[89,70,90,59,0,90,84,86],
[66,72,86,59,41,0,65,76],
[62,63,75,56,47,66,0,75],
[78,60,42,61,45,55,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,63,53,88,84,93,83],
[54,0,91,83,86,75,90,75],
[68,40,0,47,58,50,57,50],
[78,48,84,0,77,85,84,64],
[43,45,73,54,0,64,61,46],
[47,56,81,46,67,0,104,77],
[38,41,74,47,70,27,0,37],
[48,56,81,67,85,54,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,74,71,71,60,62,70],
[75,0,87,77,74,83,62,77],
[57,44,0,61,54,57,51,59],
[60,54,70,0,59,58,69,66],
[60,57,77,72,0,63,77,72],
[71,48,74,73,68,0,63,66],
[69,69,80,62,54,68,0,82],
[61,54,72,65,59,65,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,44,57,61,47,61],
[56,0,73,55,41,65,48,44],
[57,58,0,55,36,70,58,46],
[87,76,76,0,45,65,63,65],
[74,90,95,86,0,73,61,76],
[70,66,61,66,58,0,73,57],
[84,83,73,68,70,58,0,71],
[70,87,85,66,55,74,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,24,80,80,36,44,20],
[71,0,15,92,71,92,56,71],
[107,116,0,92,71,92,56,71],
[51,39,39,0,15,36,0,15],
[51,60,60,116,0,36,44,56],
[95,39,39,95,95,0,44,35],
[87,75,75,131,87,87,0,51],
[111,60,60,116,75,96,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,65,65,61,60,67],
[72,0,81,77,65,72,75,77],
[63,50,0,68,60,60,65,63],
[66,54,63,0,61,52,65,68],
[66,66,71,70,0,70,62,70],
[70,59,71,79,61,0,76,74],
[71,56,66,66,69,55,0,66],
[64,54,68,63,61,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,74,57,59,68,49],
[72,0,77,62,70,50,84,82],
[64,54,0,51,62,46,71,61],
[57,69,80,0,50,36,62,69],
[74,61,69,81,0,76,75,75],
[72,81,85,95,55,0,84,87],
[63,47,60,69,56,47,0,51],
[82,49,70,62,56,44,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,68,76,71,72,65],
[72,0,71,65,73,68,63,62],
[59,60,0,63,79,67,67,71],
[63,66,68,0,82,75,73,65],
[55,58,52,49,0,53,63,53],
[60,63,64,56,78,0,66,63],
[59,68,64,58,68,65,0,67],
[66,69,60,66,78,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,61,62,71,67,72],
[66,0,70,68,62,75,72,70],
[62,61,0,59,58,64,65,71],
[70,63,72,0,69,70,67,69],
[69,69,73,62,0,66,62,69],
[60,56,67,61,65,0,62,65],
[64,59,66,64,69,69,0,67],
[59,61,60,62,62,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,77,61,69,76,67],
[69,0,66,77,79,59,80,68],
[75,65,0,97,53,58,73,83],
[54,54,34,0,50,53,59,65],
[70,52,78,81,0,74,67,76],
[62,72,73,78,57,0,81,86],
[55,51,58,72,64,50,0,72],
[64,63,48,66,55,45,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,39,38,70,69,70,69],
[55,0,55,49,81,24,81,68],
[92,76,0,56,125,74,57,68],
[93,82,75,0,100,74,32,69],
[61,50,6,31,0,37,62,44],
[62,107,57,57,94,0,57,94],
[61,50,74,99,69,74,0,68],
[62,63,63,62,87,37,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,76,76,107,107,107,63],
[77,0,68,44,99,99,99,77],
[55,63,0,0,55,53,109,31],
[55,87,131,0,77,99,131,55],
[24,32,76,54,0,75,109,31],
[24,32,78,32,56,0,109,0],
[24,32,22,0,22,22,0,0],
[68,54,100,76,100,131,131,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,67,77,20,16,53,62],
[106,0,106,91,44,67,89,64],
[64,25,0,71,21,52,53,64],
[54,40,60,0,53,54,72,83],
[111,87,110,78,0,44,111,65],
[115,64,79,77,87,0,96,91],
[78,42,78,59,20,35,0,79],
[69,67,67,48,66,40,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,101,0,49,52,75,23],
[82,0,68,75,0,52,82,82],
[30,63,0,7,0,0,82,30],
[131,56,124,0,49,59,75,82],
[82,131,131,82,0,59,82,82],
[79,79,131,72,72,0,131,30],
[56,49,49,56,49,0,0,23],
[108,49,101,49,49,101,108,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,66,63,60,64,68],
[70,0,66,69,75,63,68,78],
[71,65,0,70,69,64,65,65],
[65,62,61,0,68,66,69,75],
[68,56,62,63,0,63,60,70],
[71,68,67,65,68,0,56,71],
[67,63,66,62,71,75,0,74],
[63,53,66,56,61,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,71,67,58,76,71],
[61,0,71,75,63,69,69,68],
[54,60,0,67,62,61,62,68],
[60,56,64,0,65,61,74,69],
[64,68,69,66,0,61,68,64],
[73,62,70,70,70,0,75,75],
[55,62,69,57,63,56,0,64],
[60,63,63,62,67,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,54,61,68,61,63,61],
[68,0,54,60,64,62,64,63],
[77,77,0,63,77,63,70,67],
[70,71,68,0,66,58,70,63],
[63,67,54,65,0,62,72,62],
[70,69,68,73,69,0,59,69],
[68,67,61,61,59,72,0,59],
[70,68,64,68,69,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,71,72,68,65,76,76],
[54,0,54,62,59,48,57,63],
[60,77,0,67,60,66,65,58],
[59,69,64,0,68,65,69,62],
[63,72,71,63,0,67,67,67],
[66,83,65,66,64,0,73,57],
[55,74,66,62,64,58,0,67],
[55,68,73,69,64,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,66,52,74,72,65],
[65,0,57,58,57,65,66,64],
[69,74,0,58,58,67,72,68],
[65,73,73,0,55,67,72,59],
[79,74,73,76,0,79,79,65],
[57,66,64,64,52,0,62,59],
[59,65,59,59,52,69,0,57],
[66,67,63,72,66,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,78,83,78,67,71,81],
[66,0,64,83,63,68,83,77],
[53,67,0,82,69,70,81,68],
[48,48,49,0,63,46,40,61],
[53,68,62,68,0,63,66,68],
[64,63,61,85,68,0,84,73],
[60,48,50,91,65,47,0,55],
[50,54,63,70,63,58,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,74,64,59,60,58],
[58,0,61,63,59,52,62,47],
[65,70,0,61,57,47,55,58],
[57,68,70,0,58,56,56,55],
[67,72,74,73,0,71,77,54],
[72,79,84,75,60,0,67,76],
[71,69,76,75,54,64,0,59],
[73,84,73,76,77,55,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,43,48,53,42,69,44],
[73,0,64,62,75,68,70,64],
[88,67,0,67,78,66,66,64],
[83,69,64,0,84,70,73,78],
[78,56,53,47,0,63,61,55],
[89,63,65,61,68,0,74,68],
[62,61,65,58,70,57,0,57],
[87,67,67,53,76,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,76,65,71,63,68],
[73,0,72,77,65,75,80,73],
[64,59,0,68,59,64,63,67],
[55,54,63,0,53,67,56,57],
[66,66,72,78,0,66,65,72],
[60,56,67,64,65,0,66,67],
[68,51,68,75,66,65,0,64],
[63,58,64,74,59,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,74,78,71,68,55],
[56,0,74,65,70,70,79,68],
[54,57,0,50,56,71,67,37],
[57,66,81,0,73,63,75,47],
[53,61,75,58,0,55,51,46],
[60,61,60,68,76,0,56,54],
[63,52,64,56,80,75,0,46],
[76,63,94,84,85,77,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,59,66,77,76,73,60],
[52,0,51,60,59,66,62,55],
[72,80,0,58,70,78,71,69],
[65,71,73,0,77,71,76,55],
[54,72,61,54,0,60,59,54],
[55,65,53,60,71,0,61,54],
[58,69,60,55,72,70,0,61],
[71,76,62,76,77,77,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,76,64,89,74,79,66],
[56,0,64,75,61,64,78,61],
[55,67,0,45,74,52,77,59],
[67,56,86,0,71,68,75,73],
[42,70,57,60,0,54,74,52],
[57,67,79,63,77,0,77,65],
[52,53,54,56,57,54,0,50],
[65,70,72,58,79,66,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,56,54,51,54,70],
[70,0,51,66,62,66,53,85],
[81,80,0,70,73,74,58,80],
[75,65,61,0,64,68,67,81],
[77,69,58,67,0,70,65,72],
[80,65,57,63,61,0,68,79],
[77,78,73,64,66,63,0,89],
[61,46,51,50,59,52,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,72,70,68,64,72,60],
[74,0,69,71,81,82,61,74],
[59,62,0,65,65,65,61,54],
[61,60,66,0,60,61,69,65],
[63,50,66,71,0,59,59,53],
[67,49,66,70,72,0,60,58],
[59,70,70,62,72,71,0,67],
[71,57,77,66,78,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,41,56,50,51,42,55],
[53,0,37,45,38,35,41,39],
[90,94,0,75,76,76,54,72],
[75,86,56,0,37,34,30,35],
[81,93,55,94,0,46,51,54],
[80,96,55,97,85,0,56,76],
[89,90,77,101,80,75,0,57],
[76,92,59,96,77,55,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,63,59,55,70,82,60],
[43,0,60,55,54,54,59,55],
[68,71,0,70,61,68,87,70],
[72,76,61,0,56,60,79,55],
[76,77,70,75,0,81,87,60],
[61,77,63,71,50,0,74,54],
[49,72,44,52,44,57,0,49],
[71,76,61,76,71,77,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,40,63,60,62,50,67],
[81,0,50,83,68,67,75,73],
[91,81,0,77,68,70,59,72],
[68,48,54,0,58,73,73,67],
[71,63,63,73,0,52,76,82],
[69,64,61,58,79,0,47,69],
[81,56,72,58,55,84,0,84],
[64,58,59,64,49,62,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,70,65,75,69,73],
[55,0,52,66,61,65,62,62],
[63,79,0,70,68,74,58,74],
[61,65,61,0,66,72,62,69],
[66,70,63,65,0,70,71,73],
[56,66,57,59,61,0,59,68],
[62,69,73,69,60,72,0,64],
[58,69,57,62,58,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,65,72,75,65,68],
[69,0,62,66,74,73,72,54],
[74,69,0,65,85,68,65,74],
[66,65,66,0,75,70,72,70],
[59,57,46,56,0,63,54,61],
[56,58,63,61,68,0,59,67],
[66,59,66,59,77,72,0,65],
[63,77,57,61,70,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,61,68,69,70,67],
[58,0,62,61,60,67,65,71],
[68,69,0,64,65,66,65,65],
[70,70,67,0,62,69,65,64],
[63,71,66,69,0,71,74,75],
[62,64,65,62,60,0,62,65],
[61,66,66,66,57,69,0,63],
[64,60,66,67,56,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,69,68,61,69,82],
[60,0,66,74,75,57,73,67],
[66,65,0,73,71,66,71,69],
[62,57,58,0,66,54,64,68],
[63,56,60,65,0,52,60,68],
[70,74,65,77,79,0,71,77],
[62,58,60,67,71,60,0,70],
[49,64,62,63,63,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,62,66,63,58,67],
[64,0,64,63,70,66,65,62],
[71,67,0,62,73,73,75,60],
[69,68,69,0,64,67,68,62],
[65,61,58,67,0,69,60,63],
[68,65,58,64,62,0,64,72],
[73,66,56,63,71,67,0,69],
[64,69,71,69,68,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,73,50,64,63,75],
[58,0,62,65,50,64,56,57],
[64,69,0,72,57,61,59,76],
[58,66,59,0,60,63,68,76],
[81,81,74,71,0,78,61,73],
[67,67,70,68,53,0,57,79],
[68,75,72,63,70,74,0,71],
[56,74,55,55,58,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,40,37,46,44,42],
[85,0,69,44,76,62,73,62],
[84,62,0,57,79,75,55,69],
[91,87,74,0,52,61,98,85],
[94,55,52,79,0,84,79,72],
[85,69,56,70,47,0,66,60],
[87,58,76,33,52,65,0,70],
[89,69,62,46,59,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,56,54,52,52,58,53],
[83,0,78,58,69,67,65,73],
[75,53,0,62,69,65,68,75],
[77,73,69,0,67,73,62,62],
[79,62,62,64,0,56,65,68],
[79,64,66,58,75,0,69,78],
[73,66,63,69,66,62,0,79],
[78,58,56,69,63,53,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,72,68,57,64,66],
[63,0,67,64,63,64,64,58],
[66,64,0,66,72,63,64,59],
[59,67,65,0,65,63,69,59],
[63,68,59,66,0,58,69,65],
[74,67,68,68,73,0,72,62],
[67,67,67,62,62,59,0,60],
[65,73,72,72,66,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,64,62,59,72,63],
[60,0,64,61,55,60,58,53],
[67,67,0,57,67,70,70,61],
[67,70,74,0,60,60,71,67],
[69,76,64,71,0,55,73,69],
[72,71,61,71,76,0,64,70],
[59,73,61,60,58,67,0,59],
[68,78,70,64,62,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,64,36,48,65,66],
[71,0,43,62,41,65,40,57],
[69,88,0,61,71,77,43,71],
[67,69,70,0,43,51,40,81],
[95,90,60,88,0,73,70,79],
[83,66,54,80,58,0,75,66],
[66,91,88,91,61,56,0,91],
[65,74,60,50,52,65,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,56,82,64,68,53,40],
[92,0,54,80,80,68,51,54],
[75,77,0,75,75,101,84,47],
[49,51,56,0,84,63,27,12],
[67,51,56,47,0,71,30,17],
[63,63,30,68,60,0,65,68],
[78,80,47,104,101,66,0,41],
[91,77,84,119,114,63,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,67,69,65,79,72],
[73,0,56,67,65,64,68,68],
[67,75,0,65,75,68,76,78],
[64,64,66,0,72,69,71,67],
[62,66,56,59,0,67,61,56],
[66,67,63,62,64,0,63,69],
[52,63,55,60,70,68,0,71],
[59,63,53,64,75,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,62,71,73,64,61],
[67,0,71,57,67,76,64,58],
[59,60,0,57,62,56,66,49],
[69,74,74,0,67,73,64,66],
[60,64,69,64,0,73,62,62],
[58,55,75,58,58,0,57,60],
[67,67,65,67,69,74,0,63],
[70,73,82,65,69,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,80,63,72,71,65,66],
[56,0,58,51,66,58,61,58],
[51,73,0,67,67,69,71,53],
[68,80,64,0,72,74,68,60],
[59,65,64,59,0,66,62,61],
[60,73,62,57,65,0,59,57],
[66,70,60,63,69,72,0,70],
[65,73,78,71,70,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,57,65,66,62,71],
[67,0,63,60,64,60,59,67],
[64,68,0,62,70,61,63,65],
[74,71,69,0,74,64,56,67],
[66,67,61,57,0,61,59,61],
[65,71,70,67,70,0,66,71],
[69,72,68,75,72,65,0,75],
[60,64,66,64,70,60,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,62,58,61,67,69],
[68,0,64,66,65,58,59,73],
[71,67,0,61,62,79,64,79],
[69,65,70,0,68,62,70,75],
[73,66,69,63,0,70,65,80],
[70,73,52,69,61,0,67,75],
[64,72,67,61,66,64,0,66],
[62,58,52,56,51,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,79,77,60,77,69,57],
[60,0,72,56,58,61,56,59],
[52,59,0,60,55,59,58,54],
[54,75,71,0,72,72,64,67],
[71,73,76,59,0,68,72,58],
[54,70,72,59,63,0,68,64],
[62,75,73,67,59,63,0,56],
[74,72,77,64,73,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,66,60,72,63,67],
[66,0,72,68,61,72,70,74],
[60,59,0,67,60,60,68,71],
[65,63,64,0,59,67,60,70],
[71,70,71,72,0,61,65,66],
[59,59,71,64,70,0,64,65],
[68,61,63,71,66,67,0,72],
[64,57,60,61,65,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,64,52,54,40,49,55],
[87,0,92,93,60,72,72,76],
[67,39,0,58,50,35,39,73],
[79,38,73,0,56,42,42,56],
[77,71,81,75,0,55,68,72],
[91,59,96,89,76,0,66,80],
[82,59,92,89,63,65,0,61],
[76,55,58,75,59,51,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,71,58,61,76,65],
[63,0,40,57,38,48,55,86],
[56,91,0,83,77,59,86,84],
[60,74,48,0,63,66,69,73],
[73,93,54,68,0,66,69,88],
[70,83,72,65,65,0,81,91],
[55,76,45,62,62,50,0,72],
[66,45,47,58,43,40,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,57,57,58,62,70,64],
[57,0,51,57,58,61,62,57],
[74,80,0,70,64,74,70,70],
[74,74,61,0,65,78,74,61],
[73,73,67,66,0,67,74,64],
[69,70,57,53,64,0,71,72],
[61,69,61,57,57,60,0,57],
[67,74,61,70,67,59,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,60,69,77,72,73],
[68,0,65,70,69,78,74,85],
[56,66,0,56,75,72,67,63],
[71,61,75,0,67,87,69,73],
[62,62,56,64,0,79,63,63],
[54,53,59,44,52,0,65,68],
[59,57,64,62,68,66,0,63],
[58,46,68,58,68,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,70,74,67,56,63],
[74,0,69,75,72,70,56,75],
[70,62,0,71,72,70,60,66],
[61,56,60,0,74,68,68,67],
[57,59,59,57,0,65,55,60],
[64,61,61,63,66,0,66,60],
[75,75,71,63,76,65,0,71],
[68,56,65,64,71,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,63,56,69,66,72,62],
[72,0,72,73,64,71,71,69],
[68,59,0,69,67,66,74,60],
[75,58,62,0,72,60,75,52],
[62,67,64,59,0,69,65,59],
[65,60,65,71,62,0,70,58],
[59,60,57,56,66,61,0,55],
[69,62,71,79,72,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,70,67,71,65,46],
[75,0,64,75,69,79,74,75],
[65,67,0,70,71,72,68,56],
[61,56,61,0,50,50,55,41],
[64,62,60,81,0,70,75,64],
[60,52,59,81,61,0,70,63],
[66,57,63,76,56,61,0,44],
[85,56,75,90,67,68,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,32,51,46,48,41,50],
[62,0,53,64,62,49,75,49],
[99,78,0,60,61,55,66,68],
[80,67,71,0,59,52,53,63],
[85,69,70,72,0,54,84,65],
[83,82,76,79,77,0,77,63],
[90,56,65,78,47,54,0,73],
[81,82,63,68,66,68,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,65,65,77,83,65,60],
[79,0,59,62,68,65,58,40],
[66,72,0,68,59,60,68,64],
[66,69,63,0,70,68,46,68],
[54,63,72,61,0,59,65,59],
[48,66,71,63,72,0,64,48],
[66,73,63,85,66,67,0,65],
[71,91,67,63,72,83,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,67,70,69,66,61],
[68,0,62,61,54,68,64,53],
[63,69,0,71,72,65,68,66],
[64,70,60,0,62,62,64,53],
[61,77,59,69,0,68,63,55],
[62,63,66,69,63,0,55,52],
[65,67,63,67,68,76,0,61],
[70,78,65,78,76,79,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,59,74,57,55,58],
[65,0,62,62,75,62,59,63],
[70,69,0,69,75,72,66,63],
[72,69,62,0,71,59,64,73],
[57,56,56,60,0,60,62,57],
[74,69,59,72,71,0,72,61],
[76,72,65,67,69,59,0,68],
[73,68,68,58,74,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,93,58,72,60,66,78],
[50,0,55,58,50,41,29,42],
[38,76,0,73,75,50,41,54],
[73,73,58,0,63,55,52,55],
[59,81,56,68,0,65,48,58],
[71,90,81,76,66,0,54,63],
[65,102,90,79,83,77,0,77],
[53,89,77,76,73,68,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,61,67,65,58,60],
[67,0,71,70,60,62,64,70],
[72,60,0,68,58,73,63,67],
[70,61,63,0,66,64,68,65],
[64,71,73,65,0,67,65,70],
[66,69,58,67,64,0,63,60],
[73,67,68,63,66,68,0,68],
[71,61,64,66,61,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,66,57,66,72,63],
[68,0,72,58,62,66,61,53],
[53,59,0,62,57,67,52,58],
[65,73,69,0,63,74,69,69],
[74,69,74,68,0,73,63,60],
[65,65,64,57,58,0,67,59],
[59,70,79,62,68,64,0,54],
[68,78,73,62,71,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,77,77,57,58,61],
[62,0,78,64,73,63,81,50],
[55,53,0,59,49,51,64,52],
[54,67,72,0,54,54,70,48],
[54,58,82,77,0,74,76,64],
[74,68,80,77,57,0,71,68],
[73,50,67,61,55,60,0,57],
[70,81,79,83,67,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,48,53,43,44,44,30],
[99,0,63,57,97,54,52,96],
[83,68,0,73,80,69,49,89],
[78,74,58,0,68,51,71,78],
[88,34,51,63,0,51,85,78],
[87,77,62,80,80,0,64,91],
[87,79,82,60,46,67,0,70],
[101,35,42,53,53,40,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,80,68,67,67,56,73],
[60,0,68,54,78,56,65,79],
[51,63,0,71,63,51,52,79],
[63,77,60,0,70,58,69,57],
[64,53,68,61,0,67,48,63],
[64,75,80,73,64,0,72,67],
[75,66,79,62,83,59,0,73],
[58,52,52,74,68,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,86,73,70,75,67],
[78,0,71,78,64,67,78,61],
[66,60,0,82,66,71,67,64],
[45,53,49,0,41,64,61,49],
[58,67,65,90,0,72,80,69],
[61,64,60,67,59,0,70,66],
[56,53,64,70,51,61,0,66],
[64,70,67,82,62,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,53,58,64,66,59,64],
[73,0,65,66,60,64,67,73],
[78,66,0,67,65,69,70,73],
[73,65,64,0,71,60,72,65],
[67,71,66,60,0,68,64,65],
[65,67,62,71,63,0,65,63],
[72,64,61,59,67,66,0,69],
[67,58,58,66,66,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,63,69,59,69,66],
[69,0,60,61,72,64,78,65],
[67,71,0,57,62,67,71,61],
[68,70,74,0,71,72,70,62],
[62,59,69,60,0,66,70,54],
[72,67,64,59,65,0,71,60],
[62,53,60,61,61,60,0,59],
[65,66,70,69,77,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,54,53,71,74,56],
[62,0,71,64,61,61,70,63],
[70,60,0,64,48,55,73,62],
[77,67,67,0,62,68,78,61],
[78,70,83,69,0,68,82,63],
[60,70,76,63,63,0,78,69],
[57,61,58,53,49,53,0,59],
[75,68,69,70,68,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,65,42,38,63,62,73],
[52,0,64,56,40,61,47,67],
[66,67,0,66,60,77,52,79],
[89,75,65,0,73,92,68,91],
[93,91,71,58,0,78,65,86],
[68,70,54,39,53,0,58,66],
[69,84,79,63,66,73,0,77],
[58,64,52,40,45,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,61,72,59,77,68],
[59,0,58,50,50,54,61,54],
[72,73,0,73,65,67,76,75],
[70,81,58,0,58,64,74,66],
[59,81,66,73,0,64,68,66],
[72,77,64,67,67,0,73,76],
[54,70,55,57,63,58,0,60],
[63,77,56,65,65,55,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,95,95,95,95,50,131],
[81,0,45,81,81,81,95,81],
[36,86,0,131,36,36,50,36],
[36,50,0,0,0,36,50,36],
[36,50,95,131,0,131,50,81],
[36,50,95,95,0,0,50,36],
[81,36,81,81,81,81,0,81],
[0,50,95,95,50,95,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,76,68,73,75,66],
[67,0,65,64,70,75,76,69],
[59,66,0,77,76,84,77,68],
[55,67,54,0,55,61,51,57],
[63,61,55,76,0,69,70,67],
[58,56,47,70,62,0,63,49],
[56,55,54,80,61,68,0,65],
[65,62,63,74,64,82,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,68,84,61,58,48,65],
[77,0,65,79,70,53,62,62],
[63,66,0,70,57,50,66,57],
[47,52,61,0,44,47,51,47],
[70,61,74,87,0,74,60,65],
[73,78,81,84,57,0,55,70],
[83,69,65,80,71,76,0,83],
[66,69,74,84,66,61,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,74,72,64,63,68],
[64,0,56,72,72,58,66,59],
[61,75,0,68,63,65,61,66],
[57,59,63,0,70,58,61,61],
[59,59,68,61,0,57,59,56],
[67,73,66,73,74,0,68,65],
[68,65,70,70,72,63,0,65],
[63,72,65,70,75,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,70,72,71,74,65],
[71,0,59,67,68,64,65,63],
[64,72,0,71,64,73,67,58],
[61,64,60,0,64,67,67,65],
[59,63,67,67,0,73,77,75],
[60,67,58,64,58,0,75,61],
[57,66,64,64,54,56,0,52],
[66,68,73,66,56,70,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,54,53,58,78,66,45],
[79,0,62,73,89,93,84,78],
[77,69,0,73,71,78,65,64],
[78,58,58,0,67,86,64,63],
[73,42,60,64,0,57,54,47],
[53,38,53,45,74,0,59,42],
[65,47,66,67,77,72,0,60],
[86,53,67,68,84,89,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,44,60,53,56,75,45],
[76,0,47,57,66,70,73,75],
[87,84,0,67,65,75,93,73],
[71,74,64,0,87,89,78,71],
[78,65,66,44,0,70,76,48],
[75,61,56,42,61,0,74,55],
[56,58,38,53,55,57,0,39],
[86,56,58,60,83,76,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,71,54,61,72,55,68],
[79,0,78,59,64,81,74,61],
[60,53,0,54,64,68,52,55],
[77,72,77,0,80,79,63,82],
[70,67,67,51,0,76,62,63],
[59,50,63,52,55,0,51,46],
[76,57,79,68,69,80,0,67],
[63,70,76,49,68,85,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,50,63,52,59,67,82],
[79,0,28,52,41,66,51,57],
[81,103,0,77,69,57,69,84],
[68,79,54,0,39,59,59,54],
[79,90,62,92,0,77,88,96],
[72,65,74,72,54,0,65,76],
[64,80,62,72,43,66,0,62],
[49,74,47,77,35,55,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,69,75,56,56,47],
[86,0,53,68,88,67,56,70],
[92,78,0,58,71,69,66,61],
[62,63,73,0,70,65,52,63],
[56,43,60,61,0,67,45,50],
[75,64,62,66,64,0,64,58],
[75,75,65,79,86,67,0,62],
[84,61,70,68,81,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,93,82,68,66,59],
[65,0,55,90,76,59,48,56],
[65,76,0,75,69,65,66,70],
[38,41,56,0,52,51,39,46],
[49,55,62,79,0,66,60,58],
[63,72,66,80,65,0,56,72],
[65,83,65,92,71,75,0,63],
[72,75,61,85,73,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,51,71,53,60,57,62],
[68,0,66,73,68,64,71,69],
[80,65,0,72,70,82,88,63],
[60,58,59,0,59,75,68,62],
[78,63,61,72,0,69,71,62],
[71,67,49,56,62,0,65,55],
[74,60,43,63,60,66,0,59],
[69,62,68,69,69,76,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,64,65,70,66,55],
[70,0,72,54,63,69,62,54],
[72,59,0,62,63,70,67,66],
[67,77,69,0,69,70,73,54],
[66,68,68,62,0,74,80,69],
[61,62,61,61,57,0,62,43],
[65,69,64,58,51,69,0,56],
[76,77,65,77,62,88,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,81,76,72,64,73,64],
[56,0,67,59,62,65,57,60],
[50,64,0,64,52,61,63,54],
[55,72,67,0,61,55,62,59],
[59,69,79,70,0,70,71,60],
[67,66,70,76,61,0,65,59],
[58,74,68,69,60,66,0,67],
[67,71,77,72,71,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,62,64,65,63,68],
[66,0,85,71,75,61,56,60],
[66,46,0,63,71,51,55,61],
[69,60,68,0,66,60,45,58],
[67,56,60,65,0,65,47,61],
[66,70,80,71,66,0,64,71],
[68,75,76,86,84,67,0,59],
[63,71,70,73,70,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,75,62,61,77,66,64],
[70,0,70,59,66,77,69,61],
[56,61,0,57,61,72,66,51],
[69,72,74,0,63,72,73,69],
[70,65,70,68,0,72,71,59],
[54,54,59,59,59,0,58,45],
[65,62,65,58,60,73,0,65],
[67,70,80,62,72,86,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,67,61,81,80,70],
[62,0,69,73,56,72,68,67],
[69,62,0,71,67,64,68,67],
[64,58,60,0,59,64,65,62],
[70,75,64,72,0,72,71,68],
[50,59,67,67,59,0,70,70],
[51,63,63,66,60,61,0,62],
[61,64,64,69,63,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,65,61,64,69,61],
[72,0,62,63,64,62,68,63],
[67,69,0,56,65,67,63,58],
[66,68,75,0,65,61,75,63],
[70,67,66,66,0,57,66,59],
[67,69,64,70,74,0,78,66],
[62,63,68,56,65,53,0,70],
[70,68,73,68,72,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,67,68,64,65,57],
[70,0,67,71,62,66,62,63],
[61,64,0,62,72,62,58,63],
[64,60,69,0,68,65,60,53],
[63,69,59,63,0,59,64,58],
[67,65,69,66,72,0,71,65],
[66,69,73,71,67,60,0,67],
[74,68,68,78,73,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,65,63,66,62,77],
[72,0,66,58,69,69,72,78],
[62,65,0,53,58,62,62,72],
[66,73,78,0,65,64,74,82],
[68,62,73,66,0,72,68,78],
[65,62,69,67,59,0,74,80],
[69,59,69,57,63,57,0,74],
[54,53,59,49,53,51,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,63,69,68,62,65,77],
[78,0,72,84,80,65,73,73],
[68,59,0,69,68,64,59,67],
[62,47,62,0,66,68,58,65],
[63,51,63,65,0,55,63,68],
[69,66,67,63,76,0,56,80],
[66,58,72,73,68,75,0,77],
[54,58,64,66,63,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,67,60,63,62,61],
[62,0,66,78,60,66,67,66],
[75,65,0,72,68,69,71,60],
[64,53,59,0,59,62,58,57],
[71,71,63,72,0,68,63,62],
[68,65,62,69,63,0,66,63],
[69,64,60,73,68,65,0,71],
[70,65,71,74,69,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,56,60,67,59,63],
[63,0,60,61,55,57,56,52],
[64,71,0,62,59,66,73,73],
[75,70,69,0,69,62,58,70],
[71,76,72,62,0,56,70,68],
[64,74,65,69,75,0,67,65],
[72,75,58,73,61,64,0,65],
[68,79,58,61,63,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,66,78,70,63,62],
[66,0,68,67,74,61,52,75],
[66,63,0,69,77,68,66,85],
[65,64,62,0,73,64,68,78],
[53,57,54,58,0,61,47,56],
[61,70,63,67,70,0,72,73],
[68,79,65,63,84,59,0,73],
[69,56,46,53,75,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,72,73,63,70,74],
[65,0,48,66,69,65,66,74],
[64,83,0,77,77,77,73,81],
[59,65,54,0,67,63,67,70],
[58,62,54,64,0,70,68,69],
[68,66,54,68,61,0,72,70],
[61,65,58,64,63,59,0,74],
[57,57,50,61,62,61,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,81,69,57,77,94,79],
[55,0,57,68,65,70,64,69],
[50,74,0,67,53,59,67,70],
[62,63,64,0,59,57,67,61],
[74,66,78,72,0,77,79,62],
[54,61,72,74,54,0,79,68],
[37,67,64,64,52,52,0,71],
[52,62,61,70,69,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,59,57,58,54,61],
[77,0,69,69,69,69,66,61],
[71,62,0,61,62,56,65,68],
[72,62,70,0,61,66,65,69],
[74,62,69,70,0,67,72,66],
[73,62,75,65,64,0,69,65],
[77,65,66,66,59,62,0,68],
[70,70,63,62,65,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,69,73,77,64,62],
[64,0,72,53,73,72,68,49],
[63,59,0,53,61,74,50,50],
[62,78,78,0,88,82,62,77],
[58,58,70,43,0,67,63,61],
[54,59,57,49,64,0,56,58],
[67,63,81,69,68,75,0,58],
[69,82,81,54,70,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,65,74,74,76,68,58],
[51,0,69,64,71,73,69,65],
[66,62,0,77,66,63,68,76],
[57,67,54,0,79,64,72,65],
[57,60,65,52,0,66,58,67],
[55,58,68,67,65,0,70,59],
[63,62,63,59,73,61,0,68],
[73,66,55,66,64,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,53,53,99,131,105,98],
[33,0,39,39,85,91,105,91],
[78,92,0,59,111,84,131,78],
[78,92,72,0,52,84,98,84],
[32,46,20,79,0,98,131,98],
[0,40,47,47,33,0,99,14],
[26,26,0,33,0,32,0,26],
[33,40,53,47,33,117,105,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,110,50,72,106,101,108],
[69,0,103,71,49,82,95,94],
[21,28,0,35,33,55,53,43],
[81,60,96,0,84,85,85,90],
[59,82,98,47,0,87,82,66],
[25,49,76,46,44,0,73,65],
[30,36,78,46,49,58,0,72],
[23,37,88,41,65,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,57,55,44,49,62],
[64,0,77,65,51,80,63,61],
[66,54,0,51,58,65,56,62],
[74,66,80,0,66,45,71,61],
[76,80,73,65,0,78,64,62],
[87,51,66,86,53,0,63,65],
[82,68,75,60,67,68,0,77],
[69,70,69,70,69,66,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,73,54,55,69,58],
[63,0,62,74,69,51,50,63],
[74,69,0,64,68,52,64,67],
[58,57,67,0,61,55,64,58],
[77,62,63,70,0,51,60,55],
[76,80,79,76,80,0,64,66],
[62,81,67,67,71,67,0,72],
[73,68,64,73,76,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,63,57,71,59,72,78],
[76,0,58,77,77,86,82,76],
[68,73,0,48,60,72,55,82],
[74,54,83,0,72,88,67,91],
[60,54,71,59,0,73,53,87],
[72,45,59,43,58,0,62,91],
[59,49,76,64,78,69,0,91],
[53,55,49,40,44,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,53,63,76,64,51,50],
[75,0,69,66,88,75,55,81],
[78,62,0,59,66,54,81,73],
[68,65,72,0,85,52,65,61],
[55,43,65,46,0,49,61,53],
[67,56,77,79,82,0,74,67],
[80,76,50,66,70,57,0,61],
[81,50,58,70,78,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,64,73,67,68,61],
[72,0,68,66,77,63,69,66],
[62,63,0,64,68,60,66,66],
[67,65,67,0,75,71,73,66],
[58,54,63,56,0,56,62,61],
[64,68,71,60,75,0,66,64],
[63,62,65,58,69,65,0,53],
[70,65,65,65,70,67,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,62,72,81,86,71],
[63,0,63,67,58,72,73,65],
[67,68,0,66,68,64,72,64],
[69,64,65,0,63,73,82,67],
[59,73,63,68,0,72,78,72],
[50,59,67,58,59,0,68,54],
[45,58,59,49,53,63,0,52],
[60,66,67,64,59,77,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,61,52,56,77,37,91],
[85,0,77,77,63,95,71,98],
[70,54,0,64,62,98,62,91],
[79,54,67,0,51,91,54,92],
[75,68,69,80,0,92,61,100],
[54,36,33,40,39,0,45,58],
[94,60,69,77,70,86,0,81],
[40,33,40,39,31,73,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,50,51,64,62,59,68],
[76,0,69,63,72,72,76,72],
[81,62,0,66,72,72,80,75],
[80,68,65,0,72,76,72,67],
[67,59,59,59,0,65,62,66],
[69,59,59,55,66,0,63,59],
[72,55,51,59,69,68,0,67],
[63,59,56,64,65,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,65,57,66,81,59],
[64,0,72,53,58,46,56,51],
[54,59,0,53,50,64,61,64],
[66,78,78,0,56,63,92,84],
[74,73,81,75,0,59,82,77],
[65,85,67,68,72,0,78,83],
[50,75,70,39,49,53,0,55],
[72,80,67,47,54,48,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,58,62,64,76,57,77],
[58,0,51,65,53,65,68,65],
[73,80,0,63,79,78,77,97],
[69,66,68,0,69,66,80,64],
[67,78,52,62,0,79,66,76],
[55,66,53,65,52,0,74,79],
[74,63,54,51,65,57,0,76],
[54,66,34,67,55,52,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,59,64,66,64,65],
[72,0,60,77,75,68,69,67],
[67,71,0,65,76,68,69,65],
[72,54,66,0,64,62,69,60],
[67,56,55,67,0,62,60,61],
[65,63,63,69,69,0,74,66],
[67,62,62,62,71,57,0,63],
[66,64,66,71,70,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,61,62,69,68,55],
[72,0,72,76,76,80,68,56],
[59,59,0,73,69,68,67,59],
[70,55,58,0,68,65,67,55],
[69,55,62,63,0,57,53,55],
[62,51,63,66,74,0,79,50],
[63,63,64,64,78,52,0,75],
[76,75,72,76,76,81,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,58,57,58,62,67,64],
[79,0,67,60,58,73,71,63],
[73,64,0,70,61,68,65,62],
[74,71,61,0,66,72,71,67],
[73,73,70,65,0,69,70,65],
[69,58,63,59,62,0,67,56],
[64,60,66,60,61,64,0,58],
[67,68,69,64,66,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,71,67,58,79,67],
[77,0,72,72,64,70,78,68],
[64,59,0,69,69,67,75,63],
[60,59,62,0,75,62,70,72],
[64,67,62,56,0,63,83,72],
[73,61,64,69,68,0,78,80],
[52,53,56,61,48,53,0,55],
[64,63,68,59,59,51,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,58,64,62,67,72],
[64,0,68,57,74,62,74,69],
[55,63,0,60,78,54,57,66],
[73,74,71,0,75,61,56,73],
[67,57,53,56,0,47,53,63],
[69,69,77,70,84,0,56,75],
[64,57,74,75,78,75,0,71],
[59,62,65,58,68,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,67,56,72,72,57],
[68,0,56,64,59,59,55,58],
[66,75,0,70,70,67,75,65],
[64,67,61,0,59,73,72,52],
[75,72,61,72,0,66,78,68],
[59,72,64,58,65,0,76,60],
[59,76,56,59,53,55,0,61],
[74,73,66,79,63,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,53,66,79,63,97,92],
[50,0,32,58,71,71,98,101],
[78,99,0,93,77,52,99,102],
[65,73,38,0,59,48,76,70],
[52,60,54,72,0,64,110,85],
[68,60,79,83,67,0,110,122],
[34,33,32,55,21,21,0,64],
[39,30,29,61,46,9,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,54,44,53,58,54,61],
[76,0,62,57,59,40,57,67],
[77,69,0,52,66,74,51,56],
[87,74,79,0,76,60,74,82],
[78,72,65,55,0,61,50,66],
[73,91,57,71,70,0,76,81],
[77,74,80,57,81,55,0,92],
[70,64,75,49,65,50,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,68,68,65,65,65],
[59,0,52,64,61,68,62,55],
[60,79,0,66,67,73,68,63],
[63,67,65,0,59,67,63,62],
[63,70,64,72,0,68,66,62],
[66,63,58,64,63,0,60,56],
[66,69,63,68,65,71,0,68],
[66,76,68,69,69,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,81,68,77,84,67,48],
[77,0,98,51,99,89,91,70],
[50,33,0,32,80,108,90,30],
[63,80,99,0,102,112,90,55],
[54,32,51,29,0,86,69,27],
[47,42,23,19,45,0,22,20],
[64,40,41,41,62,109,0,33],
[83,61,101,76,104,111,98,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,57,53,63,55,64],
[67,0,67,62,64,67,72,80],
[67,64,0,63,71,63,76,67],
[74,69,68,0,73,74,64,69],
[78,67,60,58,0,72,79,65],
[68,64,68,57,59,0,69,72],
[76,59,55,67,52,62,0,72],
[67,51,64,62,66,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,73,61,67,62,74,63],
[50,0,66,65,54,63,65,60],
[58,65,0,49,57,59,58,64],
[70,66,82,0,63,66,71,68],
[64,77,74,68,0,67,64,73],
[69,68,72,65,64,0,48,72],
[57,66,73,60,67,83,0,63],
[68,71,67,63,58,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,68,74,66,69,72],
[65,0,59,78,71,70,65,67],
[71,72,0,69,73,63,62,62],
[63,53,62,0,74,66,57,50],
[57,60,58,57,0,60,54,49],
[65,61,68,65,71,0,67,66],
[62,66,69,74,77,64,0,51],
[59,64,69,81,82,65,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,54,43,59,57,59],
[70,0,60,51,55,59,54,56],
[71,71,0,68,58,66,68,60],
[77,80,63,0,68,77,67,71],
[88,76,73,63,0,77,61,67],
[72,72,65,54,54,0,55,56],
[74,77,63,64,70,76,0,68],
[72,75,71,60,64,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,84,74,61,45,72,86],
[44,0,70,49,44,40,61,65],
[47,61,0,52,42,42,71,79],
[57,82,79,0,68,61,68,90],
[70,87,89,63,0,69,78,96],
[86,91,89,70,62,0,85,95],
[59,70,60,63,53,46,0,87],
[45,66,52,41,35,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,83,59,66,55,67,61],
[62,0,72,55,58,41,70,61],
[48,59,0,57,53,58,54,57],
[72,76,74,0,64,47,73,64],
[65,73,78,67,0,66,80,64],
[76,90,73,84,65,0,92,67],
[64,61,77,58,51,39,0,58],
[70,70,74,67,67,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,59,62,60,62,68],
[67,0,66,69,70,71,67,63],
[62,65,0,63,58,67,62,67],
[72,62,68,0,59,72,72,78],
[69,61,73,72,0,63,63,68],
[71,60,64,59,68,0,63,63],
[69,64,69,59,68,68,0,69],
[63,68,64,53,63,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,70,71,72,65,67],
[63,0,74,70,67,76,72,71],
[63,57,0,61,63,65,66,66],
[61,61,70,0,64,70,70,77],
[60,64,68,67,0,70,68,72],
[59,55,66,61,61,0,59,65],
[66,59,65,61,63,72,0,72],
[64,60,65,54,59,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,52,62,65,70,52],
[65,0,61,54,63,65,68,57],
[63,70,0,69,64,67,68,66],
[79,77,62,0,73,74,70,71],
[69,68,67,58,0,71,62,65],
[66,66,64,57,60,0,56,63],
[61,63,63,61,69,75,0,66],
[79,74,65,60,66,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,57,67,49,78,62,63],
[57,0,45,45,51,73,38,58],
[74,86,0,60,76,86,79,87],
[64,86,71,0,54,76,78,65],
[82,80,55,77,0,77,74,88],
[53,58,45,55,54,0,52,83],
[69,93,52,53,57,79,0,80],
[68,73,44,66,43,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,55,61,52,51,60],
[53,0,53,53,58,68,40,58],
[63,78,0,55,68,58,49,58],
[76,78,76,0,69,72,54,79],
[70,73,63,62,0,63,52,51],
[79,63,73,59,68,0,53,63],
[80,91,82,77,79,78,0,65],
[71,73,73,52,80,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,64,67,74,78,62],
[58,0,56,61,65,63,72,60],
[62,75,0,67,70,72,72,63],
[67,70,64,0,63,72,64,67],
[64,66,61,68,0,68,71,64],
[57,68,59,59,63,0,64,61],
[53,59,59,67,60,67,0,62],
[69,71,68,64,67,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,77,69,73,76,74],
[67,0,70,83,64,86,76,61],
[59,61,0,85,79,58,75,83],
[54,48,46,0,36,51,76,47],
[62,67,52,95,0,53,72,66],
[58,45,73,80,78,0,75,82],
[55,55,56,55,59,56,0,66],
[57,70,48,84,65,49,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,64,50,68,75,61,57],
[78,0,65,62,68,75,77,76],
[67,66,0,50,55,72,77,59],
[81,69,81,0,72,84,64,74],
[63,63,76,59,0,66,63,61],
[56,56,59,47,65,0,61,59],
[70,54,54,67,68,70,0,60],
[74,55,72,57,70,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,77,87,63,73,68],
[55,0,68,63,65,63,79,56],
[62,63,0,71,60,76,69,63],
[54,68,60,0,64,56,66,52],
[44,66,71,67,0,65,62,59],
[68,68,55,75,66,0,61,52],
[58,52,62,65,69,70,0,58],
[63,75,68,79,72,79,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,84,62,61,70,60,51],
[65,0,58,56,78,73,85,60],
[47,73,0,73,65,66,66,51],
[69,75,58,0,71,68,63,66],
[70,53,66,60,0,66,81,72],
[61,58,65,63,65,0,56,55],
[71,46,65,68,50,75,0,45],
[80,71,80,65,59,76,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,60,61,66,75,66],
[62,0,70,66,62,71,73,70],
[64,61,0,58,65,55,72,70],
[71,65,73,0,69,68,73,75],
[70,69,66,62,0,68,66,69],
[65,60,76,63,63,0,66,65],
[56,58,59,58,65,65,0,65],
[65,61,61,56,62,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,69,65,67,71,76],
[63,0,62,62,63,58,72,66],
[63,69,0,63,65,60,71,64],
[62,69,68,0,77,60,76,76],
[66,68,66,54,0,63,67,72],
[64,73,71,71,68,0,79,70],
[60,59,60,55,64,52,0,60],
[55,65,67,55,59,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,61,67,65,66,62],
[62,0,64,63,74,64,64,62],
[64,67,0,63,78,66,67,68],
[70,68,68,0,72,74,65,71],
[64,57,53,59,0,64,53,59],
[66,67,65,57,67,0,64,62],
[65,67,64,66,78,67,0,67],
[69,69,63,60,72,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,73,61,64,71,69],
[65,0,66,73,68,66,68,71],
[63,65,0,63,68,65,69,64],
[58,58,68,0,64,49,62,69],
[70,63,63,67,0,58,61,61],
[67,65,66,82,73,0,68,67],
[60,63,62,69,70,63,0,64],
[62,60,67,62,70,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,66,80,67,63,71],
[60,0,73,58,75,59,77,64],
[59,58,0,54,74,59,63,68],
[65,73,77,0,77,75,72,78],
[51,56,57,54,0,48,50,62],
[64,72,72,56,83,0,76,66],
[68,54,68,59,81,55,0,63],
[60,67,63,53,69,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,43,63,91,88,62,73],
[63,0,48,46,85,65,50,72],
[88,83,0,76,94,61,63,76],
[68,85,55,0,72,57,61,72],
[40,46,37,59,0,56,57,53],
[43,66,70,74,75,0,70,67],
[69,81,68,70,74,61,0,60],
[58,59,55,59,78,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,75,64,63,60,73,65],
[74,0,64,66,60,58,67,64],
[56,67,0,72,59,60,69,60],
[67,65,59,0,59,61,68,63],
[68,71,72,72,0,66,65,61],
[71,73,71,70,65,0,72,68],
[58,64,62,63,66,59,0,66],
[66,67,71,68,70,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,70,66,69,72,63,61],
[56,0,63,61,68,64,70,53],
[61,68,0,64,63,67,60,65],
[65,70,67,0,71,66,70,64],
[62,63,68,60,0,74,65,62],
[59,67,64,65,57,0,56,58],
[68,61,71,61,66,75,0,66],
[70,78,66,67,69,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,65,73,58,68,68],
[69,0,75,75,78,69,64,74],
[65,56,0,62,71,65,64,62],
[66,56,69,0,65,63,67,60],
[58,53,60,66,0,54,53,56],
[73,62,66,68,77,0,60,67],
[63,67,67,64,78,71,0,74],
[63,57,69,71,75,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,97,70,73,27,82],
[59,0,74,96,85,69,71,85],
[69,57,0,90,58,54,46,70],
[34,35,41,0,49,58,26,73],
[61,46,73,82,0,73,73,63],
[58,62,77,73,58,0,42,85],
[104,60,85,105,58,89,0,70],
[49,46,61,58,68,46,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,63,57,67,72,66],
[75,0,71,70,65,82,70,69],
[67,60,0,57,45,72,62,63],
[68,61,74,0,52,69,64,66],
[74,66,86,79,0,75,59,80],
[64,49,59,62,56,0,56,56],
[59,61,69,67,72,75,0,78],
[65,62,68,65,51,75,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,79,58,63,66,59,63],
[76,0,78,70,79,77,70,60],
[52,53,0,55,50,84,49,65],
[73,61,76,0,78,80,72,68],
[68,52,81,53,0,81,62,68],
[65,54,47,51,50,0,52,43],
[72,61,82,59,69,79,0,57],
[68,71,66,63,63,88,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,62,64,69,72,76,66],
[54,0,71,70,65,64,67,61],
[69,60,0,72,65,63,65,55],
[67,61,59,0,69,58,68,55],
[62,66,66,62,0,69,60,62],
[59,67,68,73,62,0,64,52],
[55,64,66,63,71,67,0,57],
[65,70,76,76,69,79,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,63,64,62,60,65],
[70,0,58,67,68,72,66,74],
[70,73,0,62,75,64,63,66],
[68,64,69,0,69,68,64,77],
[67,63,56,62,0,56,60,67],
[69,59,67,63,75,0,58,68],
[71,65,68,67,71,73,0,65],
[66,57,65,54,64,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,67,63,69,55,90,55],
[81,0,76,62,84,81,85,68],
[64,55,0,51,67,80,77,59],
[68,69,80,0,83,81,91,65],
[62,47,64,48,0,51,66,45],
[76,50,51,50,80,0,90,49],
[41,46,54,40,65,41,0,46],
[76,63,72,66,86,82,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,64,68,76,74,69],
[68,0,59,61,55,67,63,66],
[73,72,0,72,74,70,68,64],
[67,70,59,0,57,61,65,60],
[63,76,57,74,0,65,68,66],
[55,64,61,70,66,0,64,77],
[57,68,63,66,63,67,0,66],
[62,65,67,71,65,54,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,60,56,77,66,61],
[72,0,67,65,66,87,63,72],
[65,64,0,76,69,79,74,74],
[71,66,55,0,66,73,58,64],
[75,65,62,65,0,71,57,66],
[54,44,52,58,60,0,53,50],
[65,68,57,73,74,78,0,72],
[70,59,57,67,65,81,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,64,62,64,72,60],
[68,0,67,66,74,59,77,71],
[62,64,0,60,62,57,66,57],
[67,65,71,0,70,61,65,67],
[69,57,69,61,0,64,67,62],
[67,72,74,70,67,0,74,60],
[59,54,65,66,64,57,0,64],
[71,60,74,64,69,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,59,45,64,59,62],
[68,0,58,63,60,62,72,74],
[73,73,0,63,71,66,62,70],
[72,68,68,0,63,71,80,66],
[86,71,60,68,0,70,72,66],
[67,69,65,60,61,0,73,72],
[72,59,69,51,59,58,0,62],
[69,57,61,65,65,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,74,63,65,57,57,49],
[74,0,81,63,80,73,64,68],
[57,50,0,55,56,46,65,45],
[68,68,76,0,71,66,65,57],
[66,51,75,60,0,68,67,58],
[74,58,85,65,63,0,70,61],
[74,67,66,66,64,61,0,60],
[82,63,86,74,73,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,51,45,53,56,51,47],
[71,0,58,55,51,69,60,61],
[80,73,0,62,64,82,68,71],
[86,76,69,0,71,79,75,65],
[78,80,67,60,0,77,66,61],
[75,62,49,52,54,0,56,60],
[80,71,63,56,65,75,0,59],
[84,70,60,66,70,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,68,64,60,61,60],
[67,0,74,62,64,64,64,72],
[67,57,0,60,56,64,59,63],
[63,69,71,0,70,60,70,77],
[67,67,75,61,0,67,72,63],
[71,67,67,71,64,0,71,72],
[70,67,72,61,59,60,0,74],
[71,59,68,54,68,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,103,92,58,91,76,114],
[61,0,78,105,77,66,54,99],
[28,53,0,60,38,68,20,82],
[39,26,71,0,54,47,54,41],
[73,54,93,77,0,74,84,99],
[40,65,63,84,57,0,26,66],
[55,77,111,77,47,105,0,111],
[17,32,49,90,32,65,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,74,60,75,48,28,68],
[87,0,81,65,103,45,42,65],
[57,50,0,36,71,45,24,46],
[71,66,95,0,102,70,38,93],
[56,28,60,29,0,38,23,63],
[83,86,86,61,93,0,66,90],
[103,89,107,93,108,65,0,84],
[63,66,85,38,68,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,68,64,69,66,68],
[63,0,68,66,65,60,67,67],
[58,63,0,55,67,61,57,66],
[63,65,76,0,74,67,69,78],
[67,66,64,57,0,68,65,69],
[62,71,70,64,63,0,63,63],
[65,64,74,62,66,68,0,64],
[63,64,65,53,62,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,59,63,62,61,59],
[71,0,64,64,58,67,68,63],
[67,67,0,68,56,64,58,58],
[72,67,63,0,68,68,71,70],
[68,73,75,63,0,68,65,72],
[69,64,67,63,63,0,63,64],
[70,63,73,60,66,68,0,62],
[72,68,73,61,59,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,71,69,61,68,52],
[72,0,73,71,78,70,71,65],
[67,58,0,71,67,61,61,58],
[60,60,60,0,70,53,62,60],
[62,53,64,61,0,63,64,48],
[70,61,70,78,68,0,71,70],
[63,60,70,69,67,60,0,67],
[79,66,73,71,83,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,89,67,49,18,73,49],
[58,0,49,73,49,42,73,73],
[42,82,0,57,15,42,57,39],
[64,58,74,0,49,58,55,40],
[82,82,116,82,0,82,82,64],
[113,89,89,73,49,0,113,73],
[58,58,74,76,49,18,0,34],
[82,58,92,91,67,58,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,85,69,62,75,88,60],
[70,0,87,57,82,71,52,62],
[46,44,0,80,69,80,69,67],
[62,74,51,0,76,64,76,79],
[69,49,62,55,0,52,74,69],
[56,60,51,67,79,0,72,56],
[43,79,62,55,57,59,0,64],
[71,69,64,52,62,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,58,46,65,44,73],
[71,0,65,62,62,75,71,78],
[73,66,0,62,55,75,62,75],
[73,69,69,0,76,74,54,66],
[85,69,76,55,0,74,75,84],
[66,56,56,57,57,0,63,72],
[87,60,69,77,56,68,0,75],
[58,53,56,65,47,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,62,66,61,63,58],
[77,0,70,83,75,65,79,74],
[70,61,0,68,54,68,72,64],
[69,48,63,0,60,59,72,63],
[65,56,77,71,0,69,69,63],
[70,66,63,72,62,0,67,67],
[68,52,59,59,62,64,0,64],
[73,57,67,68,68,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,67,73,64,72,71],
[63,0,69,67,78,67,72,68],
[56,62,0,61,71,67,67,68],
[64,64,70,0,74,66,69,68],
[58,53,60,57,0,62,68,60],
[67,64,64,65,69,0,73,66],
[59,59,64,62,63,58,0,61],
[60,63,63,63,71,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,51,56,51,51,60,63],
[74,0,48,65,63,60,63,60],
[80,83,0,75,76,66,77,65],
[75,66,56,0,63,56,72,47],
[80,68,55,68,0,55,79,58],
[80,71,65,75,76,0,78,62],
[71,68,54,59,52,53,0,67],
[68,71,66,84,73,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,66,67,60,64,67],
[69,0,61,63,70,59,63,71],
[68,70,0,66,68,57,63,67],
[65,68,65,0,74,68,64,64],
[64,61,63,57,0,60,59,57],
[71,72,74,63,71,0,71,71],
[67,68,68,67,72,60,0,66],
[64,60,64,67,74,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,57,84,42,42,61,86],
[81,0,72,84,55,83,85,85],
[74,59,0,81,50,44,44,100],
[47,47,50,0,63,47,33,79],
[89,76,81,68,0,50,80,101],
[89,48,87,84,81,0,77,86],
[70,46,87,98,51,54,0,103],
[45,46,31,52,30,45,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,77,77,77,64,77],
[89,0,35,35,64,35,35,35],
[83,96,0,118,83,83,29,29],
[54,96,13,0,42,83,0,29],
[54,67,48,89,0,89,35,35],
[54,96,48,48,42,0,35,64],
[67,96,102,131,96,96,0,42],
[54,96,102,102,96,67,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,77,68,67,74,65,74],
[51,0,75,63,65,67,62,68],
[54,56,0,61,67,74,59,59],
[63,68,70,0,70,70,65,70],
[64,66,64,61,0,61,61,69],
[57,64,57,61,70,0,55,53],
[66,69,72,66,70,76,0,62],
[57,63,72,61,62,78,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,57,58,68,60,69],
[64,0,71,55,76,57,58,73],
[51,60,0,44,61,42,47,60],
[74,76,87,0,73,74,65,81],
[73,55,70,58,0,57,62,68],
[63,74,89,57,74,0,72,71],
[71,73,84,66,69,59,0,74],
[62,58,71,50,63,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,63,74,80,76,74],
[58,0,60,56,64,67,68,50],
[67,71,0,67,80,76,86,61],
[68,75,64,0,81,90,82,75],
[57,67,51,50,0,75,76,62],
[51,64,55,41,56,0,67,51],
[55,63,45,49,55,64,0,54],
[57,81,70,56,69,80,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,67,79,71,65,62],
[67,0,67,71,76,68,64,64],
[65,64,0,65,84,67,68,64],
[64,60,66,0,76,61,68,63],
[52,55,47,55,0,48,52,55],
[60,63,64,70,83,0,61,55],
[66,67,63,63,79,70,0,72],
[69,67,67,68,76,76,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,80,49,51,59,71,71],
[85,0,86,69,63,71,83,86],
[51,45,0,34,60,58,54,62],
[82,62,97,0,84,76,77,92],
[80,68,71,47,0,72,66,79],
[72,60,73,55,59,0,68,65],
[60,48,77,54,65,63,0,69],
[60,45,69,39,52,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,49,53,53,60,49,73],
[66,0,55,72,68,54,51,64],
[82,76,0,93,48,68,68,91],
[78,59,38,0,59,53,55,70],
[78,63,83,72,0,71,68,82],
[71,77,63,78,60,0,52,60],
[82,80,63,76,63,79,0,72],
[58,67,40,61,49,71,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,66,62,57,61,65],
[73,0,60,76,67,66,59,73],
[75,71,0,83,72,62,69,76],
[65,55,48,0,58,49,62,64],
[69,64,59,73,0,59,65,63],
[74,65,69,82,72,0,64,73],
[70,72,62,69,66,67,0,67],
[66,58,55,67,68,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,69,75,72,65,78,67],
[53,0,64,54,68,58,71,56],
[62,67,0,65,65,59,67,60],
[56,77,66,0,69,58,67,69],
[59,63,66,62,0,68,66,62],
[66,73,72,73,63,0,70,66],
[53,60,64,64,65,61,0,69],
[64,75,71,62,69,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,59,63,49,61,73],
[74,0,54,65,55,42,69,70],
[79,77,0,79,64,66,64,70],
[72,66,52,0,58,52,70,77],
[68,76,67,73,0,59,62,79],
[82,89,65,79,72,0,72,73],
[70,62,67,61,69,59,0,83],
[58,61,61,54,52,58,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,58,65,79,72,75,58],
[52,0,68,70,74,65,74,70],
[73,63,0,65,80,70,67,75],
[66,61,66,0,77,52,61,63],
[52,57,51,54,0,63,48,54],
[59,66,61,79,68,0,63,64],
[56,57,64,70,83,68,0,61],
[73,61,56,68,77,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,62,67,64,66,79],
[61,0,63,60,75,66,64,71],
[64,68,0,52,75,65,64,71],
[69,71,79,0,77,62,75,71],
[64,56,56,54,0,57,57,71],
[67,65,66,69,74,0,68,80],
[65,67,67,56,74,63,0,68],
[52,60,60,60,60,51,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,52,77,49,55,37,56],
[62,0,38,50,57,49,52,55],
[79,93,0,77,82,70,65,68],
[54,81,54,0,62,31,57,72],
[82,74,49,69,0,54,69,78],
[76,82,61,100,77,0,74,95],
[94,79,66,74,62,57,0,62],
[75,76,63,59,53,36,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,67,75,72,63,72],
[56,0,57,52,68,65,63,63],
[62,74,0,77,63,66,72,59],
[64,79,54,0,59,58,77,56],
[56,63,68,72,0,76,75,53],
[59,66,65,73,55,0,57,56],
[68,68,59,54,56,74,0,60],
[59,68,72,75,78,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,66,76,65,74,75],
[65,0,62,62,70,64,64,65],
[64,69,0,67,73,70,71,65],
[65,69,64,0,76,75,66,68],
[55,61,58,55,0,66,64,61],
[66,67,61,56,65,0,67,64],
[57,67,60,65,67,64,0,69],
[56,66,66,63,70,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,63,63,63,63,59,60],
[78,0,72,62,75,76,63,75],
[68,59,0,66,69,71,72,69],
[68,69,65,0,62,68,60,60],
[68,56,62,69,0,64,61,58],
[68,55,60,63,67,0,62,69],
[72,68,59,71,70,69,0,74],
[71,56,62,71,73,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,79,85,67,59,56,73],
[54,0,64,70,65,50,62,57],
[52,67,0,90,54,67,76,71],
[46,61,41,0,55,45,51,44],
[64,66,77,76,0,57,67,73],
[72,81,64,86,74,0,66,72],
[75,69,55,80,64,65,0,67],
[58,74,60,87,58,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,73,58,60,51,46],
[74,0,72,79,63,68,78,60],
[64,59,0,72,64,54,54,60],
[58,52,59,0,65,49,53,64],
[73,68,67,66,0,59,64,69],
[71,63,77,82,72,0,60,69],
[80,53,77,78,67,71,0,67],
[85,71,71,67,62,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,55,84,90,57,64,67],
[47,0,73,75,71,77,45,62],
[76,58,0,66,70,55,51,48],
[47,56,65,0,58,68,58,35],
[41,60,61,73,0,59,60,61],
[74,54,76,63,72,0,41,75],
[67,86,80,73,71,90,0,52],
[64,69,83,96,70,56,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,60,65,52,57,44],
[73,0,66,70,73,56,60,51],
[67,65,0,54,68,60,53,52],
[71,61,77,0,59,62,58,72],
[66,58,63,72,0,71,53,51],
[79,75,71,69,60,0,64,65],
[74,71,78,73,78,67,0,62],
[87,80,79,59,80,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,56,46,50,48,74,75],
[78,0,67,49,64,50,78,76],
[75,64,0,63,48,51,82,91],
[85,82,68,0,64,79,91,75],
[81,67,83,67,0,56,74,80],
[83,81,80,52,75,0,96,84],
[57,53,49,40,57,35,0,84],
[56,55,40,56,51,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,51,83,65,66,84],
[67,0,56,71,77,49,73,63],
[58,75,0,64,56,55,67,66],
[80,60,67,0,78,73,65,66],
[48,54,75,53,0,56,67,54],
[66,82,76,58,75,0,74,80],
[65,58,64,66,64,57,0,60],
[47,68,65,65,77,51,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,52,56,65,57,55,41],
[81,0,44,69,79,77,68,63],
[79,87,0,67,65,78,65,70],
[75,62,64,0,68,81,71,59],
[66,52,66,63,0,64,57,53],
[74,54,53,50,67,0,65,43],
[76,63,66,60,74,66,0,65],
[90,68,61,72,78,88,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,76,58,62,54,73,73],
[70,0,69,68,66,59,76,77],
[55,62,0,63,49,50,70,66],
[73,63,68,0,59,49,90,92],
[69,65,82,72,0,68,80,83],
[77,72,81,82,63,0,81,81],
[58,55,61,41,51,50,0,62],
[58,54,65,39,48,50,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,64,63,72,71,77],
[58,0,60,48,63,59,71,66],
[64,71,0,61,58,64,69,71],
[67,83,70,0,70,65,81,74],
[68,68,73,61,0,60,73,64],
[59,72,67,66,71,0,77,73],
[60,60,62,50,58,54,0,70],
[54,65,60,57,67,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,58,61,68,65,67],
[62,0,60,64,65,70,69,65],
[67,71,0,65,68,68,78,69],
[73,67,66,0,69,76,65,68],
[70,66,63,62,0,66,74,72],
[63,61,63,55,65,0,63,67],
[66,62,53,66,57,68,0,67],
[64,66,62,63,59,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,56,61,81,73,68,65],
[61,0,58,57,62,65,56,63],
[75,73,0,58,63,68,60,56],
[70,74,73,0,72,71,63,65],
[50,69,68,59,0,54,48,58],
[58,66,63,60,77,0,58,73],
[63,75,71,68,83,73,0,68],
[66,68,75,66,73,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,76,67,73,63,67,61],
[74,0,64,62,66,76,67,76],
[55,67,0,65,73,67,61,61],
[64,69,66,0,72,71,68,65],
[58,65,58,59,0,64,69,61],
[68,55,64,60,67,0,64,58],
[64,64,70,63,62,67,0,62],
[70,55,70,66,70,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,62,57,67,64,64],
[74,0,81,70,65,75,78,77],
[63,50,0,63,59,70,61,73],
[69,61,68,0,64,71,69,78],
[74,66,72,67,0,66,70,65],
[64,56,61,60,65,0,63,73],
[67,53,70,62,61,68,0,68],
[67,54,58,53,66,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,75,70,68,60,58,59],
[65,0,77,76,62,66,63,62],
[56,54,0,48,51,68,52,59],
[61,55,83,0,52,67,63,62],
[63,69,80,79,0,66,61,61],
[71,65,63,64,65,0,58,66],
[73,68,79,68,70,73,0,57],
[72,69,72,69,70,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,62,60,60,57,59],
[67,0,57,73,64,60,55,64],
[70,74,0,73,61,67,65,75],
[69,58,58,0,63,64,60,56],
[71,67,70,68,0,75,57,63],
[71,71,64,67,56,0,53,69],
[74,76,66,71,74,78,0,60],
[72,67,56,75,68,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,74,56,70,81,80],
[61,0,64,69,56,59,75,72],
[54,67,0,62,60,72,67,62],
[57,62,69,0,58,64,72,74],
[75,75,71,73,0,61,80,80],
[61,72,59,67,70,0,68,59],
[50,56,64,59,51,63,0,58],
[51,59,69,57,51,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,85,75,63,72,61,72],
[67,0,69,74,63,68,68,76],
[46,62,0,67,56,62,56,68],
[56,57,64,0,57,55,64,68],
[68,68,75,74,0,68,53,75],
[59,63,69,76,63,0,68,71],
[70,63,75,67,78,63,0,78],
[59,55,63,63,56,60,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,75,70,52,35,71],
[53,0,62,56,51,75,47,75],
[65,69,0,61,49,63,70,80],
[56,75,70,0,63,60,47,61],
[61,80,82,68,0,64,54,75],
[79,56,68,71,67,0,57,71],
[96,84,61,84,77,74,0,98],
[60,56,51,70,56,60,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,75,66,73,60,70,73],
[55,0,73,57,61,67,66,64],
[56,58,0,57,59,57,58,58],
[65,74,74,0,72,69,70,70],
[58,70,72,59,0,56,58,63],
[71,64,74,62,75,0,69,69],
[61,65,73,61,73,62,0,63],
[58,67,73,61,68,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,79,74,58,78,83,74],
[77,0,65,70,67,71,58,54],
[52,66,0,61,51,76,60,58],
[57,61,70,0,35,68,62,46],
[73,64,80,96,0,94,92,69],
[53,60,55,63,37,0,57,59],
[48,73,71,69,39,74,0,46],
[57,77,73,85,62,72,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,68,83,65,68,62],
[69,0,59,67,73,64,71,71],
[80,72,0,67,86,69,73,64],
[63,64,64,0,83,68,75,62],
[48,58,45,48,0,50,57,44],
[66,67,62,63,81,0,78,71],
[63,60,58,56,74,53,0,59],
[69,60,67,69,87,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,56,59,68,62,57,55],
[60,0,58,62,63,60,57,57],
[75,73,0,74,68,69,70,60],
[72,69,57,0,71,56,62,62],
[63,68,63,60,0,66,65,60],
[69,71,62,75,65,0,71,69],
[74,74,61,69,66,60,0,56],
[76,74,71,69,71,62,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,72,71,72,68,61],
[61,0,78,77,77,71,57,79],
[62,53,0,62,65,67,58,66],
[59,54,69,0,65,69,46,64],
[60,54,66,66,0,66,63,64],
[59,60,64,62,65,0,54,66],
[63,74,73,85,68,77,0,74],
[70,52,65,67,67,65,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,59,80,81,84,82,69],
[52,0,61,70,64,62,63,72],
[72,70,0,69,64,65,58,69],
[51,61,62,0,88,70,69,75],
[50,67,67,43,0,65,60,57],
[47,69,66,61,66,0,60,51],
[49,68,73,62,71,71,0,63],
[62,59,62,56,74,80,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,59,64,69,63,61],
[62,0,68,58,71,63,72,66],
[76,63,0,67,69,64,68,68],
[72,73,64,0,62,73,71,64],
[67,60,62,69,0,56,63,60],
[62,68,67,58,75,0,74,62],
[68,59,63,60,68,57,0,63],
[70,65,63,67,71,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,74,72,73,61,60],
[59,0,54,65,58,59,44,55],
[66,77,0,69,66,60,54,59],
[57,66,62,0,62,57,51,56],
[59,73,65,69,0,69,66,60],
[58,72,71,74,62,0,59,47],
[70,87,77,80,65,72,0,66],
[71,76,72,75,71,84,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,65,42,53,85,52,61],
[82,0,72,78,91,90,68,62],
[66,59,0,61,80,75,71,70],
[89,53,70,0,73,98,75,53],
[78,40,51,58,0,84,59,53],
[46,41,56,33,47,0,52,41],
[79,63,60,56,72,79,0,74],
[70,69,61,78,78,90,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,67,56,52,64,61],
[70,0,64,70,85,68,80,87],
[69,67,0,63,73,80,65,73],
[64,61,68,0,58,71,64,56],
[75,46,58,73,0,55,62,57],
[79,63,51,60,76,0,68,62],
[67,51,66,67,69,63,0,47],
[70,44,58,75,74,69,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,73,65,62,62,71],
[59,0,79,69,72,72,66,60],
[63,52,0,64,63,56,63,64],
[58,62,67,0,69,69,62,64],
[66,59,68,62,0,65,56,75],
[69,59,75,62,66,0,51,70],
[69,65,68,69,75,80,0,76],
[60,71,67,67,56,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,59,52,44,57,61,49],
[91,0,71,65,81,78,81,65],
[72,60,0,61,68,59,73,70],
[79,66,70,0,73,70,77,64],
[87,50,63,58,0,59,65,58],
[74,53,72,61,72,0,65,69],
[70,50,58,54,66,66,0,43],
[82,66,61,67,73,62,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,51,63,68,66,64],
[60,0,76,59,57,65,69,63],
[56,55,0,51,58,69,57,62],
[80,72,80,0,62,73,69,63],
[68,74,73,69,0,63,83,74],
[63,66,62,58,68,0,58,66],
[65,62,74,62,48,73,0,73],
[67,68,69,68,57,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,66,60,80,77,68,71],
[80,0,75,59,74,72,69,90],
[65,56,0,61,75,76,69,71],
[71,72,70,0,64,85,63,82],
[51,57,56,67,0,71,66,74],
[54,59,55,46,60,0,68,76],
[63,62,62,68,65,63,0,76],
[60,41,60,49,57,55,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,50,60,50,48,52,45],
[93,0,93,71,65,84,84,77],
[81,38,0,70,56,55,57,40],
[71,60,61,0,53,66,69,55],
[81,66,75,78,0,75,81,60],
[83,47,76,65,56,0,64,50],
[79,47,74,62,50,67,0,60],
[86,54,91,76,71,81,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,68,65,69,61,64],
[58,0,68,69,60,64,59,60],
[65,63,0,67,71,65,60,68],
[63,62,64,0,71,64,56,62],
[66,71,60,60,0,64,67,65],
[62,67,66,67,67,0,64,68],
[70,72,71,75,64,67,0,68],
[67,71,63,69,66,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,83,50,81,77,96],
[65,0,69,53,54,50,67,74],
[62,62,0,48,37,40,87,71],
[48,78,83,0,66,80,82,89],
[81,77,94,65,0,58,90,74],
[50,81,91,51,73,0,83,73],
[54,64,44,49,41,48,0,66],
[35,57,60,42,57,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,90,87,56,55,74,70],
[78,0,72,78,42,59,84,58],
[41,59,0,69,42,55,88,70],
[44,53,62,0,19,29,60,43],
[75,89,89,112,0,63,101,64],
[76,72,76,102,68,0,65,42],
[57,47,43,71,30,66,0,45],
[61,73,61,88,67,89,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,44,54,36,89,31,58],
[111,0,43,67,35,88,55,58],
[87,88,0,54,88,54,96,87],
[77,64,77,0,88,88,65,111],
[95,96,43,43,0,97,20,69],
[42,43,77,43,34,0,43,58],
[100,76,35,66,111,88,0,100],
[73,73,44,20,62,73,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,71,63,73,71,76],
[66,0,65,84,64,72,67,55],
[62,66,0,70,46,78,63,51],
[60,47,61,0,60,67,61,56],
[68,67,85,71,0,68,67,60],
[58,59,53,64,63,0,56,57],
[60,64,68,70,64,75,0,68],
[55,76,80,75,71,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,71,67,69,80,73,67],
[78,0,66,63,60,74,71,42],
[60,65,0,86,79,78,70,69],
[64,68,45,0,57,72,56,48],
[62,71,52,74,0,64,63,58],
[51,57,53,59,67,0,63,63],
[58,60,61,75,68,68,0,46],
[64,89,62,83,73,68,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,68,69,65,70,64],
[61,0,72,59,71,63,73,64],
[64,59,0,53,62,65,65,67],
[63,72,78,0,67,75,76,69],
[62,60,69,64,0,68,67,67],
[66,68,66,56,63,0,68,66],
[61,58,66,55,64,63,0,65],
[67,67,64,62,64,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,57,73,71,65,71],
[62,0,65,66,65,68,61,64],
[65,66,0,67,68,59,70,78],
[74,65,64,0,85,67,68,80],
[58,66,63,46,0,57,65,64],
[60,63,72,64,74,0,67,84],
[66,70,61,63,66,64,0,79],
[60,67,53,51,67,47,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,61,56,55,67,58],
[66,0,61,61,56,53,70,57],
[70,70,0,69,63,62,67,70],
[70,70,62,0,62,67,74,67],
[75,75,68,69,0,65,77,69],
[76,78,69,64,66,0,79,65],
[64,61,64,57,54,52,0,57],
[73,74,61,64,62,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,68,67,59,67,62],
[69,0,65,72,64,65,69,70],
[69,66,0,66,65,65,72,70],
[63,59,65,0,62,63,64,67],
[64,67,66,69,0,68,67,71],
[72,66,66,68,63,0,69,66],
[64,62,59,67,64,62,0,63],
[69,61,61,64,60,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,71,76,54,77,63],
[64,0,55,64,83,49,60,47],
[64,76,0,77,92,55,75,66],
[60,67,54,0,78,55,52,59],
[55,48,39,53,0,58,38,47],
[77,82,76,76,73,0,59,76],
[54,71,56,79,93,72,0,69],
[68,84,65,72,84,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,66,64,59,67,54],
[72,0,73,74,62,61,69,71],
[67,58,0,67,55,47,62,68],
[65,57,64,0,53,68,55,60],
[67,69,76,78,0,61,75,61],
[72,70,84,63,70,0,63,70],
[64,62,69,76,56,68,0,72],
[77,60,63,71,70,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,63,64,73,75,71,62],
[52,0,53,54,55,61,53,54],
[68,78,0,58,68,74,63,68],
[67,77,73,0,65,69,64,66],
[58,76,63,66,0,72,67,62],
[56,70,57,62,59,0,61,63],
[60,78,68,67,64,70,0,62],
[69,77,63,65,69,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,81,60,69,67,73,64],
[65,0,76,70,68,62,66,62],
[50,55,0,51,54,50,52,50],
[71,61,80,0,73,67,64,68],
[62,63,77,58,0,62,68,67],
[64,69,81,64,69,0,72,77],
[58,65,79,67,63,59,0,68],
[67,69,81,63,64,54,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,56,70,81,71,68],
[61,0,80,89,72,80,74,82],
[59,51,0,66,72,61,60,47],
[75,42,65,0,70,77,64,50],
[61,59,59,61,0,43,82,70],
[50,51,70,54,88,0,71,69],
[60,57,71,67,49,60,0,70],
[63,49,84,81,61,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,63,59,77,65,59],
[58,0,49,63,52,65,56,65],
[65,82,0,73,72,79,68,66],
[68,68,58,0,63,64,63,68],
[72,79,59,68,0,75,68,71],
[54,66,52,67,56,0,73,75],
[66,75,63,68,63,58,0,69],
[72,66,65,63,60,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,58,76,70,70,78,71],
[56,0,54,58,66,67,76,69],
[73,77,0,66,60,61,67,79],
[55,73,65,0,56,60,76,64],
[61,65,71,75,0,76,89,67],
[61,64,70,71,55,0,66,59],
[53,55,64,55,42,65,0,68],
[60,62,52,67,64,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,78,72,78,63,67,72],
[60,0,68,71,58,57,75,68],
[53,63,0,60,64,53,67,61],
[59,60,71,0,63,68,68,72],
[53,73,67,68,0,56,69,61],
[68,74,78,63,75,0,67,65],
[64,56,64,63,62,64,0,67],
[59,63,70,59,70,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,73,65,78,68,59,71],
[53,0,67,59,68,61,58,67],
[58,64,0,60,63,52,63,64],
[66,72,71,0,74,63,66,67],
[53,63,68,57,0,59,53,59],
[63,70,79,68,72,0,67,70],
[72,73,68,65,78,64,0,80],
[60,64,67,64,72,61,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,71,74,71,82,77],
[60,0,64,73,75,73,77,77],
[66,67,0,64,67,63,80,75],
[60,58,67,0,67,57,68,61],
[57,56,64,64,0,55,69,67],
[60,58,68,74,76,0,76,69],
[49,54,51,63,62,55,0,67],
[54,54,56,70,64,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,68,74,76,63,66],
[66,0,61,71,68,74,66,75],
[62,70,0,75,77,72,69,72],
[63,60,56,0,63,61,56,62],
[57,63,54,68,0,58,55,62],
[55,57,59,70,73,0,62,66],
[68,65,62,75,76,69,0,61],
[65,56,59,69,69,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,55,75,64,61,56],
[59,0,65,57,70,67,64,64],
[65,66,0,55,66,63,57,63],
[76,74,76,0,67,60,77,72],
[56,61,65,64,0,61,61,72],
[67,64,68,71,70,0,73,68],
[70,67,74,54,70,58,0,59],
[75,67,68,59,59,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,65,69,64,65,59],
[74,0,73,64,63,66,66,66],
[69,58,0,62,62,62,61,60],
[66,67,69,0,66,65,63,57],
[62,68,69,65,0,64,66,63],
[67,65,69,66,67,0,63,61],
[66,65,70,68,65,68,0,64],
[72,65,71,74,68,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,71,67,75,74,66],
[66,0,65,69,75,70,60,61],
[61,66,0,66,67,71,62,67],
[60,62,65,0,64,74,60,68],
[64,56,64,67,0,67,62,69],
[56,61,60,57,64,0,67,60],
[57,71,69,71,69,64,0,63],
[65,70,64,63,62,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,58,61,67,62,54],
[65,0,57,52,58,58,55,58],
[69,74,0,63,69,64,72,59],
[73,79,68,0,67,69,69,61],
[70,73,62,64,0,69,67,64],
[64,73,67,62,62,0,63,59],
[69,76,59,62,64,68,0,70],
[77,73,72,70,67,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,64,79,66,71,71],
[68,0,68,74,74,69,65,59],
[56,63,0,71,63,67,60,71],
[67,57,60,0,76,64,63,60],
[52,57,68,55,0,60,59,50],
[65,62,64,67,71,0,57,64],
[60,66,71,68,72,74,0,64],
[60,72,60,71,81,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,66,74,64,64,64],
[65,0,56,68,66,67,67,70],
[68,75,0,69,78,69,64,70],
[65,63,62,0,77,63,58,72],
[57,65,53,54,0,59,60,62],
[67,64,62,68,72,0,61,63],
[67,64,67,73,71,70,0,66],
[67,61,61,59,69,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,0,20,20,0,15,15],
[111,0,96,131,54,111,111,111],
[131,35,0,35,35,15,15,72],
[111,0,96,0,54,111,111,72],
[111,77,96,77,0,57,72,72],
[131,20,116,20,74,0,54,72],
[116,20,116,20,59,77,0,92],
[116,20,59,59,59,59,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,60,72,68,67,67],
[69,0,72,53,64,76,80,64],
[69,59,0,58,59,49,49,56],
[71,78,73,0,51,65,75,59],
[59,67,72,80,0,66,72,57],
[63,55,82,66,65,0,56,59],
[64,51,82,56,59,75,0,47],
[64,67,75,72,74,72,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,69,62,85,57,63,55],
[75,0,60,63,82,76,74,47],
[62,71,0,95,86,79,46,61],
[69,68,36,0,56,76,38,41],
[46,49,45,75,0,59,49,42],
[74,55,52,55,72,0,57,76],
[68,57,85,93,82,74,0,53],
[76,84,70,90,89,55,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,64,65,63,61,55],
[67,0,70,64,60,63,64,62],
[69,61,0,65,59,52,61,58],
[67,67,66,0,58,66,62,63],
[66,71,72,73,0,61,71,68],
[68,68,79,65,70,0,69,70],
[70,67,70,69,60,62,0,67],
[76,69,73,68,63,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,54,54,36,51,47],
[75,0,80,61,71,70,63,79],
[71,51,0,58,50,42,52,63],
[77,70,73,0,77,56,62,65],
[77,60,81,54,0,50,55,63],
[95,61,89,75,81,0,71,82],
[80,68,79,69,76,60,0,77],
[84,52,68,66,68,49,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,52,63,63,56,57,59],
[75,0,52,79,76,68,73,77],
[79,79,0,73,78,69,64,73],
[68,52,58,0,80,65,67,71],
[68,55,53,51,0,68,62,59],
[75,63,62,66,63,0,59,75],
[74,58,67,64,69,72,0,75],
[72,54,58,60,72,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,56,64,63,57,60,66],
[81,0,69,67,62,63,77,71],
[75,62,0,64,64,58,84,69],
[67,64,67,0,69,57,81,69],
[68,69,67,62,0,68,65,71],
[74,68,73,74,63,0,66,73],
[71,54,47,50,66,65,0,64],
[65,60,62,62,60,58,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,51,53,52,37,42,41],
[84,0,72,63,66,77,71,56],
[80,59,0,47,64,52,56,39],
[78,68,84,0,54,59,66,74],
[79,65,67,77,0,49,67,62],
[94,54,79,72,82,0,61,67],
[89,60,75,65,64,70,0,59],
[90,75,92,57,69,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,67,82,76,72,69],
[67,0,60,69,70,70,65,58],
[67,71,0,65,67,65,61,64],
[64,62,66,0,66,63,59,69],
[49,61,64,65,0,67,55,59],
[55,61,66,68,64,0,55,64],
[59,66,70,72,76,76,0,67],
[62,73,67,62,72,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,89,78,73,54,79,69],
[40,0,42,54,74,45,78,55],
[42,89,0,59,75,47,68,59],
[53,77,72,0,66,58,68,79],
[58,57,56,65,0,69,68,66],
[77,86,84,73,62,0,85,49],
[52,53,63,63,63,46,0,52],
[62,76,72,52,65,82,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,65,55,59,56,63],
[74,0,64,65,57,66,64,65],
[73,67,0,70,63,61,74,68],
[66,66,61,0,59,58,59,59],
[76,74,68,72,0,62,71,70],
[72,65,70,73,69,0,75,59],
[75,67,57,72,60,56,0,63],
[68,66,63,72,61,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,57,55,68,58,63,49],
[77,0,66,62,60,64,56,66],
[74,65,0,80,61,69,59,50],
[76,69,51,0,64,70,65,53],
[63,71,70,67,0,72,72,70],
[73,67,62,61,59,0,55,62],
[68,75,72,66,59,76,0,58],
[82,65,81,78,61,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,75,59,58,59,66],
[70,0,64,76,67,60,64,69],
[66,67,0,69,63,59,61,60],
[56,55,62,0,56,58,53,59],
[72,64,68,75,0,58,67,69],
[73,71,72,73,73,0,58,65],
[72,67,70,78,64,73,0,70],
[65,62,71,72,62,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,67,67,72,65,71,66],
[49,0,68,50,54,56,60,53],
[64,63,0,63,62,62,75,62],
[64,81,68,0,73,72,76,67],
[59,77,69,58,0,69,83,66],
[66,75,69,59,62,0,70,69],
[60,71,56,55,48,61,0,61],
[65,78,69,64,65,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,69,64,57,62,67],
[59,0,60,58,56,57,52,66],
[65,71,0,61,70,69,67,70],
[62,73,70,0,68,66,74,75],
[67,75,61,63,0,49,48,75],
[74,74,62,65,82,0,68,75],
[69,79,64,57,83,63,0,71],
[64,65,61,56,56,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,70,76,67,87,70,61],
[50,0,61,64,68,55,53,65],
[61,70,0,67,68,79,67,67],
[55,67,64,0,74,59,62,69],
[64,63,63,57,0,83,59,68],
[44,76,52,72,48,0,59,63],
[61,78,64,69,72,72,0,67],
[70,66,64,62,63,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,66,55,55,52,51],
[66,0,58,69,63,66,58,64],
[77,73,0,65,71,62,68,64],
[65,62,66,0,63,61,59,63],
[76,68,60,68,0,62,61,66],
[76,65,69,70,69,0,55,65],
[79,73,63,72,70,76,0,69],
[80,67,67,68,65,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,66,65,61,71,70],
[74,0,59,72,76,56,78,65],
[79,72,0,70,74,64,75,71],
[65,59,61,0,63,67,60,74],
[66,55,57,68,0,51,73,49],
[70,75,67,64,80,0,71,64],
[60,53,56,71,58,60,0,66],
[61,66,60,57,82,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,64,63,68,66,64],
[64,0,66,61,63,68,60,68],
[67,65,0,71,64,70,69,62],
[67,70,60,0,64,64,64,64],
[68,68,67,67,0,66,61,60],
[63,63,61,67,65,0,62,61],
[65,71,62,67,70,69,0,62],
[67,63,69,67,71,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,59,64,69,67,65],
[57,0,68,72,69,72,72,61],
[66,63,0,64,64,68,66,64],
[72,59,67,0,63,65,71,60],
[67,62,67,68,0,74,73,63],
[62,59,63,66,57,0,65,63],
[64,59,65,60,58,66,0,70],
[66,70,67,71,68,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,84,61,69,76,58,67],
[65,0,73,70,66,70,56,61],
[47,58,0,56,71,67,66,64],
[70,61,75,0,81,76,69,67],
[62,65,60,50,0,70,43,50],
[55,61,64,55,61,0,59,58],
[73,75,65,62,88,72,0,61],
[64,70,67,64,81,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,79,69,79,59,69,71],
[58,0,58,47,75,67,73,53],
[52,73,0,46,69,48,68,65],
[62,84,85,0,84,54,70,70],
[52,56,62,47,0,53,65,47],
[72,64,83,77,78,0,63,77],
[62,58,63,61,66,68,0,70],
[60,78,66,61,84,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,46,63,69,72,49],
[85,0,79,78,105,96,54,101],
[86,52,0,69,85,86,63,66],
[85,53,62,0,107,111,90,68],
[68,26,46,24,0,48,52,63],
[62,35,45,20,83,0,68,59],
[59,77,68,41,79,63,0,86],
[82,30,65,63,68,72,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,55,57,70,72,61],
[66,0,65,65,70,55,71,65],
[76,66,0,60,58,66,62,61],
[76,66,71,0,63,60,71,53],
[74,61,73,68,0,62,78,72],
[61,76,65,71,69,0,67,65],
[59,60,69,60,53,64,0,62],
[70,66,70,78,59,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,63,77,68,72,66],
[61,0,69,59,69,70,61,70],
[57,62,0,60,64,59,61,60],
[68,72,71,0,75,72,70,64],
[54,62,67,56,0,65,67,64],
[63,61,72,59,66,0,70,61],
[59,70,70,61,64,61,0,67],
[65,61,71,67,67,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,51,56,67,57,81],
[54,0,80,68,54,63,63,76],
[64,51,0,57,53,39,58,74],
[80,63,74,0,74,55,66,69],
[75,77,78,57,0,69,67,84],
[64,68,92,76,62,0,62,79],
[74,68,73,65,64,69,0,79],
[50,55,57,62,47,52,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,32,63,53,102,52,32],
[56,0,53,63,81,81,88,55],
[99,78,0,77,61,77,80,69],
[68,68,54,0,54,54,25,68],
[78,50,70,77,0,84,41,70],
[29,50,54,77,47,0,54,21],
[79,43,51,106,90,77,0,78],
[99,76,62,63,61,110,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,54,44,53,41,60],
[72,0,66,75,70,62,75,72],
[76,65,0,74,69,66,71,72],
[77,56,57,0,60,64,59,60],
[87,61,62,71,0,72,64,69],
[78,69,65,67,59,0,63,54],
[90,56,60,72,67,68,0,68],
[71,59,59,71,62,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,65,76,67,68,70],
[65,0,66,72,74,61,72,73],
[62,65,0,67,70,69,66,74],
[66,59,64,0,73,66,62,72],
[55,57,61,58,0,53,63,71],
[64,70,62,65,78,0,72,69],
[63,59,65,69,68,59,0,72],
[61,58,57,59,60,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,81,60,65,64,75,65],
[62,0,72,75,65,67,71,62],
[50,59,0,60,54,55,66,57],
[71,56,71,0,63,66,62,58],
[66,66,77,68,0,67,65,67],
[67,64,76,65,64,0,74,66],
[56,60,65,69,66,57,0,60],
[66,69,74,73,64,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,24,67,61,42,41,81],
[84,0,36,51,53,62,36,65],
[107,95,0,90,64,84,68,100],
[64,80,41,0,74,88,32,95],
[70,78,67,57,0,82,37,66],
[89,69,47,43,49,0,18,71],
[90,95,63,99,94,113,0,108],
[50,66,31,36,65,60,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,50,57,74,67,61],
[71,0,60,74,68,79,69,77],
[72,71,0,56,60,63,74,68],
[81,57,75,0,63,72,67,75],
[74,63,71,68,0,78,73,80],
[57,52,68,59,53,0,57,70],
[64,62,57,64,58,74,0,65],
[70,54,63,56,51,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,55,80,77,59,66],
[64,0,54,63,58,73,64,65],
[72,77,0,60,90,82,72,70],
[76,68,71,0,71,79,59,69],
[51,73,41,60,0,72,52,61],
[54,58,49,52,59,0,49,59],
[72,67,59,72,79,82,0,75],
[65,66,61,62,70,72,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,76,71,60,75,67],
[66,0,62,81,73,68,71,67],
[62,69,0,79,74,65,76,76],
[55,50,52,0,58,60,69,52],
[60,58,57,73,0,63,70,55],
[71,63,66,71,68,0,72,65],
[56,60,55,62,61,59,0,53],
[64,64,55,79,76,66,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,101,100,77,67,52,89],
[41,0,76,87,54,47,69,63],
[30,55,0,78,54,50,69,65],
[31,44,53,0,36,30,39,50],
[54,77,77,95,0,88,79,76],
[64,84,81,101,43,0,71,84],
[79,62,62,92,52,60,0,70],
[42,68,66,81,55,47,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,58,61,62,72,68],
[67,0,66,69,65,71,68,64],
[59,65,0,60,66,71,64,59],
[73,62,71,0,77,75,67,66],
[70,66,65,54,0,65,71,56],
[69,60,60,56,66,0,73,59],
[59,63,67,64,60,58,0,52],
[63,67,72,65,75,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,73,77,93,77,72,55],
[55,0,55,65,79,67,68,66],
[58,76,0,67,79,76,68,59],
[54,66,64,0,73,68,58,52],
[38,52,52,58,0,55,64,42],
[54,64,55,63,76,0,64,66],
[59,63,63,73,67,67,0,66],
[76,65,72,79,89,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,61,57,66,55,60],
[70,0,68,59,59,68,56,63],
[67,63,0,56,60,63,50,54],
[70,72,75,0,73,70,37,70],
[74,72,71,58,0,75,49,69],
[65,63,68,61,56,0,56,62],
[76,75,81,94,82,75,0,65],
[71,68,77,61,62,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,46,52,61,62,62],
[61,0,72,77,74,60,66,72],
[69,59,0,70,50,74,57,67],
[85,54,61,0,59,56,66,57],
[79,57,81,72,0,77,83,79],
[70,71,57,75,54,0,68,69],
[69,65,74,65,48,63,0,59],
[69,59,64,74,52,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,54,66,68,65,60,69],
[64,0,54,58,65,62,60,69],
[77,77,0,67,77,65,64,78],
[65,73,64,0,60,64,59,72],
[63,66,54,71,0,67,69,69],
[66,69,66,67,64,0,62,65],
[71,71,67,72,62,69,0,72],
[62,62,53,59,62,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,79,50,68,57,78,67],
[55,0,62,42,54,54,79,69],
[52,69,0,51,60,54,74,67],
[81,89,80,0,57,58,69,77],
[63,77,71,74,0,70,66,92],
[74,77,77,73,61,0,86,83],
[53,52,57,62,65,45,0,63],
[64,62,64,54,39,48,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,75,62,68,78,68],
[71,0,64,69,62,71,77,73],
[68,67,0,78,53,54,58,72],
[56,62,53,0,66,70,71,68],
[69,69,78,65,0,51,86,66],
[63,60,77,61,80,0,67,66],
[53,54,73,60,45,64,0,64],
[63,58,59,63,65,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,65,70,75,77,72],
[61,0,73,68,74,72,75,77],
[62,58,0,57,68,63,73,68],
[66,63,74,0,64,67,65,72],
[61,57,63,67,0,62,67,72],
[56,59,68,64,69,0,63,67],
[54,56,58,66,64,68,0,71],
[59,54,63,59,59,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,69,67,58,59,67,72],
[77,0,74,69,65,67,76,80],
[62,57,0,67,57,64,75,58],
[64,62,64,0,57,67,69,62],
[73,66,74,74,0,64,73,67],
[72,64,67,64,67,0,70,65],
[64,55,56,62,58,61,0,58],
[59,51,73,69,64,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,68,72,66,70,64,72],
[73,0,61,73,69,75,77,80],
[63,70,0,75,64,73,68,68],
[59,58,56,0,57,65,54,60],
[65,62,67,74,0,64,56,69],
[61,56,58,66,67,0,60,70],
[67,54,63,77,75,71,0,78],
[59,51,63,71,62,61,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,68,57,69,70,76,73],
[50,0,65,58,64,65,65,66],
[63,66,0,60,62,66,70,63],
[74,73,71,0,76,65,71,72],
[62,67,69,55,0,69,54,60],
[61,66,65,66,62,0,67,74],
[55,66,61,60,77,64,0,74],
[58,65,68,59,71,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,78,72,67,63,76],
[73,0,73,80,81,72,65,82],
[69,58,0,73,65,69,67,68],
[53,51,58,0,65,64,59,68],
[59,50,66,66,0,66,53,66],
[64,59,62,67,65,0,55,68],
[68,66,64,72,78,76,0,72],
[55,49,63,63,65,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,70,69,55,63,71],
[72,0,56,63,73,66,64,67],
[69,75,0,67,71,60,78,74],
[61,68,64,0,73,61,62,65],
[62,58,60,58,0,57,59,61],
[76,65,71,70,74,0,74,71],
[68,67,53,69,72,57,0,69],
[60,64,57,66,70,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,87,83,67,74,93],
[70,0,75,82,86,84,72,64],
[71,56,0,88,84,74,58,56],
[44,49,43,0,72,48,47,66],
[48,45,47,59,0,49,49,52],
[64,47,57,83,82,0,59,70],
[57,59,73,84,82,72,0,63],
[38,67,75,65,79,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,39,40,61,46,54,61],
[73,0,51,50,75,62,56,72],
[92,80,0,69,76,58,75,81],
[91,81,62,0,83,70,76,77],
[70,56,55,48,0,54,48,60],
[85,69,73,61,77,0,66,82],
[77,75,56,55,83,65,0,68],
[70,59,50,54,71,49,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,76,77,72,60,65],
[64,0,72,82,61,64,58,70],
[51,59,0,69,63,65,51,61],
[55,49,62,0,50,45,49,52],
[54,70,68,81,0,65,73,68],
[59,67,66,86,66,0,61,67],
[71,73,80,82,58,70,0,64],
[66,61,70,79,63,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,63,70,67,78,89],
[63,0,90,69,77,73,79,80],
[53,41,0,43,48,66,59,67],
[68,62,88,0,65,68,74,71],
[61,54,83,66,0,66,79,83],
[64,58,65,63,65,0,83,83],
[53,52,72,57,52,48,0,67],
[42,51,64,60,48,48,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,72,68,69,65,63],
[57,0,63,68,64,70,68,68],
[63,68,0,67,61,62,60,56],
[59,63,64,0,65,67,62,68],
[63,67,70,66,0,70,71,70],
[62,61,69,64,61,0,66,58],
[66,63,71,69,60,65,0,65],
[68,63,75,63,61,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,65,66,62,75,67],
[67,0,66,69,69,65,67,75],
[70,65,0,64,74,64,68,74],
[66,62,67,0,72,66,67,66],
[65,62,57,59,0,68,69,62],
[69,66,67,65,63,0,73,68],
[56,64,63,64,62,58,0,70],
[64,56,57,65,69,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,52,67,64,60,73],
[62,0,65,56,72,66,58,75],
[68,66,0,57,69,58,71,77],
[79,75,74,0,61,76,82,72],
[64,59,62,70,0,70,69,81],
[67,65,73,55,61,0,67,75],
[71,73,60,49,62,64,0,65],
[58,56,54,59,50,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,52,61,54,59,60],
[77,0,58,73,67,63,73,69],
[77,73,0,63,68,67,74,82],
[79,58,68,0,69,63,67,77],
[70,64,63,62,0,55,74,70],
[77,68,64,68,76,0,75,66],
[72,58,57,64,57,56,0,67],
[71,62,49,54,61,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,65,58,62,67,71],
[70,0,71,66,62,66,73,75],
[62,60,0,67,56,60,64,71],
[66,65,64,0,63,64,61,71],
[73,69,75,68,0,64,69,81],
[69,65,71,67,67,0,72,71],
[64,58,67,70,62,59,0,72],
[60,56,60,60,50,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,55,72,67,58,75],
[72,0,49,57,68,65,66,69],
[66,82,0,67,75,63,70,79],
[76,74,64,0,75,66,69,74],
[59,63,56,56,0,46,59,63],
[64,66,68,65,85,0,73,74],
[73,65,61,62,72,58,0,68],
[56,62,52,57,68,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,58,73,48,56,39,51],
[57,0,63,71,60,54,64,59],
[73,68,0,76,48,65,60,65],
[58,60,55,0,56,55,65,63],
[83,71,83,75,0,66,66,64],
[75,77,66,76,65,0,48,69],
[92,67,71,66,65,83,0,74],
[80,72,66,68,67,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,76,62,77,72,74,68],
[58,0,62,62,76,64,63,60],
[55,69,0,64,66,66,68,62],
[69,69,67,0,72,62,68,62],
[54,55,65,59,0,56,57,58],
[59,67,65,69,75,0,71,63],
[57,68,63,63,74,60,0,55],
[63,71,69,69,73,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,59,56,60,57,64],
[63,0,61,60,59,64,58,59],
[64,70,0,69,67,67,61,67],
[72,71,62,0,62,68,71,70],
[75,72,64,69,0,76,73,73],
[71,67,64,63,55,0,65,61],
[74,73,70,60,58,66,0,70],
[67,72,64,61,58,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,64,85,70,68,67,72],
[81,0,81,98,82,63,68,83],
[67,50,0,85,64,56,53,63],
[46,33,46,0,57,29,44,49],
[61,49,67,74,0,57,66,62],
[63,68,75,102,74,0,61,60],
[64,63,78,87,65,70,0,76],
[59,48,68,82,69,71,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,53,62,51,63,48],
[77,0,76,64,72,81,67,64],
[70,55,0,72,47,60,58,48],
[78,67,59,0,71,68,62,60],
[69,59,84,60,0,78,72,74],
[80,50,71,63,53,0,61,66],
[68,64,73,69,59,70,0,70],
[83,67,83,71,57,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,60,71,68,74,66,77],
[56,0,72,65,73,75,65,62],
[71,59,0,60,80,66,74,75],
[60,66,71,0,75,65,64,76],
[63,58,51,56,0,63,71,67],
[57,56,65,66,68,0,61,74],
[65,66,57,67,60,70,0,78],
[54,69,56,55,64,57,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,73,69,74,63,69],
[61,0,61,74,67,61,66,58],
[69,70,0,67,71,69,69,65],
[58,57,64,0,65,64,67,70],
[62,64,60,66,0,68,58,67],
[57,70,62,67,63,0,58,61],
[68,65,62,64,73,73,0,65],
[62,73,66,61,64,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,60,56,61,58,53],
[69,0,64,61,57,55,57,59],
[69,67,0,62,56,53,63,53],
[71,70,69,0,64,58,68,62],
[75,74,75,67,0,69,76,59],
[70,76,78,73,62,0,76,65],
[73,74,68,63,55,55,0,67],
[78,72,78,69,72,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,57,90,43,60,88,50],
[50,0,26,40,26,43,31,33],
[74,105,0,47,7,24,31,34],
[41,91,84,0,44,44,75,67],
[88,105,124,87,0,105,61,105],
[71,88,107,87,26,0,61,76],
[43,100,100,56,70,70,0,93],
[81,98,97,64,26,55,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,62,64,81,75,72],
[65,0,69,66,69,77,66,66],
[67,62,0,67,67,82,70,61],
[69,65,64,0,60,75,70,65],
[67,62,64,71,0,77,70,59],
[50,54,49,56,54,0,58,53],
[56,65,61,61,61,73,0,62],
[59,65,70,66,72,78,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,69,64,69,88,69],
[62,0,43,43,62,5,74,62],
[62,88,0,64,74,36,74,74],
[62,88,67,0,74,29,74,62],
[67,69,57,57,0,57,79,95],
[62,126,95,102,74,0,74,74],
[43,57,57,57,52,57,0,95],
[62,69,57,69,36,57,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,67,69,67,65,70],
[58,0,57,63,67,66,58,65],
[66,74,0,74,62,75,65,63],
[64,68,57,0,71,71,70,69],
[62,64,69,60,0,66,68,67],
[64,65,56,60,65,0,66,69],
[66,73,66,61,63,65,0,61],
[61,66,68,62,64,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,61,63,58,70,65],
[73,0,63,62,74,56,69,70],
[69,68,0,74,67,66,73,64],
[70,69,57,0,58,57,69,64],
[68,57,64,73,0,51,72,72],
[73,75,65,74,80,0,80,80],
[61,62,58,62,59,51,0,62],
[66,61,67,67,59,51,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,58,70,68,68,74],
[62,0,67,60,60,69,69,72],
[70,64,0,58,74,69,64,75],
[73,71,73,0,64,71,77,80],
[61,71,57,67,0,75,60,79],
[63,62,62,60,56,0,71,69],
[63,62,67,54,71,60,0,73],
[57,59,56,51,52,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,77,67,78,84,59,64],
[65,0,72,65,62,90,66,68],
[54,59,0,59,58,87,51,69],
[64,66,72,0,64,91,51,67],
[53,69,73,67,0,78,56,64],
[47,41,44,40,53,0,49,47],
[72,65,80,80,75,82,0,71],
[67,63,62,64,67,84,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,62,66,57,73,53],
[73,0,78,73,69,66,78,57],
[71,53,0,67,57,63,73,58],
[69,58,64,0,61,50,78,69],
[65,62,74,70,0,64,80,52],
[74,65,68,81,67,0,81,71],
[58,53,58,53,51,50,0,61],
[78,74,73,62,79,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,72,68,80,60,62],
[67,0,62,61,69,68,49,65],
[70,69,0,76,62,75,64,68],
[59,70,55,0,59,67,58,57],
[63,62,69,72,0,68,66,56],
[51,63,56,64,63,0,60,49],
[71,82,67,73,65,71,0,66],
[69,66,63,74,75,82,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,86,91,117,117,131,60],
[40,0,67,72,53,64,97,57],
[45,64,0,48,91,128,102,88],
[40,59,83,0,86,83,97,83],
[14,78,40,45,0,95,128,57],
[14,67,3,48,36,0,71,60],
[0,34,29,34,3,60,0,3],
[71,74,43,48,74,71,128,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,76,64,64,80,74,63],
[75,0,73,81,62,83,72,70],
[55,58,0,77,66,85,72,65],
[67,50,54,0,64,77,56,67],
[67,69,65,67,0,75,68,67],
[51,48,46,54,56,0,54,53],
[57,59,59,75,63,77,0,67],
[68,61,66,64,64,78,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,63,67,71,50,55],
[64,0,61,63,77,70,64,62],
[69,70,0,70,78,78,63,69],
[68,68,61,0,74,75,63,63],
[64,54,53,57,0,60,54,53],
[60,61,53,56,71,0,56,55],
[81,67,68,68,77,75,0,65],
[76,69,62,68,78,76,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,54,60,71,66,60,58],
[83,0,67,76,77,69,78,61],
[77,64,0,79,89,72,80,73],
[71,55,52,0,59,65,71,54],
[60,54,42,72,0,66,61,63],
[65,62,59,66,65,0,71,60],
[71,53,51,60,70,60,0,61],
[73,70,58,77,68,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,78,69,91,64,69,88],
[58,0,62,53,75,67,72,85],
[53,69,0,59,65,65,75,89],
[62,78,72,0,64,64,58,78],
[40,56,66,67,0,54,74,87],
[67,64,66,67,77,0,80,81],
[62,59,56,73,57,51,0,98],
[43,46,42,53,44,50,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,78,82,79,59,70],
[53,0,54,63,64,69,58,57],
[65,77,0,79,76,74,68,69],
[53,68,52,0,79,78,72,69],
[49,67,55,52,0,53,56,58],
[52,62,57,53,78,0,58,60],
[72,73,63,59,75,73,0,67],
[61,74,62,62,73,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,64,69,66,63,67],
[67,0,56,69,63,62,57,71],
[68,75,0,70,69,64,72,78],
[67,62,61,0,64,71,56,68],
[62,68,62,67,0,66,62,65],
[65,69,67,60,65,0,62,65],
[68,74,59,75,69,69,0,73],
[64,60,53,63,66,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,65,64,59,64,70],
[59,0,60,67,59,66,68,70],
[69,71,0,68,67,61,70,65],
[66,64,63,0,68,67,70,69],
[67,72,64,63,0,71,71,68],
[72,65,70,64,60,0,67,71],
[67,63,61,61,60,64,0,67],
[61,61,66,62,63,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,72,63,67,74,80],
[68,0,79,65,57,67,63,65],
[56,52,0,54,56,50,52,58],
[59,66,77,0,56,67,72,70],
[68,74,75,75,0,72,71,65],
[64,64,81,64,59,0,73,65],
[57,68,79,59,60,58,0,68],
[51,66,73,61,66,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,50,62,60,66,68,72],
[73,0,66,65,70,71,64,67],
[81,65,0,65,63,62,57,78],
[69,66,66,0,77,63,62,70],
[71,61,68,54,0,68,66,73],
[65,60,69,68,63,0,59,69],
[63,67,74,69,65,72,0,81],
[59,64,53,61,58,62,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,69,53,72,70,63],
[53,0,67,63,48,65,52,64],
[63,64,0,66,46,68,65,62],
[62,68,65,0,53,63,64,60],
[78,83,85,78,0,65,80,80],
[59,66,63,68,66,0,61,61],
[61,79,66,67,51,70,0,62],
[68,67,69,71,51,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,70,76,64,68,67],
[61,0,63,56,70,58,60,56],
[66,68,0,68,73,67,62,65],
[61,75,63,0,68,63,65,71],
[55,61,58,63,0,64,64,62],
[67,73,64,68,67,0,70,70],
[63,71,69,66,67,61,0,67],
[64,75,66,60,69,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,67,72,68,46,58],
[72,0,75,67,59,65,48,67],
[74,56,0,63,67,67,65,63],
[64,64,68,0,67,72,57,59],
[59,72,64,64,0,79,47,53],
[63,66,64,59,52,0,44,47],
[85,83,66,74,84,87,0,65],
[73,64,68,72,78,84,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,25,34,49,50,7,84],
[97,0,94,81,57,82,39,103],
[106,37,0,50,57,64,10,78],
[97,50,81,0,57,97,72,118],
[82,74,74,74,0,50,25,61],
[81,49,67,34,81,0,22,66],
[124,92,121,59,106,109,0,109],
[47,28,53,13,70,65,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,63,58,64,70,75],
[67,0,61,69,66,67,58,69],
[72,70,0,63,58,74,66,66],
[68,62,68,0,71,75,62,66],
[73,65,73,60,0,78,65,74],
[67,64,57,56,53,0,64,62],
[61,73,65,69,66,67,0,62],
[56,62,65,65,57,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,60,57,66,67,60],
[64,0,61,62,62,60,58,59],
[75,70,0,71,67,72,69,62],
[71,69,60,0,63,68,66,66],
[74,69,64,68,0,65,69,61],
[65,71,59,63,66,0,66,66],
[64,73,62,65,62,65,0,69],
[71,72,69,65,70,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,74,50,62,54,65,59],
[78,0,70,62,73,70,72,75],
[57,61,0,58,67,64,56,73],
[81,69,73,0,69,61,60,73],
[69,58,64,62,0,69,73,74],
[77,61,67,70,62,0,59,80],
[66,59,75,71,58,72,0,77],
[72,56,58,58,57,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,74,68,77,63,72,76],
[66,0,70,65,71,69,77,78],
[57,61,0,55,59,59,62,63],
[63,66,76,0,78,74,58,85],
[54,60,72,53,0,56,74,66],
[68,62,72,57,75,0,75,76],
[59,54,69,73,57,56,0,72],
[55,53,68,46,65,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,61,59,59,62,77,52],
[81,0,70,65,72,68,79,67],
[70,61,0,68,65,65,72,62],
[72,66,63,0,77,67,70,62],
[72,59,66,54,0,62,79,54],
[69,63,66,64,69,0,78,65],
[54,52,59,61,52,53,0,59],
[79,64,69,69,77,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,101,85,86,74,47,91,87],
[30,0,52,58,27,49,62,44],
[46,79,0,58,74,65,86,74],
[45,73,73,0,61,49,64,71],
[57,104,57,70,0,49,76,74],
[84,82,66,82,82,0,98,63],
[40,69,45,67,55,33,0,70],
[44,87,57,60,57,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,66,63,65,66,70],
[62,0,66,53,77,62,65,59],
[62,65,0,54,55,49,56,54],
[65,78,77,0,62,56,66,57],
[68,54,76,69,0,71,70,62],
[66,69,82,75,60,0,67,74],
[65,66,75,65,61,64,0,61],
[61,72,77,74,69,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,83,81,64,115,83,80],
[48,0,84,65,65,100,66,80],
[48,47,0,32,31,80,31,63],
[50,66,99,0,67,98,82,80],
[67,66,100,64,0,99,66,112],
[16,31,51,33,32,0,31,48],
[48,65,100,49,65,100,0,96],
[51,51,68,51,19,83,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,86,48,38,98,61,70],
[77,0,82,69,77,83,65,90],
[45,49,0,56,47,69,29,48],
[83,62,75,0,66,74,45,70],
[93,54,84,65,0,100,70,70],
[33,48,62,57,31,0,54,54],
[70,66,102,86,61,77,0,65],
[61,41,83,61,61,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,74,54,54,53,38,46],
[86,0,80,66,67,74,61,61],
[57,51,0,47,53,53,44,53],
[77,65,84,0,61,51,65,53],
[77,64,78,70,0,66,60,73],
[78,57,78,80,65,0,73,65],
[93,70,87,66,71,58,0,78],
[85,70,78,78,58,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,63,74,67,68,70],
[68,0,76,64,77,66,74,65],
[68,55,0,64,68,59,72,61],
[68,67,67,0,72,65,66,69],
[57,54,63,59,0,61,56,66],
[64,65,72,66,70,0,71,78],
[63,57,59,65,75,60,0,60],
[61,66,70,62,65,53,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,49,60,67,57,64],
[61,0,60,56,54,52,52,63],
[73,71,0,55,64,72,61,69],
[82,75,76,0,63,69,70,70],
[71,77,67,68,0,68,60,63],
[64,79,59,62,63,0,58,56],
[74,79,70,61,71,73,0,64],
[67,68,62,61,68,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,46,42,55,48,44],
[75,0,67,59,62,59,55,51],
[68,64,0,59,60,60,62,69],
[85,72,72,0,67,78,62,68],
[89,69,71,64,0,70,60,59],
[76,72,71,53,61,0,62,60],
[83,76,69,69,71,69,0,58],
[87,80,62,63,72,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,65,66,53,63,60],
[65,0,61,65,68,65,69,65],
[63,70,0,63,76,67,71,72],
[66,66,68,0,68,60,62,69],
[65,63,55,63,0,60,72,67],
[78,66,64,71,71,0,75,62],
[68,62,60,69,59,56,0,66],
[71,66,59,62,64,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,53,58,58,67,63],
[76,0,75,58,66,73,71,69],
[59,56,0,49,62,57,64,62],
[78,73,82,0,64,71,76,76],
[73,65,69,67,0,64,72,68],
[73,58,74,60,67,0,75,65],
[64,60,67,55,59,56,0,61],
[68,62,69,55,63,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,63,80,81,61,71,57],
[78,0,70,84,78,58,66,69],
[68,61,0,65,61,44,65,58],
[51,47,66,0,69,55,55,62],
[50,53,70,62,0,54,35,42],
[70,73,87,76,77,0,60,84],
[60,65,66,76,96,71,0,76],
[74,62,73,69,89,47,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,43,64,55,62,64,60],
[74,0,76,79,69,73,62,75],
[88,55,0,69,67,74,58,73],
[67,52,62,0,62,61,56,58],
[76,62,64,69,0,77,75,70],
[69,58,57,70,54,0,58,65],
[67,69,73,75,56,73,0,69],
[71,56,58,73,61,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,63,51,48,56,66,66],
[81,0,63,63,51,56,74,63],
[68,68,0,80,72,62,78,65],
[80,68,51,0,53,67,63,64],
[83,80,59,78,0,69,81,79],
[75,75,69,64,62,0,78,78],
[65,57,53,68,50,53,0,68],
[65,68,66,67,52,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,60,44,53,70,54],
[69,0,66,58,67,61,68,70],
[70,65,0,53,57,59,66,64],
[71,73,78,0,65,67,71,56],
[87,64,74,66,0,65,72,79],
[78,70,72,64,66,0,65,67],
[61,63,65,60,59,66,0,63],
[77,61,67,75,52,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,74,58,56,67,63,70],
[82,0,80,61,69,76,86,70],
[57,51,0,49,45,65,57,62],
[73,70,82,0,63,80,80,73],
[75,62,86,68,0,72,83,71],
[64,55,66,51,59,0,72,61],
[68,45,74,51,48,59,0,59],
[61,61,69,58,60,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,72,69,63,66,69,68],
[80,0,71,72,66,73,63,83],
[59,60,0,63,59,55,66,72],
[62,59,68,0,58,66,82,67],
[68,65,72,73,0,59,69,76],
[65,58,76,65,72,0,61,70],
[62,68,65,49,62,70,0,73],
[63,48,59,64,55,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,68,67,60,60,62,50],
[91,0,75,66,73,78,58,70],
[63,56,0,71,75,86,72,68],
[64,65,60,0,77,69,63,53],
[71,58,56,54,0,85,55,68],
[71,53,45,62,46,0,45,52],
[69,73,59,68,76,86,0,60],
[81,61,63,78,63,79,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,74,64,71,79,64],
[65,0,72,67,70,76,73,67],
[61,59,0,59,58,64,69,51],
[57,64,72,0,60,72,66,58],
[67,61,73,71,0,79,85,62],
[60,55,67,59,52,0,73,55],
[52,58,62,65,46,58,0,56],
[67,64,80,73,69,76,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,78,63,71,63,54],
[63,0,59,79,74,71,68,66],
[74,72,0,83,75,77,74,65],
[53,52,48,0,65,53,58,53],
[68,57,56,66,0,61,56,52],
[60,60,54,78,70,0,67,55],
[68,63,57,73,75,64,0,58],
[77,65,66,78,79,76,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,67,59,49,45,67],
[71,0,65,67,67,65,63,80],
[69,66,0,77,56,69,68,77],
[64,64,54,0,58,50,54,69],
[72,64,75,73,0,63,71,83],
[82,66,62,81,68,0,75,86],
[86,68,63,77,60,56,0,77],
[64,51,54,62,48,45,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,77,69,60,66,63,76],
[64,0,77,71,70,61,71,77],
[54,54,0,55,51,55,56,68],
[62,60,76,0,57,65,65,74],
[71,61,80,74,0,76,65,76],
[65,70,76,66,55,0,67,66],
[68,60,75,66,66,64,0,76],
[55,54,63,57,55,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,82,85,65,77,71,80],
[58,0,67,78,83,72,69,72],
[49,64,0,74,65,67,53,57],
[46,53,57,0,62,66,68,61],
[66,48,66,69,0,72,62,62],
[54,59,64,65,59,0,66,46],
[60,62,78,63,69,65,0,63],
[51,59,74,70,69,85,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,48,73,66,63,76,62],
[53,0,57,55,69,61,64,65],
[83,74,0,61,69,64,79,71],
[58,76,70,0,78,69,79,76],
[65,62,62,53,0,58,62,78],
[68,70,67,62,73,0,76,84],
[55,67,52,52,69,55,0,69],
[69,66,60,55,53,47,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,60,52,60,43,68,50],
[86,0,80,75,64,80,79,71],
[71,51,0,68,45,56,71,52],
[79,56,63,0,52,59,67,59],
[71,67,86,79,0,69,80,61],
[88,51,75,72,62,0,91,81],
[63,52,60,64,51,40,0,51],
[81,60,79,72,70,50,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,50,69,62,70,68,67],
[64,0,57,73,78,70,64,62],
[81,74,0,73,72,73,64,71],
[62,58,58,0,58,71,58,59],
[69,53,59,73,0,74,66,64],
[61,61,58,60,57,0,51,61],
[63,67,67,73,65,80,0,66],
[64,69,60,72,67,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,54,58,70,67,58,51],
[58,0,75,51,56,65,45,46],
[77,56,0,63,77,82,64,70],
[73,80,68,0,84,69,63,67],
[61,75,54,47,0,68,61,71],
[64,66,49,62,63,0,71,58],
[73,86,67,68,70,60,0,77],
[80,85,61,64,60,73,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,73,64,66,62,63],
[66,0,57,68,61,68,54,61],
[70,74,0,69,61,77,69,68],
[58,63,62,0,58,60,54,59],
[67,70,70,73,0,68,62,62],
[65,63,54,71,63,0,58,61],
[69,77,62,77,69,73,0,71],
[68,70,63,72,69,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,63,57,58,60,77],
[65,0,64,68,58,57,57,65],
[63,67,0,62,55,55,59,70],
[68,63,69,0,66,56,64,64],
[74,73,76,65,0,66,70,76],
[73,74,76,75,65,0,63,72],
[71,74,72,67,61,68,0,69],
[54,66,61,67,55,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,60,51,45,54,55,57],
[57,0,52,56,51,50,65,71],
[71,79,0,62,56,62,73,69],
[80,75,69,0,51,59,64,75],
[86,80,75,80,0,66,63,76],
[77,81,69,72,65,0,69,78],
[76,66,58,67,68,62,0,66],
[74,60,62,56,55,53,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,52,61,54,69,61,56],
[68,0,59,64,60,60,76,66],
[79,72,0,75,62,72,84,67],
[70,67,56,0,58,64,79,63],
[77,71,69,73,0,65,83,76],
[62,71,59,67,66,0,73,54],
[70,55,47,52,48,58,0,61],
[75,65,64,68,55,77,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,70,77,62,67,69],
[69,0,67,67,72,64,68,67],
[64,64,0,69,66,58,68,64],
[61,64,62,0,65,64,68,62],
[54,59,65,66,0,62,64,57],
[69,67,73,67,69,0,68,62],
[64,63,63,63,67,63,0,60],
[62,64,67,69,74,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,59,64,66,62,63],
[67,0,70,68,68,63,68,65],
[60,61,0,63,62,57,57,57],
[72,63,68,0,69,71,68,66],
[67,63,69,62,0,72,69,68],
[65,68,74,60,59,0,65,67],
[69,63,74,63,62,66,0,65],
[68,66,74,65,63,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,60,68,58,55,71],
[66,0,68,60,71,65,58,70],
[65,63,0,62,72,62,59,61],
[71,71,69,0,76,65,68,75],
[63,60,59,55,0,62,53,61],
[73,66,69,66,69,0,61,68],
[76,73,72,63,78,70,0,76],
[60,61,70,56,70,63,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,58,75,67,61,59],
[67,0,72,61,75,61,63,57],
[57,59,0,58,69,56,58,51],
[73,70,73,0,76,71,71,64],
[56,56,62,55,0,54,60,53],
[64,70,75,60,77,0,70,64],
[70,68,73,60,71,61,0,67],
[72,74,80,67,78,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,83,70,59,69,72,63],
[58,0,83,67,66,72,75,64],
[48,48,0,50,60,69,64,60],
[61,64,81,0,61,75,74,72],
[72,65,71,70,0,83,87,80],
[62,59,62,56,48,0,64,62],
[59,56,67,57,44,67,0,53],
[68,67,71,59,51,69,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,73,70,65,63,71],
[68,0,65,63,69,64,62,76],
[70,66,0,61,72,73,56,74],
[58,68,70,0,81,67,66,65],
[61,62,59,50,0,63,58,75],
[66,67,58,64,68,0,64,70],
[68,69,75,65,73,67,0,83],
[60,55,57,66,56,61,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,51,48,55,70,60,45],
[68,0,74,58,69,70,55,64],
[80,57,0,70,77,72,68,68],
[83,73,61,0,67,85,75,59],
[76,62,54,64,0,72,62,55],
[61,61,59,46,59,0,58,44],
[71,76,63,56,69,73,0,65],
[86,67,63,72,76,87,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,63,58,75,60,60],
[66,0,72,66,71,71,66,65],
[67,59,0,74,64,76,66,69],
[68,65,57,0,67,76,62,59],
[73,60,67,64,0,73,70,60],
[56,60,55,55,58,0,62,53],
[71,65,65,69,61,69,0,67],
[71,66,62,72,71,78,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,58,74,74,72,74,60],
[56,0,63,69,71,62,59,57],
[73,68,0,78,72,68,72,60],
[57,62,53,0,64,57,47,54],
[57,60,59,67,0,62,58,51],
[59,69,63,74,69,0,52,56],
[57,72,59,84,73,79,0,69],
[71,74,71,77,80,75,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,67,71,68,71,74],
[74,0,75,60,68,81,83,85],
[65,56,0,61,62,71,69,74],
[64,71,70,0,60,67,61,80],
[60,63,69,71,0,82,52,76],
[63,50,60,64,49,0,62,75],
[60,48,62,70,79,69,0,61],
[57,46,57,51,55,56,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,61,77,61,64,67],
[63,0,67,67,74,60,62,66],
[67,64,0,60,66,59,56,60],
[70,64,71,0,68,66,65,60],
[54,57,65,63,0,53,66,54],
[70,71,72,65,78,0,62,70],
[67,69,75,66,65,69,0,69],
[64,65,71,71,77,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,75,67,69,61,77],
[56,0,64,52,57,50,58,65],
[59,67,0,61,72,52,58,58],
[56,79,70,0,62,61,61,70],
[64,74,59,69,0,56,57,67],
[62,81,79,70,75,0,67,71],
[70,73,73,70,74,64,0,80],
[54,66,73,61,64,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,71,77,68,64,62],
[58,0,66,66,69,69,65,67],
[64,65,0,69,69,69,66,67],
[60,65,62,0,68,60,61,58],
[54,62,62,63,0,61,57,59],
[63,62,62,71,70,0,59,65],
[67,66,65,70,74,72,0,69],
[69,64,64,73,72,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,63,70,58,57,66],
[74,0,69,60,80,68,67,63],
[74,62,0,67,78,65,66,63],
[68,71,64,0,82,68,63,69],
[61,51,53,49,0,53,56,51],
[73,63,66,63,78,0,63,73],
[74,64,65,68,75,68,0,72],
[65,68,68,62,80,58,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,39,76,57,75,57,38],
[56,0,76,113,55,112,57,56],
[92,55,0,112,74,92,55,92],
[55,18,19,0,36,55,19,55],
[74,76,57,95,0,94,76,76],
[56,19,39,76,37,0,38,56],
[74,74,76,112,55,93,0,74],
[93,75,39,76,55,75,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,55,63,69,59,64],
[69,0,67,61,70,72,58,61],
[70,64,0,66,75,77,63,64],
[76,70,65,0,73,76,67,67],
[68,61,56,58,0,72,55,57],
[62,59,54,55,59,0,60,61],
[72,73,68,64,76,71,0,62],
[67,70,67,64,74,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,71,68,64,65,65,74],
[72,0,71,73,72,67,58,65],
[60,60,0,65,62,60,65,67],
[63,58,66,0,59,61,59,67],
[67,59,69,72,0,64,66,68],
[66,64,71,70,67,0,54,72],
[66,73,66,72,65,77,0,66],
[57,66,64,64,63,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,60,52,46,60,49,44],
[76,0,65,61,51,53,61,53],
[71,66,0,69,64,62,61,54],
[79,70,62,0,66,64,64,62],
[85,80,67,65,0,75,54,70],
[71,78,69,67,56,0,55,59],
[82,70,70,67,77,76,0,59],
[87,78,77,69,61,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,61,68,65,59,72],
[64,0,65,77,76,67,66,70],
[69,66,0,66,69,70,62,70],
[70,54,65,0,66,71,66,67],
[63,55,62,65,0,77,66,67],
[66,64,61,60,54,0,60,63],
[72,65,69,65,65,71,0,65],
[59,61,61,64,64,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,65,64,71,70,73],
[69,0,69,77,61,71,64,70],
[70,62,0,67,58,65,64,61],
[66,54,64,0,68,74,63,63],
[67,70,73,63,0,68,61,63],
[60,60,66,57,63,0,56,71],
[61,67,67,68,70,75,0,70],
[58,61,70,68,68,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,61,63,72,64,66],
[63,0,63,63,75,68,58,59],
[56,68,0,67,67,62,64,64],
[70,68,64,0,66,77,63,60],
[68,56,64,65,0,62,55,62],
[59,63,69,54,69,0,58,57],
[67,73,67,68,76,73,0,54],
[65,72,67,71,69,74,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,84,64,61,52,56],
[75,0,66,84,62,79,68,65],
[75,65,0,75,72,76,68,69],
[47,47,56,0,53,47,53,47],
[67,69,59,78,0,71,52,64],
[70,52,55,84,60,0,64,59],
[79,63,63,78,79,67,0,58],
[75,66,62,84,67,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,49,65,57,54,66,46],
[78,0,66,79,76,64,66,59],
[82,65,0,76,66,72,74,67],
[66,52,55,0,48,63,78,51],
[74,55,65,83,0,77,73,75],
[77,67,59,68,54,0,77,61],
[65,65,57,53,58,54,0,43],
[85,72,64,80,56,70,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,63,66,75,66,72,59],
[56,0,67,69,70,63,75,57],
[68,64,0,67,74,56,69,66],
[65,62,64,0,71,58,61,66],
[56,61,57,60,0,60,64,61],
[65,68,75,73,71,0,74,61],
[59,56,62,70,67,57,0,59],
[72,74,65,65,70,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,65,59,60,45,86,59],
[56,0,48,56,55,50,78,70],
[66,83,0,70,74,55,73,73],
[72,75,61,0,73,47,77,66],
[71,76,57,58,0,70,68,71],
[86,81,76,84,61,0,82,79],
[45,53,58,54,63,49,0,55],
[72,61,58,65,60,52,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,84,75,77,72,73],
[71,0,56,74,87,63,73,60],
[58,75,0,74,73,66,61,65],
[47,57,57,0,73,68,67,59],
[56,44,58,58,0,58,59,64],
[54,68,65,63,73,0,69,76],
[59,58,70,64,72,62,0,55],
[58,71,66,72,67,55,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,66,62,64,61,72],
[59,0,61,52,53,51,58,66],
[58,70,0,55,61,64,64,67],
[65,79,76,0,66,67,62,68],
[69,78,70,65,0,76,69,73],
[67,80,67,64,55,0,67,73],
[70,73,67,69,62,64,0,71],
[59,65,64,63,58,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,74,69,54,59,68,60],
[77,0,82,70,81,65,81,72],
[57,49,0,57,43,51,71,54],
[62,61,74,0,53,54,66,64],
[77,50,88,78,0,77,76,70],
[72,66,80,77,54,0,76,61],
[63,50,60,65,55,55,0,58],
[71,59,77,67,61,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,68,60,71,68,74],
[63,0,65,73,66,70,72,73],
[68,66,0,65,60,67,68,67],
[63,58,66,0,63,72,71,67],
[71,65,71,68,0,76,65,79],
[60,61,64,59,55,0,61,60],
[63,59,63,60,66,70,0,64],
[57,58,64,64,52,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,45,51,63,60,66,65],
[72,0,63,69,67,74,77,72],
[86,68,0,71,65,69,68,81],
[80,62,60,0,66,69,71,72],
[68,64,66,65,0,71,75,63],
[71,57,62,62,60,0,64,59],
[65,54,63,60,56,67,0,58],
[66,59,50,59,68,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,67,77,55,53,49,42],
[83,0,80,96,75,69,63,72],
[64,51,0,70,78,63,50,72],
[54,35,61,0,46,36,34,22],
[76,56,53,85,0,70,62,60],
[78,62,68,95,61,0,57,50],
[82,68,81,97,69,74,0,49],
[89,59,59,109,71,81,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,74,64,68,57,75],
[75,0,69,75,71,72,60,82],
[66,62,0,70,78,77,72,74],
[57,56,61,0,72,51,57,73],
[67,60,53,59,0,52,63,66],
[63,59,54,80,79,0,63,74],
[74,71,59,74,68,68,0,77],
[56,49,57,58,65,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,55,64,56,66,64,56],
[63,0,55,61,55,61,63,48],
[76,76,0,77,74,66,72,63],
[67,70,54,0,61,60,63,54],
[75,76,57,70,0,66,67,72],
[65,70,65,71,65,0,63,62],
[67,68,59,68,64,68,0,61],
[75,83,68,77,59,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,56,57,55,79,85,64],
[52,0,60,68,59,68,68,75],
[75,71,0,67,40,67,60,55],
[74,63,64,0,62,61,68,55],
[76,72,91,69,0,65,73,57],
[52,63,64,70,66,0,80,55],
[46,63,71,63,58,51,0,63],
[67,56,76,76,74,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,59,68,51,59,54],
[67,0,66,53,66,65,66,57],
[63,65,0,58,74,55,56,68],
[72,78,73,0,77,62,69,75],
[63,65,57,54,0,47,54,56],
[80,66,76,69,84,0,57,58],
[72,65,75,62,77,74,0,71],
[77,74,63,56,75,73,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,62,59,63,64,59],
[63,0,64,71,68,75,64,58],
[60,67,0,81,61,60,58,63],
[69,60,50,0,57,63,60,57],
[72,63,70,74,0,67,59,66],
[68,56,71,68,64,0,58,45],
[67,67,73,71,72,73,0,60],
[72,73,68,74,65,86,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,59,64,65,50,60],
[72,0,65,67,69,74,64,64],
[76,66,0,68,80,70,70,65],
[72,64,63,0,73,69,66,60],
[67,62,51,58,0,72,52,58],
[66,57,61,62,59,0,56,63],
[81,67,61,65,79,75,0,66],
[71,67,66,71,73,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,55,59,63,68,71,51],
[75,0,56,70,67,64,66,79],
[76,75,0,67,74,64,73,84],
[72,61,64,0,61,74,72,75],
[68,64,57,70,0,63,79,74],
[63,67,67,57,68,0,61,61],
[60,65,58,59,52,70,0,69],
[80,52,47,56,57,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,51,66,57,65,58],
[67,0,57,62,64,58,69,67],
[68,74,0,70,74,58,72,63],
[80,69,61,0,78,68,79,61],
[65,67,57,53,0,56,60,56],
[74,73,73,63,75,0,81,64],
[66,62,59,52,71,50,0,57],
[73,64,68,70,75,67,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,73,68,58,60,62],
[66,0,71,67,65,64,68,58],
[56,60,0,65,64,57,63,54],
[58,64,66,0,63,55,66,54],
[63,66,67,68,0,68,66,62],
[73,67,74,76,63,0,67,63],
[71,63,68,65,65,64,0,67],
[69,73,77,77,69,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,53,63,62,71,70,69],
[53,0,47,45,59,65,52,49],
[78,84,0,64,67,87,69,67],
[68,86,67,0,73,82,64,70],
[69,72,64,58,0,72,63,62],
[60,66,44,49,59,0,43,57],
[61,79,62,67,68,88,0,60],
[62,82,64,61,69,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,48,63,65,59,74,68],
[75,0,71,78,70,62,82,84],
[83,60,0,70,73,79,85,81],
[68,53,61,0,65,65,85,76],
[66,61,58,66,0,59,77,78],
[72,69,52,66,72,0,74,75],
[57,49,46,46,54,57,0,66],
[63,47,50,55,53,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,52,55,37,56,54,37],
[61,0,61,66,61,71,56,75],
[79,70,0,68,68,85,59,88],
[76,65,63,0,49,75,54,55],
[94,70,63,82,0,99,66,69],
[75,60,46,56,32,0,49,40],
[77,75,72,77,65,82,0,72],
[94,56,43,76,62,91,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,58,61,66,72,65,67],
[47,0,40,59,51,57,49,46],
[73,91,0,73,70,79,64,75],
[70,72,58,0,62,63,56,57],
[65,80,61,69,0,66,60,60],
[59,74,52,68,65,0,66,58],
[66,82,67,75,71,65,0,60],
[64,85,56,74,71,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,74,56,74,131,95,110],
[57,0,18,21,39,57,76,57],
[57,113,0,76,76,112,94,75],
[75,110,55,0,55,75,76,54],
[57,92,55,76,0,75,76,36],
[0,74,19,56,56,0,58,0],
[36,55,37,55,55,73,0,55],
[21,74,56,77,95,131,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,75,59,75,73,91],
[59,0,61,76,62,64,60,78],
[56,70,0,67,61,59,64,77],
[56,55,64,0,60,66,59,71],
[72,69,70,71,0,67,65,71],
[56,67,72,65,64,0,71,82],
[58,71,67,72,66,60,0,79],
[40,53,54,60,60,49,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,58,66,60,54,74,60],
[59,0,60,73,53,60,72,63],
[73,71,0,70,66,58,75,70],
[65,58,61,0,55,56,72,64],
[71,78,65,76,0,61,82,71],
[77,71,73,75,70,0,74,62],
[57,59,56,59,49,57,0,63],
[71,68,61,67,60,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,90,89,88,73,56,87],
[42,0,76,28,56,58,28,71],
[41,55,0,28,42,42,41,57],
[42,103,103,0,103,59,28,58],
[43,75,89,28,0,58,41,29],
[58,73,89,72,73,0,71,60],
[75,103,90,103,90,60,0,74],
[44,60,74,73,102,71,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,59,66,60,70,60,65],
[47,0,78,65,60,64,57,68],
[72,53,0,64,56,68,66,58],
[65,66,67,0,71,75,57,62],
[71,71,75,60,0,75,63,62],
[61,67,63,56,56,0,52,47],
[71,74,65,74,68,79,0,58],
[66,63,73,69,69,84,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,54,75,85,64,63],
[57,0,46,75,86,76,75,82],
[67,85,0,66,85,76,65,55],
[77,56,65,0,76,58,76,55],
[56,45,46,55,0,66,56,46],
[46,55,55,73,65,0,54,43],
[67,56,66,55,75,77,0,54],
[68,49,76,76,85,88,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,45,67,49,57,48,50],
[63,0,58,80,65,59,66,57],
[86,73,0,91,79,72,72,65],
[64,51,40,0,67,64,45,57],
[82,66,52,64,0,67,75,49],
[74,72,59,67,64,0,64,68],
[83,65,59,86,56,67,0,54],
[81,74,66,74,82,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,64,78,64,70,68],
[66,0,60,53,69,55,51,69],
[67,71,0,67,87,60,58,66],
[67,78,64,0,90,73,65,66],
[53,62,44,41,0,62,57,59],
[67,76,71,58,69,0,77,71],
[61,80,73,66,74,54,0,62],
[63,62,65,65,72,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,81,70,72,63,64],
[62,0,65,77,70,74,62,73],
[59,66,0,70,75,70,65,65],
[50,54,61,0,57,61,64,54],
[61,61,56,74,0,65,57,55],
[59,57,61,70,66,0,67,59],
[68,69,66,67,74,64,0,63],
[67,58,66,77,76,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,64,69,60,65,69],
[71,0,70,68,71,61,81,74],
[65,61,0,62,75,60,72,65],
[67,63,69,0,69,64,73,62],
[62,60,56,62,0,55,71,64],
[71,70,71,67,76,0,77,63],
[66,50,59,58,60,54,0,58],
[62,57,66,69,67,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,66,60,82,72,66],
[62,0,64,63,68,57,65,71],
[63,67,0,60,59,65,59,64],
[65,68,71,0,65,72,72,72],
[71,63,72,66,0,71,72,75],
[49,74,66,59,60,0,72,68],
[59,66,72,59,59,59,0,64],
[65,60,67,59,56,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,86,64,87,65,88,67],
[43,0,43,43,67,65,43,67],
[45,88,0,87,90,67,90,69],
[67,88,44,0,44,65,67,67],
[44,64,41,87,0,45,64,44],
[66,66,64,66,86,0,86,44],
[43,88,41,64,67,45,0,45],
[64,64,62,64,87,87,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,65,60,66,68,52],
[63,0,65,66,64,65,65,62],
[60,66,0,69,69,70,69,63],
[66,65,62,0,69,68,57,66],
[71,67,62,62,0,65,68,65],
[65,66,61,63,66,0,65,65],
[63,66,62,74,63,66,0,58],
[79,69,68,65,66,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,49,62,51,55,59],
[68,0,67,52,55,53,54,57],
[73,64,0,61,61,68,65,64],
[82,79,70,0,66,71,66,63],
[69,76,70,65,0,63,58,69],
[80,78,63,60,68,0,72,70],
[76,77,66,65,73,59,0,67],
[72,74,67,68,62,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,59,51,75,65,59],
[75,0,72,70,61,62,70,72],
[73,59,0,60,71,63,69,66],
[72,61,71,0,66,65,85,66],
[80,70,60,65,0,68,85,72],
[56,69,68,66,63,0,70,60],
[66,61,62,46,46,61,0,55],
[72,59,65,65,59,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,71,66,69,69,70],
[69,0,61,57,64,58,59,68],
[73,70,0,70,60,70,70,73],
[60,74,61,0,69,63,60,75],
[65,67,71,62,0,70,66,70],
[62,73,61,68,61,0,66,67],
[62,72,61,71,65,65,0,63],
[61,63,58,56,61,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,57,66,60,60,66],
[64,0,72,64,64,62,60,64],
[68,59,0,62,72,58,53,64],
[74,67,69,0,72,63,65,58],
[65,67,59,59,0,62,66,63],
[71,69,73,68,69,0,65,68],
[71,71,78,66,65,66,0,63],
[65,67,67,73,68,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,56,66,56,71,67],
[69,0,60,61,63,53,69,70],
[67,71,0,70,78,55,60,69],
[75,70,61,0,67,63,69,74],
[65,68,53,64,0,47,64,61],
[75,78,76,68,84,0,79,64],
[60,62,71,62,67,52,0,69],
[64,61,62,57,70,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,51,59,60,65,56,73],
[63,0,62,55,62,61,53,68],
[80,69,0,48,68,63,58,71],
[72,76,83,0,70,79,50,93],
[71,69,63,61,0,77,78,76],
[66,70,68,52,54,0,51,64],
[75,78,73,81,53,80,0,79],
[58,63,60,38,55,67,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,76,79,71,70,73,64],
[57,0,70,72,68,75,72,71],
[55,61,0,66,55,56,59,55],
[52,59,65,0,55,76,61,60],
[60,63,76,76,0,69,66,59],
[61,56,75,55,62,0,55,55],
[58,59,72,70,65,76,0,64],
[67,60,76,71,72,76,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,55,58,58,73,59],
[65,0,56,54,60,58,73,56],
[71,75,0,57,57,71,77,72],
[76,77,74,0,73,63,78,74],
[73,71,74,58,0,62,76,65],
[73,73,60,68,69,0,69,63],
[58,58,54,53,55,62,0,60],
[72,75,59,57,66,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,56,80,62,67,61],
[80,0,61,69,76,73,73,63],
[80,70,0,65,85,70,68,66],
[75,62,66,0,92,68,80,74],
[51,55,46,39,0,39,48,57],
[69,58,61,63,92,0,77,66],
[64,58,63,51,83,54,0,65],
[70,68,65,57,74,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,72,61,57,60,75],
[71,0,69,73,67,64,73,71],
[74,62,0,77,70,75,73,72],
[59,58,54,0,47,58,64,60],
[70,64,61,84,0,69,82,70],
[74,67,56,73,62,0,70,70],
[71,58,58,67,49,61,0,76],
[56,60,59,71,61,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,67,59,50,48,58,60],
[79,0,75,78,60,65,75,81],
[64,56,0,81,63,40,54,57],
[72,53,50,0,49,45,50,55],
[81,71,68,82,0,62,77,68],
[83,66,91,86,69,0,61,77],
[73,56,77,81,54,70,0,62],
[71,50,74,76,63,54,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,61,70,61,70,61],
[56,0,57,48,61,52,55,58],
[63,74,0,67,66,60,67,61],
[70,83,64,0,79,64,71,60],
[61,70,65,52,0,52,64,58],
[70,79,71,67,79,0,65,66],
[61,76,64,60,67,66,0,68],
[70,73,70,71,73,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,72,63,74,61,68],
[61,0,61,66,62,58,58,69],
[63,70,0,65,63,74,63,62],
[59,65,66,0,69,75,71,63],
[68,69,68,62,0,75,65,71],
[57,73,57,56,56,0,63,58],
[70,73,68,60,66,68,0,63],
[63,62,69,68,60,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,65,67,68,55,61,61],
[76,0,70,78,72,61,69,59],
[66,61,0,73,64,60,63,62],
[64,53,58,0,59,60,57,57],
[63,59,67,72,0,66,61,62],
[76,70,71,71,65,0,69,69],
[70,62,68,74,70,62,0,62],
[70,72,69,74,69,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,55,67,61,67,73,60],
[78,0,66,59,66,71,71,70],
[76,65,0,67,66,71,76,75],
[64,72,64,0,64,69,72,75],
[70,65,65,67,0,68,72,74],
[64,60,60,62,63,0,68,65],
[58,60,55,59,59,63,0,70],
[71,61,56,56,57,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,56,76,67,65,54,51],
[94,0,65,85,88,94,94,60],
[75,66,0,74,66,73,81,50],
[55,46,57,0,59,81,68,53],
[64,43,65,72,0,98,83,71],
[66,37,58,50,33,0,65,50],
[77,37,50,63,48,66,0,45],
[80,71,81,78,60,81,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,93,72,37,93,55,72],
[57,0,93,36,18,75,57,55],
[38,38,0,38,0,77,20,57],
[59,95,93,0,76,57,76,131],
[94,113,131,55,0,112,76,113],
[38,56,54,74,19,0,37,74],
[76,74,111,55,55,94,0,73],
[59,76,74,0,18,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,68,67,59,69,60],
[62,0,72,69,76,75,69,77],
[70,59,0,65,73,80,55,59],
[63,62,66,0,71,73,68,63],
[64,55,58,60,0,71,59,58],
[72,56,51,58,60,0,70,64],
[62,62,76,63,72,61,0,67],
[71,54,72,68,73,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,68,75,64,74,71],
[65,0,69,63,70,68,65,68],
[57,62,0,54,62,61,67,64],
[63,68,77,0,72,61,76,72],
[56,61,69,59,0,64,68,66],
[67,63,70,70,67,0,75,74],
[57,66,64,55,63,56,0,71],
[60,63,67,59,65,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,82,70,64,67,62,66],
[56,0,68,60,61,57,65,48],
[49,63,0,51,49,59,51,54],
[61,71,80,0,76,74,63,60],
[67,70,82,55,0,64,59,59],
[64,74,72,57,67,0,56,64],
[69,66,80,68,72,75,0,55],
[65,83,77,71,72,67,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,60,96,34,73,96],
[59,0,70,46,83,35,70,97],
[72,61,0,83,108,72,96,97],
[71,85,48,0,71,46,71,96],
[35,48,23,60,0,22,47,47],
[97,96,59,85,109,0,84,120],
[58,61,35,60,84,47,0,96],
[35,34,34,35,84,11,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,65,60,78,69,81],
[63,0,75,64,68,67,54,65],
[58,56,0,54,58,58,54,59],
[66,67,77,0,69,79,56,59],
[71,63,73,62,0,59,63,51],
[53,64,73,52,72,0,66,59],
[62,77,77,75,68,65,0,75],
[50,66,72,72,80,72,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,60,68,61,68,67],
[64,0,61,57,67,64,63,65],
[71,70,0,68,64,62,60,73],
[71,74,63,0,59,63,59,64],
[63,64,67,72,0,70,67,68],
[70,67,69,68,61,0,65,64],
[63,68,71,72,64,66,0,70],
[64,66,58,67,63,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,69,76,61,73,67],
[71,0,63,62,67,63,70,68],
[73,68,0,65,73,63,71,75],
[62,69,66,0,77,72,70,67],
[55,64,58,54,0,50,58,60],
[70,68,68,59,81,0,67,70],
[58,61,60,61,73,64,0,64],
[64,63,56,64,71,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,67,62,72,57,63],
[64,0,66,66,63,70,61,66],
[66,65,0,66,60,71,65,63],
[64,65,65,0,58,74,71,72],
[69,68,71,73,0,63,67,73],
[59,61,60,57,68,0,63,65],
[74,70,66,60,64,68,0,71],
[68,65,68,59,58,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,60,65,70,54,71,77],
[78,0,68,77,84,61,59,77],
[71,63,0,64,72,69,65,76],
[66,54,67,0,64,58,61,65],
[61,47,59,67,0,70,45,64],
[77,70,62,73,61,0,79,84],
[60,72,66,70,86,52,0,82],
[54,54,55,66,67,47,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,71,65,70,71,67],
[69,0,72,70,67,63,75,72],
[62,59,0,65,79,61,63,65],
[60,61,66,0,71,66,57,64],
[66,64,52,60,0,64,67,61],
[61,68,70,65,67,0,65,60],
[60,56,68,74,64,66,0,68],
[64,59,66,67,70,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,61,57,71,66,70],
[70,0,60,58,60,74,71,72],
[71,71,0,66,63,77,79,73],
[70,73,65,0,66,75,69,80],
[74,71,68,65,0,73,70,68],
[60,57,54,56,58,0,67,66],
[65,60,52,62,61,64,0,62],
[61,59,58,51,63,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,75,66,79,64,68,79],
[62,0,66,57,66,60,60,72],
[56,65,0,52,55,51,50,77],
[65,74,79,0,73,67,79,79],
[52,65,76,58,0,56,52,85],
[67,71,80,64,75,0,72,81],
[63,71,81,52,79,59,0,84],
[52,59,54,52,46,50,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,80,63,69,64,62],
[71,0,61,56,80,63,74,72],
[69,70,0,79,72,64,68,64],
[51,75,52,0,48,47,53,42],
[68,51,59,83,0,67,76,70],
[62,68,67,84,64,0,76,69],
[67,57,63,78,55,55,0,61],
[69,59,67,89,61,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,56,62,34,41,44,52],
[79,0,71,84,55,74,62,63],
[75,60,0,76,64,53,54,42],
[69,47,55,0,57,48,48,56],
[97,76,67,74,0,58,61,41],
[90,57,78,83,73,0,68,68],
[87,69,77,83,70,63,0,55],
[79,68,89,75,90,63,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,68,59,67,61,53],
[68,0,66,68,64,72,69,75],
[76,65,0,80,65,60,70,70],
[63,63,51,0,54,57,55,51],
[72,67,66,77,0,60,54,61],
[64,59,71,74,71,0,69,73],
[70,62,61,76,77,62,0,69],
[78,56,61,80,70,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,60,64,63,84,74,75],
[57,0,57,63,57,89,64,47],
[71,74,0,72,61,77,72,41],
[67,68,59,0,55,79,66,66],
[68,74,70,76,0,92,60,51],
[47,42,54,52,39,0,55,47],
[57,67,59,65,71,76,0,59],
[56,84,90,65,80,84,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,65,79,66,67,69],
[66,0,68,69,85,62,70,72],
[60,63,0,61,79,54,61,72],
[66,62,70,0,81,66,76,60],
[52,46,52,50,0,51,50,61],
[65,69,77,65,80,0,66,64],
[64,61,70,55,81,65,0,76],
[62,59,59,71,70,67,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,72,72,67,71,65],
[69,0,71,67,76,65,71,72],
[57,60,0,62,62,63,60,54],
[59,64,69,0,72,63,71,63],
[59,55,69,59,0,57,72,57],
[64,66,68,68,74,0,71,68],
[60,60,71,60,59,60,0,65],
[66,59,77,68,74,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,62,74,78,77,69],
[60,0,63,61,62,65,64,58],
[57,68,0,59,66,63,66,50],
[69,70,72,0,72,74,64,68],
[57,69,65,59,0,67,62,67],
[53,66,68,57,64,0,62,62],
[54,67,65,67,69,69,0,61],
[62,73,81,63,64,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,72,69,80,71,64,88],
[69,0,76,65,73,60,50,87],
[59,55,0,65,63,65,55,76],
[62,66,66,0,66,52,51,71],
[51,58,68,65,0,57,69,57],
[60,71,66,79,74,0,54,80],
[67,81,76,80,62,77,0,86],
[43,44,55,60,74,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,78,51,49,67,67,72],
[74,0,71,60,48,67,64,74],
[53,60,0,57,51,57,52,71],
[80,71,74,0,70,81,60,77],
[82,83,80,61,0,77,77,81],
[64,64,74,50,54,0,61,83],
[64,67,79,71,54,70,0,67],
[59,57,60,54,50,48,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,59,65,66,62,62],
[64,0,59,59,57,54,52,69],
[67,72,0,68,63,65,61,70],
[72,72,63,0,63,73,66,69],
[66,74,68,68,0,67,52,73],
[65,77,66,58,64,0,63,65],
[69,79,70,65,79,68,0,74],
[69,62,61,62,58,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,78,59,79,58,63,70],
[58,0,74,62,59,61,59,53],
[53,57,0,54,62,53,55,49],
[72,69,77,0,76,65,79,61],
[52,72,69,55,0,56,60,56],
[73,70,78,66,75,0,66,61],
[68,72,76,52,71,65,0,74],
[61,78,82,70,75,70,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,63,57,56,67,53],
[73,0,65,77,67,72,69,67],
[65,66,0,55,60,55,62,63],
[68,54,76,0,60,68,69,64],
[74,64,71,71,0,66,76,56],
[75,59,76,63,65,0,79,57],
[64,62,69,62,55,52,0,51],
[78,64,68,67,75,74,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,62,70,60,60,65],
[73,0,73,64,69,60,62,57],
[59,58,0,49,59,53,54,53],
[69,67,82,0,68,69,62,68],
[61,62,72,63,0,60,68,58],
[71,71,78,62,71,0,60,66],
[71,69,77,69,63,71,0,69],
[66,74,78,63,73,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,69,67,63,64,64],
[76,0,66,67,80,58,71,72],
[76,65,0,70,73,66,64,70],
[62,64,61,0,66,61,58,63],
[64,51,58,65,0,57,64,67],
[68,73,65,70,74,0,62,67],
[67,60,67,73,67,69,0,62],
[67,59,61,68,64,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,50,81,67,73,82,67],
[62,0,73,75,79,77,82,75],
[81,58,0,82,85,75,75,73],
[50,56,49,0,60,51,49,43],
[64,52,46,71,0,72,70,58],
[58,54,56,80,59,0,66,52],
[49,49,56,82,61,65,0,59],
[64,56,58,88,73,79,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,67,63,63,63,66],
[68,0,68,62,58,66,59,70],
[68,63,0,67,60,65,64,69],
[64,69,64,0,65,71,68,65],
[68,73,71,66,0,69,70,64],
[68,65,66,60,62,0,69,68],
[68,72,67,63,61,62,0,58],
[65,61,62,66,67,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,71,77,65,62,78],
[65,0,74,82,81,67,67,73],
[66,57,0,63,75,65,54,68],
[60,49,68,0,80,46,34,62],
[54,50,56,51,0,62,30,52],
[66,64,66,85,69,0,56,74],
[69,64,77,97,101,75,0,70],
[53,58,63,69,79,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,82,85,73,70,73,74],
[67,0,76,72,77,69,69,56],
[49,55,0,66,67,65,58,61],
[46,59,65,0,58,63,60,55],
[58,54,64,73,0,52,57,49],
[61,62,66,68,79,0,61,60],
[58,62,73,71,74,70,0,63],
[57,75,70,76,82,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,74,67,62,69,58,75],
[56,0,64,64,63,71,43,62],
[57,67,0,59,56,67,51,67],
[64,67,72,0,75,68,59,68],
[69,68,75,56,0,67,67,73],
[62,60,64,63,64,0,50,57],
[73,88,80,72,64,81,0,73],
[56,69,64,63,58,74,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,73,77,75,59,78,68],
[53,0,73,63,73,65,72,64],
[58,58,0,71,66,56,63,54],
[54,68,60,0,62,62,69,59],
[56,58,65,69,0,54,59,50],
[72,66,75,69,77,0,72,65],
[53,59,68,62,72,59,0,54],
[63,67,77,72,81,66,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,69,67,69,71,62],
[59,0,80,63,63,69,59,66],
[58,51,0,59,68,65,64,56],
[62,68,72,0,68,74,61,63],
[64,68,63,63,0,72,69,58],
[62,62,66,57,59,0,61,60],
[60,72,67,70,62,70,0,67],
[69,65,75,68,73,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,54,59,68,66,61,66],
[72,0,76,64,74,73,69,66],
[77,55,0,51,76,68,60,61],
[72,67,80,0,77,58,72,73],
[63,57,55,54,0,53,62,52],
[65,58,63,73,78,0,60,60],
[70,62,71,59,69,71,0,68],
[65,65,70,58,79,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,75,63,66,65,69],
[64,0,70,64,78,67,70,69],
[61,61,0,69,64,72,60,65],
[56,67,62,0,63,57,61,64],
[68,53,67,68,0,68,67,66],
[65,64,59,74,63,0,67,63],
[66,61,71,70,64,64,0,78],
[62,62,66,67,65,68,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,65,69,67,71,58,66],
[54,0,60,72,51,60,46,61],
[66,71,0,64,60,66,63,55],
[62,59,67,0,49,67,55,53],
[64,80,71,82,0,70,69,66],
[60,71,65,64,61,0,58,60],
[73,85,68,76,62,73,0,71],
[65,70,76,78,65,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,59,77,69,68,81],
[71,0,76,67,75,76,54,71],
[67,55,0,56,75,67,64,76],
[72,64,75,0,76,74,63,81],
[54,56,56,55,0,68,53,68],
[62,55,64,57,63,0,62,73],
[63,77,67,68,78,69,0,69],
[50,60,55,50,63,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,57,65,64,71,69,76],
[53,0,68,74,64,71,63,71],
[74,63,0,65,70,71,74,62],
[66,57,66,0,66,79,55,77],
[67,67,61,65,0,76,67,70],
[60,60,60,52,55,0,60,66],
[62,68,57,76,64,71,0,82],
[55,60,69,54,61,65,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,51,65,57,77,74,68],
[68,0,62,64,62,72,62,63],
[80,69,0,71,76,86,68,59],
[66,67,60,0,78,69,56,57],
[74,69,55,53,0,71,62,51],
[54,59,45,62,60,0,64,53],
[57,69,63,75,69,67,0,51],
[63,68,72,74,80,78,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,63,62,58,71,69,63],
[57,0,62,57,53,57,51,57],
[68,69,0,68,59,60,66,63],
[69,74,63,0,58,76,68,67],
[73,78,72,73,0,68,72,59],
[60,74,71,55,63,0,62,62],
[62,80,65,63,59,69,0,61],
[68,74,68,64,72,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,72,65,70,55,72],
[55,0,57,58,55,58,49,65],
[63,74,0,66,67,71,70,74],
[59,73,65,0,57,60,56,73],
[66,76,64,74,0,73,59,62],
[61,73,60,71,58,0,55,67],
[76,82,61,75,72,76,0,72],
[59,66,57,58,69,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,73,51,63,85,77,63],
[44,0,39,47,40,55,43,27],
[58,92,0,65,62,62,69,51],
[80,84,66,0,62,78,84,69],
[68,91,69,69,0,83,68,61],
[46,76,69,53,48,0,52,52],
[54,88,62,47,63,79,0,56],
[68,104,80,62,70,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,85,64,82,74,70,70],
[48,0,51,56,64,58,57,43],
[46,80,0,57,65,67,48,48],
[67,75,74,0,66,59,64,64],
[49,67,66,65,0,61,56,39],
[57,73,64,72,70,0,51,46],
[61,74,83,67,75,80,0,64],
[61,88,83,67,92,85,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,66,67,75,53,68,73],
[51,0,59,55,68,42,63,54],
[65,72,0,69,75,70,65,74],
[64,76,62,0,71,50,70,60],
[56,63,56,60,0,54,67,62],
[78,89,61,81,77,0,69,72],
[63,68,66,61,64,62,0,68],
[58,77,57,71,69,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,52,51,77,131,78,0],
[79,0,79,79,52,79,79,53],
[79,52,0,78,77,131,105,27],
[80,52,53,0,52,106,80,80],
[54,79,54,79,0,80,54,54],
[0,52,0,25,51,0,25,0],
[53,52,26,51,77,106,0,0],
[131,78,104,51,77,131,131,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,53,53,56,62,52],
[61,0,62,68,52,65,71,59],
[58,69,0,46,53,59,60,44],
[78,63,85,0,71,74,69,60],
[78,79,78,60,0,77,69,69],
[75,66,72,57,54,0,60,58],
[69,60,71,62,62,71,0,43],
[79,72,87,71,62,73,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,65,69,65,64,60],
[67,0,67,73,76,68,65,67],
[62,64,0,71,75,75,68,60],
[66,58,60,0,62,70,62,60],
[62,55,56,69,0,62,59,64],
[66,63,56,61,69,0,58,56],
[67,66,63,69,72,73,0,70],
[71,64,71,71,67,75,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,82,87,73,74,67,75],
[86,0,87,101,65,88,88,67],
[49,44,0,70,58,58,88,80],
[44,30,61,0,52,52,52,47],
[58,66,73,79,0,72,75,67],
[57,43,73,79,59,0,74,73],
[64,43,43,79,56,57,0,59],
[56,64,51,84,64,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,69,55,50,56,65],
[84,0,62,72,72,71,56,66],
[82,69,0,74,70,63,72,61],
[62,59,57,0,68,59,59,66],
[76,59,61,63,0,75,62,59],
[81,60,68,72,56,0,64,59],
[75,75,59,72,69,67,0,65],
[66,65,70,65,72,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,69,67,66,64,77],
[67,0,70,76,69,73,63,73],
[57,61,0,62,59,62,62,68],
[62,55,69,0,58,68,57,64],
[64,62,72,73,0,67,68,72],
[65,58,69,63,64,0,59,69],
[67,68,69,74,63,72,0,70],
[54,58,63,67,59,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,60,67,66,63,64],
[70,0,78,64,69,66,69,64],
[66,53,0,66,64,60,55,58],
[71,67,65,0,74,67,66,69],
[64,62,67,57,0,66,59,63],
[65,65,71,64,65,0,65,58],
[68,62,76,65,72,66,0,67],
[67,67,73,62,68,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,70,59,65,76,59],
[63,0,58,61,53,60,75,56],
[68,73,0,60,70,61,61,68],
[61,70,71,0,73,73,82,59],
[72,78,61,58,0,66,87,70],
[66,71,70,58,65,0,69,61],
[55,56,70,49,44,62,0,56],
[72,75,63,72,61,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,47,82,45,63,53],
[69,0,51,48,63,48,54,32],
[62,80,0,58,79,67,67,67],
[84,83,73,0,89,76,57,68],
[49,68,52,42,0,52,42,53],
[86,83,64,55,79,0,48,55],
[68,77,64,74,89,83,0,67],
[78,99,64,63,78,76,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,76,61,59,66,71,67],
[66,0,70,60,62,60,76,61],
[55,61,0,66,60,62,68,59],
[70,71,65,0,68,70,72,67],
[72,69,71,63,0,66,69,72],
[65,71,69,61,65,0,73,66],
[60,55,63,59,62,58,0,57],
[64,70,72,64,59,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,69,68,82,50,70],
[54,0,76,51,63,73,60,75],
[59,55,0,58,62,75,53,70],
[62,80,73,0,59,86,63,77],
[63,68,69,72,0,83,67,77],
[49,58,56,45,48,0,47,63],
[81,71,78,68,64,84,0,83],
[61,56,61,54,54,68,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,73,68,71,65,78],
[53,0,73,66,69,66,61,64],
[65,58,0,71,69,74,69,69],
[58,65,60,0,63,65,61,58],
[63,62,62,68,0,65,53,73],
[60,65,57,66,66,0,68,59],
[66,70,62,70,78,63,0,80],
[53,67,62,73,58,72,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,58,59,70,52,61],
[65,0,66,68,53,65,62,61],
[63,65,0,65,50,72,55,63],
[73,63,66,0,64,70,68,62],
[72,78,81,67,0,71,58,63],
[61,66,59,61,60,0,58,55],
[79,69,76,63,73,73,0,68],
[70,70,68,69,68,76,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,52,67,64,65,65],
[63,0,64,49,68,65,69,68],
[74,67,0,61,70,66,72,74],
[79,82,70,0,81,65,72,71],
[64,63,61,50,0,56,63,63],
[67,66,65,66,75,0,64,71],
[66,62,59,59,68,67,0,67],
[66,63,57,60,68,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,58,60,75,65,81,67],
[60,0,57,54,70,73,71,71],
[73,74,0,63,77,75,73,70],
[71,77,68,0,75,65,74,73],
[56,61,54,56,0,56,71,59],
[66,58,56,66,75,0,70,64],
[50,60,58,57,60,61,0,62],
[64,60,61,58,72,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,43,64,63,69,61],
[74,0,64,51,66,67,71,58],
[67,67,0,54,62,68,75,58],
[88,80,77,0,59,73,81,70],
[67,65,69,72,0,56,76,56],
[68,64,63,58,75,0,71,63],
[62,60,56,50,55,60,0,43],
[70,73,73,61,75,68,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,59,63,65,66,56],
[77,0,68,67,68,63,70,57],
[78,63,0,67,65,63,88,70],
[72,64,64,0,67,72,67,76],
[68,63,66,64,0,63,70,58],
[66,68,68,59,68,0,78,66],
[65,61,43,64,61,53,0,64],
[75,74,61,55,73,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,60,89,67,67,61,78],
[56,0,53,28,53,47,49,63],
[71,78,0,56,67,64,63,76],
[42,103,75,0,74,82,70,100],
[64,78,64,57,0,43,71,85],
[64,84,67,49,88,0,78,71],
[70,82,68,61,60,53,0,78],
[53,68,55,31,46,60,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,49,48,31,47,16,15],
[100,0,80,66,80,97,66,63],
[82,51,0,99,82,97,67,82],
[83,65,32,0,65,99,83,49],
[100,51,49,66,0,82,51,48],
[84,34,34,32,49,0,69,34],
[115,65,64,48,80,62,0,63],
[116,68,49,82,83,97,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,67,65,60,69,65],
[60,0,64,65,56,68,70,69],
[72,67,0,66,66,67,66,65],
[64,66,65,0,65,74,67,73],
[66,75,65,66,0,71,69,66],
[71,63,64,57,60,0,64,64],
[62,61,65,64,62,67,0,67],
[66,62,66,58,65,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,66,74,64,64,60],
[69,0,70,68,76,74,67,58],
[63,61,0,62,65,61,65,51],
[65,63,69,0,69,61,64,57],
[57,55,66,62,0,57,56,57],
[67,57,70,70,74,0,65,64],
[67,64,66,67,75,66,0,70],
[71,73,80,74,74,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,82,100,73,84,75,73],
[78,0,95,93,84,60,95,57],
[49,36,0,51,42,43,55,37],
[31,38,80,0,47,48,52,43],
[58,47,89,84,0,60,70,60],
[47,71,88,83,71,0,61,61],
[56,36,76,79,61,70,0,59],
[58,74,94,88,71,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,66,63,66,71,60],
[64,0,77,70,68,66,72,67],
[64,54,0,60,62,66,63,62],
[65,61,71,0,63,67,68,61],
[68,63,69,68,0,67,69,67],
[65,65,65,64,64,0,71,59],
[60,59,68,63,62,60,0,51],
[71,64,69,70,64,72,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,64,59,62,64,58],
[64,0,68,68,61,48,80,53],
[67,63,0,55,61,44,83,63],
[67,63,76,0,69,67,76,78],
[72,70,70,62,0,47,72,73],
[69,83,87,64,84,0,74,66],
[67,51,48,55,59,57,0,62],
[73,78,68,53,58,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,74,85,79,57,62,78],
[71,0,67,72,71,63,76,67],
[57,64,0,57,72,61,73,60],
[46,59,74,0,63,59,66,54],
[52,60,59,68,0,65,59,58],
[74,68,70,72,66,0,67,61],
[69,55,58,65,72,64,0,69],
[53,64,71,77,73,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,72,71,83,74,66],
[69,0,62,73,63,61,54,65],
[65,69,0,64,62,72,53,67],
[59,58,67,0,69,77,64,53],
[60,68,69,62,0,70,69,58],
[48,70,59,54,61,0,54,52],
[57,77,78,67,62,77,0,72],
[65,66,64,78,73,79,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,63,50,63,56,68],
[63,0,61,66,53,57,53,65],
[72,70,0,73,69,64,63,61],
[68,65,58,0,64,60,59,68],
[81,78,62,67,0,65,66,75],
[68,74,67,71,66,0,56,67],
[75,78,68,72,65,75,0,72],
[63,66,70,63,56,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,69,56,40,64,70,66],
[83,0,57,85,66,70,89,96],
[62,74,0,65,56,70,70,79],
[75,46,66,0,58,51,89,79],
[91,65,75,73,0,86,88,100],
[67,61,61,80,45,0,81,82],
[61,42,61,42,43,50,0,72],
[65,35,52,52,31,49,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,45,65,52,54,62,86],
[102,0,94,97,59,71,87,86],
[86,37,0,81,52,54,79,78],
[66,34,50,0,32,52,59,58],
[79,72,79,99,0,45,98,86],
[77,60,77,79,86,0,105,85],
[69,44,52,72,33,26,0,67],
[45,45,53,73,45,46,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,66,52,71,64,65,72],
[86,0,69,57,68,63,77,83],
[65,62,0,57,58,51,77,78],
[79,74,74,0,69,60,83,71],
[60,63,73,62,0,71,82,73],
[67,68,80,71,60,0,80,66],
[66,54,54,48,49,51,0,53],
[59,48,53,60,58,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,50,54,69,57,53],
[64,0,71,61,67,70,70,51],
[69,60,0,58,67,64,67,55],
[81,70,73,0,77,80,64,57],
[77,64,64,54,0,79,62,62],
[62,61,67,51,52,0,54,53],
[74,61,64,67,69,77,0,68],
[78,80,76,74,69,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,79,71,65,62,53],
[64,0,67,66,69,58,63,65],
[55,64,0,75,65,69,73,60],
[52,65,56,0,58,58,67,46],
[60,62,66,73,0,56,63,61],
[66,73,62,73,75,0,76,67],
[69,68,58,64,68,55,0,58],
[78,66,71,85,70,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,73,54,69,62,63],
[62,0,54,71,54,60,52,54],
[69,77,0,80,60,75,61,71],
[58,60,51,0,55,58,54,58],
[77,77,71,76,0,80,68,58],
[62,71,56,73,51,0,48,65],
[69,79,70,77,63,83,0,75],
[68,77,60,73,73,66,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,63,41,63,82,78],
[64,0,72,68,63,72,68,75],
[66,59,0,66,68,77,73,57],
[68,63,65,0,64,77,73,65],
[90,68,63,67,0,62,72,64],
[68,59,54,54,69,0,54,60],
[49,63,58,58,59,77,0,56],
[53,56,74,66,67,71,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,73,65,64,68,67],
[59,0,71,75,72,65,74,68],
[62,60,0,65,58,55,64,55],
[58,56,66,0,55,64,61,58],
[66,59,73,76,0,66,64,66],
[67,66,76,67,65,0,78,61],
[63,57,67,70,67,53,0,55],
[64,63,76,73,65,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,52,61,57,56,52],
[69,0,54,61,59,63,54,61],
[69,77,0,60,72,73,60,52],
[79,70,71,0,72,72,63,71],
[70,72,59,59,0,62,63,68],
[74,68,58,59,69,0,59,65],
[75,77,71,68,68,72,0,65],
[79,70,79,60,63,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,78,73,72,63,61,64],
[58,0,76,76,72,66,59,64],
[53,55,0,64,48,50,55,72],
[58,55,67,0,64,56,58,74],
[59,59,83,67,0,76,63,71],
[68,65,81,75,55,0,77,58],
[70,72,76,73,68,54,0,77],
[67,67,59,57,60,73,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,87,81,63,74,64,71],
[67,0,70,74,81,59,62,69],
[44,61,0,75,65,59,58,59],
[50,57,56,0,50,55,56,54],
[68,50,66,81,0,62,74,61],
[57,72,72,76,69,0,78,70],
[67,69,73,75,57,53,0,69],
[60,62,72,77,70,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,84,72,70,74,75,63],
[61,0,70,73,62,67,60,60],
[47,61,0,63,59,61,63,60],
[59,58,68,0,60,66,71,58],
[61,69,72,71,0,69,70,64],
[57,64,70,65,62,0,67,58],
[56,71,68,60,61,64,0,66],
[68,71,71,73,67,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,65,80,76,63,85],
[55,0,64,53,74,57,56,63],
[59,67,0,66,87,76,64,69],
[66,78,65,0,80,79,71,74],
[51,57,44,51,0,62,51,60],
[55,74,55,52,69,0,57,65],
[68,75,67,60,80,74,0,86],
[46,68,62,57,71,66,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,67,68,64,68,59],
[73,0,63,66,64,65,76,67],
[72,68,0,62,76,72,75,61],
[64,65,69,0,64,66,66,60],
[63,67,55,67,0,70,73,73],
[67,66,59,65,61,0,74,61],
[63,55,56,65,58,57,0,55],
[72,64,70,71,58,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,59,69,71,63,65],
[66,0,64,67,66,65,53,56],
[65,67,0,67,72,65,59,60],
[72,64,64,0,80,64,71,70],
[62,65,59,51,0,65,62,58],
[60,66,66,67,66,0,59,64],
[68,78,72,60,69,72,0,68],
[66,75,71,61,73,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,86,63,70,69,73,67],
[73,0,58,66,63,66,68,60],
[45,73,0,65,54,68,57,53],
[68,65,66,0,65,74,83,65],
[61,68,77,66,0,75,66,64],
[62,65,63,57,56,0,65,55],
[58,63,74,48,65,66,0,58],
[64,71,78,66,67,76,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,80,68,67,64,65,68],
[55,0,64,51,69,58,53,63],
[51,67,0,61,77,56,51,61],
[63,80,70,0,76,66,64,65],
[64,62,54,55,0,57,50,59],
[67,73,75,65,74,0,66,69],
[66,78,80,67,81,65,0,75],
[63,68,70,66,72,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,70,65,43,76,72],
[60,0,65,59,68,45,80,86],
[64,66,0,55,56,36,59,72],
[61,72,76,0,68,67,81,85],
[66,63,75,63,0,45,79,86],
[88,86,95,64,86,0,98,91],
[55,51,72,50,52,33,0,65],
[59,45,59,46,45,40,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,55,52,61,52,62,51],
[60,0,48,54,66,62,58,43],
[76,83,0,64,68,71,60,55],
[79,77,67,0,75,57,59,70],
[70,65,63,56,0,56,68,48],
[79,69,60,74,75,0,50,56],
[69,73,71,72,63,81,0,65],
[80,88,76,61,83,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,66,58,55,55,71],
[61,0,68,70,56,59,63,67],
[62,63,0,65,65,58,63,65],
[65,61,66,0,70,59,59,70],
[73,75,66,61,0,68,70,73],
[76,72,73,72,63,0,60,73],
[76,68,68,72,61,71,0,77],
[60,64,66,61,58,58,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,72,76,57,68,61],
[74,0,63,74,71,68,71,66],
[63,68,0,71,78,69,70,70],
[59,57,60,0,70,61,70,53],
[55,60,53,61,0,58,63,55],
[74,63,62,70,73,0,70,74],
[63,60,61,61,68,61,0,56],
[70,65,61,78,76,57,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,74,68,70,75,66],
[66,0,70,67,66,69,69,64],
[58,61,0,67,59,66,67,61],
[57,64,64,0,63,66,69,63],
[63,65,72,68,0,60,74,57],
[61,62,65,65,71,0,76,65],
[56,62,64,62,57,55,0,60],
[65,67,70,68,74,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,72,72,71,72,79],
[60,0,72,65,74,65,64,79],
[67,59,0,71,91,73,75,78],
[59,66,60,0,74,72,63,74],
[59,57,40,57,0,56,59,71],
[60,66,58,59,75,0,65,75],
[59,67,56,68,72,66,0,75],
[52,52,53,57,60,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,72,64,58,61,60,69],
[75,0,67,63,65,61,61,65],
[59,64,0,60,66,55,60,62],
[67,68,71,0,61,46,65,65],
[73,66,65,70,0,65,69,69],
[70,70,76,85,66,0,69,63],
[71,70,71,66,62,62,0,75],
[62,66,69,66,62,68,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,80,66,66,65,64,69],
[70,0,73,65,70,59,49,68],
[51,58,0,54,65,59,53,65],
[65,66,77,0,70,67,64,68],
[65,61,66,61,0,67,72,67],
[66,72,72,64,64,0,72,64],
[67,82,78,67,59,59,0,74],
[62,63,66,63,64,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,75,79,74,73,71],
[62,0,76,65,70,65,87,64],
[76,55,0,63,78,63,72,73],
[56,66,68,0,82,65,76,80],
[52,61,53,49,0,70,72,58],
[57,66,68,66,61,0,78,65],
[58,44,59,55,59,53,0,51],
[60,67,58,51,73,66,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,61,70,70,67,60],
[76,0,69,58,67,69,64,70],
[59,62,0,62,58,61,58,56],
[70,73,69,0,69,72,74,65],
[61,64,73,62,0,76,62,67],
[61,62,70,59,55,0,59,55],
[64,67,73,57,69,72,0,63],
[71,61,75,66,64,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,66,69,67,59,52,56],
[85,0,69,84,81,85,67,65],
[65,62,0,70,63,79,61,51],
[62,47,61,0,62,64,51,50],
[64,50,68,69,0,54,63,57],
[72,46,52,67,77,0,53,60],
[79,64,70,80,68,78,0,68],
[75,66,80,81,74,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,60,66,63,59,58,56],
[56,0,67,69,65,66,57,64],
[71,64,0,64,73,54,66,74],
[65,62,67,0,64,59,68,57],
[68,66,58,67,0,57,59,61],
[72,65,77,72,74,0,73,66],
[73,74,65,63,72,58,0,70],
[75,67,57,74,70,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,63,67,52,72,64,62],
[55,0,57,55,53,58,67,62],
[68,74,0,58,58,64,74,66],
[64,76,73,0,69,79,82,79],
[79,78,73,62,0,64,68,75],
[59,73,67,52,67,0,78,80],
[67,64,57,49,63,53,0,62],
[69,69,65,52,56,51,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,65,60,58,60,57],
[68,0,59,64,60,58,68,50],
[71,72,0,71,64,68,76,61],
[66,67,60,0,63,70,54,63],
[71,71,67,68,0,67,63,66],
[73,73,63,61,64,0,63,65],
[71,63,55,77,68,68,0,56],
[74,81,70,68,65,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,66,54,68,62,58,62],
[57,0,70,57,54,63,63,58],
[65,61,0,64,60,62,66,63],
[77,74,67,0,65,67,69,66],
[63,77,71,66,0,65,73,66],
[69,68,69,64,66,0,70,65],
[73,68,65,62,58,61,0,69],
[69,73,68,65,65,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,71,66,72,61,68],
[58,0,52,65,59,67,58,48],
[65,79,0,69,68,75,69,74],
[60,66,62,0,56,60,61,59],
[65,72,63,75,0,69,62,72],
[59,64,56,71,62,0,57,53],
[70,73,62,70,69,74,0,71],
[63,83,57,72,59,78,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,58,57,50,69,58,73],
[72,0,60,47,47,72,60,77],
[73,71,0,49,69,69,70,80],
[74,84,82,0,68,81,62,72],
[81,84,62,63,0,67,71,74],
[62,59,62,50,64,0,56,77],
[73,71,61,69,60,75,0,75],
[58,54,51,59,57,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,76,82,68,71,70,72],
[69,0,70,74,72,62,66,82],
[55,61,0,60,73,64,59,65],
[49,57,71,0,69,76,68,76],
[63,59,58,62,0,64,57,63],
[60,69,67,55,67,0,54,61],
[61,65,72,63,74,77,0,80],
[59,49,66,55,68,70,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,17,36,36,40,17],
[95,0,94,57,59,75,40,57],
[95,37,0,94,58,76,40,75],
[114,74,37,0,74,56,77,95],
[95,72,73,57,0,75,40,57],
[95,56,55,75,56,0,58,58],
[91,91,91,54,91,73,0,54],
[114,74,56,36,74,73,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,65,68,72,78,72],
[66,0,63,66,57,59,61,65],
[70,68,0,70,73,70,74,65],
[66,65,61,0,67,68,65,58],
[63,74,58,64,0,59,68,65],
[59,72,61,63,72,0,64,65],
[53,70,57,66,63,67,0,63],
[59,66,66,73,66,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,66,58,70,62,68],
[65,0,74,80,66,65,69,64],
[72,57,0,64,55,71,67,55],
[65,51,67,0,60,65,66,61],
[73,65,76,71,0,70,72,71],
[61,66,60,66,61,0,63,59],
[69,62,64,65,59,68,0,55],
[63,67,76,70,60,72,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,54,45,59,53,57],
[73,0,69,68,58,66,72,76],
[72,62,0,59,65,64,75,71],
[77,63,72,0,66,76,76,69],
[86,73,66,65,0,88,76,85],
[72,65,67,55,43,0,60,72],
[78,59,56,55,55,71,0,59],
[74,55,60,62,46,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,63,59,75,77,79,74],
[48,0,56,61,66,70,64,66],
[68,75,0,72,80,79,58,73],
[72,70,59,0,61,67,62,55],
[56,65,51,70,0,74,69,65],
[54,61,52,64,57,0,62,68],
[52,67,73,69,62,69,0,65],
[57,65,58,76,66,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,64,63,67,69,66],
[66,0,67,66,72,65,73,67],
[61,64,0,72,65,66,65,75],
[67,65,59,0,69,76,70,71],
[68,59,66,62,0,61,66,68],
[64,66,65,55,70,0,64,70],
[62,58,66,61,65,67,0,62],
[65,64,56,60,63,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,51,67,60,60,53,66],
[66,0,70,72,63,65,68,81],
[80,61,0,63,68,72,64,76],
[64,59,68,0,62,65,57,70],
[71,68,63,69,0,69,67,65],
[71,66,59,66,62,0,67,70],
[78,63,67,74,64,64,0,78],
[65,50,55,61,66,61,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,64,61,61,69,66],
[63,0,62,62,58,61,72,61],
[68,69,0,57,70,66,78,67],
[67,69,74,0,67,61,75,65],
[70,73,61,64,0,62,69,65],
[70,70,65,70,69,0,72,69],
[62,59,53,56,62,59,0,59],
[65,70,64,66,66,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,76,51,43,61,50,54],
[94,0,82,65,68,67,76,63],
[55,49,0,64,61,60,46,47],
[80,66,67,0,65,72,56,74],
[88,63,70,66,0,75,73,63],
[70,64,71,59,56,0,52,55],
[81,55,85,75,58,79,0,78],
[77,68,84,57,68,76,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,79,69,74,87,65],
[63,0,70,66,61,67,93,70],
[58,61,0,49,62,79,76,67],
[52,65,82,0,67,73,74,71],
[62,70,69,64,0,78,82,71],
[57,64,52,58,53,0,77,55],
[44,38,55,57,49,54,0,57],
[66,61,64,60,60,76,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,61,68,69,63,74,69],
[81,0,69,74,72,74,73,61],
[70,62,0,67,72,80,76,70],
[63,57,64,0,54,69,69,47],
[62,59,59,77,0,65,62,61],
[68,57,51,62,66,0,58,57],
[57,58,55,62,69,73,0,68],
[62,70,61,84,70,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,60,70,61,59,65],
[63,0,62,58,62,58,56,61],
[63,69,0,69,64,58,66,69],
[71,73,62,0,57,57,53,71],
[61,69,67,74,0,66,58,68],
[70,73,73,74,65,0,58,72],
[72,75,65,78,73,73,0,73],
[66,70,62,60,63,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,75,66,76,76,77,63],
[57,0,64,57,62,66,66,59],
[56,67,0,60,62,63,66,59],
[65,74,71,0,68,75,71,66],
[55,69,69,63,0,66,68,65],
[55,65,68,56,65,0,69,62],
[54,65,65,60,63,62,0,66],
[68,72,72,65,66,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,67,59,59,79,67],
[70,0,55,83,65,65,84,65],
[76,76,0,72,80,63,81,60],
[64,48,59,0,57,51,72,60],
[72,66,51,74,0,63,82,71],
[72,66,68,80,68,0,82,65],
[52,47,50,59,49,49,0,51],
[64,66,71,71,60,66,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,58,60,67,67,67,67],
[60,0,44,47,58,48,64,58],
[73,87,0,78,75,63,68,82],
[71,84,53,0,72,61,63,68],
[64,73,56,59,0,56,72,63],
[64,83,68,70,75,0,76,72],
[64,67,63,68,59,55,0,65],
[64,73,49,63,68,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,64,71,52,54,58,65],
[84,0,57,76,70,69,83,73],
[67,74,0,78,59,66,72,65],
[60,55,53,0,51,50,63,56],
[79,61,72,80,0,67,80,76],
[77,62,65,81,64,0,66,72],
[73,48,59,68,51,65,0,68],
[66,58,66,75,55,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,65,61,60,58,59],
[65,0,63,67,57,58,58,62],
[67,68,0,69,54,58,60,63],
[66,64,62,0,57,54,56,51],
[70,74,77,74,0,62,66,67],
[71,73,73,77,69,0,64,67],
[73,73,71,75,65,67,0,70],
[72,69,68,80,64,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,71,65,72,74,74],
[61,0,62,65,65,76,69,64],
[64,69,0,68,70,69,73,68],
[60,66,63,0,67,70,68,65],
[66,66,61,64,0,65,65,60],
[59,55,62,61,66,0,64,67],
[57,62,58,63,66,67,0,64],
[57,67,63,66,71,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,65,65,57,70,72],
[58,0,68,61,73,57,68,58],
[65,63,0,64,61,61,69,67],
[66,70,67,0,71,65,69,68],
[66,58,70,60,0,56,65,69],
[74,74,70,66,75,0,76,63],
[61,63,62,62,66,55,0,68],
[59,73,64,63,62,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,62,57,62,59,70],
[67,0,67,67,68,55,59,73],
[74,64,0,63,72,63,60,68],
[69,64,68,0,69,69,61,69],
[74,63,59,62,0,62,68,74],
[69,76,68,62,69,0,60,78],
[72,72,71,70,63,71,0,75],
[61,58,63,62,57,53,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,74,68,66,60,66],
[60,0,67,61,66,56,66,58],
[60,64,0,61,60,55,61,65],
[57,70,70,0,65,60,66,66],
[63,65,71,66,0,64,69,61],
[65,75,76,71,67,0,78,69],
[71,65,70,65,62,53,0,64],
[65,73,66,65,70,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,79,59,72,78,67,67],
[60,0,78,67,63,72,59,64],
[52,53,0,54,51,62,53,53],
[72,64,77,0,60,75,55,69],
[59,68,80,71,0,67,53,58],
[53,59,69,56,64,0,63,68],
[64,72,78,76,78,68,0,66],
[64,67,78,62,73,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,47,51,66,94,61,45],
[69,0,63,68,47,83,70,62],
[84,68,0,86,65,101,87,80],
[80,63,45,0,63,83,68,48],
[65,84,66,68,0,81,66,62],
[37,48,30,48,50,0,49,25],
[70,61,44,63,65,82,0,50],
[86,69,51,83,69,106,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,65,69,75,59,69],
[64,0,52,57,63,73,61,59],
[67,79,0,69,79,76,63,71],
[66,74,62,0,64,73,66,70],
[62,68,52,67,0,69,63,62],
[56,58,55,58,62,0,58,55],
[72,70,68,65,68,73,0,66],
[62,72,60,61,69,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,70,67,56,71,64,63],
[73,0,76,58,57,60,64,59],
[61,55,0,60,51,52,58,51],
[64,73,71,0,66,74,73,71],
[75,74,80,65,0,56,63,84],
[60,71,79,57,75,0,75,62],
[67,67,73,58,68,56,0,67],
[68,72,80,60,47,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,75,60,68,67,78],
[62,0,69,70,64,64,60,72],
[66,62,0,71,63,66,73,74],
[56,61,60,0,57,60,62,64],
[71,67,68,74,0,64,72,69],
[63,67,65,71,67,0,66,67],
[64,71,58,69,59,65,0,73],
[53,59,57,67,62,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,91,91,71,40,39],
[74,0,84,72,103,61,63,51],
[65,47,0,73,94,71,72,61],
[40,59,58,0,89,61,41,40],
[40,28,37,42,0,42,32,32],
[60,70,60,70,89,0,43,30],
[91,68,59,90,99,88,0,73],
[92,80,70,91,99,101,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,76,72,63,76,77],
[72,0,79,73,73,64,63,84],
[62,52,0,75,73,58,67,70],
[55,58,56,0,66,62,67,71],
[59,58,58,65,0,57,52,55],
[68,67,73,69,74,0,62,77],
[55,68,64,64,79,69,0,64],
[54,47,61,60,76,54,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,70,65,77,74,77],
[61,0,67,72,69,75,75,80],
[60,64,0,66,64,69,69,69],
[61,59,65,0,63,71,66,73],
[66,62,67,68,0,73,71,74],
[54,56,62,60,58,0,61,68],
[57,56,62,65,60,70,0,69],
[54,51,62,58,57,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,79,64,56,69,72],
[66,0,79,68,70,59,84,74],
[58,52,0,64,57,65,58,53],
[52,63,67,0,55,56,71,65],
[67,61,74,76,0,72,66,59],
[75,72,66,75,59,0,68,72],
[62,47,73,60,65,63,0,67],
[59,57,78,66,72,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,63,65,70,60,73],
[71,0,64,70,65,70,64,73],
[69,67,0,75,59,75,69,69],
[68,61,56,0,66,65,68,72],
[66,66,72,65,0,66,62,76],
[61,61,56,66,65,0,75,65],
[71,67,62,63,69,56,0,73],
[58,58,62,59,55,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,81,68,67,67,62,66],
[62,0,67,67,68,76,72,67],
[50,64,0,62,62,68,60,61],
[63,64,69,0,65,72,68,68],
[64,63,69,66,0,72,65,72],
[64,55,63,59,59,0,56,60],
[69,59,71,63,66,75,0,67],
[65,64,70,63,59,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,52,50,56,63,59,67],
[71,0,68,67,66,65,63,65],
[79,63,0,63,67,68,62,69],
[81,64,68,0,64,66,66,70],
[75,65,64,67,0,60,61,61],
[68,66,63,65,71,0,60,58],
[72,68,69,65,70,71,0,69],
[64,66,62,61,70,73,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,85,94,65,100,61,81],
[56,0,71,82,47,86,49,60],
[46,60,0,81,52,71,52,58],
[37,49,50,0,54,63,46,61],
[66,84,79,77,0,81,65,68],
[31,45,60,68,50,0,51,57],
[70,82,79,85,66,80,0,62],
[50,71,73,70,63,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,58,67,64,58,63],
[67,0,77,65,62,68,68,70],
[62,54,0,57,58,61,61,54],
[73,66,74,0,64,68,68,63],
[64,69,73,67,0,68,59,67],
[67,63,70,63,63,0,62,56],
[73,63,70,63,72,69,0,58],
[68,61,77,68,64,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,61,61,61,73,70,47],
[96,0,83,60,83,72,85,60],
[70,48,0,60,23,48,59,60],
[70,71,71,0,35,59,59,71],
[70,48,108,96,0,83,94,71],
[58,59,83,72,48,0,59,48],
[61,46,72,72,37,72,0,47],
[84,71,71,60,60,83,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,64,72,60,77,71],
[65,0,72,64,69,71,73,68],
[64,59,0,67,64,83,67,77],
[67,67,64,0,71,71,69,65],
[59,62,67,60,0,69,73,69],
[71,60,48,60,62,0,66,59],
[54,58,64,62,58,65,0,53],
[60,63,54,66,62,72,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,70,62,66,58,63],
[67,0,54,67,56,64,55,68],
[63,77,0,82,57,60,58,68],
[61,64,49,0,45,56,54,65],
[69,75,74,86,0,76,62,74],
[65,67,71,75,55,0,59,63],
[73,76,73,77,69,72,0,65],
[68,63,63,66,57,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,88,76,85,100,72,75],
[78,0,60,92,65,76,72,86],
[43,71,0,80,61,82,54,65],
[55,39,51,0,73,78,43,48],
[46,66,70,58,0,83,77,67],
[31,55,49,53,48,0,51,64],
[59,59,77,88,54,80,0,60],
[56,45,66,83,64,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,89,76,64,80,79,61],
[59,0,68,67,71,62,62,65],
[42,63,0,63,66,58,57,54],
[55,64,68,0,65,62,62,66],
[67,60,65,66,0,75,70,65],
[51,69,73,69,56,0,71,56],
[52,69,74,69,61,60,0,59],
[70,66,77,65,66,75,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,76,56,62,62,64],
[62,0,64,70,55,51,63,69],
[67,67,0,81,69,68,64,76],
[55,61,50,0,57,53,63,74],
[75,76,62,74,0,61,76,74],
[69,80,63,78,70,0,75,78],
[69,68,67,68,55,56,0,62],
[67,62,55,57,57,53,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,56,51,64,56,63],
[77,0,52,63,62,65,63,63],
[65,79,0,67,61,62,68,64],
[75,68,64,0,69,66,63,75],
[80,69,70,62,0,66,69,72],
[67,66,69,65,65,0,58,61],
[75,68,63,68,62,73,0,71],
[68,68,67,56,59,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,81,65,65,65,49,65],
[81,0,48,82,82,82,50,66],
[50,83,0,66,99,50,67,84],
[66,49,65,0,67,49,83,83],
[66,49,32,64,0,48,67,67],
[66,49,81,82,83,0,51,99],
[82,81,64,48,64,80,0,80],
[66,65,47,48,64,32,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,74,66,62,64,70],
[67,0,62,67,65,63,66,63],
[73,69,0,81,62,63,72,73],
[57,64,50,0,53,58,57,64],
[65,66,69,78,0,61,61,79],
[69,68,68,73,70,0,60,73],
[67,65,59,74,70,71,0,68],
[61,68,58,67,52,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,50,64,59,50,61,58],
[66,0,70,71,66,65,60,64],
[81,61,0,75,73,59,66,65],
[67,60,56,0,57,55,57,59],
[72,65,58,74,0,68,67,63],
[81,66,72,76,63,0,69,68],
[70,71,65,74,64,62,0,64],
[73,67,66,72,68,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,71,61,78,59,85],
[59,0,68,54,65,65,63,73],
[62,63,0,67,69,73,64,67],
[60,77,64,0,67,67,71,79],
[70,66,62,64,0,77,57,78],
[53,66,58,64,54,0,67,60],
[72,68,67,60,74,64,0,77],
[46,58,64,52,53,71,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,48,56,57,65,81,74],
[73,0,60,75,56,59,48,64],
[83,71,0,59,76,73,78,77],
[75,56,72,0,63,55,54,67],
[74,75,55,68,0,57,83,60],
[66,72,58,76,74,0,68,82],
[50,83,53,77,48,63,0,61],
[57,67,54,64,71,49,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,67,73,72,73,67],
[60,0,71,68,83,64,70,75],
[70,60,0,55,61,70,60,62],
[64,63,76,0,75,71,74,57],
[58,48,70,56,0,59,70,58],
[59,67,61,60,72,0,70,66],
[58,61,71,57,61,61,0,64],
[64,56,69,74,73,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,74,87,72,66,79],
[58,0,61,58,67,58,70,64],
[72,70,0,65,76,76,81,75],
[57,73,66,0,71,77,72,68],
[44,64,55,60,0,71,63,77],
[59,73,55,54,60,0,56,52],
[65,61,50,59,68,75,0,64],
[52,67,56,63,54,79,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,52,65,58,56,55],
[70,0,64,64,79,62,65,70],
[73,67,0,62,79,69,65,63],
[79,67,69,0,77,60,70,69],
[66,52,52,54,0,57,58,58],
[73,69,62,71,74,0,64,67],
[75,66,66,61,73,67,0,69],
[76,61,68,62,73,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,58,60,44,53,45,45],
[101,0,71,80,46,56,94,74],
[73,60,0,66,58,66,59,51],
[71,51,65,0,60,59,71,67],
[87,85,73,71,0,60,64,68],
[78,75,65,72,71,0,58,70],
[86,37,72,60,67,73,0,51],
[86,57,80,64,63,61,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,74,77,67,70,67],
[71,0,74,77,68,62,63,55],
[62,57,0,66,62,67,78,51],
[57,54,65,0,52,53,61,48],
[54,63,69,79,0,72,73,52],
[64,69,64,78,59,0,62,61],
[61,68,53,70,58,69,0,53],
[64,76,80,83,79,70,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,69,63,73,44,63],
[72,0,68,75,79,71,54,72],
[64,63,0,81,71,60,70,71],
[62,56,50,0,59,68,51,52],
[68,52,60,72,0,74,52,52],
[58,60,71,63,57,0,49,68],
[87,77,61,80,79,82,0,71],
[68,59,60,79,79,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,75,71,64,79,75,67],
[62,0,60,63,56,56,69,56],
[56,71,0,59,59,53,64,57],
[60,68,72,0,59,73,71,64],
[67,75,72,72,0,65,82,70],
[52,75,78,58,66,0,73,67],
[56,62,67,60,49,58,0,57],
[64,75,74,67,61,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,69,70,72,70,62],
[59,0,69,55,60,62,63,58],
[56,62,0,72,61,69,75,64],
[62,76,59,0,51,69,76,65],
[61,71,70,80,0,75,70,60],
[59,69,62,62,56,0,56,54],
[61,68,56,55,61,75,0,68],
[69,73,67,66,71,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,69,63,71,65,63],
[60,0,70,66,63,68,62,62],
[58,61,0,65,61,67,53,56],
[62,65,66,0,63,64,59,57],
[68,68,70,68,0,76,67,60],
[60,63,64,67,55,0,63,50],
[66,69,78,72,64,68,0,71],
[68,69,75,74,71,81,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,65,70,74,72,71],
[54,0,62,61,50,71,55,52],
[61,69,0,63,61,78,68,70],
[66,70,68,0,62,82,70,68],
[61,81,70,69,0,73,50,60],
[57,60,53,49,58,0,68,52],
[59,76,63,61,81,63,0,57],
[60,79,61,63,71,79,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,69,67,68,66,62,71],
[72,0,66,67,72,77,64,67],
[62,65,0,61,68,72,68,70],
[64,64,70,0,65,73,66,64],
[63,59,63,66,0,70,63,58],
[65,54,59,58,61,0,59,58],
[69,67,63,65,68,72,0,69],
[60,64,61,67,73,73,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,78,67,80,65,76],
[69,0,62,80,59,77,57,63],
[68,69,0,74,62,61,75,78],
[53,51,57,0,54,61,72,66],
[64,72,69,77,0,95,79,61],
[51,54,70,70,36,0,69,77],
[66,74,56,59,52,62,0,66],
[55,68,53,65,70,54,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,91,63,63,82,65,72],
[61,0,75,65,65,70,61,75],
[40,56,0,51,63,56,45,57],
[68,66,80,0,56,83,67,62],
[68,66,68,75,0,80,64,76],
[49,61,75,48,51,0,57,62],
[66,70,86,64,67,74,0,73],
[59,56,74,69,55,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,75,64,71,70,72,73],
[54,0,59,54,63,55,46,66],
[56,72,0,60,62,67,71,62],
[67,77,71,0,64,64,68,69],
[60,68,69,67,0,67,62,57],
[61,76,64,67,64,0,84,73],
[59,85,60,63,69,47,0,61],
[58,65,69,62,74,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,53,70,65,86,66,55],
[59,0,53,64,47,80,67,48],
[78,78,0,78,55,89,65,73],
[61,67,53,0,63,98,63,53],
[66,84,76,68,0,87,71,61],
[45,51,42,33,44,0,33,15],
[65,64,66,68,60,98,0,67],
[76,83,58,78,70,116,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,65,65,69,77,72],
[62,0,72,67,69,68,75,75],
[65,59,0,67,70,76,71,74],
[66,64,64,0,60,61,63,67],
[66,62,61,71,0,73,67,76],
[62,63,55,70,58,0,59,73],
[54,56,60,68,64,72,0,68],
[59,56,57,64,55,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,66,70,65,66,65],
[65,0,68,64,65,70,72,68],
[71,63,0,71,73,69,66,70],
[65,67,60,0,60,62,67,63],
[61,66,58,71,0,59,65,67],
[66,61,62,69,72,0,67,68],
[65,59,65,64,66,64,0,70],
[66,63,61,68,64,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,68,70,70,70,71],
[64,0,68,68,67,62,65,73],
[67,63,0,62,68,58,69,71],
[63,63,69,0,70,76,67,76],
[61,64,63,61,0,59,70,64],
[61,69,73,55,72,0,70,72],
[61,66,62,64,61,61,0,67],
[60,58,60,55,67,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,73,58,54,51,61],
[62,0,84,56,58,57,63,70],
[58,47,0,59,53,55,58,59],
[58,75,72,0,47,64,67,62],
[73,73,78,84,0,39,55,76],
[77,74,76,67,92,0,61,82],
[80,68,73,64,76,70,0,73],
[70,61,72,69,55,49,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,54,71,71,51,65,56],
[76,0,67,78,81,56,74,60],
[77,64,0,79,77,75,72,59],
[60,53,52,0,63,53,65,63],
[60,50,54,68,0,35,53,64],
[80,75,56,78,96,0,78,78],
[66,57,59,66,78,53,0,71],
[75,71,72,68,67,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,59,63,56,55,53,66],
[78,0,67,65,66,71,71,72],
[72,64,0,66,61,61,61,66],
[68,66,65,0,62,66,59,66],
[75,65,70,69,0,73,64,75],
[76,60,70,65,58,0,60,70],
[78,60,70,72,67,71,0,71],
[65,59,65,65,56,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,65,61,67,60,72],
[66,0,62,63,60,66,71,69],
[69,69,0,68,66,70,64,68],
[66,68,63,0,63,62,70,69],
[70,71,65,68,0,67,64,69],
[64,65,61,69,64,0,62,74],
[71,60,67,61,67,69,0,71],
[59,62,63,62,62,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,78,71,70,70,72],
[69,0,71,80,65,69,71,70],
[68,60,0,77,78,70,68,67],
[53,51,54,0,71,62,54,62],
[60,66,53,60,0,60,57,66],
[61,62,61,69,71,0,74,71],
[61,60,63,77,74,57,0,66],
[59,61,64,69,65,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,63,61,63,67,61],
[69,0,74,70,66,64,68,56],
[58,57,0,55,58,58,63,64],
[68,61,76,0,69,63,70,66],
[70,65,73,62,0,64,67,62],
[68,67,73,68,67,0,61,62],
[64,63,68,61,64,70,0,74],
[70,75,67,65,69,69,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,58,58,64,76,70],
[68,0,64,71,66,61,71,65],
[61,67,0,78,61,68,63,70],
[73,60,53,0,57,62,61,67],
[73,65,70,74,0,64,71,69],
[67,70,63,69,67,0,67,72],
[55,60,68,70,60,64,0,62],
[61,66,61,64,62,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,72,71,80,77,75],
[68,0,65,72,64,71,78,65],
[64,66,0,66,69,77,81,76],
[59,59,65,0,77,76,78,73],
[60,67,62,54,0,64,63,61],
[51,60,54,55,67,0,67,73],
[54,53,50,53,68,64,0,70],
[56,66,55,58,70,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,93,72,68,74,59,89],
[51,0,63,66,60,67,49,79],
[38,68,0,65,62,64,60,75],
[59,65,66,0,57,63,54,78],
[63,71,69,74,0,72,82,85],
[57,64,67,68,59,0,54,81],
[72,82,71,77,49,77,0,86],
[42,52,56,53,46,50,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,81,84,88,71,48],
[63,0,73,77,79,79,58,41],
[62,58,0,81,64,75,52,56],
[50,54,50,0,66,65,37,43],
[47,52,67,65,0,70,47,54],
[43,52,56,66,61,0,48,53],
[60,73,79,94,84,83,0,66],
[83,90,75,88,77,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,55,78,87,44,32,76],
[88,0,76,67,98,56,56,65],
[76,55,0,89,87,78,66,89],
[53,64,42,0,87,11,43,76],
[44,33,44,44,0,33,33,32],
[87,75,53,120,98,0,74,75],
[99,75,65,88,98,57,0,66],
[55,66,42,55,99,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,73,50,86,61,74,60],
[45,0,35,35,35,59,48,59],
[58,96,0,72,85,107,73,94],
[81,96,59,0,49,71,60,69],
[45,96,46,82,0,71,46,69],
[70,72,24,60,60,0,61,59],
[57,83,58,71,85,70,0,81],
[71,72,37,62,62,72,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,86,61,86,86,58,84],
[55,0,94,66,75,64,58,73],
[45,37,0,40,75,63,40,59],
[70,65,91,0,83,80,75,92],
[45,56,56,48,0,64,38,59],
[45,67,68,51,67,0,40,66],
[73,73,91,56,93,91,0,84],
[47,58,72,39,72,65,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,64,71,63,65,66],
[59,0,68,69,69,63,59,72],
[60,63,0,67,67,60,64,63],
[67,62,64,0,61,62,57,62],
[60,62,64,70,0,60,57,62],
[68,68,71,69,71,0,63,73],
[66,72,67,74,74,68,0,65],
[65,59,68,69,69,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,79,86,81,95,64],
[62,0,68,66,82,78,84,72],
[52,63,0,53,72,73,60,54],
[52,65,78,0,85,73,77,72],
[45,49,59,46,0,58,65,41],
[50,53,58,58,73,0,69,58],
[36,47,71,54,66,62,0,57],
[67,59,77,59,90,73,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,58,74,82,70,82,48],
[46,0,51,66,72,66,59,69],
[73,80,0,76,83,73,67,64],
[57,65,55,0,66,59,61,58],
[49,59,48,65,0,64,63,58],
[61,65,58,72,67,0,58,50],
[49,72,64,70,68,73,0,53],
[83,62,67,73,73,81,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,61,60,59,68,68],
[71,0,63,67,69,64,67,73],
[74,68,0,73,73,65,69,75],
[70,64,58,0,65,62,60,67],
[71,62,58,66,0,58,69,64],
[72,67,66,69,73,0,64,71],
[63,64,62,71,62,67,0,71],
[63,58,56,64,67,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,66,69,61,68,72],
[61,0,59,71,70,61,66,69],
[72,72,0,72,68,62,70,70],
[65,60,59,0,67,59,66,67],
[62,61,63,64,0,60,58,59],
[70,70,69,72,71,0,76,65],
[63,65,61,65,73,55,0,61],
[59,62,61,64,72,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,70,66,61,67,69,69],
[73,0,70,60,62,72,70,69],
[61,61,0,66,66,70,67,71],
[65,71,65,0,64,72,74,77],
[70,69,65,67,0,72,67,75],
[64,59,61,59,59,0,58,61],
[62,61,64,57,64,73,0,62],
[62,62,60,54,56,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,79,62,62,70,33,70],
[70,0,86,71,60,75,78,68],
[52,45,0,89,59,60,42,51],
[69,60,42,0,54,69,43,53],
[69,71,72,77,0,62,51,62],
[61,56,71,62,69,0,54,46],
[98,53,89,88,80,77,0,87],
[61,63,80,78,69,85,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,50,57,59,49,47,57],
[65,0,54,52,53,59,66,60],
[81,77,0,51,66,55,68,65],
[74,79,80,0,71,64,72,77],
[72,78,65,60,0,71,65,74],
[82,72,76,67,60,0,63,66],
[84,65,63,59,66,68,0,61],
[74,71,66,54,57,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,75,68,68,64,58],
[77,0,86,64,85,59,92,76],
[65,45,0,66,76,66,66,66],
[56,67,65,0,68,78,66,70],
[63,46,55,63,0,48,51,47],
[63,72,65,53,83,0,61,55],
[67,39,65,65,80,70,0,60],
[73,55,65,61,84,76,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,61,56,64,80,69],
[67,0,64,62,59,60,65,73],
[58,67,0,65,64,57,71,71],
[70,69,66,0,69,65,70,70],
[75,72,67,62,0,65,78,73],
[67,71,74,66,66,0,76,65],
[51,66,60,61,53,55,0,59],
[62,58,60,61,58,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,76,66,53,73,66],
[58,0,52,63,59,63,56,63],
[69,79,0,67,62,71,69,70],
[55,68,64,0,56,62,64,62],
[65,72,69,75,0,60,71,64],
[78,68,60,69,71,0,68,71],
[58,75,62,67,60,63,0,64],
[65,68,61,69,67,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,59,66,59,65,47],
[74,0,73,72,80,67,67,64],
[63,58,0,55,73,62,56,59],
[72,59,76,0,79,72,67,66],
[65,51,58,52,0,52,51,51],
[72,64,69,59,79,0,63,56],
[66,64,75,64,80,68,0,60],
[84,67,72,65,80,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,58,73,57,68,63],
[64,0,59,64,67,67,61,61],
[64,72,0,64,74,70,61,71],
[73,67,67,0,66,67,61,65],
[58,64,57,65,0,59,63,63],
[74,64,61,64,72,0,76,66],
[63,70,70,70,68,55,0,66],
[68,70,60,66,68,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,64,48,57,62,52],
[74,0,63,58,64,39,62,58],
[79,68,0,62,76,47,62,60],
[67,73,69,0,70,55,64,54],
[83,67,55,61,0,55,65,66],
[74,92,84,76,76,0,73,60],
[69,69,69,67,66,58,0,50],
[79,73,71,77,65,71,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,68,61,59,50,52,57],
[83,0,83,74,66,78,62,68],
[63,48,0,67,64,57,48,52],
[70,57,64,0,75,61,51,66],
[72,65,67,56,0,75,68,61],
[81,53,74,70,56,0,53,70],
[79,69,83,80,63,78,0,81],
[74,63,79,65,70,61,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,84,75,48,45,57,56],
[66,0,95,83,79,27,45,64],
[47,36,0,36,58,35,36,47],
[56,48,95,0,87,44,47,76],
[83,52,73,44,0,53,64,63],
[86,104,96,87,78,0,84,65],
[74,86,95,84,67,47,0,56],
[75,67,84,55,68,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,64,63,63,61,65],
[62,0,71,60,75,67,67,66],
[68,60,0,62,63,60,72,59],
[67,71,69,0,71,65,69,67],
[68,56,68,60,0,66,67,60],
[68,64,71,66,65,0,74,67],
[70,64,59,62,64,57,0,59],
[66,65,72,64,71,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,71,73,68,57,72],
[65,0,77,67,73,85,78,77],
[71,54,0,77,68,80,65,88],
[60,64,54,0,76,70,57,67],
[58,58,63,55,0,67,58,71],
[63,46,51,61,64,0,49,63],
[74,53,66,74,73,82,0,77],
[59,54,43,64,60,68,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,60,68,88,70,60],
[63,0,67,66,69,67,72,81],
[54,64,0,57,63,69,80,75],
[71,65,74,0,55,82,75,70],
[63,62,68,76,0,78,66,70],
[43,64,62,49,53,0,57,57],
[61,59,51,56,65,74,0,74],
[71,50,56,61,61,74,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,61,75,70,67,70],
[69,0,60,70,66,64,65,71],
[64,71,0,72,81,73,69,80],
[70,61,59,0,69,67,59,61],
[56,65,50,62,0,68,59,58],
[61,67,58,64,63,0,61,59],
[64,66,62,72,72,70,0,66],
[61,60,51,70,73,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,71,50,56,58,65,65],
[74,0,62,56,60,54,50,53],
[60,69,0,58,57,55,61,48],
[81,75,73,0,71,73,69,55],
[75,71,74,60,0,65,71,62],
[73,77,76,58,66,0,61,63],
[66,81,70,62,60,70,0,74],
[66,78,83,76,69,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,58,52,58,64,60],
[64,0,49,50,62,58,57,57],
[71,82,0,60,61,64,64,65],
[73,81,71,0,75,77,78,64],
[79,69,70,56,0,64,74,66],
[73,73,67,54,67,0,72,57],
[67,74,67,53,57,59,0,65],
[71,74,66,67,65,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,83,66,77,76,63,74],
[61,0,67,68,65,72,70,59],
[48,64,0,56,61,67,51,66],
[65,63,75,0,68,66,53,61],
[54,66,70,63,0,68,56,67],
[55,59,64,65,63,0,51,52],
[68,61,80,78,75,80,0,70],
[57,72,65,70,64,79,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,81,71,59,64,64,71],
[60,0,76,68,60,60,66,68],
[50,55,0,49,55,53,59,59],
[60,63,82,0,61,75,73,78],
[72,71,76,70,0,63,67,63],
[67,71,78,56,68,0,62,71],
[67,65,72,58,64,69,0,59],
[60,63,72,53,68,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,81,54,27,78,78,54],
[53,0,54,53,27,104,78,0],
[50,77,0,77,77,77,51,77],
[77,78,54,0,54,77,51,54],
[104,104,54,77,0,77,51,80],
[53,27,54,54,54,0,54,27],
[53,53,80,80,80,77,0,53],
[77,131,54,77,51,104,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,81,76,73,60,71],
[62,0,73,84,71,77,67,76],
[60,58,0,69,74,62,60,67],
[50,47,62,0,63,63,60,67],
[55,60,57,68,0,62,58,70],
[58,54,69,68,69,0,51,67],
[71,64,71,71,73,80,0,81],
[60,55,64,64,61,64,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,84,74,67,64,60],
[62,0,72,78,78,71,63,71],
[63,59,0,74,67,68,49,56],
[47,53,57,0,54,51,47,56],
[57,53,64,77,0,53,58,56],
[64,60,63,80,78,0,67,66],
[67,68,82,84,73,64,0,62],
[71,60,75,75,75,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,101,78,92,86,86,78],
[69,0,79,78,94,93,61,87],
[30,52,0,52,60,64,39,46],
[53,53,79,0,76,70,62,54],
[39,37,71,55,0,71,76,47],
[45,38,67,61,60,0,47,53],
[45,70,92,69,55,84,0,56],
[53,44,85,77,84,78,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,71,60,66,58,60,47],
[37,0,71,69,32,54,41,30],
[60,60,0,55,39,61,43,35],
[71,62,76,0,51,64,70,40],
[65,99,92,80,0,79,74,72],
[73,77,70,67,52,0,59,49],
[71,90,88,61,57,72,0,63],
[84,101,96,91,59,82,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,52,55,70,64,76],
[72,0,66,67,62,62,76,69],
[71,65,0,68,53,72,79,68],
[79,64,63,0,70,82,73,78],
[76,69,78,61,0,79,72,74],
[61,69,59,49,52,0,58,58],
[67,55,52,58,59,73,0,67],
[55,62,63,53,57,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,60,76,67,60,69,71],
[57,0,62,57,45,53,68,59],
[71,69,0,64,67,62,72,73],
[55,74,67,0,46,58,66,60],
[64,86,64,85,0,75,88,75],
[71,78,69,73,56,0,74,70],
[62,63,59,65,43,57,0,63],
[60,72,58,71,56,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,46,41,75,63,48,57],
[58,0,47,60,57,75,50,57],
[85,84,0,74,71,93,65,79],
[90,71,57,0,72,75,73,74],
[56,74,60,59,0,69,49,55],
[68,56,38,56,62,0,51,58],
[83,81,66,58,82,80,0,72],
[74,74,52,57,76,73,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,64,75,59,67,74],
[61,0,66,55,80,55,61,69],
[57,65,0,77,77,68,77,78],
[67,76,54,0,74,55,65,58],
[56,51,54,57,0,48,53,57],
[72,76,63,76,83,0,80,80],
[64,70,54,66,78,51,0,76],
[57,62,53,73,74,51,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,67,71,65,75,76],
[70,0,70,63,62,69,75,78],
[68,61,0,60,58,63,70,79],
[64,68,71,0,70,57,78,63],
[60,69,73,61,0,60,78,70],
[66,62,68,74,71,0,77,66],
[56,56,61,53,53,54,0,61],
[55,53,52,68,61,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,98,51,78,74,83,54],
[64,0,88,72,88,87,75,65],
[33,43,0,40,66,44,52,43],
[80,59,91,0,68,89,64,67],
[53,43,65,63,0,55,61,47],
[57,44,87,42,76,0,73,44],
[48,56,79,67,70,58,0,47],
[77,66,88,64,84,87,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,67,75,49,61,53],
[71,0,58,67,70,54,50,53],
[70,73,0,85,80,59,71,70],
[64,64,46,0,64,50,63,53],
[56,61,51,67,0,66,56,53],
[82,77,72,81,65,0,75,59],
[70,81,60,68,75,56,0,53],
[78,78,61,78,78,72,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,68,79,74,78,69],
[68,0,75,67,80,75,76,64],
[59,56,0,63,56,66,60,66],
[63,64,68,0,74,63,61,57],
[52,51,75,57,0,64,63,51],
[57,56,65,68,67,0,62,61],
[53,55,71,70,68,69,0,68],
[62,67,65,74,80,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,78,46,55,70,62,61],
[76,0,80,62,72,67,53,59],
[53,51,0,40,49,48,54,42],
[85,69,91,0,76,67,67,62],
[76,59,82,55,0,84,61,73],
[61,64,83,64,47,0,58,42],
[69,78,77,64,70,73,0,60],
[70,72,89,69,58,89,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,75,77,62,68,62],
[67,0,79,77,77,66,67,65],
[54,52,0,56,70,45,53,50],
[56,54,75,0,58,44,42,55],
[54,54,61,73,0,50,67,50],
[69,65,86,87,81,0,77,68],
[63,64,78,89,64,54,0,59],
[69,66,81,76,81,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,68,69,83,55,88],
[71,0,76,69,59,70,80,78],
[65,55,0,51,46,60,75,59],
[63,62,80,0,68,70,61,76],
[62,72,85,63,0,77,78,74],
[48,61,71,61,54,0,66,69],
[76,51,56,70,53,65,0,67],
[43,53,72,55,57,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,49,61,66,53,42],
[75,0,64,77,76,72,59,55],
[75,67,0,67,84,59,57,60],
[82,54,64,0,76,57,71,63],
[70,55,47,55,0,59,59,63],
[65,59,72,74,72,0,60,52],
[78,72,74,60,72,71,0,72],
[89,76,71,68,68,79,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,77,64,63,72,69],
[71,0,76,64,49,64,61,66],
[61,55,0,55,60,53,59,60],
[54,67,76,0,60,70,65,61],
[67,82,71,71,0,67,71,60],
[68,67,78,61,64,0,64,66],
[59,70,72,66,60,67,0,62],
[62,65,71,70,71,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,66,66,61,65,73],
[63,0,66,67,59,60,57,60],
[59,65,0,71,57,62,61,68],
[65,64,60,0,59,54,49,68],
[65,72,74,72,0,64,69,78],
[70,71,69,77,67,0,61,69],
[66,74,70,82,62,70,0,70],
[58,71,63,63,53,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,56,62,63,54,58],
[67,0,62,56,64,64,56,58],
[65,69,0,61,59,70,66,61],
[75,75,70,0,64,74,77,66],
[69,67,72,67,0,63,61,62],
[68,67,61,57,68,0,62,52],
[77,75,65,54,70,69,0,59],
[73,73,70,65,69,79,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,70,81,81,91,79],
[67,0,57,67,73,63,62,69],
[62,74,0,63,70,71,78,69],
[61,64,68,0,72,65,65,63],
[50,58,61,59,0,59,64,83],
[50,68,60,66,72,0,60,72],
[40,69,53,66,67,71,0,69],
[52,62,62,68,48,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,69,70,95,62,69],
[68,0,79,66,79,83,62,68],
[58,52,0,62,63,77,68,65],
[62,65,69,0,64,78,55,63],
[61,52,68,67,0,72,62,61],
[36,48,54,53,59,0,55,53],
[69,69,63,76,69,76,0,74],
[62,63,66,68,70,78,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,56,77,59,67,69],
[70,0,61,58,78,68,66,83],
[62,70,0,63,72,65,70,68],
[75,73,68,0,82,74,64,73],
[54,53,59,49,0,57,46,52],
[72,63,66,57,74,0,64,69],
[64,65,61,67,85,67,0,70],
[62,48,63,58,79,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,69,62,66,68,55],
[74,0,75,72,65,77,67,63],
[62,56,0,71,69,74,67,69],
[62,59,60,0,55,64,52,57],
[69,66,62,76,0,76,67,74],
[65,54,57,67,55,0,53,69],
[63,64,64,79,64,78,0,56],
[76,68,62,74,57,62,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,69,62,61,60,62],
[66,0,61,65,67,70,72,70],
[61,70,0,65,79,76,70,63],
[62,66,66,0,66,64,71,70],
[69,64,52,65,0,63,69,67],
[70,61,55,67,68,0,70,62],
[71,59,61,60,62,61,0,63],
[69,61,68,61,64,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,50,57,60,49,60,56],
[77,0,60,66,68,66,71,68],
[81,71,0,65,66,59,68,62],
[74,65,66,0,75,66,68,70],
[71,63,65,56,0,59,63,68],
[82,65,72,65,72,0,67,73],
[71,60,63,63,68,64,0,62],
[75,63,69,61,63,58,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,62,75,74,66,66],
[73,0,65,73,74,91,65,73],
[66,66,0,71,81,74,64,48],
[69,58,60,0,86,85,85,52],
[56,57,50,45,0,74,39,39],
[57,40,57,46,57,0,63,48],
[65,66,67,46,92,68,0,49],
[65,58,83,79,92,83,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,71,62,54,56,56,62],
[75,0,88,76,61,46,67,65],
[60,43,0,49,50,55,36,54],
[69,55,82,0,63,57,50,59],
[77,70,81,68,0,59,58,76],
[75,85,76,74,72,0,63,60],
[75,64,95,81,73,68,0,64],
[69,66,77,72,55,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,66,64,71,68,72],
[53,0,66,64,57,61,62,65],
[60,65,0,68,60,59,66,71],
[65,67,63,0,60,66,65,65],
[67,74,71,71,0,70,65,65],
[60,70,72,65,61,0,61,75],
[63,69,65,66,66,70,0,67],
[59,66,60,66,66,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,70,65,74,69,67,71],
[52,0,59,64,55,59,51,58],
[61,72,0,66,60,60,52,67],
[66,67,65,0,64,72,66,69],
[57,76,71,67,0,65,59,66],
[62,72,71,59,66,0,57,62],
[64,80,79,65,72,74,0,68],
[60,73,64,62,65,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,64,65,60,81,64],
[62,0,69,71,71,60,70,63],
[62,62,0,69,65,60,70,63],
[67,60,62,0,62,73,55,65],
[66,60,66,69,0,69,69,69],
[71,71,71,58,62,0,68,66],
[50,61,61,76,62,63,0,54],
[67,68,68,66,62,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,54,59,62,60,53],
[75,0,77,62,68,66,73,64],
[65,54,0,60,60,54,62,56],
[77,69,71,0,70,62,75,62],
[72,63,71,61,0,59,62,64],
[69,65,77,69,72,0,76,70],
[71,58,69,56,69,55,0,64],
[78,67,75,69,67,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,75,77,64,68,69,77],
[70,0,68,70,63,68,67,72],
[56,63,0,71,65,58,74,71],
[54,61,60,0,56,60,66,55],
[67,68,66,75,0,66,60,66],
[63,63,73,71,65,0,68,78],
[62,64,57,65,71,63,0,58],
[54,59,60,76,65,53,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,57,54,68,68,69],
[55,0,75,58,65,60,52,71],
[57,56,0,60,58,53,58,50],
[74,73,71,0,66,56,68,67],
[77,66,73,65,0,54,82,61],
[63,71,78,75,77,0,67,75],
[63,79,73,63,49,64,0,68],
[62,60,81,64,70,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,54,58,65,51,63],
[73,0,63,70,78,68,61,66],
[79,68,0,59,69,67,60,69],
[77,61,72,0,77,68,66,73],
[73,53,62,54,0,66,54,61],
[66,63,64,63,65,0,64,57],
[80,70,71,65,77,67,0,65],
[68,65,62,58,70,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,57,56,62,51,48,58],
[78,0,64,89,70,62,81,68],
[74,67,0,72,62,75,65,66],
[75,42,59,0,59,53,57,59],
[69,61,69,72,0,63,71,79],
[80,69,56,78,68,0,74,71],
[83,50,66,74,60,57,0,63],
[73,63,65,72,52,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,63,72,71,65,66],
[68,0,60,64,67,64,61,60],
[70,71,0,64,74,71,78,61],
[68,67,67,0,71,65,75,64],
[59,64,57,60,0,66,70,55],
[60,67,60,66,65,0,64,58],
[66,70,53,56,61,67,0,55],
[65,71,70,67,76,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,71,73,62,69,61],
[75,0,70,76,82,62,70,66],
[74,61,0,70,83,73,79,67],
[60,55,61,0,77,59,70,58],
[58,49,48,54,0,56,60,49],
[69,69,58,72,75,0,67,59],
[62,61,52,61,71,64,0,47],
[70,65,64,73,82,72,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,70,64,70,72,69,84],
[47,0,63,53,62,52,61,66],
[61,68,0,58,56,65,62,71],
[67,78,73,0,71,64,74,80],
[61,69,75,60,0,65,64,75],
[59,79,66,67,66,0,66,75],
[62,70,69,57,67,65,0,78],
[47,65,60,51,56,56,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,60,60,64,81,79],
[52,0,49,50,69,63,45,65],
[67,82,0,71,65,54,63,77],
[71,81,60,0,69,72,65,79],
[71,62,66,62,0,53,75,64],
[67,68,77,59,78,0,73,66],
[50,86,68,66,56,58,0,63],
[52,66,54,52,67,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,52,61,59,54,56,67],
[69,0,48,63,63,59,63,75],
[79,83,0,75,69,61,74,77],
[70,68,56,0,66,60,60,71],
[72,68,62,65,0,54,67,71],
[77,72,70,71,77,0,79,64],
[75,68,57,71,64,52,0,63],
[64,56,54,60,60,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,66,74,67,60,55],
[68,0,67,67,74,72,62,59],
[71,64,0,63,68,75,67,66],
[65,64,68,0,75,72,66,66],
[57,57,63,56,0,62,67,57],
[64,59,56,59,69,0,67,61],
[71,69,64,65,64,64,0,65],
[76,72,65,65,74,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,59,62,64,76,60],
[75,0,60,78,67,62,80,54],
[67,71,0,65,63,67,75,59],
[72,53,66,0,61,59,79,64],
[69,64,68,70,0,73,70,70],
[67,69,64,72,58,0,68,70],
[55,51,56,52,61,63,0,51],
[71,77,72,67,61,61,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,62,58,62,45,60],
[75,0,72,67,67,63,68,72],
[71,59,0,74,68,73,57,75],
[69,64,57,0,77,52,52,68],
[73,64,63,54,0,69,51,56],
[69,68,58,79,62,0,66,69],
[86,63,74,79,80,65,0,73],
[71,59,56,63,75,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,67,65,57,71,67],
[62,0,65,64,59,67,75,67],
[73,66,0,68,59,65,73,64],
[64,67,63,0,68,65,70,61],
[66,72,72,63,0,61,74,68],
[74,64,66,66,70,0,72,68],
[60,56,58,61,57,59,0,57],
[64,64,67,70,63,63,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,52,69,52,64,54,62],
[76,0,59,69,63,77,67,66],
[79,72,0,69,68,69,70,62],
[62,62,62,0,62,75,56,66],
[79,68,63,69,0,70,67,60],
[67,54,62,56,61,0,61,66],
[77,64,61,75,64,70,0,73],
[69,65,69,65,71,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,80,64,57,79,64],
[53,0,70,62,61,82,76,75],
[60,61,0,70,53,56,60,62],
[51,69,61,0,47,40,61,40],
[67,70,78,84,0,61,70,56],
[74,49,75,91,70,0,69,63],
[52,55,71,70,61,62,0,55],
[67,56,69,91,75,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,56,72,60,60,62],
[61,0,64,61,62,65,63,60],
[73,67,0,72,74,75,63,64],
[75,70,59,0,64,70,56,68],
[59,69,57,67,0,64,63,64],
[71,66,56,61,67,0,66,58],
[71,68,68,75,68,65,0,63],
[69,71,67,63,67,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,65,70,81,84,61,70],
[45,0,54,69,63,71,58,61],
[66,77,0,82,67,77,68,59],
[61,62,49,0,67,70,47,51],
[50,68,64,64,0,69,53,58],
[47,60,54,61,62,0,45,44],
[70,73,63,84,78,86,0,68],
[61,70,72,80,73,87,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,63,76,74,66,61],
[69,0,69,57,71,64,68,61],
[65,62,0,56,79,74,58,68],
[68,74,75,0,77,70,62,66],
[55,60,52,54,0,57,62,56],
[57,67,57,61,74,0,61,63],
[65,63,73,69,69,70,0,60],
[70,70,63,65,75,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,60,73,59,67,68],
[67,0,71,56,69,61,78,72],
[59,60,0,56,68,65,68,65],
[71,75,75,0,79,64,72,67],
[58,62,63,52,0,56,68,60],
[72,70,66,67,75,0,65,80],
[64,53,63,59,63,66,0,63],
[63,59,66,64,71,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,77,68,64,80,70,56],
[48,0,57,48,47,57,55,51],
[54,74,0,70,52,60,63,58],
[63,83,61,0,62,72,70,69],
[67,84,79,69,0,75,76,61],
[51,74,71,59,56,0,62,60],
[61,76,68,61,55,69,0,64],
[75,80,73,62,70,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,76,72,72,78,69],
[68,0,67,70,71,60,77,69],
[62,64,0,71,64,61,69,70],
[55,61,60,0,56,54,61,58],
[59,60,67,75,0,63,71,60],
[59,71,70,77,68,0,72,65],
[53,54,62,70,60,59,0,63],
[62,62,61,73,71,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,49,55,56,59,51],
[72,0,75,51,73,65,63,57],
[72,56,0,54,66,52,60,61],
[82,80,77,0,74,60,62,61],
[76,58,65,57,0,64,60,62],
[75,66,79,71,67,0,65,70],
[72,68,71,69,71,66,0,60],
[80,74,70,70,69,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,54,48,63,55,57,66],
[59,0,47,53,72,30,57,66],
[77,84,0,63,73,78,67,71],
[83,78,68,0,74,60,65,80],
[68,59,58,57,0,55,64,84],
[76,101,53,71,76,0,59,81],
[74,74,64,66,67,72,0,67],
[65,65,60,51,47,50,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,62,61,55,67,63],
[71,0,62,62,67,67,69,75],
[66,69,0,69,72,72,71,64],
[69,69,62,0,75,62,57,68],
[70,64,59,56,0,66,62,63],
[76,64,59,69,65,0,64,62],
[64,62,60,74,69,67,0,63],
[68,56,67,63,68,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,56,60,55,69,55],
[78,0,68,64,69,68,74,67],
[73,63,0,61,74,60,67,64],
[75,67,70,0,69,64,68,73],
[71,62,57,62,0,66,77,72],
[76,63,71,67,65,0,72,67],
[62,57,64,63,54,59,0,64],
[76,64,67,58,59,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,76,72,65,76,69,73],
[68,0,69,60,71,63,71,72],
[55,62,0,50,63,49,65,67],
[59,71,81,0,72,56,80,71],
[66,60,68,59,0,53,71,55],
[55,68,82,75,78,0,66,71],
[62,60,66,51,60,65,0,68],
[58,59,64,60,76,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,67,64,63,69,67],
[64,0,57,60,61,65,75,54],
[71,74,0,67,62,71,69,70],
[64,71,64,0,61,68,66,62],
[67,70,69,70,0,63,77,66],
[68,66,60,63,68,0,72,64],
[62,56,62,65,54,59,0,54],
[64,77,61,69,65,67,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,95,87,64,90,74,93],
[59,0,96,58,49,59,55,83],
[36,35,0,56,49,57,36,56],
[44,73,75,0,64,60,26,65],
[67,82,82,67,0,99,62,72],
[41,72,74,71,32,0,22,52],
[57,76,95,105,69,109,0,83],
[38,48,75,66,59,79,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,69,64,67,67,65],
[69,0,67,65,72,72,71,79],
[69,64,0,74,79,71,65,70],
[62,66,57,0,72,65,69,73],
[67,59,52,59,0,70,61,65],
[64,59,60,66,61,0,62,74],
[64,60,66,62,70,69,0,78],
[66,52,61,58,66,57,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,55,51,70,68,47,59],
[80,0,60,64,61,79,75,50],
[76,71,0,62,60,59,47,54],
[80,67,69,0,54,61,47,47],
[61,70,71,77,0,66,49,67],
[63,52,72,70,65,0,44,68],
[84,56,84,84,82,87,0,67],
[72,81,77,84,64,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,74,82,69,72,72],
[69,0,60,74,87,64,68,73],
[68,71,0,79,72,65,67,68],
[57,57,52,0,71,51,62,61],
[49,44,59,60,0,55,49,60],
[62,67,66,80,76,0,70,67],
[59,63,64,69,82,61,0,62],
[59,58,63,70,71,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,72,86,82,84,60,73],
[77,0,61,76,74,86,53,84],
[59,70,0,77,61,82,48,60],
[45,55,54,0,60,56,61,48],
[49,57,70,71,0,68,72,73],
[47,45,49,75,63,0,63,41],
[71,78,83,70,59,68,0,71],
[58,47,71,83,58,90,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,65,66,75,74,76,86],
[43,0,48,50,69,73,53,76],
[66,83,0,58,75,77,74,87],
[65,81,73,0,75,64,62,74],
[56,62,56,56,0,61,56,67],
[57,58,54,67,70,0,61,76],
[55,78,57,69,75,70,0,81],
[45,55,44,57,64,55,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,54,51,62,62,62,80],
[55,0,62,51,50,65,48,72],
[77,69,0,84,62,62,84,64],
[80,80,47,0,69,68,69,84],
[69,81,69,62,0,56,69,75],
[69,66,69,63,75,0,56,70],
[69,83,47,62,62,75,0,77],
[51,59,67,47,56,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,64,66,71,66,70],
[61,0,74,73,74,68,63,63],
[58,57,0,59,66,64,55,64],
[67,58,72,0,69,68,69,67],
[65,57,65,62,0,64,54,62],
[60,63,67,63,67,0,61,68],
[65,68,76,62,77,70,0,75],
[61,68,67,64,69,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,74,64,86,83,81],
[56,0,58,56,79,61,58,72],
[64,73,0,82,70,67,74,80],
[57,75,49,0,46,51,66,62],
[67,52,61,85,0,78,68,75],
[45,70,64,80,53,0,75,88],
[48,73,57,65,63,56,0,98],
[50,59,51,69,56,43,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,63,50,55,66,62],
[77,0,69,72,55,66,71,63],
[78,62,0,77,65,72,76,74],
[68,59,54,0,48,69,69,68],
[81,76,66,83,0,61,77,75],
[76,65,59,62,70,0,70,66],
[65,60,55,62,54,61,0,64],
[69,68,57,63,56,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,62,58,58,54,69],
[83,0,50,68,79,76,72,74],
[83,81,0,71,74,73,62,88],
[69,63,60,0,66,59,52,74],
[73,52,57,65,0,68,72,86],
[73,55,58,72,63,0,63,71],
[77,59,69,79,59,68,0,77],
[62,57,43,57,45,60,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,60,73,68,68,78],
[63,0,63,60,64,67,57,63],
[67,68,0,69,71,70,65,72],
[71,71,62,0,67,64,60,64],
[58,67,60,64,0,59,60,63],
[63,64,61,67,72,0,63,61],
[63,74,66,71,71,68,0,72],
[53,68,59,67,68,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,62,79,73,77,70,78],
[57,0,74,77,67,76,69,69],
[69,57,0,71,67,74,81,76],
[52,54,60,0,58,69,57,64],
[58,64,64,73,0,71,67,70],
[54,55,57,62,60,0,61,69],
[61,62,50,74,64,70,0,68],
[53,62,55,67,61,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,67,59,56,72,69],
[62,0,70,54,56,53,68,58],
[66,61,0,69,60,59,69,68],
[64,77,62,0,73,55,71,68],
[72,75,71,58,0,67,82,71],
[75,78,72,76,64,0,86,69],
[59,63,62,60,49,45,0,59],
[62,73,63,63,60,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,59,55,63,52,63],
[90,0,69,69,64,77,65,79],
[81,62,0,74,70,74,66,73],
[72,62,57,0,62,61,60,66],
[76,67,61,69,0,83,81,69],
[68,54,57,70,48,0,66,70],
[79,66,65,71,50,65,0,61],
[68,52,58,65,62,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,64,58,72,57,82,71],
[45,0,48,66,52,48,60,73],
[67,83,0,74,63,76,101,76],
[73,65,57,0,68,50,89,75],
[59,79,68,63,0,65,87,56],
[74,83,55,81,66,0,88,61],
[49,71,30,42,44,43,0,57],
[60,58,55,56,75,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,62,61,81,52,70,94],
[50,0,31,41,31,49,51,70],
[69,100,0,62,49,70,71,102],
[70,90,69,0,58,80,70,81],
[50,100,82,73,0,70,61,93],
[79,82,61,51,61,0,81,93],
[61,80,60,61,70,50,0,71],
[37,61,29,50,38,38,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,67,68,74,73,63],
[63,0,64,67,63,62,65,70],
[58,67,0,57,64,57,64,67],
[64,64,74,0,64,68,68,70],
[63,68,67,67,0,72,63,70],
[57,69,74,63,59,0,73,61],
[58,66,67,63,68,58,0,63],
[68,61,64,61,61,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,62,69,65,69,60],
[59,0,59,47,48,60,56,60],
[64,72,0,71,75,72,67,71],
[69,84,60,0,67,77,76,77],
[62,83,56,64,0,58,66,66],
[66,71,59,54,73,0,72,58],
[62,75,64,55,65,59,0,69],
[71,71,60,54,65,73,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,66,64,63,66,62],
[77,0,67,67,70,59,75,78],
[72,64,0,66,70,67,74,76],
[65,64,65,0,67,61,78,76],
[67,61,61,64,0,68,76,66],
[68,72,64,70,63,0,79,71],
[65,56,57,53,55,52,0,68],
[69,53,55,55,65,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,56,74,81,64,72],
[65,0,70,66,74,69,68,74],
[64,61,0,62,64,69,66,67],
[75,65,69,0,74,75,73,71],
[57,57,67,57,0,66,56,66],
[50,62,62,56,65,0,61,61],
[67,63,65,58,75,70,0,72],
[59,57,64,60,65,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,67,64,65,60,55],
[66,0,61,66,62,61,62,56],
[66,70,0,67,68,69,68,65],
[64,65,64,0,63,64,61,60],
[67,69,63,68,0,75,59,65],
[66,70,62,67,56,0,62,66],
[71,69,63,70,72,69,0,61],
[76,75,66,71,66,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,60,66,59,64,60,60],
[60,0,60,62,56,63,52,60],
[71,71,0,65,64,60,65,70],
[65,69,66,0,65,59,65,71],
[72,75,67,66,0,64,68,73],
[67,68,71,72,67,0,61,62],
[71,79,66,66,63,70,0,78],
[71,71,61,60,58,69,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,73,70,71,70,65,68],
[55,0,65,60,60,55,62,62],
[58,66,0,67,66,65,71,62],
[61,71,64,0,61,70,66,64],
[60,71,65,70,0,70,64,69],
[61,76,66,61,61,0,74,69],
[66,69,60,65,67,57,0,65],
[63,69,69,67,62,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,81,88,81,79,74,60],
[57,0,67,58,66,72,64,33],
[50,64,0,63,76,74,71,58],
[43,73,68,0,70,68,83,71],
[50,65,55,61,0,58,71,70],
[52,59,57,63,73,0,78,72],
[57,67,60,48,60,53,0,63],
[71,98,73,60,61,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,60,50,45,53,42],
[88,0,71,79,63,65,70,81],
[86,60,0,82,65,74,63,72],
[71,52,49,0,59,50,54,61],
[81,68,66,72,0,64,65,71],
[86,66,57,81,67,0,72,85],
[78,61,68,77,66,59,0,70],
[89,50,59,70,60,46,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,75,72,61,63,63],
[62,0,63,71,68,72,61,64],
[61,68,0,69,64,52,65,63],
[56,60,62,0,68,54,57,66],
[59,63,67,63,0,51,61,59],
[70,59,79,77,80,0,68,74],
[68,70,66,74,70,63,0,63],
[68,67,68,65,72,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,79,64,74,62,60,71],
[53,0,74,74,57,74,73,78],
[52,57,0,53,58,61,71,53],
[67,57,78,0,55,51,60,63],
[57,74,73,76,0,56,69,75],
[69,57,70,80,75,0,72,74],
[71,58,60,71,62,59,0,70],
[60,53,78,68,56,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,61,63,66,67,64],
[63,0,59,56,75,57,63,71],
[60,72,0,56,71,63,62,77],
[70,75,75,0,71,64,76,83],
[68,56,60,60,0,66,63,73],
[65,74,68,67,65,0,69,71],
[64,68,69,55,68,62,0,73],
[67,60,54,48,58,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,103,64,92,63,73,86,66],
[28,0,50,89,40,70,81,61],
[67,81,0,92,72,49,101,74],
[39,42,39,0,41,61,72,71],
[68,91,59,90,0,79,90,61],
[58,61,82,70,52,0,71,62],
[45,50,30,59,41,60,0,72],
[65,70,57,60,70,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,66,79,80,66,74],
[74,0,74,80,83,80,58,71],
[62,57,0,51,68,79,65,73],
[65,51,80,0,67,54,57,43],
[52,48,63,64,0,48,42,39],
[51,51,52,77,83,0,58,53],
[65,73,66,74,89,73,0,67],
[57,60,58,88,92,78,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,70,69,62,61,69],
[72,0,69,69,63,59,60,63],
[61,62,0,66,68,58,64,63],
[61,62,65,0,66,59,54,64],
[62,68,63,65,0,60,58,60],
[69,72,73,72,71,0,66,64],
[70,71,67,77,73,65,0,66],
[62,68,68,67,71,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,76,71,56,68,69],
[59,0,62,69,65,69,64,54],
[64,69,0,72,68,72,69,67],
[55,62,59,0,61,65,58,67],
[60,66,63,70,0,64,76,60],
[75,62,59,66,67,0,78,55],
[63,67,62,73,55,53,0,61],
[62,77,64,64,71,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,75,68,67,65,70,72],
[68,0,66,64,54,61,59,54],
[56,65,0,57,61,58,52,59],
[63,67,74,0,55,57,58,69],
[64,77,70,76,0,70,72,79],
[66,70,73,74,61,0,65,73],
[61,72,79,73,59,66,0,70],
[59,77,72,62,52,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,39,59,68,66,69,56],
[72,0,59,69,58,89,90,38],
[92,72,0,102,59,88,103,67],
[72,62,29,0,57,67,81,47],
[63,73,72,74,0,90,82,60],
[65,42,43,64,41,0,52,62],
[62,41,28,50,49,79,0,48],
[75,93,64,84,71,69,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,62,68,69,62,63,83],
[69,0,57,68,67,56,56,79],
[69,74,0,77,79,63,67,87],
[63,63,54,0,58,63,58,78],
[62,64,52,73,0,54,72,82],
[69,75,68,68,77,0,62,89],
[68,75,64,73,59,69,0,94],
[48,52,44,53,49,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,73,70,71,79,63],
[76,0,62,71,67,76,76,65],
[70,69,0,78,64,83,79,67],
[58,60,53,0,61,71,60,57],
[61,64,67,70,0,67,79,56],
[60,55,48,60,64,0,66,57],
[52,55,52,71,52,65,0,59],
[68,66,64,74,75,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,78,76,76,81,85],
[68,0,77,79,70,66,77,59],
[69,54,0,66,73,62,64,58],
[53,52,65,0,58,69,67,63],
[55,61,58,73,0,62,72,61],
[55,65,69,62,69,0,73,60],
[50,54,67,64,59,58,0,54],
[46,72,73,68,70,71,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,79,68,65,69,71,72],
[62,0,71,60,62,54,63,59],
[52,60,0,67,71,67,73,61],
[63,71,64,0,60,64,67,63],
[66,69,60,71,0,75,72,65],
[62,77,64,67,56,0,73,63],
[60,68,58,64,59,58,0,59],
[59,72,70,68,66,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,89,74,77,92,63],
[55,0,70,85,95,64,91,67],
[63,61,0,70,84,61,77,59],
[42,46,61,0,65,62,50,60],
[57,36,47,66,0,41,54,66],
[54,67,70,69,90,0,85,57],
[39,40,54,81,77,46,0,48],
[68,64,72,71,65,74,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,72,69,68,55,67],
[59,0,74,68,64,64,54,64],
[61,57,0,72,65,63,56,74],
[59,63,59,0,68,65,58,66],
[62,67,66,63,0,49,58,69],
[63,67,68,66,82,0,73,80],
[76,77,75,73,73,58,0,86],
[64,67,57,65,62,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,78,68,59,63,76],
[69,0,64,79,64,59,57,66],
[65,67,0,76,67,61,70,76],
[53,52,55,0,62,59,60,62],
[63,67,64,69,0,53,56,68],
[72,72,70,72,78,0,61,85],
[68,74,61,71,75,70,0,73],
[55,65,55,69,63,46,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,88,59,73,103,103],
[73,0,44,90,74,60,115,87],
[71,87,0,59,74,73,101,87],
[43,41,72,0,73,44,70,71],
[72,57,57,58,0,59,86,73],
[58,71,58,87,72,0,116,87],
[28,16,30,61,45,15,0,60],
[28,44,44,60,58,44,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,71,72,58,79,50],
[64,0,57,65,59,51,70,53],
[65,74,0,79,58,50,87,52],
[60,66,52,0,58,57,71,75],
[59,72,73,73,0,81,86,64],
[73,80,81,74,50,0,79,65],
[52,61,44,60,45,52,0,53],
[81,78,79,56,67,66,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,57,68,59,60,61],
[58,0,62,69,62,60,56,61],
[64,69,0,52,62,69,53,63],
[74,62,79,0,73,70,67,70],
[63,69,69,58,0,59,58,56],
[72,71,62,61,72,0,64,60],
[71,75,78,64,73,67,0,68],
[70,70,68,61,75,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,70,68,75,67,65],
[65,0,76,73,67,70,68,71],
[60,55,0,66,69,61,65,67],
[61,58,65,0,64,63,60,56],
[63,64,62,67,0,65,57,57],
[56,61,70,68,66,0,63,63],
[64,63,66,71,74,68,0,67],
[66,60,64,75,74,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,63,85,59,67,69],
[63,0,52,61,58,73,56,45],
[65,79,0,62,69,70,68,72],
[68,70,69,0,72,66,77,61],
[46,73,62,59,0,59,67,62],
[72,58,61,65,72,0,65,65],
[64,75,63,54,64,66,0,47],
[62,86,59,70,69,66,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,72,55,60,68,57],
[68,0,67,77,69,74,69,63],
[67,64,0,86,59,74,67,65],
[59,54,45,0,60,60,66,60],
[76,62,72,71,0,69,74,71],
[71,57,57,71,62,0,67,60],
[63,62,64,65,57,64,0,52],
[74,68,66,71,60,71,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,45,44,58,54,57,54],
[71,0,58,58,76,86,76,68],
[86,73,0,66,78,73,73,62],
[87,73,65,0,86,79,75,74],
[73,55,53,45,0,66,61,61],
[77,45,58,52,65,0,52,63],
[74,55,58,56,70,79,0,74],
[77,63,69,57,70,68,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,63,58,52,55,70],
[71,0,65,69,59,73,61,72],
[63,66,0,71,54,65,65,66],
[68,62,60,0,67,62,75,70],
[73,72,77,64,0,73,74,69],
[79,58,66,69,58,0,57,70],
[76,70,66,56,57,74,0,69],
[61,59,65,61,62,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,44,74,43,60,75,75],
[72,0,103,59,74,87,89,89],
[87,28,0,60,59,87,45,74],
[57,72,71,0,56,71,74,116],
[88,57,72,75,0,88,46,75],
[71,44,44,60,43,0,45,61],
[56,42,86,57,85,86,0,102],
[56,42,57,15,56,70,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,98,54,52,31,34,79],
[88,0,99,66,76,53,66,77],
[33,32,0,24,32,32,45,46],
[77,65,107,0,87,87,100,79],
[79,55,99,44,0,31,47,69],
[100,78,99,44,100,0,56,89],
[97,65,86,31,84,75,0,69],
[52,54,85,52,62,42,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,64,60,79,68,70],
[64,0,71,64,64,60,64,71],
[59,60,0,70,63,87,66,72],
[67,67,61,0,69,79,64,77],
[71,67,68,62,0,76,61,70],
[52,71,44,52,55,0,56,67],
[63,67,65,67,70,75,0,70],
[61,60,59,54,61,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,73,42,59,58,83,58],
[87,0,92,72,80,77,100,59],
[58,39,0,46,60,63,94,47],
[89,59,85,0,68,74,89,73],
[72,51,71,63,0,85,86,62],
[73,54,68,57,46,0,65,61],
[48,31,37,42,45,66,0,45],
[73,72,84,58,69,70,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,71,72,69,59,73,83],
[52,0,50,48,58,40,53,63],
[60,81,0,68,72,63,63,83],
[59,83,63,0,60,67,73,74],
[62,73,59,71,0,58,67,66],
[72,91,68,64,73,0,69,75],
[58,78,68,58,64,62,0,69],
[48,68,48,57,65,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,81,60,77,70,63,75],
[53,0,78,59,75,71,54,58],
[50,53,0,59,55,52,53,55],
[71,72,72,0,69,73,60,61],
[54,56,76,62,0,70,55,60],
[61,60,79,58,61,0,56,67],
[68,77,78,71,76,75,0,61],
[56,73,76,70,71,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,68,69,72,62,60],
[56,0,64,65,62,72,65,68],
[62,67,0,65,63,74,78,66],
[63,66,66,0,58,79,64,62],
[62,69,68,73,0,75,74,65],
[59,59,57,52,56,0,69,58],
[69,66,53,67,57,62,0,58],
[71,63,65,69,66,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,103,76,57,61,69,81],
[63,0,88,86,59,70,60,66],
[28,43,0,68,64,54,55,40],
[55,45,63,0,50,68,41,47],
[74,72,67,81,0,58,71,77],
[70,61,77,63,73,0,71,61],
[62,71,76,90,60,60,0,53],
[50,65,91,84,54,70,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,76,68,70,75,77],
[71,0,66,64,85,73,83,78],
[58,65,0,66,82,81,67,73],
[55,67,65,0,73,67,69,63],
[63,46,49,58,0,61,50,74],
[61,58,50,64,70,0,67,70],
[56,48,64,62,81,64,0,62],
[54,53,58,68,57,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,56,66,64,62,62,67],
[83,0,83,65,57,89,69,73],
[75,48,0,56,69,73,67,72],
[65,66,75,0,68,80,50,84],
[67,74,62,63,0,68,63,87],
[69,42,58,51,63,0,57,64],
[69,62,64,81,68,74,0,72],
[64,58,59,47,44,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,55,69,70,58,74],
[75,0,68,54,68,71,62,51],
[74,63,0,62,76,82,71,76],
[76,77,69,0,61,78,73,89],
[62,63,55,70,0,76,61,58],
[61,60,49,53,55,0,68,55],
[73,69,60,58,70,63,0,68],
[57,80,55,42,73,76,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,61,80,67,75,74],
[64,0,56,55,67,61,72,60],
[70,75,0,67,78,65,78,74],
[70,76,64,0,74,63,71,70],
[51,64,53,57,0,57,63,55],
[64,70,66,68,74,0,65,71],
[56,59,53,60,68,66,0,67],
[57,71,57,61,76,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,72,57,60,60,53],
[70,0,66,71,62,58,70,59],
[71,65,0,72,58,67,57,60],
[59,60,59,0,57,54,59,55],
[74,69,73,74,0,69,60,67],
[71,73,64,77,62,0,64,62],
[71,61,74,72,71,67,0,72],
[78,72,71,76,64,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,49,66,62,64,56,51],
[70,0,68,71,63,81,61,56],
[82,63,0,65,74,74,72,68],
[65,60,66,0,54,65,53,47],
[69,68,57,77,0,74,59,64],
[67,50,57,66,57,0,60,54],
[75,70,59,78,72,71,0,55],
[80,75,63,84,67,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,75,69,62,66,71],
[61,0,60,72,67,63,73,64],
[64,71,0,69,73,73,63,71],
[56,59,62,0,66,63,68,70],
[62,64,58,65,0,59,68,65],
[69,68,58,68,72,0,60,64],
[65,58,68,63,63,71,0,59],
[60,67,60,61,66,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,67,75,61,66,65],
[67,0,77,65,64,53,54,58],
[53,54,0,64,64,48,40,57],
[64,66,67,0,70,65,57,64],
[56,67,67,61,0,58,57,72],
[70,78,83,66,73,0,60,72],
[65,77,91,74,74,71,0,80],
[66,73,74,67,59,59,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,49,72,49,70,61],
[72,0,41,40,72,60,70,53],
[70,90,0,69,80,79,89,61],
[82,91,62,0,82,82,90,72],
[59,59,51,49,0,70,70,51],
[82,71,52,49,61,0,69,51],
[61,61,42,41,61,62,0,62],
[70,78,70,59,80,80,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,60,55,49,71,70],
[71,0,63,68,62,62,73,64],
[71,68,0,73,68,60,82,70],
[71,63,58,0,63,47,72,63],
[76,69,63,68,0,72,74,71],
[82,69,71,84,59,0,88,81],
[60,58,49,59,57,43,0,56],
[61,67,61,68,60,50,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,71,67,66,78,61],
[67,0,64,63,70,70,65,67],
[61,67,0,69,66,63,77,68],
[60,68,62,0,72,61,68,67],
[64,61,65,59,0,57,71,53],
[65,61,68,70,74,0,68,68],
[53,66,54,63,60,63,0,52],
[70,64,63,64,78,63,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,83,85,58,68,67],
[62,0,55,69,74,55,59,55],
[64,76,0,75,86,67,67,69],
[48,62,56,0,85,58,55,65],
[46,57,45,46,0,35,58,54],
[73,76,64,73,96,0,68,74],
[63,72,64,76,73,63,0,65],
[64,76,62,66,77,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,49,58,64,60,58],
[69,0,60,57,55,73,58,60],
[74,71,0,65,69,71,68,66],
[82,74,66,0,68,81,63,70],
[73,76,62,63,0,74,68,59],
[67,58,60,50,57,0,57,55],
[71,73,63,68,63,74,0,63],
[73,71,65,61,72,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,65,71,62,59,54,58],
[85,0,87,79,64,71,68,69],
[66,44,0,53,56,56,64,58],
[60,52,78,0,58,53,52,72],
[69,67,75,73,0,61,63,66],
[72,60,75,78,70,0,65,69],
[77,63,67,79,68,66,0,75],
[73,62,73,59,65,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,53,64,66,63,65],
[71,0,69,65,67,65,56,57],
[72,62,0,56,67,72,72,59],
[78,66,75,0,68,70,73,64],
[67,64,64,63,0,64,68,68],
[65,66,59,61,67,0,65,71],
[68,75,59,58,63,66,0,61],
[66,74,72,67,63,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,61,74,70,82,73,66],
[58,0,55,71,73,71,71,60],
[70,76,0,58,57,67,66,58],
[57,60,73,0,60,69,65,62],
[61,58,74,71,0,68,66,60],
[49,60,64,62,63,0,66,66],
[58,60,65,66,65,65,0,59],
[65,71,73,69,71,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,52,52,59,63,54],
[72,0,75,66,71,77,72,59],
[76,56,0,61,59,70,72,71],
[79,65,70,0,72,75,70,67],
[79,60,72,59,0,68,65,60],
[72,54,61,56,63,0,73,63],
[68,59,59,61,66,58,0,67],
[77,72,60,64,71,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,74,81,60,81,71],
[64,0,73,65,66,77,62,57],
[52,58,0,64,71,54,61,67],
[57,66,67,0,59,58,57,66],
[50,65,60,72,0,53,64,61],
[71,54,77,73,78,0,67,69],
[50,69,70,74,67,64,0,70],
[60,74,64,65,70,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,62,71,70,62,53],
[60,0,61,59,66,58,81,69],
[56,70,0,60,63,62,85,68],
[69,72,71,0,82,63,71,61],
[60,65,68,49,0,48,65,65],
[61,73,69,68,83,0,72,72],
[69,50,46,60,66,59,0,52],
[78,62,63,70,66,59,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,58,65,64,61,54],
[69,0,74,67,66,71,73,63],
[62,57,0,62,64,58,62,58],
[73,64,69,0,66,67,62,55],
[66,65,67,65,0,64,64,58],
[67,60,73,64,67,0,61,63],
[70,58,69,69,67,70,0,66],
[77,68,73,76,73,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,43,55,56,86,75,70],
[70,0,47,58,63,68,64,61],
[88,84,0,56,73,80,72,67],
[76,73,75,0,69,83,80,62],
[75,68,58,62,0,75,71,56],
[45,63,51,48,56,0,55,48],
[56,67,59,51,60,76,0,64],
[61,70,64,69,75,83,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,64,63,72,65,82],
[69,0,73,62,73,78,74,87],
[66,58,0,56,73,72,73,61],
[67,69,75,0,66,67,61,74],
[68,58,58,65,0,77,65,74],
[59,53,59,64,54,0,63,61],
[66,57,58,70,66,68,0,80],
[49,44,70,57,57,70,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,79,66,63,70,59],
[65,0,65,74,63,67,82,67],
[60,66,0,65,60,73,58,64],
[52,57,66,0,48,54,56,58],
[65,68,71,83,0,80,69,63],
[68,64,58,77,51,0,76,54],
[61,49,73,75,62,55,0,53],
[72,64,67,73,68,77,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,64,60,63,55,66],
[59,0,50,57,66,50,50,64],
[70,81,0,62,61,58,66,73],
[67,74,69,0,75,59,62,71],
[71,65,70,56,0,68,52,59],
[68,81,73,72,63,0,61,68],
[76,81,65,69,79,70,0,74],
[65,67,58,60,72,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,54,51,66,57,59,60],
[65,0,54,54,69,56,72,53],
[77,77,0,71,78,63,82,71],
[80,77,60,0,76,70,69,68],
[65,62,53,55,0,52,74,60],
[74,75,68,61,79,0,66,62],
[72,59,49,62,57,65,0,58],
[71,78,60,63,71,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,43,43,42,45,110,22],
[109,0,66,44,65,43,110,86],
[88,65,0,64,65,66,110,88],
[88,87,67,0,65,65,110,88],
[89,66,66,66,0,45,88,89],
[86,88,65,66,86,0,110,86],
[21,21,21,21,43,21,0,21],
[109,45,43,43,42,45,110,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,68,64,74,70,70],
[67,0,67,59,62,68,71,64],
[61,64,0,61,58,69,67,66],
[63,72,70,0,65,75,70,62],
[67,69,73,66,0,70,73,64],
[57,63,62,56,61,0,61,61],
[61,60,64,61,58,70,0,64],
[61,67,65,69,67,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,68,60,65,75,61],
[53,0,48,47,53,56,52,53],
[65,83,0,64,76,72,59,57],
[63,84,67,0,75,63,69,51],
[71,78,55,56,0,50,56,52],
[66,75,59,68,81,0,65,73],
[56,79,72,62,75,66,0,57],
[70,78,74,80,79,58,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,49,59,60,66,63,56],
[77,0,68,78,69,71,73,64],
[82,63,0,76,67,69,72,66],
[72,53,55,0,61,71,62,53],
[71,62,64,70,0,66,66,70],
[65,60,62,60,65,0,72,63],
[68,58,59,69,65,59,0,63],
[75,67,65,78,61,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,75,78,58,56,73,77],
[58,0,71,74,64,55,69,69],
[56,60,0,73,57,66,72,74],
[53,57,58,0,56,46,65,62],
[73,67,74,75,0,51,72,78],
[75,76,65,85,80,0,70,78],
[58,62,59,66,59,61,0,63],
[54,62,57,69,53,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,73,54,47,48,65,75],
[75,0,75,65,66,67,65,93],
[58,56,0,66,87,56,65,94],
[77,66,65,0,69,57,66,77],
[84,65,44,62,0,73,83,82],
[83,64,75,74,58,0,74,74],
[66,66,66,65,48,57,0,67],
[56,38,37,54,49,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,72,57,55,67,60,62],
[69,0,64,68,55,61,65,59],
[59,67,0,70,55,66,63,55],
[74,63,61,0,65,73,73,65],
[76,76,76,66,0,58,69,69],
[64,70,65,58,73,0,61,67],
[71,66,68,58,62,70,0,67],
[69,72,76,66,62,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,60,61,69,67,62],
[63,0,68,64,71,68,68,67],
[66,63,0,60,72,75,73,69],
[71,67,71,0,75,78,62,72],
[70,60,59,56,0,68,66,66],
[62,63,56,53,63,0,55,57],
[64,63,58,69,65,76,0,67],
[69,64,62,59,65,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,81,67,77,71,72],
[65,0,66,76,67,66,72,74],
[69,65,0,69,63,59,66,64],
[50,55,62,0,61,50,49,55],
[64,64,68,70,0,72,67,75],
[54,65,72,81,59,0,64,71],
[60,59,65,82,64,67,0,63],
[59,57,67,76,56,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,73,69,69,64,65],
[56,0,69,64,61,58,58,66],
[58,62,0,68,59,62,59,62],
[58,67,63,0,63,65,64,60],
[62,70,72,68,0,62,64,58],
[62,73,69,66,69,0,72,67],
[67,73,72,67,67,59,0,61],
[66,65,69,71,73,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,67,58,58,74,63],
[72,0,68,67,72,66,61,74],
[75,63,0,74,68,71,75,60],
[64,64,57,0,72,51,64,66],
[73,59,63,59,0,59,64,68],
[73,65,60,80,72,0,61,70],
[57,70,56,67,67,70,0,57],
[68,57,71,65,63,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,67,67,62,59,71],
[67,0,74,63,65,63,56,69],
[63,57,0,52,65,67,47,68],
[64,68,79,0,64,66,68,75],
[64,66,66,67,0,61,60,75],
[69,68,64,65,70,0,57,77],
[72,75,84,63,71,74,0,74],
[60,62,63,56,56,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,52,59,53,58,59,48],
[75,0,66,49,68,75,70,59],
[79,65,0,44,74,62,56,66],
[72,82,87,0,73,72,50,69],
[78,63,57,58,0,70,65,74],
[73,56,69,59,61,0,54,62],
[72,61,75,81,66,77,0,77],
[83,72,65,62,57,69,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,67,69,68,54,53],
[73,0,73,75,64,69,73,74],
[66,58,0,70,59,65,64,57],
[64,56,61,0,62,50,53,55],
[62,67,72,69,0,56,55,57],
[63,62,66,81,75,0,62,56],
[77,58,67,78,76,69,0,59],
[78,57,74,76,74,75,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,69,73,86,58,100,70],
[41,0,40,73,58,51,51,62],
[62,91,0,72,77,69,51,83],
[58,58,59,0,77,39,78,50],
[45,73,54,54,0,42,54,85],
[73,80,62,92,89,0,90,72],
[31,80,80,53,77,41,0,52],
[61,69,48,81,46,59,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,28,74,88,59,73,59],
[44,0,44,44,88,88,44,44],
[103,87,0,103,103,59,88,74],
[57,87,28,0,73,59,73,58],
[43,43,28,58,0,30,44,29],
[72,43,72,72,101,0,43,72],
[58,87,43,58,87,88,0,57],
[72,87,57,73,102,59,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,56,70,55,70,70],
[68,0,64,61,71,70,74,69],
[62,67,0,64,75,65,71,64],
[75,70,67,0,82,59,68,71],
[61,60,56,49,0,49,67,66],
[76,61,66,72,82,0,74,72],
[61,57,60,63,64,57,0,65],
[61,62,67,60,65,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,64,67,67,68,69],
[64,0,61,64,67,68,71,70],
[68,70,0,70,74,69,71,62],
[67,67,61,0,66,72,71,65],
[64,64,57,65,0,74,69,72],
[64,63,62,59,57,0,69,58],
[63,60,60,60,62,62,0,61],
[62,61,69,66,59,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,57,61,70,66,71,66],
[77,0,49,76,77,69,73,62],
[74,82,0,57,71,64,70,57],
[70,55,74,0,68,65,76,74],
[61,54,60,63,0,57,65,57],
[65,62,67,66,74,0,67,66],
[60,58,61,55,66,64,0,68],
[65,69,74,57,74,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,67,65,61,64,74],
[60,0,68,64,67,65,66,70],
[65,63,0,61,57,64,62,73],
[64,67,70,0,66,70,76,65],
[66,64,74,65,0,72,70,67],
[70,66,67,61,59,0,74,73],
[67,65,69,55,61,57,0,69],
[57,61,58,66,64,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,71,66,70,70,65],
[59,0,66,71,58,66,65,64],
[66,65,0,68,72,68,80,70],
[60,60,63,0,72,67,73,65],
[65,73,59,59,0,69,71,51],
[61,65,63,64,62,0,70,71],
[61,66,51,58,60,61,0,65],
[66,67,61,66,80,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,48,73,75,65,66,60],
[62,0,69,69,84,70,51,73],
[83,62,0,96,72,66,66,71],
[58,62,35,0,73,54,47,58],
[56,47,59,58,0,58,50,65],
[66,61,65,77,73,0,62,78],
[65,80,65,84,81,69,0,76],
[71,58,60,73,66,53,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,66,71,70,63,66],
[67,0,71,60,67,65,55,77],
[65,60,0,62,67,57,60,64],
[65,71,69,0,77,65,67,69],
[60,64,64,54,0,63,49,66],
[61,66,74,66,68,0,61,75],
[68,76,71,64,82,70,0,74],
[65,54,67,62,65,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,66,93,55,70,65,67],
[43,0,44,65,48,57,63,37],
[65,87,0,76,64,65,81,73],
[38,66,55,0,50,51,58,60],
[76,83,67,81,0,79,59,77],
[61,74,66,80,52,0,67,54],
[66,68,50,73,72,64,0,52],
[64,94,58,71,54,77,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,77,69,68,63,76,68],
[52,0,67,68,71,66,66,61],
[54,64,0,61,70,69,69,68],
[62,63,70,0,67,54,70,74],
[63,60,61,64,0,55,65,64],
[68,65,62,77,76,0,72,70],
[55,65,62,61,66,59,0,63],
[63,70,63,57,67,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,91,83,67,75,64],
[61,0,69,84,63,53,51,59],
[60,62,0,79,65,67,49,58],
[40,47,52,0,47,33,31,46],
[48,68,66,84,0,66,54,59],
[64,78,64,98,65,0,60,57],
[56,80,82,100,77,71,0,67],
[67,72,73,85,72,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,56,55,49,57,63],
[72,0,63,50,53,59,62,77],
[76,68,0,68,70,67,64,75],
[75,81,63,0,71,67,66,73],
[76,78,61,60,0,70,68,73],
[82,72,64,64,61,0,64,68],
[74,69,67,65,63,67,0,70],
[68,54,56,58,58,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,68,54,74,57,77],
[63,0,62,62,49,64,65,60],
[70,69,0,66,53,77,68,76],
[63,69,65,0,54,67,54,60],
[77,82,78,77,0,84,63,73],
[57,67,54,64,47,0,53,64],
[74,66,63,77,68,78,0,76],
[54,71,55,71,58,67,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,66,79,73,67,62],
[67,0,67,69,77,66,61,68],
[66,64,0,69,70,75,69,67],
[65,62,62,0,70,60,61,61],
[52,54,61,61,0,58,59,52],
[58,65,56,71,73,0,63,60],
[64,70,62,70,72,68,0,61],
[69,63,64,70,79,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,71,73,68,59,72],
[61,0,68,70,70,77,67,76],
[59,63,0,77,72,75,64,73],
[60,61,54,0,59,56,50,68],
[58,61,59,72,0,69,58,73],
[63,54,56,75,62,0,57,63],
[72,64,67,81,73,74,0,78],
[59,55,58,63,58,68,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,74,64,63,68,65],
[74,0,60,80,63,67,68,71],
[79,71,0,77,70,69,67,65],
[57,51,54,0,62,61,69,61],
[67,68,61,69,0,69,60,66],
[68,64,62,70,62,0,73,56],
[63,63,64,62,71,58,0,65],
[66,60,66,70,65,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,66,56,69,62,54],
[69,0,71,71,68,65,67,64],
[67,60,0,63,59,69,71,54],
[65,60,68,0,58,65,59,55],
[75,63,72,73,0,69,66,67],
[62,66,62,66,62,0,69,60],
[69,64,60,72,65,62,0,60],
[77,67,77,76,64,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,74,63,66,76,68,57],
[52,0,77,68,82,80,64,62],
[57,54,0,60,62,58,52,65],
[68,63,71,0,73,63,53,73],
[65,49,69,58,0,50,55,78],
[55,51,73,68,81,0,74,72],
[63,67,79,78,76,57,0,81],
[74,69,66,58,53,59,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,64,71,78,62,70],
[65,0,53,80,62,62,62,65],
[62,78,0,77,82,87,77,78],
[67,51,54,0,51,55,63,56],
[60,69,49,80,0,67,70,67],
[53,69,44,76,64,0,68,65],
[69,69,54,68,61,63,0,62],
[61,66,53,75,64,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,49,49,59,59,49,55],
[86,0,72,77,80,75,62,78],
[82,59,0,68,73,66,64,71],
[82,54,63,0,66,74,60,54],
[72,51,58,65,0,61,52,63],
[72,56,65,57,70,0,57,59],
[82,69,67,71,79,74,0,65],
[76,53,60,77,68,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,66,63,63,66,63],
[68,0,63,63,73,70,65,75],
[63,68,0,68,64,64,68,73],
[65,68,63,0,58,59,58,66],
[68,58,67,73,0,74,65,69],
[68,61,67,72,57,0,66,70],
[65,66,63,73,66,65,0,69],
[68,56,58,65,62,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,73,59,64,57,75],
[63,0,64,58,50,66,49,80],
[68,67,0,57,61,56,56,74],
[58,73,74,0,73,76,80,79],
[72,81,70,58,0,66,69,65],
[67,65,75,55,65,0,47,71],
[74,82,75,51,62,84,0,73],
[56,51,57,52,66,60,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,87,86,108,44,86,67],
[65,0,43,65,87,45,65,43],
[44,88,0,42,88,22,87,68],
[45,66,89,0,88,44,45,46],
[23,44,43,43,0,23,88,46],
[87,86,109,87,108,0,65,66],
[45,66,44,86,43,66,0,68],
[64,88,63,85,85,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,58,61,69,56,61,67],
[49,0,44,60,71,47,61,61],
[73,87,0,64,80,67,69,59],
[70,71,67,0,69,64,76,67],
[62,60,51,62,0,57,67,65],
[75,84,64,67,74,0,68,72],
[70,70,62,55,64,63,0,64],
[64,70,72,64,66,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,81,66,72,73,66,78],
[68,0,71,69,71,63,70,69],
[50,60,0,60,63,62,68,52],
[65,62,71,0,83,79,67,64],
[59,60,68,48,0,52,61,56],
[58,68,69,52,79,0,70,70],
[65,61,63,64,70,61,0,67],
[53,62,79,67,75,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,65,65,71,69,70],
[68,0,66,64,70,72,72,55],
[53,65,0,59,57,51,48,61],
[66,67,72,0,68,65,60,56],
[66,61,74,63,0,65,57,61],
[60,59,80,66,66,0,65,65],
[62,59,83,71,74,66,0,58],
[61,76,70,75,70,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,67,60,58,52,63],
[71,0,74,61,76,66,73,66],
[66,57,0,60,72,80,59,53],
[64,70,71,0,77,68,65,59],
[71,55,59,54,0,66,63,63],
[73,65,51,63,65,0,65,58],
[79,58,72,66,68,66,0,67],
[68,65,78,72,68,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,62,58,53,55,71],
[72,0,65,59,46,62,54,58],
[76,66,0,57,50,48,46,57],
[69,72,74,0,57,63,56,55],
[73,85,81,74,0,75,59,77],
[78,69,83,68,56,0,72,68],
[76,77,85,75,72,59,0,85],
[60,73,74,76,54,63,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,69,75,78,56,78,71],
[76,0,62,67,58,55,64,59],
[62,69,0,62,77,41,47,50],
[56,64,69,0,55,42,49,58],
[53,73,54,76,0,52,52,57],
[75,76,90,89,79,0,83,64],
[53,67,84,82,79,48,0,59],
[60,72,81,73,74,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,84,77,75,65,73,83],
[74,0,85,74,78,68,65,81],
[47,46,0,59,61,50,35,71],
[54,57,72,0,57,49,64,73],
[56,53,70,74,0,66,58,80],
[66,63,81,82,65,0,68,77],
[58,66,96,67,73,63,0,79],
[48,50,60,58,51,54,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,75,58,68,70,70,74],
[54,0,63,53,52,57,70,79],
[56,68,0,45,65,50,57,74],
[73,78,86,0,73,60,65,77],
[63,79,66,58,0,62,64,87],
[61,74,81,71,69,0,70,77],
[61,61,74,66,67,61,0,88],
[57,52,57,54,44,54,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,69,58,66,66,57],
[74,0,57,77,68,61,61,62],
[76,74,0,79,78,64,70,71],
[62,54,52,0,53,53,62,51],
[73,63,53,78,0,60,61,62],
[65,70,67,78,71,0,63,63],
[65,70,61,69,70,68,0,61],
[74,69,60,80,69,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,63,57,66,74,76,52],
[87,0,73,63,78,78,81,70],
[68,58,0,63,62,78,84,69],
[74,68,68,0,73,71,79,62],
[65,53,69,58,0,75,75,75],
[57,53,53,60,56,0,70,58],
[55,50,47,52,56,61,0,58],
[79,61,62,69,56,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,68,57,50,56,59],
[77,0,77,86,69,69,71,60],
[72,54,0,70,67,65,58,59],
[63,45,61,0,55,45,55,68],
[74,62,64,76,0,62,57,64],
[81,62,66,86,69,0,61,70],
[75,60,73,76,74,70,0,68],
[72,71,72,63,67,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,59,62,70,67,73],
[61,0,51,56,60,59,54,61],
[65,80,0,68,73,72,73,67],
[72,75,63,0,67,66,61,70],
[69,71,58,64,0,64,67,66],
[61,72,59,65,67,0,59,67],
[64,77,58,70,64,72,0,74],
[58,70,64,61,65,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,58,63,58,64,61],
[67,0,63,62,67,57,72,78],
[59,68,0,71,76,65,70,69],
[73,69,60,0,72,69,80,75],
[68,64,55,59,0,62,68,70],
[73,74,66,62,69,0,64,75],
[67,59,61,51,63,67,0,71],
[70,53,62,56,61,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,53,71,54,58,62,51],
[65,0,54,69,61,68,57,59],
[78,77,0,74,60,69,75,71],
[60,62,57,0,59,52,56,55],
[77,70,71,72,0,68,62,56],
[73,63,62,79,63,0,63,54],
[69,74,56,75,69,68,0,76],
[80,72,60,76,75,77,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,49,45,66,49,54,58],
[58,0,28,44,45,36,37,44],
[82,103,0,58,81,56,73,81],
[86,87,73,0,73,64,66,79],
[65,86,50,58,0,27,58,42],
[82,95,75,67,104,0,66,60],
[77,94,58,65,73,65,0,65],
[73,87,50,52,89,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,75,73,75,69,64],
[63,0,52,74,66,61,65,69],
[62,79,0,75,71,61,83,74],
[56,57,56,0,62,71,70,62],
[58,65,60,69,0,61,66,66],
[56,70,70,60,70,0,75,67],
[62,66,48,61,65,56,0,60],
[67,62,57,69,65,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,76,40,76,112,114,95],
[77,0,97,78,59,78,97,78],
[55,34,0,36,36,36,57,55],
[91,53,95,0,56,92,74,72],
[55,72,95,75,0,56,75,56],
[19,53,95,39,75,0,75,75],
[17,34,74,57,56,56,0,57],
[36,53,76,59,75,56,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,83,71,72,70,64],
[55,0,65,84,63,55,65,65],
[59,66,0,84,71,67,59,60],
[48,47,47,0,54,59,57,52],
[60,68,60,77,0,65,73,66],
[59,76,64,72,66,0,64,76],
[61,66,72,74,58,67,0,63],
[67,66,71,79,65,55,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,77,68,69,67,69],
[59,0,65,60,62,63,70,53],
[68,66,0,71,67,67,67,61],
[54,71,60,0,64,71,65,65],
[63,69,64,67,0,65,68,69],
[62,68,64,60,66,0,56,58],
[64,61,64,66,63,75,0,63],
[62,78,70,66,62,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,38,52,48,54,45],
[73,0,64,60,74,78,79,65],
[73,67,0,42,56,55,66,58],
[93,71,89,0,76,65,81,75],
[79,57,75,55,0,66,67,72],
[83,53,76,66,65,0,67,53],
[77,52,65,50,64,64,0,68],
[86,66,73,56,59,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,81,65,63,72,76,64],
[63,0,78,77,55,67,58,72],
[50,53,0,61,58,61,54,66],
[66,54,70,0,52,70,63,62],
[68,76,73,79,0,68,78,61],
[59,64,70,61,63,0,53,64],
[55,73,77,68,53,78,0,72],
[67,59,65,69,70,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,56,55,69,61,63],
[66,0,68,64,54,68,60,60],
[63,63,0,62,63,63,65,60],
[75,67,69,0,68,70,65,65],
[76,77,68,63,0,69,78,69],
[62,63,68,61,62,0,66,62],
[70,71,66,66,53,65,0,63],
[68,71,71,66,62,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,58,68,62,71,59],
[70,0,75,66,68,61,70,68],
[63,56,0,51,64,53,58,64],
[73,65,80,0,79,74,70,69],
[63,63,67,52,0,63,61,63],
[69,70,78,57,68,0,78,74],
[60,61,73,61,70,53,0,69],
[72,63,67,62,68,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,56,65,72,59,54],
[71,0,62,62,73,62,65,55],
[73,69,0,70,75,63,64,70],
[75,69,61,0,70,68,66,62],
[66,58,56,61,0,63,56,60],
[59,69,68,63,68,0,69,64],
[72,66,67,65,75,62,0,68],
[77,76,61,69,71,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,60,65,59,67,71],
[73,0,77,64,84,68,73,67],
[66,54,0,59,66,67,67,66],
[71,67,72,0,86,82,62,78],
[66,47,65,45,0,71,65,55],
[72,63,64,49,60,0,67,58],
[64,58,64,69,66,64,0,52],
[60,64,65,53,76,73,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,76,72,66,63,57,69],
[50,0,57,49,52,51,49,54],
[55,74,0,59,44,56,56,56],
[59,82,72,0,58,56,60,63],
[65,79,87,73,0,70,70,78],
[68,80,75,75,61,0,62,74],
[74,82,75,71,61,69,0,65],
[62,77,75,68,53,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,68,67,75,65,74],
[71,0,57,56,70,59,69,60],
[67,74,0,65,71,80,74,65],
[63,75,66,0,63,67,79,64],
[64,61,60,68,0,61,75,75],
[56,72,51,64,70,0,72,71],
[66,62,57,52,56,59,0,56],
[57,71,66,67,56,60,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,68,70,67,64,66],
[69,0,67,68,65,71,68,62],
[62,64,0,72,70,65,64,64],
[63,63,59,0,65,69,68,60],
[61,66,61,66,0,68,65,67],
[64,60,66,62,63,0,62,60],
[67,63,67,63,66,69,0,66],
[65,69,67,71,64,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,75,77,47,76,82,57],
[72,0,91,84,65,68,72,75],
[56,40,0,65,57,51,89,47],
[54,47,66,0,66,63,64,56],
[84,66,74,65,0,77,75,56],
[55,63,80,68,54,0,75,48],
[49,59,42,67,56,56,0,55],
[74,56,84,75,75,83,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,99,99,32,65,99,34,65],
[32,0,97,64,65,131,32,97],
[32,34,0,64,32,98,32,32],
[99,67,67,0,67,99,99,65],
[66,66,99,64,0,99,66,64],
[32,0,33,32,32,0,32,32],
[97,99,99,32,65,99,0,65],
[66,34,99,66,67,99,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,67,62,67,68,71],
[61,0,63,59,65,67,70,71],
[65,68,0,54,63,69,68,73],
[64,72,77,0,71,70,71,74],
[69,66,68,60,0,74,67,68],
[64,64,62,61,57,0,66,71],
[63,61,63,60,64,65,0,68],
[60,60,58,57,63,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,67,70,82,57,69],
[63,0,80,67,81,73,66,78],
[53,51,0,60,54,62,57,60],
[64,64,71,0,66,65,66,67],
[61,50,77,65,0,58,62,51],
[49,58,69,66,73,0,54,59],
[74,65,74,65,69,77,0,62],
[62,53,71,64,80,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,54,78,65,65,77],
[69,0,78,60,73,67,62,80],
[65,53,0,49,77,57,64,63],
[77,71,82,0,74,63,63,79],
[53,58,54,57,0,60,62,74],
[66,64,74,68,71,0,69,77],
[66,69,67,68,69,62,0,80],
[54,51,68,52,57,54,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,64,76,66,61,71,77],
[48,0,46,48,38,41,46,46],
[67,85,0,67,62,61,64,74],
[55,83,64,0,46,50,59,60],
[65,93,69,85,0,70,67,77],
[70,90,70,81,61,0,70,70],
[60,85,67,72,64,61,0,68],
[54,85,57,71,54,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,65,47,61,50,60,56],
[79,0,74,66,71,58,73,67],
[66,57,0,49,62,60,63,54],
[84,65,82,0,71,57,74,69],
[70,60,69,60,0,66,63,71],
[81,73,71,74,65,0,72,70],
[71,58,68,57,68,59,0,68],
[75,64,77,62,60,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,75,69,62,63,68,74],
[64,0,67,69,63,64,68,55],
[56,64,0,62,68,59,61,67],
[62,62,69,0,68,64,69,70],
[69,68,63,63,0,71,69,69],
[68,67,72,67,60,0,63,69],
[63,63,70,62,62,68,0,70],
[57,76,64,61,62,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,63,71,63,70,67],
[72,0,67,74,64,69,68,68],
[64,64,0,66,55,62,72,67],
[68,57,65,0,63,54,70,75],
[60,67,76,68,0,63,69,71],
[68,62,69,77,68,0,73,75],
[61,63,59,61,62,58,0,75],
[64,63,64,56,60,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,61,66,60,66,50],
[66,0,59,73,69,60,64,67],
[71,72,0,73,71,71,68,61],
[70,58,58,0,57,60,62,56],
[65,62,60,74,0,56,61,61],
[71,71,60,71,75,0,70,74],
[65,67,63,69,70,61,0,65],
[81,64,70,75,70,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,69,50,58,54,65,80],
[74,0,75,47,64,69,56,70],
[62,56,0,67,68,80,72,76],
[81,84,64,0,63,64,79,65],
[73,67,63,68,0,74,70,75],
[77,62,51,67,57,0,72,65],
[66,75,59,52,61,59,0,45],
[51,61,55,66,56,66,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,62,58,62,59,51],
[71,0,76,75,62,64,70,70],
[67,55,0,73,59,61,72,65],
[69,56,58,0,59,55,63,48],
[73,69,72,72,0,68,65,58],
[69,67,70,76,63,0,73,65],
[72,61,59,68,66,58,0,64],
[80,61,66,83,73,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,60,69,72,68,65,70],
[57,0,63,69,60,70,68,57],
[71,68,0,70,63,68,65,66],
[62,62,61,0,61,75,60,61],
[59,71,68,70,0,69,72,68],
[63,61,63,56,62,0,57,63],
[66,63,66,71,59,74,0,69],
[61,74,65,70,63,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,56,64,59,63,64],
[73,0,48,59,69,72,70,75],
[67,83,0,62,69,68,77,73],
[75,72,69,0,65,65,80,69],
[67,62,62,66,0,53,74,68],
[72,59,63,66,78,0,73,77],
[68,61,54,51,57,58,0,70],
[67,56,58,62,63,54,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,65,60,56,66,66],
[62,0,68,61,60,51,51,57],
[60,63,0,63,60,56,53,69],
[66,70,68,0,69,55,66,72],
[71,71,71,62,0,62,64,78],
[75,80,75,76,69,0,62,79],
[65,80,78,65,67,69,0,75],
[65,74,62,59,53,52,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,57,53,67,49,73,64],
[58,0,49,45,44,47,67,55],
[74,82,0,63,80,55,80,79],
[78,86,68,0,74,58,82,70],
[64,87,51,57,0,67,72,68],
[82,84,76,73,64,0,88,83],
[58,64,51,49,59,43,0,56],
[67,76,52,61,63,48,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,69,64,60,63,44],
[58,0,66,47,38,57,57,49],
[69,65,0,63,71,60,66,58],
[62,84,68,0,49,81,75,70],
[67,93,60,82,0,67,57,64],
[71,74,71,50,64,0,63,63],
[68,74,65,56,74,68,0,60],
[87,82,73,61,67,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,64,65,65,65,71],
[63,0,63,63,61,57,61,64],
[61,68,0,73,64,66,67,67],
[67,68,58,0,57,60,56,61],
[66,70,67,74,0,70,63,64],
[66,74,65,71,61,0,72,65],
[66,70,64,75,68,59,0,71],
[60,67,64,70,67,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,64,57,71,63,67,60],
[79,0,71,87,73,73,93,65],
[67,60,0,66,75,66,72,68],
[74,44,65,0,55,66,71,59],
[60,58,56,76,0,83,78,72],
[68,58,65,65,48,0,57,68],
[64,38,59,60,53,74,0,54],
[71,66,63,72,59,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,62,63,72,69,64],
[63,0,76,61,63,70,63,70],
[59,55,0,47,58,52,56,58],
[69,70,84,0,59,73,70,75],
[68,68,73,72,0,72,60,71],
[59,61,79,58,59,0,60,67],
[62,68,75,61,71,71,0,67],
[67,61,73,56,60,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,79,63,66,71,58],
[59,0,64,84,71,55,55,70],
[67,67,0,79,75,65,81,66],
[52,47,52,0,53,53,55,45],
[68,60,56,78,0,69,73,56],
[65,76,66,78,62,0,83,62],
[60,76,50,76,58,48,0,70],
[73,61,65,86,75,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,76,65,55,68,63,60],
[55,0,84,53,56,69,60,61],
[55,47,0,51,58,61,52,46],
[66,78,80,0,61,71,66,60],
[76,75,73,70,0,68,63,68],
[63,62,70,60,63,0,56,69],
[68,71,79,65,68,75,0,74],
[71,70,85,71,63,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,71,71,64,74,72,69],
[54,0,65,60,63,61,70,63],
[60,66,0,62,54,60,61,66],
[60,71,69,0,64,69,66,73],
[67,68,77,67,0,71,72,64],
[57,70,71,62,60,0,63,65],
[59,61,70,65,59,68,0,55],
[62,68,65,58,67,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,85,64,51,65,49,51],
[66,0,80,72,65,66,53,55],
[46,51,0,69,53,50,52,43],
[67,59,62,0,46,56,46,54],
[80,66,78,85,0,58,68,69],
[66,65,81,75,73,0,65,70],
[82,78,79,85,63,66,0,49],
[80,76,88,77,62,61,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,71,67,54,79,77],
[65,0,70,72,53,62,70,75],
[67,61,0,70,62,62,62,76],
[60,59,61,0,51,79,62,72],
[64,78,69,80,0,85,81,78],
[77,69,69,52,46,0,56,70],
[52,61,69,69,50,75,0,68],
[54,56,55,59,53,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,78,93,92,64,49,42],
[64,0,52,76,77,80,77,67],
[53,79,0,76,104,91,52,81],
[38,55,55,0,65,29,38,42],
[39,54,27,66,0,39,52,27],
[67,51,40,102,92,0,67,53],
[82,54,79,93,79,64,0,66],
[89,64,50,89,104,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,74,69,80,72,57],
[67,0,74,69,63,75,60,63],
[62,57,0,70,60,77,60,70],
[57,62,61,0,61,81,61,59],
[62,68,71,70,0,82,63,63],
[51,56,54,50,49,0,63,46],
[59,71,71,70,68,68,0,74],
[74,68,61,72,68,85,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,64,86,56,85,61],
[68,0,73,64,87,71,79,78],
[68,58,0,63,52,55,67,54],
[67,67,68,0,66,47,86,51],
[45,44,79,65,0,41,59,54],
[75,60,76,84,90,0,79,71],
[46,52,64,45,72,52,0,60],
[70,53,77,80,77,60,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,65,67,60,66,54],
[80,0,75,76,83,64,70,64],
[71,56,0,75,80,55,68,58],
[66,55,56,0,70,57,58,70],
[64,48,51,61,0,58,58,58],
[71,67,76,74,73,0,67,61],
[65,61,63,73,73,64,0,61],
[77,67,73,61,73,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,50,80,68,60,79,68],
[57,0,58,75,60,62,68,69],
[81,73,0,84,63,56,80,73],
[51,56,47,0,56,60,52,71],
[63,71,68,75,0,66,60,79],
[71,69,75,71,65,0,65,78],
[52,63,51,79,71,66,0,74],
[63,62,58,60,52,53,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,47,72,67,51,60,47],
[74,0,63,82,79,78,79,68],
[84,68,0,74,74,75,57,67],
[59,49,57,0,65,69,63,48],
[64,52,57,66,0,57,65,58],
[80,53,56,62,74,0,65,48],
[71,52,74,68,66,66,0,56],
[84,63,64,83,73,83,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,76,61,70,85,61,55],
[79,0,93,78,78,94,57,57],
[55,38,0,54,52,93,61,32],
[70,53,77,0,64,102,48,61],
[61,53,79,67,0,88,70,61],
[46,37,38,29,43,0,23,54],
[70,74,70,83,61,108,0,71],
[76,74,99,70,70,77,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,53,66,71,59,66],
[73,0,67,60,66,80,65,62],
[70,64,0,61,61,74,69,55],
[78,71,70,0,69,75,70,61],
[65,65,70,62,0,80,59,65],
[60,51,57,56,51,0,63,56],
[72,66,62,61,72,68,0,68],
[65,69,76,70,66,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,65,64,75,77,68],
[59,0,70,70,54,65,72,67],
[68,61,0,71,54,57,70,57],
[66,61,60,0,67,69,77,69],
[67,77,77,64,0,71,62,71],
[56,66,74,62,60,0,82,57],
[54,59,61,54,69,49,0,65],
[63,64,74,62,60,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,80,64,71,66,66,77],
[68,0,77,64,65,74,69,68],
[51,54,0,53,58,57,56,56],
[67,67,78,0,68,61,63,72],
[60,66,73,63,0,55,63,72],
[65,57,74,70,76,0,63,71],
[65,62,75,68,68,68,0,67],
[54,63,75,59,59,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,46,56,69,60,61,61],
[73,0,60,43,47,54,63,57],
[85,71,0,69,65,64,74,73],
[75,88,62,0,66,68,79,74],
[62,84,66,65,0,67,74,72],
[71,77,67,63,64,0,72,70],
[70,68,57,52,57,59,0,62],
[70,74,58,57,59,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,52,64,63,67,75],
[60,0,59,49,65,58,69,52],
[61,72,0,72,77,74,71,73],
[79,82,59,0,72,68,74,77],
[67,66,54,59,0,61,72,66],
[68,73,57,63,70,0,64,52],
[64,62,60,57,59,67,0,60],
[56,79,58,54,65,79,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,67,63,67,65,61],
[65,0,61,66,58,64,63,62],
[68,70,0,66,80,71,70,59],
[64,65,65,0,65,66,72,67],
[68,73,51,66,0,70,60,54],
[64,67,60,65,61,0,63,65],
[66,68,61,59,71,68,0,61],
[70,69,72,64,77,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,67,61,64,60,65],
[68,0,63,61,62,61,61,60],
[62,68,0,65,55,66,63,58],
[64,70,66,0,68,65,67,70],
[70,69,76,63,0,76,72,67],
[67,70,65,66,55,0,59,62],
[71,70,68,64,59,72,0,70],
[66,71,73,61,64,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,58,63,43,40,55,55],
[48,0,55,54,35,42,47,36],
[73,76,0,84,59,58,59,65],
[68,77,47,0,45,59,58,49],
[88,96,72,86,0,76,79,63],
[91,89,73,72,55,0,64,69],
[76,84,72,73,52,67,0,68],
[76,95,66,82,68,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,42,59,65,59,59,52],
[66,0,58,74,70,83,60,71],
[89,73,0,76,69,65,84,73],
[72,57,55,0,67,67,83,52],
[66,61,62,64,0,80,77,63],
[72,48,66,64,51,0,63,65],
[72,71,47,48,54,68,0,61],
[79,60,58,79,68,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,74,58,68,52,75,58],
[71,0,85,58,72,73,81,78],
[57,46,0,49,44,65,59,59],
[73,73,82,0,61,66,76,69],
[63,59,87,70,0,68,67,69],
[79,58,66,65,63,0,69,68],
[56,50,72,55,64,62,0,56],
[73,53,72,62,62,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,63,73,80,51,53],
[60,0,46,47,59,62,51,60],
[58,85,0,62,65,61,68,58],
[68,84,69,0,79,75,80,62],
[58,72,66,52,0,83,50,71],
[51,69,70,56,48,0,55,66],
[80,80,63,51,81,76,0,68],
[78,71,73,69,60,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,50,59,60,62,58,66],
[71,0,52,58,74,55,64,68],
[81,79,0,67,77,70,60,65],
[72,73,64,0,58,71,68,76],
[71,57,54,73,0,68,59,69],
[69,76,61,60,63,0,66,66],
[73,67,71,63,72,65,0,71],
[65,63,66,55,62,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,67,54,72,58,50],
[63,0,66,71,77,51,77,63],
[72,65,0,77,78,69,73,69],
[64,60,54,0,60,63,69,51],
[77,54,53,71,0,76,78,72],
[59,80,62,68,55,0,65,55],
[73,54,58,62,53,66,0,71],
[81,68,62,80,59,76,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,64,55,64,59,59,59],
[79,0,76,66,70,63,65,65],
[67,55,0,57,60,62,60,62],
[76,65,74,0,73,68,78,71],
[67,61,71,58,0,63,70,65],
[72,68,69,63,68,0,73,60],
[72,66,71,53,61,58,0,64],
[72,66,69,60,66,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,76,63,74,70,62],
[51,0,64,73,52,59,74,65],
[64,67,0,70,65,60,57,48],
[55,58,61,0,64,54,62,53],
[68,79,66,67,0,39,54,68],
[57,72,71,77,92,0,67,64],
[61,57,74,69,77,64,0,72],
[69,66,83,78,63,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,67,67,62,69,62],
[66,0,74,69,65,65,66,62],
[69,57,0,69,73,69,70,65],
[64,62,62,0,68,65,62,60],
[64,66,58,63,0,70,69,62],
[69,66,62,66,61,0,71,70],
[62,65,61,69,62,60,0,59],
[69,69,66,71,69,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,65,69,60,70,69],
[66,0,71,73,76,69,59,65],
[65,60,0,72,60,62,70,66],
[66,58,59,0,60,60,60,62],
[62,55,71,71,0,61,66,69],
[71,62,69,71,70,0,63,61],
[61,72,61,71,65,68,0,69],
[62,66,65,69,62,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,60,94,62,61,70],
[78,0,58,66,106,55,77,53],
[65,73,0,86,90,56,82,56],
[71,65,45,0,92,56,64,71],
[37,25,41,39,0,46,42,43],
[69,76,75,75,85,0,85,61],
[70,54,49,67,89,46,0,53],
[61,78,75,60,88,70,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,68,51,50,60,57],
[67,0,53,50,55,66,59,44],
[72,78,0,57,63,61,70,72],
[63,81,74,0,72,66,77,75],
[80,76,68,59,0,67,71,73],
[81,65,70,65,64,0,58,69],
[71,72,61,54,60,73,0,69],
[74,87,59,56,58,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,62,61,61,53,71],
[62,0,74,63,61,56,54,64],
[63,57,0,58,63,62,60,68],
[69,68,73,0,78,62,59,70],
[70,70,68,53,0,64,67,63],
[70,75,69,69,67,0,55,71],
[78,77,71,72,64,76,0,71],
[60,67,63,61,68,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,56,65,65,58,61],
[69,0,48,65,50,55,53,62],
[71,83,0,67,54,68,68,71],
[75,66,64,0,61,75,74,76],
[66,81,77,70,0,70,62,76],
[66,76,63,56,61,0,70,62],
[73,78,63,57,69,61,0,50],
[70,69,60,55,55,69,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,65,56,71,63,64],
[70,0,59,61,63,68,67,72],
[67,72,0,56,68,76,70,67],
[66,70,75,0,65,78,67,74],
[75,68,63,66,0,70,66,71],
[60,63,55,53,61,0,58,63],
[68,64,61,64,65,73,0,70],
[67,59,64,57,60,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,68,61,72,66,67],
[53,0,60,63,58,69,55,58],
[66,71,0,69,71,73,72,64],
[63,68,62,0,71,63,63,69],
[70,73,60,60,0,69,71,69],
[59,62,58,68,62,0,63,61],
[65,76,59,68,60,68,0,58],
[64,73,67,62,62,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,70,52,62,65,68,56],
[81,0,65,62,60,72,63,71],
[61,66,0,48,64,55,70,40],
[79,69,83,0,68,83,69,54],
[69,71,67,63,0,71,72,55],
[66,59,76,48,60,0,69,54],
[63,68,61,62,59,62,0,52],
[75,60,91,77,76,77,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,83,70,83,73,76],
[63,0,62,94,66,79,52,80],
[66,69,0,65,78,76,71,73],
[48,37,66,0,66,74,59,57],
[61,65,53,65,0,75,74,62],
[48,52,55,57,56,0,52,58],
[58,79,60,72,57,79,0,68],
[55,51,58,74,69,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,57,69,58,63,60],
[74,0,58,64,71,70,81,74],
[75,73,0,65,70,63,64,73],
[74,67,66,0,67,64,71,70],
[62,60,61,64,0,65,70,69],
[73,61,68,67,66,0,69,68],
[68,50,67,60,61,62,0,69],
[71,57,58,61,62,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,68,67,60,65,59],
[68,0,69,74,69,61,62,75],
[70,62,0,73,69,52,69,60],
[63,57,58,0,71,65,59,66],
[64,62,62,60,0,67,67,54],
[71,70,79,66,64,0,61,57],
[66,69,62,72,64,70,0,64],
[72,56,71,65,77,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,58,69,68,60,57],
[72,0,65,70,86,76,69,70],
[66,66,0,53,72,70,68,60],
[73,61,78,0,91,86,81,77],
[62,45,59,40,0,73,66,63],
[63,55,61,45,58,0,57,57],
[71,62,63,50,65,74,0,55],
[74,61,71,54,68,74,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,55,44,55,31,43,66],
[78,0,79,56,67,55,67,88],
[76,52,0,55,64,42,54,88],
[87,75,76,0,44,52,54,88],
[76,64,67,87,0,42,54,77],
[100,76,89,79,89,0,45,99],
[88,64,77,77,77,86,0,98],
[65,43,43,43,54,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,64,62,67,58,65],
[65,0,78,64,67,68,60,71],
[60,53,0,74,68,71,70,66],
[67,67,57,0,66,72,61,63],
[69,64,63,65,0,59,63,67],
[64,63,60,59,72,0,64,66],
[73,71,61,70,68,67,0,65],
[66,60,65,68,64,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,67,56,59,74,59],
[69,0,58,60,59,63,67,67],
[75,73,0,57,66,76,79,68],
[64,71,74,0,76,74,87,72],
[75,72,65,55,0,70,76,78],
[72,68,55,57,61,0,63,75],
[57,64,52,44,55,68,0,53],
[72,64,63,59,53,56,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,72,67,57,62,57,61],
[75,0,75,76,70,72,63,66],
[59,56,0,72,68,75,71,66],
[64,55,59,0,59,60,53,66],
[74,61,63,72,0,66,68,59],
[69,59,56,71,65,0,60,59],
[74,68,60,78,63,71,0,63],
[70,65,65,65,72,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,83,65,63,70,62,63],
[55,0,56,50,62,55,63,54],
[48,75,0,60,61,55,58,59],
[66,81,71,0,69,64,66,70],
[68,69,70,62,0,59,59,63],
[61,76,76,67,72,0,69,72],
[69,68,73,65,72,62,0,70],
[68,77,72,61,68,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,100,89,101,88,100],
[58,0,55,73,88,89,72,101],
[72,76,0,72,119,58,88,73],
[31,58,59,0,104,59,73,55],
[42,43,12,27,0,28,73,43],
[30,42,73,72,103,0,87,57],
[43,59,43,58,58,44,0,44],
[31,30,58,76,88,74,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,59,70,55,87,71,68],
[54,0,68,63,54,71,75,58],
[72,63,0,64,74,83,63,63],
[61,68,67,0,56,76,68,61],
[76,77,57,75,0,76,74,59],
[44,60,48,55,55,0,57,62],
[60,56,68,63,57,74,0,75],
[63,73,68,70,72,69,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,80,56,63,60,55,67],
[83,0,75,71,63,64,77,79],
[51,56,0,59,53,50,55,36],
[75,60,72,0,62,61,51,60],
[68,68,78,69,0,72,51,53],
[71,67,81,70,59,0,66,53],
[76,54,76,80,80,65,0,70],
[64,52,95,71,78,78,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,76,73,68,69,62],
[66,0,57,72,53,71,67,63],
[70,74,0,72,65,79,67,70],
[55,59,59,0,57,69,68,61],
[58,78,66,74,0,70,58,62],
[63,60,52,62,61,0,62,61],
[62,64,64,63,73,69,0,62],
[69,68,61,70,69,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,61,56,71,80,66],
[64,0,49,63,59,64,68,69],
[67,82,0,53,66,72,68,69],
[70,68,78,0,60,62,82,70],
[75,72,65,71,0,59,80,80],
[60,67,59,69,72,0,82,70],
[51,63,63,49,51,49,0,60],
[65,62,62,61,51,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,54,60,85,64,64],
[58,0,62,62,63,70,52,47],
[64,69,0,67,68,75,61,61],
[77,69,64,0,60,79,70,70],
[71,68,63,71,0,76,69,64],
[46,61,56,52,55,0,67,56],
[67,79,70,61,62,64,0,64],
[67,84,70,61,67,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,74,77,67,62,64],
[68,0,63,57,58,64,59,63],
[63,68,0,68,76,69,71,74],
[57,74,63,0,69,63,77,65],
[54,73,55,62,0,72,53,64],
[64,67,62,68,59,0,65,74],
[69,72,60,54,78,66,0,68],
[67,68,57,66,67,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,70,82,61,67,81,69],
[52,0,69,60,66,63,69,62],
[61,62,0,73,62,64,70,65],
[49,71,58,0,59,67,59,58],
[70,65,69,72,0,73,71,61],
[64,68,67,64,58,0,74,69],
[50,62,61,72,60,57,0,64],
[62,69,66,73,70,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,61,68,76,77,61,67],
[55,0,62,63,65,65,59,63],
[70,69,0,68,75,65,74,58],
[63,68,63,0,72,76,60,57],
[55,66,56,59,0,60,60,55],
[54,66,66,55,71,0,59,54],
[70,72,57,71,71,72,0,69],
[64,68,73,74,76,77,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,66,60,67,71,57],
[70,0,75,70,65,68,74,68],
[65,56,0,55,69,48,63,63],
[65,61,76,0,63,55,68,59],
[71,66,62,68,0,56,77,60],
[64,63,83,76,75,0,81,76],
[60,57,68,63,54,50,0,56],
[74,63,68,72,71,55,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,64,60,71,73,67],
[59,0,56,65,58,54,58,68],
[65,75,0,68,61,66,73,78],
[67,66,63,0,59,67,62,73],
[71,73,70,72,0,63,71,74],
[60,77,65,64,68,0,72,76],
[58,73,58,69,60,59,0,68],
[64,63,53,58,57,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,55,52,59,63,56,66],
[78,0,72,52,71,54,61,66],
[76,59,0,57,68,65,63,71],
[79,79,74,0,82,58,66,81],
[72,60,63,49,0,49,51,71],
[68,77,66,73,82,0,63,73],
[75,70,68,65,80,68,0,62],
[65,65,60,50,60,58,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,65,50,65,61,64],
[75,0,76,76,66,69,65,68],
[69,55,0,73,74,68,66,58],
[66,55,58,0,44,59,52,52],
[81,65,57,87,0,61,62,58],
[66,62,63,72,70,0,62,53],
[70,66,65,79,69,69,0,68],
[67,63,73,79,73,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,76,68,73,67,77],
[68,0,72,63,66,76,69,71],
[61,59,0,70,65,71,61,74],
[55,68,61,0,63,69,61,70],
[63,65,66,68,0,66,60,71],
[58,55,60,62,65,0,65,59],
[64,62,70,70,71,66,0,67],
[54,60,57,61,60,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,55,59,49,43,52,58],
[61,0,66,56,48,47,46,51],
[76,65,0,72,67,62,58,74],
[72,75,59,0,50,69,68,72],
[82,83,64,81,0,59,60,74],
[88,84,69,62,72,0,88,78],
[79,85,73,63,71,43,0,72],
[73,80,57,59,57,53,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,51,69,84,63,70,86],
[71,0,75,54,81,68,75,89],
[80,56,0,74,86,68,82,87],
[62,77,57,0,76,62,65,81],
[47,50,45,55,0,53,54,81],
[68,63,63,69,78,0,70,74],
[61,56,49,66,77,61,0,72],
[45,42,44,50,50,57,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,66,75,61,71,74],
[57,0,60,63,72,53,59,73],
[64,71,0,66,72,64,72,74],
[65,68,65,0,67,72,67,65],
[56,59,59,64,0,70,56,65],
[70,78,67,59,61,0,62,78],
[60,72,59,64,75,69,0,73],
[57,58,57,66,66,53,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,61,60,48,46,47],
[77,0,77,58,62,63,68,65],
[76,54,0,77,69,58,65,67],
[70,73,54,0,68,52,64,48],
[71,69,62,63,0,61,79,46],
[83,68,73,79,70,0,81,63],
[85,63,66,67,52,50,0,63],
[84,66,64,83,85,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,55,61,70,62,61,64],
[69,0,64,74,78,73,68,70],
[76,67,0,68,75,74,69,63],
[70,57,63,0,71,62,69,65],
[61,53,56,60,0,60,60,56],
[69,58,57,69,71,0,66,64],
[70,63,62,62,71,65,0,63],
[67,61,68,66,75,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,64,59,68,76,60],
[63,0,52,51,47,53,63,51],
[68,79,0,64,71,56,70,71],
[67,80,67,0,65,77,65,75],
[72,84,60,66,0,78,69,79],
[63,78,75,54,53,0,66,69],
[55,68,61,66,62,65,0,73],
[71,80,60,56,52,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,68,74,72,59,66],
[59,0,61,64,78,64,62,58],
[64,70,0,66,81,70,62,65],
[63,67,65,0,81,73,59,64],
[57,53,50,50,0,60,62,56],
[59,67,61,58,71,0,54,62],
[72,69,69,72,69,77,0,62],
[65,73,66,67,75,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,68,65,68,58,67],
[60,0,61,57,58,65,64,66],
[56,70,0,58,64,73,61,54],
[63,74,73,0,68,73,68,69],
[66,73,67,63,0,64,63,75],
[63,66,58,58,67,0,59,65],
[73,67,70,63,68,72,0,71],
[64,65,77,62,56,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,60,57,55,65,46],
[64,0,58,51,66,63,73,48],
[66,73,0,67,72,72,65,58],
[71,80,64,0,62,68,73,67],
[74,65,59,69,0,71,75,67],
[76,68,59,63,60,0,70,48],
[66,58,66,58,56,61,0,50],
[85,83,73,64,64,83,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,65,67,77,67,67],
[56,0,60,60,66,65,69,65],
[63,71,0,71,61,70,66,73],
[66,71,60,0,67,70,61,68],
[64,65,70,64,0,71,64,64],
[54,66,61,61,60,0,66,60],
[64,62,65,70,67,65,0,63],
[64,66,58,63,67,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,70,79,68,82,76],
[66,0,72,74,75,61,62,63],
[61,59,0,74,76,63,65,67],
[61,57,57,0,70,66,66,55],
[52,56,55,61,0,63,62,58],
[63,70,68,65,68,0,71,61],
[49,69,66,65,69,60,0,57],
[55,68,64,76,73,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,69,70,66,62,68],
[69,0,72,81,83,63,66,75],
[67,59,0,69,76,67,63,69],
[62,50,62,0,67,54,55,57],
[61,48,55,64,0,57,58,59],
[65,68,64,77,74,0,67,70],
[69,65,68,76,73,64,0,78],
[63,56,62,74,72,61,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,78,67,81,61,87,77],
[52,0,59,64,70,62,67,67],
[53,72,0,63,76,61,57,64],
[64,67,68,0,65,57,75,70],
[50,61,55,66,0,55,54,66],
[70,69,70,74,76,0,63,70],
[44,64,74,56,77,68,0,51],
[54,64,67,61,65,61,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,56,54,57,59,55],
[75,0,74,68,63,68,72,69],
[66,57,0,54,54,56,68,59],
[75,63,77,0,62,71,74,68],
[77,68,77,69,0,65,73,69],
[74,63,75,60,66,0,64,61],
[72,59,63,57,58,67,0,60],
[76,62,72,63,62,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,75,60,74,60,90],
[59,0,89,104,46,59,60,60],
[71,42,0,60,30,75,60,76],
[56,27,71,0,12,30,57,60],
[71,85,101,119,0,74,60,90],
[57,72,56,101,57,0,88,74],
[71,71,71,74,71,43,0,59],
[41,71,55,71,41,57,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,74,63,69,65,64,66],
[52,0,63,56,61,51,61,64],
[57,68,0,55,54,49,50,56],
[68,75,76,0,76,53,66,72],
[62,70,77,55,0,56,50,66],
[66,80,82,78,75,0,63,74],
[67,70,81,65,81,68,0,74],
[65,67,75,59,65,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,53,51,48,50,52,46],
[82,0,69,71,61,75,72,68],
[78,62,0,69,59,64,71,69],
[80,60,62,0,72,64,70,66],
[83,70,72,59,0,61,77,64],
[81,56,67,67,70,0,64,74],
[79,59,60,61,54,67,0,65],
[85,63,62,65,67,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,68,60,55,67,65],
[68,0,66,80,63,68,73,67],
[74,65,0,79,68,75,70,68],
[63,51,52,0,57,62,59,60],
[71,68,63,74,0,65,72,71],
[76,63,56,69,66,0,57,62],
[64,58,61,72,59,74,0,66],
[66,64,63,71,60,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,60,82,98,70,59,59],
[51,0,74,61,71,89,72,72],
[71,57,0,73,85,46,65,75],
[49,70,58,0,58,49,49,49],
[33,60,46,73,0,63,37,46],
[61,42,85,82,68,0,46,37],
[72,59,66,82,94,85,0,67],
[72,59,56,82,85,94,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,63,73,61,69,60],
[58,0,56,66,71,57,63,61],
[65,75,0,70,85,73,73,62],
[68,65,61,0,79,67,60,68],
[58,60,46,52,0,61,57,55],
[70,74,58,64,70,0,67,67],
[62,68,58,71,74,64,0,75],
[71,70,69,63,76,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,74,63,70,57,64],
[63,0,67,68,61,58,58,64],
[61,64,0,66,60,66,62,61],
[57,63,65,0,69,61,63,65],
[68,70,71,62,0,63,62,65],
[61,73,65,70,68,0,70,65],
[74,73,69,68,69,61,0,71],
[67,67,70,66,66,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,75,62,76,68,62],
[67,0,72,72,79,74,65,74],
[53,59,0,62,68,60,48,54],
[56,59,69,0,56,63,66,67],
[69,52,63,75,0,66,69,64],
[55,57,71,68,65,0,67,66],
[63,66,83,65,62,64,0,56],
[69,57,77,64,67,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,72,68,59,74,70],
[61,0,68,74,61,62,55,59],
[60,63,0,70,68,56,58,50],
[59,57,61,0,57,50,54,50],
[63,70,63,74,0,63,62,59],
[72,69,75,81,68,0,68,63],
[57,76,73,77,69,63,0,64],
[61,72,81,81,72,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,59,54,60,61,61],
[73,0,63,60,64,62,63,74],
[69,68,0,64,69,63,66,77],
[72,71,67,0,67,66,58,73],
[77,67,62,64,0,62,59,73],
[71,69,68,65,69,0,69,74],
[70,68,65,73,72,62,0,74],
[70,57,54,58,58,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,52,61,68,68,65],
[68,0,53,55,53,66,53,51],
[78,78,0,60,68,80,69,65],
[79,76,71,0,62,72,66,67],
[70,78,63,69,0,74,61,64],
[63,65,51,59,57,0,54,60],
[63,78,62,65,70,77,0,70],
[66,80,66,64,67,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,52,59,73,66,49,70],
[71,0,64,70,84,75,59,78],
[79,67,0,80,81,80,60,78],
[72,61,51,0,72,64,62,71],
[58,47,50,59,0,62,49,74],
[65,56,51,67,69,0,67,86],
[82,72,71,69,82,64,0,79],
[61,53,53,60,57,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,60,57,63,55,71,70],
[55,0,63,58,65,68,67,63],
[71,68,0,68,63,57,56,64],
[74,73,63,0,72,72,63,62],
[68,66,68,59,0,66,84,60],
[76,63,74,59,65,0,72,69],
[60,64,75,68,47,59,0,69],
[61,68,67,69,71,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,66,70,62,77,62],
[60,0,71,69,70,76,73,69],
[61,60,0,59,62,59,64,66],
[65,62,72,0,68,62,72,67],
[61,61,69,63,0,60,66,74],
[69,55,72,69,71,0,69,74],
[54,58,67,59,65,62,0,62],
[69,62,65,64,57,57,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,59,72,52,53,70,72],
[83,0,69,64,70,63,72,84],
[72,62,0,60,64,57,69,68],
[59,67,71,0,64,68,69,74],
[79,61,67,67,0,68,77,78],
[78,68,74,63,63,0,66,72],
[61,59,62,62,54,65,0,66],
[59,47,63,57,53,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,73,77,80,74,68],
[71,0,70,75,70,81,69,64],
[69,61,0,78,69,68,69,61],
[58,56,53,0,64,68,60,60],
[54,61,62,67,0,67,67,68],
[51,50,63,63,64,0,69,60],
[57,62,62,71,64,62,0,59],
[63,67,70,71,63,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,30,52,83,84,53,71],
[54,0,30,64,84,74,65,83],
[101,101,0,80,91,108,58,76],
[79,67,51,0,96,96,76,73],
[48,47,40,35,0,53,33,65],
[47,57,23,35,78,0,33,55],
[78,66,73,55,98,98,0,64],
[60,48,55,58,66,76,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,67,65,67,91,74],
[78,0,59,73,65,79,93,80],
[66,72,0,51,46,59,91,74],
[64,58,80,0,72,58,92,81],
[66,66,85,59,0,70,85,85],
[64,52,72,73,61,0,80,82],
[40,38,40,39,46,51,0,51],
[57,51,57,50,46,49,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,92,54,65,52,53],
[66,0,53,80,81,65,51,80],
[64,78,0,91,66,63,76,91],
[39,51,40,0,53,52,38,53],
[77,50,65,78,0,90,63,78],
[66,66,68,79,41,0,54,40],
[79,80,55,93,68,77,0,54],
[78,51,40,78,53,91,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,64,76,71,77,75,56],
[39,0,60,48,45,48,66,34],
[67,71,0,58,60,62,56,50],
[55,83,73,0,61,65,89,72],
[60,86,71,70,0,71,75,72],
[54,83,69,66,60,0,66,45],
[56,65,75,42,56,65,0,62],
[75,97,81,59,59,86,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,69,88,82,60,79,60],
[50,0,50,78,58,44,78,40],
[62,81,0,79,86,70,103,71],
[43,53,52,0,76,61,72,66],
[49,73,45,55,0,64,80,60],
[71,87,61,70,67,0,85,73],
[52,53,28,59,51,46,0,42],
[71,91,60,65,71,58,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,65,76,64,66,67],
[62,0,72,59,64,59,67,68],
[59,59,0,66,65,57,65,64],
[66,72,65,0,66,67,63,74],
[55,67,66,65,0,57,64,64],
[67,72,74,64,74,0,67,69],
[65,64,66,68,67,64,0,71],
[64,63,67,57,67,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,72,74,75,74,63],
[60,0,63,57,65,58,64,45],
[64,68,0,66,64,59,71,60],
[59,74,65,0,75,68,73,82],
[57,66,67,56,0,59,81,50],
[56,73,72,63,72,0,76,66],
[57,67,60,58,50,55,0,54],
[68,86,71,49,81,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,68,64,78,60,62],
[65,0,65,61,62,68,62,65],
[58,66,0,67,58,65,60,70],
[63,70,64,0,64,64,64,55],
[67,69,73,67,0,75,64,70],
[53,63,66,67,56,0,63,65],
[71,69,71,67,67,68,0,63],
[69,66,61,76,61,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,64,56,62,60,57,70],
[89,0,62,75,61,68,64,68],
[67,69,0,72,61,65,58,75],
[75,56,59,0,57,48,57,66],
[69,70,70,74,0,55,65,71],
[71,63,66,83,76,0,72,73],
[74,67,73,74,66,59,0,73],
[61,63,56,65,60,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,58,70,67,76,72,76],
[63,0,67,67,63,74,57,62],
[73,64,0,71,63,69,70,66],
[61,64,60,0,59,68,61,52],
[64,68,68,72,0,69,61,63],
[55,57,62,63,62,0,59,58],
[59,74,61,70,70,72,0,65],
[55,69,65,79,68,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,76,66,64,66,67,75],
[42,0,61,39,57,44,47,41],
[55,70,0,62,71,67,60,59],
[65,92,69,0,71,62,65,63],
[67,74,60,60,0,54,71,62],
[65,87,64,69,77,0,81,75],
[64,84,71,66,60,50,0,71],
[56,90,72,68,69,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,67,90,69,58,76],
[71,0,64,70,70,67,53,60],
[67,67,0,79,72,65,71,65],
[64,61,52,0,68,74,68,65],
[41,61,59,63,0,60,59,41],
[62,64,66,57,71,0,63,53],
[73,78,60,63,72,68,0,55],
[55,71,66,66,90,78,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,69,69,71,70,67],
[69,0,67,72,67,64,65,58],
[60,64,0,50,63,44,58,45],
[62,59,81,0,61,64,72,65],
[62,64,68,70,0,68,68,73],
[60,67,87,67,63,0,82,67],
[61,66,73,59,63,49,0,53],
[64,73,86,66,58,64,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,77,90,71,62,73,88],
[60,0,91,70,60,78,71,89],
[54,40,0,52,48,58,56,62],
[41,61,79,0,37,43,48,71],
[60,71,83,94,0,60,74,81],
[69,53,73,88,71,0,75,82],
[58,60,75,83,57,56,0,93],
[43,42,69,60,50,49,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,74,66,60,59,61,46],
[71,0,62,63,61,65,74,57],
[57,69,0,66,61,69,56,32],
[65,68,65,0,30,67,76,59],
[71,70,70,101,0,81,62,75],
[72,66,62,64,50,0,59,52],
[70,57,75,55,69,72,0,61],
[85,74,99,72,56,79,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,53,58,67,63,64],
[73,0,65,66,75,64,65,66],
[68,66,0,64,68,62,64,74],
[78,65,67,0,64,70,69,74],
[73,56,63,67,0,64,73,70],
[64,67,69,61,67,0,68,75],
[68,66,67,62,58,63,0,70],
[67,65,57,57,61,56,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,60,64,69,63,68],
[69,0,75,69,71,68,65,66],
[65,56,0,70,70,67,60,60],
[71,62,61,0,64,67,59,57],
[67,60,61,67,0,69,59,57],
[62,63,64,64,62,0,68,71],
[68,66,71,72,72,63,0,55],
[63,65,71,74,74,60,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,55,58,58,69,62],
[63,0,69,62,70,64,63,57],
[64,62,0,64,81,61,75,69],
[76,69,67,0,73,55,67,59],
[73,61,50,58,0,54,60,51],
[73,67,70,76,77,0,70,65],
[62,68,56,64,71,61,0,67],
[69,74,62,72,80,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,57,72,73,80,68,64],
[58,0,65,64,65,59,69,67],
[74,66,0,74,63,57,72,63],
[59,67,57,0,64,77,59,65],
[58,66,68,67,0,61,64,52],
[51,72,74,54,70,0,67,46],
[63,62,59,72,67,64,0,48],
[67,64,68,66,79,85,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,86,64,45,65,86],
[66,0,67,41,41,66,43,63],
[63,64,0,63,41,86,85,63],
[45,90,68,0,66,68,67,42],
[67,90,90,65,0,45,67,64],
[86,65,45,63,86,0,65,63],
[66,88,46,64,64,66,0,63],
[45,68,68,89,67,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,57,64,63,80,61,62],
[51,0,68,66,58,66,52,62],
[74,63,0,60,70,71,56,47],
[67,65,71,0,68,91,61,68],
[68,73,61,63,0,73,60,53],
[51,65,60,40,58,0,43,46],
[70,79,75,70,71,88,0,41],
[69,69,84,63,78,85,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,62,66,72,72,62],
[72,0,67,64,53,67,63,59],
[65,64,0,64,65,69,70,60],
[69,67,67,0,63,70,63,68],
[65,78,66,68,0,76,71,64],
[59,64,62,61,55,0,64,65],
[59,68,61,68,60,67,0,58],
[69,72,71,63,67,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,62,60,62,60,56],
[69,0,70,62,57,63,59,62],
[63,61,0,59,60,60,59,57],
[69,69,72,0,67,63,61,68],
[71,74,71,64,0,66,73,74],
[69,68,71,68,65,0,66,61],
[71,72,72,70,58,65,0,68],
[75,69,74,63,57,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,69,78,67,77,65],
[65,0,70,63,79,76,72,70],
[67,61,0,55,75,66,75,71],
[62,68,76,0,80,65,79,68],
[53,52,56,51,0,58,68,53],
[64,55,65,66,73,0,80,71],
[54,59,56,52,63,51,0,61],
[66,61,60,63,78,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,64,68,69,71,70],
[73,0,66,78,72,70,65,77],
[72,65,0,65,71,67,66,70],
[67,53,66,0,70,59,58,77],
[63,59,60,61,0,72,68,68],
[62,61,64,72,59,0,66,70],
[60,66,65,73,63,65,0,75],
[61,54,61,54,63,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,62,74,58,62,45],
[59,0,65,68,61,49,62,55],
[72,66,0,72,55,58,69,56],
[69,63,59,0,66,55,71,56],
[57,70,76,65,0,47,61,66],
[73,82,73,76,84,0,80,57],
[69,69,62,60,70,51,0,59],
[86,76,75,75,65,74,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,70,71,76,71,66,65],
[51,0,72,60,61,55,56,43],
[61,59,0,44,66,49,63,61],
[60,71,87,0,71,72,54,47],
[55,70,65,60,0,45,59,47],
[60,76,82,59,86,0,53,47],
[65,75,68,77,72,78,0,77],
[66,88,70,84,84,84,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,68,75,88,63,70],
[67,0,64,63,78,82,67,58],
[65,67,0,77,83,82,65,63],
[63,68,54,0,66,69,67,61],
[56,53,48,65,0,63,60,64],
[43,49,49,62,68,0,58,58],
[68,64,66,64,71,73,0,68],
[61,73,68,70,67,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,61,52,56,57,65],
[67,0,64,74,63,60,64,75],
[68,67,0,63,64,54,56,68],
[70,57,68,0,69,66,63,72],
[79,68,67,62,0,63,60,73],
[75,71,77,65,68,0,74,74],
[74,67,75,68,71,57,0,77],
[66,56,63,59,58,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,69,70,65,64,60],
[66,0,66,62,64,72,69,63],
[72,65,0,67,73,66,65,70],
[62,69,64,0,68,64,64,62],
[61,67,58,63,0,59,58,58],
[66,59,65,67,72,0,69,62],
[67,62,66,67,73,62,0,63],
[71,68,61,69,73,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,70,67,68,53,64],
[71,0,76,73,69,61,64,67],
[71,55,0,62,67,58,58,63],
[61,58,69,0,68,57,58,70],
[64,62,64,63,0,60,58,62],
[63,70,73,74,71,0,69,70],
[78,67,73,73,73,62,0,66],
[67,64,68,61,69,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,61,69,67,72,61],
[60,0,63,62,73,69,73,62],
[65,68,0,60,59,60,69,52],
[70,69,71,0,72,61,76,69],
[62,58,72,59,0,52,66,62],
[64,62,71,70,79,0,73,59],
[59,58,62,55,65,58,0,54],
[70,69,79,62,69,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,59,64,60,60,62,70],
[59,0,60,67,61,54,56,60],
[72,71,0,66,63,65,68,77],
[67,64,65,0,69,66,71,64],
[71,70,68,62,0,63,60,70],
[71,77,66,65,68,0,59,72],
[69,75,63,60,71,72,0,69],
[61,71,54,67,61,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,68,55,61,66,67],
[69,0,76,72,73,65,77,77],
[62,55,0,60,67,69,78,80],
[63,59,71,0,73,61,69,79],
[76,58,64,58,0,65,73,74],
[70,66,62,70,66,0,81,75],
[65,54,53,62,58,50,0,68],
[64,54,51,52,57,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,56,72,73,70,81,66],
[68,0,60,71,57,63,69,54],
[75,71,0,68,89,75,63,56],
[59,60,63,0,57,66,58,54],
[58,74,42,74,0,76,78,53],
[61,68,56,65,55,0,63,55],
[50,62,68,73,53,68,0,47],
[65,77,75,77,78,76,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,55,112,131,94,94,94],
[58,0,38,75,94,75,75,94],
[76,93,0,74,93,56,74,93],
[19,56,57,0,114,20,57,76],
[0,37,38,17,0,37,74,74],
[37,56,75,111,94,0,74,93],
[37,56,57,74,57,57,0,111],
[37,37,38,55,57,38,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,68,79,71,64,70],
[67,0,55,70,74,68,68,77],
[57,76,0,73,75,77,73,68],
[63,61,58,0,57,57,66,56],
[52,57,56,74,0,61,59,67],
[60,63,54,74,70,0,65,75],
[67,63,58,65,72,66,0,69],
[61,54,63,75,64,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,77,65,74,72,77,74],
[53,0,57,62,76,58,63,63],
[54,74,0,63,70,63,70,68],
[66,69,68,0,80,63,69,73],
[57,55,61,51,0,58,56,54],
[59,73,68,68,73,0,70,67],
[54,68,61,62,75,61,0,74],
[57,68,63,58,77,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,82,97,73,62,88,82],
[55,0,84,87,56,68,70,69],
[49,47,0,69,52,56,54,79],
[34,44,62,0,56,66,73,72],
[58,75,79,75,0,60,61,78],
[69,63,75,65,71,0,56,68],
[43,61,77,58,70,75,0,79],
[49,62,52,59,53,63,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,77,62,60,88,79,60],
[51,0,68,61,60,96,60,61],
[54,63,0,71,62,80,53,54],
[69,70,60,0,60,88,61,61],
[71,71,69,71,0,62,78,52],
[43,35,51,43,69,0,70,70],
[52,71,78,70,53,61,0,51],
[71,70,77,70,79,61,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,75,83,77,69,70],
[73,0,68,76,74,71,63,71],
[64,63,0,80,78,73,66,79],
[56,55,51,0,68,58,64,67],
[48,57,53,63,0,49,54,59],
[54,60,58,73,82,0,66,74],
[62,68,65,67,77,65,0,67],
[61,60,52,64,72,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,65,68,69,78,80],
[59,0,88,87,76,57,65,83],
[58,43,0,52,57,52,53,50],
[66,44,79,0,65,52,67,64],
[63,55,74,66,0,65,59,65],
[62,74,79,79,66,0,65,87],
[53,66,78,64,72,66,0,64],
[51,48,81,67,66,44,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,66,65,64,70,76],
[61,0,69,60,56,64,63,70],
[56,62,0,66,57,55,63,62],
[65,71,65,0,63,69,75,77],
[66,75,74,68,0,61,70,67],
[67,67,76,62,70,0,59,77],
[61,68,68,56,61,72,0,77],
[55,61,69,54,64,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,60,72,60,62,61],
[72,0,71,69,82,83,68,64],
[72,60,0,66,59,70,60,67],
[71,62,65,0,80,71,61,69],
[59,49,72,51,0,64,62,66],
[71,48,61,60,67,0,63,53],
[69,63,71,70,69,68,0,65],
[70,67,64,62,65,78,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,60,67,53,66,65],
[73,0,69,58,73,58,63,63],
[69,62,0,51,55,56,68,58],
[71,73,80,0,75,63,72,69],
[64,58,76,56,0,57,69,72],
[78,73,75,68,74,0,65,78],
[65,68,63,59,62,66,0,61],
[66,68,73,62,59,53,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,74,58,56,56,58],
[72,0,73,79,70,74,61,62],
[65,58,0,62,58,56,60,55],
[57,52,69,0,61,58,57,54],
[73,61,73,70,0,62,65,63],
[75,57,75,73,69,0,73,67],
[75,70,71,74,66,58,0,57],
[73,69,76,77,68,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,65,69,71,69,67],
[61,0,60,76,71,71,64,72],
[56,71,0,67,66,71,67,62],
[66,55,64,0,74,62,57,67],
[62,60,65,57,0,62,60,68],
[60,60,60,69,69,0,66,65],
[62,67,64,74,71,65,0,76],
[64,59,69,64,63,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,64,52,62,59,62],
[67,0,67,71,55,65,70,65],
[72,64,0,63,50,60,63,63],
[67,60,68,0,56,63,65,59],
[79,76,81,75,0,72,75,64],
[69,66,71,68,59,0,65,74],
[72,61,68,66,56,66,0,66],
[69,66,68,72,67,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,55,62,51,54,55,66],
[57,0,57,65,63,55,61,56],
[76,74,0,63,68,72,63,62],
[69,66,68,0,67,65,72,69],
[80,68,63,64,0,66,72,63],
[77,76,59,66,65,0,71,68],
[76,70,68,59,59,60,0,59],
[65,75,69,62,68,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,68,71,58,74,74],
[69,0,59,73,67,73,70,70],
[63,72,0,77,76,72,87,80],
[63,58,54,0,68,48,73,57],
[60,64,55,63,0,68,80,61],
[73,58,59,83,63,0,85,79],
[57,61,44,58,51,46,0,59],
[57,61,51,74,70,52,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,74,75,88,69,73],
[52,0,62,63,64,73,28,68],
[67,69,0,59,59,60,60,75],
[57,68,72,0,71,75,58,81],
[56,67,72,60,0,63,54,79],
[43,58,71,56,68,0,50,67],
[62,103,71,73,77,81,0,83],
[58,63,56,50,52,64,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,72,62,52,56,65],
[67,0,66,70,58,57,63,69],
[60,65,0,71,63,55,70,65],
[59,61,60,0,67,59,60,63],
[69,73,68,64,0,81,78,72],
[79,74,76,72,50,0,72,74],
[75,68,61,71,53,59,0,76],
[66,62,66,68,59,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,76,75,56,58,64,68],
[70,0,75,67,67,73,72,65],
[55,56,0,62,48,61,59,76],
[56,64,69,0,48,61,67,61],
[75,64,83,83,0,68,64,70],
[73,58,70,70,63,0,72,69],
[67,59,72,64,67,59,0,64],
[63,66,55,70,61,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,49,52,47,50,58,49],
[67,0,41,52,54,46,41,36],
[82,90,0,72,63,69,65,69],
[79,79,59,0,60,60,60,47],
[84,77,68,71,0,53,62,68],
[81,85,62,71,78,0,67,58],
[73,90,66,71,69,64,0,62],
[82,95,62,84,63,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,81,70,41,92,63,50],
[48,0,40,48,32,72,81,50],
[50,91,0,60,30,89,102,69],
[61,83,71,0,41,89,81,50],
[90,99,101,90,0,89,82,48],
[39,59,42,42,42,0,51,37],
[68,50,29,50,49,80,0,50],
[81,81,62,81,83,94,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,73,65,65,78,59,63],
[35,0,51,60,52,49,52,45],
[58,80,0,43,73,53,50,81],
[66,71,88,0,51,56,60,66],
[66,79,58,80,0,63,64,60],
[53,82,78,75,68,0,45,48],
[72,79,81,71,67,86,0,61],
[68,86,50,65,71,83,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,72,67,78,68,74],
[59,0,61,79,69,73,61,71],
[67,70,0,81,74,73,63,75],
[59,52,50,0,61,69,60,64],
[64,62,57,70,0,75,62,72],
[53,58,58,62,56,0,56,71],
[63,70,68,71,69,75,0,72],
[57,60,56,67,59,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,83,65,86,86,81,72],
[59,0,68,61,75,73,73,59],
[48,63,0,57,69,64,60,53],
[66,70,74,0,80,83,74,63],
[45,56,62,51,0,63,64,50],
[45,58,67,48,68,0,73,55],
[50,58,71,57,67,58,0,50],
[59,72,78,68,81,76,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,49,69,50,63,68,67],
[72,0,51,57,51,67,67,67],
[82,80,0,87,71,63,71,77],
[62,74,44,0,52,56,77,72],
[81,80,60,79,0,70,71,64],
[68,64,68,75,61,0,70,67],
[63,64,60,54,60,61,0,62],
[64,64,54,59,67,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,62,52,59,50,48],
[83,0,61,69,75,69,74,70],
[82,70,0,68,63,78,66,71],
[69,62,63,0,75,83,66,68],
[79,56,68,56,0,80,70,63],
[72,62,53,48,51,0,53,65],
[81,57,65,65,61,78,0,63],
[83,61,60,63,68,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,131,44,131,44,131,87,131],
[0,0,44,131,44,87,0,44],
[87,87,0,87,44,87,43,131],
[0,0,44,0,44,43,0,44],
[87,87,87,87,0,87,43,131],
[0,44,44,88,44,0,0,88],
[44,131,88,131,88,131,0,131],
[0,87,0,87,0,43,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,58,44,52,75,59],
[72,0,71,57,29,77,51,46],
[76,60,0,65,49,81,47,57],
[73,74,66,0,69,76,61,68],
[87,102,82,62,0,93,65,83],
[79,54,50,55,38,0,64,61],
[56,80,84,70,66,67,0,68],
[72,85,74,63,48,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,67,81,56,43,34,47],
[79,0,75,68,76,54,50,57],
[64,56,0,72,64,49,50,52],
[50,63,59,0,63,47,41,39],
[75,55,67,68,0,48,59,69],
[88,77,82,84,83,0,58,58],
[97,81,81,90,72,73,0,65],
[84,74,79,92,62,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,55,70,78,59,71],
[54,0,68,68,66,69,58,48],
[59,63,0,70,63,74,64,61],
[76,63,61,0,70,72,81,69],
[61,65,68,61,0,78,65,68],
[53,62,57,59,53,0,63,61],
[72,73,67,50,66,68,0,71],
[60,83,70,62,63,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,70,67,72,68,69],
[72,0,65,77,65,77,62,66],
[67,66,0,72,64,76,63,71],
[61,54,59,0,66,68,58,64],
[64,66,67,65,0,78,60,73],
[59,54,55,63,53,0,55,58],
[63,69,68,73,71,76,0,75],
[62,65,60,67,58,73,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,66,73,62,72,67],
[69,0,64,72,64,77,65,75],
[66,67,0,75,64,60,59,72],
[65,59,56,0,64,55,59,66],
[58,67,67,67,0,77,68,73],
[69,54,71,76,54,0,65,77],
[59,66,72,72,63,66,0,74],
[64,56,59,65,58,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,59,60,61,72,65,62],
[82,0,77,70,73,62,60,73],
[72,54,0,62,55,73,48,52],
[71,61,69,0,68,72,65,60],
[70,58,76,63,0,68,69,69],
[59,69,58,59,63,0,53,48],
[66,71,83,66,62,78,0,76],
[69,58,79,71,62,83,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,62,72,72,59,64],
[67,0,67,64,68,74,59,74],
[60,64,0,59,71,70,62,79],
[69,67,72,0,63,69,70,78],
[59,63,60,68,0,65,59,70],
[59,57,61,62,66,0,54,72],
[72,72,69,61,72,77,0,80],
[67,57,52,53,61,59,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,62,73,79,66,64],
[65,0,68,73,78,71,70,73],
[71,63,0,71,82,80,84,75],
[69,58,60,0,76,77,65,69],
[58,53,49,55,0,72,61,70],
[52,60,51,54,59,0,58,59],
[65,61,47,66,70,73,0,65],
[67,58,56,62,61,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,70,65,66,70,62],
[70,0,58,68,78,51,63,57],
[72,73,0,62,72,48,64,62],
[61,63,69,0,67,64,57,67],
[66,53,59,64,0,69,71,68],
[65,80,83,67,62,0,65,70],
[61,68,67,74,60,66,0,59],
[69,74,69,64,63,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,70,66,68,39,40],
[83,0,61,79,56,81,61,61],
[88,70,0,77,69,77,74,58],
[61,52,54,0,56,68,65,50],
[65,75,62,75,0,86,67,66],
[63,50,54,63,45,0,60,55],
[92,70,57,66,64,71,0,61],
[91,70,73,81,65,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,52,66,59,59,53],
[66,0,76,69,64,58,76,73],
[71,55,0,69,74,66,74,62],
[79,62,62,0,70,62,68,60],
[65,67,57,61,0,60,58,61],
[72,73,65,69,71,0,76,62],
[72,55,57,63,73,55,0,54],
[78,58,69,71,70,69,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,54,70,76,61,87],
[63,0,81,46,57,64,57,81],
[57,50,0,60,47,50,48,68],
[77,85,71,0,48,69,70,75],
[61,74,84,83,0,81,74,72],
[55,67,81,62,50,0,56,75],
[70,74,83,61,57,75,0,92],
[44,50,63,56,59,56,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,78,53,66,61,82,63],
[56,0,64,46,71,51,73,60],
[53,67,0,51,70,54,68,70],
[78,85,80,0,73,63,63,75],
[65,60,61,58,0,68,65,63],
[70,80,77,68,63,0,73,83],
[49,58,63,68,66,58,0,66],
[68,71,61,56,68,48,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,63,72,77,76,89,77],
[51,0,54,51,80,71,79,68],
[68,77,0,54,81,74,77,79],
[59,80,77,0,73,66,72,74],
[54,51,50,58,0,62,70,62],
[55,60,57,65,69,0,86,75],
[42,52,54,59,61,45,0,51],
[54,63,52,57,69,56,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,56,61,65,53,59],
[68,0,65,66,67,74,68,69],
[74,66,0,64,69,71,59,70],
[75,65,67,0,70,71,65,74],
[70,64,62,61,0,70,61,72],
[66,57,60,60,61,0,58,61],
[78,63,72,66,70,73,0,76],
[72,62,61,57,59,70,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,70,57,66,67,69],
[59,0,51,61,63,53,71,63],
[68,80,0,72,64,66,75,69],
[61,70,59,0,62,57,68,65],
[74,68,67,69,0,61,81,72],
[65,78,65,74,70,0,78,71],
[64,60,56,63,50,53,0,62],
[62,68,62,66,59,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,63,62,69,66,68],
[62,0,54,62,61,56,62,69],
[64,77,0,73,67,61,67,76],
[68,69,58,0,58,63,56,57],
[69,70,64,73,0,65,70,69],
[62,75,70,68,66,0,63,67],
[65,69,64,75,61,68,0,70],
[63,62,55,74,62,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,51,71,55,53,38],
[63,0,49,57,70,53,53,47],
[72,82,0,73,76,70,72,65],
[80,74,58,0,81,71,80,66],
[60,61,55,50,0,55,55,41],
[76,78,61,60,76,0,74,38],
[78,78,59,51,76,57,0,39],
[93,84,66,65,90,93,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,80,82,70,70,64,61],
[70,0,77,79,83,72,67,44],
[51,54,0,66,64,59,56,42],
[49,52,65,0,52,64,48,36],
[61,48,67,79,0,60,61,45],
[61,59,72,67,71,0,75,69],
[67,64,75,83,70,56,0,45],
[70,87,89,95,86,62,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,90,73,65,63,84,51],
[68,0,83,82,57,60,81,73],
[41,48,0,63,42,42,58,57],
[58,49,68,0,58,65,57,50],
[66,74,89,73,0,73,83,59],
[68,71,89,66,58,0,81,76],
[47,50,73,74,48,50,0,49],
[80,58,74,81,72,55,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,76,20,57,95,58],
[93,0,58,95,75,57,77,58],
[93,73,0,112,55,93,94,75],
[55,36,19,0,36,54,38,39],
[111,56,76,95,0,95,95,58],
[74,74,38,77,36,0,38,58],
[36,54,37,93,36,93,0,39],
[73,73,56,92,73,73,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,47,54,46,44,55,63],
[80,0,72,79,65,69,83,78],
[84,59,0,73,54,63,79,90],
[77,52,58,0,43,66,65,72],
[85,66,77,88,0,62,73,72],
[87,62,68,65,69,0,65,70],
[76,48,52,66,58,66,0,71],
[68,53,41,59,59,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,67,64,74,67,80],
[61,0,74,67,65,78,74,82],
[55,57,0,62,59,63,59,80],
[64,64,69,0,64,73,62,75],
[67,66,72,67,0,59,65,70],
[57,53,68,58,72,0,60,66],
[64,57,72,69,66,71,0,86],
[51,49,51,56,61,65,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,71,57,59,68,56],
[65,0,72,77,62,57,72,62],
[64,59,0,71,62,59,59,58],
[60,54,60,0,66,58,71,57],
[74,69,69,65,0,65,64,71],
[72,74,72,73,66,0,60,64],
[63,59,72,60,67,71,0,65],
[75,69,73,74,60,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,71,64,67,71,60],
[68,0,67,65,62,71,63,68],
[58,64,0,52,57,67,65,64],
[60,66,79,0,68,78,70,66],
[67,69,74,63,0,79,74,67],
[64,60,64,53,52,0,55,60],
[60,68,66,61,57,76,0,67],
[71,63,67,65,64,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,75,71,73,80,66],
[72,0,68,66,70,70,62,71],
[64,63,0,67,74,67,65,68],
[56,65,64,0,62,70,65,67],
[60,61,57,69,0,66,65,70],
[58,61,64,61,65,0,63,58],
[51,69,66,66,66,68,0,62],
[65,60,63,64,61,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,58,45,47,62,35,64],
[87,0,70,67,65,81,68,75],
[73,61,0,50,62,57,49,57],
[86,64,81,0,63,83,68,73],
[84,66,69,68,0,74,63,69],
[69,50,74,48,57,0,43,51],
[96,63,82,63,68,88,0,59],
[67,56,74,58,62,80,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,56,66,61,74,63],
[66,0,60,55,61,56,55,55],
[67,71,0,46,63,64,69,51],
[75,76,85,0,75,70,77,60],
[65,70,68,56,0,64,64,64],
[70,75,67,61,67,0,77,70],
[57,76,62,54,67,54,0,58],
[68,76,80,71,67,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,50,75,87,70,82,87],
[41,0,48,41,53,41,47,70],
[81,83,0,60,67,63,68,67],
[56,90,71,0,61,75,63,92],
[44,78,64,70,0,57,55,80],
[61,90,68,56,74,0,68,81],
[49,84,63,68,76,63,0,75],
[44,61,64,39,51,50,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,62,66,71,68,61],
[70,0,71,71,63,76,68,64],
[70,60,0,68,71,67,64,71],
[69,60,63,0,58,65,67,67],
[65,68,60,73,0,69,59,61],
[60,55,64,66,62,0,64,61],
[63,63,67,64,72,67,0,61],
[70,67,60,64,70,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,64,64,64,64,71,61],
[77,0,67,74,68,68,79,62],
[67,64,0,58,62,66,75,55],
[67,57,73,0,68,66,73,70],
[67,63,69,63,0,66,75,59],
[67,63,65,65,65,0,71,59],
[60,52,56,58,56,60,0,56],
[70,69,76,61,72,72,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,70,69,63,56,65],
[66,0,66,68,64,67,59,70],
[65,65,0,67,61,70,60,53],
[61,63,64,0,69,62,67,60],
[62,67,70,62,0,64,62,63],
[68,64,61,69,67,0,58,64],
[75,72,71,64,69,73,0,71],
[66,61,78,71,68,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,59,62,64,66,53,73],
[83,0,72,63,73,67,72,69],
[72,59,0,71,69,67,67,80],
[69,68,60,0,67,66,66,66],
[67,58,62,64,0,70,65,71],
[65,64,64,65,61,0,60,72],
[78,59,64,65,66,71,0,69],
[58,62,51,65,60,59,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,62,71,83,75,70,86],
[54,0,66,53,70,49,51,71],
[69,65,0,73,82,64,70,79],
[60,78,58,0,80,64,70,81],
[48,61,49,51,0,57,43,58],
[56,82,67,67,74,0,60,70],
[61,80,61,61,88,71,0,79],
[45,60,52,50,73,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,65,58,67,55,63,76],
[51,0,53,64,41,53,65,53],
[66,78,0,71,50,72,72,72],
[73,67,60,0,50,61,56,66],
[64,90,81,81,0,81,86,89],
[76,78,59,70,50,0,73,68],
[68,66,59,75,45,58,0,70],
[55,78,59,65,42,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,84,68,82,64,75,65],
[58,0,77,66,68,65,62,72],
[47,54,0,53,74,62,56,49],
[63,65,78,0,72,67,59,64],
[49,63,57,59,0,61,49,52],
[67,66,69,64,70,0,63,67],
[56,69,75,72,82,68,0,72],
[66,59,82,67,79,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,75,67,85,72,61,70],
[51,0,66,61,72,60,58,65],
[56,65,0,65,76,72,69,68],
[64,70,66,0,74,71,63,63],
[46,59,55,57,0,56,57,55],
[59,71,59,60,75,0,57,65],
[70,73,62,68,74,74,0,76],
[61,66,63,68,76,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,55,63,58,74,69,73],
[80,0,65,71,62,54,74,74],
[76,66,0,56,79,89,83,75],
[68,60,75,0,65,68,93,64],
[73,69,52,66,0,73,70,66],
[57,77,42,63,58,0,66,56],
[62,57,48,38,61,65,0,63],
[58,57,56,67,65,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,72,56,50,61,78,69],
[55,0,69,52,53,51,75,70],
[59,62,0,45,61,43,67,38],
[75,79,86,0,65,72,91,73],
[81,78,70,66,0,66,88,54],
[70,80,88,59,65,0,80,71],
[53,56,64,40,43,51,0,41],
[62,61,93,58,77,60,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,58,55,51,62,53],
[62,0,59,56,61,44,60,58],
[64,72,0,68,70,69,72,62],
[73,75,63,0,63,53,63,65],
[76,70,61,68,0,55,63,60],
[80,87,62,78,76,0,87,67],
[69,71,59,68,68,44,0,70],
[78,73,69,66,71,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,49,45,67,49,51,57],
[60,0,51,68,73,61,68,66],
[82,80,0,65,82,55,61,56],
[86,63,66,0,72,65,57,58],
[64,58,49,59,0,43,57,51],
[82,70,76,66,88,0,58,67],
[80,63,70,74,74,73,0,82],
[74,65,75,73,80,64,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,72,68,64,59,67],
[70,0,59,76,66,61,73,73],
[70,72,0,72,73,63,59,74],
[59,55,59,0,53,48,59,63],
[63,65,58,78,0,70,54,75],
[67,70,68,83,61,0,63,70],
[72,58,72,72,77,68,0,61],
[64,58,57,68,56,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,71,57,62,55,57],
[76,0,70,72,56,63,75,77],
[70,61,0,58,65,59,62,55],
[60,59,73,0,65,75,65,78],
[74,75,66,66,0,65,68,66],
[69,68,72,56,66,0,72,62],
[76,56,69,66,63,59,0,61],
[74,54,76,53,65,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,69,80,78,71,59,75],
[55,0,61,71,69,81,66,64],
[62,70,0,84,69,81,70,56],
[51,60,47,0,62,62,58,51],
[53,62,62,69,0,61,63,57],
[60,50,50,69,70,0,58,53],
[72,65,61,73,68,73,0,61],
[56,67,75,80,74,78,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,69,75,61,73,78],
[65,0,75,66,73,64,77,77],
[58,56,0,59,61,43,66,70],
[62,65,72,0,73,67,77,68],
[56,58,70,58,0,61,81,59],
[70,67,88,64,70,0,77,85],
[58,54,65,54,50,54,0,65],
[53,54,61,63,72,46,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,53,60,46,68,72,60],
[64,0,72,54,62,83,65,68],
[78,59,0,56,62,79,87,91],
[71,77,75,0,65,80,69,89],
[85,69,69,66,0,86,64,63],
[63,48,52,51,45,0,58,57],
[59,66,44,62,67,73,0,89],
[71,63,40,42,68,74,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,72,48,58,91,59],
[61,0,80,72,67,90,81,81],
[69,51,0,60,49,59,62,50],
[59,59,71,0,48,49,100,68],
[83,64,82,83,0,61,92,72],
[73,41,72,82,70,0,101,69],
[40,50,69,31,39,30,0,40],
[72,50,81,63,59,62,91,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,73,59,66,69,67],
[73,0,66,62,64,67,66,69],
[65,65,0,75,63,58,74,64],
[58,69,56,0,62,62,65,58],
[72,67,68,69,0,61,64,74],
[65,64,73,69,70,0,64,71],
[62,65,57,66,67,67,0,66],
[64,62,67,73,57,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,74,63,60,57,59,58],
[72,0,79,68,68,70,62,67],
[57,52,0,70,56,71,60,56],
[68,63,61,0,56,63,56,62],
[71,63,75,75,0,63,62,71],
[74,61,60,68,68,0,67,60],
[72,69,71,75,69,64,0,64],
[73,64,75,69,60,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,72,68,59,55,65],
[64,0,74,71,71,60,59,68],
[58,57,0,67,64,57,55,54],
[59,60,64,0,66,62,57,63],
[63,60,67,65,0,50,55,53],
[72,71,74,69,81,0,57,66],
[76,72,76,74,76,74,0,65],
[66,63,77,68,78,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,69,56,65,59,55],
[65,0,65,64,63,61,67,67],
[69,66,0,71,65,65,67,57],
[62,67,60,0,58,59,77,57],
[75,68,66,73,0,73,66,60],
[66,70,66,72,58,0,72,62],
[72,64,64,54,65,59,0,53],
[76,64,74,74,71,69,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,68,78,49,54,75],
[67,0,57,60,73,50,59,75],
[63,74,0,59,74,57,59,71],
[63,71,72,0,71,53,68,70],
[53,58,57,60,0,38,58,62],
[82,81,74,78,93,0,74,65],
[77,72,72,63,73,57,0,81],
[56,56,60,61,69,66,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,63,71,61,76,80],
[62,0,68,74,75,69,66,58],
[63,63,0,66,67,79,82,73],
[68,57,65,0,60,72,82,72],
[60,56,64,71,0,66,82,67],
[70,62,52,59,65,0,65,52],
[55,65,49,49,49,66,0,50],
[51,73,58,59,64,79,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,55,49,58,55,62],
[75,0,68,72,63,67,68,74],
[68,63,0,61,63,62,65,65],
[76,59,70,0,73,64,68,69],
[82,68,68,58,0,64,68,74],
[73,64,69,67,67,0,73,76],
[76,63,66,63,63,58,0,60],
[69,57,66,62,57,55,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,76,73,80,80,68,72],
[70,0,83,62,64,85,61,82],
[55,48,0,49,63,71,55,63],
[58,69,82,0,77,88,68,79],
[51,67,68,54,0,76,71,57],
[51,46,60,43,55,0,47,58],
[63,70,76,63,60,84,0,80],
[59,49,68,52,74,73,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,62,62,65,51,54],
[73,0,72,59,73,54,65,62],
[72,59,0,70,77,60,73,69],
[69,72,61,0,74,61,74,60],
[69,58,54,57,0,48,57,48],
[66,77,71,70,83,0,65,60],
[80,66,58,57,74,66,0,48],
[77,69,62,71,83,71,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,59,55,67,61,56],
[61,0,58,59,55,69,66,57],
[74,73,0,75,67,66,69,57],
[72,72,56,0,53,70,59,56],
[76,76,64,78,0,69,65,71],
[64,62,65,61,62,0,58,64],
[70,65,62,72,66,73,0,67],
[75,74,74,75,60,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,57,46,60,51,57,75],
[82,0,57,71,68,72,81,85],
[74,74,0,60,72,66,72,75],
[85,60,71,0,80,65,74,69],
[71,63,59,51,0,56,66,86],
[80,59,65,66,75,0,81,76],
[74,50,59,57,65,50,0,64],
[56,46,56,62,45,55,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,83,66,67,72,73,64],
[65,0,63,53,70,65,60,53],
[48,68,0,34,62,53,65,49],
[65,78,97,0,78,88,76,76],
[64,61,69,53,0,66,65,47],
[59,66,78,43,65,0,65,62],
[58,71,66,55,66,66,0,46],
[67,78,82,55,84,69,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,62,64,60,64,63],
[63,0,60,62,71,57,67,65],
[61,71,0,72,58,54,59,59],
[69,69,59,0,60,61,60,62],
[67,60,73,71,0,65,61,69],
[71,74,77,70,66,0,63,71],
[67,64,72,71,70,68,0,72],
[68,66,72,69,62,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,74,70,71,70,70,70],
[68,0,71,65,63,57,74,71],
[57,60,0,72,67,56,67,59],
[61,66,59,0,52,51,70,63],
[60,68,64,79,0,63,74,73],
[61,74,75,80,68,0,76,75],
[61,57,64,61,57,55,0,64],
[61,60,72,68,58,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,65,72,55,57,61],
[60,0,68,69,51,50,50,51],
[64,63,0,55,62,62,62,54],
[66,62,76,0,62,64,63,63],
[59,80,69,69,0,71,73,66],
[76,81,69,67,60,0,58,51],
[74,81,69,68,58,73,0,53],
[70,80,77,68,65,80,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,53,81,60,53,58,58],
[65,0,68,81,68,60,68,68],
[78,63,0,77,66,71,73,68],
[50,50,54,0,59,48,54,46],
[71,63,65,72,0,63,72,71],
[78,71,60,83,68,0,75,64],
[73,63,58,77,59,56,0,64],
[73,63,63,85,60,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,66,60,69,63,68],
[59,0,72,59,64,73,60,83],
[60,59,0,68,71,73,66,75],
[65,72,63,0,69,63,68,82],
[71,67,60,62,0,65,65,68],
[62,58,58,68,66,0,66,75],
[68,71,65,63,66,65,0,71],
[63,48,56,49,63,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,79,67,68,72,68,76],
[68,0,82,70,67,66,65,70],
[52,49,0,57,58,58,54,58],
[64,61,74,0,70,62,57,71],
[63,64,73,61,0,69,65,67],
[59,65,73,69,62,0,67,72],
[63,66,77,74,66,64,0,75],
[55,61,73,60,64,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,66,57,78,62,67],
[67,0,68,72,59,72,68,66],
[74,63,0,62,66,72,62,65],
[65,59,69,0,60,72,60,62],
[74,72,65,71,0,78,62,67],
[53,59,59,59,53,0,56,63],
[69,63,69,71,69,75,0,66],
[64,65,66,69,64,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,60,59,62,71,59,63],
[78,0,68,60,66,70,56,66],
[71,63,0,54,58,71,57,70],
[72,71,77,0,64,64,67,74],
[69,65,73,67,0,64,61,69],
[60,61,60,67,67,0,58,72],
[72,75,74,64,70,73,0,74],
[68,65,61,57,62,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,56,72,61,71,60],
[66,0,65,54,60,60,71,49],
[71,66,0,56,59,53,67,57],
[75,77,75,0,66,72,80,53],
[59,71,72,65,0,71,69,62],
[70,71,78,59,60,0,80,70],
[60,60,64,51,62,51,0,60],
[71,82,74,78,69,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,61,57,61,61,61,59],
[57,0,69,59,60,60,60,54],
[70,62,0,71,66,61,64,58],
[74,72,60,0,66,61,70,57],
[70,71,65,65,0,71,60,68],
[70,71,70,70,60,0,63,64],
[70,71,67,61,71,68,0,59],
[72,77,73,74,63,67,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,68,72,65,67,58],
[64,0,60,75,72,71,68,63],
[65,71,0,67,73,74,77,72],
[63,56,64,0,62,58,61,60],
[59,59,58,69,0,63,72,61],
[66,60,57,73,68,0,66,65],
[64,63,54,70,59,65,0,70],
[73,68,59,71,70,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,71,66,67,71,62],
[59,0,66,70,67,64,58,61],
[63,65,0,64,74,60,71,57],
[60,61,67,0,66,58,61,67],
[65,64,57,65,0,58,65,58],
[64,67,71,73,73,0,63,60],
[60,73,60,70,66,68,0,59],
[69,70,74,64,73,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,59,59,66,71,64],
[66,0,60,57,51,61,59,59],
[69,71,0,66,64,71,78,68],
[72,74,65,0,57,60,74,55],
[72,80,67,74,0,72,74,65],
[65,70,60,71,59,0,72,61],
[60,72,53,57,57,59,0,55],
[67,72,63,76,66,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,55,70,49,56,79,57],
[64,0,57,58,57,70,66,69],
[76,74,0,74,57,68,69,53],
[61,73,57,0,45,73,73,61],
[82,74,74,86,0,71,79,65],
[75,61,63,58,60,0,69,59],
[52,65,62,58,52,62,0,46],
[74,62,78,70,66,72,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,52,75,70,62,60],
[73,0,73,65,91,69,74,73],
[76,58,0,66,83,69,67,63],
[79,66,65,0,78,81,73,73],
[56,40,48,53,0,62,42,55],
[61,62,62,50,69,0,58,56],
[69,57,64,58,89,73,0,62],
[71,58,68,58,76,75,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,60,59,59,68,61],
[60,0,70,59,65,65,65,67],
[65,61,0,62,59,61,65,61],
[71,72,69,0,57,68,67,72],
[72,66,72,74,0,70,75,63],
[72,66,70,63,61,0,61,66],
[63,66,66,64,56,70,0,62],
[70,64,70,59,68,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,48,60,61,52,51],
[89,0,56,79,79,55,57,70],
[83,75,0,63,50,75,63,51],
[83,52,68,0,53,61,57,53],
[71,52,81,78,0,54,59,71],
[70,76,56,70,77,0,66,40],
[79,74,68,74,72,65,0,64],
[80,61,80,78,60,91,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,73,88,68,73,74],
[51,0,55,49,76,44,55,59],
[67,76,0,68,69,60,60,75],
[58,82,63,0,86,65,70,72],
[43,55,62,45,0,55,58,61],
[63,87,71,66,76,0,83,78],
[58,76,71,61,73,48,0,66],
[57,72,56,59,70,53,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,81,58,80,59,68,85],
[54,0,69,48,47,37,46,68],
[50,62,0,61,70,53,56,58],
[73,83,70,0,70,58,69,80],
[51,84,61,61,0,67,47,68],
[72,94,78,73,64,0,73,77],
[63,85,75,62,84,58,0,82],
[46,63,73,51,63,54,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,67,64,71,72,74],
[65,0,68,67,70,81,70,66],
[66,63,0,55,76,71,65,83],
[64,64,76,0,68,66,62,82],
[67,61,55,63,0,67,60,76],
[60,50,60,65,64,0,71,73],
[59,61,66,69,71,60,0,79],
[57,65,48,49,55,58,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,62,73,42,59,68],
[63,0,62,55,56,64,54,72],
[53,69,0,65,62,76,49,63],
[69,76,66,0,65,57,63,58],
[58,75,69,66,0,67,69,76],
[89,67,55,74,64,0,64,71],
[72,77,82,68,62,67,0,71],
[63,59,68,73,55,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,95,84,97,71,78],
[55,0,59,71,65,80,67,74],
[66,72,0,76,59,99,64,73],
[36,60,55,0,70,80,53,63],
[47,66,72,61,0,78,52,68],
[34,51,32,51,53,0,40,45],
[60,64,67,78,79,91,0,80],
[53,57,58,68,63,86,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,64,57,56,65,64],
[74,0,69,69,70,61,63,68],
[70,62,0,66,62,69,73,65],
[67,62,65,0,68,70,75,68],
[74,61,69,63,0,62,65,75],
[75,70,62,61,69,0,66,72],
[66,68,58,56,66,65,0,63],
[67,63,66,63,56,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,62,65,65,67,62],
[64,0,71,67,71,62,61,69],
[62,60,0,59,65,56,67,62],
[69,64,72,0,72,75,72,68],
[66,60,66,59,0,65,64,58],
[66,69,75,56,66,0,65,62],
[64,70,64,59,67,66,0,65],
[69,62,69,63,73,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,67,85,84,67,52,67],
[48,0,52,62,56,69,56,46],
[64,79,0,86,74,109,79,77],
[46,69,45,0,49,74,47,50],
[47,75,57,82,0,81,47,56],
[64,62,22,57,50,0,30,32],
[79,75,52,84,84,101,0,59],
[64,85,54,81,75,99,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,52,66,48,49,74,45],
[80,0,70,85,87,73,95,52],
[79,61,0,71,71,66,99,60],
[65,46,60,0,67,62,82,72],
[83,44,60,64,0,59,72,41],
[82,58,65,69,72,0,73,49],
[57,36,32,49,59,58,0,27],
[86,79,71,59,90,82,104,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,64,64,66,63,78],
[61,0,51,60,60,51,53,61],
[66,80,0,74,61,65,57,72],
[67,71,57,0,69,54,56,73],
[67,71,70,62,0,62,58,71],
[65,80,66,77,69,0,68,71],
[68,78,74,75,73,63,0,79],
[53,70,59,58,60,60,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,53,66,69,67,58,62],
[63,0,68,54,73,56,59,53],
[78,63,0,86,84,78,74,68],
[65,77,45,0,63,56,54,59],
[62,58,47,68,0,59,58,55],
[64,75,53,75,72,0,61,60],
[73,72,57,77,73,70,0,59],
[69,78,63,72,76,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,72,67,71,75,75],
[62,0,58,71,62,67,68,71],
[68,73,0,69,68,65,68,75],
[59,60,62,0,72,65,62,66],
[64,69,63,59,0,68,62,68],
[60,64,66,66,63,0,69,64],
[56,63,63,69,69,62,0,74],
[56,60,56,65,63,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,74,65,69,79,67],
[54,0,58,42,56,56,59,60],
[64,73,0,54,70,60,62,71],
[57,89,77,0,63,64,68,70],
[66,75,61,68,0,68,67,73],
[62,75,71,67,63,0,66,75],
[52,72,69,63,64,65,0,68],
[64,71,60,61,58,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,60,51,44,61,56],
[73,0,66,72,63,56,71,69],
[79,65,0,80,57,68,80,71],
[71,59,51,0,58,54,68,50],
[80,68,74,73,0,62,77,67],
[87,75,63,77,69,0,83,81],
[70,60,51,63,54,48,0,65],
[75,62,60,81,64,50,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,71,72,74,68,55],
[62,0,76,76,58,73,69,68],
[59,55,0,64,73,70,71,58],
[60,55,67,0,65,59,52,57],
[59,73,58,66,0,66,65,56],
[57,58,61,72,65,0,55,52],
[63,62,60,79,66,76,0,66],
[76,63,73,74,75,79,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,70,65,68,62,57],
[53,0,57,59,58,56,66,46],
[60,74,0,53,55,66,55,68],
[61,72,78,0,65,71,64,65],
[66,73,76,66,0,64,63,57],
[63,75,65,60,67,0,68,58],
[69,65,76,67,68,63,0,68],
[74,85,63,66,74,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,51,61,61,61,71],
[53,0,63,62,71,62,66,82],
[65,68,0,50,70,65,70,75],
[80,69,81,0,65,69,72,76],
[70,60,61,66,0,60,67,66],
[70,69,66,62,71,0,65,73],
[70,65,61,59,64,66,0,71],
[60,49,56,55,65,58,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,75,57,74,35,50,50],
[79,0,78,92,71,57,78,73],
[56,53,0,75,74,51,66,65],
[74,39,56,0,47,32,49,40],
[57,60,57,84,0,69,51,58],
[96,74,80,99,62,0,97,91],
[81,53,65,82,80,34,0,72],
[81,58,66,91,73,40,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,55,62,62,75,60],
[64,0,54,51,58,63,63,65],
[66,77,0,60,63,67,66,60],
[76,80,71,0,66,70,73,64],
[69,73,68,65,0,73,68,66],
[69,68,64,61,58,0,66,59],
[56,68,65,58,63,65,0,62],
[71,66,71,67,65,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,74,67,69,69,73,70],
[70,0,69,60,68,62,63,67],
[57,62,0,57,55,59,54,59],
[64,71,74,0,68,66,66,59],
[62,63,76,63,0,65,63,61],
[62,69,72,65,66,0,70,61],
[58,68,77,65,68,61,0,65],
[61,64,72,72,70,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,73,75,74,49,60,65],
[75,0,85,85,71,68,61,79],
[58,46,0,50,54,58,46,60],
[56,46,81,0,61,48,65,65],
[57,60,77,70,0,52,59,76],
[82,63,73,83,79,0,72,77],
[71,70,85,66,72,59,0,86],
[66,52,71,66,55,54,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,46,55,44,58,45],
[77,0,68,24,53,44,56,33],
[76,63,0,11,44,55,56,65],
[85,107,120,0,42,63,99,77],
[76,78,87,89,0,78,69,57],
[87,87,76,68,53,0,87,46],
[73,75,75,32,62,44,0,32],
[86,98,66,54,74,85,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,53,60,55,58,53,53],
[79,0,65,67,64,64,70,74],
[78,66,0,68,63,64,56,61],
[71,64,63,0,66,71,70,70],
[76,67,68,65,0,67,66,64],
[73,67,67,60,64,0,72,64],
[78,61,75,61,65,59,0,69],
[78,57,70,61,67,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,64,64,63,69,68],
[62,0,61,61,66,74,61,71],
[65,70,0,61,64,68,65,67],
[67,70,70,0,60,68,62,72],
[67,65,67,71,0,69,65,71],
[68,57,63,63,62,0,66,56],
[62,70,66,69,66,65,0,64],
[63,60,64,59,60,75,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,39,46,29,38,59,46],
[103,0,67,83,64,76,47,74],
[92,64,0,93,55,55,78,83],
[85,48,38,0,38,75,57,74],
[102,67,76,93,0,65,49,83],
[93,55,76,56,66,0,67,65],
[72,84,53,74,82,64,0,82],
[85,57,48,57,48,66,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,80,62,71,81,78],
[59,0,64,69,60,58,53,69],
[64,67,0,64,51,60,57,71],
[51,62,67,0,52,55,58,70],
[69,71,80,79,0,68,65,82],
[60,73,71,76,63,0,66,79],
[50,78,74,73,66,65,0,82],
[53,62,60,61,49,52,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,66,64,72,73,76],
[72,0,66,71,72,65,72,79],
[64,65,0,60,63,64,67,58],
[65,60,71,0,65,67,64,70],
[67,59,68,66,0,66,65,73],
[59,66,67,64,65,0,70,69],
[58,59,64,67,66,61,0,66],
[55,52,73,61,58,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,70,70,63,79,89],
[67,0,64,65,68,59,79,74],
[59,67,0,63,62,62,70,72],
[61,66,68,0,63,67,73,71],
[61,63,69,68,0,65,76,66],
[68,72,69,64,66,0,72,75],
[52,52,61,58,55,59,0,56],
[42,57,59,60,65,56,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,89,65,80,75,77,81],
[63,0,79,61,56,68,74,56],
[42,52,0,47,34,64,46,44],
[66,70,84,0,61,79,69,53],
[51,75,97,70,0,64,78,60],
[56,63,67,52,67,0,60,54],
[54,57,85,62,53,71,0,54],
[50,75,87,78,71,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,61,63,66,49,67],
[62,0,56,61,56,66,55,54],
[59,75,0,70,67,81,70,80],
[70,70,61,0,61,74,59,64],
[68,75,64,70,0,78,62,67],
[65,65,50,57,53,0,59,59],
[82,76,61,72,69,72,0,78],
[64,77,51,67,64,72,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,64,70,71,76,62],
[64,0,74,62,75,69,72,66],
[59,57,0,59,71,64,62,61],
[67,69,72,0,74,68,74,58],
[61,56,60,57,0,60,68,57],
[60,62,67,63,71,0,67,59],
[55,59,69,57,63,64,0,52],
[69,65,70,73,74,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,60,59,50,61,61],
[71,0,64,67,64,63,56,72],
[76,67,0,56,59,56,67,67],
[71,64,75,0,62,60,61,65],
[72,67,72,69,0,67,62,63],
[81,68,75,71,64,0,62,74],
[70,75,64,70,69,69,0,73],
[70,59,64,66,68,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,69,70,68,74,67],
[67,0,64,60,69,68,71,73],
[65,67,0,62,69,67,62,71],
[62,71,69,0,74,70,73,70],
[61,62,62,57,0,70,69,70],
[63,63,64,61,61,0,69,64],
[57,60,69,58,62,62,0,65],
[64,58,60,61,61,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,73,64,67,69,64,67],
[59,0,63,62,59,70,77,62],
[58,68,0,58,61,60,56,56],
[67,69,73,0,72,61,67,72],
[64,72,70,59,0,65,70,62],
[62,61,71,70,66,0,67,78],
[67,54,75,64,61,64,0,61],
[64,69,75,59,69,53,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,73,73,70,58,65,60],
[52,0,60,62,51,37,67,37],
[58,71,0,73,64,52,69,62],
[58,69,58,0,64,57,56,59],
[61,80,67,67,0,58,70,66],
[73,94,79,74,73,0,83,53],
[66,64,62,75,61,48,0,57],
[71,94,69,72,65,78,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,65,60,58,61,53,57],
[81,0,72,64,71,73,66,66],
[66,59,0,68,68,61,49,61],
[71,67,63,0,66,64,62,67],
[73,60,63,65,0,58,53,62],
[70,58,70,67,73,0,48,63],
[78,65,82,69,78,83,0,71],
[74,65,70,64,69,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,67,63,57,70,71],
[67,0,48,70,55,63,71,70],
[68,83,0,72,81,62,75,72],
[64,61,59,0,65,60,66,69],
[68,76,50,66,0,63,74,60],
[74,68,69,71,68,0,75,54],
[61,60,56,65,57,56,0,54],
[60,61,59,62,71,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,47,55,45,55,52],
[69,0,61,54,72,53,69,59],
[73,70,0,78,67,65,58,71],
[84,77,53,0,82,46,64,67],
[76,59,64,49,0,61,58,55],
[86,78,66,85,70,0,67,59],
[76,62,73,67,73,64,0,77],
[79,72,60,64,76,72,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,81,70,77,69,72,77],
[70,0,72,75,81,59,63,75],
[50,59,0,58,59,62,61,76],
[61,56,73,0,74,63,66,72],
[54,50,72,57,0,59,55,63],
[62,72,69,68,72,0,69,71],
[59,68,70,65,76,62,0,83],
[54,56,55,59,68,60,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,69,65,54,59,72],
[77,0,71,72,63,76,58,85],
[64,60,0,57,65,54,53,81],
[62,59,74,0,59,63,53,66],
[66,68,66,72,0,63,69,72],
[77,55,77,68,68,0,61,80],
[72,73,78,78,62,70,0,79],
[59,46,50,65,59,51,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,63,61,58,52,62],
[77,0,75,92,57,68,82,82],
[71,56,0,64,63,58,74,74],
[68,39,67,0,57,66,71,73],
[70,74,68,74,0,64,70,80],
[73,63,73,65,67,0,84,80],
[79,49,57,60,61,47,0,69],
[69,49,57,58,51,51,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,64,58,63,53,79],
[62,0,74,59,62,52,58,68],
[70,57,0,64,56,56,54,54],
[67,72,67,0,73,63,65,59],
[73,69,75,58,0,54,48,54],
[68,79,75,68,77,0,48,60],
[78,73,77,66,83,83,0,64],
[52,63,77,72,77,71,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,42,44,62,42,71,42],
[76,0,88,62,77,45,89,104],
[89,43,0,74,61,27,44,58],
[87,69,57,0,73,42,70,57],
[69,54,70,58,0,69,56,56],
[89,86,104,89,62,0,102,103],
[60,42,87,61,75,29,0,71],
[89,27,73,74,75,28,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,59,72,74,46,70],
[71,0,74,63,84,77,66,82],
[67,57,0,58,72,72,66,66],
[72,68,73,0,86,79,63,76],
[59,47,59,45,0,73,56,64],
[57,54,59,52,58,0,56,71],
[85,65,65,68,75,75,0,82],
[61,49,65,55,67,60,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,69,71,54,64,70,66],
[54,0,56,70,55,55,58,60],
[62,75,0,74,57,75,54,70],
[60,61,57,0,56,60,63,59],
[77,76,74,75,0,65,58,67],
[67,76,56,71,66,0,64,66],
[61,73,77,68,73,67,0,77],
[65,71,61,72,64,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,69,78,71,83,65],
[62,0,65,64,72,62,69,62],
[57,66,0,64,61,60,71,62],
[62,67,67,0,77,65,69,68],
[53,59,70,54,0,54,62,56],
[60,69,71,66,77,0,74,65],
[48,62,60,62,69,57,0,54],
[66,69,69,63,75,66,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,59,37,45,61,58,57],
[81,0,82,53,61,61,82,66],
[72,49,0,57,58,60,84,57],
[94,78,74,0,65,59,86,64],
[86,70,73,66,0,81,93,62],
[70,70,71,72,50,0,63,69],
[73,49,47,45,38,68,0,65],
[74,65,74,67,69,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,61,70,71,72,68],
[68,0,69,66,71,69,64,63],
[59,62,0,63,68,57,65,66],
[70,65,68,0,65,68,66,69],
[61,60,63,66,0,64,65,59],
[60,62,74,63,67,0,68,61],
[59,67,66,65,66,63,0,67],
[63,68,65,62,72,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,71,76,65,72,59,82],
[50,0,51,60,64,57,52,61],
[60,80,0,70,72,76,58,64],
[55,71,61,0,57,63,61,61],
[66,67,59,74,0,64,68,59],
[59,74,55,68,67,0,63,62],
[72,79,73,70,63,68,0,69],
[49,70,67,70,72,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,75,70,69,62,72],
[58,0,69,57,66,64,63,60],
[58,62,0,63,74,76,57,61],
[56,74,68,0,78,70,59,66],
[61,65,57,53,0,63,69,64],
[62,67,55,61,68,0,69,61],
[69,68,74,72,62,62,0,70],
[59,71,70,65,67,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,83,66,82,81,81],
[51,0,84,64,62,86,86,92],
[67,47,0,41,48,69,64,87],
[48,67,90,0,76,84,72,75],
[65,69,83,55,0,92,68,84],
[49,45,62,47,39,0,62,63],
[50,45,67,59,63,69,0,92],
[50,39,44,56,47,68,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,54,72,54,72,51,54],
[76,0,71,74,58,79,67,67],
[77,60,0,74,67,76,69,64],
[59,57,57,0,61,62,62,60],
[77,73,64,70,0,81,58,68],
[59,52,55,69,50,0,57,49],
[80,64,62,69,73,74,0,52],
[77,64,67,71,63,82,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,73,59,60,60,67],
[69,0,66,74,70,59,69,65],
[70,65,0,71,59,63,72,60],
[58,57,60,0,72,64,68,55],
[72,61,72,59,0,64,69,56],
[71,72,68,67,67,0,71,63],
[71,62,59,63,62,60,0,59],
[64,66,71,76,75,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,54,61,67,62,53,63],
[59,0,57,72,63,51,54,61],
[77,74,0,54,71,59,48,55],
[70,59,77,0,79,66,62,76],
[64,68,60,52,0,63,68,63],
[69,80,72,65,68,0,66,72],
[78,77,83,69,63,65,0,62],
[68,70,76,55,68,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,67,65,71,80,74],
[65,0,71,66,66,66,64,74],
[74,60,0,68,59,70,72,62],
[64,65,63,0,66,57,67,82],
[66,65,72,65,0,70,66,75],
[60,65,61,74,61,0,71,75],
[51,67,59,64,65,60,0,65],
[57,57,69,49,56,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,53,72,60,66,64],
[72,0,71,55,60,67,56,61],
[66,60,0,56,65,56,57,60],
[78,76,75,0,68,68,62,71],
[59,71,66,63,0,64,55,63],
[71,64,75,63,67,0,62,66],
[65,75,74,69,76,69,0,80],
[67,70,71,60,68,65,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,71,53,64,68,71],
[70,0,68,79,66,59,69,78],
[70,63,0,76,60,61,72,78],
[60,52,55,0,54,54,60,69],
[78,65,71,77,0,68,65,76],
[67,72,70,77,63,0,56,70],
[63,62,59,71,66,75,0,79],
[60,53,53,62,55,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,51,73,61,57,67],
[74,0,69,54,92,63,65,65],
[71,62,0,58,68,59,57,77],
[80,77,73,0,82,63,72,77],
[58,39,63,49,0,64,56,56],
[70,68,72,68,67,0,59,85],
[74,66,74,59,75,72,0,71],
[64,66,54,54,75,46,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,67,60,77,73,77],
[70,0,54,68,72,71,80,62],
[63,77,0,59,61,75,69,56],
[64,63,72,0,56,75,69,67],
[71,59,70,75,0,88,72,64],
[54,60,56,56,43,0,57,57],
[58,51,62,62,59,74,0,71],
[54,69,75,64,67,74,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,68,62,63,70,67],
[66,0,61,70,69,63,65,68],
[68,70,0,68,65,63,72,65],
[63,61,63,0,59,66,77,60],
[69,62,66,72,0,70,66,64],
[68,68,68,65,61,0,67,65],
[61,66,59,54,65,64,0,57],
[64,63,66,71,67,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,76,66,71,69,61],
[59,0,58,73,67,66,68,71],
[68,73,0,74,68,72,68,65],
[55,58,57,0,56,62,58,62],
[65,64,63,75,0,74,67,68],
[60,65,59,69,57,0,58,65],
[62,63,63,73,64,73,0,76],
[70,60,66,69,63,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,49,60,63,56,58,48],
[72,0,69,62,70,60,59,65],
[82,62,0,66,71,57,63,68],
[71,69,65,0,73,70,71,61],
[68,61,60,58,0,67,65,70],
[75,71,74,61,64,0,70,60],
[73,72,68,60,66,61,0,57],
[83,66,63,70,61,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,53,55,52,69,62,63],
[69,0,72,78,65,78,64,82],
[78,59,0,62,76,69,58,67],
[76,53,69,0,59,75,72,80],
[79,66,55,72,0,79,74,80],
[62,53,62,56,52,0,57,72],
[69,67,73,59,57,74,0,76],
[68,49,64,51,51,59,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,52,62,60,53,58],
[79,0,71,72,59,61,61,67],
[74,60,0,58,50,61,62,53],
[79,59,73,0,55,59,71,67],
[69,72,81,76,0,61,74,59],
[71,70,70,72,70,0,68,58],
[78,70,69,60,57,63,0,59],
[73,64,78,64,72,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,55,50,62,61,64],
[74,0,57,62,63,64,60,62],
[74,74,0,72,71,77,65,71],
[76,69,59,0,60,70,69,65],
[81,68,60,71,0,73,61,70],
[69,67,54,61,58,0,57,66],
[70,71,66,62,70,74,0,64],
[67,69,60,66,61,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,0,25,51,51,26],
[80,0,28,28,53,28,28,52],
[80,103,0,28,105,52,54,52],
[131,103,103,0,103,77,51,103],
[106,78,26,28,0,52,54,78],
[80,103,79,54,79,0,54,52],
[80,103,77,80,77,77,0,52],
[105,79,79,28,53,79,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,72,73,72,74,63],
[56,0,60,56,74,52,63,70],
[59,71,0,65,79,56,63,72],
[59,75,66,0,73,54,62,63],
[58,57,52,58,0,52,60,54],
[59,79,75,77,79,0,75,72],
[57,68,68,69,71,56,0,71],
[68,61,59,68,77,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,88,87,88,88,88],
[87,0,87,88,87,87,87,44],
[87,44,0,44,87,87,87,44],
[43,43,87,0,43,87,87,43],
[44,44,44,88,0,88,88,44],
[43,44,44,44,43,0,44,0],
[43,44,44,44,43,87,0,0],
[43,87,87,88,87,131,131,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,75,76,74,63,31,53],
[78,0,88,79,64,99,77,68],
[56,43,0,67,63,78,56,65],
[55,52,64,0,63,63,52,42],
[57,67,68,68,0,78,57,78],
[68,32,53,68,53,0,54,44],
[100,54,75,79,74,77,0,65],
[78,63,66,89,53,87,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,63,96,131,66,63,131],
[35,0,67,68,99,35,98,100],
[68,64,0,33,99,35,99,99],
[35,63,98,0,99,66,98,131],
[0,32,32,32,0,0,63,67],
[65,96,96,65,131,0,96,131],
[68,33,32,33,68,35,0,100],
[0,31,32,0,64,0,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,55,60,63,59,56],
[69,0,73,63,62,72,65,65],
[68,58,0,52,51,62,62,63],
[76,68,79,0,70,69,57,70],
[71,69,80,61,0,74,69,71],
[68,59,69,62,57,0,60,71],
[72,66,69,74,62,71,0,69],
[75,66,68,61,60,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,45,68,48,61,66,57],
[71,0,58,63,45,68,75,78],
[86,73,0,73,70,78,67,63],
[63,68,58,0,47,57,75,50],
[83,86,61,84,0,76,90,70],
[70,63,53,74,55,0,68,59],
[65,56,64,56,41,63,0,56],
[74,53,68,81,61,72,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,73,71,73,65,68],
[71,0,67,71,68,77,65,72],
[58,64,0,60,65,68,63,62],
[58,60,71,0,66,72,66,67],
[60,63,66,65,0,67,60,69],
[58,54,63,59,64,0,55,60],
[66,66,68,65,71,76,0,66],
[63,59,69,64,62,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,57,54,76,54,60,61],
[55,0,50,76,81,64,71,74],
[74,81,0,69,81,56,78,74],
[77,55,62,0,73,66,84,80],
[55,50,50,58,0,56,64,63],
[77,67,75,65,75,0,75,76],
[71,60,53,47,67,56,0,67],
[70,57,57,51,68,55,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,65,54,56,60,60],
[72,0,64,68,57,59,67,63],
[74,67,0,75,66,61,72,76],
[66,63,56,0,61,58,69,65],
[77,74,65,70,0,66,72,71],
[75,72,70,73,65,0,72,77],
[71,64,59,62,59,59,0,63],
[71,68,55,66,60,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,56,57,57,53,73,68],
[87,0,76,74,70,72,64,78],
[75,55,0,66,68,57,74,72],
[74,57,65,0,54,55,47,58],
[74,61,63,77,0,52,73,69],
[78,59,74,76,79,0,79,80],
[58,67,57,84,58,52,0,58],
[63,53,59,73,62,51,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,60,63,64,67,64,54],
[60,0,68,64,60,61,64,68],
[71,63,0,70,61,62,61,69],
[68,67,61,0,61,80,73,59],
[67,71,70,70,0,77,68,64],
[64,70,69,51,54,0,67,67],
[67,67,70,58,63,64,0,62],
[77,63,62,72,67,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,71,64,75,70,79],
[67,0,69,50,40,73,69,70],
[53,62,0,66,41,49,60,53],
[60,81,65,0,44,43,43,53],
[67,91,90,87,0,70,61,91],
[56,58,82,88,61,0,58,69],
[61,62,71,88,70,73,0,77],
[52,61,78,78,40,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,74,64,67,68,72],
[68,0,73,68,65,62,65,77],
[65,58,0,66,60,64,64,68],
[57,63,65,0,61,60,61,66],
[67,66,71,70,0,61,67,72],
[64,69,67,71,70,0,66,72],
[63,66,67,70,64,65,0,65],
[59,54,63,65,59,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,70,72,71,66,73,57],
[81,0,74,71,73,68,77,63],
[61,57,0,60,68,55,59,52],
[59,60,71,0,68,63,65,60],
[60,58,63,63,0,54,61,50],
[65,63,76,68,77,0,71,72],
[58,54,72,66,70,60,0,64],
[74,68,79,71,81,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,67,56,53,68,66],
[76,0,71,63,65,47,57,71],
[64,60,0,63,65,58,55,68],
[64,68,68,0,53,60,55,52],
[75,66,66,78,0,59,64,68],
[78,84,73,71,72,0,64,76],
[63,74,76,76,67,67,0,58],
[65,60,63,79,63,55,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,62,60,61,71,65],
[73,0,67,76,69,84,70,59],
[76,64,0,70,71,76,77,68],
[69,55,61,0,62,66,63,60],
[71,62,60,69,0,69,70,58],
[70,47,55,65,62,0,72,53],
[60,61,54,68,61,59,0,65],
[66,72,63,71,73,78,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,70,65,69,62,71],
[62,0,64,70,72,64,68,67],
[62,67,0,73,67,53,72,66],
[61,61,58,0,70,65,62,68],
[66,59,64,61,0,64,73,64],
[62,67,78,66,67,0,68,74],
[69,63,59,69,58,63,0,64],
[60,64,65,63,67,57,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,70,77,72,71,74,64],
[56,0,65,62,64,59,70,58],
[61,66,0,67,67,59,60,61],
[54,69,64,0,64,59,65,56],
[59,67,64,67,0,59,70,56],
[60,72,72,72,72,0,76,66],
[57,61,71,66,61,55,0,65],
[67,73,70,75,75,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,81,93,78,55,55],
[53,0,56,67,81,52,54,68],
[63,75,0,78,102,77,65,51],
[50,64,53,0,52,65,39,65],
[38,50,29,79,0,64,15,55],
[53,79,54,66,67,0,41,55],
[76,77,66,92,116,90,0,52],
[76,63,80,66,76,76,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,66,76,65,82,74],
[62,0,76,59,68,73,63,68],
[66,55,0,46,57,58,52,68],
[65,72,85,0,72,60,66,79],
[55,63,74,59,0,57,58,65],
[66,58,73,71,74,0,71,64],
[49,68,79,65,73,60,0,70],
[57,63,63,52,66,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,75,76,71,61,77,90],
[60,0,70,69,67,70,69,75],
[56,61,0,71,66,65,62,63],
[55,62,60,0,69,57,57,68],
[60,64,65,62,0,59,58,75],
[70,61,66,74,72,0,72,73],
[54,62,69,74,73,59,0,68],
[41,56,68,63,56,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,69,67,67,67,63,64],
[70,0,72,73,69,64,70,69],
[62,59,0,69,64,62,62,59],
[64,58,62,0,62,62,57,57],
[64,62,67,69,0,61,61,63],
[64,67,69,69,70,0,61,64],
[68,61,69,74,70,70,0,60],
[67,62,72,74,68,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,63,64,71,63,64,61],
[60,0,65,61,63,67,67,58],
[68,66,0,67,70,73,61,60],
[67,70,64,0,72,60,70,66],
[60,68,61,59,0,64,61,52],
[68,64,58,71,67,0,67,65],
[67,64,70,61,70,64,0,61],
[70,73,71,65,79,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,74,58,59,79,60,68],
[76,0,68,72,55,71,62,67],
[57,63,0,65,63,74,70,61],
[73,59,66,0,72,71,68,78],
[72,76,68,59,0,69,73,59],
[52,60,57,60,62,0,65,56],
[71,69,61,63,58,66,0,76],
[63,64,70,53,72,75,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,71,67,65,58,64],
[67,0,68,68,59,58,64,66],
[61,63,0,73,62,60,66,59],
[60,63,58,0,62,57,54,60],
[64,72,69,69,0,62,60,64],
[66,73,71,74,69,0,62,75],
[73,67,65,77,71,69,0,69],
[67,65,72,71,67,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,84,81,84,63,80],
[68,0,79,62,76,73,57,63],
[61,52,0,56,84,66,57,63],
[47,69,75,0,69,90,56,65],
[50,55,47,62,0,72,46,44],
[47,58,65,41,59,0,47,69],
[68,74,74,75,85,84,0,64],
[51,68,68,66,87,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,78,62,49,69,73],
[67,0,54,64,65,69,55,82],
[63,77,0,63,55,62,73,67],
[53,67,68,0,65,53,67,68],
[69,66,76,66,0,58,81,62],
[82,62,69,78,73,0,83,73],
[62,76,58,64,50,48,0,54],
[58,49,64,63,69,58,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,72,65,60,74,67],
[62,0,73,62,73,55,62,60],
[59,58,0,57,65,63,71,64],
[59,69,74,0,69,67,85,69],
[66,58,66,62,0,49,60,64],
[71,76,68,64,82,0,75,71],
[57,69,60,46,71,56,0,59],
[64,71,67,62,67,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,56,72,72,74,68,67],
[61,0,68,63,68,70,67,52],
[75,63,0,67,79,65,67,56],
[59,68,64,0,65,63,64,62],
[59,63,52,66,0,64,58,52],
[57,61,66,68,67,0,70,46],
[63,64,64,67,73,61,0,60],
[64,79,75,69,79,85,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,83,63,77,75,72,61],
[64,0,68,66,68,72,70,69],
[48,63,0,56,59,50,65,54],
[68,65,75,0,74,68,74,63],
[54,63,72,57,0,56,73,57],
[56,59,81,63,75,0,73,62],
[59,61,66,57,58,58,0,57],
[70,62,77,68,74,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,75,63,68,71,71,66],
[67,0,72,65,75,78,78,66],
[56,59,0,59,63,63,69,60],
[68,66,72,0,70,67,68,65],
[63,56,68,61,0,74,76,66],
[60,53,68,64,57,0,67,53],
[60,53,62,63,55,64,0,54],
[65,65,71,66,65,78,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,64,68,72,62,66],
[65,0,58,69,77,75,67,79],
[69,73,0,63,76,69,73,78],
[67,62,68,0,73,71,57,72],
[63,54,55,58,0,72,65,69],
[59,56,62,60,59,0,62,71],
[69,64,58,74,66,69,0,70],
[65,52,53,59,62,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,71,68,69,71,75],
[70,0,66,65,50,64,60,79],
[70,65,0,61,55,62,68,56],
[60,66,70,0,56,64,62,74],
[63,81,76,75,0,71,84,87],
[62,67,69,67,60,0,67,73],
[60,71,63,69,47,64,0,65],
[56,52,75,57,44,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,67,56,65,54,58],
[55,0,48,49,45,55,52,61],
[66,83,0,53,69,61,70,49],
[64,82,78,0,65,57,58,56],
[75,86,62,66,0,58,56,61],
[66,76,70,74,73,0,59,67],
[77,79,61,73,75,72,0,65],
[73,70,82,75,70,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,69,66,65,72,63],
[75,0,67,80,54,63,70,66],
[65,64,0,68,60,74,73,67],
[62,51,63,0,58,66,69,59],
[65,77,71,73,0,71,82,73],
[66,68,57,65,60,0,74,62],
[59,61,58,62,49,57,0,55],
[68,65,64,72,58,69,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,63,75,77,71,69,75],
[56,0,63,70,67,66,57,66],
[68,68,0,68,58,63,59,68],
[56,61,63,0,63,65,64,66],
[54,64,73,68,0,62,70,61],
[60,65,68,66,69,0,63,56],
[62,74,72,67,61,68,0,63],
[56,65,63,65,70,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,71,75,67,64,63,66],
[72,0,70,77,74,62,67,66],
[60,61,0,66,67,68,63,69],
[56,54,65,0,62,60,62,63],
[64,57,64,69,0,58,61,64],
[67,69,63,71,73,0,70,76],
[68,64,68,69,70,61,0,70],
[65,65,62,68,67,55,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,77,69,70,63,69],
[59,0,52,61,68,66,59,63],
[63,79,0,64,73,69,70,66],
[54,70,67,0,70,68,77,69],
[62,63,58,61,0,67,72,64],
[61,65,62,63,64,0,64,61],
[68,72,61,54,59,67,0,68],
[62,68,65,62,67,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,67,69,57,65,67],
[65,0,68,73,62,65,70,79],
[72,63,0,70,67,59,63,67],
[64,58,61,0,68,66,64,64],
[62,69,64,63,0,61,66,65],
[74,66,72,65,70,0,65,72],
[66,61,68,67,65,66,0,78],
[64,52,64,67,66,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,67,68,56,64,70,66],
[53,0,61,69,66,60,67,69],
[64,70,0,64,72,63,69,73],
[63,62,67,0,64,60,61,56],
[75,65,59,67,0,73,70,65],
[67,71,68,71,58,0,60,72],
[61,64,62,70,61,71,0,64],
[65,62,58,75,66,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,67,64,62,72,80,66],
[48,0,54,60,62,63,75,51],
[64,77,0,67,72,72,88,74],
[67,71,64,0,65,83,74,66],
[69,69,59,66,0,62,74,78],
[59,68,59,48,69,0,71,60],
[51,56,43,57,57,60,0,58],
[65,80,57,65,53,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,64,68,75,70,60,79],
[42,0,48,57,57,67,51,64],
[67,83,0,67,57,59,66,69],
[63,74,64,0,72,59,73,70],
[56,74,74,59,0,65,68,78],
[61,64,72,72,66,0,59,71],
[71,80,65,58,63,72,0,70],
[52,67,62,61,53,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,76,60,66,71,51],
[61,0,59,63,77,67,70,64],
[71,72,0,67,61,69,72,56],
[55,68,64,0,49,67,67,56],
[71,54,70,82,0,63,72,66],
[65,64,62,64,68,0,69,60],
[60,61,59,64,59,62,0,67],
[80,67,75,75,65,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,64,71,69,68,62],
[59,0,52,67,65,68,65,64],
[71,79,0,76,76,71,64,71],
[67,64,55,0,68,64,59,67],
[60,66,55,63,0,71,65,57],
[62,63,60,67,60,0,60,57],
[63,66,67,72,66,71,0,66],
[69,67,60,64,74,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,42,33,45,34,35,70],
[95,0,69,77,98,61,88,89],
[89,62,0,55,80,71,72,64],
[98,54,76,0,89,70,79,96],
[86,33,51,42,0,77,52,80],
[97,70,60,61,54,0,70,82],
[96,43,59,52,79,61,0,89],
[61,42,67,35,51,49,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,73,93,65,65,84],
[55,0,74,63,92,72,73,74],
[57,57,0,74,103,65,65,54],
[58,68,57,0,113,95,86,75],
[38,39,28,18,0,38,29,56],
[66,59,66,36,93,0,65,75],
[66,58,66,45,102,66,0,66],
[47,57,77,56,75,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,60,64,54,56,49],
[70,0,73,69,75,58,69,66],
[71,58,0,60,72,53,57,60],
[71,62,71,0,70,64,78,61],
[67,56,59,61,0,71,64,59],
[77,73,78,67,60,0,69,65],
[75,62,74,53,67,62,0,63],
[82,65,71,70,72,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,60,43,66,68,59],
[68,0,65,70,72,59,82,79],
[66,66,0,63,55,53,58,61],
[71,61,68,0,49,68,47,70],
[88,59,76,82,0,61,75,80],
[65,72,78,63,70,0,64,77],
[63,49,73,84,56,67,0,74],
[72,52,70,61,51,54,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,48,61,60,64,64,61],
[69,0,66,73,74,65,64,57],
[83,65,0,77,69,76,67,76],
[70,58,54,0,70,67,63,60],
[71,57,62,61,0,58,54,63],
[67,66,55,64,73,0,69,62],
[67,67,64,68,77,62,0,66],
[70,74,55,71,68,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,74,66,65,70,65],
[64,0,70,75,62,62,71,61],
[66,61,0,75,60,68,78,57],
[57,56,56,0,61,60,66,60],
[65,69,71,70,0,72,75,68],
[66,69,63,71,59,0,64,66],
[61,60,53,65,56,67,0,55],
[66,70,74,71,63,65,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,57,42,54,31,57,51],
[87,0,61,72,71,70,73,87],
[74,70,0,49,72,44,62,71],
[89,59,82,0,67,68,87,78],
[77,60,59,64,0,65,78,80],
[100,61,87,63,66,0,71,80],
[74,58,69,44,53,60,0,68],
[80,44,60,53,51,51,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,56,71,66,62,56,57],
[47,0,56,61,58,59,51,62],
[75,75,0,72,75,65,67,69],
[60,70,59,0,65,62,57,70],
[65,73,56,66,0,65,55,73],
[69,72,66,69,66,0,50,71],
[75,80,64,74,76,81,0,72],
[74,69,62,61,58,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,75,72,71,64,74],
[55,0,62,66,64,71,60,56],
[57,69,0,77,62,75,68,60],
[56,65,54,0,53,58,55,50],
[59,67,69,78,0,70,64,61],
[60,60,56,73,61,0,59,56],
[67,71,63,76,67,72,0,61],
[57,75,71,81,70,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,60,58,61,66,66],
[60,0,64,64,55,61,58,66],
[65,67,0,59,74,70,73,71],
[71,67,72,0,59,65,68,63],
[73,76,57,72,0,65,65,76],
[70,70,61,66,66,0,65,63],
[65,73,58,63,66,66,0,72],
[65,65,60,68,55,68,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,70,68,61,77,73,73],
[49,0,68,61,57,76,62,65],
[61,63,0,59,66,66,56,69],
[63,70,72,0,54,75,62,67],
[70,74,65,77,0,69,79,79],
[54,55,65,56,62,0,67,79],
[58,69,75,69,52,64,0,76],
[58,66,62,64,52,52,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,69,63,61,74,62],
[63,0,67,62,63,68,74,70],
[67,64,0,64,60,66,75,61],
[62,69,67,0,72,66,71,65],
[68,68,71,59,0,60,67,63],
[70,63,65,65,71,0,71,71],
[57,57,56,60,64,60,0,63],
[69,61,70,66,68,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,52,63,67,58,63],
[80,0,76,74,60,76,86,73],
[71,55,0,58,63,68,52,65],
[79,57,73,0,67,71,70,75],
[68,71,68,64,0,62,76,68],
[64,55,63,60,69,0,64,65],
[73,45,79,61,55,67,0,62],
[68,58,66,56,63,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,78,68,73,69,69],
[61,0,48,72,70,60,64,70],
[72,83,0,79,62,70,65,72],
[53,59,52,0,67,65,62,58],
[63,61,69,64,0,49,61,66],
[58,71,61,66,82,0,76,60],
[62,67,66,69,70,55,0,62],
[62,61,59,73,65,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,63,60,68,60,58],
[70,0,65,61,67,72,70,59],
[73,66,0,64,67,74,71,66],
[68,70,67,0,68,74,66,63],
[71,64,64,63,0,73,77,71],
[63,59,57,57,58,0,54,64],
[71,61,60,65,54,77,0,68],
[73,72,65,68,60,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,49,67,48,33,17,46],
[68,0,68,84,83,68,52,81],
[82,63,0,51,65,49,51,64],
[64,47,80,0,64,50,50,47],
[83,48,66,67,0,33,49,64],
[98,63,82,81,98,0,81,81],
[114,79,80,81,82,50,0,97],
[85,50,67,84,67,50,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,50,60,61,61,39],
[78,0,51,83,61,71,59,52],
[65,80,0,61,60,74,70,44],
[81,48,70,0,68,83,49,54],
[71,70,71,63,0,59,67,47],
[70,60,57,48,72,0,69,42],
[70,72,61,82,64,62,0,69],
[92,79,87,77,84,89,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,56,63,55,75,69],
[79,0,68,64,80,66,66,83],
[74,63,0,54,73,55,65,66],
[75,67,77,0,78,58,70,75],
[68,51,58,53,0,43,57,65],
[76,65,76,73,88,0,85,78],
[56,65,66,61,74,46,0,72],
[62,48,65,56,66,53,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,78,76,61,72,65],
[56,0,69,73,68,59,54,55],
[52,62,0,55,65,52,60,55],
[53,58,76,0,68,64,64,67],
[55,63,66,63,0,56,60,62],
[70,72,79,67,75,0,67,63],
[59,77,71,67,71,64,0,63],
[66,76,76,64,69,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,63,63,87,78,106,61],
[45,0,62,44,95,77,72,52],
[68,69,0,43,77,76,88,61],
[68,87,88,0,88,71,89,60],
[44,36,54,43,0,52,81,52],
[53,54,55,60,79,0,71,69],
[25,59,43,42,50,60,0,41],
[70,79,70,71,79,62,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,90,66,81,82,76],
[58,0,67,68,60,59,66,56],
[68,64,0,72,60,67,69,66],
[41,63,59,0,47,65,56,55],
[65,71,71,84,0,76,67,58],
[50,72,64,66,55,0,51,56],
[49,65,62,75,64,80,0,67],
[55,75,65,76,73,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,71,48,75,62,40],
[66,0,77,86,49,66,83,69],
[61,54,0,60,53,62,70,42],
[60,45,71,0,64,77,60,47],
[83,82,78,67,0,68,93,55],
[56,65,69,54,63,0,67,39],
[69,48,61,71,38,64,0,53],
[91,62,89,84,76,92,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,78,60,74,75,64],
[65,0,69,63,73,78,61,65],
[62,62,0,65,48,67,59,59],
[53,68,66,0,48,77,63,58],
[71,58,83,83,0,78,68,84],
[57,53,64,54,53,0,47,51],
[56,70,72,68,63,84,0,62],
[67,66,72,73,47,80,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,70,68,70,65,74],
[65,0,68,72,60,73,70,72],
[65,63,0,70,66,74,75,68],
[61,59,61,0,58,64,62,66],
[63,71,65,73,0,68,75,73],
[61,58,57,67,63,0,64,68],
[66,61,56,69,56,67,0,69],
[57,59,63,65,58,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,76,68,70,62,65],
[62,0,65,68,64,61,60,65],
[58,66,0,62,55,56,46,55],
[55,63,69,0,65,75,63,65],
[63,67,76,66,0,60,62,61],
[61,70,75,56,71,0,76,69],
[69,71,85,68,69,55,0,70],
[66,66,76,66,70,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,52,51,53,45,47,68],
[82,0,62,74,69,79,57,79],
[79,69,0,73,77,64,51,81],
[80,57,58,0,72,58,63,77],
[78,62,54,59,0,53,66,68],
[86,52,67,73,78,0,64,68],
[84,74,80,68,65,67,0,87],
[63,52,50,54,63,63,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,75,65,87,78,80,83],
[51,0,57,61,69,60,49,56],
[56,74,0,50,75,57,54,53],
[66,70,81,0,71,75,72,65],
[44,62,56,60,0,62,60,49],
[53,71,74,56,69,0,63,60],
[51,82,77,59,71,68,0,54],
[48,75,78,66,82,71,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,72,58,66,64,64,70],
[76,0,79,65,77,68,83,71],
[59,52,0,61,65,62,61,61],
[73,66,70,0,59,62,72,68],
[65,54,66,72,0,68,65,56],
[67,63,69,69,63,0,54,64],
[67,48,70,59,66,77,0,66],
[61,60,70,63,75,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,95,77,131,55,57,113],
[58,0,58,77,112,56,75,76],
[36,73,0,57,74,73,54,74],
[54,54,74,0,92,54,92,112],
[0,19,57,39,0,37,19,57],
[76,75,58,77,94,0,94,94],
[74,56,77,39,112,37,0,112],
[18,55,57,19,74,37,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,49,49,61,51,46,58],
[79,0,61,68,69,73,71,77],
[82,70,0,60,75,70,64,76],
[82,63,71,0,77,66,60,82],
[70,62,56,54,0,54,51,71],
[80,58,61,65,77,0,60,73],
[85,60,67,71,80,71,0,81],
[73,54,55,49,60,58,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,82,63,51,73,54,28],
[66,0,58,70,73,67,57,46],
[49,73,0,52,51,50,31,27],
[68,61,79,0,53,63,44,38],
[80,58,80,78,0,80,44,73],
[58,64,81,68,51,0,36,41],
[77,74,100,87,87,95,0,62],
[103,85,104,93,58,90,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,66,62,57,67,63],
[67,0,67,53,70,64,64,61],
[65,64,0,54,69,64,59,64],
[65,78,77,0,74,79,71,69],
[69,61,62,57,0,61,68,57],
[74,67,67,52,70,0,67,59],
[64,67,72,60,63,64,0,51],
[68,70,67,62,74,72,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,66,69,68,59,58],
[61,0,62,54,61,69,62,62],
[69,69,0,59,63,62,63,53],
[65,77,72,0,59,68,62,71],
[62,70,68,72,0,75,64,65],
[63,62,69,63,56,0,62,64],
[72,69,68,69,67,69,0,64],
[73,69,78,60,66,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,64,72,72,75,66],
[68,0,67,65,60,63,66,60],
[67,64,0,68,71,70,62,68],
[67,66,63,0,55,66,66,63],
[59,71,60,76,0,66,58,63],
[59,68,61,65,65,0,65,72],
[56,65,69,65,73,66,0,65],
[65,71,63,68,68,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,66,52,65,85,63,65],
[84,0,60,50,68,95,82,70],
[65,71,0,79,76,96,84,58],
[79,81,52,0,87,103,91,70],
[66,63,55,44,0,76,68,54],
[46,36,35,28,55,0,45,44],
[68,49,47,40,63,86,0,51],
[66,61,73,61,77,87,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,73,59,71,66,68,69],
[55,0,63,74,72,53,60,57],
[58,68,0,66,64,61,69,65],
[72,57,65,0,67,62,63,67],
[60,59,67,64,0,54,52,55],
[65,78,70,69,77,0,67,70],
[63,71,62,68,79,64,0,67],
[62,74,66,64,76,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,97,64,48,79,68],
[82,0,57,81,70,79,69,93],
[73,74,0,78,79,74,70,62],
[34,50,53,0,54,42,53,56],
[67,61,52,77,0,54,77,61],
[83,52,57,89,77,0,80,70],
[52,62,61,78,54,51,0,43],
[63,38,69,75,70,61,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,62,58,64,62,61],
[63,0,65,68,60,59,66,67],
[64,66,0,68,54,65,61,62],
[69,63,63,0,72,68,70,66],
[73,71,77,59,0,72,74,73],
[67,72,66,63,59,0,69,58],
[69,65,70,61,57,62,0,60],
[70,64,69,65,58,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,61,83,69,64,69,64],
[55,0,52,68,41,83,61,86],
[70,79,0,65,58,70,67,82],
[48,63,66,0,54,50,76,70],
[62,90,73,77,0,72,75,74],
[67,48,61,81,59,0,65,67],
[62,70,64,55,56,66,0,70],
[67,45,49,61,57,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,74,70,68,60,72,76],
[70,0,62,65,57,64,66,68],
[57,69,0,53,59,54,57,59],
[61,66,78,0,62,64,63,67],
[63,74,72,69,0,67,69,69],
[71,67,77,67,64,0,65,59],
[59,65,74,68,62,66,0,66],
[55,63,72,64,62,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,87,45,77,78,67,89],
[64,0,86,65,65,34,44,55],
[44,45,0,46,78,57,35,57],
[86,66,85,0,88,77,65,65],
[54,66,53,43,0,57,56,45],
[53,97,74,54,74,0,65,52],
[64,87,96,66,75,66,0,74],
[42,76,74,66,86,79,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,62,62,61,72,75],
[63,0,73,64,68,74,68,76],
[63,58,0,67,64,67,57,67],
[69,67,64,0,67,64,65,73],
[69,63,67,64,0,63,66,73],
[70,57,64,67,68,0,63,66],
[59,63,74,66,65,68,0,71],
[56,55,64,58,58,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,65,89,52,73,65],
[67,0,66,69,72,54,53,76],
[61,65,0,69,83,85,62,62],
[66,62,62,0,69,73,77,52],
[42,59,48,62,0,55,45,50],
[79,77,46,58,76,0,64,69],
[58,78,69,54,86,67,0,68],
[66,55,69,79,81,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,71,63,62,65,52,62],
[74,0,69,68,62,72,62,76],
[60,62,0,60,59,58,50,67],
[68,63,71,0,61,64,46,65],
[69,69,72,70,0,63,66,67],
[66,59,73,67,68,0,56,73],
[79,69,81,85,65,75,0,69],
[69,55,64,66,64,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,75,62,58,71,53,64],
[65,0,76,61,73,70,62,68],
[56,55,0,45,54,56,43,61],
[69,70,86,0,67,83,74,64],
[73,58,77,64,0,72,57,76],
[60,61,75,48,59,0,64,59],
[78,69,88,57,74,67,0,74],
[67,63,70,67,55,72,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,59,59,59,56,66],
[72,0,64,63,62,59,70,64],
[71,67,0,70,67,71,62,62],
[72,68,61,0,64,67,67,52],
[72,69,64,67,0,65,69,58],
[72,72,60,64,66,0,59,47],
[75,61,69,64,62,72,0,54],
[65,67,69,79,73,84,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,61,62,73,53,82],
[65,0,63,66,63,72,62,76],
[71,68,0,73,72,76,58,80],
[70,65,58,0,63,75,57,70],
[69,68,59,68,0,76,70,81],
[58,59,55,56,55,0,54,73],
[78,69,73,74,61,77,0,75],
[49,55,51,61,50,58,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,65,58,69,58,63],
[66,0,70,72,63,67,60,68],
[66,61,0,65,62,67,63,70],
[66,59,66,0,68,66,70,68],
[73,68,69,63,0,74,57,73],
[62,64,64,65,57,0,57,66],
[73,71,68,61,74,74,0,78],
[68,63,61,63,58,65,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,38,48,39,45,45],
[85,0,52,71,59,66,67,70],
[87,79,0,73,66,53,76,78],
[93,60,58,0,77,65,58,79],
[83,72,65,54,0,48,54,67],
[92,65,78,66,83,0,60,78],
[86,64,55,73,77,71,0,80],
[86,61,53,52,64,53,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,79,77,69,73,80],
[66,0,63,82,72,64,77,69],
[61,68,0,69,73,62,74,64],
[52,49,62,0,60,48,72,60],
[54,59,58,71,0,57,69,74],
[62,67,69,83,74,0,85,71],
[58,54,57,59,62,46,0,61],
[51,62,67,71,57,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,79,65,54,55,66,60],
[66,0,69,65,67,55,73,72],
[52,62,0,57,65,56,69,65],
[66,66,74,0,57,68,75,65],
[77,64,66,74,0,66,68,62],
[76,76,75,63,65,0,73,70],
[65,58,62,56,63,58,0,59],
[71,59,66,66,69,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,86,86,64,86,109,86],
[45,0,64,86,41,22,108,45],
[45,67,0,66,86,44,88,67],
[45,45,65,0,65,22,86,45],
[67,90,45,66,0,44,111,68],
[45,109,87,109,87,0,109,68],
[22,23,43,45,20,22,0,22],
[45,86,64,86,63,63,109,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,72,62,68,65,64],
[63,0,74,58,60,60,68,61],
[57,57,0,58,62,54,63,59],
[59,73,73,0,63,60,65,65],
[69,71,69,68,0,67,75,62],
[63,71,77,71,64,0,71,70],
[66,63,68,66,56,60,0,60],
[67,70,72,66,69,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,70,59,67,63,66],
[64,0,72,65,67,67,65,72],
[62,59,0,69,56,65,71,74],
[61,66,62,0,64,60,61,67],
[72,64,75,67,0,69,74,74],
[64,64,66,71,62,0,61,66],
[68,66,60,70,57,70,0,75],
[65,59,57,64,57,65,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,57,69,60,66,63,63],
[73,0,62,70,62,65,69,72],
[74,69,0,67,63,67,70,66],
[62,61,64,0,53,64,62,61],
[71,69,68,78,0,63,69,61],
[65,66,64,67,68,0,69,70],
[68,62,61,69,62,62,0,58],
[68,59,65,70,70,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,56,79,54,53,75],
[65,0,60,64,70,60,61,89],
[66,71,0,64,80,75,66,84],
[75,67,67,0,79,66,52,74],
[52,61,51,52,0,55,42,68],
[77,71,56,65,76,0,61,83],
[78,70,65,79,89,70,0,80],
[56,42,47,57,63,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,77,66,83,85,49,86],
[72,0,77,64,90,76,78,96],
[54,54,0,45,71,64,55,75],
[65,67,86,0,75,84,68,86],
[48,41,60,56,0,66,52,60],
[46,55,67,47,65,0,68,67],
[82,53,76,63,79,63,0,84],
[45,35,56,45,71,64,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,79,43,57,64,46,46],
[82,0,68,69,51,56,65,62],
[52,63,0,57,49,34,63,52],
[88,62,74,0,67,72,72,59],
[74,80,82,64,0,65,72,42],
[67,75,97,59,66,0,69,57],
[85,66,68,59,59,62,0,81],
[85,69,79,72,89,74,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,49,77,63,58,40],
[63,0,69,71,76,72,82,66],
[67,62,0,75,75,83,87,69],
[82,60,56,0,72,67,74,55],
[54,55,56,59,0,66,68,44],
[68,59,48,64,65,0,67,47],
[73,49,44,57,63,64,0,60],
[91,65,62,76,87,84,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,83,80,74,78,75,70],
[71,0,81,68,80,71,76,62],
[48,50,0,67,65,61,62,52],
[51,63,64,0,70,57,65,56],
[57,51,66,61,0,60,66,53],
[53,60,70,74,71,0,67,55],
[56,55,69,66,65,64,0,56],
[61,69,79,75,78,76,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,50,51,61,78,51,43],
[70,0,76,61,62,59,66,73],
[81,55,0,54,57,66,67,60],
[80,70,77,0,69,71,86,58],
[70,69,74,62,0,68,72,61],
[53,72,65,60,63,0,73,53],
[80,65,64,45,59,58,0,53],
[88,58,71,73,70,78,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,69,68,64,67,55,56],
[69,0,75,76,64,71,61,66],
[62,56,0,73,59,73,60,65],
[63,55,58,0,62,67,52,46],
[67,67,72,69,0,71,66,60],
[64,60,58,64,60,0,53,56],
[76,70,71,79,65,78,0,67],
[75,65,66,85,71,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,59,65,54,59,55],
[69,0,64,63,81,67,73,49],
[68,67,0,71,78,58,56,58],
[72,68,60,0,71,59,60,46],
[66,50,53,60,0,57,40,41],
[77,64,73,72,74,0,66,65],
[72,58,75,71,91,65,0,66],
[76,82,73,85,90,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,51,68,59,66,55,62],
[83,0,58,76,70,60,61,66],
[80,73,0,87,74,74,68,59],
[63,55,44,0,59,53,55,64],
[72,61,57,72,0,74,65,61],
[65,71,57,78,57,0,58,61],
[76,70,63,76,66,73,0,68],
[69,65,72,67,70,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,53,54,67,67,69],
[66,0,42,50,38,66,52,65],
[60,89,0,72,67,68,67,68],
[78,81,59,0,55,72,71,57],
[77,93,64,76,0,67,75,83],
[64,65,63,59,64,0,44,63],
[64,79,64,60,56,87,0,76],
[62,66,63,74,48,68,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,59,74,45,72,64],
[64,0,76,55,70,57,90,71],
[58,55,0,47,59,58,59,66],
[72,76,84,0,78,76,95,54],
[57,61,72,53,0,60,78,50],
[86,74,73,55,71,0,65,62],
[59,41,72,36,53,66,0,50],
[67,60,65,77,81,69,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,50,61,53,59,52,63],
[78,0,58,62,57,58,59,61],
[81,73,0,72,62,77,77,73],
[70,69,59,0,70,71,61,57],
[78,74,69,61,0,80,66,75],
[72,73,54,60,51,0,60,57],
[79,72,54,70,65,71,0,75],
[68,70,58,74,56,74,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,77,69,51,83,58,62],
[55,0,71,56,57,71,45,73],
[54,60,0,66,58,72,65,58],
[62,75,65,0,64,94,55,75],
[80,74,73,67,0,80,73,58],
[48,60,59,37,51,0,33,53],
[73,86,66,76,58,98,0,68],
[69,58,73,56,73,78,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,66,64,75,65,62],
[63,0,63,64,60,78,64,64],
[67,68,0,63,67,75,65,62],
[65,67,68,0,68,72,71,66],
[67,71,64,63,0,78,69,63],
[56,53,56,59,53,0,60,53],
[66,67,66,60,62,71,0,56],
[69,67,69,65,68,78,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,51,69,76,68,76,74],
[46,0,45,64,66,51,51,49],
[80,86,0,73,91,81,73,64],
[62,67,58,0,71,65,67,59],
[55,65,40,60,0,66,61,71],
[63,80,50,66,65,0,61,67],
[55,80,58,64,70,70,0,76],
[57,82,67,72,60,64,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,62,71,73,66,70],
[76,0,66,61,63,77,78,57],
[63,65,0,63,64,74,73,66],
[69,70,68,0,62,69,72,69],
[60,68,67,69,0,76,69,67],
[58,54,57,62,55,0,60,55],
[65,53,58,59,62,71,0,61],
[61,74,65,62,64,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,69,63,75,73,68],
[62,0,68,59,64,62,65,65],
[62,63,0,65,59,70,68,58],
[62,72,66,0,65,72,67,69],
[68,67,72,66,0,67,64,65],
[56,69,61,59,64,0,59,60],
[58,66,63,64,67,72,0,66],
[63,66,73,62,66,71,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,72,67,58,82,43],
[67,0,66,57,60,49,57,41],
[65,65,0,56,69,74,56,59],
[59,74,75,0,84,74,75,60],
[64,71,62,47,0,39,53,39],
[73,82,57,57,92,0,56,60],
[49,74,75,56,78,75,0,68],
[88,90,72,71,92,71,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,66,59,55,70,61],
[77,0,73,67,69,70,64,68],
[64,58,0,71,60,61,59,59],
[65,64,60,0,65,58,66,66],
[72,62,71,66,0,66,70,64],
[76,61,70,73,65,0,61,65],
[61,67,72,65,61,70,0,67],
[70,63,72,65,67,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,70,84,69,74,70],
[69,0,58,59,74,69,70,61],
[60,73,0,60,74,71,86,64],
[61,72,71,0,74,76,75,60],
[47,57,57,57,0,66,59,54],
[62,62,60,55,65,0,68,62],
[57,61,45,56,72,63,0,58],
[61,70,67,71,77,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,67,58,64,72,77,78],
[36,0,46,32,54,48,57,57],
[64,85,0,67,74,75,81,72],
[73,99,64,0,83,88,79,78],
[67,77,57,48,0,71,66,73],
[59,83,56,43,60,0,56,76],
[54,74,50,52,65,75,0,74],
[53,74,59,53,58,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,58,54,59,61,75],
[63,0,66,50,56,66,62,66],
[61,65,0,65,71,67,57,80],
[73,81,66,0,59,77,62,68],
[77,75,60,72,0,74,55,71],
[72,65,64,54,57,0,59,75],
[70,69,74,69,76,72,0,64],
[56,65,51,63,60,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,66,70,74,68,60],
[64,0,56,59,64,58,71,54],
[65,75,0,65,71,68,70,59],
[65,72,66,0,70,69,75,65],
[61,67,60,61,0,62,68,63],
[57,73,63,62,69,0,60,67],
[63,60,61,56,63,71,0,55],
[71,77,72,66,68,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,61,62,56,59,57],
[69,0,66,58,66,60,57,63],
[68,65,0,68,66,63,65,70],
[70,73,63,0,68,66,72,66],
[69,65,65,63,0,63,58,60],
[75,71,68,65,68,0,67,68],
[72,74,66,59,73,64,0,58],
[74,68,61,65,71,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,65,66,77,75,69],
[58,0,67,65,72,76,68,69],
[60,64,0,62,66,73,73,70],
[66,66,69,0,63,79,72,70],
[65,59,65,68,0,73,68,67],
[54,55,58,52,58,0,67,65],
[56,63,58,59,63,64,0,61],
[62,62,61,61,64,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,62,75,69,85,68],
[64,0,59,54,80,73,70,54],
[68,72,0,74,85,64,75,61],
[69,77,57,0,82,70,69,63],
[56,51,46,49,0,50,53,45],
[62,58,67,61,81,0,67,54],
[46,61,56,62,78,64,0,60],
[63,77,70,68,86,77,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,71,52,59,68,71,53],
[72,0,78,63,72,76,83,63],
[60,53,0,51,52,55,63,43],
[79,68,80,0,59,71,71,69],
[72,59,79,72,0,76,68,55],
[63,55,76,60,55,0,63,59],
[60,48,68,60,63,68,0,50],
[78,68,88,62,76,72,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,87,87,87,87,44,131],
[44,0,44,44,0,0,44,88],
[44,87,0,87,44,43,88,88],
[44,87,44,0,44,44,44,44],
[44,131,87,87,0,43,44,131],
[44,131,88,87,88,0,88,88],
[87,87,43,87,87,43,0,131],
[0,43,43,87,0,43,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,82,68,73,63,81,76],
[55,0,69,57,71,60,63,63],
[49,62,0,56,62,60,64,64],
[63,74,75,0,74,76,70,62],
[58,60,69,57,0,66,62,61],
[68,71,71,55,65,0,68,67],
[50,68,67,61,69,63,0,64],
[55,68,67,69,70,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,61,79,71,61,63],
[61,0,61,68,64,63,70,68],
[59,70,0,63,69,69,58,69],
[70,63,68,0,76,66,58,66],
[52,67,62,55,0,56,44,62],
[60,68,62,65,75,0,68,66],
[70,61,73,73,87,63,0,63],
[68,63,62,65,69,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,78,63,55,50,66],
[67,0,60,67,62,58,67,48],
[69,71,0,83,64,78,64,66],
[53,64,48,0,56,51,37,53],
[68,69,67,75,0,69,62,66],
[76,73,53,80,62,0,73,62],
[81,64,67,94,69,58,0,71],
[65,83,65,78,65,69,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,79,92,98,80,89,71],
[71,0,59,63,88,70,90,52],
[52,72,0,82,101,90,72,52],
[39,68,49,0,78,48,48,69],
[33,43,30,53,0,62,61,31],
[51,61,41,83,69,0,81,71],
[42,41,59,83,70,50,0,52],
[60,79,79,62,100,60,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,81,66,66,62,57,63],
[62,0,69,54,56,60,53,58],
[50,62,0,54,59,63,53,47],
[65,77,77,0,67,74,69,72],
[65,75,72,64,0,71,61,62],
[69,71,68,57,60,0,56,54],
[74,78,78,62,70,75,0,68],
[68,73,84,59,69,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,54,78,71,68,66,78],
[56,0,55,81,72,51,57,58],
[77,76,0,63,69,67,67,75],
[53,50,68,0,82,52,50,51],
[60,59,62,49,0,53,65,49],
[63,80,64,79,78,0,60,65],
[65,74,64,81,66,71,0,65],
[53,73,56,80,82,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,59,66,56,62,56],
[74,0,78,70,84,60,68,73],
[73,53,0,66,67,66,67,72],
[72,61,65,0,76,52,50,73],
[65,47,64,55,0,48,56,60],
[75,71,65,79,83,0,73,72],
[69,63,64,81,75,58,0,70],
[75,58,59,58,71,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,90,68,67,56,57,32],
[71,0,99,68,88,59,44,52],
[41,32,0,33,39,39,44,24],
[63,63,98,0,71,60,60,68],
[64,43,92,60,0,30,49,53],
[75,72,92,71,101,0,81,45],
[74,87,87,71,82,50,0,35],
[99,79,107,63,78,86,96,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,57,79,60,69,68],
[53,0,63,54,68,55,64,52],
[66,68,0,58,67,69,68,65],
[74,77,73,0,74,64,69,72],
[52,63,64,57,0,56,53,46],
[71,76,62,67,75,0,74,67],
[62,67,63,62,78,57,0,56],
[63,79,66,59,85,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,69,65,64,60,51],
[67,0,68,58,66,59,65,62],
[70,63,0,65,74,75,70,72],
[62,73,66,0,68,69,68,66],
[66,65,57,63,0,60,62,57],
[67,72,56,62,71,0,65,72],
[71,66,61,63,69,66,0,66],
[80,69,59,65,74,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,66,68,71,76,64],
[62,0,75,66,64,56,70,61],
[58,56,0,62,38,60,60,58],
[65,65,69,0,53,50,66,59],
[63,67,93,78,0,76,73,64],
[60,75,71,81,55,0,81,74],
[55,61,71,65,58,50,0,70],
[67,70,73,72,67,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,53,50,48,55,48,57],
[79,0,73,69,66,61,66,77],
[78,58,0,59,64,58,52,68],
[81,62,72,0,68,67,61,76],
[83,65,67,63,0,62,63,68],
[76,70,73,64,69,0,61,75],
[83,65,79,70,68,70,0,77],
[74,54,63,55,63,56,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,83,95,70,71,70,46],
[48,0,58,61,59,71,60,59],
[48,73,0,60,59,83,37,48],
[36,70,71,0,58,83,71,59],
[61,72,72,73,0,72,60,48],
[60,60,48,48,59,0,24,37],
[61,71,94,60,71,107,0,96],
[85,72,83,72,83,94,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,66,69,61,71,64],
[62,0,67,59,59,63,63,68],
[63,64,0,64,61,58,58,63],
[65,72,67,0,62,67,62,68],
[62,72,70,69,0,61,72,75],
[70,68,73,64,70,0,69,78],
[60,68,73,69,59,62,0,73],
[67,63,68,63,56,53,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,66,69,64,77,70],
[61,0,68,67,62,65,68,74],
[63,63,0,64,61,64,67,66],
[65,64,67,0,62,65,69,69],
[62,69,70,69,0,69,75,63],
[67,66,67,66,62,0,72,71],
[54,63,64,62,56,59,0,68],
[61,57,65,62,68,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,51,61,56,61,61],
[78,0,85,59,75,69,67,68],
[65,46,0,49,55,53,51,52],
[80,72,82,0,79,70,69,63],
[70,56,76,52,0,51,70,56],
[75,62,78,61,80,0,71,66],
[70,64,80,62,61,60,0,64],
[70,63,79,68,75,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,73,70,80,67,69],
[66,0,74,65,58,73,75,79],
[54,57,0,67,58,62,69,53],
[58,66,64,0,64,65,74,69],
[61,73,73,67,0,72,71,73],
[51,58,69,66,59,0,60,64],
[64,56,62,57,60,71,0,66],
[62,52,78,62,58,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,69,65,72,76,70],
[63,0,68,61,61,65,74,69],
[63,63,0,74,68,68,73,66],
[62,70,57,0,61,67,79,65],
[66,70,63,70,0,67,76,69],
[59,66,63,64,64,0,72,67],
[55,57,58,52,55,59,0,56],
[61,62,65,66,62,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,74,63,75,64,65],
[60,0,63,69,69,65,63,65],
[64,68,0,64,58,67,62,64],
[57,62,67,0,61,70,64,57],
[68,62,73,70,0,68,55,64],
[56,66,64,61,63,0,69,61],
[67,68,69,67,76,62,0,68],
[66,66,67,74,67,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,19,38,38,40,19,57],
[112,0,78,78,59,76,78,76],
[112,53,0,59,95,74,59,57],
[93,53,72,0,93,93,0,36],
[93,72,36,38,0,74,19,55],
[91,55,57,38,57,0,19,57],
[112,53,72,131,112,112,0,91],
[74,55,74,95,76,74,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,88,67,61,71,73],
[76,0,65,87,62,57,72,88],
[74,66,0,78,55,61,67,64],
[43,44,53,0,26,28,54,54],
[64,69,76,105,0,70,61,81],
[70,74,70,103,61,0,76,84],
[60,59,64,77,70,55,0,69],
[58,43,67,77,50,47,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,66,74,64,79,74,61],
[56,0,63,70,62,71,71,68],
[65,68,0,71,57,78,74,66],
[57,61,60,0,59,70,77,59],
[67,69,74,72,0,67,73,63],
[52,60,53,61,64,0,63,54],
[57,60,57,54,58,68,0,63],
[70,63,65,72,68,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,77,105,78,81,64,76],
[44,0,62,71,65,54,54,48],
[54,69,0,92,62,85,62,79],
[26,60,39,0,39,50,39,43],
[53,66,69,92,0,65,57,61],
[50,77,46,81,66,0,67,51],
[67,77,69,92,74,64,0,56],
[55,83,52,88,70,80,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,70,62,62,67,69],
[66,0,61,66,60,66,69,67],
[71,70,0,68,70,62,67,62],
[61,65,63,0,66,66,63,61],
[69,71,61,65,0,63,69,69],
[69,65,69,65,68,0,65,70],
[64,62,64,68,62,66,0,62],
[62,64,69,70,62,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,80,89,96,71,74,69],
[72,0,62,85,65,65,75,56],
[51,69,0,75,81,62,77,68],
[42,46,56,0,66,56,55,64],
[35,66,50,65,0,50,64,45],
[60,66,69,75,81,0,79,80],
[57,56,54,76,67,52,0,63],
[62,75,63,67,86,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,66,68,70,69,69],
[66,0,62,57,57,78,62,74],
[64,69,0,67,70,68,62,73],
[65,74,64,0,60,65,62,68],
[63,74,61,71,0,65,68,60],
[61,53,63,66,66,0,66,64],
[62,69,69,69,63,65,0,71],
[62,57,58,63,71,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,84,68,74,70,72,62],
[59,0,68,70,68,64,65,71],
[47,63,0,57,55,69,57,56],
[63,61,74,0,61,74,79,69],
[57,63,76,70,0,62,77,65],
[61,67,62,57,69,0,61,55],
[59,66,74,52,54,70,0,51],
[69,60,75,62,66,76,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,73,82,77,84,63,76],
[57,0,72,69,67,80,60,74],
[58,59,0,74,66,68,67,69],
[49,62,57,0,54,64,56,70],
[54,64,65,77,0,72,73,70],
[47,51,63,67,59,0,54,53],
[68,71,64,75,58,77,0,69],
[55,57,62,61,61,78,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,56,62,68,64,64,73],
[53,0,66,69,63,56,60,59],
[75,65,0,66,68,63,63,73],
[69,62,65,0,67,59,70,69],
[63,68,63,64,0,55,64,70],
[67,75,68,72,76,0,64,70],
[67,71,68,61,67,67,0,68],
[58,72,58,62,61,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,73,72,72,68,64],
[65,0,55,55,55,71,62,65],
[63,76,0,73,69,66,73,85],
[58,76,58,0,61,65,68,65],
[59,76,62,70,0,76,69,72],
[59,60,65,66,55,0,76,69],
[63,69,58,63,62,55,0,65],
[67,66,46,66,59,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,62,72,66,71,82,63],
[50,0,44,60,62,66,65,59],
[69,87,0,73,63,76,79,61],
[59,71,58,0,49,71,64,56],
[65,69,68,82,0,65,74,74],
[60,65,55,60,66,0,59,60],
[49,66,52,67,57,72,0,60],
[68,72,70,75,57,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,59,57,58,63,61],
[61,0,67,52,54,66,62,54],
[61,64,0,61,56,52,56,56],
[72,79,70,0,70,63,66,68],
[74,77,75,61,0,63,59,55],
[73,65,79,68,68,0,69,62],
[68,69,75,65,72,62,0,68],
[70,77,75,63,76,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,57,64,66,58,70],
[62,0,64,70,67,50,60,67],
[69,67,0,72,68,59,52,74],
[74,61,59,0,69,51,58,61],
[67,64,63,62,0,62,57,65],
[65,81,72,80,69,0,69,68],
[73,71,79,73,74,62,0,66],
[61,64,57,70,66,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,66,56,69,61,61],
[68,0,65,67,55,68,70,68],
[69,66,0,72,58,68,67,66],
[65,64,59,0,52,60,62,62],
[75,76,73,79,0,72,70,65],
[62,63,63,71,59,0,63,66],
[70,61,64,69,61,68,0,68],
[70,63,65,69,66,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,70,57,64,68,54],
[62,0,62,70,58,56,66,69],
[70,69,0,58,50,62,61,62],
[61,61,73,0,59,61,61,52],
[74,73,81,72,0,72,63,67],
[67,75,69,70,59,0,69,67],
[63,65,70,70,68,62,0,68],
[77,62,69,79,64,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,45,78,91,89,60,67],
[57,0,73,67,84,79,53,63],
[86,58,0,68,78,79,62,63],
[53,64,63,0,86,77,72,61],
[40,47,53,45,0,81,47,40],
[42,52,52,54,50,0,44,46],
[71,78,69,59,84,87,0,64],
[64,68,68,70,91,85,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,79,70,73,53,60],
[70,0,73,52,77,67,49,66],
[65,58,0,65,83,67,59,59],
[52,79,66,0,87,64,64,64],
[61,54,48,44,0,36,36,56],
[58,64,64,67,95,0,68,70],
[78,82,72,67,95,63,0,76],
[71,65,72,67,75,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,71,67,62,54,44,66],
[76,0,79,65,67,63,57,59],
[60,52,0,68,63,53,47,50],
[64,66,63,0,59,71,61,58],
[69,64,68,72,0,61,49,50],
[77,68,78,60,70,0,66,61],
[87,74,84,70,82,65,0,71],
[65,72,81,73,81,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,65,66,68,69,68],
[59,0,66,59,70,65,68,63],
[69,65,0,68,73,68,69,61],
[66,72,63,0,72,54,68,65],
[65,61,58,59,0,61,58,68],
[63,66,63,77,70,0,64,60],
[62,63,62,63,73,67,0,65],
[63,68,70,66,63,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,80,69,80,70,60,72],
[68,0,72,66,72,64,55,72],
[51,59,0,63,68,59,71,69],
[62,65,68,0,74,70,66,67],
[51,59,63,57,0,60,61,65],
[61,67,72,61,71,0,66,68],
[71,76,60,65,70,65,0,70],
[59,59,62,64,66,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,64,72,69,71,82],
[64,0,64,65,65,68,68,80],
[65,67,0,73,71,72,59,77],
[67,66,58,0,64,67,66,76],
[59,66,60,67,0,73,55,73],
[62,63,59,64,58,0,62,71],
[60,63,72,65,76,69,0,76],
[49,51,54,55,58,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,57,67,68,58,66,57],
[91,0,63,59,82,81,83,69],
[74,68,0,65,63,71,67,81],
[64,72,66,0,62,68,76,64],
[63,49,68,69,0,50,88,70],
[73,50,60,63,81,0,66,80],
[65,48,64,55,43,65,0,49],
[74,62,50,67,61,51,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 131, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_131.csv", index=False, header=False)