
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,450,501,431,448,451,382,410],
[441,0,456,462,451,483,470,404],
[390,435,0,459,453,456,415,378],
[460,429,432,0,442,484,457,398],
[443,440,438,449,0,490,425,413],
[440,408,435,407,401,0,390,381],
[509,421,476,434,466,501,0,486],
[481,487,513,493,478,510,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,423,447,421,421,463,426],
[448,0,405,426,417,393,435,404],
[468,486,0,464,474,415,461,494],
[444,465,427,0,436,449,476,447],
[470,474,417,455,0,430,478,448],
[470,498,476,442,461,0,455,466],
[428,456,430,415,413,436,0,424],
[465,487,397,444,443,425,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,447,443,457,446,425,439],
[463,0,464,446,464,463,441,468],
[444,427,0,425,440,420,421,414],
[448,445,466,0,428,446,444,450],
[434,427,451,463,0,444,440,449],
[445,428,471,445,447,0,458,449],
[466,450,470,447,451,433,0,449],
[452,423,477,441,442,442,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,409,432,429,501,446,406],
[448,0,417,413,475,461,445,440],
[482,474,0,506,469,506,463,407],
[459,478,385,0,403,528,396,438],
[462,416,422,488,0,475,445,479],
[390,430,385,363,416,0,436,422],
[445,446,428,495,446,455,0,419],
[485,451,484,453,412,469,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,430,456,486,458,455],
[439,0,476,460,472,467,458,466],
[427,415,0,388,418,439,415,432],
[461,431,503,0,455,476,470,453],
[435,419,473,436,0,458,441,454],
[405,424,452,415,433,0,427,437],
[433,433,476,421,450,464,0,446],
[436,425,459,438,437,454,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,444,446,420,423,441,423],
[448,0,474,471,447,460,440,447],
[447,417,0,456,412,438,411,434],
[445,420,435,0,431,434,413,415],
[471,444,479,460,0,434,424,445],
[468,431,453,457,457,0,467,438],
[450,451,480,478,467,424,0,441],
[468,444,457,476,446,453,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,467,451,450,438,437,473],
[434,0,455,432,463,456,456,469],
[424,436,0,441,448,444,459,449],
[440,459,450,0,451,449,456,434],
[441,428,443,440,0,452,441,443],
[453,435,447,442,439,0,451,452],
[454,435,432,435,450,440,0,428],
[418,422,442,457,448,439,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,432,473,446,432,425,445],
[451,0,458,501,440,466,427,440],
[459,433,0,481,429,472,465,434],
[418,390,410,0,378,438,443,409],
[445,451,462,513,0,472,498,454],
[459,425,419,453,419,0,433,414],
[466,464,426,448,393,458,0,406],
[446,451,457,482,437,477,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,447,458,452,422,457,473],
[452,0,461,476,441,456,445,473],
[444,430,0,429,406,465,437,491],
[433,415,462,0,435,449,458,454],
[439,450,485,456,0,452,423,471],
[469,435,426,442,439,0,419,469],
[434,446,454,433,468,472,0,483],
[418,418,400,437,420,422,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,465,445,480,498,500,468],
[418,0,464,458,458,448,441,496],
[426,427,0,476,455,459,485,456],
[446,433,415,0,451,451,465,458],
[411,433,436,440,0,481,474,457],
[393,443,432,440,410,0,435,445],
[391,450,406,426,417,456,0,460],
[423,395,435,433,434,446,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,429,480,454,429,434,469],
[426,0,386,412,475,407,441,445],
[462,505,0,493,504,458,441,522],
[411,479,398,0,471,422,414,412],
[437,416,387,420,0,445,398,458],
[462,484,433,469,446,0,480,486],
[457,450,450,477,493,411,0,432],
[422,446,369,479,433,405,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,494,546,457,437,480,449],
[395,0,486,507,498,385,367,444],
[397,405,0,581,448,390,315,434],
[345,384,310,0,362,332,262,380],
[434,393,443,529,0,385,414,414],
[454,506,501,559,506,0,374,389],
[411,524,576,629,477,517,0,526],
[442,447,457,511,477,502,365,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,428,429,408,423,432,437],
[467,0,441,464,418,432,434,444],
[463,450,0,432,440,432,427,459],
[462,427,459,0,425,438,442,450],
[483,473,451,466,0,434,465,465],
[468,459,459,453,457,0,440,479],
[459,457,464,449,426,451,0,474],
[454,447,432,441,426,412,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,442,444,453,430,458,456],
[443,0,454,448,460,427,461,454],
[449,437,0,427,456,430,444,422],
[447,443,464,0,452,448,454,457],
[438,431,435,439,0,426,439,451],
[461,464,461,443,465,0,471,471],
[433,430,447,437,452,420,0,434],
[435,437,469,434,440,420,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,470,443,463,462,461,439],
[454,0,475,438,448,453,442,438],
[421,416,0,423,423,446,431,432],
[448,453,468,0,438,463,433,443],
[428,443,468,453,0,438,453,465],
[429,438,445,428,453,0,437,433],
[430,449,460,458,438,454,0,451],
[452,453,459,448,426,458,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,407,396,396,439,409,392],
[473,0,467,410,443,431,391,425],
[484,424,0,411,440,399,405,430],
[495,481,480,0,520,445,449,455],
[495,448,451,371,0,451,395,427],
[452,460,492,446,440,0,429,426],
[482,500,486,442,496,462,0,465],
[499,466,461,436,464,465,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,486,433,438,428,455,439],
[442,0,445,423,444,445,452,452],
[405,446,0,433,423,430,465,433],
[458,468,458,0,442,454,484,449],
[453,447,468,449,0,431,480,466],
[463,446,461,437,460,0,463,447],
[436,439,426,407,411,428,0,432],
[452,439,458,442,425,444,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,433,423,432,433,432,442],
[443,0,437,427,434,437,443,454],
[458,454,0,451,432,456,460,434],
[468,464,440,0,460,444,460,442],
[459,457,459,431,0,453,450,466],
[458,454,435,447,438,0,471,466],
[459,448,431,431,441,420,0,452],
[449,437,457,449,425,425,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,490,464,430,492,443,455],
[439,0,451,427,372,422,468,459],
[401,440,0,417,401,425,453,437],
[427,464,474,0,416,435,446,444],
[461,519,490,475,0,499,425,475],
[399,469,466,456,392,0,419,439],
[448,423,438,445,466,472,0,472],
[436,432,454,447,416,452,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,483,516,419,426,486,397],
[466,0,503,497,459,446,470,433],
[408,388,0,501,430,408,439,415],
[375,394,390,0,413,391,439,348],
[472,432,461,478,0,404,462,446],
[465,445,483,500,487,0,484,420],
[405,421,452,452,429,407,0,417],
[494,458,476,543,445,471,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,449,430,443,451,429,462],
[446,0,438,449,442,466,440,437],
[442,453,0,450,460,465,433,429],
[461,442,441,0,423,437,425,444],
[448,449,431,468,0,449,453,473],
[440,425,426,454,442,0,435,433],
[462,451,458,466,438,456,0,449],
[429,454,462,447,418,458,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,488,442,459,480,457,443],
[420,0,407,425,435,435,446,407],
[403,484,0,458,439,469,445,425],
[449,466,433,0,442,464,437,414],
[432,456,452,449,0,472,442,452],
[411,456,422,427,419,0,466,430],
[434,445,446,454,449,425,0,441],
[448,484,466,477,439,461,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,448,425,433,461,458,459],
[466,0,452,444,453,462,459,441],
[443,439,0,439,459,462,468,442],
[466,447,452,0,451,443,462,455],
[458,438,432,440,0,449,466,441],
[430,429,429,448,442,0,451,426],
[433,432,423,429,425,440,0,424],
[432,450,449,436,450,465,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,497,437,438,462,438,462],
[431,0,458,431,421,419,407,426],
[394,433,0,424,412,420,432,433],
[454,460,467,0,433,449,431,440],
[453,470,479,458,0,445,456,446],
[429,472,471,442,446,0,441,456],
[453,484,459,460,435,450,0,459],
[429,465,458,451,445,435,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,472,440,459,470,449,430],
[467,0,444,447,471,456,452,447],
[419,447,0,451,455,435,423,407],
[451,444,440,0,441,468,446,402],
[432,420,436,450,0,450,423,417],
[421,435,456,423,441,0,438,402],
[442,439,468,445,468,453,0,430],
[461,444,484,489,474,489,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,449,430,436,437,425,437],
[470,0,469,457,478,458,421,421],
[442,422,0,446,458,457,423,420],
[461,434,445,0,452,458,413,422],
[455,413,433,439,0,462,457,426],
[454,433,434,433,429,0,443,448],
[466,470,468,478,434,448,0,450],
[454,470,471,469,465,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,470,434,449,485,466,499],
[465,0,457,444,458,482,469,459],
[421,434,0,443,445,422,445,449],
[457,447,448,0,389,445,504,496],
[442,433,446,502,0,446,491,466],
[406,409,469,446,445,0,433,473],
[425,422,446,387,400,458,0,481],
[392,432,442,395,425,418,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,447,437,462,445,437,486],
[459,0,460,474,438,473,448,492],
[444,431,0,491,458,455,484,457],
[454,417,400,0,445,417,434,474],
[429,453,433,446,0,425,448,503],
[446,418,436,474,466,0,462,490],
[454,443,407,457,443,429,0,483],
[405,399,434,417,388,401,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,452,442,467,453,441,473],
[439,0,444,430,449,440,439,460],
[439,447,0,455,447,442,459,469],
[449,461,436,0,471,466,430,458],
[424,442,444,420,0,428,429,437],
[438,451,449,425,463,0,431,453],
[450,452,432,461,462,460,0,478],
[418,431,422,433,454,438,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,381,450,455,448,462,475,444],
[510,0,458,391,428,505,450,463],
[441,433,0,476,399,443,436,429],
[436,500,415,0,393,508,447,430],
[443,463,492,498,0,524,493,494],
[429,386,448,383,367,0,447,434],
[416,441,455,444,398,444,0,474],
[447,428,462,461,397,457,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,455,463,434,450,464,461],
[436,0,455,480,462,475,485,472],
[436,436,0,419,452,428,479,451],
[428,411,472,0,430,420,487,431],
[457,429,439,461,0,436,481,432],
[441,416,463,471,455,0,483,436],
[427,406,412,404,410,408,0,422],
[430,419,440,460,459,455,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,439,425,447,459,433,441],
[432,0,434,449,434,460,471,449],
[452,457,0,444,457,466,458,423],
[466,442,447,0,468,452,467,461],
[444,457,434,423,0,452,419,443],
[432,431,425,439,439,0,430,425],
[458,420,433,424,472,461,0,433],
[450,442,468,430,448,466,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,434,433,403,419,413,420],
[429,0,455,429,395,406,406,432],
[457,436,0,410,397,420,423,426],
[458,462,481,0,430,438,429,440],
[488,496,494,461,0,440,447,435],
[472,485,471,453,451,0,424,458],
[478,485,468,462,444,467,0,498],
[471,459,465,451,456,433,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,450,463,462,462,440,451],
[436,0,408,436,438,420,437,436],
[441,483,0,460,462,452,451,458],
[428,455,431,0,457,450,433,454],
[429,453,429,434,0,442,420,448],
[429,471,439,441,449,0,440,443],
[451,454,440,458,471,451,0,438],
[440,455,433,437,443,448,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,396,414,424,372,394,391],
[478,0,452,474,412,449,430,446],
[495,439,0,520,445,447,437,470],
[477,417,371,0,418,426,402,438],
[467,479,446,473,0,438,455,420],
[519,442,444,465,453,0,461,465],
[497,461,454,489,436,430,0,399],
[500,445,421,453,471,426,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,461,437,450,445,470,436],
[453,0,442,458,460,458,462,440],
[430,449,0,448,451,446,456,427],
[454,433,443,0,446,462,442,449],
[441,431,440,445,0,465,449,442],
[446,433,445,429,426,0,448,433],
[421,429,435,449,442,443,0,428],
[455,451,464,442,449,458,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,532,560,467,507,607,614],
[489,0,543,351,387,478,487,545],
[359,348,0,535,369,366,376,532],
[331,540,356,0,391,447,372,528],
[424,504,522,500,0,492,510,588],
[384,413,525,444,399,0,492,458],
[284,404,515,519,381,399,0,615],
[277,346,359,363,303,433,276,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,452,433,412,427,431,413],
[478,0,476,473,453,481,474,442],
[439,415,0,414,412,446,454,402],
[458,418,477,0,424,473,448,460],
[479,438,479,467,0,484,469,431],
[464,410,445,418,407,0,437,414],
[460,417,437,443,422,454,0,423],
[478,449,489,431,460,477,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,429,413,434,414,430,422],
[453,0,430,434,427,452,437,436],
[462,461,0,459,441,443,464,456],
[478,457,432,0,449,439,453,444],
[457,464,450,442,0,450,459,439],
[477,439,448,452,441,0,468,440],
[461,454,427,438,432,423,0,434],
[469,455,435,447,452,451,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,345,441,416,394,440,429],
[439,0,378,321,442,459,494,407],
[546,513,0,490,423,417,448,520],
[450,570,401,0,487,526,445,463],
[475,449,468,404,0,553,402,494],
[497,432,474,365,338,0,386,449],
[451,397,443,446,489,505,0,431],
[462,484,371,428,397,442,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,363,464,356,387,417,461],
[457,0,422,527,449,433,512,401],
[528,469,0,460,380,470,473,443],
[427,364,431,0,346,415,449,427],
[535,442,511,545,0,453,490,490],
[504,458,421,476,438,0,434,437],
[474,379,418,442,401,457,0,468],
[430,490,448,464,401,454,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,442,470,453,465,451,461],
[415,0,447,432,425,442,436,441],
[449,444,0,443,417,439,435,453],
[421,459,448,0,440,461,461,454],
[438,466,474,451,0,471,453,452],
[426,449,452,430,420,0,425,466],
[440,455,456,430,438,466,0,448],
[430,450,438,437,439,425,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,420,428,426,451,410,459],
[486,0,433,442,474,459,466,457],
[471,458,0,454,472,481,442,494],
[463,449,437,0,455,442,482,514],
[465,417,419,436,0,422,464,414],
[440,432,410,449,469,0,448,469],
[481,425,449,409,427,443,0,474],
[432,434,397,377,477,422,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,474,499,479,455,495,444],
[442,0,445,462,426,428,489,452],
[417,446,0,500,441,401,449,467],
[392,429,391,0,385,418,432,414],
[412,465,450,506,0,425,460,461],
[436,463,490,473,466,0,501,474],
[396,402,442,459,431,390,0,425],
[447,439,424,477,430,417,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,459,440,409,409,438,464],
[473,0,484,488,421,453,471,435],
[432,407,0,456,416,379,432,390],
[451,403,435,0,415,396,417,431],
[482,470,475,476,0,460,439,467],
[482,438,512,495,431,0,455,413],
[453,420,459,474,452,436,0,424],
[427,456,501,460,424,478,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,441,440,463,475,421,472],
[411,0,425,436,411,470,440,453],
[450,466,0,440,448,455,400,468],
[451,455,451,0,459,455,420,460],
[428,480,443,432,0,474,454,470],
[416,421,436,436,417,0,417,456],
[470,451,491,471,437,474,0,476],
[419,438,423,431,421,435,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,385,468,429,519,449,485],
[412,0,413,501,374,510,451,501],
[506,478,0,487,450,490,405,472],
[423,390,404,0,369,494,456,487],
[462,517,441,522,0,535,459,508],
[372,381,401,397,356,0,434,461],
[442,440,486,435,432,457,0,433],
[406,390,419,404,383,430,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,441,375,433,402,436,459],
[453,0,417,416,427,398,418,451],
[450,474,0,417,445,446,423,500],
[516,475,474,0,480,437,466,504],
[458,464,446,411,0,430,454,453],
[489,493,445,454,461,0,465,460],
[455,473,468,425,437,426,0,475],
[432,440,391,387,438,431,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,442,470,450,443,444,432],
[426,0,419,448,465,432,448,425],
[449,472,0,463,469,470,490,443],
[421,443,428,0,439,441,421,437],
[441,426,422,452,0,462,450,462],
[448,459,421,450,429,0,455,447],
[447,443,401,470,441,436,0,433],
[459,466,448,454,429,444,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,453,426,438,422,444,429],
[435,0,480,454,464,439,456,461],
[438,411,0,411,406,424,446,452],
[465,437,480,0,442,461,468,469],
[453,427,485,449,0,451,451,450],
[469,452,467,430,440,0,483,456],
[447,435,445,423,440,408,0,425],
[462,430,439,422,441,435,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,432,447,464,433,455,475],
[411,0,455,415,453,433,426,472],
[459,436,0,422,464,463,466,470],
[444,476,469,0,484,446,449,472],
[427,438,427,407,0,409,392,425],
[458,458,428,445,482,0,418,439],
[436,465,425,442,499,473,0,464],
[416,419,421,419,466,452,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,437,474,428,439,415,424],
[454,0,447,457,458,432,436,460],
[454,444,0,447,447,431,426,424],
[417,434,444,0,417,404,429,404],
[463,433,444,474,0,423,455,423],
[452,459,460,487,468,0,446,431],
[476,455,465,462,436,445,0,453],
[467,431,467,487,468,460,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,448,426,435,412,515,461],
[412,0,462,393,425,433,455,442],
[443,429,0,408,435,448,464,434],
[465,498,483,0,464,441,508,478],
[456,466,456,427,0,412,498,459],
[479,458,443,450,479,0,434,478],
[376,436,427,383,393,457,0,422],
[430,449,457,413,432,413,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,463,473,448,449,457,466],
[452,0,424,452,446,445,445,447],
[428,467,0,472,460,456,461,459],
[418,439,419,0,441,434,425,432],
[443,445,431,450,0,454,444,444],
[442,446,435,457,437,0,450,446],
[434,446,430,466,447,441,0,462],
[425,444,432,459,447,445,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,456,448,416,432,450,446],
[449,0,437,461,448,441,432,461],
[435,454,0,445,412,433,432,443],
[443,430,446,0,427,412,415,415],
[475,443,479,464,0,456,435,456],
[459,450,458,479,435,0,433,478],
[441,459,459,476,456,458,0,461],
[445,430,448,476,435,413,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,427,389,446,387,444,466],
[446,0,426,391,439,430,456,462],
[464,465,0,497,405,465,467,462],
[502,500,394,0,444,466,440,425],
[445,452,486,447,0,435,471,473],
[504,461,426,425,456,0,434,540],
[447,435,424,451,420,457,0,430],
[425,429,429,466,418,351,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,450,467,439,462,474,440],
[457,0,451,460,448,444,448,435],
[441,440,0,467,440,469,463,454],
[424,431,424,0,434,453,450,438],
[452,443,451,457,0,459,449,438],
[429,447,422,438,432,0,452,420],
[417,443,428,441,442,439,0,422],
[451,456,437,453,453,471,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,447,439,485,452,469,451],
[412,0,426,459,455,439,454,426],
[444,465,0,420,460,452,447,439],
[452,432,471,0,455,473,448,432],
[406,436,431,436,0,438,444,408],
[439,452,439,418,453,0,443,420],
[422,437,444,443,447,448,0,417],
[440,465,452,459,483,471,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,411,463,426,454,451,439],
[470,0,458,421,448,475,486,443],
[480,433,0,450,449,472,464,444],
[428,470,441,0,449,487,475,422],
[465,443,442,442,0,476,479,434],
[437,416,419,404,415,0,452,416],
[440,405,427,416,412,439,0,448],
[452,448,447,469,457,475,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,461,451,447,441,426,443],
[464,0,462,441,440,440,439,436],
[430,429,0,422,447,421,421,427],
[440,450,469,0,451,455,468,441],
[444,451,444,440,0,445,452,440],
[450,451,470,436,446,0,462,454],
[465,452,470,423,439,429,0,442],
[448,455,464,450,451,437,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,452,447,457,444,475,446],
[441,0,429,423,459,447,427,430],
[439,462,0,439,454,439,459,456],
[444,468,452,0,457,458,445,434],
[434,432,437,434,0,453,458,438],
[447,444,452,433,438,0,448,443],
[416,464,432,446,433,443,0,448],
[445,461,435,457,453,448,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,461,433,449,459,450,437],
[477,0,449,448,460,465,444,444],
[430,442,0,448,439,457,427,433],
[458,443,443,0,439,433,431,437],
[442,431,452,452,0,453,429,447],
[432,426,434,458,438,0,463,426],
[441,447,464,460,462,428,0,447],
[454,447,458,454,444,465,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,415,449,409,433,443,413],
[466,0,438,478,413,446,449,461],
[476,453,0,480,443,448,448,449],
[442,413,411,0,420,434,424,429],
[482,478,448,471,0,457,438,468],
[458,445,443,457,434,0,456,453],
[448,442,443,467,453,435,0,412],
[478,430,442,462,423,438,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,477,413,433,410,425,426],
[465,0,461,488,496,487,460,434],
[414,430,0,426,449,439,452,410],
[478,403,465,0,442,463,469,482],
[458,395,442,449,0,413,405,439],
[481,404,452,428,478,0,454,411],
[466,431,439,422,486,437,0,466],
[465,457,481,409,452,480,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,445,437,445,443,439,443],
[434,0,439,448,463,458,452,446],
[446,452,0,442,444,453,427,441],
[454,443,449,0,454,441,456,447],
[446,428,447,437,0,449,442,423],
[448,433,438,450,442,0,430,451],
[452,439,464,435,449,461,0,473],
[448,445,450,444,468,440,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,423,425,436,445,428,426],
[466,0,421,424,444,453,439,462],
[468,470,0,448,471,449,456,430],
[466,467,443,0,451,444,462,437],
[455,447,420,440,0,443,441,429],
[446,438,442,447,448,0,456,431],
[463,452,435,429,450,435,0,445],
[465,429,461,454,462,460,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,379,395,443,450,450,428,491],
[512,0,451,434,494,465,484,472],
[496,440,0,468,462,479,491,476],
[448,457,423,0,482,416,493,456],
[441,397,429,409,0,420,477,472],
[441,426,412,475,471,0,507,429],
[463,407,400,398,414,384,0,450],
[400,419,415,435,419,462,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,525,507,502,438,474,481],
[379,0,456,467,408,413,305,368],
[366,435,0,363,399,437,404,458],
[384,424,528,0,410,462,357,429],
[389,483,492,481,0,452,424,495],
[453,478,454,429,439,0,408,454],
[417,586,487,534,467,483,0,527],
[410,523,433,462,396,437,364,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,464,419,446,446,436,436],
[429,0,401,428,436,439,456,405],
[427,490,0,430,448,465,472,448],
[472,463,461,0,460,481,449,445],
[445,455,443,431,0,426,474,431],
[445,452,426,410,465,0,459,433],
[455,435,419,442,417,432,0,453],
[455,486,443,446,460,458,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,589,441,540,630,688,566,583],
[302,0,405,425,458,444,421,443],
[450,486,0,451,490,603,552,414],
[351,466,440,0,557,420,496,429],
[261,433,401,334,0,492,589,395],
[203,447,288,471,399,0,396,329],
[325,470,339,395,302,495,0,392],
[308,448,477,462,496,562,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,447,420,412,432,416,433],
[441,0,454,425,421,414,442,428],
[444,437,0,424,433,437,434,445],
[471,466,467,0,432,449,461,447],
[479,470,458,459,0,434,462,454],
[459,477,454,442,457,0,469,442],
[475,449,457,430,429,422,0,444],
[458,463,446,444,437,449,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,433,454,481,452,439,463],
[443,0,464,473,485,485,464,506],
[458,427,0,431,457,457,461,475],
[437,418,460,0,462,424,443,447],
[410,406,434,429,0,412,398,436],
[439,406,434,467,479,0,454,450],
[452,427,430,448,493,437,0,459],
[428,385,416,444,455,441,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,437,462,429,450,454,430],
[420,0,423,429,434,412,424,409],
[454,468,0,450,448,456,442,440],
[429,462,441,0,414,440,434,416],
[462,457,443,477,0,447,438,435],
[441,479,435,451,444,0,446,416],
[437,467,449,457,453,445,0,465],
[461,482,451,475,456,475,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,447,498,434,437,467,475],
[406,0,402,459,391,383,388,417],
[444,489,0,502,498,448,441,480],
[393,432,389,0,408,378,405,392],
[457,500,393,483,0,469,462,456],
[454,508,443,513,422,0,426,488],
[424,503,450,486,429,465,0,462],
[416,474,411,499,435,403,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,468,472,495,442,469,495],
[453,0,416,410,455,448,433,470],
[423,475,0,400,479,438,451,456],
[419,481,491,0,475,419,418,451],
[396,436,412,416,0,390,417,377],
[449,443,453,472,501,0,448,405],
[422,458,440,473,474,443,0,470],
[396,421,435,440,514,486,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,498,295,594,496,409,519],
[459,0,483,418,642,486,496,496],
[393,408,0,415,716,488,365,371],
[596,473,476,0,562,607,356,532],
[297,249,175,329,0,500,321,312],
[395,405,403,284,391,0,220,355],
[482,395,526,535,570,671,0,602],
[372,395,520,359,579,536,289,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,442,408,459,404,403,450],
[387,0,354,282,387,312,394,398],
[449,537,0,424,433,444,466,470],
[483,609,467,0,419,467,486,422],
[432,504,458,472,0,419,394,547],
[487,579,447,424,472,0,517,480],
[488,497,425,405,497,374,0,407],
[441,493,421,469,344,411,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,452,461,468,441,445,446],
[472,0,453,468,469,445,435,455],
[439,438,0,445,424,420,421,447],
[430,423,446,0,442,425,425,453],
[423,422,467,449,0,449,450,450],
[450,446,471,466,442,0,483,471],
[446,456,470,466,441,408,0,467],
[445,436,444,438,441,420,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,442,460,446,418,450,450],
[457,0,451,454,464,441,452,464],
[449,440,0,459,453,419,448,445],
[431,437,432,0,446,430,435,453],
[445,427,438,445,0,442,454,449],
[473,450,472,461,449,0,443,469],
[441,439,443,456,437,448,0,461],
[441,427,446,438,442,422,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,476,451,419,378,386,382],
[480,0,412,428,431,463,398,466],
[415,479,0,474,486,452,404,433],
[440,463,417,0,449,437,429,428],
[472,460,405,442,0,437,463,424],
[513,428,439,454,454,0,443,450],
[505,493,487,462,428,448,0,498],
[509,425,458,463,467,441,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,426,467,462,449,418,439],
[437,0,427,455,443,439,424,471],
[465,464,0,468,452,452,443,462],
[424,436,423,0,441,422,437,446],
[429,448,439,450,0,443,411,453],
[442,452,439,469,448,0,426,445],
[473,467,448,454,480,465,0,445],
[452,420,429,445,438,446,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,459,453,469,480,466,443],
[459,0,447,476,489,446,463,443],
[432,444,0,461,433,444,460,431],
[438,415,430,0,427,454,424,405],
[422,402,458,464,0,476,474,451],
[411,445,447,437,415,0,443,440],
[425,428,431,467,417,448,0,405],
[448,448,460,486,440,451,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,428,434,411,416,438,438],
[450,0,450,463,456,453,444,474],
[463,441,0,432,419,458,431,453],
[457,428,459,0,421,440,447,421],
[480,435,472,470,0,474,445,443],
[475,438,433,451,417,0,439,446],
[453,447,460,444,446,452,0,476],
[453,417,438,470,448,445,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,404,442,490,405,407,536],
[434,0,416,557,407,394,430,527],
[487,475,0,507,390,392,435,503],
[449,334,384,0,328,345,395,465],
[401,484,501,563,0,548,424,507],
[486,497,499,546,343,0,463,552],
[484,461,456,496,467,428,0,502],
[355,364,388,426,384,339,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,450,477,441,453,460,456],
[443,0,431,436,458,467,468,483],
[441,460,0,424,452,438,430,453],
[414,455,467,0,414,463,448,462],
[450,433,439,477,0,454,481,472],
[438,424,453,428,437,0,427,460],
[431,423,461,443,410,464,0,454],
[435,408,438,429,419,431,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,434,456,466,450,453,425],
[451,0,440,432,447,454,462,437],
[457,451,0,466,449,441,485,448],
[435,459,425,0,427,455,462,425],
[425,444,442,464,0,466,465,432],
[441,437,450,436,425,0,455,406],
[438,429,406,429,426,436,0,420],
[466,454,443,466,459,485,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,451,431,527,432,434,444],
[411,0,471,433,474,446,453,446],
[440,420,0,449,462,428,448,457],
[460,458,442,0,490,456,477,462],
[364,417,429,401,0,394,402,418],
[459,445,463,435,497,0,438,478],
[457,438,443,414,489,453,0,452],
[447,445,434,429,473,413,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,427,409,444,454,424,451],
[457,0,456,425,457,482,448,478],
[464,435,0,478,451,499,451,463],
[482,466,413,0,463,518,403,463],
[447,434,440,428,0,453,407,448],
[437,409,392,373,438,0,426,441],
[467,443,440,488,484,465,0,478],
[440,413,428,428,443,450,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,506,510,486,427,492,527],
[429,0,472,473,450,446,441,452],
[385,419,0,460,413,373,458,468],
[381,418,431,0,398,393,419,458],
[405,441,478,493,0,435,454,463],
[464,445,518,498,456,0,404,499],
[399,450,433,472,437,487,0,478],
[364,439,423,433,428,392,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,460,468,447,482,416,454],
[419,0,388,398,411,399,410,414],
[431,503,0,413,412,426,446,441],
[423,493,478,0,494,499,461,428],
[444,480,479,397,0,504,456,458],
[409,492,465,392,387,0,439,401],
[475,481,445,430,435,452,0,455],
[437,477,450,463,433,490,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,433,433,438,435,440],
[452,0,440,444,400,421,432,473],
[451,451,0,465,455,432,460,462],
[458,447,426,0,435,450,475,462],
[458,491,436,456,0,436,443,475],
[453,470,459,441,455,0,459,458],
[456,459,431,416,448,432,0,446],
[451,418,429,429,416,433,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,458,463,462,482,459,439],
[454,0,472,450,428,490,475,444],
[433,419,0,448,425,445,440,438],
[428,441,443,0,436,445,425,425],
[429,463,466,455,0,483,468,457],
[409,401,446,446,408,0,446,399],
[432,416,451,466,423,445,0,414],
[452,447,453,466,434,492,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,576,359,365,451,381,547,418],
[315,0,369,375,426,187,436,240],
[532,522,0,443,222,377,540,288],
[526,516,448,0,421,367,515,406],
[440,465,669,470,0,491,627,540],
[510,704,514,524,400,0,612,288],
[344,455,351,376,264,279,0,393],
[473,651,603,485,351,603,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,422,427,423,425,446,441],
[452,0,457,432,432,433,432,462],
[469,434,0,443,429,428,423,453],
[464,459,448,0,449,443,463,451],
[468,459,462,442,0,448,451,457],
[466,458,463,448,443,0,464,469],
[445,459,468,428,440,427,0,445],
[450,429,438,440,434,422,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,483,433,455,430,447,462],
[422,0,462,413,429,436,453,468],
[408,429,0,436,423,423,431,423],
[458,478,455,0,447,435,485,444],
[436,462,468,444,0,447,476,457],
[461,455,468,456,444,0,440,467],
[444,438,460,406,415,451,0,456],
[429,423,468,447,434,424,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,424,416,432,445,433,446],
[486,0,472,470,448,467,440,483],
[467,419,0,463,448,461,443,468],
[475,421,428,0,420,461,414,455],
[459,443,443,471,0,455,459,462],
[446,424,430,430,436,0,424,457],
[458,451,448,477,432,467,0,472],
[445,408,423,436,429,434,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,434,482,439,431,437,444],
[437,0,443,468,440,429,463,445],
[457,448,0,457,452,451,441,454],
[409,423,434,0,437,424,434,409],
[452,451,439,454,0,447,428,436],
[460,462,440,467,444,0,462,437],
[454,428,450,457,463,429,0,445],
[447,446,437,482,455,454,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,443,448,469,447,435,458],
[429,0,455,419,436,438,453,429],
[448,436,0,430,437,455,432,455],
[443,472,461,0,460,474,450,464],
[422,455,454,431,0,429,438,450],
[444,453,436,417,462,0,438,460],
[456,438,459,441,453,453,0,452],
[433,462,436,427,441,431,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,464,444,475,443,455,460],
[402,0,425,435,439,435,413,460],
[427,466,0,447,441,451,432,453],
[447,456,444,0,456,455,427,452],
[416,452,450,435,0,421,418,431],
[448,456,440,436,470,0,469,456],
[436,478,459,464,473,422,0,459],
[431,431,438,439,460,435,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,492,476,477,440,489,434],
[462,0,453,521,437,490,503,433],
[399,438,0,462,470,460,460,439],
[415,370,429,0,454,439,499,396],
[414,454,421,437,0,443,508,424],
[451,401,431,452,448,0,486,464],
[402,388,431,392,383,405,0,389],
[457,458,452,495,467,427,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,513,426,438,477,459,466,487],
[378,0,416,340,422,443,393,444],
[465,475,0,430,512,474,432,442],
[453,551,461,0,489,520,435,498],
[414,469,379,402,0,455,395,438],
[432,448,417,371,436,0,428,454],
[425,498,459,456,496,463,0,513],
[404,447,449,393,453,437,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,366,372,394,421,399,438,423],
[525,0,431,404,411,400,423,428],
[519,460,0,365,466,350,491,482],
[497,487,526,0,461,355,494,487],
[470,480,425,430,0,459,490,519],
[492,491,541,536,432,0,506,466],
[453,468,400,397,401,385,0,479],
[468,463,409,404,372,425,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,446,450,466,438,449,452],
[438,0,426,438,456,437,427,433],
[445,465,0,465,472,452,453,466],
[441,453,426,0,449,442,425,444],
[425,435,419,442,0,440,420,426],
[453,454,439,449,451,0,432,458],
[442,464,438,466,471,459,0,459],
[439,458,425,447,465,433,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,442,448,449,439,436,424],
[485,0,436,431,458,445,457,455],
[449,455,0,471,426,420,442,456],
[443,460,420,0,441,473,450,460],
[442,433,465,450,0,445,429,456],
[452,446,471,418,446,0,463,462],
[455,434,449,441,462,428,0,440],
[467,436,435,431,435,429,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,444,461,446,473,456,470],
[448,0,450,433,436,461,448,445],
[447,441,0,431,426,449,451,467],
[430,458,460,0,440,460,451,480],
[445,455,465,451,0,454,448,476],
[418,430,442,431,437,0,449,475],
[435,443,440,440,443,442,0,478],
[421,446,424,411,415,416,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,464,461,446,441,420,495],
[437,0,480,449,440,478,446,472],
[427,411,0,452,409,435,433,433],
[430,442,439,0,448,437,458,478],
[445,451,482,443,0,469,440,467],
[450,413,456,454,422,0,443,453],
[471,445,458,433,451,448,0,472],
[396,419,458,413,424,438,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,444,433,435,463,453,457],
[433,0,438,419,414,466,431,454],
[447,453,0,418,421,467,409,457],
[458,472,473,0,443,456,435,477],
[456,477,470,448,0,459,426,450],
[428,425,424,435,432,0,454,469],
[438,460,482,456,465,437,0,433],
[434,437,434,414,441,422,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,410,436,507,407,466,521],
[401,0,375,392,443,384,423,465],
[481,516,0,497,508,434,502,470],
[455,499,394,0,469,450,441,469],
[384,448,383,422,0,404,361,406],
[484,507,457,441,487,0,451,499],
[425,468,389,450,530,440,0,461],
[370,426,421,422,485,392,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,480,477,450,463,475,475],
[450,0,445,476,438,446,481,442],
[411,446,0,472,435,441,451,443],
[414,415,419,0,424,438,439,442],
[441,453,456,467,0,458,457,450],
[428,445,450,453,433,0,464,442],
[416,410,440,452,434,427,0,450],
[416,449,448,449,441,449,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,613,488,469,407,499,452,513],
[278,0,349,443,387,310,406,362],
[403,542,0,440,350,418,425,365],
[422,448,451,0,323,423,464,509],
[484,504,541,568,0,451,444,504],
[392,581,473,468,440,0,346,506],
[439,485,466,427,447,545,0,566],
[378,529,526,382,387,385,325,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,440,514,450,540,410,407],
[465,0,473,514,429,483,459,468],
[451,418,0,458,441,476,437,438],
[377,377,433,0,373,484,406,421],
[441,462,450,518,0,529,465,437],
[351,408,415,407,362,0,402,376],
[481,432,454,485,426,489,0,419],
[484,423,453,470,454,515,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,430,446,481,469,454,463],
[459,0,478,444,503,502,502,457],
[461,413,0,446,469,457,437,474],
[445,447,445,0,472,447,434,451],
[410,388,422,419,0,482,446,441],
[422,389,434,444,409,0,396,438],
[437,389,454,457,445,495,0,433],
[428,434,417,440,450,453,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,442,438,426,430,457,432],
[462,0,442,452,454,449,460,451],
[449,449,0,454,442,454,442,440],
[453,439,437,0,433,443,447,436],
[465,437,449,458,0,433,447,434],
[461,442,437,448,458,0,456,447],
[434,431,449,444,444,435,0,435],
[459,440,451,455,457,444,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,440,455,424,445,467,461],
[449,0,440,444,435,468,459,470],
[451,451,0,465,448,430,446,450],
[436,447,426,0,447,468,411,463],
[467,456,443,444,0,471,437,473],
[446,423,461,423,420,0,435,443],
[424,432,445,480,454,456,0,440],
[430,421,441,428,418,448,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,439,419,437,456,458,445],
[451,0,445,442,453,476,440,433],
[452,446,0,422,434,466,485,441],
[472,449,469,0,444,488,474,480],
[454,438,457,447,0,466,475,477],
[435,415,425,403,425,0,443,438],
[433,451,406,417,416,448,0,425],
[446,458,450,411,414,453,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,425,464,461,441,428,453],
[448,0,381,404,384,493,473,431],
[466,510,0,442,474,485,420,458],
[427,487,449,0,449,434,405,428],
[430,507,417,442,0,457,421,451],
[450,398,406,457,434,0,390,402],
[463,418,471,486,470,501,0,455],
[438,460,433,463,440,489,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,539,405,457,416,383,394,472],
[352,0,367,361,353,375,362,410],
[486,524,0,443,457,403,418,467],
[434,530,448,0,425,422,419,495],
[475,538,434,466,0,470,461,451],
[508,516,488,469,421,0,428,426],
[497,529,473,472,430,463,0,514],
[419,481,424,396,440,465,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,551,499,464,476,533,429,471],
[340,0,425,415,318,353,408,374],
[392,466,0,405,397,522,383,425],
[427,476,486,0,364,541,482,458],
[415,573,494,527,0,637,559,543],
[358,538,369,350,254,0,422,352],
[462,483,508,409,332,469,0,535],
[420,517,466,433,348,539,356,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,478,433,463,439,454,488],
[427,0,461,414,427,401,442,468],
[413,430,0,424,424,408,445,457],
[458,477,467,0,467,438,461,448],
[428,464,467,424,0,457,445,465],
[452,490,483,453,434,0,459,478],
[437,449,446,430,446,432,0,471],
[403,423,434,443,426,413,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,449,416,449,450,465,465],
[481,0,446,448,485,426,464,392],
[442,445,0,445,466,456,483,442],
[475,443,446,0,457,437,467,415],
[442,406,425,434,0,449,423,421],
[441,465,435,454,442,0,449,408],
[426,427,408,424,468,442,0,420],
[426,499,449,476,470,483,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,443,482,462,459,453,466],
[419,0,459,483,451,453,439,447],
[448,432,0,453,464,437,443,432],
[409,408,438,0,429,406,428,445],
[429,440,427,462,0,434,449,436],
[432,438,454,485,457,0,468,478],
[438,452,448,463,442,423,0,440],
[425,444,459,446,455,413,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,445,436,451,430,430,454],
[473,0,459,439,455,461,442,450],
[446,432,0,455,434,435,441,438],
[455,452,436,0,450,430,409,455],
[440,436,457,441,0,441,446,437],
[461,430,456,461,450,0,437,455],
[461,449,450,482,445,454,0,471],
[437,441,453,436,454,436,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,446,446,443,470,428,472],
[457,0,438,442,450,467,441,480],
[445,453,0,452,469,450,412,498],
[445,449,439,0,435,453,437,481],
[448,441,422,456,0,447,472,481],
[421,424,441,438,444,0,438,488],
[463,450,479,454,419,453,0,488],
[419,411,393,410,410,403,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,450,455,460,479,494,426],
[429,0,414,468,417,454,438,405],
[441,477,0,491,483,493,491,457],
[436,423,400,0,470,439,445,447],
[431,474,408,421,0,459,424,426],
[412,437,398,452,432,0,418,436],
[397,453,400,446,467,473,0,387],
[465,486,434,444,465,455,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,385,438,441,461,398,474],
[457,0,457,398,511,390,383,469],
[506,434,0,510,523,491,449,471],
[453,493,381,0,553,476,444,458],
[450,380,368,338,0,407,375,408],
[430,501,400,415,484,0,376,423],
[493,508,442,447,516,515,0,477],
[417,422,420,433,483,468,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,421,471,482,462,475,453],
[436,0,475,424,497,453,470,447],
[470,416,0,401,473,403,430,453],
[420,467,490,0,496,454,490,448],
[409,394,418,395,0,389,413,395],
[429,438,488,437,502,0,526,445],
[416,421,461,401,478,365,0,434],
[438,444,438,443,496,446,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,411,424,436,444,425,417],
[399,0,380,390,432,411,391,405],
[480,511,0,434,460,449,477,444],
[467,501,457,0,492,470,435,482],
[455,459,431,399,0,438,436,402],
[447,480,442,421,453,0,409,439],
[466,500,414,456,455,482,0,447],
[474,486,447,409,489,452,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,485,563,431,455,488,537],
[466,0,476,508,398,386,410,545],
[406,415,0,433,276,418,357,530],
[328,383,458,0,337,477,374,396],
[460,493,615,554,0,422,420,536],
[436,505,473,414,469,0,458,514],
[403,481,534,517,471,433,0,607],
[354,346,361,495,355,377,284,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,417,414,460,476,463,414],
[469,0,452,455,466,444,460,431],
[474,439,0,421,436,437,440,419],
[477,436,470,0,457,466,473,424],
[431,425,455,434,0,443,425,421],
[415,447,454,425,448,0,447,451],
[428,431,451,418,466,444,0,426],
[477,460,472,467,470,440,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,430,456,433,439,446,446],
[451,0,447,445,411,441,420,426],
[461,444,0,454,437,446,458,461],
[435,446,437,0,465,458,457,474],
[458,480,454,426,0,432,453,490],
[452,450,445,433,459,0,434,459],
[445,471,433,434,438,457,0,468],
[445,465,430,417,401,432,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,454,464,422,451,454,455],
[461,0,476,457,442,469,447,472],
[437,415,0,441,452,455,426,449],
[427,434,450,0,441,469,450,477],
[469,449,439,450,0,449,437,467],
[440,422,436,422,442,0,428,439],
[437,444,465,441,454,463,0,449],
[436,419,442,414,424,452,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,395,432,475,448,435,407],
[481,0,440,460,484,454,455,456],
[496,451,0,443,468,460,452,445],
[459,431,448,0,467,426,451,431],
[416,407,423,424,0,429,428,415],
[443,437,431,465,462,0,441,409],
[456,436,439,440,463,450,0,430],
[484,435,446,460,476,482,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,578,480,457,391,447,425,551],
[313,0,434,453,452,528,415,500],
[411,457,0,480,410,396,438,456],
[434,438,411,0,346,470,413,455],
[500,439,481,545,0,518,499,502],
[444,363,495,421,373,0,430,438],
[466,476,453,478,392,461,0,426],
[340,391,435,436,389,453,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,450,413,458,479,434,452],
[405,0,427,405,422,429,396,399],
[441,464,0,443,442,460,438,426],
[478,486,448,0,487,483,442,451],
[433,469,449,404,0,454,412,414],
[412,462,431,408,437,0,424,403],
[457,495,453,449,479,467,0,424],
[439,492,465,440,477,488,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,491,472,445,448,473,449],
[428,0,470,460,418,462,452,447],
[400,421,0,426,386,436,416,413],
[419,431,465,0,447,452,457,441],
[446,473,505,444,0,463,469,463],
[443,429,455,439,428,0,458,432],
[418,439,475,434,422,433,0,438],
[442,444,478,450,428,459,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,439,433,442,424,431],
[452,0,466,444,442,438,438,442],
[451,425,0,425,433,440,431,436],
[452,447,466,0,440,430,444,449],
[458,449,458,451,0,447,450,438],
[449,453,451,461,444,0,467,431],
[467,453,460,447,441,424,0,437],
[460,449,455,442,453,460,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,468,497,464,466,441,463],
[415,0,482,497,473,429,433,430],
[423,409,0,457,414,384,382,427],
[394,394,434,0,399,419,413,393],
[427,418,477,492,0,464,402,429],
[425,462,507,472,427,0,466,433],
[450,458,509,478,489,425,0,456],
[428,461,464,498,462,458,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,422,376,389,455,442,399],
[495,0,476,440,447,464,468,470],
[469,415,0,430,436,410,476,438],
[515,451,461,0,459,456,462,444],
[502,444,455,432,0,459,488,468],
[436,427,481,435,432,0,456,413],
[449,423,415,429,403,435,0,415],
[492,421,453,447,423,478,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,471,464,453,424,437,424],
[417,0,420,422,446,440,434,415],
[420,471,0,455,411,437,430,419],
[427,469,436,0,444,442,455,449],
[438,445,480,447,0,438,438,453],
[467,451,454,449,453,0,441,445],
[454,457,461,436,453,450,0,466],
[467,476,472,442,438,446,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,440,422,400,409,418,428],
[457,0,445,416,403,385,413,413],
[451,446,0,438,429,459,434,422],
[469,475,453,0,424,442,445,442],
[491,488,462,467,0,467,447,441],
[482,506,432,449,424,0,474,466],
[473,478,457,446,444,417,0,446],
[463,478,469,449,450,425,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,398,385,397,424,412,435],
[381,0,361,317,409,387,370,407],
[493,530,0,454,383,441,450,496],
[506,574,437,0,466,470,418,549],
[494,482,508,425,0,448,472,471],
[467,504,450,421,443,0,444,460],
[479,521,441,473,419,447,0,448],
[456,484,395,342,420,431,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,436,445,441,452,449,448],
[461,0,450,462,441,468,458,461],
[455,441,0,460,450,449,452,467],
[446,429,431,0,421,456,443,446],
[450,450,441,470,0,469,463,460],
[439,423,442,435,422,0,445,436],
[442,433,439,448,428,446,0,440],
[443,430,424,445,431,455,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,461,419,445,413,427,437],
[467,0,471,408,415,435,452,428],
[430,420,0,423,431,425,446,419],
[472,483,468,0,471,444,442,452],
[446,476,460,420,0,450,469,475],
[478,456,466,447,441,0,470,449],
[464,439,445,449,422,421,0,444],
[454,463,472,439,416,442,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,452,463,446,432,457,459],
[421,0,438,433,429,410,423,457],
[439,453,0,441,458,479,461,444],
[428,458,450,0,434,455,456,467],
[445,462,433,457,0,426,433,430],
[459,481,412,436,465,0,450,464],
[434,468,430,435,458,441,0,442],
[432,434,447,424,461,427,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,434,439,444,432,426,448],
[440,0,409,420,439,407,433,429],
[457,482,0,462,451,453,440,440],
[452,471,429,0,427,441,440,455],
[447,452,440,464,0,444,450,445],
[459,484,438,450,447,0,451,447],
[465,458,451,451,441,440,0,461],
[443,462,451,436,446,444,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,491,504,478,424,495,473],
[409,0,402,383,380,443,420,398],
[400,489,0,428,409,446,437,444],
[387,508,463,0,479,488,453,473],
[413,511,482,412,0,395,438,471],
[467,448,445,403,496,0,474,450],
[396,471,454,438,453,417,0,417],
[418,493,447,418,420,441,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,486,464,445,570,535,472],
[409,0,473,400,377,398,453,394],
[405,418,0,419,426,418,429,369],
[427,491,472,0,460,498,520,431],
[446,514,465,431,0,514,460,484],
[321,493,473,393,377,0,443,383],
[356,438,462,371,431,448,0,392],
[419,497,522,460,407,508,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,439,392,442,465,455,498],
[447,0,419,454,477,461,413,469],
[452,472,0,406,475,438,413,476],
[499,437,485,0,459,455,441,445],
[449,414,416,432,0,479,442,456],
[426,430,453,436,412,0,472,461],
[436,478,478,450,449,419,0,487],
[393,422,415,446,435,430,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,455,441,420,449,450,470],
[466,0,458,438,445,450,448,450],
[436,433,0,452,441,452,466,456],
[450,453,439,0,449,422,436,467],
[471,446,450,442,0,393,426,453],
[442,441,439,469,498,0,474,467],
[441,443,425,455,465,417,0,424],
[421,441,435,424,438,424,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,431,437,447,421,423,477],
[431,0,432,408,410,409,427,476],
[460,459,0,462,430,433,475,489],
[454,483,429,0,446,451,461,462],
[444,481,461,445,0,449,455,488],
[470,482,458,440,442,0,459,493],
[468,464,416,430,436,432,0,464],
[414,415,402,429,403,398,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,453,454,444,442,428,433],
[436,0,448,439,455,439,473,431],
[438,443,0,457,446,442,462,444],
[437,452,434,0,442,446,442,432],
[447,436,445,449,0,436,441,409],
[449,452,449,445,455,0,483,447],
[463,418,429,449,450,408,0,425],
[458,460,447,459,482,444,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,470,445,393,438,336,454],
[479,0,526,498,500,436,465,460],
[421,365,0,473,282,464,380,509],
[446,393,418,0,339,421,436,430],
[498,391,609,552,0,472,517,584],
[453,455,427,470,419,0,435,400],
[555,426,511,455,374,456,0,452],
[437,431,382,461,307,491,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,419,425,431,442,450,433],
[441,0,409,425,422,426,427,430],
[472,482,0,453,475,460,436,438],
[466,466,438,0,451,454,444,469],
[460,469,416,440,0,461,444,419],
[449,465,431,437,430,0,447,444],
[441,464,455,447,447,444,0,469],
[458,461,453,422,472,447,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,430,438,452,404,406,410],
[442,0,457,481,484,416,448,439],
[461,434,0,476,473,405,435,426],
[453,410,415,0,444,411,441,394],
[439,407,418,447,0,414,411,402],
[487,475,486,480,477,0,470,439],
[485,443,456,450,480,421,0,474],
[481,452,465,497,489,452,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,446,479,474,477,442,466],
[451,0,453,476,468,478,439,460],
[445,438,0,454,447,452,430,436],
[412,415,437,0,448,448,420,432],
[417,423,444,443,0,437,447,443],
[414,413,439,443,454,0,433,440],
[449,452,461,471,444,458,0,455],
[425,431,455,459,448,451,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,451,395,451,441,468,427],
[403,0,401,424,438,427,458,413],
[440,490,0,456,459,479,445,466],
[496,467,435,0,430,426,458,447],
[440,453,432,461,0,475,413,464],
[450,464,412,465,416,0,428,469],
[423,433,446,433,478,463,0,417],
[464,478,425,444,427,422,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,454,472,474,454,458,457],
[476,0,487,480,469,490,440,505],
[437,404,0,434,470,425,437,472],
[419,411,457,0,450,439,430,494],
[417,422,421,441,0,435,442,469],
[437,401,466,452,456,0,431,464],
[433,451,454,461,449,460,0,492],
[434,386,419,397,422,427,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,431,438,459,445,437,424],
[448,0,459,441,452,436,438,414],
[460,432,0,431,445,423,444,432],
[453,450,460,0,478,426,457,446],
[432,439,446,413,0,407,434,418],
[446,455,468,465,484,0,458,439],
[454,453,447,434,457,433,0,419],
[467,477,459,445,473,452,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,430,416,464,459,421,448],
[464,0,476,424,453,450,444,445],
[461,415,0,442,401,455,427,428],
[475,467,449,0,498,513,488,439],
[427,438,490,393,0,473,430,436],
[432,441,436,378,418,0,427,441],
[470,447,464,403,461,464,0,486],
[443,446,463,452,455,450,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,333,407,442,423,363,474,460],
[558,0,472,491,516,429,526,499],
[484,419,0,448,418,372,489,524],
[449,400,443,0,492,468,481,469],
[468,375,473,399,0,368,481,498],
[528,462,519,423,523,0,493,523],
[417,365,402,410,410,398,0,457],
[431,392,367,422,393,368,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,365,348,440,414,431,367],
[478,0,440,413,421,464,412,397],
[526,451,0,426,405,455,466,448],
[543,478,465,0,427,483,487,454],
[451,470,486,464,0,476,424,442],
[477,427,436,408,415,0,431,428],
[460,479,425,404,467,460,0,403],
[524,494,443,437,449,463,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,253,331,484,302,304,373,286],
[638,0,484,554,438,546,554,537],
[560,407,0,536,510,511,447,454],
[407,337,355,0,471,443,348,379],
[589,453,381,420,0,434,508,444],
[587,345,380,448,457,0,520,480],
[518,337,444,543,383,371,0,378],
[605,354,437,512,447,411,513,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,442,449,408,380,416,443],
[425,0,492,485,433,391,430,438],
[449,399,0,458,402,410,457,444],
[442,406,433,0,401,406,423,406],
[483,458,489,490,0,461,423,466],
[511,500,481,485,430,0,478,454],
[475,461,434,468,468,413,0,445],
[448,453,447,485,425,437,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,449,464,434,432,446,461],
[435,0,465,470,456,446,437,475],
[442,426,0,446,433,456,443,457],
[427,421,445,0,446,433,447,477],
[457,435,458,445,0,439,433,484],
[459,445,435,458,452,0,451,468],
[445,454,448,444,458,440,0,459],
[430,416,434,414,407,423,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,442,451,441,409,468,439],
[461,0,446,449,453,446,448,445],
[449,445,0,457,437,421,436,442],
[440,442,434,0,460,411,427,431],
[450,438,454,431,0,419,444,459],
[482,445,470,480,472,0,470,457],
[423,443,455,464,447,421,0,465],
[452,446,449,460,432,434,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,450,431,463,429,431,466],
[449,0,419,433,415,421,414,446],
[441,472,0,424,457,483,474,520],
[460,458,467,0,459,428,431,451],
[428,476,434,432,0,429,429,491],
[462,470,408,463,462,0,423,482],
[460,477,417,460,462,468,0,503],
[425,445,371,440,400,409,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,450,455,427,422,436,466],
[428,0,472,437,436,421,435,445],
[441,419,0,423,408,438,435,443],
[436,454,468,0,395,415,454,447],
[464,455,483,496,0,451,443,497],
[469,470,453,476,440,0,451,463],
[455,456,456,437,448,440,0,469],
[425,446,448,444,394,428,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,440,448,448,427,453,436],
[454,0,464,445,439,450,451,451],
[451,427,0,422,436,440,440,424],
[443,446,469,0,449,444,447,446],
[443,452,455,442,0,436,464,438],
[464,441,451,447,455,0,451,471],
[438,440,451,444,427,440,0,450],
[455,440,467,445,453,420,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,442,466,464,445,455,444],
[427,0,439,444,440,444,439,437],
[449,452,0,453,441,423,445,459],
[425,447,438,0,432,424,434,419],
[427,451,450,459,0,427,445,421],
[446,447,468,467,464,0,453,441],
[436,452,446,457,446,438,0,434],
[447,454,432,472,470,450,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,468,504,475,472,491,437],
[426,0,481,497,457,420,459,447],
[423,410,0,470,436,465,441,428],
[387,394,421,0,465,427,456,401],
[416,434,455,426,0,439,429,429],
[419,471,426,464,452,0,486,462],
[400,432,450,435,462,405,0,421],
[454,444,463,490,462,429,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,457,478,457,443,487,464],
[423,0,438,460,450,423,461,449],
[434,453,0,451,452,440,468,431],
[413,431,440,0,434,422,464,431],
[434,441,439,457,0,458,455,442],
[448,468,451,469,433,0,458,470],
[404,430,423,427,436,433,0,422],
[427,442,460,460,449,421,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,432,449,433,425,426,436],
[474,0,446,471,469,454,445,450],
[459,445,0,456,464,425,433,459],
[442,420,435,0,430,436,442,434],
[458,422,427,461,0,442,441,426],
[466,437,466,455,449,0,459,456],
[465,446,458,449,450,432,0,436],
[455,441,432,457,465,435,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,400,445,417,398,460,437],
[469,0,444,492,469,451,467,497],
[491,447,0,437,445,408,448,452],
[446,399,454,0,429,396,433,464],
[474,422,446,462,0,424,450,455],
[493,440,483,495,467,0,480,480],
[431,424,443,458,441,411,0,475],
[454,394,439,427,436,411,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,450,451,435,449,439,467],
[435,0,450,439,421,445,443,450],
[441,441,0,433,443,414,447,434],
[440,452,458,0,414,411,430,417],
[456,470,448,477,0,450,473,426],
[442,446,477,480,441,0,439,439],
[452,448,444,461,418,452,0,454],
[424,441,457,474,465,452,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,466,458,464,435,420,451],
[440,0,402,461,395,406,388,429],
[425,489,0,468,427,442,427,408],
[433,430,423,0,433,447,421,441],
[427,496,464,458,0,448,436,478],
[456,485,449,444,443,0,428,442],
[471,503,464,470,455,463,0,433],
[440,462,483,450,413,449,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,446,448,450,444,469,472],
[442,0,444,454,460,443,473,476],
[445,447,0,453,434,448,474,448],
[443,437,438,0,457,448,463,465],
[441,431,457,434,0,459,464,457],
[447,448,443,443,432,0,468,466],
[422,418,417,428,427,423,0,439],
[419,415,443,426,434,425,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,440,453,476,430,455,443],
[455,0,439,466,466,443,438,448],
[451,452,0,451,455,430,449,446],
[438,425,440,0,467,434,426,411],
[415,425,436,424,0,406,440,395],
[461,448,461,457,485,0,439,456],
[436,453,442,465,451,452,0,448],
[448,443,445,480,496,435,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,455,444,453,467,471,464],
[444,0,481,447,455,452,485,474],
[436,410,0,422,440,428,463,421],
[447,444,469,0,454,445,464,460],
[438,436,451,437,0,450,458,455],
[424,439,463,446,441,0,456,444],
[420,406,428,427,433,435,0,441],
[427,417,470,431,436,447,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,421,427,419,433,419,423],
[497,0,477,457,460,467,440,448],
[470,414,0,424,424,421,430,437],
[464,434,467,0,461,436,429,470],
[472,431,467,430,0,420,444,435],
[458,424,470,455,471,0,450,464],
[472,451,461,462,447,441,0,439],
[468,443,454,421,456,427,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,475,418,465,401,474,531],
[498,0,456,369,435,414,397,446],
[416,435,0,349,422,316,361,396],
[473,522,542,0,538,440,429,519],
[426,456,469,353,0,384,441,450],
[490,477,575,451,507,0,442,463],
[417,494,530,462,450,449,0,501],
[360,445,495,372,441,428,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,447,437,443,448,436,439],
[430,0,428,445,434,438,415,424],
[444,463,0,457,443,463,441,445],
[454,446,434,0,420,437,421,417],
[448,457,448,471,0,434,446,425],
[443,453,428,454,457,0,445,436],
[455,476,450,470,445,446,0,463],
[452,467,446,474,466,455,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,444,439,466,451,441,442],
[429,0,433,414,453,421,425,418],
[447,458,0,433,459,455,455,460],
[452,477,458,0,452,455,454,439],
[425,438,432,439,0,460,447,435],
[440,470,436,436,431,0,429,425],
[450,466,436,437,444,462,0,434],
[449,473,431,452,456,466,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,426,454,460,456,446,457],
[455,0,420,427,434,458,438,422],
[465,471,0,425,458,469,458,430],
[437,464,466,0,441,450,471,445],
[431,457,433,450,0,452,438,460],
[435,433,422,441,439,0,438,437],
[445,453,433,420,453,453,0,426],
[434,469,461,446,431,454,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,454,457,469,463,471,440],
[431,0,431,447,460,450,459,430],
[437,460,0,454,468,459,470,468],
[434,444,437,0,459,449,450,428],
[422,431,423,432,0,437,436,429],
[428,441,432,442,454,0,443,435],
[420,432,421,441,455,448,0,443],
[451,461,423,463,462,456,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,481,442,462,468,466,458],
[421,0,432,459,436,420,467,462],
[410,459,0,439,439,444,457,452],
[449,432,452,0,457,448,442,447],
[429,455,452,434,0,459,469,452],
[423,471,447,443,432,0,457,457],
[425,424,434,449,422,434,0,463],
[433,429,439,444,439,434,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,448,415,364,395,399,423],
[492,0,486,476,445,473,463,456],
[443,405,0,462,379,390,412,409],
[476,415,429,0,427,424,465,451],
[527,446,512,464,0,422,471,474],
[496,418,501,467,469,0,443,478],
[492,428,479,426,420,448,0,452],
[468,435,482,440,417,413,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,406,417,383,451,443,452],
[432,0,403,412,389,478,434,438],
[485,488,0,444,417,486,459,464],
[474,479,447,0,427,497,455,481],
[508,502,474,464,0,487,480,443],
[440,413,405,394,404,0,425,444],
[448,457,432,436,411,466,0,439],
[439,453,427,410,448,447,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,430,429,463,434,495,442],
[414,0,446,452,448,423,463,460],
[461,445,0,453,449,469,475,448],
[462,439,438,0,429,438,501,431],
[428,443,442,462,0,432,452,421],
[457,468,422,453,459,0,510,434],
[396,428,416,390,439,381,0,404],
[449,431,443,460,470,457,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,413,472,442,519,520,539],
[401,0,450,490,464,511,572,475],
[478,441,0,487,454,485,599,503],
[419,401,404,0,428,486,495,455],
[449,427,437,463,0,528,568,518],
[372,380,406,405,363,0,508,395],
[371,319,292,396,323,383,0,412],
[352,416,388,436,373,496,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,455,466,457,434,442,452],
[437,0,445,464,446,438,440,454],
[436,446,0,456,452,429,428,440],
[425,427,435,0,423,433,418,418],
[434,445,439,468,0,446,436,437],
[457,453,462,458,445,0,451,446],
[449,451,463,473,455,440,0,446],
[439,437,451,473,454,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,443,427,417,449,423,442],
[452,0,454,448,437,464,452,435],
[448,437,0,466,431,437,431,441],
[464,443,425,0,455,442,444,429],
[474,454,460,436,0,460,480,450],
[442,427,454,449,431,0,448,444],
[468,439,460,447,411,443,0,424],
[449,456,450,462,441,447,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,482,466,444,452,454,461],
[446,0,458,439,439,445,458,455],
[409,433,0,440,423,430,445,423],
[425,452,451,0,456,452,437,456],
[447,452,468,435,0,437,451,440],
[439,446,461,439,454,0,446,447],
[437,433,446,454,440,445,0,429],
[430,436,468,435,451,444,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,443,428,455,450,475,420],
[465,0,428,461,468,433,482,427],
[448,463,0,429,445,460,477,425],
[463,430,462,0,459,471,482,452],
[436,423,446,432,0,448,459,450],
[441,458,431,420,443,0,460,444],
[416,409,414,409,432,431,0,407],
[471,464,466,439,441,447,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,442,462,445,453,478,448],
[443,0,439,455,445,447,455,446],
[449,452,0,472,462,448,467,439],
[429,436,419,0,434,435,446,432],
[446,446,429,457,0,447,456,440],
[438,444,443,456,444,0,447,445],
[413,436,424,445,435,444,0,424],
[443,445,452,459,451,446,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,443,460,481,459,469,464],
[452,0,432,458,456,447,444,448],
[448,459,0,451,480,446,426,451],
[431,433,440,0,442,423,427,436],
[410,435,411,449,0,408,434,415],
[432,444,445,468,483,0,447,440],
[422,447,465,464,457,444,0,447],
[427,443,440,455,476,451,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,442,416,433,457,474,433],
[469,0,438,434,435,461,480,450],
[449,453,0,426,451,459,445,440],
[475,457,465,0,444,493,459,489],
[458,456,440,447,0,482,437,452],
[434,430,432,398,409,0,450,428],
[417,411,446,432,454,441,0,458],
[458,441,451,402,439,463,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,459,430,435,435,450,453],
[446,0,425,440,423,434,451,455],
[432,466,0,462,444,436,443,495],
[461,451,429,0,445,448,436,479],
[456,468,447,446,0,441,453,465],
[456,457,455,443,450,0,456,476],
[441,440,448,455,438,435,0,464],
[438,436,396,412,426,415,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,382,460,389,496,408,451],
[498,0,409,476,413,476,428,466],
[509,482,0,488,418,439,471,512],
[431,415,403,0,389,464,393,434],
[502,478,473,502,0,503,438,450],
[395,415,452,427,388,0,374,448],
[483,463,420,498,453,517,0,460],
[440,425,379,457,441,443,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,460,462,430,442,477,461],
[444,0,464,458,431,434,469,468],
[431,427,0,431,434,436,450,436],
[429,433,460,0,435,446,465,465],
[461,460,457,456,0,425,457,458],
[449,457,455,445,466,0,464,462],
[414,422,441,426,434,427,0,443],
[430,423,455,426,433,429,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,441,416,435,381,422,417],
[450,0,402,395,477,462,460,489],
[450,489,0,440,452,459,464,515],
[475,496,451,0,473,413,483,483],
[456,414,439,418,0,459,418,460],
[510,429,432,478,432,0,487,497],
[469,431,427,408,473,404,0,497],
[474,402,376,408,431,394,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,426,421,439,453,478,434],
[424,0,426,394,444,444,455,409],
[465,465,0,439,472,460,484,460],
[470,497,452,0,468,471,465,437],
[452,447,419,423,0,451,455,440],
[438,447,431,420,440,0,458,403],
[413,436,407,426,436,433,0,422],
[457,482,431,454,451,488,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,433,447,436,441,431,452],
[464,0,421,463,464,462,470,482],
[458,470,0,492,451,444,454,481],
[444,428,399,0,434,406,459,455],
[455,427,440,457,0,444,460,462],
[450,429,447,485,447,0,445,478],
[460,421,437,432,431,446,0,448],
[439,409,410,436,429,413,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,415,438,445,435,438,442],
[430,0,430,433,435,449,427,452],
[476,461,0,443,472,450,450,466],
[453,458,448,0,457,443,455,462],
[446,456,419,434,0,413,437,458],
[456,442,441,448,478,0,444,437],
[453,464,441,436,454,447,0,454],
[449,439,425,429,433,454,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,443,300,286,571,474,286],
[407,0,333,429,373,575,434,451],
[448,558,0,297,385,554,345,421],
[591,462,594,0,485,607,478,437],
[605,518,506,406,0,580,480,441],
[320,316,337,284,311,0,314,220],
[417,457,546,413,411,577,0,343],
[605,440,470,454,450,671,548,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,431,428,442,422,445,433],
[448,0,452,443,445,431,430,446],
[460,439,0,425,426,437,446,436],
[463,448,466,0,453,449,464,436],
[449,446,465,438,0,455,447,441],
[469,460,454,442,436,0,442,437],
[446,461,445,427,444,449,0,415],
[458,445,455,455,450,454,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,463,469,436,464,453,440],
[415,0,434,431,437,454,451,424],
[428,457,0,436,440,445,451,452],
[422,460,455,0,409,426,438,446],
[455,454,451,482,0,469,434,459],
[427,437,446,465,422,0,429,448],
[438,440,440,453,457,462,0,447],
[451,467,439,445,432,443,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,396,454,441,508,580,379],
[384,0,445,392,329,478,485,389],
[495,446,0,394,497,504,442,473],
[437,499,497,0,333,584,495,334],
[450,562,394,558,0,595,554,474],
[383,413,387,307,296,0,453,416],
[311,406,449,396,337,438,0,315],
[512,502,418,557,417,475,576,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,363,519,523,494,527,548],
[390,0,325,431,478,347,402,442],
[528,566,0,507,544,443,472,561],
[372,460,384,0,483,513,500,529],
[368,413,347,408,0,427,405,416],
[397,544,448,378,464,0,506,540],
[364,489,419,391,486,385,0,436],
[343,449,330,362,475,351,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,349,392,500,340,440,432,404],
[542,0,448,536,444,489,560,541],
[499,443,0,539,448,462,429,451],
[391,355,352,0,409,381,377,456],
[551,447,443,482,0,424,509,457],
[451,402,429,510,467,0,458,501],
[459,331,462,514,382,433,0,386],
[487,350,440,435,434,390,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,464,445,413,456,468,455],
[420,0,438,457,448,435,447,500],
[427,453,0,463,425,420,458,451],
[446,434,428,0,450,457,472,476],
[478,443,466,441,0,468,477,455],
[435,456,471,434,423,0,464,465],
[423,444,433,419,414,427,0,441],
[436,391,440,415,436,426,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,471,483,448,419,407,411],
[439,0,458,471,422,446,433,451],
[420,433,0,436,389,451,409,429],
[408,420,455,0,419,428,411,431],
[443,469,502,472,0,457,451,439],
[472,445,440,463,434,0,413,422],
[484,458,482,480,440,478,0,450],
[480,440,462,460,452,469,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,467,392,420,479,449,435],
[478,0,494,427,427,478,504,468],
[424,397,0,391,417,411,400,403],
[499,464,500,0,464,457,427,464],
[471,464,474,427,0,474,479,489],
[412,413,480,434,417,0,464,446],
[442,387,491,464,412,427,0,432],
[456,423,488,427,402,445,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,444,502,461,450,451,507],
[411,0,447,475,436,440,464,444],
[447,444,0,485,435,425,479,470],
[389,416,406,0,407,413,400,438],
[430,455,456,484,0,386,504,487],
[441,451,466,478,505,0,440,464],
[440,427,412,491,387,451,0,424],
[384,447,421,453,404,427,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,447,450,435,432,456,459],
[439,0,439,466,458,413,441,458],
[444,452,0,457,446,447,449,463],
[441,425,434,0,433,419,419,452],
[456,433,445,458,0,425,436,468],
[459,478,444,472,466,0,457,454],
[435,450,442,472,455,434,0,450],
[432,433,428,439,423,437,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,468,445,459,453,456,469],
[403,0,446,426,426,408,448,437],
[423,445,0,451,408,450,432,457],
[446,465,440,0,444,452,426,463],
[432,465,483,447,0,441,435,456],
[438,483,441,439,450,0,453,459],
[435,443,459,465,456,438,0,510],
[422,454,434,428,435,432,381,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,432,440,443,435,453,494],
[482,0,457,475,487,467,437,471],
[459,434,0,462,463,436,464,496],
[451,416,429,0,437,424,413,465],
[448,404,428,454,0,422,447,455],
[456,424,455,467,469,0,483,454],
[438,454,427,478,444,408,0,453],
[397,420,395,426,436,437,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,470,450,441,456,473,443],
[425,0,454,465,448,481,463,469],
[421,437,0,451,455,450,457,465],
[441,426,440,0,434,454,441,480],
[450,443,436,457,0,488,460,462],
[435,410,441,437,403,0,460,415],
[418,428,434,450,431,431,0,434],
[448,422,426,411,429,476,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,451,481,450,443,458,479],
[456,0,457,478,439,451,493,464],
[440,434,0,451,424,436,484,458],
[410,413,440,0,425,418,461,422],
[441,452,467,466,0,453,457,474],
[448,440,455,473,438,0,483,450],
[433,398,407,430,434,408,0,441],
[412,427,433,469,417,441,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,442,432,450,434,448,419],
[462,0,437,444,432,451,465,455],
[449,454,0,455,472,466,439,443],
[459,447,436,0,448,440,450,465],
[441,459,419,443,0,451,444,429],
[457,440,425,451,440,0,475,448],
[443,426,452,441,447,416,0,438],
[472,436,448,426,462,443,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,209,368,378,343,258,354,374],
[682,0,446,496,428,529,554,488],
[523,445,0,612,562,403,457,412],
[513,395,279,0,453,452,473,458],
[548,463,329,438,0,458,588,485],
[633,362,488,439,433,0,532,450],
[537,337,434,418,303,359,0,396],
[517,403,479,433,406,441,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,472,505,458,505,479,480],
[462,0,437,492,441,516,439,470],
[419,454,0,473,461,462,455,442],
[386,399,418,0,441,461,430,401],
[433,450,430,450,0,443,457,431],
[386,375,429,430,448,0,412,406],
[412,452,436,461,434,479,0,457],
[411,421,449,490,460,485,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,445,452,466,454,432,436],
[451,0,495,464,476,425,472,446],
[446,396,0,449,450,424,428,439],
[439,427,442,0,430,420,466,415],
[425,415,441,461,0,433,475,456],
[437,466,467,471,458,0,467,491],
[459,419,463,425,416,424,0,444],
[455,445,452,476,435,400,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,443,471,433,414,413,429],
[437,0,412,471,517,395,449,431],
[448,479,0,458,480,430,480,458],
[420,420,433,0,405,449,459,478],
[458,374,411,486,0,396,481,388],
[477,496,461,442,495,0,499,450],
[478,442,411,432,410,392,0,404],
[462,460,433,413,503,441,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,495,443,467,456,517,460],
[403,0,423,446,450,436,495,472],
[396,468,0,460,378,453,489,425],
[448,445,431,0,440,437,507,449],
[424,441,513,451,0,432,508,478],
[435,455,438,454,459,0,485,487],
[374,396,402,384,383,406,0,402],
[431,419,466,442,413,404,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,438,414,416,412,446,412],
[479,0,389,420,403,432,454,432],
[453,502,0,498,447,432,499,468],
[477,471,393,0,423,426,459,416],
[475,488,444,468,0,470,462,427],
[479,459,459,465,421,0,492,442],
[445,437,392,432,429,399,0,420],
[479,459,423,475,464,449,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,333,272,429,465,324,382],
[493,0,316,308,521,492,445,361],
[558,575,0,401,554,572,561,450],
[619,583,490,0,672,584,492,444],
[462,370,337,219,0,410,388,304],
[426,399,319,307,481,0,375,294],
[567,446,330,399,503,516,0,351],
[509,530,441,447,587,597,540,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,411,469,433,437,419,401],
[397,0,424,423,422,456,404,378],
[480,467,0,490,454,449,430,473],
[422,468,401,0,454,478,450,438],
[458,469,437,437,0,470,398,406],
[454,435,442,413,421,0,430,396],
[472,487,461,441,493,461,0,443],
[490,513,418,453,485,495,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,454,447,451,435,445,456],
[480,0,473,462,426,439,461,475],
[437,418,0,437,426,433,426,443],
[444,429,454,0,410,411,438,446],
[440,465,465,481,0,447,458,454],
[456,452,458,480,444,0,444,461],
[446,430,465,453,433,447,0,454],
[435,416,448,445,437,430,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,457,455,456,441,453,459],
[435,0,442,439,442,459,435,438],
[434,449,0,458,430,465,455,444],
[436,452,433,0,437,439,430,466],
[435,449,461,454,0,461,463,471],
[450,432,426,452,430,0,449,447],
[438,456,436,461,428,442,0,461],
[432,453,447,425,420,444,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,443,337,460,388,414,480],
[489,0,460,441,440,475,580,472],
[448,431,0,425,395,445,503,597],
[554,450,466,0,408,534,525,547],
[431,451,496,483,0,514,471,531],
[503,416,446,357,377,0,525,422],
[477,311,388,366,420,366,0,468],
[411,419,294,344,360,469,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,458,422,440,463,451,439],
[457,0,482,446,473,445,449,482],
[433,409,0,444,460,425,434,426],
[469,445,447,0,471,468,467,464],
[451,418,431,420,0,461,399,445],
[428,446,466,423,430,0,420,445],
[440,442,457,424,492,471,0,456],
[452,409,465,427,446,446,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,378,412,405,418,411,388],
[518,0,406,488,447,521,431,433],
[513,485,0,507,437,490,436,456],
[479,403,384,0,420,429,384,375],
[486,444,454,471,0,466,484,401],
[473,370,401,462,425,0,464,406],
[480,460,455,507,407,427,0,411],
[503,458,435,516,490,485,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,438,454,451,441,496,471],
[459,0,420,466,448,453,479,459],
[453,471,0,463,437,435,488,469],
[437,425,428,0,410,430,469,443],
[440,443,454,481,0,480,506,462],
[450,438,456,461,411,0,481,454],
[395,412,403,422,385,410,0,408],
[420,432,422,448,429,437,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,470,467,433,451,454,436],
[414,0,399,408,444,435,396,446],
[421,492,0,466,488,458,449,451],
[424,483,425,0,476,452,481,472],
[458,447,403,415,0,415,435,475],
[440,456,433,439,476,0,428,457],
[437,495,442,410,456,463,0,454],
[455,445,440,419,416,434,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,449,441,434,446,460,495],
[448,0,463,469,461,442,480,489],
[442,428,0,454,448,439,483,474],
[450,422,437,0,423,413,439,470],
[457,430,443,468,0,452,454,492],
[445,449,452,478,439,0,472,491],
[431,411,408,452,437,419,0,462],
[396,402,417,421,399,400,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,425,446,434,434,448,471],
[423,0,402,419,401,424,405,450],
[466,489,0,466,438,443,428,494],
[445,472,425,0,421,442,416,475],
[457,490,453,470,0,443,446,459],
[457,467,448,449,448,0,426,461],
[443,486,463,475,445,465,0,458],
[420,441,397,416,432,430,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,465,444,417,471,441,443],
[439,0,475,452,441,462,445,449],
[426,416,0,446,443,446,438,440],
[447,439,445,0,447,450,466,438],
[474,450,448,444,0,484,471,465],
[420,429,445,441,407,0,435,445],
[450,446,453,425,420,456,0,437],
[448,442,451,453,426,446,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,458,454,433,421,463,434],
[423,0,443,455,426,426,416,411],
[433,448,0,457,420,426,447,402],
[437,436,434,0,444,451,428,455],
[458,465,471,447,0,461,435,446],
[470,465,465,440,430,0,442,431],
[428,475,444,463,456,449,0,435],
[457,480,489,436,445,460,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,345,388,343,379,463,566,443],
[546,0,360,582,500,489,472,553],
[503,531,0,443,387,582,492,444],
[548,309,448,0,516,492,615,471],
[512,391,504,375,0,518,487,371],
[428,402,309,399,373,0,343,340],
[325,419,399,276,404,548,0,410],
[448,338,447,420,520,551,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,406,389,441,451,387,421],
[486,0,445,450,488,451,433,435],
[485,446,0,427,470,460,417,417],
[502,441,464,0,474,464,453,462],
[450,403,421,417,0,474,413,414],
[440,440,431,427,417,0,398,414],
[504,458,474,438,478,493,0,471],
[470,456,474,429,477,477,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,434,444,471,437,441,426],
[407,0,433,442,443,410,451,401],
[457,458,0,443,457,441,464,448],
[447,449,448,0,453,438,438,417],
[420,448,434,438,0,418,432,409],
[454,481,450,453,473,0,449,419],
[450,440,427,453,459,442,0,415],
[465,490,443,474,482,472,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,432,431,451,439,435,439],
[420,0,410,422,422,389,414,432],
[459,481,0,454,455,445,434,487],
[460,469,437,0,470,434,455,459],
[440,469,436,421,0,420,427,456],
[452,502,446,457,471,0,445,453],
[456,477,457,436,464,446,0,459],
[452,459,404,432,435,438,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,451,468,407,454,384,425],
[414,0,414,424,407,459,407,405],
[440,477,0,452,451,415,428,381],
[423,467,439,0,408,408,424,421],
[484,484,440,483,0,437,467,449],
[437,432,476,483,454,0,465,411],
[507,484,463,467,424,426,0,385],
[466,486,510,470,442,480,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,473,472,429,455,461,426],
[389,0,489,402,427,413,406,411],
[418,402,0,390,361,442,384,403],
[419,489,501,0,462,476,491,487],
[462,464,530,429,0,468,428,484],
[436,478,449,415,423,0,406,441],
[430,485,507,400,463,485,0,510],
[465,480,488,404,407,450,381,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,436,432,447,445,419,443],
[469,0,445,425,465,431,431,429],
[455,446,0,411,437,426,448,446],
[459,466,480,0,459,455,441,451],
[444,426,454,432,0,442,444,454],
[446,460,465,436,449,0,440,461],
[472,460,443,450,447,451,0,429],
[448,462,445,440,437,430,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,437,439,442,430,460,428],
[446,0,460,450,430,463,468,460],
[454,431,0,442,448,446,447,463],
[452,441,449,0,436,451,475,439],
[449,461,443,455,0,463,460,463],
[461,428,445,440,428,0,436,420],
[431,423,444,416,431,455,0,422],
[463,431,428,452,428,471,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,455,432,432,419,430,407],
[469,0,443,426,465,415,388,414],
[436,448,0,475,465,454,416,432],
[459,465,416,0,462,418,405,409],
[459,426,426,429,0,417,388,431],
[472,476,437,473,474,0,420,447],
[461,503,475,486,503,471,0,439],
[484,477,459,482,460,444,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,430,487,485,343,454,473],
[529,0,579,569,435,504,447,483],
[461,312,0,416,498,476,436,512],
[404,322,475,0,533,367,517,411],
[406,456,393,358,0,392,359,391],
[548,387,415,524,499,0,442,399],
[437,444,455,374,532,449,0,381],
[418,408,379,480,500,492,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,436,425,461,448,426,418],
[448,0,463,433,513,458,439,439],
[455,428,0,416,480,431,422,445],
[466,458,475,0,470,460,469,428],
[430,378,411,421,0,399,403,400],
[443,433,460,431,492,0,417,439],
[465,452,469,422,488,474,0,446],
[473,452,446,463,491,452,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,420,441,442,511,446,519],
[489,0,433,420,403,515,386,470],
[471,458,0,461,444,515,396,502],
[450,471,430,0,371,517,382,541],
[449,488,447,520,0,521,392,458],
[380,376,376,374,370,0,367,455],
[445,505,495,509,499,524,0,548],
[372,421,389,350,433,436,343,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,461,432,441,433,459,444],
[457,0,470,463,431,448,490,456],
[430,421,0,449,446,439,468,449],
[459,428,442,0,438,430,462,429],
[450,460,445,453,0,443,482,446],
[458,443,452,461,448,0,491,442],
[432,401,423,429,409,400,0,426],
[447,435,442,462,445,449,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,525,426,461,468,479,436,438],
[366,0,370,370,355,433,417,424],
[465,521,0,400,449,507,469,491],
[430,521,491,0,473,508,517,520],
[423,536,442,418,0,419,405,490],
[412,458,384,383,472,0,421,555],
[455,474,422,374,486,470,0,551],
[453,467,400,371,401,336,340,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,429,442,440,430,454,440],
[451,0,464,450,463,434,480,448],
[462,427,0,444,437,433,461,446],
[449,441,447,0,435,476,477,437],
[451,428,454,456,0,450,456,434],
[461,457,458,415,441,0,482,459],
[437,411,430,414,435,409,0,417],
[451,443,445,454,457,432,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,453,460,460,473,462,455],
[455,0,463,455,444,453,447,466],
[438,428,0,425,440,444,433,437],
[431,436,466,0,434,441,442,476],
[431,447,451,457,0,460,459,465],
[418,438,447,450,431,0,431,439],
[429,444,458,449,432,460,0,471],
[436,425,454,415,426,452,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,462,439,402,463,483,449],
[410,0,399,420,411,412,484,442],
[429,492,0,451,427,433,479,455],
[452,471,440,0,454,457,528,475],
[489,480,464,437,0,426,511,465],
[428,479,458,434,465,0,450,441],
[408,407,412,363,380,441,0,414],
[442,449,436,416,426,450,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,556,398,473,462,502,450],
[481,0,481,498,479,454,475,421],
[335,410,0,415,445,404,424,462],
[493,393,476,0,476,370,464,433],
[418,412,446,415,0,371,392,425],
[429,437,487,521,520,0,391,537],
[389,416,467,427,499,500,0,448],
[441,470,429,458,466,354,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,463,423,480,495,437,433],
[392,0,461,406,416,464,406,421],
[428,430,0,424,420,482,435,436],
[468,485,467,0,496,498,457,439],
[411,475,471,395,0,457,462,455],
[396,427,409,393,434,0,400,407],
[454,485,456,434,429,491,0,472],
[458,470,455,452,436,484,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,420,436,444,464,467,439],
[494,0,468,477,438,462,462,444],
[471,423,0,464,423,454,484,469],
[455,414,427,0,416,441,483,430],
[447,453,468,475,0,441,480,463],
[427,429,437,450,450,0,468,452],
[424,429,407,408,411,423,0,395],
[452,447,422,461,428,439,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,395,492,386,476,443,464],
[416,0,410,455,402,392,397,442],
[496,481,0,430,496,494,447,510],
[399,436,461,0,416,457,432,442],
[505,489,395,475,0,480,426,423],
[415,499,397,434,411,0,427,457],
[448,494,444,459,465,464,0,455],
[427,449,381,449,468,434,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,421,428,438,420,461,449],
[461,0,435,439,457,447,466,434],
[470,456,0,430,449,446,464,452],
[463,452,461,0,466,428,464,460],
[453,434,442,425,0,433,477,459],
[471,444,445,463,458,0,478,463],
[430,425,427,427,414,413,0,425],
[442,457,439,431,432,428,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,438,424,452,478,467,447],
[476,0,448,427,473,482,495,449],
[453,443,0,421,472,476,485,473],
[467,464,470,0,474,478,452,439],
[439,418,419,417,0,446,454,449],
[413,409,415,413,445,0,452,397],
[424,396,406,439,437,439,0,410],
[444,442,418,452,442,494,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,460,430,452,439,448],
[436,0,440,446,434,463,435,437],
[432,451,0,448,443,453,440,448],
[431,445,443,0,421,452,443,449],
[461,457,448,470,0,487,444,476],
[439,428,438,439,404,0,453,450],
[452,456,451,448,447,438,0,454],
[443,454,443,442,415,441,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,431,428,446,435,442,425],
[434,0,444,426,447,456,424,434],
[460,447,0,461,448,457,457,440],
[463,465,430,0,455,432,455,440],
[445,444,443,436,0,424,429,430],
[456,435,434,459,467,0,436,458],
[449,467,434,436,462,455,0,436],
[466,457,451,451,461,433,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,443,458,457,461,424,462],
[407,0,452,487,440,449,432,461],
[448,439,0,480,476,470,436,482],
[433,404,411,0,431,437,435,457],
[434,451,415,460,0,473,453,473],
[430,442,421,454,418,0,453,464],
[467,459,455,456,438,438,0,441],
[429,430,409,434,418,427,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,522,488,555,405,539,455,604],
[369,0,351,416,359,419,399,448],
[403,540,0,417,330,372,522,507],
[336,475,474,0,450,356,374,478],
[486,532,561,441,0,468,469,496],
[352,472,519,535,423,0,436,542],
[436,492,369,517,422,455,0,449],
[287,443,384,413,395,349,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,468,459,452,487,471,483],
[469,0,486,457,472,494,430,441],
[423,405,0,425,434,444,431,424],
[432,434,466,0,459,478,430,475],
[439,419,457,432,0,482,448,443],
[404,397,447,413,409,0,424,435],
[420,461,460,461,443,467,0,425],
[408,450,467,416,448,456,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,440,475,438,443,421,448],
[415,0,425,441,435,427,426,398],
[451,466,0,504,448,439,452,504],
[416,450,387,0,457,445,463,441],
[453,456,443,434,0,468,416,471],
[448,464,452,446,423,0,416,467],
[470,465,439,428,475,475,0,440],
[443,493,387,450,420,424,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,439,491,457,485,452,458],
[436,0,448,488,459,478,493,434],
[452,443,0,477,441,482,464,462],
[400,403,414,0,409,430,428,402],
[434,432,450,482,0,464,467,459],
[406,413,409,461,427,0,433,428],
[439,398,427,463,424,458,0,429],
[433,457,429,489,432,463,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,480,421,514,455,455,483],
[442,0,496,449,467,442,428,474],
[411,395,0,391,484,417,441,405],
[470,442,500,0,502,463,504,428],
[377,424,407,389,0,443,394,424],
[436,449,474,428,448,0,431,452],
[436,463,450,387,497,460,0,482],
[408,417,486,463,467,439,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,417,429,438,417,406,405],
[463,0,442,464,457,446,446,444],
[474,449,0,444,452,437,449,451],
[462,427,447,0,445,418,420,450],
[453,434,439,446,0,441,438,444],
[474,445,454,473,450,0,451,455],
[485,445,442,471,453,440,0,449],
[486,447,440,441,447,436,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,431,454,442,451,433,452],
[457,0,464,468,430,459,464,464],
[460,427,0,468,452,458,454,463],
[437,423,423,0,419,454,435,458],
[449,461,439,472,0,460,442,464],
[440,432,433,437,431,0,462,455],
[458,427,437,456,449,429,0,436],
[439,427,428,433,427,436,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,477,453,418,398,468,416],
[475,0,454,432,407,446,453,412],
[414,437,0,397,371,397,423,366],
[438,459,494,0,329,433,489,382],
[473,484,520,562,0,473,491,439],
[493,445,494,458,418,0,457,462],
[423,438,468,402,400,434,0,383],
[475,479,525,509,452,429,508,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,452,459,430,489,439,485],
[429,0,437,449,465,478,443,452],
[439,454,0,461,432,453,451,468],
[432,442,430,0,441,462,425,472],
[461,426,459,450,0,467,445,448],
[402,413,438,429,424,0,438,474],
[452,448,440,466,446,453,0,478],
[406,439,423,419,443,417,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,454,446,471,441,467,436],
[444,0,459,480,486,472,481,450],
[437,432,0,446,448,436,443,429],
[445,411,445,0,451,423,457,431],
[420,405,443,440,0,394,403,411],
[450,419,455,468,497,0,461,435],
[424,410,448,434,488,430,0,436],
[455,441,462,460,480,456,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,470,436,429,481,464,446],
[379,0,383,375,375,401,421,407],
[421,508,0,401,462,422,451,428],
[455,516,490,0,444,472,489,464],
[462,516,429,447,0,452,465,489],
[410,490,469,419,439,0,453,443],
[427,470,440,402,426,438,0,440],
[445,484,463,427,402,448,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,495,505,464,438,488,529],
[405,0,429,446,410,406,365,445],
[396,462,0,466,433,414,384,440],
[386,445,425,0,422,438,386,435],
[427,481,458,469,0,455,470,513],
[453,485,477,453,436,0,383,486],
[403,526,507,505,421,508,0,481],
[362,446,451,456,378,405,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,438,473,470,467,449,466],
[426,0,434,430,427,440,420,446],
[453,457,0,456,459,443,437,462],
[418,461,435,0,433,450,436,453],
[421,464,432,458,0,440,443,447],
[424,451,448,441,451,0,434,438],
[442,471,454,455,448,457,0,480],
[425,445,429,438,444,453,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,427,429,369,422,424,382],
[480,0,467,441,426,435,443,400],
[464,424,0,402,417,416,444,383],
[462,450,489,0,428,435,462,420],
[522,465,474,463,0,455,450,434],
[469,456,475,456,436,0,466,446],
[467,448,447,429,441,425,0,411],
[509,491,508,471,457,445,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,463,488,495,473,454,426],
[423,0,455,486,432,461,453,448],
[428,436,0,468,452,456,459,420],
[403,405,423,0,418,420,396,431],
[396,459,439,473,0,462,430,436],
[418,430,435,471,429,0,446,437],
[437,438,432,495,461,445,0,439],
[465,443,471,460,455,454,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,469,444,469,451,473,433],
[451,0,451,437,453,422,460,441],
[422,440,0,417,459,433,440,420],
[447,454,474,0,484,441,468,427],
[422,438,432,407,0,417,443,426],
[440,469,458,450,474,0,468,452],
[418,431,451,423,448,423,0,448],
[458,450,471,464,465,439,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,450,428,432,449,422,447],
[438,0,451,431,432,449,439,443],
[441,440,0,446,445,458,428,464],
[463,460,445,0,425,462,440,446],
[459,459,446,466,0,459,433,458],
[442,442,433,429,432,0,422,426],
[469,452,463,451,458,469,0,440],
[444,448,427,445,433,465,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,464,463,446,435,447,438],
[460,0,442,454,449,428,455,447],
[427,449,0,459,444,440,455,434],
[428,437,432,0,441,440,426,435],
[445,442,447,450,0,448,436,458],
[456,463,451,451,443,0,463,422],
[444,436,436,465,455,428,0,457],
[453,444,457,456,433,469,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,469,446,457,445,471,427],
[449,0,447,446,440,448,460,454],
[422,444,0,429,435,416,449,427],
[445,445,462,0,448,444,437,456],
[434,451,456,443,0,456,444,449],
[446,443,475,447,435,0,454,458],
[420,431,442,454,447,437,0,435],
[464,437,464,435,442,433,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,431,438,437,454,442,459],
[422,0,460,426,429,488,426,420],
[460,431,0,449,442,473,446,446],
[453,465,442,0,431,475,462,433],
[454,462,449,460,0,496,452,436],
[437,403,418,416,395,0,423,399],
[449,465,445,429,439,468,0,464],
[432,471,445,458,455,492,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,463,480,476,437,453,452],
[437,0,469,465,466,426,438,421],
[428,422,0,442,439,416,456,430],
[411,426,449,0,451,426,452,410],
[415,425,452,440,0,417,442,409],
[454,465,475,465,474,0,456,430],
[438,453,435,439,449,435,0,440],
[439,470,461,481,482,461,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,450,474,439,449,470,456],
[416,0,439,444,422,425,460,432],
[441,452,0,474,434,452,457,457],
[417,447,417,0,423,433,451,441],
[452,469,457,468,0,453,451,440],
[442,466,439,458,438,0,459,457],
[421,431,434,440,440,432,0,458],
[435,459,434,450,451,434,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,465,466,433,448,438,418],
[452,0,480,487,430,457,453,425],
[426,411,0,466,417,448,454,422],
[425,404,425,0,400,412,430,413],
[458,461,474,491,0,451,421,430],
[443,434,443,479,440,0,485,450],
[453,438,437,461,470,406,0,453],
[473,466,469,478,461,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,442,475,501,475,443,500],
[430,0,471,459,477,438,435,461],
[449,420,0,462,465,454,417,470],
[416,432,429,0,451,433,406,436],
[390,414,426,440,0,366,426,465],
[416,453,437,458,525,0,416,457],
[448,456,474,485,465,475,0,444],
[391,430,421,455,426,434,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,439,425,417,410,454,427],
[472,0,493,491,432,460,482,491],
[452,398,0,410,419,441,429,417],
[466,400,481,0,448,475,464,448],
[474,459,472,443,0,474,491,467],
[481,431,450,416,417,0,486,453],
[437,409,462,427,400,405,0,409],
[464,400,474,443,424,438,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,444,469,452,414,450,445],
[419,0,415,435,439,417,452,443],
[447,476,0,475,439,449,488,451],
[422,456,416,0,439,431,480,421],
[439,452,452,452,0,419,455,454],
[477,474,442,460,472,0,466,452],
[441,439,403,411,436,425,0,438],
[446,448,440,470,437,439,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,452,448,465,451,443,445],
[450,0,434,459,450,449,433,448],
[439,457,0,437,445,455,440,454],
[443,432,454,0,451,466,461,422],
[426,441,446,440,0,432,454,422],
[440,442,436,425,459,0,453,443],
[448,458,451,430,437,438,0,436],
[446,443,437,469,469,448,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,450,439,437,460,445,440],
[464,0,450,441,451,467,456,431],
[441,441,0,434,449,482,456,450],
[452,450,457,0,456,463,468,426],
[454,440,442,435,0,464,481,444],
[431,424,409,428,427,0,435,437],
[446,435,435,423,410,456,0,429],
[451,460,441,465,447,454,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,536,339,712,636,442,600],
[489,0,319,339,403,427,435,461],
[355,572,0,495,521,428,435,579],
[552,552,396,0,607,387,613,402],
[179,488,370,284,0,428,313,443],
[255,464,463,504,463,0,489,556],
[449,456,456,278,578,402,0,579],
[291,430,312,489,448,335,312,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,423,428,420,444,412,431],
[430,0,446,418,424,439,445,438],
[468,445,0,444,445,473,463,441],
[463,473,447,0,435,452,442,455],
[471,467,446,456,0,464,451,445],
[447,452,418,439,427,0,447,415],
[479,446,428,449,440,444,0,450],
[460,453,450,436,446,476,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,473,463,454,456,462,470],
[449,0,480,458,442,450,434,484],
[418,411,0,428,414,435,451,447],
[428,433,463,0,430,456,447,475],
[437,449,477,461,0,469,459,469],
[435,441,456,435,422,0,456,455],
[429,457,440,444,432,435,0,461],
[421,407,444,416,422,436,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,477,449,428,486,426,481],
[486,0,464,433,513,490,447,415],
[414,427,0,416,420,398,396,440],
[442,458,475,0,476,441,416,476],
[463,378,471,415,0,421,375,428],
[405,401,493,450,470,0,450,500],
[465,444,495,475,516,441,0,464],
[410,476,451,415,463,391,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,360,544,638,397,332,323],
[429,0,511,362,635,512,456,462],
[531,380,0,599,642,316,382,488],
[347,529,292,0,404,436,490,411],
[253,256,249,487,0,286,349,254],
[494,379,575,455,605,0,511,537],
[559,435,509,401,542,380,0,354],
[568,429,403,480,637,354,537,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,494,393,507,475,416,476],
[409,0,484,480,540,490,438,488],
[397,407,0,423,477,404,369,475],
[498,411,468,0,487,415,457,465],
[384,351,414,404,0,393,359,414],
[416,401,487,476,498,0,408,491],
[475,453,522,434,532,483,0,540],
[415,403,416,426,477,400,351,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,467,487,454,444,484,478],
[445,0,469,471,455,491,470,467],
[424,422,0,459,432,427,458,447],
[404,420,432,0,407,439,464,445],
[437,436,459,484,0,481,469,495],
[447,400,464,452,410,0,472,490],
[407,421,433,427,422,419,0,427],
[413,424,444,446,396,401,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,430,408,434,415,400,436],
[458,0,461,449,452,441,457,448],
[461,430,0,422,430,437,423,439],
[483,442,469,0,444,463,430,445],
[457,439,461,447,0,418,430,450],
[476,450,454,428,473,0,432,430],
[491,434,468,461,461,459,0,445],
[455,443,452,446,441,461,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,446,445,439,439,431,436],
[441,0,434,444,439,425,427,430],
[445,457,0,437,443,442,428,434],
[446,447,454,0,460,449,438,450],
[452,452,448,431,0,452,457,439],
[452,466,449,442,439,0,452,439],
[460,464,463,453,434,439,0,468],
[455,461,457,441,452,452,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,456,456,439,441,465,458],
[420,0,429,429,435,437,420,411],
[435,462,0,446,451,437,438,440],
[435,462,445,0,474,458,466,473],
[452,456,440,417,0,434,465,442],
[450,454,454,433,457,0,455,440],
[426,471,453,425,426,436,0,443],
[433,480,451,418,449,451,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,465,469,448,444,453,455],
[444,0,482,449,455,453,459,466],
[426,409,0,416,432,453,437,422],
[422,442,475,0,411,444,424,452],
[443,436,459,480,0,467,454,461],
[447,438,438,447,424,0,443,437],
[438,432,454,467,437,448,0,436],
[436,425,469,439,430,454,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,453,447,446,426,433,425],
[453,0,448,444,451,444,461,464],
[438,443,0,448,452,438,432,437],
[444,447,443,0,448,417,451,447],
[445,440,439,443,0,446,438,450],
[465,447,453,474,445,0,471,444],
[458,430,459,440,453,420,0,451],
[466,427,454,444,441,447,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,477,467,453,408,467,474],
[453,0,482,458,426,435,449,470],
[414,409,0,430,426,383,440,440],
[424,433,461,0,439,434,444,471],
[438,465,465,452,0,446,466,473],
[483,456,508,457,445,0,472,472],
[424,442,451,447,425,419,0,452],
[417,421,451,420,418,419,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,394,447,553,500,506,516],
[433,0,527,424,619,532,552,428],
[497,364,0,418,517,563,503,501],
[444,467,473,0,617,530,522,488],
[338,272,374,274,0,441,402,401],
[391,359,328,361,450,0,387,282],
[385,339,388,369,489,504,0,392],
[375,463,390,403,490,609,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,446,453,472,459,419,493],
[441,0,473,442,458,445,407,461],
[445,418,0,448,442,430,413,459],
[438,449,443,0,475,456,447,462],
[419,433,449,416,0,405,421,437],
[432,446,461,435,486,0,455,462],
[472,484,478,444,470,436,0,476],
[398,430,432,429,454,429,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,477,439,444,449,450,487],
[443,0,479,421,456,432,416,492],
[414,412,0,429,433,414,414,449],
[452,470,462,0,460,431,447,464],
[447,435,458,431,0,447,413,446],
[442,459,477,460,444,0,472,482],
[441,475,477,444,478,419,0,470],
[404,399,442,427,445,409,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,454,465,404,437,462,461],
[436,0,441,435,416,441,463,428],
[437,450,0,447,453,436,463,411],
[426,456,444,0,446,451,479,433],
[487,475,438,445,0,432,467,460],
[454,450,455,440,459,0,461,425],
[429,428,428,412,424,430,0,434],
[430,463,480,458,431,466,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,500,504,455,476,419,472],
[412,0,468,444,423,500,454,468],
[391,423,0,413,408,445,414,437],
[387,447,478,0,415,479,440,467],
[436,468,483,476,0,509,435,456],
[415,391,446,412,382,0,434,440],
[472,437,477,451,456,457,0,503],
[419,423,454,424,435,451,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,454,442,426,468,446],
[438,0,479,472,459,457,478,488],
[451,412,0,451,429,442,449,443],
[437,419,440,0,468,434,437,445],
[449,432,462,423,0,417,431,442],
[465,434,449,457,474,0,462,448],
[423,413,442,454,460,429,0,459],
[445,403,448,446,449,443,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,432,476,429,398,393,470],
[451,0,432,438,440,399,377,480],
[459,459,0,480,496,406,459,536],
[415,453,411,0,453,329,377,491],
[462,451,395,438,0,438,435,490],
[493,492,485,562,453,0,442,456],
[498,514,432,514,456,449,0,476],
[421,411,355,400,401,435,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,418,509,437,409,532,509],
[451,0,449,492,440,422,460,500],
[473,442,0,558,498,487,486,584],
[382,399,333,0,366,376,404,416],
[454,451,393,525,0,414,433,436],
[482,469,404,515,477,0,508,459],
[359,431,405,487,458,383,0,571],
[382,391,307,475,455,432,320,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,429,433,437,448,455,427],
[450,0,446,439,457,453,471,439],
[462,445,0,455,451,464,469,452],
[458,452,436,0,431,435,463,442],
[454,434,440,460,0,465,464,441],
[443,438,427,456,426,0,458,430],
[436,420,422,428,427,433,0,418],
[464,452,439,449,450,461,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,452,436,493,482,421,496],
[438,0,457,431,475,456,431,482],
[439,434,0,476,476,458,437,491],
[455,460,415,0,469,479,460,489],
[398,416,415,422,0,404,414,455],
[409,435,433,412,487,0,422,483],
[470,460,454,431,477,469,0,469],
[395,409,400,402,436,408,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,379,325,437,423,417,354,369],
[512,0,497,475,518,402,414,468],
[566,394,0,513,468,416,431,439],
[454,416,378,0,431,341,371,363],
[468,373,423,460,0,361,414,363],
[474,489,475,550,530,0,517,445],
[537,477,460,520,477,374,0,423],
[522,423,452,528,528,446,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,459,456,427,459,451,457],
[468,0,448,474,450,486,469,443],
[432,443,0,448,421,449,445,424],
[435,417,443,0,425,447,445,423],
[464,441,470,466,0,474,470,443],
[432,405,442,444,417,0,445,418],
[440,422,446,446,421,446,0,422],
[434,448,467,468,448,473,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,461,451,442,458,480,448],
[436,0,470,456,448,461,455,461],
[430,421,0,424,424,452,462,435],
[440,435,467,0,430,438,472,441],
[449,443,467,461,0,458,473,455],
[433,430,439,453,433,0,445,437],
[411,436,429,419,418,446,0,444],
[443,430,456,450,436,454,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,474,442,490,431,490],
[443,0,474,442,437,471,441,478],
[455,417,0,411,424,467,424,459],
[417,449,480,0,449,507,433,436],
[449,454,467,442,0,466,472,444],
[401,420,424,384,425,0,409,447],
[460,450,467,458,419,482,0,494],
[401,413,432,455,447,444,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,456,437,420,449,432,436],
[438,0,441,425,436,458,425,423],
[435,450,0,429,423,450,434,416],
[454,466,462,0,459,471,461,442],
[471,455,468,432,0,449,453,441],
[442,433,441,420,442,0,426,429],
[459,466,457,430,438,465,0,456],
[455,468,475,449,450,462,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,358,468,343,361,460,495],
[513,0,461,476,427,417,447,429],
[533,430,0,491,399,460,511,524],
[423,415,400,0,445,392,486,406],
[548,464,492,446,0,405,397,421],
[530,474,431,499,486,0,466,431],
[431,444,380,405,494,425,0,426],
[396,462,367,485,470,460,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,706,237,508,279,420,402,485],
[185,0,93,299,262,158,157,299],
[654,798,0,409,372,715,648,731],
[383,592,482,0,353,306,402,516],
[612,629,519,538,0,420,582,617],
[471,733,176,585,471,0,193,585],
[489,734,243,489,309,698,0,668],
[406,592,160,375,274,306,223,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,441,449,465,490,459,452],
[440,0,436,450,442,438,445,426],
[450,455,0,442,460,473,447,446],
[442,441,449,0,457,473,435,469],
[426,449,431,434,0,446,434,437],
[401,453,418,418,445,0,444,415],
[432,446,444,456,457,447,0,427],
[439,465,445,422,454,476,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,444,454,452,410,434,433],
[451,0,430,435,454,459,443,449],
[447,461,0,430,451,431,452,453],
[437,456,461,0,452,431,419,430],
[439,437,440,439,0,431,432,456],
[481,432,460,460,460,0,460,443],
[457,448,439,472,459,431,0,450],
[458,442,438,461,435,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,437,433,425,455,414,421],
[456,0,442,445,456,437,484,457],
[454,449,0,447,456,463,438,420],
[458,446,444,0,450,461,452,451],
[466,435,435,441,0,462,461,454],
[436,454,428,430,429,0,443,420],
[477,407,453,439,430,448,0,441],
[470,434,471,440,437,471,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,476,461,496,460,468,435],
[415,0,464,446,474,447,452,449],
[415,427,0,447,464,429,445,431],
[430,445,444,0,467,453,447,432],
[395,417,427,424,0,415,423,419],
[431,444,462,438,476,0,452,426],
[423,439,446,444,468,439,0,439],
[456,442,460,459,472,465,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,448,456,461,477,442,461],
[430,0,428,450,414,447,415,442],
[443,463,0,444,445,463,428,459],
[435,441,447,0,432,477,437,446],
[430,477,446,459,0,484,451,465],
[414,444,428,414,407,0,415,406],
[449,476,463,454,440,476,0,457],
[430,449,432,445,426,485,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,480,450,435,472,501,499],
[384,0,336,369,424,362,400,385],
[411,555,0,456,508,390,469,488],
[441,522,435,0,462,396,504,493],
[456,467,383,429,0,397,438,487],
[419,529,501,495,494,0,523,461],
[390,491,422,387,453,368,0,416],
[392,506,403,398,404,430,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,433,401,434,421,432,408],
[455,0,436,415,447,472,442,417],
[458,455,0,441,462,438,449,427],
[490,476,450,0,482,449,457,434],
[457,444,429,409,0,425,441,420],
[470,419,453,442,466,0,450,455],
[459,449,442,434,450,441,0,419],
[483,474,464,457,471,436,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,466,482,443,453,461,457],
[443,0,450,453,464,444,462,442],
[425,441,0,464,440,447,455,442],
[409,438,427,0,437,449,466,442],
[448,427,451,454,0,455,453,467],
[438,447,444,442,436,0,449,451],
[430,429,436,425,438,442,0,455],
[434,449,449,449,424,440,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,422,412,507,511,461,494],
[396,0,420,431,492,458,391,542],
[469,471,0,429,461,469,492,486],
[479,460,462,0,498,486,400,540],
[384,399,430,393,0,420,359,457],
[380,433,422,405,471,0,387,459],
[430,500,399,491,532,504,0,572],
[397,349,405,351,434,432,319,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,506,501,384,473,440,438],
[479,0,482,447,462,437,488,514],
[385,409,0,422,384,403,441,449],
[390,444,469,0,385,488,373,432],
[507,429,507,506,0,529,459,515],
[418,454,488,403,362,0,486,443],
[451,403,450,518,432,405,0,512],
[453,377,442,459,376,448,379,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,455,461,432,452,460,452],
[443,0,467,431,431,441,439,454],
[436,424,0,431,402,440,440,409],
[430,460,460,0,449,434,455,452],
[459,460,489,442,0,475,476,472],
[439,450,451,457,416,0,449,444],
[431,452,451,436,415,442,0,424],
[439,437,482,439,419,447,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,461,453,485,518,457,434],
[432,0,431,458,443,474,469,426],
[430,460,0,466,461,493,467,482],
[438,433,425,0,445,453,465,427],
[406,448,430,446,0,409,428,439],
[373,417,398,438,482,0,397,428],
[434,422,424,426,463,494,0,460],
[457,465,409,464,452,463,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,481,510,422,500,362,406],
[471,0,443,523,467,381,450,439],
[410,448,0,526,382,426,404,402],
[381,368,365,0,351,408,383,411],
[469,424,509,540,0,441,479,509],
[391,510,465,483,450,0,410,480],
[529,441,487,508,412,481,0,463],
[485,452,489,480,382,411,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,453,438,442,456,444,445],
[450,0,444,456,430,448,440,449],
[438,447,0,452,448,453,455,432],
[453,435,439,0,433,454,456,449],
[449,461,443,458,0,469,468,440],
[435,443,438,437,422,0,448,424],
[447,451,436,435,423,443,0,443],
[446,442,459,442,451,467,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,453,462,439,488,442,451],
[418,0,445,446,459,466,431,439],
[438,446,0,432,447,458,443,418],
[429,445,459,0,463,475,447,450],
[452,432,444,428,0,462,449,453],
[403,425,433,416,429,0,433,428],
[449,460,448,444,442,458,0,438],
[440,452,473,441,438,463,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,442,441,441,397,420,432],
[453,0,474,452,455,428,480,456],
[449,417,0,409,397,416,444,412],
[450,439,482,0,451,448,481,451],
[450,436,494,440,0,425,466,435],
[494,463,475,443,466,0,477,443],
[471,411,447,410,425,414,0,444],
[459,435,479,440,456,448,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,464,545,459,434,432,486],
[452,0,488,520,485,435,491,537],
[427,403,0,526,389,433,324,425],
[346,371,365,0,387,432,399,428],
[432,406,502,504,0,485,416,530],
[457,456,458,459,406,0,441,448],
[459,400,567,492,475,450,0,470],
[405,354,466,463,361,443,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,436,470,415,443,450,474],
[493,0,481,481,435,469,465,500],
[455,410,0,429,458,467,438,472],
[421,410,462,0,435,464,433,438],
[476,456,433,456,0,462,403,462],
[448,422,424,427,429,0,453,443],
[441,426,453,458,488,438,0,484],
[417,391,419,453,429,448,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,433,402,444,434,452,459],
[432,0,419,442,445,428,456,444],
[458,472,0,469,463,476,444,478],
[489,449,422,0,455,468,463,473],
[447,446,428,436,0,441,429,465],
[457,463,415,423,450,0,411,446],
[439,435,447,428,462,480,0,454],
[432,447,413,418,426,445,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,453,450,443,455,454,462],
[426,0,458,457,447,442,456,469],
[438,433,0,447,460,471,453,463],
[441,434,444,0,459,455,441,454],
[448,444,431,432,0,441,433,463],
[436,449,420,436,450,0,440,470],
[437,435,438,450,458,451,0,443],
[429,422,428,437,428,421,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,438,465,412,464,432,434],
[444,0,459,481,429,431,417,430],
[453,432,0,458,435,445,429,454],
[426,410,433,0,405,437,387,409],
[479,462,456,486,0,471,445,449],
[427,460,446,454,420,0,458,440],
[459,474,462,504,446,433,0,455],
[457,461,437,482,442,451,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,420,402,453,459,361,436],
[420,0,451,431,425,438,437,419],
[471,440,0,402,376,420,430,460],
[489,460,489,0,464,501,496,426],
[438,466,515,427,0,410,464,463],
[432,453,471,390,481,0,471,446],
[530,454,461,395,427,420,0,393],
[455,472,431,465,428,445,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,466,457,431,459,490,462],
[431,0,446,445,460,443,510,453],
[425,445,0,431,428,458,445,441],
[434,446,460,0,430,465,491,445],
[460,431,463,461,0,445,488,471],
[432,448,433,426,446,0,466,430],
[401,381,446,400,403,425,0,441],
[429,438,450,446,420,461,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,581,565,529,417,503,380,366],
[310,0,578,352,371,286,355,296],
[326,313,0,347,260,316,382,344],
[362,539,544,0,405,348,356,370],
[474,520,631,486,0,501,405,457],
[388,605,575,543,390,0,400,327],
[511,536,509,535,486,491,0,369],
[525,595,547,521,434,564,522,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,430,409,449,462,452,434],
[466,0,449,444,475,502,449,453],
[461,442,0,437,492,472,463,449],
[482,447,454,0,472,487,462,384],
[442,416,399,419,0,492,444,406],
[429,389,419,404,399,0,403,402],
[439,442,428,429,447,488,0,436],
[457,438,442,507,485,489,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,415,432,399,395,399,433],
[462,0,449,460,474,434,457,462],
[476,442,0,462,445,463,447,460],
[459,431,429,0,434,408,446,447],
[492,417,446,457,0,425,438,421],
[496,457,428,483,466,0,442,468],
[492,434,444,445,453,449,0,433],
[458,429,431,444,470,423,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,366,355,213,210,195,311],
[518,0,588,654,446,388,394,417],
[525,303,0,481,234,186,330,417],
[536,237,410,0,222,317,318,535],
[678,445,657,669,0,588,536,723],
[681,503,705,574,303,0,486,486],
[696,497,561,573,355,405,0,522],
[580,474,474,356,168,405,369,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,487,461,487,434,443,457],
[394,0,399,397,436,381,504,389],
[404,492,0,397,431,442,462,402],
[430,494,494,0,469,434,479,454],
[404,455,460,422,0,390,397,360],
[457,510,449,457,501,0,418,394],
[448,387,429,412,494,473,0,427],
[434,502,489,437,531,497,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,526,438,479,492,491,493,432],
[365,0,397,472,355,360,430,351],
[453,494,0,485,459,424,447,443],
[412,419,406,0,405,462,377,429],
[399,536,432,486,0,464,460,439],
[400,531,467,429,427,0,461,458],
[398,461,444,514,431,430,0,463],
[459,540,448,462,452,433,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,481,464,423,414,450,435],
[444,0,472,461,469,465,420,449],
[410,419,0,430,434,431,431,427],
[427,430,461,0,431,441,412,447],
[468,422,457,460,0,444,439,431],
[477,426,460,450,447,0,425,450],
[441,471,460,479,452,466,0,440],
[456,442,464,444,460,441,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,465,481,439,479,458,454],
[415,0,435,394,391,416,415,420],
[426,456,0,448,429,448,478,430],
[410,497,443,0,402,445,446,427],
[452,500,462,489,0,491,461,436],
[412,475,443,446,400,0,428,409],
[433,476,413,445,430,463,0,439],
[437,471,461,464,455,482,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,416,441,428,429,494,483],
[479,0,452,453,469,415,476,494],
[475,439,0,454,451,428,490,488],
[450,438,437,0,483,425,465,462],
[463,422,440,408,0,454,455,484],
[462,476,463,466,437,0,498,508],
[397,415,401,426,436,393,0,457],
[408,397,403,429,407,383,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,428,435,430,448,446,447],
[423,0,441,421,428,418,446,409],
[463,450,0,439,451,446,474,458],
[456,470,452,0,438,455,443,451],
[461,463,440,453,0,433,445,432],
[443,473,445,436,458,0,458,432],
[445,445,417,448,446,433,0,434],
[444,482,433,440,459,459,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,459,466,483,477,432,484],
[439,0,432,472,444,451,435,441],
[432,459,0,493,503,504,459,452],
[425,419,398,0,452,462,423,443],
[408,447,388,439,0,444,419,426],
[414,440,387,429,447,0,426,426],
[459,456,432,468,472,465,0,448],
[407,450,439,448,465,465,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,459,452,458,430,459,450],
[443,0,453,447,463,449,457,437],
[432,438,0,429,432,433,466,450],
[439,444,462,0,453,430,446,450],
[433,428,459,438,0,431,446,454],
[461,442,458,461,460,0,483,446],
[432,434,425,445,445,408,0,434],
[441,454,441,441,437,445,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,472,388,405,369,459,388],
[431,0,446,356,486,412,403,269],
[419,445,0,463,460,387,455,403],
[503,535,428,0,502,447,512,409],
[486,405,431,389,0,396,416,381],
[522,479,504,444,495,0,491,462],
[432,488,436,379,475,400,0,379],
[503,622,488,482,510,429,512,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,472,467,461,467,476,441],
[400,0,423,421,405,414,417,414],
[419,468,0,444,433,442,452,418],
[424,470,447,0,451,458,448,465],
[430,486,458,440,0,457,449,455],
[424,477,449,433,434,0,432,455],
[415,474,439,443,442,459,0,424],
[450,477,473,426,436,436,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,353,393,410,424,482,494,460],
[538,0,401,445,448,467,519,497],
[498,490,0,475,408,527,551,505],
[481,446,416,0,430,569,499,552],
[467,443,483,461,0,540,579,574],
[409,424,364,322,351,0,481,472],
[397,372,340,392,312,410,0,459],
[431,394,386,339,317,419,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,415,417,388,452,479,423],
[429,0,449,466,394,428,533,438],
[476,442,0,490,463,476,476,461],
[474,425,401,0,413,412,466,419],
[503,497,428,478,0,488,511,437],
[439,463,415,479,403,0,476,405],
[412,358,415,425,380,415,0,421],
[468,453,430,472,454,486,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,454,482,484,441,453,457],
[421,0,435,466,464,469,452,465],
[437,456,0,480,451,431,462,490],
[409,425,411,0,426,435,448,441],
[407,427,440,465,0,454,431,452],
[450,422,460,456,437,0,463,458],
[438,439,429,443,460,428,0,448],
[434,426,401,450,439,433,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,453,471,477,446,446,442],
[433,0,420,444,455,424,445,434],
[438,471,0,457,459,443,460,446],
[420,447,434,0,441,440,427,453],
[414,436,432,450,0,436,449,448],
[445,467,448,451,455,0,449,454],
[445,446,431,464,442,442,0,445],
[449,457,445,438,443,437,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,406,411,441,413,435,411],
[466,0,416,431,473,447,452,418],
[485,475,0,432,481,440,494,446],
[480,460,459,0,460,471,447,431],
[450,418,410,431,0,403,429,411],
[478,444,451,420,488,0,454,441],
[456,439,397,444,462,437,0,420],
[480,473,445,460,480,450,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,448,470,397,482,454,464],
[411,0,438,405,411,401,447,451],
[443,453,0,428,387,453,451,471],
[421,486,463,0,466,459,481,507],
[494,480,504,425,0,455,494,462],
[409,490,438,432,436,0,465,490],
[437,444,440,410,397,426,0,459],
[427,440,420,384,429,401,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,396,403,418,409,391,394],
[499,0,424,468,456,456,432,459],
[495,467,0,462,443,471,455,456],
[488,423,429,0,460,460,445,440],
[473,435,448,431,0,432,422,446],
[482,435,420,431,459,0,414,443],
[500,459,436,446,469,477,0,441],
[497,432,435,451,445,448,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,303,410,391,346,347,349,378],
[588,0,514,515,508,379,390,475],
[481,377,0,370,400,432,451,462],
[500,376,521,0,469,377,396,437],
[545,383,491,422,0,460,408,445],
[544,512,459,514,431,0,431,560],
[542,501,440,495,483,460,0,495],
[513,416,429,454,446,331,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,407,455,472,451,469,462],
[439,0,435,469,439,455,471,445],
[484,456,0,467,475,471,435,452],
[436,422,424,0,469,437,438,432],
[419,452,416,422,0,445,469,429],
[440,436,420,454,446,0,445,446],
[422,420,456,453,422,446,0,450],
[429,446,439,459,462,445,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,473,453,465,444,439,429],
[454,0,457,447,461,446,418,436],
[418,434,0,433,446,430,407,433],
[438,444,458,0,442,436,423,444],
[426,430,445,449,0,453,447,432],
[447,445,461,455,438,0,431,454],
[452,473,484,468,444,460,0,451],
[462,455,458,447,459,437,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,496,480,538,513,431,494],
[437,0,377,439,546,479,474,423],
[395,514,0,398,495,501,390,446],
[411,452,493,0,533,474,408,453],
[353,345,396,358,0,482,422,368],
[378,412,390,417,409,0,380,408],
[460,417,501,483,469,511,0,480],
[397,468,445,438,523,483,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,353,578,418,425,499,646],
[445,0,403,502,380,465,356,463],
[538,488,0,517,498,400,402,560],
[313,389,374,0,368,374,421,453],
[473,511,393,523,0,464,461,535],
[466,426,491,517,427,0,400,578],
[392,535,489,470,430,491,0,565],
[245,428,331,438,356,313,326,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,438,431,450,445,428,450],
[450,0,443,434,464,448,456,423],
[453,448,0,433,458,454,432,452],
[460,457,458,0,488,439,442,447],
[441,427,433,403,0,420,439,431],
[446,443,437,452,471,0,438,462],
[463,435,459,449,452,453,0,433],
[441,468,439,444,460,429,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,380,322,712,552,416,666,579],
[511,0,329,719,605,215,504,465],
[569,562,0,840,390,423,504,579],
[179,172,51,0,136,51,301,371],
[339,286,501,755,0,266,373,494],
[475,676,468,840,625,0,625,371],
[225,387,387,590,518,266,0,128],
[312,426,312,520,397,520,763,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,439,475,455,422,423,450],
[438,0,428,469,465,437,446,448],
[452,463,0,470,487,443,456,481],
[416,422,421,0,449,440,436,456],
[436,426,404,442,0,420,444,439],
[469,454,448,451,471,0,444,445],
[468,445,435,455,447,447,0,463],
[441,443,410,435,452,446,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,419,451,438,422,446,431],
[459,0,462,467,450,444,454,440],
[472,429,0,457,465,452,459,445],
[440,424,434,0,435,436,428,437],
[453,441,426,456,0,440,468,436],
[469,447,439,455,451,0,449,448],
[445,437,432,463,423,442,0,436],
[460,451,446,454,455,443,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,460,465,435,423,451,454],
[444,0,452,465,465,461,425,440],
[431,439,0,453,397,435,441,461],
[426,426,438,0,457,422,420,441],
[456,426,494,434,0,425,457,463],
[468,430,456,469,466,0,454,443],
[440,466,450,471,434,437,0,475],
[437,451,430,450,428,448,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,495,447,452,435,437,458],
[436,0,484,424,437,450,441,450],
[396,407,0,405,417,413,415,419],
[444,467,486,0,465,439,465,460],
[439,454,474,426,0,436,446,443],
[456,441,478,452,455,0,452,435],
[454,450,476,426,445,439,0,435],
[433,441,472,431,448,456,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,439,529,448,417,446,435],
[425,0,396,526,380,385,446,381],
[452,495,0,509,522,475,471,430],
[362,365,382,0,385,377,355,340],
[443,511,369,506,0,356,446,444],
[474,506,416,514,535,0,414,466],
[445,445,420,536,445,477,0,424],
[456,510,461,551,447,425,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,466,444,435,465,464,446],
[444,0,451,474,420,449,456,429],
[425,440,0,478,462,448,472,413],
[447,417,413,0,430,416,454,430],
[456,471,429,461,0,464,459,459],
[426,442,443,475,427,0,458,419],
[427,435,419,437,432,433,0,407],
[445,462,478,461,432,472,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,416,445,444,426,429,428],
[423,0,457,441,451,446,434,397],
[475,434,0,510,435,439,481,506],
[446,450,381,0,445,396,437,382],
[447,440,456,446,0,475,454,457],
[465,445,452,495,416,0,481,459],
[462,457,410,454,437,410,0,393],
[463,494,385,509,434,432,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,444,443,455,476,451,454],
[429,0,416,429,435,430,458,445],
[447,475,0,444,442,461,450,459],
[448,462,447,0,442,462,444,452],
[436,456,449,449,0,456,456,442],
[415,461,430,429,435,0,441,424],
[440,433,441,447,435,450,0,444],
[437,446,432,439,449,467,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,469,492,471,517,435,473],
[413,0,459,448,438,451,453,457],
[422,432,0,447,455,442,417,452],
[399,443,444,0,406,421,430,443],
[420,453,436,485,0,472,431,477],
[374,440,449,470,419,0,444,416],
[456,438,474,461,460,447,0,460],
[418,434,439,448,414,475,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,469,436,438,454,423,402],
[472,0,480,435,440,482,455,462],
[422,411,0,382,407,429,417,398],
[455,456,509,0,436,468,461,445],
[453,451,484,455,0,467,434,437],
[437,409,462,423,424,0,397,433],
[468,436,474,430,457,494,0,436],
[489,429,493,446,454,458,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,425,417,422,420,475,435],
[441,0,420,421,428,442,460,454],
[466,471,0,455,422,445,465,459],
[474,470,436,0,438,452,464,469],
[469,463,469,453,0,456,480,445],
[471,449,446,439,435,0,472,459],
[416,431,426,427,411,419,0,428],
[456,437,432,422,446,432,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,426,439,435,427,423,401],
[484,0,462,441,448,420,453,450],
[465,429,0,453,432,449,459,419],
[452,450,438,0,423,437,448,434],
[456,443,459,468,0,434,455,446],
[464,471,442,454,457,0,454,443],
[468,438,432,443,436,437,0,425],
[490,441,472,457,445,448,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,451,450,445,453,453,430],
[443,0,452,460,452,468,440,445],
[440,439,0,443,457,453,439,451],
[441,431,448,0,446,457,444,444],
[446,439,434,445,0,437,428,433],
[438,423,438,434,454,0,432,440],
[438,451,452,447,463,459,0,432],
[461,446,440,447,458,451,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,468,468,436,469,464,457],
[448,0,454,464,454,456,441,448],
[423,437,0,447,422,451,418,442],
[423,427,444,0,423,438,443,440],
[455,437,469,468,0,450,464,463],
[422,435,440,453,441,0,442,456],
[427,450,473,448,427,449,0,467],
[434,443,449,451,428,435,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,409,431,450,456,459,423],
[469,0,459,444,459,470,478,450],
[482,432,0,456,452,444,457,460],
[460,447,435,0,460,440,463,448],
[441,432,439,431,0,434,455,439],
[435,421,447,451,457,0,474,430],
[432,413,434,428,436,417,0,411],
[468,441,431,443,452,461,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,483,505,521,442,427,456],
[449,0,410,419,386,332,393,453],
[408,481,0,431,449,370,395,489],
[386,472,460,0,420,432,399,493],
[370,505,442,471,0,428,365,468],
[449,559,521,459,463,0,403,531],
[464,498,496,492,526,488,0,445],
[435,438,402,398,423,360,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,451,453,417,439,453,456],
[441,0,435,462,467,460,457,454],
[440,456,0,449,432,422,460,441],
[438,429,442,0,459,436,479,450],
[474,424,459,432,0,447,451,458],
[452,431,469,455,444,0,467,466],
[438,434,431,412,440,424,0,432],
[435,437,450,441,433,425,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,432,429,457,410,432,472],
[464,0,420,432,434,468,454,480],
[459,471,0,468,445,503,485,467],
[462,459,423,0,494,451,428,437],
[434,457,446,397,0,411,450,475],
[481,423,388,440,480,0,436,468],
[459,437,406,463,441,455,0,470],
[419,411,424,454,416,423,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,465,426,419,450,435,448],
[463,0,468,457,446,458,434,463],
[426,423,0,412,416,427,421,443],
[465,434,479,0,434,472,452,467],
[472,445,475,457,0,466,453,467],
[441,433,464,419,425,0,416,444],
[456,457,470,439,438,475,0,438],
[443,428,448,424,424,447,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,409,545,543,478,542,447],
[452,0,507,544,385,481,583,414],
[482,384,0,427,382,476,485,356],
[346,347,464,0,297,432,489,376],
[348,506,509,594,0,499,577,499],
[413,410,415,459,392,0,594,369],
[349,308,406,402,314,297,0,355],
[444,477,535,515,392,522,536,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,434,458,444,470,448,424],
[422,0,445,443,432,463,440,457],
[457,446,0,451,441,428,446,450],
[433,448,440,0,414,480,462,436],
[447,459,450,477,0,467,470,436],
[421,428,463,411,424,0,448,434],
[443,451,445,429,421,443,0,442],
[467,434,441,455,455,457,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,445,421,425,472,473,467],
[477,0,439,484,446,478,454,508],
[446,452,0,490,494,471,434,540],
[470,407,401,0,458,479,402,467],
[466,445,397,433,0,480,440,477],
[419,413,420,412,411,0,410,445],
[418,437,457,489,451,481,0,479],
[424,383,351,424,414,446,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,443,447,429,435,425,463],
[412,0,406,431,405,396,402,417],
[448,485,0,430,458,422,474,449],
[444,460,461,0,459,411,442,447],
[462,486,433,432,0,459,431,435],
[456,495,469,480,432,0,475,466],
[466,489,417,449,460,416,0,437],
[428,474,442,444,456,425,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,439,454,480,479,476,476],
[433,0,445,436,449,412,437,438],
[452,446,0,474,431,441,472,442],
[437,455,417,0,430,423,449,419],
[411,442,460,461,0,439,452,449],
[412,479,450,468,452,0,452,409],
[415,454,419,442,439,439,0,437],
[415,453,449,472,442,482,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,409,429,412,432,431,420],
[439,0,430,422,442,421,422,430],
[482,461,0,430,446,447,438,410],
[462,469,461,0,455,431,469,447],
[479,449,445,436,0,441,439,420],
[459,470,444,460,450,0,461,437],
[460,469,453,422,452,430,0,427],
[471,461,481,444,471,454,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,440,474,449,468,452,476],
[422,0,445,439,393,425,424,466],
[451,446,0,485,436,466,481,503],
[417,452,406,0,423,432,421,455],
[442,498,455,468,0,473,460,508],
[423,466,425,459,418,0,434,467],
[439,467,410,470,431,457,0,485],
[415,425,388,436,383,424,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,423,440,460,471,463,430],
[444,0,425,447,465,432,468,433],
[468,466,0,449,450,445,472,445],
[451,444,442,0,439,423,469,450],
[431,426,441,452,0,438,453,415],
[420,459,446,468,453,0,484,468],
[428,423,419,422,438,407,0,388],
[461,458,446,441,476,423,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,461,439,421,470,451,454],
[426,0,444,461,439,466,454,429],
[430,447,0,467,455,454,440,470],
[452,430,424,0,463,458,455,440],
[470,452,436,428,0,464,453,452],
[421,425,437,433,427,0,437,444],
[440,437,451,436,438,454,0,441],
[437,462,421,451,439,447,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,422,411,426,415,419,438],
[476,0,441,428,433,441,424,435],
[469,450,0,444,465,434,453,446],
[480,463,447,0,440,421,449,449],
[465,458,426,451,0,413,435,445],
[476,450,457,470,478,0,441,464],
[472,467,438,442,456,450,0,455],
[453,456,445,442,446,427,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,432,448,432,451,462,470],
[447,0,441,458,460,465,439,465],
[459,450,0,458,458,441,450,456],
[443,433,433,0,436,458,427,450],
[459,431,433,455,0,464,452,465],
[440,426,450,433,427,0,466,459],
[429,452,441,464,439,425,0,465],
[421,426,435,441,426,432,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,443,477,462,471,455,475],
[443,0,441,493,485,472,478,507],
[448,450,0,444,448,491,428,501],
[414,398,447,0,463,465,406,466],
[429,406,443,428,0,423,399,464],
[420,419,400,426,468,0,414,431],
[436,413,463,485,492,477,0,464],
[416,384,390,425,427,460,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,431,414,436,430,413,422],
[461,0,438,451,449,445,446,442],
[460,453,0,442,439,461,439,455],
[477,440,449,0,461,478,434,444],
[455,442,452,430,0,457,453,426],
[461,446,430,413,434,0,429,430],
[478,445,452,457,438,462,0,453],
[469,449,436,447,465,461,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,426,416,446,446,428,412],
[461,0,442,444,464,441,450,440],
[465,449,0,456,492,441,437,453],
[475,447,435,0,479,445,436,445],
[445,427,399,412,0,416,425,415],
[445,450,450,446,475,0,474,426],
[463,441,454,455,466,417,0,445],
[479,451,438,446,476,465,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,449,407,434,456,460,429],
[436,0,453,426,427,442,439,446],
[442,438,0,423,435,447,438,417],
[484,465,468,0,462,461,471,439],
[457,464,456,429,0,477,455,435],
[435,449,444,430,414,0,443,413],
[431,452,453,420,436,448,0,405],
[462,445,474,452,456,478,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,464,468,488,456,465,442],
[421,0,452,445,428,410,447,462],
[427,439,0,394,418,391,406,436],
[423,446,497,0,428,361,482,368],
[403,463,473,463,0,396,411,432],
[435,481,500,530,495,0,462,483],
[426,444,485,409,480,429,0,406],
[449,429,455,523,459,408,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,469,461,415,440,420,423],
[503,0,470,473,430,467,454,429],
[422,421,0,459,443,479,439,429],
[430,418,432,0,433,442,440,431],
[476,461,448,458,0,441,472,421],
[451,424,412,449,450,0,403,448],
[471,437,452,451,419,488,0,428],
[468,462,462,460,470,443,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,447,449,432,448,438,428],
[451,0,443,441,463,446,437,426],
[444,448,0,443,446,439,453,459],
[442,450,448,0,454,437,441,433],
[459,428,445,437,0,448,464,425],
[443,445,452,454,443,0,441,443],
[453,454,438,450,427,450,0,438],
[463,465,432,458,466,448,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,440,456,454,445,458,463],
[437,0,455,448,445,453,490,475],
[451,436,0,473,465,460,497,467],
[435,443,418,0,449,434,477,443],
[437,446,426,442,0,443,476,433],
[446,438,431,457,448,0,490,450],
[433,401,394,414,415,401,0,418],
[428,416,424,448,458,441,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,436,440,456,463,477,424],
[430,0,425,432,455,433,476,419],
[455,466,0,429,455,462,474,413],
[451,459,462,0,435,468,481,452],
[435,436,436,456,0,428,457,395],
[428,458,429,423,463,0,450,455],
[414,415,417,410,434,441,0,421],
[467,472,478,439,496,436,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,410,436,476,461,433,440],
[403,0,397,432,439,415,437,417],
[481,494,0,458,466,466,448,425],
[455,459,433,0,469,434,448,466],
[415,452,425,422,0,423,425,438],
[430,476,425,457,468,0,436,460],
[458,454,443,443,466,455,0,451],
[451,474,466,425,453,431,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,415,416,445,426,472,451],
[424,0,391,459,469,427,436,432],
[476,500,0,455,440,446,511,491],
[475,432,436,0,459,409,445,455],
[446,422,451,432,0,429,446,439],
[465,464,445,482,462,0,454,454],
[419,455,380,446,445,437,0,429],
[440,459,400,436,452,437,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,447,427,404,421,433,432],
[475,0,477,444,412,446,475,458],
[444,414,0,417,404,465,430,459],
[464,447,474,0,396,418,383,440],
[487,479,487,495,0,432,453,487],
[470,445,426,473,459,0,452,485],
[458,416,461,508,438,439,0,504],
[459,433,432,451,404,406,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,458,458,420,464,462,443],
[467,0,459,467,469,452,481,432],
[433,432,0,430,418,446,451,412],
[433,424,461,0,435,470,458,428],
[471,422,473,456,0,457,481,456],
[427,439,445,421,434,0,453,427],
[429,410,440,433,410,438,0,408],
[448,459,479,463,435,464,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,459,437,448,459,449,466],
[447,0,446,430,435,444,459,436],
[432,445,0,444,419,444,452,436],
[454,461,447,0,436,448,452,447],
[443,456,472,455,0,461,470,449],
[432,447,447,443,430,0,458,431],
[442,432,439,439,421,433,0,450],
[425,455,455,444,442,460,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,264,441,209,240,304,144,223],
[627,0,641,536,409,515,439,539],
[450,250,0,465,357,339,237,523],
[682,355,426,0,184,414,305,417],
[651,482,534,707,0,405,488,501],
[587,376,552,477,486,0,605,609],
[747,452,654,586,403,286,0,627],
[668,352,368,474,390,282,264,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,472,320,448,499,334,357],
[482,0,533,495,610,598,376,451],
[419,358,0,318,456,448,276,309],
[571,396,573,0,582,479,407,405],
[443,281,435,309,0,530,339,397],
[392,293,443,412,361,0,276,410],
[557,515,615,484,552,615,0,440],
[534,440,582,486,494,481,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,446,436,439,430,431,436],
[434,0,449,435,416,445,441,452],
[445,442,0,455,438,457,421,464],
[455,456,436,0,456,458,413,432],
[452,475,453,435,0,468,430,463],
[461,446,434,433,423,0,438,444],
[460,450,470,478,461,453,0,438],
[455,439,427,459,428,447,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,429,438,455,449,437,432],
[449,0,426,440,424,425,422,441],
[462,465,0,451,445,454,451,450],
[453,451,440,0,437,422,451,439],
[436,467,446,454,0,422,448,443],
[442,466,437,469,469,0,444,453],
[454,469,440,440,443,447,0,453],
[459,450,441,452,448,438,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,409,470,505,448,464,383],
[430,0,431,503,487,441,515,411],
[482,460,0,442,491,419,478,424],
[421,388,449,0,439,364,449,376],
[386,404,400,452,0,364,423,364],
[443,450,472,527,527,0,503,468],
[427,376,413,442,468,388,0,428],
[508,480,467,515,527,423,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,438,446,460,464,439,467],
[432,0,434,419,437,446,430,437],
[453,457,0,436,457,458,440,469],
[445,472,455,0,451,452,448,461],
[431,454,434,440,0,447,432,448],
[427,445,433,439,444,0,439,457],
[452,461,451,443,459,452,0,466],
[424,454,422,430,443,434,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,457,451,453,477,501,482],
[462,0,458,435,469,476,465,505],
[434,433,0,470,448,447,448,474],
[440,456,421,0,451,449,435,449],
[438,422,443,440,0,474,455,457],
[414,415,444,442,417,0,422,428],
[390,426,443,456,436,469,0,459],
[409,386,417,442,434,463,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,416,435,407,430,437,403],
[487,0,453,437,457,468,450,453],
[475,438,0,458,440,451,454,437],
[456,454,433,0,444,467,468,440],
[484,434,451,447,0,459,445,412],
[461,423,440,424,432,0,428,435],
[454,441,437,423,446,463,0,407],
[488,438,454,451,479,456,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,457,442,509,439,476,450],
[461,0,459,421,468,445,458,458],
[434,432,0,432,481,437,458,448],
[449,470,459,0,507,443,468,460],
[382,423,410,384,0,392,407,408],
[452,446,454,448,499,0,435,463],
[415,433,433,423,484,456,0,447],
[441,433,443,431,483,428,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,468,483,479,475,486,486],
[456,0,440,485,479,458,442,463],
[423,451,0,466,497,449,464,455],
[408,406,425,0,456,454,424,409],
[412,412,394,435,0,457,442,435],
[416,433,442,437,434,0,445,427],
[405,449,427,467,449,446,0,415],
[405,428,436,482,456,464,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,471,509,441,424,445,400],
[472,0,465,472,444,412,415,445],
[420,426,0,447,413,412,447,415],
[382,419,444,0,462,419,389,433],
[450,447,478,429,0,458,417,457],
[467,479,479,472,433,0,429,484],
[446,476,444,502,474,462,0,452],
[491,446,476,458,434,407,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,528,515,443,525,507,490],
[422,0,465,452,395,420,512,462],
[363,426,0,362,339,362,420,370],
[376,439,529,0,384,480,432,452],
[448,496,552,507,0,442,541,525],
[366,471,529,411,449,0,512,452],
[384,379,471,459,350,379,0,407],
[401,429,521,439,366,439,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,467,414,449,417,447,444],
[421,0,458,403,420,392,436,395],
[424,433,0,396,329,425,428,411],
[477,488,495,0,426,425,433,480],
[442,471,562,465,0,496,509,543],
[474,499,466,466,395,0,409,489],
[444,455,463,458,382,482,0,468],
[447,496,480,411,348,402,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,518,435,445,515,522,502],
[461,0,472,435,458,505,442,495],
[373,419,0,447,443,465,447,443],
[456,456,444,0,452,461,437,448],
[446,433,448,439,0,491,422,465],
[376,386,426,430,400,0,428,425],
[369,449,444,454,469,463,0,454],
[389,396,448,443,426,466,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,413,457,392,443,400,443],
[429,0,419,501,395,447,290,427],
[478,472,0,423,398,508,373,364],
[434,390,468,0,448,467,339,404],
[499,496,493,443,0,523,489,365],
[448,444,383,424,368,0,344,375],
[491,601,518,552,402,547,0,455],
[448,464,527,487,526,516,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,371,468,416,469,474,510],
[407,0,353,511,483,407,352,392],
[520,538,0,674,586,575,443,523],
[423,380,217,0,369,337,285,384],
[475,408,305,522,0,507,444,464],
[422,484,316,554,384,0,436,374],
[417,539,448,606,447,455,0,489],
[381,499,368,507,427,517,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,461,445,444,420,451,411],
[468,0,435,429,452,429,437,452],
[430,456,0,437,438,451,442,423],
[446,462,454,0,443,444,457,437],
[447,439,453,448,0,448,451,437],
[471,462,440,447,443,0,449,444],
[440,454,449,434,440,442,0,409],
[480,439,468,454,454,447,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,413,436,481,475,505,472],
[412,0,410,363,405,409,425,455],
[478,481,0,411,483,454,450,469],
[455,528,480,0,445,446,484,504],
[410,486,408,446,0,464,404,458],
[416,482,437,445,427,0,454,459],
[386,466,441,407,487,437,0,448],
[419,436,422,387,433,432,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,418,433,412,438,430,423],
[487,0,451,445,449,486,481,452],
[473,440,0,450,443,461,453,441],
[458,446,441,0,420,472,470,450],
[479,442,448,471,0,467,461,442],
[453,405,430,419,424,0,429,409],
[461,410,438,421,430,462,0,420],
[468,439,450,441,449,482,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,396,425,442,380,407,420],
[470,0,410,455,455,430,450,466],
[495,481,0,504,475,428,461,462],
[466,436,387,0,454,413,395,392],
[449,436,416,437,0,407,420,457],
[511,461,463,478,484,0,442,498],
[484,441,430,496,471,449,0,504],
[471,425,429,499,434,393,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,478,448,470,447,445,455],
[406,0,450,430,422,417,425,407],
[413,441,0,417,437,424,416,431],
[443,461,474,0,458,446,445,447],
[421,469,454,433,0,427,429,473],
[444,474,467,445,464,0,439,477],
[446,466,475,446,462,452,0,434],
[436,484,460,444,418,414,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,443,452,448,446,439,442],
[468,0,432,445,459,472,460,457],
[448,459,0,461,472,467,445,451],
[439,446,430,0,445,454,456,436],
[443,432,419,446,0,455,452,466],
[445,419,424,437,436,0,442,431],
[452,431,446,435,439,449,0,448],
[449,434,440,455,425,460,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,462,412,434,462,425,456],
[462,0,468,402,460,431,413,413],
[429,423,0,412,423,444,408,409],
[479,489,479,0,443,488,472,446],
[457,431,468,448,0,474,425,415],
[429,460,447,403,417,0,421,438],
[466,478,483,419,466,470,0,388],
[435,478,482,445,476,453,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,454,446,441,468,461,438],
[439,0,445,429,445,435,450,416],
[437,446,0,432,439,442,437,450],
[445,462,459,0,449,454,437,429],
[450,446,452,442,0,459,446,428],
[423,456,449,437,432,0,439,425],
[430,441,454,454,445,452,0,430],
[453,475,441,462,463,466,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,430,465,446,468,454,448],
[474,0,459,471,465,458,437,433],
[461,432,0,441,503,428,435,441],
[426,420,450,0,458,459,424,432],
[445,426,388,433,0,418,409,391],
[423,433,463,432,473,0,452,418],
[437,454,456,467,482,439,0,429],
[443,458,450,459,500,473,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,415,422,423,492,519,493],
[459,0,429,484,433,532,471,415],
[476,462,0,443,438,490,452,397],
[469,407,448,0,435,515,452,434],
[468,458,453,456,0,532,490,439],
[399,359,401,376,359,0,423,398],
[372,420,439,439,401,468,0,408],
[398,476,494,457,452,493,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,435,494,459,490,499,504],
[437,0,484,440,457,439,465,428],
[456,407,0,434,479,452,421,455],
[397,451,457,0,505,497,483,481],
[432,434,412,386,0,380,431,412],
[401,452,439,394,511,0,486,426],
[392,426,470,408,460,405,0,441],
[387,463,436,410,479,465,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,612,488,548,367,379,448,472],
[279,0,476,444,278,221,329,347],
[403,415,0,461,486,392,420,419],
[343,447,430,0,489,362,358,491],
[524,613,405,402,0,518,659,441],
[512,670,499,529,373,0,561,264],
[443,562,471,533,232,330,0,364],
[419,544,472,400,450,627,527,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,469,437,415,427,459,420],
[446,0,469,428,465,432,456,465],
[422,422,0,421,403,402,435,412],
[454,463,470,0,446,422,460,459],
[476,426,488,445,0,464,472,466],
[464,459,489,469,427,0,454,453],
[432,435,456,431,419,437,0,435],
[471,426,479,432,425,438,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,441,414,449,477,446,411],
[496,0,433,455,494,454,475,424],
[450,458,0,426,434,424,455,442],
[477,436,465,0,457,474,446,442],
[442,397,457,434,0,450,447,470],
[414,437,467,417,441,0,459,445],
[445,416,436,445,444,432,0,424],
[480,467,449,449,421,446,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,452,444,458,416,434,441],
[448,0,478,462,465,433,444,453],
[439,413,0,423,448,416,453,422],
[447,429,468,0,471,411,442,443],
[433,426,443,420,0,431,434,431],
[475,458,475,480,460,0,441,478],
[457,447,438,449,457,450,0,465],
[450,438,469,448,460,413,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,457,442,442,439,427,438],
[456,0,459,424,421,451,425,425],
[434,432,0,425,441,443,423,437],
[449,467,466,0,452,463,459,441],
[449,470,450,439,0,445,446,456],
[452,440,448,428,446,0,442,440],
[464,466,468,432,445,449,0,444],
[453,466,454,450,435,451,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,455,464,458,435,475,520],
[462,0,474,470,446,443,505,550],
[436,417,0,462,473,454,420,446],
[427,421,429,0,414,422,468,510],
[433,445,418,477,0,440,518,467],
[456,448,437,469,451,0,496,470],
[416,386,471,423,373,395,0,489],
[371,341,445,381,424,421,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,454,428,441,464,479,430],
[445,0,457,426,450,468,477,443],
[437,434,0,434,448,454,438,412],
[463,465,457,0,444,481,472,448],
[450,441,443,447,0,454,452,466],
[427,423,437,410,437,0,433,415],
[412,414,453,419,439,458,0,420],
[461,448,479,443,425,476,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,439,425,445,465,423,418],
[434,0,443,409,423,460,436,433],
[452,448,0,449,458,484,427,441],
[466,482,442,0,473,479,461,460],
[446,468,433,418,0,453,423,438],
[426,431,407,412,438,0,420,425],
[468,455,464,430,468,471,0,471],
[473,458,450,431,453,466,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,469,456,475,429,494,434],
[432,0,461,431,469,453,497,455],
[422,430,0,464,462,425,517,461],
[435,460,427,0,444,399,494,419],
[416,422,429,447,0,418,496,473],
[462,438,466,492,473,0,516,469],
[397,394,374,397,395,375,0,422],
[457,436,430,472,418,422,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,459,447,471,487,467,435],
[439,0,478,467,468,499,441,447],
[432,413,0,445,442,451,410,415],
[444,424,446,0,447,462,417,433],
[420,423,449,444,0,462,436,451],
[404,392,440,429,429,0,429,411],
[424,450,481,474,455,462,0,463],
[456,444,476,458,440,480,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,451,518,358,407,433,360],
[469,0,476,526,437,536,436,272],
[440,415,0,481,400,572,389,299],
[373,365,410,0,433,443,368,295],
[533,454,491,458,0,529,450,387],
[484,355,319,448,362,0,334,250],
[458,455,502,523,441,557,0,461],
[531,619,592,596,504,641,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,478,456,452,463,440,472],
[446,0,430,431,430,446,461,440],
[413,461,0,453,423,437,421,461],
[435,460,438,0,437,419,439,457],
[439,461,468,454,0,432,443,438],
[428,445,454,472,459,0,449,468],
[451,430,470,452,448,442,0,465],
[419,451,430,434,453,423,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,443,437,428,442,447,449],
[457,0,450,448,439,432,450,444],
[448,441,0,412,455,444,446,450],
[454,443,479,0,447,453,478,456],
[463,452,436,444,0,439,455,439],
[449,459,447,438,452,0,441,447],
[444,441,445,413,436,450,0,443],
[442,447,441,435,452,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,386,369,398,410,434,386],
[473,0,400,401,426,428,482,423],
[505,491,0,483,464,454,508,442],
[522,490,408,0,462,444,457,451],
[493,465,427,429,0,445,424,441],
[481,463,437,447,446,0,460,425],
[457,409,383,434,467,431,0,391],
[505,468,449,440,450,466,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,493,490,391,395,450,443],
[387,0,409,407,375,396,383,390],
[398,482,0,447,365,338,387,386],
[401,484,444,0,381,392,406,459],
[500,516,526,510,0,502,467,445],
[496,495,553,499,389,0,485,466],
[441,508,504,485,424,406,0,487],
[448,501,505,432,446,425,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,399,387,381,374,382,411],
[495,0,441,425,441,409,405,453],
[492,450,0,444,408,460,399,455],
[504,466,447,0,449,445,434,441],
[510,450,483,442,0,490,471,447],
[517,482,431,446,401,0,448,427],
[509,486,492,457,420,443,0,451],
[480,438,436,450,444,464,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,462,426,482,446,408,379],
[478,0,472,455,456,461,468,443],
[429,419,0,445,490,386,418,396],
[465,436,446,0,496,428,474,452],
[409,435,401,395,0,392,445,384],
[445,430,505,463,499,0,491,435],
[483,423,473,417,446,400,0,404],
[512,448,495,439,507,456,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,458,468,459,467,450,486],
[472,0,450,462,456,498,421,429],
[433,441,0,455,451,465,429,437],
[423,429,436,0,438,432,377,443],
[432,435,440,453,0,479,391,446],
[424,393,426,459,412,0,404,467],
[441,470,462,514,500,487,0,452],
[405,462,454,448,445,424,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,434,429,428,480,446,459],
[413,0,416,421,411,445,415,411],
[457,475,0,415,441,452,435,438],
[462,470,476,0,438,475,451,455],
[463,480,450,453,0,470,446,433],
[411,446,439,416,421,0,425,415],
[445,476,456,440,445,466,0,442],
[432,480,453,436,458,476,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,422,430,445,435,436,429],
[455,0,434,424,427,447,437,410],
[469,457,0,422,466,454,442,446],
[461,467,469,0,434,459,443,447],
[446,464,425,457,0,439,451,433],
[456,444,437,432,452,0,456,449],
[455,454,449,448,440,435,0,408],
[462,481,445,444,458,442,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,523,461,444,537,477,535,455],
[368,0,400,409,511,412,468,438],
[430,491,0,384,561,419,492,462],
[447,482,507,0,522,425,495,492],
[354,380,330,369,0,373,400,408],
[414,479,472,466,518,0,524,448],
[356,423,399,396,491,367,0,381],
[436,453,429,399,483,443,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,484,459,439,453,487,465],
[432,0,459,450,461,422,449,452],
[407,432,0,433,431,401,429,420],
[432,441,458,0,428,452,461,436],
[452,430,460,463,0,442,476,444],
[438,469,490,439,449,0,481,438],
[404,442,462,430,415,410,0,412],
[426,439,471,455,447,453,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,415,409,427,455,475,446],
[485,0,462,442,472,465,487,462],
[476,429,0,457,472,503,474,427],
[482,449,434,0,443,497,463,475],
[464,419,419,448,0,489,467,461],
[436,426,388,394,402,0,468,454],
[416,404,417,428,424,423,0,454],
[445,429,464,416,430,437,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,433,438,471,458,502,448],
[471,0,467,426,474,483,494,451],
[458,424,0,472,465,447,482,474],
[453,465,419,0,460,423,452,449],
[420,417,426,431,0,411,444,446],
[433,408,444,468,480,0,461,457],
[389,397,409,439,447,430,0,448],
[443,440,417,442,445,434,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,465,454,445,444,469,465],
[438,0,454,435,446,435,437,431],
[426,437,0,455,431,448,454,442],
[437,456,436,0,433,447,453,453],
[446,445,460,458,0,457,457,454],
[447,456,443,444,434,0,448,439],
[422,454,437,438,434,443,0,437],
[426,460,449,438,437,452,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,411,427,443,456,440,478],
[477,0,448,434,485,462,469,461],
[480,443,0,477,469,445,459,475],
[464,457,414,0,465,446,430,484],
[448,406,422,426,0,427,430,471],
[435,429,446,445,464,0,446,508],
[451,422,432,461,461,445,0,470],
[413,430,416,407,420,383,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,429,419,413,430,450,391],
[466,0,427,450,431,435,439,419],
[462,464,0,483,429,461,442,429],
[472,441,408,0,422,431,412,411],
[478,460,462,469,0,464,434,414],
[461,456,430,460,427,0,440,456],
[441,452,449,479,457,451,0,410],
[500,472,462,480,477,435,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,451,454,475,439,453,445],
[451,0,426,452,491,446,459,462],
[440,465,0,445,499,461,454,451],
[437,439,446,0,448,451,445,449],
[416,400,392,443,0,421,423,420],
[452,445,430,440,470,0,457,437],
[438,432,437,446,468,434,0,459],
[446,429,440,442,471,454,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,426,453,437,465,449,447],
[454,0,444,440,450,460,446,463],
[465,447,0,444,443,453,411,463],
[438,451,447,0,432,450,430,439],
[454,441,448,459,0,461,435,465],
[426,431,438,441,430,0,437,449],
[442,445,480,461,456,454,0,458],
[444,428,428,452,426,442,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,479,365,411,555,370,469],
[444,0,326,300,256,522,376,351],
[412,565,0,499,367,613,492,443],
[526,591,392,0,495,547,501,421],
[480,635,524,396,0,635,536,481],
[336,369,278,344,256,0,394,329],
[521,515,399,390,355,497,0,410],
[422,540,448,470,410,562,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,438,480,434,450,442,461],
[432,0,421,447,419,438,453,462],
[453,470,0,445,471,459,459,472],
[411,444,446,0,413,428,459,456],
[457,472,420,478,0,457,481,474],
[441,453,432,463,434,0,460,445],
[449,438,432,432,410,431,0,465],
[430,429,419,435,417,446,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,449,451,447,455,444,446],
[440,0,436,439,442,460,441,434],
[442,455,0,439,455,469,449,472],
[440,452,452,0,447,451,438,461],
[444,449,436,444,0,434,426,450],
[436,431,422,440,457,0,446,452],
[447,450,442,453,465,445,0,461],
[445,457,419,430,441,439,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,427,435,427,453,432,420],
[468,0,450,453,440,463,461,447],
[464,441,0,468,433,471,450,412],
[456,438,423,0,453,435,442,433],
[464,451,458,438,0,459,466,432],
[438,428,420,456,432,0,439,431],
[459,430,441,449,425,452,0,418],
[471,444,479,458,459,460,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,464,457,451,453,437,443],
[455,0,446,440,453,456,452,444],
[427,445,0,445,455,454,440,435],
[434,451,446,0,464,456,459,448],
[440,438,436,427,0,459,429,422],
[438,435,437,435,432,0,442,415],
[454,439,451,432,462,449,0,456],
[448,447,456,443,469,476,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,442,451,429,458,406,346],
[439,0,397,419,449,427,386,343],
[449,494,0,448,398,439,459,451],
[440,472,443,0,449,442,395,388],
[462,442,493,442,0,463,440,450],
[433,464,452,449,428,0,390,369],
[485,505,432,496,451,501,0,391],
[545,548,440,503,441,522,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,460,434,418,452,439,447],
[453,0,455,453,449,452,445,450],
[431,436,0,416,443,417,428,431],
[457,438,475,0,458,433,434,453],
[473,442,448,433,0,443,435,436],
[439,439,474,458,448,0,454,432],
[452,446,463,457,456,437,0,463],
[444,441,460,438,455,459,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,463,416,418,428,451,402],
[468,0,464,448,436,450,491,466],
[428,427,0,427,400,435,427,428],
[475,443,464,0,448,445,458,448],
[473,455,491,443,0,444,439,464],
[463,441,456,446,447,0,455,471],
[440,400,464,433,452,436,0,435],
[489,425,463,443,427,420,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,438,433,441,415,419,420],
[461,0,453,443,508,447,447,463],
[453,438,0,464,467,439,427,449],
[458,448,427,0,454,411,427,435],
[450,383,424,437,0,400,397,452],
[476,444,452,480,491,0,485,460],
[472,444,464,464,494,406,0,503],
[471,428,442,456,439,431,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,449,454,434,454,444,449],
[431,0,432,454,443,469,438,421],
[442,459,0,449,472,456,456,470],
[437,437,442,0,437,446,436,450],
[457,448,419,454,0,462,449,456],
[437,422,435,445,429,0,436,458],
[447,453,435,455,442,455,0,450],
[442,470,421,441,435,433,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,407,403,447,383,438,504],
[421,0,411,441,392,357,452,456],
[484,480,0,443,407,459,393,511],
[488,450,448,0,432,458,466,519],
[444,499,484,459,0,386,452,463],
[508,534,432,433,505,0,452,524],
[453,439,498,425,439,439,0,557],
[387,435,380,372,428,367,334,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,453,461,443,419,459,483],
[362,0,350,391,375,369,430,416],
[438,541,0,523,460,442,491,551],
[430,500,368,0,456,474,454,470],
[448,516,431,435,0,448,470,495],
[472,522,449,417,443,0,479,451],
[432,461,400,437,421,412,0,440],
[408,475,340,421,396,440,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,471,409,407,431,445,407],
[452,0,466,450,389,458,401,440],
[420,425,0,431,414,455,426,437],
[482,441,460,0,397,457,437,463],
[484,502,477,494,0,442,494,438],
[460,433,436,434,449,0,427,428],
[446,490,465,454,397,464,0,434],
[484,451,454,428,453,463,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,429,447,463,465,462,471],
[455,0,464,479,462,441,439,462],
[462,427,0,430,470,475,443,463],
[444,412,461,0,450,450,426,441],
[428,429,421,441,0,453,413,422],
[426,450,416,441,438,0,451,428],
[429,452,448,465,478,440,0,466],
[420,429,428,450,469,463,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,444,444,459,464,449,458],
[419,0,424,450,444,459,419,450],
[447,467,0,444,451,470,453,462],
[447,441,447,0,456,482,465,467],
[432,447,440,435,0,463,434,453],
[427,432,421,409,428,0,442,444],
[442,472,438,426,457,449,0,451],
[433,441,429,424,438,447,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,450,462,449,454,429,464],
[444,0,452,466,469,437,437,453],
[441,439,0,472,471,461,445,461],
[429,425,419,0,429,420,445,422],
[442,422,420,462,0,435,427,450],
[437,454,430,471,456,0,453,447],
[462,454,446,446,464,438,0,453],
[427,438,430,469,441,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,420,419,400,410,436,450],
[442,0,418,424,421,397,398,383],
[471,473,0,406,420,369,466,418],
[472,467,485,0,433,456,465,468],
[491,470,471,458,0,391,457,395],
[481,494,522,435,500,0,496,453],
[455,493,425,426,434,395,0,434],
[441,508,473,423,496,438,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,438,430,458,454,472,431],
[462,0,471,440,460,439,482,455],
[453,420,0,427,425,425,463,433],
[461,451,464,0,459,413,473,452],
[433,431,466,432,0,428,427,428],
[437,452,466,478,463,0,460,438],
[419,409,428,418,464,431,0,443],
[460,436,458,439,463,453,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,682,567,682,453,516,412],
[411,0,351,474,498,525,238,553],
[209,540,0,438,349,453,177,380],
[324,417,453,0,356,453,316,417],
[209,393,542,535,0,465,429,561],
[438,366,438,438,426,0,265,483],
[375,653,714,575,462,626,0,585],
[479,338,511,474,330,408,306,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,462,412,460,461,414,486],
[429,0,447,463,485,452,448,448],
[429,444,0,431,474,490,454,466],
[479,428,460,0,491,477,446,487],
[431,406,417,400,0,415,395,462],
[430,439,401,414,476,0,438,484],
[477,443,437,445,496,453,0,493],
[405,443,425,404,429,407,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,464,458,461,428,476,435],
[404,0,427,438,393,420,408,388],
[427,464,0,462,445,446,471,439],
[433,453,429,0,415,455,413,419],
[430,498,446,476,0,462,466,444],
[463,471,445,436,429,0,444,426],
[415,483,420,478,425,447,0,458],
[456,503,452,472,447,465,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,432,434,481,436,474,465],
[391,0,444,424,427,401,444,418],
[459,447,0,465,463,415,460,414],
[457,467,426,0,453,451,480,474],
[410,464,428,438,0,416,454,427],
[455,490,476,440,475,0,475,456],
[417,447,431,411,437,416,0,423],
[426,473,477,417,464,435,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,457,490,434,456,437,450],
[438,0,497,449,432,453,444,480],
[434,394,0,455,435,417,446,445],
[401,442,436,0,404,437,446,464],
[457,459,456,487,0,432,490,480],
[435,438,474,454,459,0,504,450],
[454,447,445,445,401,387,0,464],
[441,411,446,427,411,441,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,458,441,438,418,424,354],
[437,0,417,421,430,402,456,347],
[433,474,0,434,381,403,398,401],
[450,470,457,0,451,435,424,383],
[453,461,510,440,0,437,470,459],
[473,489,488,456,454,0,477,426],
[467,435,493,467,421,414,0,405],
[537,544,490,508,432,465,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,439,413,468,433,457,436],
[439,0,439,429,450,433,423,441],
[452,452,0,430,472,425,447,441],
[478,462,461,0,462,443,457,462],
[423,441,419,429,0,423,419,443],
[458,458,466,448,468,0,445,451],
[434,468,444,434,472,446,0,455],
[455,450,450,429,448,440,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,473,449,443,458,453,443],
[420,0,444,429,424,438,434,440],
[418,447,0,418,427,443,451,438],
[442,462,473,0,455,460,463,460],
[448,467,464,436,0,458,466,456],
[433,453,448,431,433,0,434,420],
[438,457,440,428,425,457,0,443],
[448,451,453,431,435,471,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,427,439,474,482,455,425],
[441,0,412,467,455,410,454,422],
[464,479,0,462,492,443,449,463],
[452,424,429,0,432,433,414,417],
[417,436,399,459,0,407,430,420],
[409,481,448,458,484,0,470,433],
[436,437,442,477,461,421,0,431],
[466,469,428,474,471,458,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,432,454,444,438,437,434],
[460,0,453,456,454,441,460,472],
[459,438,0,453,431,435,432,438],
[437,435,438,0,434,421,443,444],
[447,437,460,457,0,440,452,462],
[453,450,456,470,451,0,445,454],
[454,431,459,448,439,446,0,452],
[457,419,453,447,429,437,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,409,450,422,473,465,455],
[436,0,417,401,408,421,443,416],
[482,474,0,438,446,517,466,475],
[441,490,453,0,438,456,463,457],
[469,483,445,453,0,494,452,502],
[418,470,374,435,397,0,434,422],
[426,448,425,428,439,457,0,459],
[436,475,416,434,389,469,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,466,406,430,449,435,463],
[466,0,448,438,439,418,444,442],
[425,443,0,447,418,475,434,449],
[485,453,444,0,439,453,449,452],
[461,452,473,452,0,477,424,457],
[442,473,416,438,414,0,400,425],
[456,447,457,442,467,491,0,482],
[428,449,442,439,434,466,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,476,481,495,531,482,429],
[426,0,361,462,468,458,459,444],
[415,530,0,479,404,519,500,494],
[410,429,412,0,407,399,462,415],
[396,423,487,484,0,412,464,388],
[360,433,372,492,479,0,423,431],
[409,432,391,429,427,468,0,432],
[462,447,397,476,503,460,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,433,440,427,435,441,429],
[435,0,446,436,419,442,437,443],
[458,445,0,460,446,460,449,452],
[451,455,431,0,440,441,438,442],
[464,472,445,451,0,462,447,453],
[456,449,431,450,429,0,418,464],
[450,454,442,453,444,473,0,451],
[462,448,439,449,438,427,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,449,468,424,424,440,430],
[464,0,478,443,438,444,437,420],
[442,413,0,466,428,446,458,416],
[423,448,425,0,430,415,463,419],
[467,453,463,461,0,437,470,437],
[467,447,445,476,454,0,445,454],
[451,454,433,428,421,446,0,440],
[461,471,475,472,454,437,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,407,409,432,417,400,441],
[489,0,446,455,437,427,435,465],
[484,445,0,455,462,425,467,470],
[482,436,436,0,470,450,436,467],
[459,454,429,421,0,424,428,430],
[474,464,466,441,467,0,437,458],
[491,456,424,455,463,454,0,460],
[450,426,421,424,461,433,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,428,464,413,480,442,463],
[446,0,401,441,402,453,430,436],
[463,490,0,486,431,468,450,461],
[427,450,405,0,452,446,423,438],
[478,489,460,439,0,478,477,474],
[411,438,423,445,413,0,420,431],
[449,461,441,468,414,471,0,466],
[428,455,430,453,417,460,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,434,420,416,454,461,487],
[427,0,440,399,384,434,446,473],
[457,451,0,413,420,444,483,519],
[471,492,478,0,464,497,438,502],
[475,507,471,427,0,467,529,534],
[437,457,447,394,424,0,450,497],
[430,445,408,453,362,441,0,479],
[404,418,372,389,357,394,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,440,461,414,436,412,419],
[470,0,434,451,445,474,443,454],
[451,457,0,449,453,444,429,458],
[430,440,442,0,421,457,446,432],
[477,446,438,470,0,473,437,453],
[455,417,447,434,418,0,437,443],
[479,448,462,445,454,454,0,452],
[472,437,433,459,438,448,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,463,453,434,467,475,471],
[462,0,446,450,429,443,467,449],
[428,445,0,446,445,436,488,455],
[438,441,445,0,462,468,462,455],
[457,462,446,429,0,443,484,454],
[424,448,455,423,448,0,484,459],
[416,424,403,429,407,407,0,379],
[420,442,436,436,437,432,512,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,498,464,444,492,504,476],
[432,0,512,466,456,467,475,476],
[393,379,0,393,440,420,437,435],
[427,425,498,0,472,464,442,454],
[447,435,451,419,0,466,446,463],
[399,424,471,427,425,0,432,446],
[387,416,454,449,445,459,0,465],
[415,415,456,437,428,445,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,453,437,433,426,459,456],
[462,0,426,466,445,464,452,461],
[438,465,0,477,461,473,468,467],
[454,425,414,0,446,459,416,438],
[458,446,430,445,0,456,449,445],
[465,427,418,432,435,0,455,458],
[432,439,423,475,442,436,0,449],
[435,430,424,453,446,433,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,560,425,444,476,378,463],
[452,0,527,442,486,489,524,444],
[331,364,0,485,368,409,408,355],
[466,449,406,0,409,438,483,358],
[447,405,523,482,0,487,493,482],
[415,402,482,453,404,0,460,430],
[513,367,483,408,398,431,0,364],
[428,447,536,533,409,461,527,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,456,462,464,434,446,471],
[422,0,424,435,428,434,422,453],
[435,467,0,482,454,463,436,458],
[429,456,409,0,446,437,419,451],
[427,463,437,445,0,443,436,461],
[457,457,428,454,448,0,458,471],
[445,469,455,472,455,433,0,469],
[420,438,433,440,430,420,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,473,486,454,445,477,455],
[429,0,461,473,459,463,460,479],
[418,430,0,446,451,436,464,449],
[405,418,445,0,451,425,453,450],
[437,432,440,440,0,447,461,437],
[446,428,455,466,444,0,457,454],
[414,431,427,438,430,434,0,432],
[436,412,442,441,454,437,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,372,396,405,442,387,400],
[490,0,439,465,445,443,442,434],
[519,452,0,487,465,478,444,501],
[495,426,404,0,422,468,401,445],
[486,446,426,469,0,446,459,486],
[449,448,413,423,445,0,420,423],
[504,449,447,490,432,471,0,452],
[491,457,390,446,405,468,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,519,536,733,407,461,419,464],
[372,0,408,423,294,349,217,389],
[355,483,0,515,200,476,362,341],
[158,468,376,0,269,349,200,250],
[484,597,691,622,0,529,393,488],
[430,542,415,542,362,0,401,447],
[472,674,529,691,498,490,0,433],
[427,502,550,641,403,444,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,445,480,433,448,452,413],
[431,0,437,468,433,474,412,383],
[446,454,0,485,451,452,450,421],
[411,423,406,0,426,420,368,391],
[458,458,440,465,0,416,426,414],
[443,417,439,471,475,0,443,448],
[439,479,441,523,465,448,0,457],
[478,508,470,500,477,443,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,482,526,515,413,402,465],
[438,0,461,448,516,458,415,542],
[409,430,0,257,555,303,442,348],
[365,443,634,0,558,373,454,398],
[376,375,336,333,0,288,462,290],
[478,433,588,518,603,0,530,357],
[489,476,449,437,429,361,0,497],
[426,349,543,493,601,534,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,450,442,459,449,456,449],
[448,0,453,436,453,454,438,431],
[441,438,0,435,429,430,414,426],
[449,455,456,0,441,431,431,438],
[432,438,462,450,0,432,426,467],
[442,437,461,460,459,0,455,461],
[435,453,477,460,465,436,0,448],
[442,460,465,453,424,430,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,459,430,456,432,445,441],
[464,0,463,437,434,444,450,447],
[432,428,0,475,437,441,458,435],
[461,454,416,0,450,456,441,460],
[435,457,454,441,0,459,454,439],
[459,447,450,435,432,0,465,458],
[446,441,433,450,437,426,0,436],
[450,444,456,431,452,433,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,462,463,477,460,445,460],
[452,0,435,434,504,446,418,460],
[429,456,0,405,466,415,425,430],
[428,457,486,0,457,475,432,453],
[414,387,425,434,0,416,453,426],
[431,445,476,416,475,0,435,454],
[446,473,466,459,438,456,0,430],
[431,431,461,438,465,437,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,450,428,458,439,437,428],
[442,0,450,441,433,442,437,440],
[441,441,0,464,440,461,432,462],
[463,450,427,0,451,434,419,437],
[433,458,451,440,0,454,448,443],
[452,449,430,457,437,0,448,443],
[454,454,459,472,443,443,0,452],
[463,451,429,454,448,448,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,479,432,426,456,418,475],
[488,0,506,473,468,508,491,423],
[412,385,0,408,379,482,434,455],
[459,418,483,0,421,503,475,464],
[465,423,512,470,0,509,474,498],
[435,383,409,388,382,0,423,406],
[473,400,457,416,417,468,0,455],
[416,468,436,427,393,485,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,442,452,432,440,472,464],
[466,0,460,449,441,469,466,455],
[449,431,0,443,460,457,458,454],
[439,442,448,0,426,443,453,441],
[459,450,431,465,0,469,456,476],
[451,422,434,448,422,0,443,462],
[419,425,433,438,435,448,0,459],
[427,436,437,450,415,429,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,505,438,501,487,489,446],
[453,0,515,463,484,441,490,412],
[386,376,0,399,444,434,451,399],
[453,428,492,0,491,465,473,412],
[390,407,447,400,0,417,439,404],
[404,450,457,426,474,0,464,395],
[402,401,440,418,452,427,0,385],
[445,479,492,479,487,496,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,445,481,467,465,485,437],
[400,0,452,441,439,433,414,435],
[446,439,0,413,432,431,439,438],
[410,450,478,0,454,437,438,461],
[424,452,459,437,0,438,424,421],
[426,458,460,454,453,0,446,433],
[406,477,452,453,467,445,0,434],
[454,456,453,430,470,458,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,456,427,436,473,425,465],
[435,0,433,452,436,445,433,437],
[435,458,0,436,416,443,444,416],
[464,439,455,0,408,434,441,458],
[455,455,475,483,0,434,465,457],
[418,446,448,457,457,0,444,439],
[466,458,447,450,426,447,0,428],
[426,454,475,433,434,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,448,431,465,420,438,482],
[463,0,447,464,424,451,439,455],
[443,444,0,451,456,443,450,465],
[460,427,440,0,420,408,434,458],
[426,467,435,471,0,428,448,469],
[471,440,448,483,463,0,457,477],
[453,452,441,457,443,434,0,471],
[409,436,426,433,422,414,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,514,437,392,401,427,353,390],
[377,0,404,287,331,466,446,343],
[454,487,0,378,469,500,420,464],
[499,604,513,0,466,530,422,477],
[490,560,422,425,0,509,421,404],
[464,425,391,361,382,0,383,449],
[538,445,471,469,470,508,0,555],
[501,548,427,414,487,442,336,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,488,450,447,414,427,416],
[473,0,409,489,410,461,416,440],
[403,482,0,518,426,497,458,450],
[441,402,373,0,400,416,420,411],
[444,481,465,491,0,462,471,450],
[477,430,394,475,429,0,408,439],
[464,475,433,471,420,483,0,463],
[475,451,441,480,441,452,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,472,455,455,444,435,463],
[419,0,437,414,402,429,438,445],
[419,454,0,429,420,448,443,427],
[436,477,462,0,406,444,460,458],
[436,489,471,485,0,451,453,475],
[447,462,443,447,440,0,433,446],
[456,453,448,431,438,458,0,460],
[428,446,464,433,416,445,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,447,482,450,407,444,441],
[420,0,452,455,452,419,466,414],
[444,439,0,467,428,453,468,474],
[409,436,424,0,433,403,425,405],
[441,439,463,458,0,447,441,406],
[484,472,438,488,444,0,443,475],
[447,425,423,466,450,448,0,429],
[450,477,417,486,485,416,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,438,408,435,449,448,452],
[476,0,421,426,440,444,456,456],
[453,470,0,451,449,445,464,470],
[483,465,440,0,437,455,489,508],
[456,451,442,454,0,441,438,458],
[442,447,446,436,450,0,440,455],
[443,435,427,402,453,451,0,473],
[439,435,421,383,433,436,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,500,469,513,479,468,436],
[375,0,396,414,402,398,432,421],
[391,495,0,457,464,465,564,505],
[422,477,434,0,485,538,528,482],
[378,489,427,406,0,464,495,474],
[412,493,426,353,427,0,543,419],
[423,459,327,363,396,348,0,380],
[455,470,386,409,417,472,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,502,479,459,451,454,435],
[411,0,424,472,442,427,419,404],
[389,467,0,461,422,421,433,406],
[412,419,430,0,419,421,436,462],
[432,449,469,472,0,441,431,435],
[440,464,470,470,450,0,441,480],
[437,472,458,455,460,450,0,446],
[456,487,485,429,456,411,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,462,421,464,467,422,410],
[450,0,441,417,462,432,437,420],
[429,450,0,431,458,432,458,440],
[470,474,460,0,465,436,456,450],
[427,429,433,426,0,414,423,400],
[424,459,459,455,477,0,458,432],
[469,454,433,435,468,433,0,418],
[481,471,451,441,491,459,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,428,420,393,375,408,379],
[472,0,438,422,456,456,462,412],
[463,453,0,450,392,405,422,448],
[471,469,441,0,422,440,412,434],
[498,435,499,469,0,431,463,436],
[516,435,486,451,460,0,450,438],
[483,429,469,479,428,441,0,429],
[512,479,443,457,455,453,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,479,458,464,431,443,458],
[438,0,474,415,424,426,415,456],
[412,417,0,378,391,380,411,441],
[433,476,513,0,488,459,456,486],
[427,467,500,403,0,430,443,428],
[460,465,511,432,461,0,417,464],
[448,476,480,435,448,474,0,493],
[433,435,450,405,463,427,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,372,457,413,396,405,477,415],
[519,0,439,474,448,450,502,447],
[434,452,0,405,438,471,472,431],
[478,417,486,0,434,489,484,475],
[495,443,453,457,0,442,508,457],
[486,441,420,402,449,0,487,451],
[414,389,419,407,383,404,0,406],
[476,444,460,416,434,440,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,414,411,418,426,435,438],
[477,0,476,445,441,468,492,476],
[477,415,0,452,444,482,473,466],
[480,446,439,0,429,419,462,448],
[473,450,447,462,0,436,467,453],
[465,423,409,472,455,0,471,462],
[456,399,418,429,424,420,0,433],
[453,415,425,443,438,429,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,443,472,376,422,388,376],
[503,0,457,568,525,462,514,435],
[448,434,0,521,448,472,435,467],
[419,323,370,0,383,377,402,431],
[515,366,443,508,0,439,475,420],
[469,429,419,514,452,0,488,411],
[503,377,456,489,416,403,0,416],
[515,456,424,460,471,480,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,456,407,537,421,354,428],
[460,0,422,406,468,481,401,377],
[435,469,0,514,458,410,429,423],
[484,485,377,0,533,405,443,482],
[354,423,433,358,0,377,424,336],
[470,410,481,486,514,0,449,431],
[537,490,462,448,467,442,0,392],
[463,514,468,409,555,460,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,442,448,485,477,454,438],
[414,0,431,448,477,432,421,439],
[449,460,0,473,472,462,452,440],
[443,443,418,0,464,446,433,448],
[406,414,419,427,0,410,416,425],
[414,459,429,445,481,0,438,440],
[437,470,439,458,475,453,0,448],
[453,452,451,443,466,451,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,465,433,463,461,449,449],
[439,0,450,423,461,445,440,422],
[426,441,0,447,451,466,449,442],
[458,468,444,0,480,467,459,461],
[428,430,440,411,0,437,433,437],
[430,446,425,424,454,0,444,428],
[442,451,442,432,458,447,0,433],
[442,469,449,430,454,463,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,426,414,458,434,437,439],
[442,0,412,438,445,437,435,435],
[465,479,0,440,462,453,475,462],
[477,453,451,0,457,460,461,443],
[433,446,429,434,0,442,445,453],
[457,454,438,431,449,0,449,450],
[454,456,416,430,446,442,0,436],
[452,456,429,448,438,441,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,430,422,411,430,433,426],
[447,0,446,451,431,442,428,447],
[461,445,0,441,444,453,465,433],
[469,440,450,0,416,439,453,420],
[480,460,447,475,0,470,464,435],
[461,449,438,452,421,0,444,448],
[458,463,426,438,427,447,0,430],
[465,444,458,471,456,443,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,478,451,428,427,415,417],
[457,0,486,476,451,441,451,432],
[413,405,0,430,417,388,398,417],
[440,415,461,0,428,405,411,429],
[463,440,474,463,0,430,443,425],
[464,450,503,486,461,0,445,441],
[476,440,493,480,448,446,0,452],
[474,459,474,462,466,450,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,497,476,436,424,422,520],
[434,0,535,566,448,472,514,525],
[394,356,0,420,334,382,363,413],
[415,325,471,0,389,381,348,418],
[455,443,557,502,0,493,473,438],
[467,419,509,510,398,0,395,475],
[469,377,528,543,418,496,0,469],
[371,366,478,473,453,416,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,426,418,462,445,452,439],
[476,0,483,437,430,456,411,477],
[465,408,0,411,438,407,393,458],
[473,454,480,0,518,493,435,438],
[429,461,453,373,0,460,465,414],
[446,435,484,398,431,0,467,454],
[439,480,498,456,426,424,0,463],
[452,414,433,453,477,437,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,450,432,429,468,446,463],
[439,0,439,409,443,435,429,440],
[441,452,0,442,454,426,453,464],
[459,482,449,0,445,438,448,466],
[462,448,437,446,0,444,466,468],
[423,456,465,453,447,0,453,454],
[445,462,438,443,425,438,0,449],
[428,451,427,425,423,437,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,400,407,471,398,427,436],
[477,0,389,446,472,435,421,429],
[491,502,0,473,455,432,483,456],
[484,445,418,0,472,421,421,450],
[420,419,436,419,0,393,426,402],
[493,456,459,470,498,0,443,483],
[464,470,408,470,465,448,0,451],
[455,462,435,441,489,408,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,501,479,472,451,426,499],
[425,0,442,422,438,403,418,425],
[390,449,0,427,446,463,445,461],
[412,469,464,0,415,415,412,439],
[419,453,445,476,0,427,454,441],
[440,488,428,476,464,0,449,458],
[465,473,446,479,437,442,0,489],
[392,466,430,452,450,433,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,441,449,467,465,441,450],
[436,0,420,428,450,458,425,439],
[450,471,0,443,465,472,451,432],
[442,463,448,0,474,480,447,472],
[424,441,426,417,0,464,429,457],
[426,433,419,411,427,0,412,450],
[450,466,440,444,462,479,0,465],
[441,452,459,419,434,441,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,365,470,477,469,432,437,457],
[526,0,469,463,436,462,470,457],
[421,422,0,441,458,460,445,431],
[414,428,450,0,460,450,459,439],
[422,455,433,431,0,433,462,454],
[459,429,431,441,458,0,447,428],
[454,421,446,432,429,444,0,425],
[434,434,460,452,437,463,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,460,422,477,455,445,470],
[434,0,463,437,448,451,428,427],
[431,428,0,429,447,419,446,416],
[469,454,462,0,453,440,439,450],
[414,443,444,438,0,466,449,420],
[436,440,472,451,425,0,451,456],
[446,463,445,452,442,440,0,442],
[421,464,475,441,471,435,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,355,483,377,457,334,406,401],
[536,0,515,429,536,461,459,467],
[408,376,0,408,430,379,412,410],
[514,462,483,0,502,396,444,411],
[434,355,461,389,0,416,388,450],
[557,430,512,495,475,0,448,518],
[485,432,479,447,503,443,0,483],
[490,424,481,480,441,373,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,545,459,385,480,467,459],
[445,0,506,461,443,469,523,459],
[346,385,0,459,405,433,451,379],
[432,430,432,0,397,466,530,432],
[506,448,486,494,0,451,532,442],
[411,422,458,425,440,0,477,404],
[424,368,440,361,359,414,0,419],
[432,432,512,459,449,487,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,421,408,427,432,418,417],
[459,0,447,457,479,470,429,450],
[470,444,0,454,512,446,468,461],
[483,434,437,0,471,448,449,444],
[464,412,379,420,0,441,426,408],
[459,421,445,443,450,0,407,438],
[473,462,423,442,465,484,0,482],
[474,441,430,447,483,453,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,469,453,488,453,430,452],
[432,0,477,448,459,424,478,461],
[422,414,0,451,448,413,432,414],
[438,443,440,0,463,439,473,442],
[403,432,443,428,0,430,423,444],
[438,467,478,452,461,0,445,438],
[461,413,459,418,468,446,0,474],
[439,430,477,449,447,453,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,417,438,429,467,412,437],
[442,0,436,427,422,458,433,452],
[474,455,0,440,451,459,455,461],
[453,464,451,0,453,456,436,466],
[462,469,440,438,0,437,446,488],
[424,433,432,435,454,0,438,425],
[479,458,436,455,445,453,0,472],
[454,439,430,425,403,466,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,421,413,441,397,407,423],
[498,0,439,450,444,475,442,437],
[470,452,0,421,434,461,433,438],
[478,441,470,0,456,438,433,459],
[450,447,457,435,0,444,439,417],
[494,416,430,453,447,0,461,412],
[484,449,458,458,452,430,0,440],
[468,454,453,432,474,479,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,434,460,454,447,447,435],
[454,0,452,473,450,472,450,434],
[457,439,0,468,471,435,481,454],
[431,418,423,0,446,441,472,461],
[437,441,420,445,0,428,438,416],
[444,419,456,450,463,0,449,447],
[444,441,410,419,453,442,0,453],
[456,457,437,430,475,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,455,477,444,464,472,444],
[412,0,435,445,456,433,446,444],
[436,456,0,439,425,456,494,431],
[414,446,452,0,449,439,458,453],
[447,435,466,442,0,449,466,448],
[427,458,435,452,442,0,454,451],
[419,445,397,433,425,437,0,423],
[447,447,460,438,443,440,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,458,470,486,455,466,429],
[465,0,478,471,441,442,464,462],
[433,413,0,449,458,420,439,427],
[421,420,442,0,472,430,429,424],
[405,450,433,419,0,452,432,416],
[436,449,471,461,439,0,460,449],
[425,427,452,462,459,431,0,428],
[462,429,464,467,475,442,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,447,454,446,476,461,460],
[469,0,473,444,453,482,450,447],
[444,418,0,443,453,471,461,464],
[437,447,448,0,449,480,450,446],
[445,438,438,442,0,458,438,475],
[415,409,420,411,433,0,436,450],
[430,441,430,441,453,455,0,439],
[431,444,427,445,416,441,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,472,435,473,474,470,502],
[440,0,443,456,450,467,429,515],
[419,448,0,438,468,478,496,465],
[456,435,453,0,467,470,516,477],
[418,441,423,424,0,456,460,497],
[417,424,413,421,435,0,411,429],
[421,462,395,375,431,480,0,488],
[389,376,426,414,394,462,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,430,421,437,453,435,454],
[453,0,452,465,446,421,465,471],
[461,439,0,444,457,450,459,452],
[470,426,447,0,447,428,447,453],
[454,445,434,444,0,431,456,460],
[438,470,441,463,460,0,469,466],
[456,426,432,444,435,422,0,451],
[437,420,439,438,431,425,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,444,460,459,493,451,496],
[408,0,470,439,434,447,435,476],
[447,421,0,448,459,493,448,479],
[431,452,443,0,443,490,462,493],
[432,457,432,448,0,463,436,482],
[398,444,398,401,428,0,447,457],
[440,456,443,429,455,444,0,479],
[395,415,412,398,409,434,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,522,556,447,510,564,331],
[400,0,535,475,333,349,466,329],
[369,356,0,434,347,448,521,363],
[335,416,457,0,362,361,443,296],
[444,558,544,529,0,453,496,515],
[381,542,443,530,438,0,448,384],
[327,425,370,448,395,443,0,348],
[560,562,528,595,376,507,543,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,462,468,507,442,404,411],
[409,0,425,472,495,421,391,426],
[429,466,0,471,476,433,445,438],
[423,419,420,0,477,386,413,414],
[384,396,415,414,0,390,402,369],
[449,470,458,505,501,0,447,434],
[487,500,446,478,489,444,0,452],
[480,465,453,477,522,457,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,445,449,442,439,467,468],
[436,0,466,468,446,449,461,462],
[446,425,0,446,431,439,453,456],
[442,423,445,0,450,439,451,466],
[449,445,460,441,0,454,467,466],
[452,442,452,452,437,0,457,465],
[424,430,438,440,424,434,0,460],
[423,429,435,425,425,426,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,455,451,428,439,410,445],
[452,0,467,445,424,437,445,457],
[436,424,0,421,420,437,424,399],
[440,446,470,0,451,447,446,455],
[463,467,471,440,0,453,441,456],
[452,454,454,444,438,0,432,468],
[481,446,467,445,450,459,0,472],
[446,434,492,436,435,423,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,184,357,241,108,325,194,239],
[707,0,469,450,443,640,453,347],
[534,422,0,386,554,327,193,358],
[650,441,505,0,463,633,468,361],
[783,448,337,428,0,503,409,408],
[566,251,564,258,388,0,384,364],
[697,438,698,423,482,507,0,576],
[652,544,533,530,483,527,315,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,393,430,380,450,526,480],
[451,0,403,445,426,438,469,494],
[498,488,0,439,455,495,495,515],
[461,446,452,0,450,430,452,511],
[511,465,436,441,0,467,533,463],
[441,453,396,461,424,0,497,526],
[365,422,396,439,358,394,0,499],
[411,397,376,380,428,365,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,444,454,420,450,443,467],
[454,0,452,459,451,453,444,463],
[447,439,0,472,435,446,442,474],
[437,432,419,0,409,415,430,437],
[471,440,456,482,0,462,457,449],
[441,438,445,476,429,0,442,443],
[448,447,449,461,434,449,0,474],
[424,428,417,454,442,448,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,445,467,468,491,480,484],
[410,0,420,417,424,427,470,460],
[446,471,0,446,434,485,484,437],
[424,474,445,0,462,454,485,464],
[423,467,457,429,0,465,462,477],
[400,464,406,437,426,0,437,432],
[411,421,407,406,429,454,0,424],
[407,431,454,427,414,459,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,451,435,454,461,455,435],
[417,0,441,429,457,442,439,453],
[440,450,0,455,494,450,441,444],
[456,462,436,0,479,440,465,453],
[437,434,397,412,0,424,449,447],
[430,449,441,451,467,0,448,483],
[436,452,450,426,442,443,0,464],
[456,438,447,438,444,408,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,453,388,414,457,416,466],
[429,0,465,447,448,474,451,474],
[438,426,0,421,438,471,403,487],
[503,444,470,0,497,527,421,498],
[477,443,453,394,0,480,480,490],
[434,417,420,364,411,0,441,447],
[475,440,488,470,411,450,0,471],
[425,417,404,393,401,444,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,429,474,463,478,443,448],
[459,0,410,456,445,482,423,445],
[462,481,0,496,477,481,443,484],
[417,435,395,0,450,438,433,440],
[428,446,414,441,0,482,431,447],
[413,409,410,453,409,0,414,421],
[448,468,448,458,460,477,0,441],
[443,446,407,451,444,470,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,450,444,457,437,465,454],
[445,0,454,441,434,444,431,430],
[441,437,0,417,427,433,437,456],
[447,450,474,0,455,465,459,444],
[434,457,464,436,0,438,451,429],
[454,447,458,426,453,0,416,450],
[426,460,454,432,440,475,0,423],
[437,461,435,447,462,441,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,453,459,437,452,467,467],
[431,0,439,445,441,436,435,458],
[438,452,0,446,458,422,441,472],
[432,446,445,0,454,439,458,463],
[454,450,433,437,0,438,459,472],
[439,455,469,452,453,0,473,469],
[424,456,450,433,432,418,0,464],
[424,433,419,428,419,422,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,490,475,507,498,465],
[446,0,485,516,428,469,537,449],
[446,406,0,452,395,452,479,435],
[401,375,439,0,444,438,479,410],
[416,463,496,447,0,455,457,484],
[384,422,439,453,436,0,508,472],
[393,354,412,412,434,383,0,397],
[426,442,456,481,407,419,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,550,761,497,307,426,544,664],
[341,0,472,436,484,370,472,486],
[130,419,0,242,284,278,284,385],
[394,455,649,0,490,549,501,432],
[584,407,607,401,0,501,619,521],
[465,521,613,342,390,0,509,492],
[347,419,607,390,272,382,0,454],
[227,405,506,459,370,399,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,462,440,390,442,463,454],
[428,0,462,465,437,422,417,449],
[429,429,0,437,445,422,416,411],
[451,426,454,0,402,430,406,404],
[501,454,446,489,0,468,456,445],
[449,469,469,461,423,0,429,405],
[428,474,475,485,435,462,0,420],
[437,442,480,487,446,486,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,432,455,431,450,421,428],
[477,0,483,473,431,475,471,446],
[459,408,0,433,425,470,440,436],
[436,418,458,0,439,449,421,416],
[460,460,466,452,0,476,453,442],
[441,416,421,442,415,0,449,419],
[470,420,451,470,438,442,0,429],
[463,445,455,475,449,472,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,496,517,495,394,481,436],
[435,0,437,472,490,443,426,465],
[395,454,0,431,437,456,413,426],
[374,419,460,0,479,383,425,443],
[396,401,454,412,0,417,438,394],
[497,448,435,508,474,0,474,487],
[410,465,478,466,453,417,0,420],
[455,426,465,448,497,404,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,455,484,482,478,486,440],
[444,0,499,502,505,507,477,480],
[436,392,0,465,431,463,482,445],
[407,389,426,0,437,428,407,404],
[409,386,460,454,0,439,475,436],
[413,384,428,463,452,0,461,420],
[405,414,409,484,416,430,0,427],
[451,411,446,487,455,471,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,459,420,423,431,400,436],
[441,0,445,418,430,461,427,436],
[432,446,0,415,429,391,416,449],
[471,473,476,0,452,429,410,454],
[468,461,462,439,0,429,444,454],
[460,430,500,462,462,0,466,464],
[491,464,475,481,447,425,0,482],
[455,455,442,437,437,427,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,461,471,448,451,433,495],
[430,0,463,468,418,429,429,444],
[430,428,0,455,399,406,419,482],
[420,423,436,0,413,416,436,452],
[443,473,492,478,0,454,452,489],
[440,462,485,475,437,0,455,478],
[458,462,472,455,439,436,0,481],
[396,447,409,439,402,413,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,460,479,447,463,443,453],
[437,0,463,463,448,447,432,431],
[431,428,0,439,426,453,444,433],
[412,428,452,0,436,438,426,445],
[444,443,465,455,0,444,457,465],
[428,444,438,453,447,0,444,463],
[448,459,447,465,434,447,0,444],
[438,460,458,446,426,428,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,487,428,467,440,454,438],
[409,0,466,452,498,431,448,415],
[404,425,0,434,481,425,423,429],
[463,439,457,0,473,448,450,453],
[424,393,410,418,0,414,405,372],
[451,460,466,443,477,0,459,424],
[437,443,468,441,486,432,0,435],
[453,476,462,438,519,467,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,455,427,447,441,456,436],
[456,0,438,420,471,463,468,446],
[436,453,0,431,466,467,456,439],
[464,471,460,0,467,458,457,444],
[444,420,425,424,0,466,467,426],
[450,428,424,433,425,0,422,424],
[435,423,435,434,424,469,0,420],
[455,445,452,447,465,467,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,433,440,441,406,454,434],
[462,0,441,431,435,431,445,450],
[458,450,0,430,453,426,462,463],
[451,460,461,0,466,449,478,432],
[450,456,438,425,0,448,456,457],
[485,460,465,442,443,0,460,447],
[437,446,429,413,435,431,0,441],
[457,441,428,459,434,444,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,486,442,448,496,496,473],
[448,0,449,470,478,446,413,474],
[405,442,0,404,462,460,444,425],
[449,421,487,0,439,441,445,428],
[443,413,429,452,0,442,416,436],
[395,445,431,450,449,0,422,489],
[395,478,447,446,475,469,0,509],
[418,417,466,463,455,402,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,440,438,459,434,454,437],
[461,0,431,456,468,463,464,446],
[451,460,0,429,456,455,479,450],
[453,435,462,0,453,465,464,445],
[432,423,435,438,0,433,447,428],
[457,428,436,426,458,0,459,420],
[437,427,412,427,444,432,0,426],
[454,445,441,446,463,471,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,523,524,447,481,416,438],
[406,0,458,485,389,410,418,423],
[368,433,0,482,386,401,414,444],
[367,406,409,0,372,453,342,404],
[444,502,505,519,0,496,462,493],
[410,481,490,438,395,0,399,452],
[475,473,477,549,429,492,0,469],
[453,468,447,487,398,439,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,503,500,436,478,439,486],
[431,0,438,435,457,452,447,475],
[388,453,0,432,412,420,416,460],
[391,456,459,0,421,415,429,463],
[455,434,479,470,0,455,481,495],
[413,439,471,476,436,0,447,475],
[452,444,475,462,410,444,0,462],
[405,416,431,428,396,416,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,448,456,449,448,446,429],
[466,0,437,443,479,479,439,446],
[443,454,0,450,458,443,447,430],
[435,448,441,0,457,453,432,432],
[442,412,433,434,0,431,406,437],
[443,412,448,438,460,0,433,433],
[445,452,444,459,485,458,0,442],
[462,445,461,459,454,458,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,156,139,194,87,254,466,183],
[735,0,603,391,412,458,691,409],
[752,288,0,447,389,628,729,493],
[697,500,444,0,732,535,644,565],
[804,479,502,159,0,579,480,423],
[637,433,263,356,312,0,691,213],
[425,200,162,247,411,200,0,104],
[708,482,398,326,468,678,787,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,433,425,446,431,429,436],
[450,0,418,437,416,440,406,425],
[458,473,0,438,467,446,447,450],
[466,454,453,0,449,435,462,462],
[445,475,424,442,0,428,433,461],
[460,451,445,456,463,0,454,449],
[462,485,444,429,458,437,0,452],
[455,466,441,429,430,442,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,508,492,521,514,485,432],
[447,0,462,406,533,470,540,464],
[383,429,0,427,453,399,507,395],
[399,485,464,0,490,435,474,419],
[370,358,438,401,0,423,483,372],
[377,421,492,456,468,0,474,418],
[406,351,384,417,408,417,0,411],
[459,427,496,472,519,473,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,425,452,453,417,443,450],
[454,0,463,449,453,454,433,436],
[466,428,0,448,457,437,427,461],
[439,442,443,0,442,427,451,455],
[438,438,434,449,0,427,442,442],
[474,437,454,464,464,0,468,492],
[448,458,464,440,449,423,0,468],
[441,455,430,436,449,399,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,423,425,465,449,438,439],
[476,0,441,445,446,428,453,418],
[468,450,0,431,454,445,461,479],
[466,446,460,0,474,437,473,450],
[426,445,437,417,0,469,442,416],
[442,463,446,454,422,0,445,447],
[453,438,430,418,449,446,0,441],
[452,473,412,441,475,444,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,428,447,450,416,437,403],
[474,0,461,452,485,455,463,436],
[463,430,0,452,490,448,455,441],
[444,439,439,0,471,444,416,424],
[441,406,401,420,0,400,404,407],
[475,436,443,447,491,0,455,446],
[454,428,436,475,487,436,0,436],
[488,455,450,467,484,445,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,453,450,449,431,474,461],
[422,0,449,444,414,446,450,454],
[438,442,0,446,439,448,453,455],
[441,447,445,0,449,452,465,462],
[442,477,452,442,0,468,473,452],
[460,445,443,439,423,0,450,460],
[417,441,438,426,418,441,0,463],
[430,437,436,429,439,431,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,471,438,455,430,421,450],
[460,0,485,446,472,445,445,483],
[420,406,0,441,447,421,429,453],
[453,445,450,0,464,423,422,469],
[436,419,444,427,0,448,459,468],
[461,446,470,468,443,0,423,499],
[470,446,462,469,432,468,0,483],
[441,408,438,422,423,392,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,533,473,464,501,498,494],
[462,0,502,427,482,525,498,496],
[358,389,0,378,443,463,401,400],
[418,464,513,0,455,476,479,469],
[427,409,448,436,0,448,477,436],
[390,366,428,415,443,0,434,424],
[393,393,490,412,414,457,0,424],
[397,395,491,422,455,467,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,457,470,424,489,455,452],
[434,0,439,467,417,438,431,461],
[434,452,0,483,422,468,429,464],
[421,424,408,0,412,432,423,463],
[467,474,469,479,0,447,443,502],
[402,453,423,459,444,0,433,484],
[436,460,462,468,448,458,0,485],
[439,430,427,428,389,407,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,453,497,425,393,416,449],
[392,0,411,361,319,393,282,324],
[438,480,0,490,384,360,354,422],
[394,530,401,0,358,424,390,345],
[466,572,507,533,0,498,410,455],
[498,498,531,467,393,0,375,439],
[475,609,537,501,481,516,0,423],
[442,567,469,546,436,452,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,443,462,446,469,470,456],
[426,0,425,428,415,431,449,407],
[448,466,0,453,428,457,466,442],
[429,463,438,0,443,467,485,465],
[445,476,463,448,0,461,472,435],
[422,460,434,424,430,0,446,446],
[421,442,425,406,419,445,0,423],
[435,484,449,426,456,445,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,448,536,512,495,545,405],
[362,0,360,459,429,363,431,394],
[443,531,0,463,416,437,461,325],
[355,432,428,0,446,406,477,330],
[379,462,475,445,0,477,496,421],
[396,528,454,485,414,0,497,473],
[346,460,430,414,395,394,0,405],
[486,497,566,561,470,418,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,449,511,458,456,427,451],
[427,0,488,459,476,429,457,454],
[442,403,0,469,419,427,390,435],
[380,432,422,0,411,388,386,397],
[433,415,472,480,0,459,421,432],
[435,462,464,503,432,0,432,408],
[464,434,501,505,470,459,0,465],
[440,437,456,494,459,483,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,437,449,431,438,415,432],
[448,0,396,467,477,419,453,468],
[454,495,0,461,483,482,442,459],
[442,424,430,0,456,429,411,445],
[460,414,408,435,0,427,415,437],
[453,472,409,462,464,0,427,467],
[476,438,449,480,476,464,0,492],
[459,423,432,446,454,424,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,446,436,431,459,446,429],
[456,0,454,434,442,473,437,458],
[445,437,0,422,442,450,444,436],
[455,457,469,0,452,464,459,431],
[460,449,449,439,0,468,447,448],
[432,418,441,427,423,0,422,424],
[445,454,447,432,444,469,0,465],
[462,433,455,460,443,467,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,437,446,452,444,421,458],
[453,0,438,432,426,463,434,451],
[454,453,0,454,448,445,453,440],
[445,459,437,0,454,449,425,451],
[439,465,443,437,0,452,443,448],
[447,428,446,442,439,0,422,437],
[470,457,438,466,448,469,0,451],
[433,440,451,440,443,454,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,359,411,501,438,388,411],
[468,0,399,422,462,420,415,421],
[532,492,0,482,510,467,434,460],
[480,469,409,0,464,462,443,467],
[390,429,381,427,0,405,372,391],
[453,471,424,429,486,0,432,444],
[503,476,457,448,519,459,0,425],
[480,470,431,424,500,447,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,453,445,448,445,463,437],
[419,0,431,449,408,421,428,423],
[438,460,0,458,440,430,467,463],
[446,442,433,0,416,416,447,427],
[443,483,451,475,0,456,452,445],
[446,470,461,475,435,0,437,440],
[428,463,424,444,439,454,0,440],
[454,468,428,464,446,451,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,433,406,449,473,501,475],
[458,0,406,456,465,500,492,474],
[458,485,0,434,525,498,524,421],
[485,435,457,0,455,525,508,471],
[442,426,366,436,0,489,460,422],
[418,391,393,366,402,0,439,384],
[390,399,367,383,431,452,0,368],
[416,417,470,420,469,507,523,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,447,432,465,430,439,456],
[447,0,457,442,479,454,475,437],
[444,434,0,437,474,423,464,449],
[459,449,454,0,488,430,476,465],
[426,412,417,403,0,429,442,430],
[461,437,468,461,462,0,465,435],
[452,416,427,415,449,426,0,425],
[435,454,442,426,461,456,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,478,472,480,432,445,460],
[434,0,455,465,466,436,430,419],
[413,436,0,428,431,432,413,411],
[419,426,463,0,460,424,420,441],
[411,425,460,431,0,438,434,440],
[459,455,459,467,453,0,431,440],
[446,461,478,471,457,460,0,429],
[431,472,480,450,451,451,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,436,425,414,489,431],
[438,0,440,425,432,420,481,423],
[451,451,0,448,439,438,469,443],
[455,466,443,0,445,448,477,443],
[466,459,452,446,0,454,443,459],
[477,471,453,443,437,0,473,446],
[402,410,422,414,448,418,0,425],
[460,468,448,448,432,445,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,448,426,445,506,484,485],
[428,0,448,436,444,485,483,439],
[443,443,0,428,428,480,466,427],
[465,455,463,0,440,508,463,412],
[446,447,463,451,0,478,475,437],
[385,406,411,383,413,0,436,370],
[407,408,425,428,416,455,0,404],
[406,452,464,479,454,521,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,438,471,421,420,447,417],
[451,0,441,455,422,435,440,435],
[453,450,0,457,422,449,454,452],
[420,436,434,0,412,423,421,422],
[470,469,469,479,0,452,456,434],
[471,456,442,468,439,0,443,445],
[444,451,437,470,435,448,0,436],
[474,456,439,469,457,446,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,454,464,434,439,459,448],
[450,0,449,454,458,420,460,469],
[437,442,0,444,427,436,454,454],
[427,437,447,0,429,419,437,452],
[457,433,464,462,0,449,472,459],
[452,471,455,472,442,0,471,472],
[432,431,437,454,419,420,0,467],
[443,422,437,439,432,419,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,413,396,429,448,453,413],
[448,0,448,422,428,494,520,489],
[478,443,0,392,477,483,487,450],
[495,469,499,0,429,512,539,453],
[462,463,414,462,0,433,467,508],
[443,397,408,379,458,0,435,438],
[438,371,404,352,424,456,0,438],
[478,402,441,438,383,453,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,421,440,435,426,432,441],
[469,0,441,452,435,408,443,438],
[470,450,0,470,438,447,459,446],
[451,439,421,0,424,435,436,448],
[456,456,453,467,0,442,461,462],
[465,483,444,456,449,0,464,473],
[459,448,432,455,430,427,0,445],
[450,453,445,443,429,418,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,498,459,428,456,463,484],
[434,0,421,417,395,388,416,427],
[393,470,0,425,449,411,477,447],
[432,474,466,0,439,451,445,465],
[463,496,442,452,0,468,498,464],
[435,503,480,440,423,0,470,454],
[428,475,414,446,393,421,0,464],
[407,464,444,426,427,437,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,469,440,449,448,439,450],
[439,0,465,474,436,454,449,464],
[422,426,0,433,445,452,413,462],
[451,417,458,0,428,454,415,456],
[442,455,446,463,0,452,411,445],
[443,437,439,437,439,0,415,445],
[452,442,478,476,480,476,0,463],
[441,427,429,435,446,446,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,372,403,350,370,432,378,422],
[519,0,432,414,404,452,406,468],
[488,459,0,412,442,491,506,466],
[541,477,479,0,421,469,444,474],
[521,487,449,470,0,462,440,443],
[459,439,400,422,429,0,399,427],
[513,485,385,447,451,492,0,432],
[469,423,425,417,448,464,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,446,463,446,447,457,472],
[448,0,434,449,423,428,441,406],
[445,457,0,449,452,476,466,465],
[428,442,442,0,412,456,442,443],
[445,468,439,479,0,447,467,456],
[444,463,415,435,444,0,466,464],
[434,450,425,449,424,425,0,453],
[419,485,426,448,435,427,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,477,441,439,438,460,479],
[442,0,464,437,443,420,440,455],
[414,427,0,392,402,405,419,435],
[450,454,499,0,464,451,445,470],
[452,448,489,427,0,427,436,457],
[453,471,486,440,464,0,436,466],
[431,451,472,446,455,455,0,449],
[412,436,456,421,434,425,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,463,437,498,422,464,450],
[422,0,445,430,503,451,414,426],
[428,446,0,455,524,440,477,477],
[454,461,436,0,509,463,470,463],
[393,388,367,382,0,375,403,401],
[469,440,451,428,516,0,451,470],
[427,477,414,421,488,440,0,457],
[441,465,414,428,490,421,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,427,440,449,443,448,454],
[451,0,420,427,441,431,445,432],
[464,471,0,452,454,442,459,461],
[451,464,439,0,435,450,458,463],
[442,450,437,456,0,459,450,438],
[448,460,449,441,432,0,447,447],
[443,446,432,433,441,444,0,447],
[437,459,430,428,453,444,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,556,450,432,495,406,442],
[432,0,513,440,421,472,456,446],
[335,378,0,380,383,453,381,348],
[441,451,511,0,456,468,457,418],
[459,470,508,435,0,475,458,469],
[396,419,438,423,416,0,421,381],
[485,435,510,434,433,470,0,436],
[449,445,543,473,422,510,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,424,427,448,459,431,417],
[447,0,437,435,474,465,456,432],
[467,454,0,452,458,464,449,442],
[464,456,439,0,466,475,447,461],
[443,417,433,425,0,455,428,440],
[432,426,427,416,436,0,444,434],
[460,435,442,444,463,447,0,447],
[474,459,449,430,451,457,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,470,480,455,460,469,436],
[455,0,426,443,438,421,467,433],
[421,465,0,445,502,439,445,445],
[411,448,446,0,454,423,467,415],
[436,453,389,437,0,434,434,438],
[431,470,452,468,457,0,473,455],
[422,424,446,424,457,418,0,426],
[455,458,446,476,453,436,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,469,409,396,438,431,416],
[436,0,502,468,458,466,453,468],
[422,389,0,399,404,429,400,403],
[482,423,492,0,425,467,423,446],
[495,433,487,466,0,470,457,473],
[453,425,462,424,421,0,427,440],
[460,438,491,468,434,464,0,483],
[475,423,488,445,418,451,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,472,499,456,391,421,437],
[444,0,494,495,458,504,502,445],
[419,397,0,492,389,446,353,401],
[392,396,399,0,362,381,345,381],
[435,433,502,529,0,428,435,426],
[500,387,445,510,463,0,413,438],
[470,389,538,546,456,478,0,482],
[454,446,490,510,465,453,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,480,448,438,442,463,464],
[449,0,476,417,449,439,409,470],
[411,415,0,407,407,435,430,448],
[443,474,484,0,455,464,481,454],
[453,442,484,436,0,445,441,465],
[449,452,456,427,446,0,418,466],
[428,482,461,410,450,473,0,474],
[427,421,443,437,426,425,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,455,414,458,459,470,459],
[423,0,430,421,448,409,448,411],
[436,461,0,439,460,446,452,449],
[477,470,452,0,467,473,460,434],
[433,443,431,424,0,421,441,431],
[432,482,445,418,470,0,459,454],
[421,443,439,431,450,432,0,456],
[432,480,442,457,460,437,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,458,436,452,465,460],
[448,0,444,461,441,447,450,464],
[440,447,0,445,432,427,457,455],
[433,430,446,0,417,445,465,471],
[455,450,459,474,0,464,440,469],
[439,444,464,446,427,0,464,458],
[426,441,434,426,451,427,0,456],
[431,427,436,420,422,433,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,462,450,430,478,453,451],
[418,0,460,446,430,423,446,425],
[429,431,0,447,452,434,430,426],
[441,445,444,0,439,440,471,435],
[461,461,439,452,0,466,480,448],
[413,468,457,451,425,0,433,430],
[438,445,461,420,411,458,0,453],
[440,466,465,456,443,461,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,453,494,417,396,450,464],
[457,0,460,465,452,453,442,443],
[438,431,0,460,401,443,360,459],
[397,426,431,0,413,430,422,439],
[474,439,490,478,0,459,439,490],
[495,438,448,461,432,0,480,490],
[441,449,531,469,452,411,0,463],
[427,448,432,452,401,401,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,462,448,438,432,438,404],
[494,0,476,470,453,417,444,466],
[429,415,0,433,400,407,427,415],
[443,421,458,0,428,420,450,415],
[453,438,491,463,0,472,473,437],
[459,474,484,471,419,0,467,435],
[453,447,464,441,418,424,0,422],
[487,425,476,476,454,456,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,452,427,417,422,410,452],
[455,0,453,434,438,443,417,413],
[439,438,0,447,407,404,438,424],
[464,457,444,0,440,421,428,418],
[474,453,484,451,0,453,460,422],
[469,448,487,470,438,0,459,463],
[481,474,453,463,431,432,0,465],
[439,478,467,473,469,428,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,423,428,458,432,387,422],
[438,0,445,446,475,450,414,433],
[468,446,0,439,477,446,410,420],
[463,445,452,0,462,438,425,447],
[433,416,414,429,0,438,401,419],
[459,441,445,453,453,0,415,449],
[504,477,481,466,490,476,0,444],
[469,458,471,444,472,442,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,315,439,271,405,433,425,345],
[576,0,433,480,503,459,508,407],
[452,458,0,393,553,487,555,491],
[620,411,498,0,562,573,620,486],
[486,388,338,329,0,457,493,526],
[458,432,404,318,434,0,451,393],
[466,383,336,271,398,440,0,457],
[546,484,400,405,365,498,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,439,434,459,446,358,408],
[465,0,463,444,460,413,372,411],
[452,428,0,419,450,422,380,456],
[457,447,472,0,461,401,397,438],
[432,431,441,430,0,372,454,441],
[445,478,469,490,519,0,467,482],
[533,519,511,494,437,424,0,463],
[483,480,435,453,450,409,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,463,421,460,459,447,471],
[473,0,462,439,455,468,502,481],
[428,429,0,425,425,431,462,446],
[470,452,466,0,434,459,471,452],
[431,436,466,457,0,442,486,465],
[432,423,460,432,449,0,459,457],
[444,389,429,420,405,432,0,441],
[420,410,445,439,426,434,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,469,442,445,465,471,462],
[444,0,439,429,445,417,420,462],
[422,452,0,457,438,422,442,459],
[449,462,434,0,450,460,434,445],
[446,446,453,441,0,459,452,484],
[426,474,469,431,432,0,462,463],
[420,471,449,457,439,429,0,461],
[429,429,432,446,407,428,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,458,440,452,449,466,454],
[433,0,449,455,452,466,443,438],
[433,442,0,438,464,439,439,448],
[451,436,453,0,430,445,425,438],
[439,439,427,461,0,415,431,456],
[442,425,452,446,476,0,444,448],
[425,448,452,466,460,447,0,451],
[437,453,443,453,435,443,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,471,411,433,446,466,433],
[429,0,423,421,463,428,460,403],
[420,468,0,438,454,477,435,401],
[480,470,453,0,442,447,454,446],
[458,428,437,449,0,444,446,423],
[445,463,414,444,447,0,441,450],
[425,431,456,437,445,450,0,421],
[458,488,490,445,468,441,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,445,462,431,413,485,454],
[421,0,404,457,393,444,481,434],
[446,487,0,523,394,483,469,556],
[429,434,368,0,455,447,427,409],
[460,498,497,436,0,472,516,512],
[478,447,408,444,419,0,491,479],
[406,410,422,464,375,400,0,408],
[437,457,335,482,379,412,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,457,396,414,443,384,349],
[489,0,479,460,429,501,457,451],
[434,412,0,408,394,467,412,394],
[495,431,483,0,424,482,430,427],
[477,462,497,467,0,529,444,438],
[448,390,424,409,362,0,391,357],
[507,434,479,461,447,500,0,420],
[542,440,497,464,453,534,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,483,465,462,448,439,479],
[403,0,456,412,449,440,433,424],
[408,435,0,438,442,447,430,424],
[426,479,453,0,444,418,454,443],
[429,442,449,447,0,428,456,423],
[443,451,444,473,463,0,453,440],
[452,458,461,437,435,438,0,430],
[412,467,467,448,468,451,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,414,451,411,484,432,444],
[433,0,397,443,439,483,437,420],
[477,494,0,450,439,482,451,438],
[440,448,441,0,429,495,423,451],
[480,452,452,462,0,463,443,433],
[407,408,409,396,428,0,440,415],
[459,454,440,468,448,451,0,438],
[447,471,453,440,458,476,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,452,416,433,444,431,426],
[453,0,460,455,457,465,444,449],
[439,431,0,404,437,446,428,431],
[475,436,487,0,477,462,455,453],
[458,434,454,414,0,445,439,435],
[447,426,445,429,446,0,437,430],
[460,447,463,436,452,454,0,443],
[465,442,460,438,456,461,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,522,416,410,542,483,419],
[454,0,483,517,482,407,329,459],
[369,408,0,382,435,335,315,328],
[475,374,509,0,402,485,489,429],
[481,409,456,489,0,509,347,441],
[349,484,556,406,382,0,445,289],
[408,562,576,402,544,446,0,472],
[472,432,563,462,450,602,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,420,446,441,418,422,449],
[437,0,446,430,505,460,474,460],
[471,445,0,436,448,431,443,427],
[445,461,455,0,468,440,443,448],
[450,386,443,423,0,407,415,419],
[473,431,460,451,484,0,453,450],
[469,417,448,448,476,438,0,435],
[442,431,464,443,472,441,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,470,469,484,444,474,470],
[418,0,432,456,458,442,461,421],
[421,459,0,456,462,451,439,444],
[422,435,435,0,429,433,417,425],
[407,433,429,462,0,439,419,432],
[447,449,440,458,452,0,435,434],
[417,430,452,474,472,456,0,470],
[421,470,447,466,459,457,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,484,439,465,501,455,477],
[375,0,409,389,397,453,411,466],
[407,482,0,453,426,490,489,406],
[452,502,438,0,481,487,456,467],
[426,494,465,410,0,454,411,447],
[390,438,401,404,437,0,345,439],
[436,480,402,435,480,546,0,466],
[414,425,485,424,444,452,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,380,394,421,505,447,434,352],
[511,0,516,491,384,605,543,373],
[497,375,0,409,299,507,492,355],
[470,400,482,0,550,552,413,396],
[386,507,592,341,0,476,435,378],
[444,286,384,339,415,0,436,248],
[457,348,399,478,456,455,0,464],
[539,518,536,495,513,643,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,446,445,432,432,444,455],
[448,0,454,460,451,428,441,464],
[445,437,0,438,446,464,451,452],
[446,431,453,0,451,444,434,448],
[459,440,445,440,0,452,436,441],
[459,463,427,447,439,0,456,445],
[447,450,440,457,455,435,0,446],
[436,427,439,443,450,446,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,461,454,472,433,438,449],
[428,0,451,455,448,420,427,426],
[430,440,0,456,457,443,437,431],
[437,436,435,0,454,437,430,446],
[419,443,434,437,0,422,410,426],
[458,471,448,454,469,0,440,453],
[453,464,454,461,481,451,0,439],
[442,465,460,445,465,438,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,447,442,390,407,453,415],
[418,0,467,442,380,420,453,418],
[444,424,0,399,448,421,453,391],
[449,449,492,0,469,444,485,432],
[501,511,443,422,0,436,485,463],
[484,471,470,447,455,0,506,435],
[438,438,438,406,406,385,0,434],
[476,473,500,459,428,456,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,450,451,453,459,479,479],
[481,0,435,458,466,475,473,463],
[441,456,0,436,468,449,488,439],
[440,433,455,0,466,470,452,459],
[438,425,423,425,0,465,460,448],
[432,416,442,421,426,0,413,449],
[412,418,403,439,431,478,0,435],
[412,428,452,432,443,442,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,591,388,480,408,348,393,498],
[300,0,417,318,301,366,302,410],
[503,474,0,455,486,406,387,399],
[411,573,436,0,444,471,391,434],
[483,590,405,447,0,513,385,329],
[543,525,485,420,378,0,401,361],
[498,589,504,500,506,490,0,416],
[393,481,492,457,562,530,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,466,435,429,462,416,452],
[451,0,471,443,451,464,455,449],
[425,420,0,451,424,450,416,446],
[456,448,440,0,438,455,469,457],
[462,440,467,453,0,473,454,448],
[429,427,441,436,418,0,430,452],
[475,436,475,422,437,461,0,460],
[439,442,445,434,443,439,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,462,452,451,473,424,441],
[438,0,452,489,458,483,453,466],
[429,439,0,460,415,509,429,425],
[439,402,431,0,424,487,422,450],
[440,433,476,467,0,491,446,450],
[418,408,382,404,400,0,343,410],
[467,438,462,469,445,548,0,437],
[450,425,466,441,441,481,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,355,397,426,392,421,403,439],
[536,0,425,500,465,529,460,432],
[494,466,0,519,446,464,434,488],
[465,391,372,0,389,413,407,449],
[499,426,445,502,0,553,480,468],
[470,362,427,478,338,0,470,429],
[488,431,457,484,411,421,0,456],
[452,459,403,442,423,462,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,423,435,398,442,437,413],
[458,0,407,465,423,449,387,440],
[468,484,0,489,454,440,455,456],
[456,426,402,0,430,441,409,421],
[493,468,437,461,0,481,460,450],
[449,442,451,450,410,0,426,435],
[454,504,436,482,431,465,0,457],
[478,451,435,470,441,456,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,431,457,433,452,437,435],
[472,0,460,460,447,457,437,443],
[460,431,0,461,463,451,437,422],
[434,431,430,0,435,453,434,417],
[458,444,428,456,0,476,453,421],
[439,434,440,438,415,0,443,450],
[454,454,454,457,438,448,0,450],
[456,448,469,474,470,441,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,470,431,448,430,446,423],
[456,0,464,446,443,451,441,463],
[421,427,0,440,438,431,420,412],
[460,445,451,0,430,463,448,433],
[443,448,453,461,0,441,446,414],
[461,440,460,428,450,0,447,449],
[445,450,471,443,445,444,0,448],
[468,428,479,458,477,442,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,460,447,452,412,449,457],
[435,0,442,433,460,429,425,447],
[431,449,0,433,417,423,410,433],
[444,458,458,0,451,419,434,451],
[439,431,474,440,0,443,414,440],
[479,462,468,472,448,0,424,458],
[442,466,481,457,477,467,0,467],
[434,444,458,440,451,433,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,437,443,459,427,474,453],
[445,0,464,449,444,445,454,465],
[454,427,0,444,465,437,464,444],
[448,442,447,0,458,452,459,452],
[432,447,426,433,0,439,457,430],
[464,446,454,439,452,0,477,445],
[417,437,427,432,434,414,0,418],
[438,426,447,439,461,446,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,449,525,499,492,445,457],
[403,0,411,445,500,467,446,461],
[442,480,0,493,438,477,451,483],
[366,446,398,0,440,453,432,401],
[392,391,453,451,0,479,413,435],
[399,424,414,438,412,0,386,449],
[446,445,440,459,478,505,0,497],
[434,430,408,490,456,442,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,447,461,435,480,464,449],
[452,0,457,471,442,485,455,438],
[444,434,0,472,469,464,438,436],
[430,420,419,0,412,451,410,438],
[456,449,422,479,0,473,433,458],
[411,406,427,440,418,0,407,429],
[427,436,453,481,458,484,0,435],
[442,453,455,453,433,462,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,434,441,430,480,464,459],
[439,0,431,443,449,466,461,474],
[457,460,0,445,413,460,472,463],
[450,448,446,0,439,456,454,479],
[461,442,478,452,0,461,464,450],
[411,425,431,435,430,0,456,438],
[427,430,419,437,427,435,0,461],
[432,417,428,412,441,453,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,387,384,420,446,374,410],
[499,0,434,467,449,516,444,472],
[504,457,0,463,484,492,427,447],
[507,424,428,0,471,503,429,437],
[471,442,407,420,0,475,408,452],
[445,375,399,388,416,0,393,390],
[517,447,464,462,483,498,0,439],
[481,419,444,454,439,501,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,452,469,444,460,452,444],
[443,0,466,444,451,447,441,483],
[439,425,0,452,453,428,436,451],
[422,447,439,0,432,440,424,446],
[447,440,438,459,0,431,450,460],
[431,444,463,451,460,0,460,454],
[439,450,455,467,441,431,0,457],
[447,408,440,445,431,437,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,431,466,458,448,457,447],
[406,0,445,442,440,436,454,441],
[460,446,0,435,454,430,459,428],
[425,449,456,0,454,422,432,426],
[433,451,437,437,0,422,427,423],
[443,455,461,469,469,0,450,440],
[434,437,432,459,464,441,0,433],
[444,450,463,465,468,451,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,442,469,467,447,454,470],
[457,0,448,466,454,452,438,462],
[449,443,0,491,473,446,440,445],
[422,425,400,0,437,426,442,435],
[424,437,418,454,0,436,432,442],
[444,439,445,465,455,0,455,444],
[437,453,451,449,459,436,0,439],
[421,429,446,456,449,447,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,434,435,445,458,454,441],
[457,0,435,446,450,455,461,451],
[457,456,0,439,461,441,450,445],
[456,445,452,0,454,453,464,456],
[446,441,430,437,0,452,452,442],
[433,436,450,438,439,0,441,438],
[437,430,441,427,439,450,0,443],
[450,440,446,435,449,453,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,483,426,457,461,460,495],
[433,0,486,427,441,430,472,495],
[408,405,0,406,419,409,437,450],
[465,464,485,0,446,449,444,481],
[434,450,472,445,0,427,450,473],
[430,461,482,442,464,0,471,494],
[431,419,454,447,441,420,0,463],
[396,396,441,410,418,397,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,436,507,427,435,436],
[452,0,420,398,446,444,423,437],
[451,471,0,443,529,446,456,485],
[455,493,448,0,513,399,387,471],
[384,445,362,378,0,355,280,381],
[464,447,445,492,536,0,440,416],
[456,468,435,504,611,451,0,515],
[455,454,406,420,510,475,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,361,408,414,463,413,421,401],
[530,0,434,447,463,470,491,469],
[483,457,0,402,466,429,475,440],
[477,444,489,0,490,441,450,440],
[428,428,425,401,0,403,434,401],
[478,421,462,450,488,0,476,425],
[470,400,416,441,457,415,0,415],
[490,422,451,451,490,466,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,464,455,460,479,440,449],
[450,0,454,445,441,451,443,428],
[427,437,0,438,425,446,426,449],
[436,446,453,0,475,464,458,425],
[431,450,466,416,0,459,432,440],
[412,440,445,427,432,0,399,433],
[451,448,465,433,459,492,0,478],
[442,463,442,466,451,458,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,478,429,452,430,480,464],
[435,0,455,438,473,425,489,445],
[413,436,0,413,443,427,441,421],
[462,453,478,0,461,436,475,484],
[439,418,448,430,0,430,512,443],
[461,466,464,455,461,0,478,429],
[411,402,450,416,379,413,0,392],
[427,446,470,407,448,462,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,469,480,449,460,445,451],
[416,0,464,418,395,444,456,411],
[422,427,0,476,425,469,436,429],
[411,473,415,0,399,385,405,421],
[442,496,466,492,0,511,489,439],
[431,447,422,506,380,0,442,420],
[446,435,455,486,402,449,0,422],
[440,480,462,470,452,471,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,528,306,556,387,387,435,473],
[363,0,236,440,336,391,255,317],
[585,655,0,546,396,486,575,572],
[335,451,345,0,389,413,473,353],
[504,555,495,502,0,353,492,428],
[504,500,405,478,538,0,378,400],
[456,636,316,418,399,513,0,389],
[418,574,319,538,463,491,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,445,437,455,448,437,448],
[463,0,454,423,425,469,448,458],
[446,437,0,391,434,480,412,428],
[454,468,500,0,478,453,440,449],
[436,466,457,413,0,486,425,413],
[443,422,411,438,405,0,446,430],
[454,443,479,451,466,445,0,456],
[443,433,463,442,478,461,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,461,469,478,537,591,418],
[383,0,437,375,497,496,482,455],
[430,454,0,443,493,552,497,445],
[422,516,448,0,414,572,569,486],
[413,394,398,477,0,569,482,442],
[354,395,339,319,322,0,450,429],
[300,409,394,322,409,441,0,364],
[473,436,446,405,449,462,527,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,435,421,435,442,434,428],
[451,0,432,452,440,431,430,434],
[456,459,0,460,424,441,428,442],
[470,439,431,0,445,445,429,443],
[456,451,467,446,0,470,428,447],
[449,460,450,446,421,0,430,435],
[457,461,463,462,463,461,0,435],
[463,457,449,448,444,456,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,452,426,434,430,441,434],
[455,0,443,448,426,404,442,447],
[439,448,0,442,430,459,461,443],
[465,443,449,0,429,429,426,428],
[457,465,461,462,0,436,459,448],
[461,487,432,462,455,0,447,441],
[450,449,430,465,432,444,0,430],
[457,444,448,463,443,450,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,403,452,436,411,401,441],
[442,0,409,422,402,465,452,454],
[488,482,0,451,435,481,430,429],
[439,469,440,0,397,450,416,413],
[455,489,456,494,0,449,445,441],
[480,426,410,441,442,0,404,465],
[490,439,461,475,446,487,0,483],
[450,437,462,478,450,426,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,449,444,451,439,450,442],
[454,0,439,442,444,446,455,455],
[442,452,0,433,443,435,441,434],
[447,449,458,0,453,443,462,438],
[440,447,448,438,0,445,445,446],
[452,445,456,448,446,0,454,443],
[441,436,450,429,446,437,0,440],
[449,436,457,453,445,448,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,441,390,403,421,470,442],
[443,0,449,445,432,466,478,385],
[450,442,0,461,453,502,451,393],
[501,446,430,0,429,428,485,454],
[488,459,438,462,0,469,484,409],
[470,425,389,463,422,0,446,414],
[421,413,440,406,407,445,0,439],
[449,506,498,437,482,477,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,488,466,472,399,417,422],
[499,0,456,472,500,400,474,474],
[403,435,0,467,444,404,417,445],
[425,419,424,0,490,427,418,418],
[419,391,447,401,0,434,393,398],
[492,491,487,464,457,0,455,427],
[474,417,474,473,498,436,0,441],
[469,417,446,473,493,464,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,424,411,446,462,426,479],
[484,0,435,473,484,481,465,469],
[467,456,0,430,453,458,422,459],
[480,418,461,0,478,452,433,455],
[445,407,438,413,0,426,394,440],
[429,410,433,439,465,0,405,449],
[465,426,469,458,497,486,0,506],
[412,422,432,436,451,442,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,427,453,479,434,470,467],
[422,0,433,431,452,445,440,446],
[464,458,0,445,476,447,473,469],
[438,460,446,0,496,452,470,483],
[412,439,415,395,0,410,444,453],
[457,446,444,439,481,0,461,457],
[421,451,418,421,447,430,0,444],
[424,445,422,408,438,434,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,428,431,431,449,420,439],
[441,0,432,449,461,475,459,432],
[463,459,0,477,428,468,444,451],
[460,442,414,0,435,459,429,434],
[460,430,463,456,0,456,437,450],
[442,416,423,432,435,0,395,406],
[471,432,447,462,454,496,0,466],
[452,459,440,457,441,485,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,427,454,458,471,488,494],
[416,0,420,444,413,429,446,420],
[464,471,0,474,445,462,463,495],
[437,447,417,0,442,451,442,456],
[433,478,446,449,0,468,454,470],
[420,462,429,440,423,0,433,462],
[403,445,428,449,437,458,0,446],
[397,471,396,435,421,429,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,443,460,487,443,432,519],
[439,0,449,436,410,455,453,473],
[448,442,0,465,489,423,435,473],
[431,455,426,0,469,417,442,426],
[404,481,402,422,0,423,414,471],
[448,436,468,474,468,0,419,524],
[459,438,456,449,477,472,0,504],
[372,418,418,465,420,367,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,462,454,480,436,442,458],
[405,0,374,421,405,426,424,380],
[429,517,0,442,435,430,453,409],
[437,470,449,0,420,428,421,413],
[411,486,456,471,0,416,463,454],
[455,465,461,463,475,0,435,459],
[449,467,438,470,428,456,0,477],
[433,511,482,478,437,432,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,447,442,445,440,452,456],
[483,0,424,423,456,455,465,454],
[444,467,0,448,467,416,501,469],
[449,468,443,0,454,437,461,458],
[446,435,424,437,0,429,425,426],
[451,436,475,454,462,0,461,439],
[439,426,390,430,466,430,0,467],
[435,437,422,433,465,452,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,439,455,458,471,419,441],
[433,0,394,430,438,426,341,452],
[452,497,0,511,475,461,438,458],
[436,461,380,0,423,416,447,456],
[433,453,416,468,0,428,392,417],
[420,465,430,475,463,0,414,442],
[472,550,453,444,499,477,0,408],
[450,439,433,435,474,449,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,439,486,438,417,475,425],
[425,0,470,489,435,463,470,457],
[452,421,0,498,451,459,474,437],
[405,402,393,0,395,392,419,421],
[453,456,440,496,0,465,476,441],
[474,428,432,499,426,0,447,429],
[416,421,417,472,415,444,0,416],
[466,434,454,470,450,462,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,407,488,472,448,442,530],
[394,0,412,488,464,446,392,413],
[484,479,0,413,469,425,435,461],
[403,403,478,0,405,410,430,459],
[419,427,422,486,0,394,448,483],
[443,445,466,481,497,0,464,490],
[449,499,456,461,443,427,0,468],
[361,478,430,432,408,401,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,492,445,420,416,458,439],
[428,0,457,450,440,462,419,448],
[399,434,0,446,416,437,398,416],
[446,441,445,0,458,431,435,437],
[471,451,475,433,0,440,420,451],
[475,429,454,460,451,0,412,453],
[433,472,493,456,471,479,0,465],
[452,443,475,454,440,438,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,474,467,447,454,484,435],
[463,0,472,483,444,440,468,454],
[417,419,0,434,426,437,482,437],
[424,408,457,0,415,442,462,447],
[444,447,465,476,0,442,497,452],
[437,451,454,449,449,0,496,422],
[407,423,409,429,394,395,0,371],
[456,437,454,444,439,469,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,383,367,411,425,384,397,438],
[508,0,438,490,446,427,461,462],
[524,453,0,446,444,454,465,423],
[480,401,445,0,463,396,439,436],
[466,445,447,428,0,426,428,431],
[507,464,437,495,465,0,475,476],
[494,430,426,452,463,416,0,451],
[453,429,468,455,460,415,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,459,458,443,479,462,449],
[435,0,434,450,462,470,425,424],
[432,457,0,453,468,489,432,436],
[433,441,438,0,471,456,427,407],
[448,429,423,420,0,465,453,417],
[412,421,402,435,426,0,418,415],
[429,466,459,464,438,473,0,437],
[442,467,455,484,474,476,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,413,421,460,418,480,477],
[476,0,381,377,443,379,440,397],
[478,510,0,431,407,451,480,427],
[470,514,460,0,416,457,469,461],
[431,448,484,475,0,384,467,467],
[473,512,440,434,507,0,463,457],
[411,451,411,422,424,428,0,454],
[414,494,464,430,424,434,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,420,458,417,434,450,427],
[455,0,443,465,443,441,438,440],
[471,448,0,473,434,443,453,478],
[433,426,418,0,423,425,429,430],
[474,448,457,468,0,443,440,451],
[457,450,448,466,448,0,442,461],
[441,453,438,462,451,449,0,446],
[464,451,413,461,440,430,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,449,418,460,488,457,448],
[469,0,451,445,493,489,455,476],
[442,440,0,480,455,437,472,468],
[473,446,411,0,447,456,463,470],
[431,398,436,444,0,472,463,461],
[403,402,454,435,419,0,420,425],
[434,436,419,428,428,471,0,437],
[443,415,423,421,430,466,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,471,416,460,454,440,477],
[480,0,484,419,449,452,461,484],
[420,407,0,393,410,412,383,437],
[475,472,498,0,469,477,425,498],
[431,442,481,422,0,458,428,484],
[437,439,479,414,433,0,428,462],
[451,430,508,466,463,463,0,501],
[414,407,454,393,407,429,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,392,411,413,389,425,439],
[454,0,396,384,449,373,417,398],
[499,495,0,463,453,406,513,462],
[480,507,428,0,468,435,482,468],
[478,442,438,423,0,431,485,439],
[502,518,485,456,460,0,489,432],
[466,474,378,409,406,402,0,442],
[452,493,429,423,452,459,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,446,476,492,370,379,539],
[474,0,574,300,478,479,541,590],
[445,317,0,335,401,377,321,473],
[415,591,556,0,513,570,459,556],
[399,413,490,378,0,361,351,466],
[521,412,514,321,530,0,321,560],
[512,350,570,432,540,570,0,635],
[352,301,418,335,425,331,256,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,417,424,474,439,396,483],
[477,0,462,423,440,454,460,522],
[474,429,0,435,449,414,429,482],
[467,468,456,0,459,465,417,512],
[417,451,442,432,0,470,405,501],
[452,437,477,426,421,0,418,496],
[495,431,462,474,486,473,0,513],
[408,369,409,379,390,395,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,458,466,457,440,443,450],
[422,0,445,455,426,420,413,430],
[433,446,0,436,430,439,435,419],
[425,436,455,0,424,422,411,421],
[434,465,461,467,0,467,455,430],
[451,471,452,469,424,0,429,433],
[448,478,456,480,436,462,0,439],
[441,461,472,470,461,458,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,430,457,463,451,467,494],
[447,0,443,476,468,423,450,412],
[461,448,0,453,446,407,423,462],
[434,415,438,0,450,374,434,429],
[428,423,445,441,0,410,407,455],
[440,468,484,517,481,0,497,486],
[424,441,468,457,484,394,0,458],
[397,479,429,462,436,405,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,430,484,399,473,452,442],
[487,0,444,502,442,473,499,519],
[461,447,0,444,453,455,539,483],
[407,389,447,0,412,474,415,451],
[492,449,438,479,0,501,470,454],
[418,418,436,417,390,0,415,379],
[439,392,352,476,421,476,0,445],
[449,372,408,440,437,512,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,448,446,444,456,428,451],
[426,0,455,431,427,443,415,442],
[443,436,0,427,422,424,421,445],
[445,460,464,0,451,436,428,442],
[447,464,469,440,0,455,469,464],
[435,448,467,455,436,0,437,465],
[463,476,470,463,422,454,0,467],
[440,449,446,449,427,426,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,422,457,451,430,444,437],
[428,0,420,449,417,429,428,410],
[469,471,0,459,418,454,438,451],
[434,442,432,0,448,408,440,447],
[440,474,473,443,0,445,468,413],
[461,462,437,483,446,0,473,445],
[447,463,453,451,423,418,0,446],
[454,481,440,444,478,446,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,396,413,454,457,410,432],
[471,0,405,433,449,453,455,435],
[495,486,0,440,448,485,433,458],
[478,458,451,0,467,482,471,440],
[437,442,443,424,0,451,477,452],
[434,438,406,409,440,0,467,435],
[481,436,458,420,414,424,0,449],
[459,456,433,451,439,456,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,448,466,445,448,464],
[432,0,430,448,459,434,448,438],
[429,461,0,440,452,461,452,431],
[443,443,451,0,445,438,436,443],
[425,432,439,446,0,441,428,447],
[446,457,430,453,450,0,449,449],
[443,443,439,455,463,442,0,434],
[427,453,460,448,444,442,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,451,474,458,420,500,463],
[441,0,437,479,457,434,472,467],
[440,454,0,490,441,457,459,480],
[417,412,401,0,408,442,434,448],
[433,434,450,483,0,448,464,462],
[471,457,434,449,443,0,460,454],
[391,419,432,457,427,431,0,437],
[428,424,411,443,429,437,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,476,461,443,467,459,464],
[463,0,474,461,463,438,456,442],
[415,417,0,459,439,459,440,436],
[430,430,432,0,411,433,443,414],
[448,428,452,480,0,469,476,418],
[424,453,432,458,422,0,441,425],
[432,435,451,448,415,450,0,435],
[427,449,455,477,473,466,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,422,333,421,379,384,377],
[402,0,349,297,381,359,309,335],
[469,542,0,407,506,466,481,460],
[558,594,484,0,495,557,441,517],
[470,510,385,396,0,531,429,391],
[512,532,425,334,360,0,409,449],
[507,582,410,450,462,482,0,461],
[514,556,431,374,500,442,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,403,413,388,440,401,370],
[481,0,414,445,400,437,447,425],
[488,477,0,441,433,465,461,403],
[478,446,450,0,447,480,445,463],
[503,491,458,444,0,407,480,420],
[451,454,426,411,484,0,430,428],
[490,444,430,446,411,461,0,437],
[521,466,488,428,471,463,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,440,441,435,452,457,432],
[458,0,459,443,485,457,455,451],
[451,432,0,450,429,472,456,459],
[450,448,441,0,443,460,461,457],
[456,406,462,448,0,439,442,455],
[439,434,419,431,452,0,447,437],
[434,436,435,430,449,444,0,436],
[459,440,432,434,436,454,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,464,461,442,442,455,473],
[457,0,458,442,468,449,457,473],
[427,433,0,430,447,432,436,459],
[430,449,461,0,456,466,438,469],
[449,423,444,435,0,437,411,438],
[449,442,459,425,454,0,440,469],
[436,434,455,453,480,451,0,475],
[418,418,432,422,453,422,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,501,507,389,482,496,418],
[416,0,542,493,429,489,535,444],
[390,349,0,487,431,516,462,371],
[384,398,404,0,471,472,494,481],
[502,462,460,420,0,575,525,462],
[409,402,375,419,316,0,428,398],
[395,356,429,397,366,463,0,439],
[473,447,520,410,429,493,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,455,454,408,481,439,447],
[455,0,458,463,430,487,461,444],
[436,433,0,466,448,480,435,441],
[437,428,425,0,430,470,439,446],
[483,461,443,461,0,467,459,453],
[410,404,411,421,424,0,435,440],
[452,430,456,452,432,456,0,462],
[444,447,450,445,438,451,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,376,361,494,317,612,494,434],
[515,0,580,246,202,503,218,374],
[530,311,0,518,356,518,372,389],
[397,645,373,0,481,642,630,514],
[574,689,535,410,0,667,371,433],
[279,388,373,249,224,0,210,396],
[397,673,519,261,520,681,0,415],
[457,517,502,377,458,495,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,425,449,450,444,478,468],
[466,0,459,431,453,466,477,476],
[466,432,0,472,456,447,483,465],
[442,460,419,0,461,448,459,453],
[441,438,435,430,0,432,470,456],
[447,425,444,443,459,0,439,440],
[413,414,408,432,421,452,0,422],
[423,415,426,438,435,451,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,334,369,306,358,424,321,341],
[557,0,438,338,441,482,432,425],
[522,453,0,345,483,469,435,435],
[585,553,546,0,430,609,461,482],
[533,450,408,461,0,562,521,431],
[467,409,422,282,329,0,309,345],
[570,459,456,430,370,582,0,412],
[550,466,456,409,460,546,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,444,459,462,426,445,435],
[447,0,446,468,438,438,440,438],
[447,445,0,464,452,446,431,443],
[432,423,427,0,452,404,435,453],
[429,453,439,439,0,432,425,445],
[465,453,445,487,459,0,461,445],
[446,451,460,456,466,430,0,446],
[456,453,448,438,446,446,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,438,406,432,406,434,434],
[439,0,426,460,464,407,429,405],
[453,465,0,412,442,410,387,468],
[485,431,479,0,429,468,460,435],
[459,427,449,462,0,438,453,448],
[485,484,481,423,453,0,461,443],
[457,462,504,431,438,430,0,474],
[457,486,423,456,443,448,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,445,437,441,413,432,412],
[459,0,433,453,439,464,408,433],
[446,458,0,445,471,464,427,455],
[454,438,446,0,416,422,468,428],
[450,452,420,475,0,413,424,435],
[478,427,427,469,478,0,479,441],
[459,483,464,423,467,412,0,442],
[479,458,436,463,456,450,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,426,433,436,448,428,450],
[428,0,423,442,456,440,436,447],
[465,468,0,444,502,449,467,450],
[458,449,447,0,439,455,432,431],
[455,435,389,452,0,451,433,459],
[443,451,442,436,440,0,433,442],
[463,455,424,459,458,458,0,464],
[441,444,441,460,432,449,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,451,459,432,436,442,447],
[461,0,454,471,463,450,445,459],
[440,437,0,476,424,434,437,444],
[432,420,415,0,411,403,407,431],
[459,428,467,480,0,455,451,459],
[455,441,457,488,436,0,442,444],
[449,446,454,484,440,449,0,450],
[444,432,447,460,432,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,435,422,438,429,425,447],
[469,0,463,470,480,455,439,471],
[456,428,0,427,464,452,446,453],
[469,421,464,0,448,436,453,454],
[453,411,427,443,0,439,440,438],
[462,436,439,455,452,0,462,437],
[466,452,445,438,451,429,0,457],
[444,420,438,437,453,454,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,452,402,424,439,432,449],
[491,0,497,455,441,450,450,449],
[439,394,0,388,417,398,416,426],
[489,436,503,0,454,457,485,464],
[467,450,474,437,0,426,438,446],
[452,441,493,434,465,0,458,449],
[459,441,475,406,453,433,0,453],
[442,442,465,427,445,442,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,459,452,418,422,433,429],
[459,0,449,469,439,497,469,465],
[432,442,0,455,449,412,454,449],
[439,422,436,0,430,409,436,431],
[473,452,442,461,0,449,452,455],
[469,394,479,482,442,0,439,434],
[458,422,437,455,439,452,0,464],
[462,426,442,460,436,457,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,459,450,426,455,451,436],
[438,0,446,456,441,466,442,425],
[432,445,0,454,460,474,446,444],
[441,435,437,0,453,450,453,443],
[465,450,431,438,0,464,444,470],
[436,425,417,441,427,0,439,416],
[440,449,445,438,447,452,0,454],
[455,466,447,448,421,475,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,444,376,348,406,426,476],
[441,0,513,453,470,458,517,489],
[447,378,0,398,432,460,396,498],
[515,438,493,0,474,466,453,503],
[543,421,459,417,0,459,492,531],
[485,433,431,425,432,0,479,516],
[465,374,495,438,399,412,0,502],
[415,402,393,388,360,375,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,377,454,414,465,448,485],
[396,0,445,448,424,451,475,460],
[514,446,0,458,431,468,461,504],
[437,443,433,0,432,462,436,485],
[477,467,460,459,0,458,434,484],
[426,440,423,429,433,0,443,452],
[443,416,430,455,457,448,0,474],
[406,431,387,406,407,439,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,401,457,500,430,419,435],
[471,0,442,494,487,467,472,476],
[490,449,0,495,513,438,448,509],
[434,397,396,0,416,431,446,477],
[391,404,378,475,0,442,374,435],
[461,424,453,460,449,0,408,461],
[472,419,443,445,517,483,0,469],
[456,415,382,414,456,430,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,433,438,477,467,473,468],
[436,0,471,452,484,462,417,457],
[458,420,0,450,476,450,438,436],
[453,439,441,0,504,467,461,451],
[414,407,415,387,0,422,404,392],
[424,429,441,424,469,0,457,419],
[418,474,453,430,487,434,0,447],
[423,434,455,440,499,472,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,430,440,451,448,454,455],
[465,0,449,428,461,449,438,427],
[461,442,0,458,469,465,467,472],
[451,463,433,0,451,461,462,458],
[440,430,422,440,0,428,443,444],
[443,442,426,430,463,0,461,448],
[437,453,424,429,448,430,0,432],
[436,464,419,433,447,443,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,443,493,427,527,419,489],
[441,0,446,492,454,468,424,421],
[448,445,0,468,390,452,452,496],
[398,399,423,0,400,440,378,342],
[464,437,501,491,0,490,435,450],
[364,423,439,451,401,0,376,363],
[472,467,439,513,456,515,0,499],
[402,470,395,549,441,528,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,452,460,431,457,462,454],
[417,0,414,446,452,452,467,417],
[439,477,0,467,447,465,470,451],
[431,445,424,0,416,452,458,439],
[460,439,444,475,0,444,465,420],
[434,439,426,439,447,0,466,459],
[429,424,421,433,426,425,0,428],
[437,474,440,452,471,432,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,456,443,447,454,454,451],
[432,0,445,436,445,436,448,450],
[435,446,0,436,452,445,434,480],
[448,455,455,0,447,424,442,467],
[444,446,439,444,0,430,444,456],
[437,455,446,467,461,0,439,466],
[437,443,457,449,447,452,0,438],
[440,441,411,424,435,425,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,456,415,487,408,524,440],
[453,0,438,474,480,398,464,438],
[435,453,0,404,438,341,390,351],
[476,417,487,0,423,414,446,425],
[404,411,453,468,0,398,339,453],
[483,493,550,477,493,0,365,436],
[367,427,501,445,552,526,0,453],
[451,453,540,466,438,455,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,459,484,449,452,451,428],
[430,0,428,449,432,405,435,396],
[432,463,0,453,457,438,452,448],
[407,442,438,0,440,406,447,423],
[442,459,434,451,0,435,444,450],
[439,486,453,485,456,0,455,453],
[440,456,439,444,447,436,0,437],
[463,495,443,468,441,438,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,456,464,438,444,432,451],
[449,0,447,450,422,427,419,446],
[435,444,0,459,441,422,424,442],
[427,441,432,0,410,420,424,444],
[453,469,450,481,0,449,429,451],
[447,464,469,471,442,0,450,447],
[459,472,467,467,462,441,0,463],
[440,445,449,447,440,444,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,422,418,449,392,410,399],
[476,0,426,442,456,423,424,444],
[469,465,0,448,464,424,456,428],
[473,449,443,0,464,461,452,459],
[442,435,427,427,0,458,436,415],
[499,468,467,430,433,0,440,394],
[481,467,435,439,455,451,0,426],
[492,447,463,432,476,497,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,514,440,452,466,466,476],
[407,0,453,411,423,436,441,442],
[377,438,0,440,422,421,436,449],
[451,480,451,0,434,449,498,432],
[439,468,469,457,0,465,449,444],
[425,455,470,442,426,0,459,444],
[425,450,455,393,442,432,0,422],
[415,449,442,459,447,447,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,470,435,453,471,440,438],
[433,0,417,412,409,454,419,397],
[421,474,0,441,402,465,439,465],
[456,479,450,0,436,500,431,448],
[438,482,489,455,0,480,465,459],
[420,437,426,391,411,0,387,425],
[451,472,452,460,426,504,0,444],
[453,494,426,443,432,466,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,454,471,469,470,460,432],
[421,0,420,439,464,464,434,443],
[437,471,0,441,468,488,456,461],
[420,452,450,0,459,462,430,442],
[422,427,423,432,0,448,429,393],
[421,427,403,429,443,0,415,409],
[431,457,435,461,462,476,0,437],
[459,448,430,449,498,482,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,442,434,446,425,435,410],
[458,0,471,455,457,433,459,420],
[449,420,0,415,422,424,425,408],
[457,436,476,0,450,463,449,430],
[445,434,469,441,0,432,448,425],
[466,458,467,428,459,0,453,454],
[456,432,466,442,443,438,0,447],
[481,471,483,461,466,437,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,420,439,460,460,430,436],
[464,0,454,447,441,452,443,432],
[471,437,0,466,472,472,441,449],
[452,444,425,0,468,459,448,421],
[431,450,419,423,0,438,430,438],
[431,439,419,432,453,0,446,439],
[461,448,450,443,461,445,0,451],
[455,459,442,470,453,452,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,545,369,490,347,469,458],
[488,0,570,418,495,304,388,483],
[346,321,0,227,359,269,454,317],
[522,473,664,0,529,490,494,428],
[401,396,532,362,0,392,437,491],
[544,587,622,401,499,0,548,554],
[422,503,437,397,454,343,0,374],
[433,408,574,463,400,337,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,505,443,475,469,465,467],
[441,0,455,480,490,454,470,461],
[386,436,0,455,404,410,414,464],
[448,411,436,0,416,405,452,421],
[416,401,487,475,0,418,403,453],
[422,437,481,486,473,0,433,458],
[426,421,477,439,488,458,0,474],
[424,430,427,470,438,433,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,480,458,440,425,445,435],
[432,0,467,447,433,430,435,444],
[411,424,0,427,455,433,431,426],
[433,444,464,0,442,416,467,455],
[451,458,436,449,0,456,480,433],
[466,461,458,475,435,0,456,457],
[446,456,460,424,411,435,0,446],
[456,447,465,436,458,434,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,527,430,610,421,429,411],
[422,0,449,439,576,376,500,514],
[364,442,0,499,481,472,483,565],
[461,452,392,0,575,421,395,524],
[281,315,410,316,0,321,326,337],
[470,515,419,470,570,0,438,411],
[462,391,408,496,565,453,0,485],
[480,377,326,367,554,480,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,436,452,393,430,468,404],
[415,0,432,465,393,383,466,423],
[455,459,0,446,396,425,374,382],
[439,426,445,0,373,382,386,387],
[498,498,495,518,0,438,493,491],
[461,508,466,509,453,0,487,418],
[423,425,517,505,398,404,0,408],
[487,468,509,504,400,473,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,447,459,421,441,451,415],
[461,0,435,462,432,450,467,445],
[444,456,0,450,441,437,459,448],
[432,429,441,0,422,429,445,427],
[470,459,450,469,0,441,477,448],
[450,441,454,462,450,0,450,443],
[440,424,432,446,414,441,0,443],
[476,446,443,464,443,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,422,369,446,399,510,452],
[435,0,373,409,476,375,507,395],
[469,518,0,466,570,543,538,434],
[522,482,425,0,470,396,416,446],
[445,415,321,421,0,503,498,455],
[492,516,348,495,388,0,476,467],
[381,384,353,475,393,415,0,384],
[439,496,457,445,436,424,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,393,383,460,471,391,395],
[442,0,447,358,462,478,424,419],
[498,444,0,388,499,535,452,464],
[508,533,503,0,519,440,448,490],
[431,429,392,372,0,398,380,370],
[420,413,356,451,493,0,445,445],
[500,467,439,443,511,446,0,474],
[496,472,427,401,521,446,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,390,413,477,409,393,463,466],
[501,0,441,527,438,470,527,479],
[478,450,0,440,458,436,459,460],
[414,364,451,0,472,448,457,483],
[482,453,433,419,0,451,455,461],
[498,421,455,443,440,0,508,458],
[428,364,432,434,436,383,0,424],
[425,412,431,408,430,433,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,445,466,477,446,445,467],
[450,0,455,464,435,437,450,467],
[446,436,0,466,458,442,451,474],
[425,427,425,0,437,423,435,462],
[414,456,433,454,0,423,445,463],
[445,454,449,468,468,0,454,460],
[446,441,440,456,446,437,0,468],
[424,424,417,429,428,431,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,442,434,432,453,449,473],
[433,0,417,447,459,431,464,463],
[449,474,0,432,420,437,495,417],
[457,444,459,0,438,449,500,462],
[459,432,471,453,0,452,524,455],
[438,460,454,442,439,0,462,428],
[442,427,396,391,367,429,0,409],
[418,428,474,429,436,463,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,435,433,407,391,412,408],
[473,0,446,456,431,450,461,448],
[456,445,0,434,446,439,432,411],
[458,435,457,0,425,428,437,405],
[484,460,445,466,0,437,434,430],
[500,441,452,463,454,0,475,438],
[479,430,459,454,457,416,0,426],
[483,443,480,486,461,453,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,446,432,439,452,427,460],
[463,0,442,414,468,419,452,491],
[445,449,0,447,462,444,448,473],
[459,477,444,0,489,468,450,485],
[452,423,429,402,0,435,415,471],
[439,472,447,423,456,0,439,468],
[464,439,443,441,476,452,0,483],
[431,400,418,406,420,423,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,459,443,436,451,423,442],
[425,0,457,423,438,418,448,423],
[432,434,0,420,416,413,407,423],
[448,468,471,0,435,456,432,438],
[455,453,475,456,0,447,424,427],
[440,473,478,435,444,0,438,433],
[468,443,484,459,467,453,0,459],
[449,468,468,453,464,458,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,433,461,450,452,440,457],
[433,0,415,430,444,424,411,428],
[458,476,0,457,464,429,440,449],
[430,461,434,0,454,430,457,450],
[441,447,427,437,0,435,455,422],
[439,467,462,461,456,0,447,458],
[451,480,451,434,436,444,0,448],
[434,463,442,441,469,433,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,437,441,501,488,473,488],
[449,0,475,430,472,474,496,494],
[454,416,0,480,482,461,472,462],
[450,461,411,0,480,463,452,457],
[390,419,409,411,0,398,453,440],
[403,417,430,428,493,0,468,512],
[418,395,419,439,438,423,0,481],
[403,397,429,434,451,379,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,423,434,433,427,442,417],
[426,0,440,426,425,432,435,434],
[468,451,0,434,438,446,467,447],
[457,465,457,0,457,460,438,455],
[458,466,453,434,0,445,460,472],
[464,459,445,431,446,0,438,437],
[449,456,424,453,431,453,0,433],
[474,457,444,436,419,454,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,421,406,412,416,432,433],
[455,0,460,443,461,413,453,440],
[470,431,0,434,409,448,454,415],
[485,448,457,0,454,412,432,438],
[479,430,482,437,0,417,447,443],
[475,478,443,479,474,0,466,449],
[459,438,437,459,444,425,0,448],
[458,451,476,453,448,442,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,545,451,642,263,227,415],
[440,0,476,36,440,476,227,346],
[346,415,0,169,360,360,227,415],
[440,855,722,0,440,440,440,628],
[249,451,531,451,0,263,263,415],
[628,415,531,451,628,0,509,415],
[664,664,664,451,628,382,0,628],
[476,545,476,263,476,476,263,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,453,471,486,447,473,435],
[444,0,490,447,523,522,483,463],
[438,401,0,396,433,455,411,372],
[420,444,495,0,446,486,438,389],
[405,368,458,445,0,424,393,414],
[444,369,436,405,467,0,423,426],
[418,408,480,453,498,468,0,446],
[456,428,519,502,477,465,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,413,420,431,433,422,415],
[460,0,437,441,432,451,435,458],
[478,454,0,454,435,448,441,468],
[471,450,437,0,437,462,465,431],
[460,459,456,454,0,455,460,439],
[458,440,443,429,436,0,449,454],
[469,456,450,426,431,442,0,426],
[476,433,423,460,452,437,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,469,462,454,472,456,494],
[447,0,445,437,433,474,441,460],
[422,446,0,449,460,452,441,459],
[429,454,442,0,459,482,457,456],
[437,458,431,432,0,448,439,417],
[419,417,439,409,443,0,410,425],
[435,450,450,434,452,481,0,479],
[397,431,432,435,474,466,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,451,418,421,457,443,423],
[461,0,457,458,461,509,460,443],
[440,434,0,396,444,468,449,434],
[473,433,495,0,464,526,449,449],
[470,430,447,427,0,497,454,445],
[434,382,423,365,394,0,391,352],
[448,431,442,442,437,500,0,451],
[468,448,457,442,446,539,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,453,436,441,442,451,478],
[464,0,456,440,457,468,465,462],
[438,435,0,419,434,435,442,456],
[455,451,472,0,449,426,440,482],
[450,434,457,442,0,466,443,464],
[449,423,456,465,425,0,474,466],
[440,426,449,451,448,417,0,459],
[413,429,435,409,427,425,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,448,435,433,449,427,424],
[465,0,449,438,469,459,449,448],
[443,442,0,447,447,457,436,436],
[456,453,444,0,486,467,457,447],
[458,422,444,405,0,446,429,423],
[442,432,434,424,445,0,419,415],
[464,442,455,434,462,472,0,436],
[467,443,455,444,468,476,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,423,422,435,414,437,388],
[425,0,415,384,413,452,423,444],
[468,476,0,430,448,475,459,460],
[469,507,461,0,419,478,441,492],
[456,478,443,472,0,449,417,430],
[477,439,416,413,442,0,429,439],
[454,468,432,450,474,462,0,466],
[503,447,431,399,461,452,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,445,445,475,452,470,457],
[461,0,475,461,482,437,456,451],
[446,416,0,437,453,427,474,427],
[446,430,454,0,497,460,458,446],
[416,409,438,394,0,439,428,409],
[439,454,464,431,452,0,449,447],
[421,435,417,433,463,442,0,426],
[434,440,464,445,482,444,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,448,458,442,447,441,432],
[439,0,419,436,436,453,443,434],
[443,472,0,448,460,437,448,470],
[433,455,443,0,453,449,446,433],
[449,455,431,438,0,447,453,409],
[444,438,454,442,444,0,452,427],
[450,448,443,445,438,439,0,438],
[459,457,421,458,482,464,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,440,475,468,449,467,443],
[417,0,419,451,441,447,457,425],
[451,472,0,445,449,476,441,471],
[416,440,446,0,445,438,472,445],
[423,450,442,446,0,444,465,446],
[442,444,415,453,447,0,447,434],
[424,434,450,419,426,444,0,422],
[448,466,420,446,445,457,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,445,426,426,429,422,428],
[462,0,456,426,426,448,446,437],
[446,435,0,437,436,441,429,399],
[465,465,454,0,478,446,431,430],
[465,465,455,413,0,440,413,440],
[462,443,450,445,451,0,445,430],
[469,445,462,460,478,446,0,454],
[463,454,492,461,451,461,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,452,468,447,424,432,433],
[471,0,434,442,451,428,464,420],
[439,457,0,465,472,460,441,423],
[423,449,426,0,433,434,457,426],
[444,440,419,458,0,417,429,415],
[467,463,431,457,474,0,471,464],
[459,427,450,434,462,420,0,440],
[458,471,468,465,476,427,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,433,432,454,438,443,444],
[443,0,453,432,457,448,452,453],
[458,438,0,448,465,470,438,451],
[459,459,443,0,452,467,435,463],
[437,434,426,439,0,470,429,443],
[453,443,421,424,421,0,435,441],
[448,439,453,456,462,456,0,447],
[447,438,440,428,448,450,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,434,447,462,440,452,431],
[441,0,433,455,463,455,434,425],
[457,458,0,447,454,452,448,430],
[444,436,444,0,437,453,456,424],
[429,428,437,454,0,436,442,390],
[451,436,439,438,455,0,442,448],
[439,457,443,435,449,449,0,420],
[460,466,461,467,501,443,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,450,465,458,460,449,445],
[428,0,438,445,470,451,454,434],
[441,453,0,420,454,447,453,427],
[426,446,471,0,467,466,455,464],
[433,421,437,424,0,451,415,416],
[431,440,444,425,440,0,447,441],
[442,437,438,436,476,444,0,425],
[446,457,464,427,475,450,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,466,436,455,448,458,453],
[443,0,467,448,427,458,471,452],
[425,424,0,439,437,453,450,441],
[455,443,452,0,436,434,468,429],
[436,464,454,455,0,466,473,459],
[443,433,438,457,425,0,466,458],
[433,420,441,423,418,425,0,428],
[438,439,450,462,432,433,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,475,453,469,456,464,444],
[428,0,466,449,477,428,490,445],
[416,425,0,395,426,422,446,444],
[438,442,496,0,466,426,459,457],
[422,414,465,425,0,419,444,434],
[435,463,469,465,472,0,458,463],
[427,401,445,432,447,433,0,425],
[447,446,447,434,457,428,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,436,449,472,472,465,458],
[430,0,439,440,416,426,434,435],
[455,452,0,434,448,439,454,447],
[442,451,457,0,401,443,462,466],
[419,475,443,490,0,453,471,470],
[419,465,452,448,438,0,453,472],
[426,457,437,429,420,438,0,420],
[433,456,444,425,421,419,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,419,466,424,451,436,421],
[466,0,436,434,425,427,453,402],
[472,455,0,446,438,437,446,422],
[425,457,445,0,409,453,440,398],
[467,466,453,482,0,471,455,422],
[440,464,454,438,420,0,445,435],
[455,438,445,451,436,446,0,451],
[470,489,469,493,469,456,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,438,450,438,449,437,460],
[448,0,429,459,463,448,450,446],
[453,462,0,481,464,452,439,472],
[441,432,410,0,423,428,427,426],
[453,428,427,468,0,445,461,449],
[442,443,439,463,446,0,461,459],
[454,441,452,464,430,430,0,470],
[431,445,419,465,442,432,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,464,463,433,458,442,429],
[443,0,446,451,418,463,430,414],
[427,445,0,459,415,464,438,440],
[428,440,432,0,438,453,436,423],
[458,473,476,453,0,467,466,438],
[433,428,427,438,424,0,417,420],
[449,461,453,455,425,474,0,460],
[462,477,451,468,453,471,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,499,529,472,480,501,460],
[449,0,495,490,453,497,481,442],
[392,396,0,506,367,449,444,437],
[362,401,385,0,431,441,433,456],
[419,438,524,460,0,479,435,477],
[411,394,442,450,412,0,407,450],
[390,410,447,458,456,484,0,456],
[431,449,454,435,414,441,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,355,373,433,452,361,356,418],
[536,0,407,443,417,458,368,481],
[518,484,0,437,401,503,445,517],
[458,448,454,0,439,456,455,546],
[439,474,490,452,0,503,475,520],
[530,433,388,435,388,0,306,427],
[535,523,446,436,416,585,0,517],
[473,410,374,345,371,464,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,465,448,463,451,467,442],
[425,0,449,453,457,436,459,440],
[426,442,0,436,434,447,432,434],
[443,438,455,0,449,443,441,435],
[428,434,457,442,0,423,419,451],
[440,455,444,448,468,0,471,446],
[424,432,459,450,472,420,0,408],
[449,451,457,456,440,445,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,464,489,460,451,410,491],
[483,0,448,497,502,449,434,465],
[427,443,0,484,488,450,469,440],
[402,394,407,0,421,402,425,416],
[431,389,403,470,0,404,416,432],
[440,442,441,489,487,0,425,459],
[481,457,422,466,475,466,0,490],
[400,426,451,475,459,432,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,572,404,427,383,407,571,426],
[319,0,259,340,251,308,349,273],
[487,632,0,387,445,384,445,432],
[464,551,504,0,386,539,561,458],
[508,640,446,505,0,337,495,419],
[484,583,507,352,554,0,459,404],
[320,542,446,330,396,432,0,374],
[465,618,459,433,472,487,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,450,445,441,464,479,456],
[419,0,431,412,410,446,445,433],
[441,460,0,453,432,434,475,455],
[446,479,438,0,447,486,479,427],
[450,481,459,444,0,449,468,449],
[427,445,457,405,442,0,446,449],
[412,446,416,412,423,445,0,411],
[435,458,436,464,442,442,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,404,427,411,410,394,430],
[467,0,396,450,455,441,431,444],
[487,495,0,483,436,436,465,470],
[464,441,408,0,435,437,413,443],
[480,436,455,456,0,443,459,455],
[481,450,455,454,448,0,438,464],
[497,460,426,478,432,453,0,464],
[461,447,421,448,436,427,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,262,304,713,294,440,440,430],
[629,0,765,891,472,891,314,482],
[587,126,0,891,304,304,440,304],
[178,0,0,0,126,304,178,178],
[597,419,587,765,0,723,597,597],
[451,0,587,587,168,0,136,304],
[451,577,451,713,294,755,0,294],
[461,409,587,713,294,587,597,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,401,474,443,426,473,466],
[430,0,458,416,454,434,434,377],
[490,433,0,442,426,462,423,463],
[417,475,449,0,454,410,419,393],
[448,437,465,437,0,410,405,434],
[465,457,429,481,481,0,427,458],
[418,457,468,472,486,464,0,475],
[425,514,428,498,457,433,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,419,499,472,433,376,398],
[434,0,428,451,473,413,400,444],
[472,463,0,493,461,403,456,448],
[392,440,398,0,456,426,438,394],
[419,418,430,435,0,427,366,335],
[458,478,488,465,464,0,428,427],
[515,491,435,453,525,463,0,461],
[493,447,443,497,556,464,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,426,438,436,442,476,449],
[471,0,460,457,441,422,482,465],
[465,431,0,446,433,435,455,487],
[453,434,445,0,457,447,479,455],
[455,450,458,434,0,432,476,460],
[449,469,456,444,459,0,486,449],
[415,409,436,412,415,405,0,424],
[442,426,404,436,431,442,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,422,418,403,406,430,432],
[462,0,432,434,448,437,450,455],
[469,459,0,454,457,442,458,422],
[473,457,437,0,481,430,446,447],
[488,443,434,410,0,433,441,442],
[485,454,449,461,458,0,450,444],
[461,441,433,445,450,441,0,441],
[459,436,469,444,449,447,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,428,462,423,440,446,428],
[471,0,445,466,453,464,460,449],
[463,446,0,460,436,451,434,455],
[429,425,431,0,432,413,433,419],
[468,438,455,459,0,458,452,448],
[451,427,440,478,433,0,454,438],
[445,431,457,458,439,437,0,440],
[463,442,436,472,443,453,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,449,431,414,447,432,456],
[439,0,440,439,455,449,477,462],
[442,451,0,421,440,468,466,467],
[460,452,470,0,440,463,472,459],
[477,436,451,451,0,463,465,472],
[444,442,423,428,428,0,442,435],
[459,414,425,419,426,449,0,464],
[435,429,424,432,419,456,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,441,448,492,451,450,443],
[414,0,443,425,437,419,430,419],
[450,448,0,446,470,437,456,440],
[443,466,445,0,466,445,448,437],
[399,454,421,425,0,396,439,455],
[440,472,454,446,495,0,460,438],
[441,461,435,443,452,431,0,442],
[448,472,451,454,436,453,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,397,406,405,439,414,447],
[479,0,457,441,456,464,447,464],
[494,434,0,443,452,456,434,445],
[485,450,448,0,454,453,423,452],
[486,435,439,437,0,463,436,449],
[452,427,435,438,428,0,419,452],
[477,444,457,468,455,472,0,463],
[444,427,446,439,442,439,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,469,473,442,488,459,488],
[438,0,443,475,447,459,428,471],
[422,448,0,445,444,438,451,452],
[418,416,446,0,443,440,432,462],
[449,444,447,448,0,452,445,473],
[403,432,453,451,439,0,429,463],
[432,463,440,459,446,462,0,474],
[403,420,439,429,418,428,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,432,474,430,472,405,436],
[447,0,424,429,482,501,406,475],
[459,467,0,476,433,491,451,478],
[417,462,415,0,441,444,435,459],
[461,409,458,450,0,494,436,466],
[419,390,400,447,397,0,415,460],
[486,485,440,456,455,476,0,530],
[455,416,413,432,425,431,361,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,439,417,434,463,458,388],
[362,0,415,425,399,462,415,391],
[452,476,0,396,449,496,407,470],
[474,466,495,0,461,534,433,467],
[457,492,442,430,0,448,440,434],
[428,429,395,357,443,0,407,420],
[433,476,484,458,451,484,0,482],
[503,500,421,424,457,471,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,458,471,450,457,429,444],
[432,0,437,469,446,445,448,449],
[433,454,0,424,426,435,433,450],
[420,422,467,0,433,450,463,441],
[441,445,465,458,0,409,439,457],
[434,446,456,441,482,0,469,463],
[462,443,458,428,452,422,0,423],
[447,442,441,450,434,428,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,413,437,430,418,433,459],
[469,0,418,415,436,442,455,463],
[478,473,0,435,457,460,446,474],
[454,476,456,0,437,451,458,463],
[461,455,434,454,0,431,429,499],
[473,449,431,440,460,0,435,461],
[458,436,445,433,462,456,0,482],
[432,428,417,428,392,430,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,448,434,486,438,471,426],
[449,0,433,444,451,449,481,445],
[443,458,0,467,480,456,481,463],
[457,447,424,0,440,413,463,427],
[405,440,411,451,0,432,472,428],
[453,442,435,478,459,0,471,419],
[420,410,410,428,419,420,0,413],
[465,446,428,464,463,472,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,464,449,478,454,457,442],
[435,0,463,459,457,435,446,452],
[427,428,0,450,431,416,420,414],
[442,432,441,0,476,414,441,447],
[413,434,460,415,0,414,409,423],
[437,456,475,477,477,0,454,454],
[434,445,471,450,482,437,0,445],
[449,439,477,444,468,437,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,276,332,235,273,339,211],
[793,0,413,556,437,514,556,290],
[615,478,0,478,410,443,638,303],
[559,335,413,0,284,277,470,392],
[656,454,481,607,0,396,582,450],
[618,377,448,614,495,0,403,295],
[552,335,253,421,309,488,0,206],
[680,601,588,499,441,596,685,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,423,441,472,451,450,416],
[455,0,432,475,485,454,457,442],
[468,459,0,466,466,447,444,452],
[450,416,425,0,461,460,429,435],
[419,406,425,430,0,412,436,417],
[440,437,444,431,479,0,450,440],
[441,434,447,462,455,441,0,426],
[475,449,439,456,474,451,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,390,459,442,414,438,450,434],
[501,0,456,461,441,467,444,521],
[432,435,0,416,458,404,444,467],
[449,430,475,0,430,433,459,475],
[477,450,433,461,0,456,501,486],
[453,424,487,458,435,0,471,471],
[441,447,447,432,390,420,0,450],
[457,370,424,416,405,420,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,446,438,458,458,434,446],
[444,0,459,463,465,446,446,444],
[445,432,0,447,463,444,436,448],
[453,428,444,0,436,433,422,450],
[433,426,428,455,0,431,433,453],
[433,445,447,458,460,0,453,454],
[457,445,455,469,458,438,0,449],
[445,447,443,441,438,437,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,431,458,410,478,442,435],
[440,0,458,449,458,492,483,442],
[460,433,0,458,435,466,452,442],
[433,442,433,0,424,459,450,452],
[481,433,456,467,0,461,460,444],
[413,399,425,432,430,0,462,429],
[449,408,439,441,431,429,0,449],
[456,449,449,439,447,462,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,448,471,462,453,474,463],
[446,0,428,431,453,432,451,455],
[443,463,0,441,453,438,456,439],
[420,460,450,0,431,434,462,465],
[429,438,438,460,0,448,481,448],
[438,459,453,457,443,0,470,469],
[417,440,435,429,410,421,0,453],
[428,436,452,426,443,422,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,465,459,458,439,443,491],
[412,0,438,433,392,434,437,467],
[426,453,0,404,437,430,388,454],
[432,458,487,0,458,448,380,527],
[433,499,454,433,0,418,459,485],
[452,457,461,443,473,0,426,467],
[448,454,503,511,432,465,0,525],
[400,424,437,364,406,424,366,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,429,437,425,426,428,414],
[497,0,451,459,453,440,446,426],
[462,440,0,437,439,431,435,408],
[454,432,454,0,476,461,434,454],
[466,438,452,415,0,427,433,425],
[465,451,460,430,464,0,421,417],
[463,445,456,457,458,470,0,437],
[477,465,483,437,466,474,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,480,473,474,449,460,423],
[402,0,471,417,439,409,436,459],
[411,420,0,438,435,415,480,441],
[418,474,453,0,447,399,441,412],
[417,452,456,444,0,424,462,413],
[442,482,476,492,467,0,456,389],
[431,455,411,450,429,435,0,437],
[468,432,450,479,478,502,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,428,442,444,465,455,461],
[434,0,455,438,458,443,438,478],
[463,436,0,457,456,446,443,464],
[449,453,434,0,460,474,456,461],
[447,433,435,431,0,437,425,432],
[426,448,445,417,454,0,428,437],
[436,453,448,435,466,463,0,463],
[430,413,427,430,459,454,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,441,464,466,468,454,443],
[394,0,420,435,451,438,450,420],
[450,471,0,441,450,450,465,433],
[427,456,450,0,459,449,437,424],
[425,440,441,432,0,436,432,428],
[423,453,441,442,455,0,435,446],
[437,441,426,454,459,456,0,429],
[448,471,458,467,463,445,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,449,453,447,428,444,441],
[416,0,446,438,444,438,479,442],
[442,445,0,445,465,425,463,457],
[438,453,446,0,437,454,450,457],
[444,447,426,454,0,442,461,467],
[463,453,466,437,449,0,455,447],
[447,412,428,441,430,436,0,454],
[450,449,434,434,424,444,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,466,437,440,448,458,445],
[419,0,458,408,432,417,439,432],
[425,433,0,427,431,429,443,455],
[454,483,464,0,442,448,457,443],
[451,459,460,449,0,442,456,442],
[443,474,462,443,449,0,453,435],
[433,452,448,434,435,438,0,440],
[446,459,436,448,449,456,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,484,450,435,448,420,467],
[459,0,475,457,440,466,458,443],
[407,416,0,424,412,423,423,435],
[441,434,467,0,426,450,452,465],
[456,451,479,465,0,462,433,445],
[443,425,468,441,429,0,399,437],
[471,433,468,439,458,492,0,444],
[424,448,456,426,446,454,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,452,442,450,428,430,425],
[461,0,451,440,478,451,456,454],
[439,440,0,447,471,415,449,438],
[449,451,444,0,461,435,420,440],
[441,413,420,430,0,427,416,413],
[463,440,476,456,464,0,454,442],
[461,435,442,471,475,437,0,441],
[466,437,453,451,478,449,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,456,446,442,515,512,492],
[375,0,383,337,381,374,461,359],
[435,508,0,454,444,440,522,465],
[445,554,437,0,449,518,506,438],
[449,510,447,442,0,429,510,481],
[376,517,451,373,462,0,423,415],
[379,430,369,385,381,468,0,453],
[399,532,426,453,410,476,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,429,434,450,445,477,447],
[401,0,423,395,434,384,454,414],
[462,468,0,469,412,449,471,449],
[457,496,422,0,440,423,472,475],
[441,457,479,451,0,446,476,457],
[446,507,442,468,445,0,484,440],
[414,437,420,419,415,407,0,427],
[444,477,442,416,434,451,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,456,433,459,449,445,438],
[450,0,469,443,443,452,436,438],
[435,422,0,420,432,441,429,430],
[458,448,471,0,444,461,436,451],
[432,448,459,447,0,469,430,444],
[442,439,450,430,422,0,433,425],
[446,455,462,455,461,458,0,444],
[453,453,461,440,447,466,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,434,467,461,459,407,455],
[464,0,435,488,453,450,432,476],
[457,456,0,450,461,482,426,482],
[424,403,441,0,425,434,448,454],
[430,438,430,466,0,467,417,449],
[432,441,409,457,424,0,408,476],
[484,459,465,443,474,483,0,488],
[436,415,409,437,442,415,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,461,543,417,348,474,497],
[468,0,398,472,404,408,437,463],
[430,493,0,462,470,459,440,539],
[348,419,429,0,400,323,435,396],
[474,487,421,491,0,354,450,520],
[543,483,432,568,537,0,532,596],
[417,454,451,456,441,359,0,496],
[394,428,352,495,371,295,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,461,467,450,452,457,441],
[452,0,432,455,441,450,451,430],
[430,459,0,448,430,454,459,452],
[424,436,443,0,430,436,443,416],
[441,450,461,461,0,466,445,458],
[439,441,437,455,425,0,453,412],
[434,440,432,448,446,438,0,444],
[450,461,439,475,433,479,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,504,441,439,384,424,421],
[462,0,426,388,379,442,453,374],
[387,465,0,445,422,412,455,466],
[450,503,446,0,410,442,462,420],
[452,512,469,481,0,412,438,496],
[507,449,479,449,479,0,450,438],
[467,438,436,429,453,441,0,442],
[470,517,425,471,395,453,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,437,443,452,467,426,496],
[443,0,439,443,448,463,441,464],
[454,452,0,446,445,437,405,462],
[448,448,445,0,460,466,428,474],
[439,443,446,431,0,470,451,491],
[424,428,454,425,421,0,436,444],
[465,450,486,463,440,455,0,497],
[395,427,429,417,400,447,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,487,471,437,469,485,482],
[418,0,453,435,437,446,437,441],
[404,438,0,444,431,441,431,430],
[420,456,447,0,434,447,459,459],
[454,454,460,457,0,463,479,444],
[422,445,450,444,428,0,464,426],
[406,454,460,432,412,427,0,429],
[409,450,461,432,447,465,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,515,523,488,427,519,435],
[443,0,479,459,432,426,446,467],
[376,412,0,436,403,403,499,424],
[368,432,455,0,417,449,460,462],
[403,459,488,474,0,415,455,474],
[464,465,488,442,476,0,504,470],
[372,445,392,431,436,387,0,411],
[456,424,467,429,417,421,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,485,453,469,452,461,436],
[428,0,464,434,448,436,447,438],
[406,427,0,420,422,398,430,410],
[438,457,471,0,454,427,446,427],
[422,443,469,437,0,430,425,424],
[439,455,493,464,461,0,439,447],
[430,444,461,445,466,452,0,453],
[455,453,481,464,467,444,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,463,446,441,459,433,435],
[472,0,459,431,465,460,425,459],
[428,432,0,413,411,436,433,400],
[445,460,478,0,463,468,456,425],
[450,426,480,428,0,475,448,435],
[432,431,455,423,416,0,444,425],
[458,466,458,435,443,447,0,410],
[456,432,491,466,456,466,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,455,455,441,450,433,445],
[460,0,459,476,442,463,448,471],
[436,432,0,459,433,448,429,450],
[436,415,432,0,429,457,427,449],
[450,449,458,462,0,472,442,460],
[441,428,443,434,419,0,430,436],
[458,443,462,464,449,461,0,444],
[446,420,441,442,431,455,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,466,407,479,365,446,444],
[434,0,421,476,478,518,474,491],
[425,470,0,484,481,463,347,465],
[484,415,407,0,540,477,334,452],
[412,413,410,351,0,409,355,413],
[526,373,428,414,482,0,420,334],
[445,417,544,557,536,471,0,485],
[447,400,426,439,478,557,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,463,432,434,413,450,430],
[454,0,465,432,439,420,432,439],
[428,426,0,416,429,404,422,429],
[459,459,475,0,424,455,451,453],
[457,452,462,467,0,433,451,460],
[478,471,487,436,458,0,480,476],
[441,459,469,440,440,411,0,451],
[461,452,462,438,431,415,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,478,466,498,446,440,434],
[430,0,510,461,491,427,437,460],
[413,381,0,445,446,409,395,393],
[425,430,446,0,455,396,389,386],
[393,400,445,436,0,397,423,392],
[445,464,482,495,494,0,468,468],
[451,454,496,502,468,423,0,464],
[457,431,498,505,499,423,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,456,491,468,464,445,521],
[391,0,399,427,394,418,438,460],
[435,492,0,489,445,437,441,477],
[400,464,402,0,414,410,452,449],
[423,497,446,477,0,435,462,488],
[427,473,454,481,456,0,471,487],
[446,453,450,439,429,420,0,476],
[370,431,414,442,403,404,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,381,515,427,445,419,447],
[429,0,397,500,456,449,384,451],
[510,494,0,557,436,554,379,458],
[376,391,334,0,355,433,365,417],
[464,435,455,536,0,511,471,448],
[446,442,337,458,380,0,385,422],
[472,507,512,526,420,506,0,471],
[444,440,433,474,443,469,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,441,447,407,434,425,430],
[470,0,464,472,448,436,443,450],
[450,427,0,465,441,458,445,460],
[444,419,426,0,426,437,438,461],
[484,443,450,465,0,456,467,447],
[457,455,433,454,435,0,449,439],
[466,448,446,453,424,442,0,446],
[461,441,431,430,444,452,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,426,465,424,417,421,412],
[390,0,407,392,444,419,461,428],
[465,484,0,433,495,502,459,488],
[426,499,458,0,471,505,466,479],
[467,447,396,420,0,439,499,446],
[474,472,389,386,452,0,475,444],
[470,430,432,425,392,416,0,411],
[479,463,403,412,445,447,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,423,428,433,433,437,435],
[432,0,445,450,465,449,463,444],
[468,446,0,449,465,453,472,437],
[463,441,442,0,466,434,457,443],
[458,426,426,425,0,443,444,447],
[458,442,438,457,448,0,458,428],
[454,428,419,434,447,433,0,450],
[456,447,454,448,444,463,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,505,417,447,451,506,469,513],
[386,0,483,497,423,465,439,435],
[474,408,0,457,459,497,472,513],
[444,394,434,0,414,479,450,423],
[440,468,432,477,0,527,519,521],
[385,426,394,412,364,0,460,436],
[422,452,419,441,372,431,0,516],
[378,456,378,468,370,455,375,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,456,466,455,425,443,466],
[467,0,480,481,427,439,459,468],
[435,411,0,453,432,417,443,460],
[425,410,438,0,409,406,433,433],
[436,464,459,482,0,464,458,465],
[466,452,474,485,427,0,449,461],
[448,432,448,458,433,442,0,450],
[425,423,431,458,426,430,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,419,467,451,402,447,467],
[434,0,417,401,370,432,466,409],
[472,474,0,460,393,470,456,433],
[424,490,431,0,424,426,481,461],
[440,521,498,467,0,471,490,486],
[489,459,421,465,420,0,487,435],
[444,425,435,410,401,404,0,441],
[424,482,458,430,405,456,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,446,431,443,454,440,430],
[440,0,400,441,435,465,426,444],
[445,491,0,455,455,496,477,466],
[460,450,436,0,461,456,435,441],
[448,456,436,430,0,468,446,439],
[437,426,395,435,423,0,432,427],
[451,465,414,456,445,459,0,446],
[461,447,425,450,452,464,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,454,428,436,434,442,410],
[433,0,441,441,433,395,453,420],
[437,450,0,439,449,414,457,401],
[463,450,452,0,420,443,443,416],
[455,458,442,471,0,447,488,411],
[457,496,477,448,444,0,481,448],
[449,438,434,448,403,410,0,403],
[481,471,490,475,480,443,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,411,432,432,434,437,444],
[411,0,421,425,413,433,413,392],
[480,470,0,458,431,465,432,442],
[459,466,433,0,407,431,446,435],
[459,478,460,484,0,466,461,441],
[457,458,426,460,425,0,433,453],
[454,478,459,445,430,458,0,450],
[447,499,449,456,450,438,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,454,437,450,441,467,445],
[479,0,458,442,469,438,470,443],
[437,433,0,441,466,444,444,459],
[454,449,450,0,461,444,448,451],
[441,422,425,430,0,403,456,434],
[450,453,447,447,488,0,474,440],
[424,421,447,443,435,417,0,441],
[446,448,432,440,457,451,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,457,460,450,446,418,393],
[410,0,386,408,401,381,403,431],
[434,505,0,469,490,440,444,470],
[431,483,422,0,451,446,468,421],
[441,490,401,440,0,415,438,435],
[445,510,451,445,476,0,446,452],
[473,488,447,423,453,445,0,418],
[498,460,421,470,456,439,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,456,470,447,437,450,441],
[431,0,448,453,436,445,426,442],
[435,443,0,449,446,442,437,425],
[421,438,442,0,429,443,430,418],
[444,455,445,462,0,453,440,438],
[454,446,449,448,438,0,441,452],
[441,465,454,461,451,450,0,436],
[450,449,466,473,453,439,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,384,424,271,341,361,462,275],
[507,0,414,416,465,315,542,408],
[467,477,0,431,326,312,378,356],
[620,475,460,0,389,438,655,470],
[550,426,565,502,0,498,544,472],
[530,576,579,453,393,0,531,565],
[429,349,513,236,347,360,0,392],
[616,483,535,421,419,326,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,454,457,437,430,413,444],
[413,0,426,461,423,431,423,433],
[437,465,0,435,430,449,417,418],
[434,430,456,0,425,449,429,438],
[454,468,461,466,0,436,415,462],
[461,460,442,442,455,0,407,446],
[478,468,474,462,476,484,0,442],
[447,458,473,453,429,445,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,474,481,463,443,480,477],
[437,0,444,413,409,410,419,435],
[417,447,0,451,454,441,461,464],
[410,478,440,0,444,447,453,470],
[428,482,437,447,0,443,458,473],
[448,481,450,444,448,0,477,487],
[411,472,430,438,433,414,0,474],
[414,456,427,421,418,404,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,463,443,506,502,488,466],
[462,0,471,444,453,492,463,473],
[428,420,0,466,447,522,482,455],
[448,447,425,0,539,550,477,510],
[385,438,444,352,0,476,417,399],
[389,399,369,341,415,0,431,386],
[403,428,409,414,474,460,0,415],
[425,418,436,381,492,505,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,444,450,440,423,415,422],
[472,0,462,477,475,440,448,454],
[447,429,0,443,476,428,444,436],
[441,414,448,0,469,426,435,451],
[451,416,415,422,0,419,414,423],
[468,451,463,465,472,0,445,444],
[476,443,447,456,477,446,0,463],
[469,437,455,440,468,447,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,404,453,436,434,454,426],
[484,0,456,427,433,453,458,437],
[487,435,0,477,468,464,473,444],
[438,464,414,0,411,452,464,400],
[455,458,423,480,0,448,437,441],
[457,438,427,439,443,0,460,448],
[437,433,418,427,454,431,0,420],
[465,454,447,491,450,443,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,447,464,466,436,467,450],
[444,0,418,459,471,440,453,458],
[444,473,0,456,504,451,489,473],
[427,432,435,0,445,424,470,439],
[425,420,387,446,0,422,453,444],
[455,451,440,467,469,0,476,464],
[424,438,402,421,438,415,0,421],
[441,433,418,452,447,427,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,470,455,441,498,486,476],
[433,0,469,468,473,465,463,460],
[421,422,0,434,398,445,428,435],
[436,423,457,0,448,473,481,469],
[450,418,493,443,0,479,452,431],
[393,426,446,418,412,0,460,416],
[405,428,463,410,439,431,0,410],
[415,431,456,422,460,475,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,481,403,478,463,462,467],
[477,0,469,436,483,579,523,532],
[410,422,0,470,442,520,435,485],
[488,455,421,0,449,480,444,500],
[413,408,449,442,0,470,458,498],
[428,312,371,411,421,0,392,434],
[429,368,456,447,433,499,0,471],
[424,359,406,391,393,457,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,437,430,443,439,433,433],
[463,0,455,447,468,454,438,438],
[454,436,0,427,429,450,446,453],
[461,444,464,0,456,440,451,448],
[448,423,462,435,0,448,442,446],
[452,437,441,451,443,0,424,433],
[458,453,445,440,449,467,0,456],
[458,453,438,443,445,458,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,448,425,444,465,429,412],
[459,0,466,463,449,471,437,429],
[443,425,0,432,440,453,433,417],
[466,428,459,0,463,460,441,449],
[447,442,451,428,0,475,447,441],
[426,420,438,431,416,0,418,422],
[462,454,458,450,444,473,0,419],
[479,462,474,442,450,469,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,450,440,483,465,454,459],
[408,0,441,416,441,431,429,459],
[441,450,0,437,444,449,422,455],
[451,475,454,0,485,444,461,463],
[408,450,447,406,0,438,450,452],
[426,460,442,447,453,0,439,429],
[437,462,469,430,441,452,0,433],
[432,432,436,428,439,462,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,418,441,457,435,430,433],
[489,0,468,463,470,482,436,448],
[473,423,0,436,467,452,453,448],
[450,428,455,0,433,454,446,440],
[434,421,424,458,0,442,424,441],
[456,409,439,437,449,0,414,447],
[461,455,438,445,467,477,0,443],
[458,443,443,451,450,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,489,439,413,360,443,430],
[481,0,362,360,446,421,445,416],
[402,529,0,378,417,402,419,461],
[452,531,513,0,428,410,430,561],
[478,445,474,463,0,461,502,488],
[531,470,489,481,430,0,522,541],
[448,446,472,461,389,369,0,454],
[461,475,430,330,403,350,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,417,443,442,453,456,440],
[439,0,426,442,435,430,447,462],
[474,465,0,451,465,422,461,486],
[448,449,440,0,437,438,454,477],
[449,456,426,454,0,449,445,467],
[438,461,469,453,442,0,471,459],
[435,444,430,437,446,420,0,451],
[451,429,405,414,424,432,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,433,447,454,446,449,434],
[446,0,451,454,447,480,441,448],
[458,440,0,435,431,455,438,457],
[444,437,456,0,440,452,461,449],
[437,444,460,451,0,455,444,463],
[445,411,436,439,436,0,447,453],
[442,450,453,430,447,444,0,458],
[457,443,434,442,428,438,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,404,405,422,419,467,391],
[469,0,463,481,455,416,463,442],
[487,428,0,421,449,406,474,445],
[486,410,470,0,445,417,477,432],
[469,436,442,446,0,453,459,475],
[472,475,485,474,438,0,449,432],
[424,428,417,414,432,442,0,414],
[500,449,446,459,416,459,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,456,420,423,453,446,450],
[451,0,474,424,433,423,456,471],
[435,417,0,447,419,438,423,446],
[471,467,444,0,435,418,443,440],
[468,458,472,456,0,446,445,478],
[438,468,453,473,445,0,439,457],
[445,435,468,448,446,452,0,453],
[441,420,445,451,413,434,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,458,424,466,414,414,421],
[442,0,460,458,484,466,457,460],
[433,431,0,421,464,443,465,453],
[467,433,470,0,472,456,453,462],
[425,407,427,419,0,407,449,440],
[477,425,448,435,484,0,456,423],
[477,434,426,438,442,435,0,455],
[470,431,438,429,451,468,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,436,438,430,433,459,422],
[458,0,429,448,422,451,445,434],
[455,462,0,450,465,439,463,466],
[453,443,441,0,441,465,447,461],
[461,469,426,450,0,457,443,441],
[458,440,452,426,434,0,449,448],
[432,446,428,444,448,442,0,439],
[469,457,425,430,450,443,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,382,426,460,406,440,376],
[513,0,511,384,476,446,520,476],
[509,380,0,452,418,463,520,392],
[465,507,439,0,426,464,507,416],
[431,415,473,465,0,376,486,459],
[485,445,428,427,515,0,489,466],
[451,371,371,384,405,402,0,340],
[515,415,499,475,432,425,551,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,483,439,424,421,403,412],
[435,0,457,425,440,427,426,440],
[408,434,0,386,406,408,376,386],
[452,466,505,0,467,435,454,439],
[467,451,485,424,0,408,403,437],
[470,464,483,456,483,0,421,430],
[488,465,515,437,488,470,0,470],
[479,451,505,452,454,461,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,450,450,456,472,456],
[447,0,415,417,471,461,476,469],
[455,476,0,440,480,489,480,493],
[441,474,451,0,480,460,422,487],
[441,420,411,411,0,463,453,464],
[435,430,402,431,428,0,415,434],
[419,415,411,469,438,476,0,469],
[435,422,398,404,427,457,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,405,404,415,412,423,403],
[462,0,476,434,460,432,438,472],
[486,415,0,457,464,431,451,451],
[487,457,434,0,469,465,411,428],
[476,431,427,422,0,457,419,435],
[479,459,460,426,434,0,424,443],
[468,453,440,480,472,467,0,451],
[488,419,440,463,456,448,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,450,476,461,475,429,448],
[400,0,448,471,452,422,436,383],
[441,443,0,432,433,438,444,443],
[415,420,459,0,380,441,404,368],
[430,439,458,511,0,491,433,381],
[416,469,453,450,400,0,424,363],
[462,455,447,487,458,467,0,406],
[443,508,448,523,510,528,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,463,451,448,441,445,415],
[464,0,476,445,459,460,485,444],
[428,415,0,455,446,448,434,422],
[440,446,436,0,443,443,459,417],
[443,432,445,448,0,451,437,420],
[450,431,443,448,440,0,450,449],
[446,406,457,432,454,441,0,432],
[476,447,469,474,471,442,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,445,437,450,460,431,445],
[442,0,481,466,467,464,441,444],
[446,410,0,422,437,426,417,448],
[454,425,469,0,462,446,443,448],
[441,424,454,429,0,459,464,448],
[431,427,465,445,432,0,435,438],
[460,450,474,448,427,456,0,440],
[446,447,443,443,443,453,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,389,395,404,424,448,399],
[395,0,358,388,354,464,457,376],
[502,533,0,430,371,454,458,451],
[496,503,461,0,489,470,528,391],
[487,537,520,402,0,487,489,395],
[467,427,437,421,404,0,512,402],
[443,434,433,363,402,379,0,380],
[492,515,440,500,496,489,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,474,447,434,438,462,441],
[458,0,494,443,456,459,468,450],
[417,397,0,429,417,437,438,420],
[444,448,462,0,450,442,473,463],
[457,435,474,441,0,455,469,457],
[453,432,454,449,436,0,455,460],
[429,423,453,418,422,436,0,434],
[450,441,471,428,434,431,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,478,452,419,462,464,441],
[438,0,438,448,425,428,434,436],
[413,453,0,452,411,444,443,432],
[439,443,439,0,424,432,443,428],
[472,466,480,467,0,450,444,441],
[429,463,447,459,441,0,463,455],
[427,457,448,448,447,428,0,451],
[450,455,459,463,450,436,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,410,418,404,413,449,429],
[417,0,427,411,415,372,413,411],
[481,464,0,412,461,432,460,469],
[473,480,479,0,465,437,456,476],
[487,476,430,426,0,453,459,467],
[478,519,459,454,438,0,467,497],
[442,478,431,435,432,424,0,440],
[462,480,422,415,424,394,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,462,430,471,486,490,472],
[446,0,469,453,448,433,480,433],
[429,422,0,428,462,476,470,459],
[461,438,463,0,443,486,457,493],
[420,443,429,448,0,455,467,424],
[405,458,415,405,436,0,453,460],
[401,411,421,434,424,438,0,428],
[419,458,432,398,467,431,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,473,464,476,495,418,446],
[438,0,502,423,433,440,458,479],
[418,389,0,470,399,432,425,430],
[427,468,421,0,388,427,433,403],
[415,458,492,503,0,447,481,454],
[396,451,459,464,444,0,414,429],
[473,433,466,458,410,477,0,484],
[445,412,461,488,437,462,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,427,434,439,438,445,439],
[431,0,402,454,448,428,441,440],
[464,489,0,445,438,464,485,455],
[457,437,446,0,449,438,447,431],
[452,443,453,442,0,457,458,454],
[453,463,427,453,434,0,455,473],
[446,450,406,444,433,436,0,437],
[452,451,436,460,437,418,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,414,482,398,300,392,489],
[552,0,562,714,454,428,586,504],
[477,329,0,513,305,408,451,533],
[409,177,378,0,408,279,399,480],
[493,437,586,483,0,447,447,493],
[591,463,483,612,444,0,400,519],
[499,305,440,492,444,491,0,508],
[402,387,358,411,398,372,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,433,449,446,434,423,429],
[468,0,444,486,462,441,433,440],
[458,447,0,469,460,449,447,424],
[442,405,422,0,445,419,409,412],
[445,429,431,446,0,414,433,423],
[457,450,442,472,477,0,437,450],
[468,458,444,482,458,454,0,454],
[462,451,467,479,468,441,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,446,448,447,442,436,446],
[446,0,448,463,462,446,455,440],
[445,443,0,462,446,436,447,444],
[443,428,429,0,440,446,434,456],
[444,429,445,451,0,463,458,456],
[449,445,455,445,428,0,446,440],
[455,436,444,457,433,445,0,461],
[445,451,447,435,435,451,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,453,403,434,444,449],
[439,0,478,459,410,433,428,433],
[427,413,0,446,417,424,439,385],
[438,432,445,0,434,454,461,406],
[488,481,474,457,0,430,458,427],
[457,458,467,437,461,0,460,416],
[447,463,452,430,433,431,0,460],
[442,458,506,485,464,475,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,431,443,403,493,422,513],
[411,0,568,489,488,530,294,522],
[460,323,0,414,272,289,361,405],
[448,402,477,0,320,478,336,401],
[488,403,619,571,0,530,462,467],
[398,361,602,413,361,0,405,446],
[469,597,530,555,429,486,0,506],
[378,369,486,490,424,445,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,417,377,441,421,434,439],
[493,0,432,450,468,467,451,432],
[474,459,0,459,444,461,401,457],
[514,441,432,0,474,448,461,409],
[450,423,447,417,0,433,454,420],
[470,424,430,443,458,0,446,426],
[457,440,490,430,437,445,0,438],
[452,459,434,482,471,465,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,442,426,433,432,473,433],
[464,0,471,447,449,433,466,446],
[449,420,0,420,447,428,440,431],
[465,444,471,0,467,449,468,480],
[458,442,444,424,0,430,463,465],
[459,458,463,442,461,0,460,453],
[418,425,451,423,428,431,0,427],
[458,445,460,411,426,438,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,448,438,443,439,442,420],
[466,0,447,425,444,438,423,416],
[443,444,0,454,460,424,421,421],
[453,466,437,0,444,436,440,455],
[448,447,431,447,0,430,440,433],
[452,453,467,455,461,0,450,421],
[449,468,470,451,451,441,0,451],
[471,475,470,436,458,470,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,469,483,442,476,498,453],
[453,0,443,471,479,455,496,461],
[422,448,0,432,439,454,491,469],
[408,420,459,0,416,449,479,437],
[449,412,452,475,0,438,486,450],
[415,436,437,442,453,0,452,443],
[393,395,400,412,405,439,0,410],
[438,430,422,454,441,448,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,441,491,487,465,472,490],
[418,0,430,455,461,430,435,442],
[450,461,0,478,479,483,444,471],
[400,436,413,0,424,421,403,459],
[404,430,412,467,0,452,433,482],
[426,461,408,470,439,0,414,448],
[419,456,447,488,458,477,0,471],
[401,449,420,432,409,443,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,443,468,464,488,450,487],
[430,0,415,463,454,446,427,434],
[448,476,0,457,481,440,418,471],
[423,428,434,0,483,434,421,454],
[427,437,410,408,0,437,431,474],
[403,445,451,457,454,0,419,434],
[441,464,473,470,460,472,0,487],
[404,457,420,437,417,457,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,428,432,430,421,420,441],
[463,0,435,443,451,475,455,424],
[463,456,0,438,441,440,445,447],
[459,448,453,0,441,461,440,444],
[461,440,450,450,0,439,415,431],
[470,416,451,430,452,0,417,438],
[471,436,446,451,476,474,0,452],
[450,467,444,447,460,453,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,458,502,473,438,479,460],
[424,0,451,467,448,413,458,489],
[433,440,0,436,419,376,460,437],
[389,424,455,0,451,441,457,485],
[418,443,472,440,0,448,492,478],
[453,478,515,450,443,0,486,443],
[412,433,431,434,399,405,0,475],
[431,402,454,406,413,448,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,450,462,458,460,458,441],
[465,0,438,488,466,485,463,455],
[441,453,0,475,465,450,462,463],
[429,403,416,0,419,470,447,456],
[433,425,426,472,0,453,436,436],
[431,406,441,421,438,0,446,445],
[433,428,429,444,455,445,0,433],
[450,436,428,435,455,446,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,432,420,448,424,408,404],
[455,0,439,429,456,427,413,419],
[459,452,0,426,465,436,415,425],
[471,462,465,0,460,427,427,432],
[443,435,426,431,0,426,425,412],
[467,464,455,464,465,0,440,457],
[483,478,476,464,466,451,0,430],
[487,472,466,459,479,434,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,443,459,451,462,454,486],
[444,0,429,439,442,474,407,473],
[448,462,0,443,446,489,405,463],
[432,452,448,0,426,471,391,447],
[440,449,445,465,0,491,420,476],
[429,417,402,420,400,0,400,450],
[437,484,486,500,471,491,0,497],
[405,418,428,444,415,441,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,390,461,435,423,427,448],
[451,0,424,420,476,442,465,455],
[501,467,0,436,455,463,456,423],
[430,471,455,0,438,450,453,457],
[456,415,436,453,0,478,464,453],
[468,449,428,441,413,0,448,451],
[464,426,435,438,427,443,0,435],
[443,436,468,434,438,440,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,497,435,559,431,437,517],
[441,0,509,491,537,449,435,525],
[394,382,0,414,525,341,382,445],
[456,400,477,0,496,415,500,482],
[332,354,366,395,0,305,323,395],
[460,442,550,476,586,0,503,577],
[454,456,509,391,568,388,0,517],
[374,366,446,409,496,314,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,477,473,456,494,480,476],
[448,0,481,450,476,462,441,468],
[414,410,0,431,420,449,423,426],
[418,441,460,0,452,450,458,445],
[435,415,471,439,0,414,468,431],
[397,429,442,441,477,0,470,410],
[411,450,468,433,423,421,0,374],
[415,423,465,446,460,481,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,463,464,458,446,446,442],
[448,0,459,453,460,441,455,437],
[428,432,0,455,432,429,434,450],
[427,438,436,0,422,448,445,438],
[433,431,459,469,0,449,439,451],
[445,450,462,443,442,0,470,442],
[445,436,457,446,452,421,0,429],
[449,454,441,453,440,449,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,450,466,481,457,431,445],
[429,0,442,451,449,445,449,439],
[441,449,0,452,488,454,456,444],
[425,440,439,0,472,430,427,425],
[410,442,403,419,0,429,435,420],
[434,446,437,461,462,0,441,454],
[460,442,435,464,456,450,0,433],
[446,452,447,466,471,437,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,427,448,450,443,429,430],
[455,0,454,477,487,439,459,416],
[464,437,0,457,467,446,484,449],
[443,414,434,0,463,456,441,446],
[441,404,424,428,0,414,420,434],
[448,452,445,435,477,0,440,437],
[462,432,407,450,471,451,0,431],
[461,475,442,445,457,454,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,360,489,432,433,381,394,365],
[531,0,511,426,437,419,467,456],
[402,380,0,469,445,468,427,459],
[459,465,422,0,481,416,379,456],
[458,454,446,410,0,402,422,498],
[510,472,423,475,489,0,408,456],
[497,424,464,512,469,483,0,500],
[526,435,432,435,393,435,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,427,429,444,432,434],
[447,0,419,430,428,426,422,427],
[455,472,0,451,434,454,442,435],
[464,461,440,0,462,443,427,457],
[462,463,457,429,0,447,425,428],
[447,465,437,448,444,0,447,465],
[459,469,449,464,466,444,0,450],
[457,464,456,434,463,426,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,449,424,447,430,458,451],
[448,0,453,426,441,454,432,423],
[442,438,0,447,457,446,471,438],
[467,465,444,0,466,460,453,458],
[444,450,434,425,0,443,450,449],
[461,437,445,431,448,0,440,429],
[433,459,420,438,441,451,0,421],
[440,468,453,433,442,462,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,441,407,434,435,424,490],
[474,0,441,471,460,470,451,500],
[450,450,0,442,439,460,438,444],
[484,420,449,0,448,470,441,497],
[457,431,452,443,0,467,469,490],
[456,421,431,421,424,0,428,474],
[467,440,453,450,422,463,0,478],
[401,391,447,394,401,417,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,440,432,455,458,450,451],
[439,0,459,441,426,444,436,463],
[451,432,0,425,442,436,424,447],
[459,450,466,0,428,447,455,454],
[436,465,449,463,0,469,450,471],
[433,447,455,444,422,0,415,443],
[441,455,467,436,441,476,0,471],
[440,428,444,437,420,448,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,456,438,445,433,430,451],
[444,0,459,453,465,455,448,449],
[435,432,0,425,450,404,434,456],
[453,438,466,0,469,458,444,453],
[446,426,441,422,0,430,425,423],
[458,436,487,433,461,0,441,480],
[461,443,457,447,466,450,0,468],
[440,442,435,438,468,411,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,424,450,450,419,427,468],
[449,0,408,429,404,428,409,430],
[467,483,0,459,421,404,448,461],
[441,462,432,0,422,433,445,438],
[441,487,470,469,0,482,486,462],
[472,463,487,458,409,0,464,445],
[464,482,443,446,405,427,0,428],
[423,461,430,453,429,446,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,438,456,450,491,459,439],
[440,0,458,468,456,475,439,436],
[453,433,0,465,447,428,458,437],
[435,423,426,0,448,424,436,425],
[441,435,444,443,0,464,438,419],
[400,416,463,467,427,0,448,447],
[432,452,433,455,453,443,0,430],
[452,455,454,466,472,444,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,435,468,506,471,423,402],
[426,0,488,495,526,479,459,399],
[456,403,0,470,465,441,487,441],
[423,396,421,0,464,432,409,434],
[385,365,426,427,0,448,464,401],
[420,412,450,459,443,0,420,458],
[468,432,404,482,427,471,0,432],
[489,492,450,457,490,433,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,472,435,435,447,429,434],
[430,0,481,437,438,442,439,434],
[419,410,0,414,411,438,417,403],
[456,454,477,0,434,438,421,430],
[456,453,480,457,0,434,437,454],
[444,449,453,453,457,0,428,420],
[462,452,474,470,454,463,0,427],
[457,457,488,461,437,471,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,409,439,423,311,385,416],
[490,0,506,487,437,454,507,443],
[482,385,0,423,500,431,479,461],
[452,404,468,0,432,404,397,449],
[468,454,391,459,0,445,409,476],
[580,437,460,487,446,0,466,458],
[506,384,412,494,482,425,0,401],
[475,448,430,442,415,433,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,472,447,476,455,446,430],
[439,0,429,436,465,437,452,433],
[419,462,0,457,487,446,394,489],
[444,455,434,0,496,474,448,460],
[415,426,404,395,0,417,434,365],
[436,454,445,417,474,0,415,428],
[445,439,497,443,457,476,0,447],
[461,458,402,431,526,463,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,444,428,457,485,437,437],
[418,0,482,420,452,478,489,434],
[447,409,0,450,469,432,428,437],
[463,471,441,0,439,465,471,427],
[434,439,422,452,0,524,468,446],
[406,413,459,426,367,0,430,427],
[454,402,463,420,423,461,0,439],
[454,457,454,464,445,464,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,457,445,435,401,430,455],
[448,0,423,443,449,417,423,427],
[434,468,0,424,435,408,425,427],
[446,448,467,0,447,446,432,446],
[456,442,456,444,0,419,443,432],
[490,474,483,445,472,0,446,465],
[461,468,466,459,448,445,0,466],
[436,464,464,445,459,426,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,462,450,452,449,436,429],
[448,0,477,442,452,467,428,459],
[429,414,0,415,422,424,431,433],
[441,449,476,0,456,479,459,456],
[439,439,469,435,0,461,451,453],
[442,424,467,412,430,0,424,451],
[455,463,460,432,440,467,0,455],
[462,432,458,435,438,440,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,465,497,459,458,436,498],
[435,0,459,455,448,447,438,505],
[426,432,0,430,463,443,427,459],
[394,436,461,0,441,448,450,444],
[432,443,428,450,0,440,433,460],
[433,444,448,443,451,0,443,495],
[455,453,464,441,458,448,0,484],
[393,386,432,447,431,396,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,440,441,487,435,460,435],
[448,0,417,410,444,447,417,432],
[451,474,0,439,436,443,455,416],
[450,481,452,0,435,430,456,463],
[404,447,455,456,0,449,454,445],
[456,444,448,461,442,0,473,430],
[431,474,436,435,437,418,0,440],
[456,459,475,428,446,461,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,384,353,444,397,367,397,397],
[507,0,457,548,391,484,409,465],
[538,434,0,452,448,455,442,465],
[447,343,439,0,323,408,395,360],
[494,500,443,568,0,560,489,498],
[524,407,436,483,331,0,391,347],
[494,482,449,496,402,500,0,439],
[494,426,426,531,393,544,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,444,437,441,433,410,448],
[449,0,431,439,451,456,436,454],
[447,460,0,446,447,436,439,441],
[454,452,445,0,440,433,462,468],
[450,440,444,451,0,441,444,453],
[458,435,455,458,450,0,457,473],
[481,455,452,429,447,434,0,487],
[443,437,450,423,438,418,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,456,431,452,449,461,443],
[443,0,472,442,471,450,465,461],
[435,419,0,405,449,424,433,419],
[460,449,486,0,474,445,479,445],
[439,420,442,417,0,407,443,423],
[442,441,467,446,484,0,453,446],
[430,426,458,412,448,438,0,416],
[448,430,472,446,468,445,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,401,462,470,448,377,432],
[474,0,428,479,484,409,411,437],
[490,463,0,482,475,442,459,452],
[429,412,409,0,469,429,419,451],
[421,407,416,422,0,450,390,431],
[443,482,449,462,441,0,470,427],
[514,480,432,472,501,421,0,463],
[459,454,439,440,460,464,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,489,310,342,418,211,107],
[413,0,447,298,306,540,242,288],
[402,444,0,238,276,204,197,120],
[581,593,653,0,262,746,528,462],
[549,585,615,629,0,700,456,309],
[473,351,687,145,191,0,282,233],
[680,649,694,363,435,609,0,303],
[784,603,771,429,582,658,588,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,436,451,428,444,423,434],
[456,0,441,430,439,465,453,460],
[455,450,0,453,428,450,462,443],
[440,461,438,0,440,459,431,450],
[463,452,463,451,0,453,440,446],
[447,426,441,432,438,0,442,442],
[468,438,429,460,451,449,0,439],
[457,431,448,441,445,449,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,428,411,419,412,398,415],
[459,0,442,434,431,428,414,437],
[463,449,0,448,459,419,446,460],
[480,457,443,0,432,447,448,452],
[472,460,432,459,0,450,441,470],
[479,463,472,444,441,0,457,468],
[493,477,445,443,450,434,0,457],
[476,454,431,439,421,423,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,396,448,421,429,478,424],
[447,0,434,411,435,399,442,450],
[495,457,0,458,464,417,496,496],
[443,480,433,0,467,405,467,505],
[470,456,427,424,0,447,462,432],
[462,492,474,486,444,0,501,507],
[413,449,395,424,429,390,0,396],
[467,441,395,386,459,384,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,451,434,450,466,438,453],
[445,0,463,428,437,464,436,441],
[440,428,0,439,450,449,436,424],
[457,463,452,0,434,483,453,428],
[441,454,441,457,0,425,442,440],
[425,427,442,408,466,0,457,457],
[453,455,455,438,449,434,0,445],
[438,450,467,463,451,434,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,411,431,419,489,451,517],
[401,0,395,396,384,445,432,466],
[480,496,0,459,433,460,442,479],
[460,495,432,0,472,508,481,523],
[472,507,458,419,0,463,474,502],
[402,446,431,383,428,0,436,459],
[440,459,449,410,417,455,0,478],
[374,425,412,368,389,432,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,485,497,428,484,498,485],
[428,0,469,513,455,526,475,450],
[406,422,0,466,439,486,485,452],
[394,378,425,0,383,446,455,429],
[463,436,452,508,0,488,493,484],
[407,365,405,445,403,0,438,418],
[393,416,406,436,398,453,0,401],
[406,441,439,462,407,473,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,448,471,439,458,439,470],
[435,0,432,436,430,439,433,455],
[443,459,0,434,437,460,443,461],
[420,455,457,0,465,450,435,450],
[452,461,454,426,0,465,429,469],
[433,452,431,441,426,0,450,468],
[452,458,448,456,462,441,0,461],
[421,436,430,441,422,423,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,438,451,464,454,430,447],
[457,0,445,464,441,463,435,450],
[453,446,0,452,442,420,423,437],
[440,427,439,0,429,446,408,460],
[427,450,449,462,0,462,452,462],
[437,428,471,445,429,0,416,440],
[461,456,468,483,439,475,0,478],
[444,441,454,431,429,451,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,455,425,411,437,425,401],
[430,0,462,402,419,413,451,449],
[436,429,0,373,422,399,448,413],
[466,489,518,0,471,439,494,462],
[480,472,469,420,0,447,458,429],
[454,478,492,452,444,0,491,477],
[466,440,443,397,433,400,0,359],
[490,442,478,429,462,414,532,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,507,466,507,476,452,463],
[463,0,484,474,498,482,442,464],
[384,407,0,424,461,419,412,398],
[425,417,467,0,471,468,449,448],
[384,393,430,420,0,427,389,398],
[415,409,472,423,464,0,420,401],
[439,449,479,442,502,471,0,439],
[428,427,493,443,493,490,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,424,418,436,457,437,431],
[473,0,387,443,443,432,451,423],
[467,504,0,442,484,474,457,456],
[473,448,449,0,470,461,428,427],
[455,448,407,421,0,420,419,412],
[434,459,417,430,471,0,444,403],
[454,440,434,463,472,447,0,442],
[460,468,435,464,479,488,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,449,465,429,470,446,444],
[456,0,450,478,453,481,431,470],
[442,441,0,449,424,438,448,452],
[426,413,442,0,407,428,427,430],
[462,438,467,484,0,459,443,469],
[421,410,453,463,432,0,436,463],
[445,460,443,464,448,455,0,450],
[447,421,439,461,422,428,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,459,424,456,448,460,472],
[466,0,438,437,433,453,456,492],
[432,453,0,443,427,457,432,479],
[467,454,448,0,445,446,457,473],
[435,458,464,446,0,493,445,474],
[443,438,434,445,398,0,444,459],
[431,435,459,434,446,447,0,488],
[419,399,412,418,417,432,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,449,454,445,442,455,445],
[445,0,416,468,440,449,450,429],
[442,475,0,481,450,451,452,469],
[437,423,410,0,414,424,435,426],
[446,451,441,477,0,450,458,479],
[449,442,440,467,441,0,446,458],
[436,441,439,456,433,445,0,424],
[446,462,422,465,412,433,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,451,458,437,430,452,461],
[442,0,453,435,426,430,436,460],
[440,438,0,463,421,451,467,478],
[433,456,428,0,427,440,452,474],
[454,465,470,464,0,439,444,490],
[461,461,440,451,452,0,447,448],
[439,455,424,439,447,444,0,467],
[430,431,413,417,401,443,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,441,451,462,461,448,438],
[442,0,452,448,441,445,453,439],
[450,439,0,427,442,450,454,445],
[440,443,464,0,430,452,437,438],
[429,450,449,461,0,462,462,477],
[430,446,441,439,429,0,453,435],
[443,438,437,454,429,438,0,466],
[453,452,446,453,414,456,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,493,433,464,495,476,464],
[393,0,461,459,499,466,522,438],
[398,430,0,418,383,415,427,348],
[458,432,473,0,476,483,509,406],
[427,392,508,415,0,461,404,393],
[396,425,476,408,430,0,441,372],
[415,369,464,382,487,450,0,393],
[427,453,543,485,498,519,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,448,453,430,445,445,438],
[478,0,460,458,461,445,445,450],
[443,431,0,437,423,423,425,436],
[438,433,454,0,423,434,442,450],
[461,430,468,468,0,434,437,453],
[446,446,468,457,457,0,452,443],
[446,446,466,449,454,439,0,459],
[453,441,455,441,438,448,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,438,453,437,440,469,449],
[429,0,432,414,428,422,435,443],
[453,459,0,440,452,452,439,460],
[438,477,451,0,452,462,444,460],
[454,463,439,439,0,452,443,449],
[451,469,439,429,439,0,467,462],
[422,456,452,447,448,424,0,452],
[442,448,431,431,442,429,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,431,450,444,434,424,411],
[388,0,432,404,381,461,382,355],
[460,459,0,397,440,413,430,377],
[441,487,494,0,451,469,417,436],
[447,510,451,440,0,423,404,503],
[457,430,478,422,468,0,447,436],
[467,509,461,474,487,444,0,430],
[480,536,514,455,388,455,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,464,453,448,465,436,438],
[408,0,429,418,420,405,413,390],
[427,462,0,442,453,433,443,441],
[438,473,449,0,436,447,442,424],
[443,471,438,455,0,458,457,440],
[426,486,458,444,433,0,460,429],
[455,478,448,449,434,431,0,449],
[453,501,450,467,451,462,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,483,491,426,499,467,479],
[428,0,455,450,430,438,454,454],
[408,436,0,461,400,436,450,445],
[400,441,430,0,382,437,426,414],
[465,461,491,509,0,452,434,451],
[392,453,455,454,439,0,435,444],
[424,437,441,465,457,456,0,442],
[412,437,446,477,440,447,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,450,442,455,442,437,501],
[492,0,491,433,462,428,419,446],
[441,400,0,415,422,443,452,456],
[449,458,476,0,442,464,411,451],
[436,429,469,449,0,424,393,460],
[449,463,448,427,467,0,451,465],
[454,472,439,480,498,440,0,504],
[390,445,435,440,431,426,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,429,423,430,434,460,408],
[432,0,429,435,460,432,470,388],
[462,462,0,419,450,401,455,418],
[468,456,472,0,447,451,456,430],
[461,431,441,444,0,473,447,422],
[457,459,490,440,418,0,500,447],
[431,421,436,435,444,391,0,436],
[483,503,473,461,469,444,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,407,395,405,450,451,467],
[473,0,447,434,440,456,479,456],
[484,444,0,480,457,464,455,451],
[496,457,411,0,441,457,453,460],
[486,451,434,450,0,447,437,459],
[441,435,427,434,444,0,434,467],
[440,412,436,438,454,457,0,448],
[424,435,440,431,432,424,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,426,448,448,455,428,434],
[455,0,447,456,437,462,429,444],
[465,444,0,442,431,452,446,446],
[443,435,449,0,447,459,430,434],
[443,454,460,444,0,455,451,436],
[436,429,439,432,436,0,428,437],
[463,462,445,461,440,463,0,450],
[457,447,445,457,455,454,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,426,448,429,421,454,398],
[438,0,439,449,431,461,455,440],
[465,452,0,451,451,454,451,437],
[443,442,440,0,426,448,429,427],
[462,460,440,465,0,460,444,454],
[470,430,437,443,431,0,438,421],
[437,436,440,462,447,453,0,445],
[493,451,454,464,437,470,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,458,428,467,436,462,431],
[475,0,453,511,507,472,425,442],
[433,438,0,426,506,445,411,415],
[463,380,465,0,466,434,408,440],
[424,384,385,425,0,447,387,417],
[455,419,446,457,444,0,456,446],
[429,466,480,483,504,435,0,474],
[460,449,476,451,474,445,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,471,498,492,448,481,483],
[455,0,451,457,431,396,491,408],
[420,440,0,430,466,404,482,395],
[393,434,461,0,461,384,455,392],
[399,460,425,430,0,417,457,433],
[443,495,487,507,474,0,503,461],
[410,400,409,436,434,388,0,387],
[408,483,496,499,458,430,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,433,423,438,473,451,443],
[466,0,422,438,459,461,422,434],
[458,469,0,429,473,464,454,478],
[468,453,462,0,451,444,440,459],
[453,432,418,440,0,448,423,429],
[418,430,427,447,443,0,436,449],
[440,469,437,451,468,455,0,462],
[448,457,413,432,462,442,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,457,423,444,461,457,436],
[440,0,471,443,454,450,466,454],
[434,420,0,410,422,434,451,431],
[468,448,481,0,442,444,458,459],
[447,437,469,449,0,451,461,459],
[430,441,457,447,440,0,467,438],
[434,425,440,433,430,424,0,427],
[455,437,460,432,432,453,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,433,418,427,430,444,410],
[454,0,423,415,454,480,446,451],
[458,468,0,451,444,457,458,471],
[473,476,440,0,448,479,496,444],
[464,437,447,443,0,463,442,426],
[461,411,434,412,428,0,472,434],
[447,445,433,395,449,419,0,427],
[481,440,420,447,465,457,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,455,451,436,466,452,434],
[447,0,465,441,471,466,447,456],
[436,426,0,417,451,444,427,444],
[440,450,474,0,460,469,438,435],
[455,420,440,431,0,470,414,447],
[425,425,447,422,421,0,424,418],
[439,444,464,453,477,467,0,457],
[457,435,447,456,444,473,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,389,464,454,463,408,485],
[421,0,417,397,394,381,403,424],
[502,474,0,437,402,412,455,474],
[427,494,454,0,435,474,471,487],
[437,497,489,456,0,490,533,534],
[428,510,479,417,401,0,470,503],
[483,488,436,420,358,421,0,445],
[406,467,417,404,357,388,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,445,447,438,425,439,410],
[472,0,444,456,458,452,442,476],
[446,447,0,462,416,406,434,453],
[444,435,429,0,453,430,441,433],
[453,433,475,438,0,426,442,446],
[466,439,485,461,465,0,462,468],
[452,449,457,450,449,429,0,445],
[481,415,438,458,445,423,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,442,422,414,444,430,460],
[473,0,446,437,423,432,435,473],
[449,445,0,425,423,430,434,470],
[469,454,466,0,439,448,476,492],
[477,468,468,452,0,445,451,476],
[447,459,461,443,446,0,457,466],
[461,456,457,415,440,434,0,476],
[431,418,421,399,415,425,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,447,488,469,440,470,446],
[465,0,463,456,452,462,497,441],
[444,428,0,427,438,476,459,415],
[403,435,464,0,422,423,454,420],
[422,439,453,469,0,440,484,427],
[451,429,415,468,451,0,465,439],
[421,394,432,437,407,426,0,395],
[445,450,476,471,464,452,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,429,464,454,456,478,427],
[419,0,432,476,430,471,498,428],
[462,459,0,437,438,465,447,410],
[427,415,454,0,413,454,478,433],
[437,461,453,478,0,463,497,448],
[435,420,426,437,428,0,468,432],
[413,393,444,413,394,423,0,429],
[464,463,481,458,443,459,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,470,459,427,441,437,444],
[441,0,461,461,445,443,436,460],
[421,430,0,443,407,412,419,436],
[432,430,448,0,407,434,435,420],
[464,446,484,484,0,469,440,462],
[450,448,479,457,422,0,457,442],
[454,455,472,456,451,434,0,443],
[447,431,455,471,429,449,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,411,424,451,449,427,444],
[451,0,424,410,444,430,426,413],
[480,467,0,434,455,459,436,447],
[467,481,457,0,470,481,434,447],
[440,447,436,421,0,463,431,424],
[442,461,432,410,428,0,414,417],
[464,465,455,457,460,477,0,438],
[447,478,444,444,467,474,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,447,419,463,462,421,436],
[469,0,478,473,513,496,418,411],
[444,413,0,397,495,475,434,419],
[472,418,494,0,470,456,418,479],
[428,378,396,421,0,456,379,387],
[429,395,416,435,435,0,383,385],
[470,473,457,473,512,508,0,419],
[455,480,472,412,504,506,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,444,450,436,454,442,443],
[457,0,460,445,452,456,468,465],
[447,431,0,437,448,461,453,458],
[441,446,454,0,459,467,462,460],
[455,439,443,432,0,453,452,454],
[437,435,430,424,438,0,434,442],
[449,423,438,429,439,457,0,445],
[448,426,433,431,437,449,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,469,446,465,441,433,479],
[439,0,458,473,435,438,454,470],
[422,433,0,439,424,439,422,429],
[445,418,452,0,409,431,427,440],
[426,456,467,482,0,446,411,446],
[450,453,452,460,445,0,449,444],
[458,437,469,464,480,442,0,446],
[412,421,462,451,445,447,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,362,386,397,412,366,463],
[405,0,404,462,361,380,326,463],
[529,487,0,418,412,458,476,541],
[505,429,473,0,448,434,428,523],
[494,530,479,443,0,482,415,522],
[479,511,433,457,409,0,482,509],
[525,565,415,463,476,409,0,562],
[428,428,350,368,369,382,329,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,451,436,443,456,456,438],
[438,0,434,434,439,456,429,441],
[440,457,0,446,437,453,432,453],
[455,457,445,0,434,459,434,459],
[448,452,454,457,0,450,436,466],
[435,435,438,432,441,0,434,420],
[435,462,459,457,455,457,0,451],
[453,450,438,432,425,471,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,371,387,390,381,380,437,468],
[520,0,445,487,428,430,453,521],
[504,446,0,424,378,385,411,550],
[501,404,467,0,395,499,509,510],
[510,463,513,496,0,464,400,519],
[511,461,506,392,427,0,486,510],
[454,438,480,382,491,405,0,509],
[423,370,341,381,372,381,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,442,423,484,469,434,446],
[482,0,504,444,495,502,440,468],
[449,387,0,427,488,459,448,452],
[468,447,464,0,523,499,417,443],
[407,396,403,368,0,405,353,374],
[422,389,432,392,486,0,399,368],
[457,451,443,474,538,492,0,481],
[445,423,439,448,517,523,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,442,428,446,511,420,448],
[382,0,416,402,407,444,390,391],
[449,475,0,450,491,467,432,465],
[463,489,441,0,454,503,461,465],
[445,484,400,437,0,475,433,450],
[380,447,424,388,416,0,375,410],
[471,501,459,430,458,516,0,466],
[443,500,426,426,441,481,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,462,449,448,445,432,469],
[447,0,459,446,467,441,442,448],
[429,432,0,424,436,429,433,441],
[442,445,467,0,435,432,458,448],
[443,424,455,456,0,455,434,426],
[446,450,462,459,436,0,444,454],
[459,449,458,433,457,447,0,449],
[422,443,450,443,465,437,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,413,441,432,443,400,492],
[456,0,423,487,434,421,412,471],
[478,468,0,506,463,471,439,518],
[450,404,385,0,407,364,408,470],
[459,457,428,484,0,395,422,500],
[448,470,420,527,496,0,463,517],
[491,479,452,483,469,428,0,538],
[399,420,373,421,391,374,353,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,474,474,443,477,451,504],
[407,0,441,477,429,396,431,434],
[417,450,0,456,412,461,451,454],
[417,414,435,0,406,392,451,460],
[448,462,479,485,0,416,445,483],
[414,495,430,499,475,0,477,460],
[440,460,440,440,446,414,0,484],
[387,457,437,431,408,431,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,439,458,428,422,434,457],
[442,0,429,427,429,435,408,445],
[452,462,0,442,431,453,433,447],
[433,464,449,0,456,419,452,464],
[463,462,460,435,0,452,444,460],
[469,456,438,472,439,0,448,465],
[457,483,458,439,447,443,0,462],
[434,446,444,427,431,426,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,466,443,467,453,447,435],
[402,0,445,419,462,416,412,406],
[425,446,0,437,429,418,412,418],
[448,472,454,0,461,444,433,444],
[424,429,462,430,0,440,418,441],
[438,475,473,447,451,0,421,449],
[444,479,479,458,473,470,0,451],
[456,485,473,447,450,442,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,432,451,495,449,459,483],
[417,0,452,433,493,446,422,489],
[459,439,0,463,523,469,445,498],
[440,458,428,0,502,430,439,471],
[396,398,368,389,0,403,397,422],
[442,445,422,461,488,0,440,470],
[432,469,446,452,494,451,0,466],
[408,402,393,420,469,421,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,443,454,433,434,451,439],
[420,0,422,439,405,430,420,408],
[448,469,0,458,433,443,449,450],
[437,452,433,0,403,423,435,438],
[458,486,458,488,0,472,445,441],
[457,461,448,468,419,0,437,423],
[440,471,442,456,446,454,0,437],
[452,483,441,453,450,468,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,452,450,432,451,449,460],
[453,0,449,447,456,443,461,441],
[439,442,0,430,458,421,442,436],
[441,444,461,0,458,430,430,457],
[459,435,433,433,0,422,437,449],
[440,448,470,461,469,0,467,473],
[442,430,449,461,454,424,0,466],
[431,450,455,434,442,418,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,456,450,462,409,440,449],
[480,0,455,445,456,437,491,449],
[435,436,0,411,421,431,450,462],
[441,446,480,0,476,460,460,427],
[429,435,470,415,0,439,422,413],
[482,454,460,431,452,0,457,459],
[451,400,441,431,469,434,0,423],
[442,442,429,464,478,432,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,437,434,354,401,405,437],
[471,0,466,447,384,433,463,425],
[454,425,0,427,397,423,409,410],
[457,444,464,0,406,424,421,387],
[537,507,494,485,0,433,486,479],
[490,458,468,467,458,0,456,425],
[486,428,482,470,405,435,0,415],
[454,466,481,504,412,466,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,448,428,469,509,447,413],
[439,0,428,418,486,489,466,390],
[443,463,0,427,478,478,465,442],
[463,473,464,0,477,508,433,446],
[422,405,413,414,0,482,436,385],
[382,402,413,383,409,0,425,352],
[444,425,426,458,455,466,0,396],
[478,501,449,445,506,539,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,485,443,444,447,435,460],
[438,0,473,444,431,439,467,462],
[406,418,0,416,441,417,413,413],
[448,447,475,0,480,452,428,467],
[447,460,450,411,0,429,450,406],
[444,452,474,439,462,0,418,442],
[456,424,478,463,441,473,0,471],
[431,429,478,424,485,449,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,428,439,439,450,439,431],
[463,0,440,433,442,478,444,469],
[463,451,0,452,472,463,466,442],
[452,458,439,0,436,469,449,453],
[452,449,419,455,0,464,456,444],
[441,413,428,422,427,0,444,419],
[452,447,425,442,435,447,0,473],
[460,422,449,438,447,472,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,519,443,486,495,555,459,531],
[372,0,326,366,357,502,387,468],
[448,565,0,438,468,490,509,536],
[405,525,453,0,457,572,470,560],
[396,534,423,434,0,528,524,543],
[336,389,401,319,363,0,386,469],
[432,504,382,421,367,505,0,486],
[360,423,355,331,348,422,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,448,432,436,427,470,440],
[461,0,453,449,457,441,460,456],
[443,438,0,425,459,447,438,448],
[459,442,466,0,461,447,439,446],
[455,434,432,430,0,445,444,429],
[464,450,444,444,446,0,463,447],
[421,431,453,452,447,428,0,443],
[451,435,443,445,462,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,494,442,444,468,466,435],
[390,0,436,403,451,431,467,422],
[397,455,0,465,441,432,418,403],
[449,488,426,0,513,429,469,476],
[447,440,450,378,0,424,424,426],
[423,460,459,462,467,0,424,420],
[425,424,473,422,467,467,0,451],
[456,469,488,415,465,471,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,448,398,418,481,423,437],
[457,0,453,441,452,453,411,444],
[443,438,0,447,436,453,400,456],
[493,450,444,0,440,463,435,447],
[473,439,455,451,0,493,457,447],
[410,438,438,428,398,0,424,410],
[468,480,491,456,434,467,0,477],
[454,447,435,444,444,481,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,454,452,474,459,439,438],
[453,0,446,425,477,448,437,438],
[437,445,0,415,447,429,436,420],
[439,466,476,0,465,440,452,453],
[417,414,444,426,0,422,409,422],
[432,443,462,451,469,0,430,425],
[452,454,455,439,482,461,0,433],
[453,453,471,438,469,466,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,463,459,460,451,443,441],
[458,0,446,445,457,437,445,450],
[428,445,0,414,437,436,434,427],
[432,446,477,0,466,454,468,459],
[431,434,454,425,0,436,458,450],
[440,454,455,437,455,0,426,453],
[448,446,457,423,433,465,0,454],
[450,441,464,432,441,438,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,431,466,464,454,447,454],
[459,0,454,454,446,473,452,443],
[460,437,0,461,454,483,463,458],
[425,437,430,0,449,459,459,440],
[427,445,437,442,0,453,414,412],
[437,418,408,432,438,0,453,479],
[444,439,428,432,477,438,0,434],
[437,448,433,451,479,412,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,440,415,449,459,448,457],
[437,0,480,472,511,473,467,478],
[451,411,0,417,460,454,448,484],
[476,419,474,0,463,475,463,496],
[442,380,431,428,0,457,430,455],
[432,418,437,416,434,0,424,445],
[443,424,443,428,461,467,0,450],
[434,413,407,395,436,446,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,447,434,436,441,444],
[441,0,431,462,443,462,460,436],
[450,460,0,445,441,448,450,461],
[444,429,446,0,429,445,466,434],
[457,448,450,462,0,449,444,428],
[455,429,443,446,442,0,443,422],
[450,431,441,425,447,448,0,423],
[447,455,430,457,463,469,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,463,484,445,471,482,440],
[432,0,433,440,419,437,462,455],
[428,458,0,483,453,447,466,449],
[407,451,408,0,418,419,473,434],
[446,472,438,473,0,454,435,473],
[420,454,444,472,437,0,462,445],
[409,429,425,418,456,429,0,438],
[451,436,442,457,418,446,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,430,461,477,474,503,465],
[444,0,447,454,462,466,464,475],
[461,444,0,468,474,456,462,446],
[430,437,423,0,462,438,470,444],
[414,429,417,429,0,427,453,444],
[417,425,435,453,464,0,468,462],
[388,427,429,421,438,423,0,428],
[426,416,445,447,447,429,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,441,457,484,458,457,451],
[434,0,446,435,523,453,446,456],
[450,445,0,461,484,454,457,444],
[434,456,430,0,465,442,422,464],
[407,368,407,426,0,427,394,426],
[433,438,437,449,464,0,442,437],
[434,445,434,469,497,449,0,456],
[440,435,447,427,465,454,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,425,499,459,453,447,458],
[428,0,425,476,449,426,433,460],
[466,466,0,469,441,443,451,480],
[392,415,422,0,422,425,438,429],
[432,442,450,469,0,457,437,462],
[438,465,448,466,434,0,462,468],
[444,458,440,453,454,429,0,465],
[433,431,411,462,429,423,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,350,421,406,438,486,423],
[485,0,453,496,497,406,433,502],
[541,438,0,562,421,473,514,452],
[470,395,329,0,364,330,433,383],
[485,394,470,527,0,422,549,492],
[453,485,418,561,469,0,481,473],
[405,458,377,458,342,410,0,407],
[468,389,439,508,399,418,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,453,453,465,447,481,452],
[447,0,457,440,450,444,460,463],
[438,434,0,421,457,422,456,431],
[438,451,470,0,465,458,499,442],
[426,441,434,426,0,445,455,438],
[444,447,469,433,446,0,454,427],
[410,431,435,392,436,437,0,424],
[439,428,460,449,453,464,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,418,440,430,425,435,416],
[480,0,439,447,451,439,445,445],
[473,452,0,460,453,459,453,426],
[451,444,431,0,437,439,431,417],
[461,440,438,454,0,463,444,469],
[466,452,432,452,428,0,421,415],
[456,446,438,460,447,470,0,441],
[475,446,465,474,422,476,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,426,467,454,469,451,465],
[443,0,444,493,448,457,450,452],
[465,447,0,486,475,458,434,446],
[424,398,405,0,411,437,439,457],
[437,443,416,480,0,461,467,453],
[422,434,433,454,430,0,427,452],
[440,441,457,452,424,464,0,417],
[426,439,445,434,438,439,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,418,472,473,460,346,434],
[529,0,552,610,545,492,480,414],
[473,339,0,494,473,381,397,454],
[419,281,397,0,360,398,360,432],
[418,346,418,531,0,435,400,417],
[431,399,510,493,456,0,511,434],
[545,411,494,531,491,380,0,453],
[457,477,437,459,474,457,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,470,459,458,435,467,421],
[430,0,416,430,460,430,431,430],
[421,475,0,431,442,431,453,429],
[432,461,460,0,449,452,477,450],
[433,431,449,442,0,430,461,418],
[456,461,460,439,461,0,440,424],
[424,460,438,414,430,451,0,432],
[470,461,462,441,473,467,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,419,417,421,391,446,438],
[469,0,471,433,477,467,417,483],
[472,420,0,462,431,448,378,423],
[474,458,429,0,450,477,407,463],
[470,414,460,441,0,471,444,443],
[500,424,443,414,420,0,405,483],
[445,474,513,484,447,486,0,497],
[453,408,468,428,448,408,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,410,462,434,454,443,464],
[459,0,426,437,428,452,424,440],
[481,465,0,453,466,467,460,441],
[429,454,438,0,417,460,434,445],
[457,463,425,474,0,457,451,482],
[437,439,424,431,434,0,437,441],
[448,467,431,457,440,454,0,437],
[427,451,450,446,409,450,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,578,490,606,577,405,405,491],
[313,0,314,488,490,430,431,517],
[401,577,0,490,521,549,436,492],
[285,403,401,0,462,402,375,401],
[314,401,370,429,0,401,460,401],
[486,461,342,489,490,0,517,571],
[486,460,455,516,431,374,0,518],
[400,374,399,490,490,320,373,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,455,481,470,434,467,454],
[450,0,461,443,473,393,456,443],
[436,430,0,429,471,447,456,428],
[410,448,462,0,433,429,434,430],
[421,418,420,458,0,406,436,435],
[457,498,444,462,485,0,478,453],
[424,435,435,457,455,413,0,426],
[437,448,463,461,456,438,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,406,431,449,446,436,431],
[424,0,401,418,403,406,416,413],
[485,490,0,456,461,432,483,451],
[460,473,435,0,438,460,453,427],
[442,488,430,453,0,432,464,444],
[445,485,459,431,459,0,482,441],
[455,475,408,438,427,409,0,458],
[460,478,440,464,447,450,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,472,433,477,473,447,458],
[414,0,442,452,431,464,414,454],
[419,449,0,436,434,448,432,475],
[458,439,455,0,454,456,433,461],
[414,460,457,437,0,474,423,514],
[418,427,443,435,417,0,418,440],
[444,477,459,458,468,473,0,479],
[433,437,416,430,377,451,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,437,470,464,504,458,478],
[419,0,412,453,417,476,415,452],
[454,479,0,445,458,495,444,471],
[421,438,446,0,411,452,411,445],
[427,474,433,480,0,448,455,449],
[387,415,396,439,443,0,423,460],
[433,476,447,480,436,468,0,463],
[413,439,420,446,442,431,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,378,428,425,460,425,469],
[409,0,413,403,388,403,358,493],
[513,478,0,467,478,504,402,541],
[463,488,424,0,426,428,449,457],
[466,503,413,465,0,437,390,433],
[431,488,387,463,454,0,435,467],
[466,533,489,442,501,456,0,543],
[422,398,350,434,458,424,348,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,468,434,454,463,460,470],
[462,0,459,450,445,458,461,447],
[423,432,0,441,440,448,447,458],
[457,441,450,0,458,455,463,459],
[437,446,451,433,0,444,428,441],
[428,433,443,436,447,0,447,444],
[431,430,444,428,463,444,0,438],
[421,444,433,432,450,447,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,461,449,443,430,424,453],
[404,0,431,447,400,427,425,420],
[430,460,0,447,438,428,428,436],
[442,444,444,0,425,446,441,429],
[448,491,453,466,0,444,473,446],
[461,464,463,445,447,0,463,445],
[467,466,463,450,418,428,0,433],
[438,471,455,462,445,446,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,479,490,437,463,448,448],
[451,0,447,462,446,439,429,455],
[412,444,0,466,439,465,450,434],
[401,429,425,0,432,458,431,425],
[454,445,452,459,0,456,416,427],
[428,452,426,433,435,0,432,445],
[443,462,441,460,475,459,0,450],
[443,436,457,466,464,446,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,391,415,451,397,453,433],
[405,0,426,411,453,396,417,451],
[500,465,0,430,516,449,468,422],
[476,480,461,0,471,411,450,391],
[440,438,375,420,0,344,433,396],
[494,495,442,480,547,0,457,494],
[438,474,423,441,458,434,0,415],
[458,440,469,500,495,397,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,400,446,382,422,399,446],
[498,0,480,469,449,433,434,476],
[491,411,0,457,431,408,396,452],
[445,422,434,0,429,421,429,406],
[509,442,460,462,0,468,430,474],
[469,458,483,470,423,0,451,451],
[492,457,495,462,461,440,0,448],
[445,415,439,485,417,440,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,442,443,456,453,447,449],
[435,0,436,438,465,448,449,438],
[449,455,0,429,451,455,446,439],
[448,453,462,0,465,455,440,445],
[435,426,440,426,0,440,445,421],
[438,443,436,436,451,0,437,432],
[444,442,445,451,446,454,0,428],
[442,453,452,446,470,459,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,442,448,452,446,450,465],
[451,0,445,434,458,421,457,458],
[449,446,0,453,444,454,432,452],
[443,457,438,0,440,431,464,463],
[439,433,447,451,0,448,439,418],
[445,470,437,460,443,0,483,436],
[441,434,459,427,452,408,0,437],
[426,433,439,428,473,455,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,458,484,463,448,475,440],
[421,0,467,474,458,403,453,456],
[433,424,0,477,455,420,466,437],
[407,417,414,0,426,408,411,437],
[428,433,436,465,0,400,453,421],
[443,488,471,483,491,0,505,458],
[416,438,425,480,438,386,0,446],
[451,435,454,454,470,433,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,439,435,429,467,431,414],
[463,0,442,470,425,476,476,448],
[452,449,0,448,450,462,472,445],
[456,421,443,0,419,451,448,419],
[462,466,441,472,0,471,466,432],
[424,415,429,440,420,0,426,416],
[460,415,419,443,425,465,0,415],
[477,443,446,472,459,475,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,469,459,452,485,450,438],
[445,0,455,450,436,440,443,425],
[422,436,0,419,393,427,441,413],
[432,441,472,0,449,469,459,447],
[439,455,498,442,0,499,475,432],
[406,451,464,422,392,0,438,417],
[441,448,450,432,416,453,0,410],
[453,466,478,444,459,474,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,465,475,461,442,446,462],
[448,0,451,447,451,458,433,447],
[426,440,0,435,442,449,432,432],
[416,444,456,0,449,450,441,434],
[430,440,449,442,0,455,425,423],
[449,433,442,441,436,0,439,451],
[445,458,459,450,466,452,0,458],
[429,444,459,457,468,440,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,439,448,453,422,449,449],
[444,0,449,450,431,430,443,443],
[452,442,0,435,433,438,429,433],
[443,441,456,0,455,442,449,428],
[438,460,458,436,0,432,444,439],
[469,461,453,449,459,0,445,447],
[442,448,462,442,447,446,0,424],
[442,448,458,463,452,444,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,486,428,429,437,449,440],
[456,0,475,449,472,433,465,446],
[405,416,0,428,424,433,468,416],
[463,442,463,0,413,394,497,454],
[462,419,467,478,0,458,464,458],
[454,458,458,497,433,0,519,434],
[442,426,423,394,427,372,0,400],
[451,445,475,437,433,457,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,461,469,455,477,469,457],
[456,0,450,443,429,498,473,445],
[430,441,0,424,422,466,456,443],
[422,448,467,0,438,487,440,449],
[436,462,469,453,0,488,470,472],
[414,393,425,404,403,0,404,440],
[422,418,435,451,421,487,0,456],
[434,446,448,442,419,451,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,393,484,475,391,408,390],
[504,0,495,531,466,418,503,478],
[498,396,0,497,505,397,545,420],
[407,360,394,0,419,369,451,400],
[416,425,386,472,0,409,455,382],
[500,473,494,522,482,0,500,424],
[483,388,346,440,436,391,0,443],
[501,413,471,491,509,467,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,443,281,336,279,336,388],
[502,0,556,557,503,558,445,613],
[448,335,0,450,339,505,393,560],
[610,334,441,0,278,501,387,612],
[555,388,552,613,0,502,556,501],
[612,333,386,390,389,0,389,559],
[555,446,498,504,335,502,0,501],
[503,278,331,279,390,332,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,424,441,411,410,417,438],
[478,0,458,450,432,451,479,471],
[467,433,0,459,418,433,452,433],
[450,441,432,0,393,442,458,415],
[480,459,473,498,0,422,455,469],
[481,440,458,449,469,0,453,447],
[474,412,439,433,436,438,0,472],
[453,420,458,476,422,444,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,476,464,441,482,457,437],
[435,0,470,461,476,469,435,438],
[415,421,0,432,441,445,451,424],
[427,430,459,0,446,414,420,423],
[450,415,450,445,0,456,421,447],
[409,422,446,477,435,0,431,406],
[434,456,440,471,470,460,0,459],
[454,453,467,468,444,485,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,460,453,460,446,442,447],
[424,0,467,448,448,435,449,447],
[431,424,0,427,426,415,441,462],
[438,443,464,0,454,448,454,472],
[431,443,465,437,0,454,450,461],
[445,456,476,443,437,0,442,443],
[449,442,450,437,441,449,0,455],
[444,444,429,419,430,448,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,447,430,433,436,429,426],
[429,0,423,412,443,412,424,440],
[444,468,0,411,445,445,434,445],
[461,479,480,0,419,450,448,450],
[458,448,446,472,0,423,457,419],
[455,479,446,441,468,0,463,430],
[462,467,457,443,434,428,0,440],
[465,451,446,441,472,461,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,436,414,459,448,436,462],
[481,0,481,460,443,482,439,484],
[455,410,0,430,482,466,485,436],
[477,431,461,0,496,489,448,423],
[432,448,409,395,0,462,454,434],
[443,409,425,402,429,0,448,408],
[455,452,406,443,437,443,0,443],
[429,407,455,468,457,483,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,432,449,447,448,442,450],
[460,0,439,450,416,440,437,445],
[459,452,0,459,451,469,442,468],
[442,441,432,0,433,463,443,458],
[444,475,440,458,0,480,452,465],
[443,451,422,428,411,0,427,451],
[449,454,449,448,439,464,0,444],
[441,446,423,433,426,440,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,463,445,464,453,460,449],
[448,0,440,455,493,441,434,459],
[428,451,0,453,465,453,458,446],
[446,436,438,0,460,457,427,445],
[427,398,426,431,0,427,425,421],
[438,450,438,434,464,0,450,435],
[431,457,433,464,466,441,0,458],
[442,432,445,446,470,456,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,463,422,470,423,454,445],
[445,0,439,446,457,414,457,429],
[428,452,0,482,467,447,468,416],
[469,445,409,0,441,435,444,411],
[421,434,424,450,0,459,473,439],
[468,477,444,456,432,0,481,449],
[437,434,423,447,418,410,0,426],
[446,462,475,480,452,442,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,516,498,493,475,371,476],
[477,0,434,460,476,497,392,411],
[375,457,0,397,472,355,396,373],
[393,431,494,0,494,389,453,432],
[398,415,419,397,0,381,432,353],
[416,394,536,502,510,0,433,476],
[520,499,495,438,459,458,0,393],
[415,480,518,459,538,415,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,506,462,483,503,421,487,481],
[385,0,393,415,392,398,441,395],
[429,498,0,406,458,469,468,462],
[408,476,485,0,449,468,430,397],
[388,499,433,442,0,403,453,435],
[470,493,422,423,488,0,470,465],
[404,450,423,461,438,421,0,409],
[410,496,429,494,456,426,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,430,412,442,413,379,427],
[452,0,486,399,459,449,413,469],
[461,405,0,408,418,445,405,395],
[479,492,483,0,436,453,468,463],
[449,432,473,455,0,438,439,466],
[478,442,446,438,453,0,411,443],
[512,478,486,423,452,480,0,456],
[464,422,496,428,425,448,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,433,416,399,424,424,448],
[425,0,432,429,443,442,430,436],
[458,459,0,437,409,445,452,457],
[475,462,454,0,448,437,435,451],
[492,448,482,443,0,460,459,502],
[467,449,446,454,431,0,455,468],
[467,461,439,456,432,436,0,457],
[443,455,434,440,389,423,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,421,424,434,424,436,423],
[473,0,429,461,450,442,464,457],
[470,462,0,440,469,442,446,437],
[467,430,451,0,438,427,470,434],
[457,441,422,453,0,426,439,461],
[467,449,449,464,465,0,475,435],
[455,427,445,421,452,416,0,454],
[468,434,454,457,430,456,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,464,444,455,459,472,492],
[437,0,462,446,443,441,478,464],
[427,429,0,449,444,440,439,447],
[447,445,442,0,459,448,433,476],
[436,448,447,432,0,482,468,460],
[432,450,451,443,409,0,455,478],
[419,413,452,458,423,436,0,430],
[399,427,444,415,431,413,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,448,445,438,439,422,440],
[421,0,471,442,419,420,413,428],
[443,420,0,438,416,406,404,428],
[446,449,453,0,440,438,398,439],
[453,472,475,451,0,447,428,428],
[452,471,485,453,444,0,447,452],
[469,478,487,493,463,444,0,479],
[451,463,463,452,463,439,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,414,463,442,459,444,469],
[445,0,427,455,439,461,440,456],
[477,464,0,481,440,463,461,466],
[428,436,410,0,421,448,446,459],
[449,452,451,470,0,424,457,468],
[432,430,428,443,467,0,454,467],
[447,451,430,445,434,437,0,459],
[422,435,425,432,423,424,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,461,435,415,430,431,433],
[470,0,449,450,447,413,457,441],
[430,442,0,420,412,433,426,433],
[456,441,471,0,426,460,465,443],
[476,444,479,465,0,453,461,451],
[461,478,458,431,438,0,449,450],
[460,434,465,426,430,442,0,448],
[458,450,458,448,440,441,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,434,448,439,448,484,443],
[451,0,429,454,444,452,452,436],
[457,462,0,456,453,446,452,445],
[443,437,435,0,451,457,466,450],
[452,447,438,440,0,459,481,446],
[443,439,445,434,432,0,466,444],
[407,439,439,425,410,425,0,407],
[448,455,446,441,445,447,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,450,443,444,422,445,429],
[468,0,453,478,466,436,444,451],
[441,438,0,451,434,449,430,460],
[448,413,440,0,434,410,447,438],
[447,425,457,457,0,432,425,460],
[469,455,442,481,459,0,441,444],
[446,447,461,444,466,450,0,437],
[462,440,431,453,431,447,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,435,429,457,443,431,427],
[475,0,460,465,476,455,443,454],
[456,431,0,451,476,464,449,421],
[462,426,440,0,449,434,438,438],
[434,415,415,442,0,430,418,433],
[448,436,427,457,461,0,430,408],
[460,448,442,453,473,461,0,444],
[464,437,470,453,458,483,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,475,451,399,417,417,460],
[475,0,520,423,496,478,479,548],
[416,371,0,439,406,428,416,452],
[440,468,452,0,467,457,475,467],
[492,395,485,424,0,436,451,488],
[474,413,463,434,455,0,462,451],
[474,412,475,416,440,429,0,479],
[431,343,439,424,403,440,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,454,440,414,430,430,389],
[475,0,438,448,411,443,438,441],
[437,453,0,437,415,430,433,449],
[451,443,454,0,458,441,413,411],
[477,480,476,433,0,456,446,430],
[461,448,461,450,435,0,436,422],
[461,453,458,478,445,455,0,446],
[502,450,442,480,461,469,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,455,423,436,462,436,466],
[455,0,447,448,430,427,448,448],
[436,444,0,422,438,436,443,446],
[468,443,469,0,441,463,447,465],
[455,461,453,450,0,459,450,444],
[429,464,455,428,432,0,454,444],
[455,443,448,444,441,437,0,436],
[425,443,445,426,447,447,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,454,450,460,451,434,457],
[461,0,457,469,456,461,434,454],
[437,434,0,456,444,457,451,453],
[441,422,435,0,454,439,432,430],
[431,435,447,437,0,442,435,449],
[440,430,434,452,449,0,446,451],
[457,457,440,459,456,445,0,437],
[434,437,438,461,442,440,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,433,452,426,425,429,439],
[471,0,461,464,487,468,435,425],
[458,430,0,480,466,475,431,452],
[439,427,411,0,454,435,407,430],
[465,404,425,437,0,421,423,397],
[466,423,416,456,470,0,437,423],
[462,456,460,484,468,454,0,435],
[452,466,439,461,494,468,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,420,425,448,450,434,454],
[449,0,439,421,474,461,442,457],
[471,452,0,447,457,441,444,454],
[466,470,444,0,460,454,449,463],
[443,417,434,431,0,444,421,433],
[441,430,450,437,447,0,424,459],
[457,449,447,442,470,467,0,457],
[437,434,437,428,458,432,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,454,494,444,454,445,475],
[426,0,429,457,437,422,426,458],
[437,462,0,453,462,441,456,410],
[397,434,438,0,417,436,417,437],
[447,454,429,474,0,429,420,439],
[437,469,450,455,462,0,436,463],
[446,465,435,474,471,455,0,426],
[416,433,481,454,452,428,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,443,429,416,419,452,424],
[455,0,451,444,434,437,478,418],
[448,440,0,453,423,462,472,444],
[462,447,438,0,457,445,440,443],
[475,457,468,434,0,464,457,450],
[472,454,429,446,427,0,448,443],
[439,413,419,451,434,443,0,440],
[467,473,447,448,441,448,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,417,408,448,431,433,478],
[458,0,489,440,459,456,454,458],
[474,402,0,455,447,433,452,477],
[483,451,436,0,450,459,476,483],
[443,432,444,441,0,421,432,494],
[460,435,458,432,470,0,461,489],
[458,437,439,415,459,430,0,459],
[413,433,414,408,397,402,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,440,452,440,414,403,430],
[480,0,473,481,473,446,430,486],
[451,418,0,462,421,403,422,450],
[439,410,429,0,414,440,396,448],
[451,418,470,477,0,456,417,471],
[477,445,488,451,435,0,461,497],
[488,461,469,495,474,430,0,489],
[461,405,441,443,420,394,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,445,444,443,437,424,475],
[435,0,428,449,458,446,434,476],
[446,463,0,446,483,459,422,437],
[447,442,445,0,443,439,438,466],
[448,433,408,448,0,416,423,445],
[454,445,432,452,475,0,457,471],
[467,457,469,453,468,434,0,491],
[416,415,454,425,446,420,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,451,422,436,433,472,431],
[472,0,472,441,455,469,467,455],
[440,419,0,432,430,423,454,442],
[469,450,459,0,442,463,468,462],
[455,436,461,449,0,464,461,469],
[458,422,468,428,427,0,465,472],
[419,424,437,423,430,426,0,423],
[460,436,449,429,422,419,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,452,443,432,447,433,421],
[435,0,432,469,398,425,432,405],
[439,459,0,460,400,437,434,428],
[448,422,431,0,427,427,424,436],
[459,493,491,464,0,423,469,451],
[444,466,454,464,468,0,433,435],
[458,459,457,467,422,458,0,402],
[470,486,463,455,440,456,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,456,469,443,445,458,448],
[455,0,458,487,460,455,445,453],
[435,433,0,456,443,437,426,431],
[422,404,435,0,433,434,438,412],
[448,431,448,458,0,435,438,440],
[446,436,454,457,456,0,455,453],
[433,446,465,453,453,436,0,427],
[443,438,460,479,451,438,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,442,452,444,454,440,463],
[440,0,444,465,452,428,425,444],
[449,447,0,461,437,449,454,462],
[439,426,430,0,438,417,407,436],
[447,439,454,453,0,442,425,457],
[437,463,442,474,449,0,435,443],
[451,466,437,484,466,456,0,465],
[428,447,429,455,434,448,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,398,454,462,441,426,501],
[387,0,370,405,405,431,418,462],
[493,521,0,439,426,449,488,541],
[437,486,452,0,430,509,545,527],
[429,486,465,461,0,462,386,480],
[450,460,442,382,429,0,470,490],
[465,473,403,346,505,421,0,448],
[390,429,350,364,411,401,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,462,454,460,453,465,427],
[425,0,460,465,457,457,448,461],
[429,431,0,438,420,439,414,412],
[437,426,453,0,422,449,431,404],
[431,434,471,469,0,439,455,408],
[438,434,452,442,452,0,459,418],
[426,443,477,460,436,432,0,394],
[464,430,479,487,483,473,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,454,467,426,456,455,444],
[503,0,489,454,499,487,435,521],
[437,402,0,425,464,451,406,443],
[424,437,466,0,505,514,454,488],
[465,392,427,386,0,441,409,390],
[435,404,440,377,450,0,368,432],
[436,456,485,437,482,523,0,458],
[447,370,448,403,501,459,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,485,417,514,417,445,550],
[417,0,475,413,487,533,463,569],
[406,416,0,404,398,434,436,527],
[474,478,487,0,428,508,406,586],
[377,404,493,463,0,524,420,465],
[474,358,457,383,367,0,450,519],
[446,428,455,485,471,441,0,537],
[341,322,364,305,426,372,354,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,456,498,443,477,482,484],
[439,0,396,464,434,431,501,412],
[435,495,0,486,483,471,476,457],
[393,427,405,0,390,430,380,414],
[448,457,408,501,0,470,416,447],
[414,460,420,461,421,0,467,442],
[409,390,415,511,475,424,0,442],
[407,479,434,477,444,449,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,409,413,434,398,437,469],
[460,0,467,443,440,429,450,498],
[482,424,0,468,468,461,458,497],
[478,448,423,0,451,407,481,481],
[457,451,423,440,0,444,406,470],
[493,462,430,484,447,0,447,488],
[454,441,433,410,485,444,0,484],
[422,393,394,410,421,403,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,400,445,453,428,446,453],
[413,0,405,481,414,444,437,456],
[491,486,0,454,406,459,441,486],
[446,410,437,0,371,436,423,424],
[438,477,485,520,0,448,449,468],
[463,447,432,455,443,0,437,450],
[445,454,450,468,442,454,0,453],
[438,435,405,467,423,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,450,428,457,430,466,441],
[468,0,440,457,479,471,487,461],
[441,451,0,433,465,459,483,476],
[463,434,458,0,446,448,487,461],
[434,412,426,445,0,442,470,440],
[461,420,432,443,449,0,483,468],
[425,404,408,404,421,408,0,416],
[450,430,415,430,451,423,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,503,462,431,483,457,458],
[390,0,425,384,374,433,388,428],
[388,466,0,426,412,459,422,433],
[429,507,465,0,457,431,458,433],
[460,517,479,434,0,458,463,459],
[408,458,432,460,433,0,432,452],
[434,503,469,433,428,459,0,451],
[433,463,458,458,432,439,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,379,416,350,381,404,325],
[460,0,434,426,394,419,433,454],
[512,457,0,428,453,482,469,493],
[475,465,463,0,471,415,441,458],
[541,497,438,420,0,448,461,408],
[510,472,409,476,443,0,453,366],
[487,458,422,450,430,438,0,439],
[566,437,398,433,483,525,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,421,419,424,429,410,418],
[479,0,423,437,439,445,422,441],
[470,468,0,470,471,472,450,442],
[472,454,421,0,452,441,439,415],
[467,452,420,439,0,447,422,446],
[462,446,419,450,444,0,443,434],
[481,469,441,452,469,448,0,462],
[473,450,449,476,445,457,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,421,422,457,451,453,407],
[418,0,406,423,423,432,441,440],
[470,485,0,467,492,483,480,430],
[469,468,424,0,455,462,461,446],
[434,468,399,436,0,436,441,397],
[440,459,408,429,455,0,428,434],
[438,450,411,430,450,463,0,407],
[484,451,461,445,494,457,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,403,405,402,398,309,314],
[487,0,445,313,354,445,309,357],
[488,446,0,401,490,401,490,222],
[486,578,490,0,401,399,399,446],
[489,537,401,490,0,534,442,313],
[493,446,490,492,357,0,401,357],
[582,582,401,492,449,490,0,359],
[577,534,669,445,578,534,532,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,593,445,594,297,593,593],
[446,0,742,446,743,595,297,742],
[298,149,0,446,298,149,149,297],
[446,445,445,0,594,297,445,593],
[297,148,593,297,0,296,445,296],
[594,296,742,594,595,0,445,593],
[298,594,742,446,446,446,0,594],
[298,149,594,298,595,298,297,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,447,450,478,472,431,429],
[419,0,439,442,425,420,435,401],
[444,452,0,434,443,430,432,445],
[441,449,457,0,433,458,436,449],
[413,466,448,458,0,424,453,452],
[419,471,461,433,467,0,439,426],
[460,456,459,455,438,452,0,417],
[462,490,446,442,439,465,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,462,448,437,490,448,428],
[480,0,477,456,437,470,440,475],
[429,414,0,438,446,465,442,419],
[443,435,453,0,454,476,470,451],
[454,454,445,437,0,477,467,456],
[401,421,426,415,414,0,419,417],
[443,451,449,421,424,472,0,420],
[463,416,472,440,435,474,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,438,426,433,444,486,458],
[443,0,423,430,430,480,492,425],
[453,468,0,450,451,492,487,444],
[465,461,441,0,436,450,485,477],
[458,461,440,455,0,431,530,433],
[447,411,399,441,460,0,484,439],
[405,399,404,406,361,407,0,402],
[433,466,447,414,458,452,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,472,419,475,473,375,434],
[454,0,470,440,436,498,513,482],
[419,421,0,428,413,477,432,458],
[472,451,463,0,468,515,476,436],
[416,455,478,423,0,465,449,473],
[418,393,414,376,426,0,388,465],
[516,378,459,415,442,503,0,479],
[457,409,433,455,418,426,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,454,439,451,451,453,439],
[402,0,437,446,435,432,435,436],
[437,454,0,447,430,433,436,454],
[452,445,444,0,444,432,454,454],
[440,456,461,447,0,460,459,453],
[440,459,458,459,431,0,429,445],
[438,456,455,437,432,462,0,433],
[452,455,437,437,438,446,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,434,419,426,441,459,435],
[434,0,428,413,413,442,465,440],
[457,463,0,433,446,452,434,440],
[472,478,458,0,445,460,468,444],
[465,478,445,446,0,449,480,439],
[450,449,439,431,442,0,454,447],
[432,426,457,423,411,437,0,440],
[456,451,451,447,452,444,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,404,428,423,416,398,422],
[433,0,419,418,417,412,409,412],
[487,472,0,450,446,435,439,438],
[463,473,441,0,444,463,452,468],
[468,474,445,447,0,435,435,452],
[475,479,456,428,456,0,451,450],
[493,482,452,439,456,440,0,463],
[469,479,453,423,439,441,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,492,469,453,433,520,438],
[403,0,452,404,445,436,524,475],
[399,439,0,381,420,429,470,406],
[422,487,510,0,464,467,526,472],
[438,446,471,427,0,451,489,479],
[458,455,462,424,440,0,506,423],
[371,367,421,365,402,385,0,408],
[453,416,485,419,412,468,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,431,465,422,432,432,418],
[450,0,463,431,432,439,436,445],
[460,428,0,468,438,435,436,449],
[426,460,423,0,444,418,435,431],
[469,459,453,447,0,451,449,434],
[459,452,456,473,440,0,450,454],
[459,455,455,456,442,441,0,423],
[473,446,442,460,457,437,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,387,441,417,428,422,414],
[436,0,435,463,454,429,460,445],
[504,456,0,479,452,483,433,436],
[450,428,412,0,459,458,432,417],
[474,437,439,432,0,463,448,435],
[463,462,408,433,428,0,454,409],
[469,431,458,459,443,437,0,451],
[477,446,455,474,456,482,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,468,445,405,440,457,471],
[462,0,456,387,447,460,454,477],
[423,435,0,450,442,473,447,429],
[446,504,441,0,459,489,452,485],
[486,444,449,432,0,460,442,474],
[451,431,418,402,431,0,419,430],
[434,437,444,439,449,472,0,464],
[420,414,462,406,417,461,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,447,453,456,466,459,450],
[456,0,460,455,453,456,423,442],
[444,431,0,478,452,444,460,463],
[438,436,413,0,485,468,447,441],
[435,438,439,406,0,450,424,393],
[425,435,447,423,441,0,449,444],
[432,468,431,444,467,442,0,451],
[441,449,428,450,498,447,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,432,448,451,428,451,403],
[434,0,451,440,447,450,449,416],
[459,440,0,442,447,444,436,446],
[443,451,449,0,439,441,452,445],
[440,444,444,452,0,461,449,430],
[463,441,447,450,430,0,454,426],
[440,442,455,439,442,437,0,436],
[488,475,445,446,461,465,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,449,435,450,471,460,495],
[421,0,408,414,448,454,457,476],
[442,483,0,424,462,479,463,525],
[456,477,467,0,434,484,442,496],
[441,443,429,457,0,447,458,496],
[420,437,412,407,444,0,447,455],
[431,434,428,449,433,444,0,474],
[396,415,366,395,395,436,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,441,442,429,460,468,443],
[403,0,418,405,409,436,439,449],
[450,473,0,437,442,465,465,448],
[449,486,454,0,440,441,441,439],
[462,482,449,451,0,437,425,446],
[431,455,426,450,454,0,424,433],
[423,452,426,450,466,467,0,466],
[448,442,443,452,445,458,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,447,471,463,444,463,462],
[444,0,434,434,464,434,441,415],
[444,457,0,441,460,440,462,430],
[420,457,450,0,445,429,398,431],
[428,427,431,446,0,414,434,404],
[447,457,451,462,477,0,452,442],
[428,450,429,493,457,439,0,419],
[429,476,461,460,487,449,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,430,444,436,468,432,430],
[453,0,434,454,458,472,442,458],
[461,457,0,469,454,449,441,455],
[447,437,422,0,419,474,434,437],
[455,433,437,472,0,462,466,443],
[423,419,442,417,429,0,415,434],
[459,449,450,457,425,476,0,450],
[461,433,436,454,448,457,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,418,444,496,403,454,383],
[452,0,436,498,460,468,425,428],
[473,455,0,516,486,451,444,450],
[447,393,375,0,410,412,396,366],
[395,431,405,481,0,445,445,370],
[488,423,440,479,446,0,462,444],
[437,466,447,495,446,429,0,416],
[508,463,441,525,521,447,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,418,376,484,376,415,428],
[502,0,525,442,535,447,508,486],
[473,366,0,390,453,401,452,401],
[515,449,501,0,512,398,484,464],
[407,356,438,379,0,361,393,402],
[515,444,490,493,530,0,510,484],
[476,383,439,407,498,381,0,425],
[463,405,490,427,489,407,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,449,447,430,443,437,434],
[460,0,452,454,449,457,461,431],
[442,439,0,463,450,447,448,444],
[444,437,428,0,428,429,426,427],
[461,442,441,463,0,447,455,438],
[448,434,444,462,444,0,441,445],
[454,430,443,465,436,450,0,448],
[457,460,447,464,453,446,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,429,437,438,441,444,459],
[448,0,443,446,442,438,439,461],
[462,448,0,453,451,441,449,463],
[454,445,438,0,440,451,455,443],
[453,449,440,451,0,469,463,458],
[450,453,450,440,422,0,453,453],
[447,452,442,436,428,438,0,447],
[432,430,428,448,433,438,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,435,467,440,450,468,457],
[444,0,439,459,466,451,452,459],
[456,452,0,458,443,441,438,448],
[424,432,433,0,453,433,438,451],
[451,425,448,438,0,440,440,469],
[441,440,450,458,451,0,455,464],
[423,439,453,453,451,436,0,445],
[434,432,443,440,422,427,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,455,456,466,450,440,455],
[431,0,472,447,469,447,441,453],
[436,419,0,453,458,430,417,432],
[435,444,438,0,453,430,442,439],
[425,422,433,438,0,400,425,436],
[441,444,461,461,491,0,443,463],
[451,450,474,449,466,448,0,443],
[436,438,459,452,455,428,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,459,450,414,451,520,487],
[421,0,419,398,454,435,459,419],
[432,472,0,476,463,471,493,469],
[441,493,415,0,445,492,502,463],
[477,437,428,446,0,465,514,472],
[440,456,420,399,426,0,463,409],
[371,432,398,389,377,428,0,444],
[404,472,422,428,419,482,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,541,456,539,486,542,650,433],
[350,0,295,375,294,433,377,431],
[435,596,0,457,456,462,595,512],
[352,516,434,0,349,489,461,353],
[405,597,435,542,0,487,489,461],
[349,458,429,402,404,0,486,511],
[241,514,296,430,402,405,0,404],
[458,460,379,538,430,380,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,435,475,449,432,429,441],
[450,0,440,464,443,421,418,436],
[456,451,0,448,456,424,434,454],
[416,427,443,0,436,405,431,425],
[442,448,435,455,0,427,427,434],
[459,470,467,486,464,0,466,441],
[462,473,457,460,464,425,0,474],
[450,455,437,466,457,450,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,433,441,474,458,441,460],
[446,0,449,454,454,437,432,471],
[458,442,0,441,468,454,430,472],
[450,437,450,0,474,467,446,463],
[417,437,423,417,0,454,415,424],
[433,454,437,424,437,0,433,437],
[450,459,461,445,476,458,0,467],
[431,420,419,428,467,454,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,427,436,426,413,431,417],
[449,0,424,453,427,411,435,442],
[464,467,0,465,464,446,433,437],
[455,438,426,0,448,402,419,415],
[465,464,427,443,0,434,458,455],
[478,480,445,489,457,0,455,472],
[460,456,458,472,433,436,0,460],
[474,449,454,476,436,419,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,397,430,452,415,420,438],
[460,0,426,442,469,426,440,472],
[494,465,0,460,480,455,441,479],
[461,449,431,0,468,439,447,448],
[439,422,411,423,0,427,430,438],
[476,465,436,452,464,0,457,442],
[471,451,450,444,461,434,0,467],
[453,419,412,443,453,449,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,456,424,410,428,431,418],
[461,0,470,443,454,451,455,465],
[435,421,0,410,411,407,418,413],
[467,448,481,0,433,448,414,441],
[481,437,480,458,0,451,424,441],
[463,440,484,443,440,0,446,446],
[460,436,473,477,467,445,0,458],
[473,426,478,450,450,445,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,481,461,469,478,475,448],
[447,0,460,414,478,467,462,429],
[410,431,0,412,444,458,436,415],
[430,477,479,0,452,455,443,441],
[422,413,447,439,0,453,441,409],
[413,424,433,436,438,0,420,428],
[416,429,455,448,450,471,0,437],
[443,462,476,450,482,463,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,448,474,450,452,458,424],
[465,0,414,459,438,451,463,425],
[443,477,0,508,477,482,490,461],
[417,432,383,0,440,477,449,414],
[441,453,414,451,0,486,450,441],
[439,440,409,414,405,0,450,420],
[433,428,401,442,441,441,0,425],
[467,466,430,477,450,471,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,459,433,451,426,449,432],
[443,0,430,440,432,453,438,429],
[432,461,0,430,444,433,439,439],
[458,451,461,0,430,428,449,425],
[440,459,447,461,0,440,469,441],
[465,438,458,463,451,0,462,446],
[442,453,452,442,422,429,0,435],
[459,462,452,466,450,445,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,461,423,416,369,433,396],
[509,0,510,467,473,483,479,441],
[430,381,0,428,426,383,407,388],
[468,424,463,0,447,440,467,457],
[475,418,465,444,0,432,396,427],
[522,408,508,451,459,0,432,419],
[458,412,484,424,495,459,0,439],
[495,450,503,434,464,472,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,445,444,477,452,436,471],
[428,0,457,445,457,429,430,447],
[446,434,0,427,468,423,421,424],
[447,446,464,0,468,443,427,448],
[414,434,423,423,0,433,412,417],
[439,462,468,448,458,0,466,482],
[455,461,470,464,479,425,0,451],
[420,444,467,443,474,409,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,428,443,470,453,461,459],
[441,0,482,454,482,464,458,474],
[463,409,0,480,471,460,466,467],
[448,437,411,0,451,429,456,468],
[421,409,420,440,0,401,444,420],
[438,427,431,462,490,0,464,461],
[430,433,425,435,447,427,0,430],
[432,417,424,423,471,430,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,468,482,484,480,479,442],
[431,0,484,490,480,471,463,449],
[423,407,0,464,439,443,438,430],
[409,401,427,0,436,441,432,435],
[407,411,452,455,0,456,458,422],
[411,420,448,450,435,0,434,421],
[412,428,453,459,433,457,0,434],
[449,442,461,456,469,470,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,428,462,467,462,474,475],
[417,0,409,459,463,456,431,400],
[463,482,0,452,458,436,467,473],
[429,432,439,0,460,431,447,448],
[424,428,433,431,0,462,444,450],
[429,435,455,460,429,0,408,415],
[417,460,424,444,447,483,0,441],
[416,491,418,443,441,476,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,462,449,435,449,450,435],
[443,0,414,440,436,452,447,455],
[429,477,0,458,451,443,451,427],
[442,451,433,0,421,482,446,439],
[456,455,440,470,0,469,435,459],
[442,439,448,409,422,0,448,446],
[441,444,440,445,456,443,0,424],
[456,436,464,452,432,445,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,451,433,447,446,451,430],
[434,0,450,416,435,433,436,419],
[440,441,0,416,435,445,416,445],
[458,475,475,0,483,459,439,470],
[444,456,456,408,0,435,436,435],
[445,458,446,432,456,0,421,435],
[440,455,475,452,455,470,0,449],
[461,472,446,421,456,456,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,494,483,464,452,449,434],
[419,0,491,484,436,449,435,421],
[397,400,0,413,417,432,394,415],
[408,407,478,0,471,463,395,439],
[427,455,474,420,0,448,419,437],
[439,442,459,428,443,0,453,417],
[442,456,497,496,472,438,0,467],
[457,470,476,452,454,474,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,439,454,458,434,441,443],
[462,0,438,470,447,472,454,455],
[452,453,0,460,455,443,467,460],
[437,421,431,0,422,410,441,427],
[433,444,436,469,0,428,468,441],
[457,419,448,481,463,0,446,457],
[450,437,424,450,423,445,0,432],
[448,436,431,464,450,434,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,441,443,421,428,440,464],
[474,0,460,455,447,443,453,484],
[450,431,0,436,444,425,433,466],
[448,436,455,0,399,440,440,455],
[470,444,447,492,0,453,463,472],
[463,448,466,451,438,0,460,491],
[451,438,458,451,428,431,0,473],
[427,407,425,436,419,400,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,378,412,412,403,445,417],
[468,0,384,430,400,394,421,417],
[513,507,0,511,434,454,493,464],
[479,461,380,0,418,444,419,424],
[479,491,457,473,0,431,484,473],
[488,497,437,447,460,0,438,456],
[446,470,398,472,407,453,0,458],
[474,474,427,467,418,435,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,401,411,425,432,419,407],
[473,0,443,453,468,421,467,424],
[490,448,0,460,454,445,459,443],
[480,438,431,0,443,420,427,418],
[466,423,437,448,0,443,409,411],
[459,470,446,471,448,0,438,426],
[472,424,432,464,482,453,0,446],
[484,467,448,473,480,465,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,442,450,420,481,418,456],
[430,0,409,449,451,419,406,410],
[449,482,0,468,483,442,446,466],
[441,442,423,0,420,446,430,411],
[471,440,408,471,0,466,440,471],
[410,472,449,445,425,0,420,456],
[473,485,445,461,451,471,0,471],
[435,481,425,480,420,435,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,409,475,495,405,427,445],
[439,0,428,461,495,478,460,430],
[482,463,0,508,437,445,433,471],
[416,430,383,0,413,374,414,403],
[396,396,454,478,0,411,468,431],
[486,413,446,517,480,0,457,454],
[464,431,458,477,423,434,0,386],
[446,461,420,488,460,437,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,461,465,447,429,450,382],
[427,0,423,418,386,395,411,369],
[430,468,0,407,426,438,496,423],
[426,473,484,0,424,423,447,438],
[444,505,465,467,0,451,474,477],
[462,496,453,468,440,0,477,429],
[441,480,395,444,417,414,0,418],
[509,522,468,453,414,462,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,375,464,434,464,537,471,453],
[516,0,423,461,453,453,511,459],
[427,468,0,488,451,525,513,462],
[457,430,403,0,422,381,441,393],
[427,438,440,469,0,417,460,466],
[354,438,366,510,474,0,481,423],
[420,380,378,450,431,410,0,403],
[438,432,429,498,425,468,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,396,392,388,451,415,437],
[478,0,399,442,392,429,414,458],
[495,492,0,470,405,467,465,454],
[499,449,421,0,410,467,450,489],
[503,499,486,481,0,526,435,490],
[440,462,424,424,365,0,390,450],
[476,477,426,441,456,501,0,513],
[454,433,437,402,401,441,378,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,455,451,439,435,435,450],
[441,0,420,444,420,434,416,445],
[436,471,0,443,425,412,457,483],
[440,447,448,0,433,430,414,467],
[452,471,466,458,0,425,449,450],
[456,457,479,461,466,0,430,456],
[456,475,434,477,442,461,0,495],
[441,446,408,424,441,435,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,594,594,298,296,594,298,296],
[297,0,594,298,593,296,0,593],
[297,297,0,595,593,296,297,593],
[593,593,296,0,593,296,593,593],
[595,298,298,298,0,298,298,296],
[297,595,595,595,593,0,297,593],
[593,891,594,298,593,594,0,593],
[595,298,298,298,595,298,298,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,472,424,453,475,431,460],
[448,0,432,432,432,419,454,447],
[419,459,0,445,433,439,417,454],
[467,459,446,0,453,420,476,425],
[438,459,458,438,0,446,410,437],
[416,472,452,471,445,0,457,456],
[460,437,474,415,481,434,0,478],
[431,444,437,466,454,435,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,426,398,420,430,422,440],
[468,0,446,432,446,433,450,458],
[465,445,0,432,430,452,426,500],
[493,459,459,0,443,433,479,467],
[471,445,461,448,0,463,435,480],
[461,458,439,458,428,0,455,469],
[469,441,465,412,456,436,0,445],
[451,433,391,424,411,422,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,435,416,431,436,419,467],
[472,0,435,446,452,436,430,478],
[456,456,0,435,442,458,418,476],
[475,445,456,0,426,440,418,470],
[460,439,449,465,0,467,431,482],
[455,455,433,451,424,0,452,450],
[472,461,473,473,460,439,0,491],
[424,413,415,421,409,441,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,430,427,441,438,431,455],
[438,0,427,413,452,437,425,461],
[461,464,0,409,458,448,450,459],
[464,478,482,0,473,478,443,463],
[450,439,433,418,0,436,437,432],
[453,454,443,413,455,0,426,468],
[460,466,441,448,454,465,0,468],
[436,430,432,428,459,423,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,419,407,440,435,439,411],
[456,0,461,413,438,472,466,446],
[472,430,0,433,428,460,443,412],
[484,478,458,0,483,473,459,445],
[451,453,463,408,0,454,443,417],
[456,419,431,418,437,0,430,422],
[452,425,448,432,448,461,0,416],
[480,445,479,446,474,469,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,454,451,435,460,469,433],
[422,0,427,414,421,435,419,417],
[437,464,0,451,438,452,437,444],
[440,477,440,0,426,447,443,446],
[456,470,453,465,0,468,466,445],
[431,456,439,444,423,0,455,416],
[422,472,454,448,425,436,0,428],
[458,474,447,445,446,475,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,473,453,433,455,442,497],
[423,0,478,440,441,455,450,459],
[418,413,0,392,413,409,432,435],
[438,451,499,0,448,453,437,475],
[458,450,478,443,0,452,441,456],
[436,436,482,438,439,0,442,463],
[449,441,459,454,450,449,0,473],
[394,432,456,416,435,428,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,450,426,448,445,454,423],
[455,0,440,433,443,449,441,427],
[441,451,0,465,431,440,443,409],
[465,458,426,0,447,452,467,428],
[443,448,460,444,0,459,455,454],
[446,442,451,439,432,0,439,432],
[437,450,448,424,436,452,0,417],
[468,464,482,463,437,459,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,437,459,441,459,478,447],
[442,0,476,447,468,460,474,448],
[454,415,0,437,452,436,460,419],
[432,444,454,0,455,441,478,440],
[450,423,439,436,0,420,453,441],
[432,431,455,450,471,0,480,450],
[413,417,431,413,438,411,0,415],
[444,443,472,451,450,441,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,380,339,397,398,443,460],
[495,0,436,401,397,456,489,442],
[511,455,0,448,473,464,503,444],
[552,490,443,0,473,508,461,531],
[494,494,418,418,0,485,441,455],
[493,435,427,383,406,0,492,462],
[448,402,388,430,450,399,0,429],
[431,449,447,360,436,429,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,433,442,375,402,419,416],
[475,0,435,465,429,442,442,419],
[458,456,0,434,398,416,406,435],
[449,426,457,0,418,411,437,454],
[516,462,493,473,0,431,452,445],
[489,449,475,480,460,0,437,427],
[472,449,485,454,439,454,0,448],
[475,472,456,437,446,464,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,434,454,462,476,435,441],
[430,0,447,429,473,442,454,430],
[457,444,0,447,467,420,428,447],
[437,462,444,0,443,443,460,434],
[429,418,424,448,0,459,443,430],
[415,449,471,448,432,0,439,409],
[456,437,463,431,448,452,0,418],
[450,461,444,457,461,482,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,475,584,418,478,530,473],
[387,0,474,665,555,498,524,607],
[416,417,0,668,553,529,477,610],
[307,226,223,0,418,393,338,503],
[473,336,338,473,0,363,389,498],
[413,393,362,498,528,0,501,556],
[361,367,414,553,502,390,0,582],
[418,284,281,388,393,335,309,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,397,431,458,422,409,481],
[486,0,470,465,481,454,445,478],
[494,421,0,459,465,408,428,445],
[460,426,432,0,460,424,457,482],
[433,410,426,431,0,396,398,477],
[469,437,483,467,495,0,479,486],
[482,446,463,434,493,412,0,457],
[410,413,446,409,414,405,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,466,476,491,450,448,458],
[451,0,454,482,457,469,442,463],
[425,437,0,429,458,417,422,446],
[415,409,462,0,414,389,432,451],
[400,434,433,477,0,446,393,436],
[441,422,474,502,445,0,444,452],
[443,449,469,459,498,447,0,469],
[433,428,445,440,455,439,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,453,445,447,470,438,495],
[424,0,427,436,426,458,434,430],
[438,464,0,468,437,475,446,474],
[446,455,423,0,425,470,440,432],
[444,465,454,466,0,492,455,479],
[421,433,416,421,399,0,443,442],
[453,457,445,451,436,448,0,449],
[396,461,417,459,412,449,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,398,399,434,508,451,488],
[458,0,430,415,407,507,413,485],
[493,461,0,440,463,504,491,473],
[492,476,451,0,444,478,487,485],
[457,484,428,447,0,489,484,478],
[383,384,387,413,402,0,406,454],
[440,478,400,404,407,485,0,475],
[403,406,418,406,413,437,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,445,478,452,445,444,447],
[429,0,429,461,465,453,426,435],
[446,462,0,473,458,474,435,454],
[413,430,418,0,447,449,450,427],
[439,426,433,444,0,440,449,433],
[446,438,417,442,451,0,427,432],
[447,465,456,441,442,464,0,449],
[444,456,437,464,458,459,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,359,446,448,625,625,537,445],
[532,0,356,538,446,535,536,446],
[445,535,0,537,359,446,626,534],
[443,353,354,0,534,442,533,532],
[266,445,532,357,0,711,624,622],
[266,356,445,449,180,0,447,358],
[354,355,265,358,267,444,0,444],
[446,445,357,359,269,533,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,460,457,435,448,450,437],
[432,0,453,441,444,461,462,445],
[431,438,0,422,403,446,423,402],
[434,450,469,0,433,452,449,439],
[456,447,488,458,0,467,455,435],
[443,430,445,439,424,0,455,452],
[441,429,468,442,436,436,0,442],
[454,446,489,452,456,439,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,437,467,468,444,452,442],
[440,0,459,445,442,440,465,436],
[454,432,0,460,472,415,439,417],
[424,446,431,0,471,421,449,390],
[423,449,419,420,0,426,430,448],
[447,451,476,470,465,0,472,435],
[439,426,452,442,461,419,0,437],
[449,455,474,501,443,456,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,445,468,441,447,456,495],
[417,0,436,453,444,487,445,487],
[446,455,0,445,448,482,470,458],
[423,438,446,0,432,465,472,455],
[450,447,443,459,0,469,466,473],
[444,404,409,426,422,0,438,427],
[435,446,421,419,425,453,0,461],
[396,404,433,436,418,464,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,440,417,455,441,421,459],
[483,0,474,393,444,470,474,525],
[451,417,0,403,435,435,382,469],
[474,498,488,0,500,501,437,556],
[436,447,456,391,0,477,405,488],
[450,421,456,390,414,0,408,505],
[470,417,509,454,486,483,0,489],
[432,366,422,335,403,386,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,452,423,436,456,444,439],
[464,0,449,422,430,451,448,417],
[439,442,0,428,427,447,427,452],
[468,469,463,0,470,488,453,442],
[455,461,464,421,0,472,452,435],
[435,440,444,403,419,0,436,427],
[447,443,464,438,439,455,0,453],
[452,474,439,449,456,464,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,445,439,432,473,487,422],
[428,0,443,436,406,429,427,431],
[446,448,0,421,449,472,501,458],
[452,455,470,0,443,450,442,446],
[459,485,442,448,0,466,459,456],
[418,462,419,441,425,0,454,441],
[404,464,390,449,432,437,0,434],
[469,460,433,445,435,450,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,479,447,420,440,461,435],
[460,0,491,440,427,437,422,445],
[412,400,0,448,389,419,418,390],
[444,451,443,0,476,416,405,436],
[471,464,502,415,0,432,451,460],
[451,454,472,475,459,0,443,413],
[430,469,473,486,440,448,0,425],
[456,446,501,455,431,478,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,420,434,465,443,428,432],
[450,0,430,436,474,449,435,431],
[471,461,0,447,481,468,460,432],
[457,455,444,0,447,457,422,417],
[426,417,410,444,0,456,426,418],
[448,442,423,434,435,0,425,426],
[463,456,431,469,465,466,0,461],
[459,460,459,474,473,465,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,431,421,464,458,440,436],
[446,0,466,447,444,453,433,442],
[460,425,0,439,449,446,443,449],
[470,444,452,0,462,461,454,463],
[427,447,442,429,0,431,439,440],
[433,438,445,430,460,0,434,439],
[451,458,448,437,452,457,0,469],
[455,449,442,428,451,452,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,511,491,422,488,542,493],
[439,0,522,484,434,477,475,520],
[380,369,0,365,396,386,421,436],
[400,407,526,0,484,489,448,533],
[469,457,495,407,0,464,457,470],
[403,414,505,402,427,0,473,468],
[349,416,470,443,434,418,0,443],
[398,371,455,358,421,423,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,437,491,517,470,472,479],
[417,0,431,403,437,399,416,522],
[454,460,0,496,415,474,465,475],
[400,488,395,0,426,498,388,490],
[374,454,476,465,0,472,425,461],
[421,492,417,393,419,0,427,451],
[419,475,426,503,466,464,0,447],
[412,369,416,401,430,440,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,472,451,475,433,482,503],
[417,0,459,443,469,431,487,454],
[419,432,0,440,433,432,452,465],
[440,448,451,0,460,461,480,469],
[416,422,458,431,0,417,460,484],
[458,460,459,430,474,0,465,478],
[409,404,439,411,431,426,0,454],
[388,437,426,422,407,413,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,444,451,464,450,437,450],
[441,0,428,455,478,441,443,453],
[447,463,0,452,459,465,433,446],
[440,436,439,0,458,462,439,436],
[427,413,432,433,0,455,423,419],
[441,450,426,429,436,0,448,448],
[454,448,458,452,468,443,0,450],
[441,438,445,455,472,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,450,433,432,451,445,455],
[440,0,450,446,446,436,469,452],
[441,441,0,424,407,436,435,450],
[458,445,467,0,424,447,471,465],
[459,445,484,467,0,460,461,466],
[440,455,455,444,431,0,450,448],
[446,422,456,420,430,441,0,453],
[436,439,441,426,425,443,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,461,427,456,446,440,476],
[436,0,467,438,462,451,453,448],
[430,424,0,434,481,428,395,449],
[464,453,457,0,452,466,432,471],
[435,429,410,439,0,472,412,433],
[445,440,463,425,419,0,424,476],
[451,438,496,459,479,467,0,466],
[415,443,442,420,458,415,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,434,440,444,449,442,421],
[442,0,447,443,463,437,457,431],
[457,444,0,447,452,445,449,439],
[451,448,444,0,478,451,444,442],
[447,428,439,413,0,438,433,419],
[442,454,446,440,453,0,471,458],
[449,434,442,447,458,420,0,438],
[470,460,452,449,472,433,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,477,453,491,482,455,455],
[455,0,471,422,427,422,435,443],
[414,420,0,377,388,377,409,424],
[438,469,514,0,447,458,491,451],
[400,464,503,444,0,480,486,456],
[409,469,514,433,411,0,486,467],
[436,456,482,400,405,405,0,439],
[436,448,467,440,435,424,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,442,433,423,396,402,424],
[445,0,440,441,425,422,433,456],
[449,451,0,420,464,462,450,471],
[458,450,471,0,428,430,430,502],
[468,466,427,463,0,446,445,468],
[495,469,429,461,445,0,437,443],
[489,458,441,461,446,454,0,428],
[467,435,420,389,423,448,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,424,473,404,417,402,457],
[462,0,451,493,422,440,423,448],
[467,440,0,479,496,482,445,493],
[418,398,412,0,392,420,401,447],
[487,469,395,499,0,485,459,497],
[474,451,409,471,406,0,414,482],
[489,468,446,490,432,477,0,505],
[434,443,398,444,394,409,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,429,478,449,453,456,399],
[442,0,428,465,440,428,481,437],
[462,463,0,510,458,422,477,450],
[413,426,381,0,405,409,452,407],
[442,451,433,486,0,446,474,428],
[438,463,469,482,445,0,496,403],
[435,410,414,439,417,395,0,381],
[492,454,441,484,463,488,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,437,445,444,444,464,447],
[446,0,436,440,430,445,488,455],
[454,455,0,444,442,476,468,462],
[446,451,447,0,450,455,482,442],
[447,461,449,441,0,436,483,460],
[447,446,415,436,455,0,467,448],
[427,403,423,409,408,424,0,418],
[444,436,429,449,431,443,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,416,451,420,394,417,414],
[435,0,428,436,427,417,433,446],
[475,463,0,436,474,421,451,426],
[440,455,455,0,444,413,466,446],
[471,464,417,447,0,440,425,430],
[497,474,470,478,451,0,451,445],
[474,458,440,425,466,440,0,438],
[477,445,465,445,461,446,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,474,434,448,461,484,422],
[447,0,462,421,423,445,451,433],
[417,429,0,403,408,427,430,433],
[457,470,488,0,439,475,476,468],
[443,468,483,452,0,469,493,463],
[430,446,464,416,422,0,448,420],
[407,440,461,415,398,443,0,427],
[469,458,458,423,428,471,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,431,474,465,433,423,452],
[409,0,404,437,446,395,397,444],
[460,487,0,486,474,443,447,482],
[417,454,405,0,453,440,416,422],
[426,445,417,438,0,450,451,464],
[458,496,448,451,441,0,425,453],
[468,494,444,475,440,466,0,473],
[439,447,409,469,427,438,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,465,433,481,453,449,462],
[439,0,457,433,467,436,441,429],
[426,434,0,437,440,434,474,453],
[458,458,454,0,449,449,455,444],
[410,424,451,442,0,456,414,463],
[438,455,457,442,435,0,452,476],
[442,450,417,436,477,439,0,470],
[429,462,438,447,428,415,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,426,466,487,517,438,459],
[441,0,399,435,420,466,428,489],
[465,492,0,456,392,491,440,424],
[425,456,435,0,422,460,399,428],
[404,471,499,469,0,492,471,463],
[374,425,400,431,399,0,434,408],
[453,463,451,492,420,457,0,485],
[432,402,467,463,428,483,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,459,505,374,454,456,483],
[473,0,499,435,447,466,580,497],
[432,392,0,412,379,357,513,422],
[386,456,479,0,373,362,520,497],
[517,444,512,518,0,469,620,526],
[437,425,534,529,422,0,576,453],
[435,311,378,371,271,315,0,354],
[408,394,469,394,365,438,537,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,460,447,454,456,441,485],
[431,0,438,430,449,437,444,481],
[431,453,0,455,449,444,460,467],
[444,461,436,0,428,433,431,452],
[437,442,442,463,0,450,461,447],
[435,454,447,458,441,0,442,447],
[450,447,431,460,430,449,0,457],
[406,410,424,439,444,444,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,453,430,442,432,448,432],
[473,0,465,475,468,466,466,442],
[438,426,0,433,459,471,465,441],
[461,416,458,0,421,439,442,439],
[449,423,432,470,0,442,423,419],
[459,425,420,452,449,0,436,447],
[443,425,426,449,468,455,0,459],
[459,449,450,452,472,444,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,421,468,488,415,400,417],
[449,0,377,400,455,379,436,452],
[470,514,0,494,472,470,479,422],
[423,491,397,0,476,467,384,422],
[403,436,419,415,0,397,406,414],
[476,512,421,424,494,0,474,434],
[491,455,412,507,485,417,0,443],
[474,439,469,469,477,457,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,427,395,413,418,431,440],
[465,0,441,447,440,432,452,450],
[464,450,0,457,455,417,454,488],
[496,444,434,0,433,426,444,441],
[478,451,436,458,0,442,452,465],
[473,459,474,465,449,0,436,477],
[460,439,437,447,439,455,0,478],
[451,441,403,450,426,414,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,414,437,449,458,425,423],
[458,0,425,435,438,440,433,444],
[477,466,0,459,444,473,429,469],
[454,456,432,0,470,465,451,428],
[442,453,447,421,0,425,433,411],
[433,451,418,426,466,0,415,438],
[466,458,462,440,458,476,0,436],
[468,447,422,463,480,453,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,447,451,429,447,456,457],
[416,0,439,433,427,448,455,416],
[444,452,0,481,440,456,458,436],
[440,458,410,0,443,452,482,438],
[462,464,451,448,0,491,476,430],
[444,443,435,439,400,0,458,452],
[435,436,433,409,415,433,0,442],
[434,475,455,453,461,439,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,462,428,444,409,456,449],
[438,0,454,431,436,431,456,429],
[429,437,0,404,416,412,418,408],
[463,460,487,0,454,440,453,444],
[447,455,475,437,0,447,452,409],
[482,460,479,451,444,0,464,448],
[435,435,473,438,439,427,0,434],
[442,462,483,447,482,443,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,546,444,345,345,543,491,343],
[345,0,443,394,344,444,391,391],
[447,448,0,545,445,548,348,346],
[546,497,346,0,495,398,447,446],
[546,547,446,396,0,498,547,447],
[348,447,343,493,393,0,348,394],
[400,500,543,444,344,543,0,544],
[548,500,545,445,444,497,347,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,455,471,450,439,449,458],
[419,0,404,415,412,427,433,421],
[436,487,0,450,438,456,478,464],
[420,476,441,0,426,446,462,433],
[441,479,453,465,0,462,465,446],
[452,464,435,445,429,0,477,479],
[442,458,413,429,426,414,0,439],
[433,470,427,458,445,412,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,460,447,449,440,448,437],
[426,0,422,453,427,432,425,435],
[431,469,0,456,466,460,440,461],
[444,438,435,0,442,410,427,442],
[442,464,425,449,0,456,427,450],
[451,459,431,481,435,0,432,444],
[443,466,451,464,464,459,0,436],
[454,456,430,449,441,447,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,474,435,445,470,462,484],
[413,0,402,392,384,414,447,367],
[417,489,0,438,435,493,460,433],
[456,499,453,0,403,510,484,432],
[446,507,456,488,0,456,495,426],
[421,477,398,381,435,0,528,402],
[429,444,431,407,396,363,0,393],
[407,524,458,459,465,489,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,441,450,436,430,445,435],
[473,0,462,454,450,431,457,463],
[450,429,0,419,467,421,450,420],
[441,437,472,0,451,423,441,432],
[455,441,424,440,0,444,419,434],
[461,460,470,468,447,0,429,443],
[446,434,441,450,472,462,0,453],
[456,428,471,459,457,448,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,427,437,429,434,470,438],
[454,0,443,432,434,429,446,432],
[464,448,0,441,444,435,478,452],
[454,459,450,0,440,464,477,451],
[462,457,447,451,0,437,473,460],
[457,462,456,427,454,0,460,459],
[421,445,413,414,418,431,0,418],
[453,459,439,440,431,432,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,428,425,430,426,398,426],
[453,0,438,448,467,451,421,448],
[463,453,0,464,441,447,447,427],
[466,443,427,0,455,445,447,448],
[461,424,450,436,0,455,440,427],
[465,440,444,446,436,0,448,419],
[493,470,444,444,451,443,0,450],
[465,443,464,443,464,472,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,453,469,451,453,473,446],
[455,0,467,464,433,464,462,480],
[438,424,0,430,439,418,459,441],
[422,427,461,0,426,440,455,446],
[440,458,452,465,0,453,482,472],
[438,427,473,451,438,0,467,455],
[418,429,432,436,409,424,0,441],
[445,411,450,445,419,436,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,442,429,471,467,481,432],
[431,0,427,428,437,424,449,418],
[449,464,0,441,465,457,465,402],
[462,463,450,0,477,474,480,437],
[420,454,426,414,0,433,464,447],
[424,467,434,417,458,0,451,409],
[410,442,426,411,427,440,0,406],
[459,473,489,454,444,482,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,470,389,428,395,426,412],
[484,0,476,465,491,418,444,448],
[421,415,0,421,381,390,403,400],
[502,426,470,0,437,409,442,462],
[463,400,510,454,0,459,450,418],
[496,473,501,482,432,0,463,438],
[465,447,488,449,441,428,0,432],
[479,443,491,429,473,453,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,492,466,459,495,445,498],
[424,0,469,482,488,461,451,478],
[399,422,0,467,431,415,397,460],
[425,409,424,0,415,447,368,437],
[432,403,460,476,0,455,450,458],
[396,430,476,444,436,0,443,454],
[446,440,494,523,441,448,0,526],
[393,413,431,454,433,437,365,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,442,422,450,420,457,457],
[453,0,466,440,457,463,445,471],
[449,425,0,428,421,415,451,451],
[469,451,463,0,472,441,478,468],
[441,434,470,419,0,440,444,473],
[471,428,476,450,451,0,462,460],
[434,446,440,413,447,429,0,461],
[434,420,440,423,418,431,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,481,438,403,468,413,474],
[448,0,467,442,389,458,422,436],
[410,424,0,451,408,421,376,431],
[453,449,440,0,411,465,406,457],
[488,502,483,480,0,433,452,452],
[423,433,470,426,458,0,445,443],
[478,469,515,485,439,446,0,498],
[417,455,460,434,439,448,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,424,472,446,496,470,474],
[400,0,408,412,401,451,427,432],
[467,483,0,463,440,484,476,498],
[419,479,428,0,447,494,452,464],
[445,490,451,444,0,468,434,460],
[395,440,407,397,423,0,436,449],
[421,464,415,439,457,455,0,459],
[417,459,393,427,431,442,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,454,475,441,463,481,466],
[427,0,441,449,431,426,469,451],
[437,450,0,449,451,426,458,438],
[416,442,442,0,421,420,448,433],
[450,460,440,470,0,473,487,452],
[428,465,465,471,418,0,480,421],
[410,422,433,443,404,411,0,430],
[425,440,453,458,439,470,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,518,413,481,442,450,499],
[464,0,484,500,482,394,465,503],
[373,407,0,444,499,370,486,407],
[478,391,447,0,466,477,483,464],
[410,409,392,425,0,463,481,497],
[449,497,521,414,428,0,432,450],
[441,426,405,408,410,459,0,420],
[392,388,484,427,394,441,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,426,463,487,452,471,473],
[432,0,450,455,474,452,490,489],
[465,441,0,465,455,447,498,464],
[428,436,426,0,461,448,447,461],
[404,417,436,430,0,422,446,441],
[439,439,444,443,469,0,461,468],
[420,401,393,444,445,430,0,432],
[418,402,427,430,450,423,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,456,423,436,481,443,421],
[457,0,435,459,461,403,437,408],
[435,456,0,443,440,440,426,429],
[468,432,448,0,432,472,465,452],
[455,430,451,459,0,446,419,427],
[410,488,451,419,445,0,415,421],
[448,454,465,426,472,476,0,434],
[470,483,462,439,464,470,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,430,456,432,431,442,448],
[428,0,444,461,432,453,419,471],
[461,447,0,467,453,443,423,456],
[435,430,424,0,434,422,407,433],
[459,459,438,457,0,439,441,448],
[460,438,448,469,452,0,447,453],
[449,472,468,484,450,444,0,473],
[443,420,435,458,443,438,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,427,458,478,418,450,445],
[453,0,442,443,478,425,442,441],
[464,449,0,462,440,431,438,441],
[433,448,429,0,451,439,425,478],
[413,413,451,440,0,425,412,464],
[473,466,460,452,466,0,457,433],
[441,449,453,466,479,434,0,468],
[446,450,450,413,427,458,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,430,446,455,460,448,451],
[453,0,465,461,477,434,456,470],
[461,426,0,431,446,439,460,465],
[445,430,460,0,466,451,459,447],
[436,414,445,425,0,441,447,425],
[431,457,452,440,450,0,458,456],
[443,435,431,432,444,433,0,440],
[440,421,426,444,466,435,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,455,431,428,449,517,436],
[473,0,432,447,496,506,446,454],
[436,459,0,378,446,407,480,418],
[460,444,513,0,421,499,510,471],
[463,395,445,470,0,485,510,460],
[442,385,484,392,406,0,422,332],
[374,445,411,381,381,469,0,386],
[455,437,473,420,431,559,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,374,452,394,525,381,417,415],
[517,0,476,496,416,494,461,517],
[439,415,0,456,491,378,402,415],
[497,395,435,0,465,456,476,360],
[366,475,400,426,0,482,474,380],
[510,397,513,435,409,0,396,397],
[474,430,489,415,417,495,0,472],
[476,374,476,531,511,494,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,482,476,419,477,465,470],
[445,0,478,489,481,423,456,449],
[409,413,0,451,401,405,382,414],
[415,402,440,0,391,434,460,451],
[472,410,490,500,0,422,415,437],
[414,468,486,457,469,0,473,442],
[426,435,509,431,476,418,0,422],
[421,442,477,440,454,449,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,451,456,480,463,457,439],
[428,0,438,437,438,459,448,442],
[440,453,0,424,475,466,445,436],
[435,454,467,0,480,467,455,448],
[411,453,416,411,0,449,416,425],
[428,432,425,424,442,0,408,429],
[434,443,446,436,475,483,0,448],
[452,449,455,443,466,462,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,428,435,429,444,437,445],
[457,0,433,457,445,444,423,472],
[463,458,0,471,457,446,443,457],
[456,434,420,0,436,428,454,450],
[462,446,434,455,0,444,428,458],
[447,447,445,463,447,0,421,457],
[454,468,448,437,463,470,0,463],
[446,419,434,441,433,434,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,714,535,535,535,535,356,533],
[177,0,355,356,356,534,178,177],
[356,536,0,356,535,356,178,177],
[356,535,535,0,535,534,357,534],
[356,535,356,356,0,535,534,177],
[356,357,535,357,356,0,356,355],
[535,713,713,534,357,535,0,177],
[358,714,714,357,714,536,714,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,452,428,427,450,421,428],
[479,0,467,453,430,471,425,479],
[439,424,0,423,414,425,417,467],
[463,438,468,0,451,463,476,480],
[464,461,477,440,0,523,444,469],
[441,420,466,428,368,0,406,465],
[470,466,474,415,447,485,0,482],
[463,412,424,411,422,426,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,459,451,450,451,463,397],
[441,0,453,444,464,424,453,449],
[432,438,0,456,412,441,444,418],
[440,447,435,0,432,458,450,439],
[441,427,479,459,0,442,453,403],
[440,467,450,433,449,0,419,395],
[428,438,447,441,438,472,0,427],
[494,442,473,452,488,496,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,430,444,481,398,463,411],
[449,0,427,470,467,437,461,447],
[461,464,0,467,490,476,457,436],
[447,421,424,0,457,405,415,405],
[410,424,401,434,0,416,424,369],
[493,454,415,486,475,0,478,433],
[428,430,434,476,467,413,0,438],
[480,444,455,486,522,458,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,445,442,438,435,397,454],
[423,0,421,476,456,397,445,431],
[446,470,0,426,436,394,482,477],
[449,415,465,0,456,446,464,449],
[453,435,455,435,0,424,427,442],
[456,494,497,445,467,0,450,463],
[494,446,409,427,464,441,0,433],
[437,460,414,442,449,428,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,430,442,459,461,442,447],
[451,0,454,442,464,476,431,445],
[461,437,0,442,451,481,450,454],
[449,449,449,0,463,471,443,471],
[432,427,440,428,0,472,439,456],
[430,415,410,420,419,0,429,420],
[449,460,441,448,452,462,0,459],
[444,446,437,420,435,471,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,588,503,497,450,526,637],
[480,0,548,503,433,411,549,523],
[303,343,0,370,457,407,458,433],
[388,388,521,0,478,455,481,499],
[394,458,434,413,0,523,461,479],
[441,480,484,436,368,0,550,505],
[365,342,433,410,430,341,0,340],
[254,368,458,392,412,386,551,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,434,451,434,445,416,420],
[469,0,452,488,465,469,440,435],
[457,439,0,442,424,450,421,451],
[440,403,449,0,425,425,433,427],
[457,426,467,466,0,451,445,447],
[446,422,441,466,440,0,440,423],
[475,451,470,458,446,451,0,435],
[471,456,440,464,444,468,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,422,464,412,446,451,390],
[472,0,460,474,415,491,454,423],
[469,431,0,466,443,460,447,448],
[427,417,425,0,419,446,456,407],
[479,476,448,472,0,509,506,430],
[445,400,431,445,382,0,440,425],
[440,437,444,435,385,451,0,416],
[501,468,443,484,461,466,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,410,426,449,443,451,430],
[450,0,444,436,446,419,457,441],
[481,447,0,435,444,452,479,439],
[465,455,456,0,455,462,503,430],
[442,445,447,436,0,440,435,447],
[448,472,439,429,451,0,461,467],
[440,434,412,388,456,430,0,438],
[461,450,452,461,444,424,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,451,429,429,465,483,443],
[421,0,443,423,428,439,464,429],
[440,448,0,456,434,435,446,459],
[462,468,435,0,443,438,463,465],
[462,463,457,448,0,430,488,426],
[426,452,456,453,461,0,465,448],
[408,427,445,428,403,426,0,444],
[448,462,432,426,465,443,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,429,478,432,419,463,428],
[430,0,450,461,446,456,457,458],
[462,441,0,474,419,450,433,412],
[413,430,417,0,414,411,411,430],
[459,445,472,477,0,433,462,455],
[472,435,441,480,458,0,448,478],
[428,434,458,480,429,443,0,448],
[463,433,479,461,436,413,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,420,457,472,456,468,455],
[463,0,452,474,458,497,475,436],
[471,439,0,473,459,499,473,476],
[434,417,418,0,432,469,446,436],
[419,433,432,459,0,471,474,453],
[435,394,392,422,420,0,435,445],
[423,416,418,445,417,456,0,425],
[436,455,415,455,438,446,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,458,451,484,472,456,445],
[461,0,463,440,414,439,470,450],
[433,428,0,457,432,429,431,448],
[440,451,434,0,436,435,427,455],
[407,477,459,455,0,439,440,440],
[419,452,462,456,452,0,442,458],
[435,421,460,464,451,449,0,449],
[446,441,443,436,451,433,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,444,450,442,451,406,472],
[426,0,412,436,401,396,390,467],
[447,479,0,494,443,446,450,450],
[441,455,397,0,452,435,449,447],
[449,490,448,439,0,426,445,444],
[440,495,445,456,465,0,462,461],
[485,501,441,442,446,429,0,473],
[419,424,441,444,447,430,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,421,430,436,442,437,452],
[441,0,440,444,439,440,445,459],
[470,451,0,438,436,447,446,454],
[461,447,453,0,445,459,460,447],
[455,452,455,446,0,436,444,471],
[449,451,444,432,455,0,444,454],
[454,446,445,431,447,447,0,444],
[439,432,437,444,420,437,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,456,449,456,427,459],
[441,0,449,446,459,439,433,415],
[450,442,0,476,459,439,445,438],
[435,445,415,0,453,431,432,439],
[442,432,432,438,0,424,426,433],
[435,452,452,460,467,0,454,428],
[464,458,446,459,465,437,0,427],
[432,476,453,452,458,463,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,444,463,437,450,455,440],
[458,0,466,446,472,444,450,474],
[447,425,0,447,444,442,427,433],
[428,445,444,0,439,455,440,445],
[454,419,447,452,0,438,448,462],
[441,447,449,436,453,0,435,447],
[436,441,464,451,443,456,0,454],
[451,417,458,446,429,444,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,445,441,452,415,431,418],
[453,0,442,428,457,435,417,428],
[446,449,0,440,475,414,429,434],
[450,463,451,0,471,440,443,431],
[439,434,416,420,0,403,427,409],
[476,456,477,451,488,0,439,450],
[460,474,462,448,464,452,0,430],
[473,463,457,460,482,441,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,437,443,467,442,439,472],
[433,0,415,425,433,415,421,456],
[454,476,0,440,459,435,448,464],
[448,466,451,0,447,455,437,470],
[424,458,432,444,0,430,426,456],
[449,476,456,436,461,0,458,481],
[452,470,443,454,465,433,0,479],
[419,435,427,421,435,410,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,435,440,440,449,480,452],
[433,0,444,453,432,434,466,459],
[456,447,0,469,473,444,503,455],
[451,438,422,0,439,448,465,462],
[451,459,418,452,0,452,462,437],
[442,457,447,443,439,0,467,453],
[411,425,388,426,429,424,0,420],
[439,432,436,429,454,438,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,470,440,456,463,483,449],
[447,0,449,442,434,453,480,446],
[421,442,0,425,427,429,457,452],
[451,449,466,0,477,443,488,460],
[435,457,464,414,0,436,467,455],
[428,438,462,448,455,0,461,460],
[408,411,434,403,424,430,0,428],
[442,445,439,431,436,431,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,481,446,487,481,454,448],
[459,0,478,464,497,491,437,507],
[410,413,0,449,455,497,429,475],
[445,427,442,0,474,486,449,456],
[404,394,436,417,0,455,421,444],
[410,400,394,405,436,0,411,413],
[437,454,462,442,470,480,0,458],
[443,384,416,435,447,478,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,443,452,455,447,440,446],
[445,0,448,454,443,443,442,436],
[448,443,0,448,424,425,453,437],
[439,437,443,0,443,429,435,434],
[436,448,467,448,0,442,447,430],
[444,448,466,462,449,0,449,435],
[451,449,438,456,444,442,0,442],
[445,455,454,457,461,456,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,433,391,427,424,415,446],
[489,0,493,517,444,498,476,490],
[458,398,0,424,449,485,425,429],
[500,374,467,0,430,441,414,445],
[464,447,442,461,0,434,468,459],
[467,393,406,450,457,0,439,461],
[476,415,466,477,423,452,0,463],
[445,401,462,446,432,430,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,427,430,414,421,420,422],
[462,0,417,480,425,428,427,456],
[464,474,0,463,439,410,462,391],
[461,411,428,0,423,418,421,415],
[477,466,452,468,0,454,458,427],
[470,463,481,473,437,0,448,455],
[471,464,429,470,433,443,0,430],
[469,435,500,476,464,436,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,460,461,446,432,482,466],
[445,0,476,443,469,463,456,442],
[431,415,0,401,444,449,432,440],
[430,448,490,0,457,447,473,421],
[445,422,447,434,0,463,470,442],
[459,428,442,444,428,0,471,444],
[409,435,459,418,421,420,0,443],
[425,449,451,470,449,447,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,450,394,369,432,383,437],
[552,0,547,564,443,522,493,499],
[441,344,0,458,355,375,298,443],
[497,327,433,0,346,403,366,414],
[522,448,536,545,0,457,405,457],
[459,369,516,488,434,0,418,488],
[508,398,593,525,486,473,0,504],
[454,392,448,477,434,403,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,417,478,454,429,427,445],
[439,0,439,452,437,478,432,439],
[474,452,0,470,437,454,418,452],
[413,439,421,0,441,421,385,432],
[437,454,454,450,0,457,448,438],
[462,413,437,470,434,0,438,455],
[464,459,473,506,443,453,0,459],
[446,452,439,459,453,436,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,451,433,445,431,445,455],
[402,0,415,430,431,430,432,437],
[440,476,0,423,436,438,457,462],
[458,461,468,0,471,432,458,481],
[446,460,455,420,0,450,434,457],
[460,461,453,459,441,0,454,472],
[446,459,434,433,457,437,0,460],
[436,454,429,410,434,419,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,481,455,446,461,453,462],
[454,0,445,445,429,446,450,439],
[410,446,0,449,432,438,451,430],
[436,446,442,0,423,430,437,440],
[445,462,459,468,0,447,449,433],
[430,445,453,461,444,0,446,442],
[438,441,440,454,442,445,0,440],
[429,452,461,451,458,449,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,439,436,443,421,475,441],
[452,0,488,466,430,459,502,435],
[452,403,0,431,432,459,469,425],
[455,425,460,0,436,452,490,420],
[448,461,459,455,0,444,496,452],
[470,432,432,439,447,0,498,449],
[416,389,422,401,395,393,0,406],
[450,456,466,471,439,442,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,494,434,486,446,441,471],
[444,0,474,453,483,460,453,468],
[397,417,0,420,444,431,439,436],
[457,438,471,0,487,457,469,482],
[405,408,447,404,0,422,414,423],
[445,431,460,434,469,0,455,463],
[450,438,452,422,477,436,0,467],
[420,423,455,409,468,428,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,312,356,446,401,269,490,270],
[579,0,580,537,446,358,490,492],
[535,311,0,357,489,446,491,403],
[445,354,534,0,534,488,535,446],
[490,445,402,357,0,401,445,356],
[622,533,445,403,490,0,445,402],
[401,401,400,356,446,446,0,311],
[621,399,488,445,535,489,580,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,475,425,436,456,435,418],
[453,0,476,443,444,456,452,445],
[416,415,0,415,424,442,439,427],
[466,448,476,0,425,470,454,447],
[455,447,467,466,0,449,450,433],
[435,435,449,421,442,0,445,428],
[456,439,452,437,441,446,0,439],
[473,446,464,444,458,463,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,483,504,467,435,492,470],
[403,0,466,432,464,445,442,461],
[408,425,0,438,493,430,429,384],
[387,459,453,0,466,474,458,491],
[424,427,398,425,0,387,391,394],
[456,446,461,417,504,0,454,465],
[399,449,462,433,500,437,0,462],
[421,430,507,400,497,426,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,348,539,413,347,637,314,443],
[543,0,381,541,445,416,476,413],
[352,510,0,443,413,443,284,346],
[478,350,448,0,285,480,414,473],
[544,446,478,606,0,448,412,478],
[254,475,448,411,443,0,284,378],
[577,415,607,477,479,607,0,573],
[448,478,545,418,413,513,318,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,420,445,407,425,437,398],
[478,0,420,423,421,437,440,449],
[471,471,0,455,478,474,491,432],
[446,468,436,0,457,452,464,424],
[484,470,413,434,0,460,431,449],
[466,454,417,439,431,0,463,401],
[454,451,400,427,460,428,0,421],
[493,442,459,467,442,490,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,423,460,456,470,451,465],
[449,0,436,452,447,435,460,433],
[468,455,0,445,432,431,464,476],
[431,439,446,0,460,416,440,430],
[435,444,459,431,0,414,426,439],
[421,456,460,475,477,0,450,470],
[440,431,427,451,465,441,0,452],
[426,458,415,461,452,421,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,411,435,421,434,436,439],
[470,0,437,453,448,470,449,467],
[480,454,0,433,435,463,466,454],
[456,438,458,0,437,464,449,455],
[470,443,456,454,0,462,466,477],
[457,421,428,427,429,0,427,442],
[455,442,425,442,425,464,0,463],
[452,424,437,436,414,449,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,432,437,435,427,429,448],
[442,0,448,446,461,446,445,472],
[459,443,0,454,428,435,436,476],
[454,445,437,0,431,440,447,441],
[456,430,463,460,0,446,452,478],
[464,445,456,451,445,0,446,443],
[462,446,455,444,439,445,0,483],
[443,419,415,450,413,448,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,450,444,439,443,422,450],
[452,0,461,472,470,458,442,493],
[441,430,0,447,443,450,435,438],
[447,419,444,0,453,455,452,462],
[452,421,448,438,0,453,425,473],
[448,433,441,436,438,0,453,459],
[469,449,456,439,466,438,0,462],
[441,398,453,429,418,432,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,403,391,391,403,414,407],
[482,0,455,461,453,406,451,439],
[488,436,0,456,460,453,439,418],
[500,430,435,0,466,465,462,448],
[500,438,431,425,0,438,426,431],
[488,485,438,426,453,0,454,435],
[477,440,452,429,465,437,0,440],
[484,452,473,443,460,456,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,426,449,472,426,420,407],
[482,0,451,445,487,457,409,484],
[465,440,0,479,490,428,460,420],
[442,446,412,0,453,445,427,433],
[419,404,401,438,0,424,399,443],
[465,434,463,446,467,0,434,440],
[471,482,431,464,492,457,0,437],
[484,407,471,458,448,451,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,476,447,479,436,498,472],
[433,0,471,457,482,457,467,475],
[415,420,0,431,475,412,450,424],
[444,434,460,0,484,419,444,464],
[412,409,416,407,0,400,410,418],
[455,434,479,472,491,0,440,466],
[393,424,441,447,481,451,0,433],
[419,416,467,427,473,425,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,451,446,454,458,460,434],
[447,0,464,450,443,458,439,454],
[440,427,0,453,439,445,468,457],
[445,441,438,0,446,450,461,462],
[437,448,452,445,0,464,459,461],
[433,433,446,441,427,0,454,452],
[431,452,423,430,432,437,0,448],
[457,437,434,429,430,439,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,416,424,422,495,427,461],
[469,0,431,453,459,467,452,453],
[475,460,0,435,431,507,427,425],
[467,438,456,0,434,462,395,435],
[469,432,460,457,0,472,425,431],
[396,424,384,429,419,0,424,439],
[464,439,464,496,466,467,0,464],
[430,438,466,456,460,452,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,460,493,448,445,445,489],
[450,0,449,437,454,448,470,464],
[431,442,0,471,456,460,445,453],
[398,454,420,0,426,426,414,483],
[443,437,435,465,0,454,452,473],
[446,443,431,465,437,0,450,480],
[446,421,446,477,439,441,0,495],
[402,427,438,408,418,411,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,450,430,492,462,459,477],
[421,0,483,492,512,476,438,466],
[441,408,0,406,448,461,451,482],
[461,399,485,0,441,473,489,478],
[399,379,443,450,0,378,393,412],
[429,415,430,418,513,0,442,457],
[432,453,440,402,498,449,0,438],
[414,425,409,413,479,434,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,484,483,496,452,418,450],
[382,0,413,440,438,428,353,393],
[407,478,0,416,444,432,368,423],
[408,451,475,0,456,482,374,431],
[395,453,447,435,0,460,430,392],
[439,463,459,409,431,0,403,372],
[473,538,523,517,461,488,0,428],
[441,498,468,460,499,519,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,448,444,426,429,415,437],
[444,0,437,426,433,435,447,425],
[443,454,0,433,437,434,439,406],
[447,465,458,0,464,451,428,443],
[465,458,454,427,0,431,440,446],
[462,456,457,440,460,0,461,457],
[476,444,452,463,451,430,0,437],
[454,466,485,448,445,434,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,432,436,441,429,432,419],
[464,0,440,454,455,453,437,442],
[459,451,0,455,457,460,435,444],
[455,437,436,0,441,416,410,418],
[450,436,434,450,0,441,429,425],
[462,438,431,475,450,0,461,460],
[459,454,456,481,462,430,0,449],
[472,449,447,473,466,431,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,448,456,466,439,471,447],
[443,0,449,442,445,452,440,444],
[443,442,0,424,449,431,435,430],
[435,449,467,0,448,446,457,440],
[425,446,442,443,0,432,435,436],
[452,439,460,445,459,0,443,456],
[420,451,456,434,456,448,0,424],
[444,447,461,451,455,435,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,394,459,525,480,388,385],
[458,0,463,528,438,413,437,573],
[497,428,0,504,569,523,524,387],
[432,363,387,0,452,410,432,387],
[366,453,322,439,0,412,370,410],
[411,478,368,481,479,0,390,455],
[503,454,367,459,521,501,0,407],
[506,318,504,504,481,436,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,415,437,426,432,439,447],
[452,0,418,448,441,445,453,444],
[476,473,0,445,450,455,468,466],
[454,443,446,0,449,447,447,450],
[465,450,441,442,0,435,468,448],
[459,446,436,444,456,0,450,449],
[452,438,423,444,423,441,0,448],
[444,447,425,441,443,442,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,465,449,434,483,421],
[438,0,449,464,470,431,454,437],
[451,442,0,453,486,450,480,448],
[426,427,438,0,432,439,464,436],
[442,421,405,459,0,445,464,404],
[457,460,441,452,446,0,472,431],
[408,437,411,427,427,419,0,421],
[470,454,443,455,487,460,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,441,425,421,487,419,437],
[458,0,441,464,392,456,438,428],
[450,450,0,460,417,470,402,441],
[466,427,431,0,412,419,422,429],
[470,499,474,479,0,500,459,444],
[404,435,421,472,391,0,422,430],
[472,453,489,469,432,469,0,459],
[454,463,450,462,447,461,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,428,430,430,433,417,408],
[430,0,422,405,424,418,408,416],
[463,469,0,407,457,442,401,438],
[461,486,484,0,460,473,483,425],
[461,467,434,431,0,431,445,435],
[458,473,449,418,460,0,428,452],
[474,483,490,408,446,463,0,453],
[483,475,453,466,456,439,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,416,421,423,392,430,428],
[484,0,432,471,442,452,429,477],
[475,459,0,466,443,438,447,451],
[470,420,425,0,413,408,432,437],
[468,449,448,478,0,445,447,468],
[499,439,453,483,446,0,444,472],
[461,462,444,459,444,447,0,457],
[463,414,440,454,423,419,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,454,470,452,460,425,431],
[445,0,458,470,446,468,445,479],
[437,433,0,446,443,463,432,434],
[421,421,445,0,417,470,428,461],
[439,445,448,474,0,465,452,472],
[431,423,428,421,426,0,420,449],
[466,446,459,463,439,471,0,459],
[460,412,457,430,419,442,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,459,443,441,446,475,436],
[502,0,473,503,496,441,464,446],
[432,418,0,471,442,479,456,432],
[448,388,420,0,482,443,505,445],
[450,395,449,409,0,437,454,417],
[445,450,412,448,454,0,471,392],
[416,427,435,386,437,420,0,411],
[455,445,459,446,474,499,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,414,443,429,416,435,420],
[489,0,444,473,429,456,451,446],
[477,447,0,480,474,456,459,444],
[448,418,411,0,404,423,425,426],
[462,462,417,487,0,432,441,463],
[475,435,435,468,459,0,446,452],
[456,440,432,466,450,445,0,449],
[471,445,447,465,428,439,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,445,417,316,404,440,376],
[552,0,531,465,377,422,587,446],
[446,360,0,401,404,490,545,399],
[474,426,490,0,470,449,423,341],
[575,514,487,421,0,507,523,469],
[487,469,401,442,384,0,550,403],
[451,304,346,468,368,341,0,304],
[515,445,492,550,422,488,587,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,431,448,458,428,456,463],
[465,0,414,455,464,447,464,459],
[460,477,0,459,471,437,484,456],
[443,436,432,0,434,395,442,429],
[433,427,420,457,0,436,455,467],
[463,444,454,496,455,0,462,457],
[435,427,407,449,436,429,0,462],
[428,432,435,462,424,434,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,393,415,399,437,439,385],
[449,0,403,452,435,456,435,458],
[498,488,0,466,452,447,435,453],
[476,439,425,0,444,454,437,419],
[492,456,439,447,0,435,446,439],
[454,435,444,437,456,0,413,428],
[452,456,456,454,445,478,0,436],
[506,433,438,472,452,463,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,440,466,460,450,462,449],
[433,0,465,462,441,437,454,430],
[451,426,0,449,428,453,419,440],
[425,429,442,0,431,433,435,412],
[431,450,463,460,0,452,465,443],
[441,454,438,458,439,0,451,446],
[429,437,472,456,426,440,0,433],
[442,461,451,479,448,445,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,419,433,435,445,460,458],
[442,0,441,450,471,449,466,456],
[472,450,0,435,451,448,453,468],
[458,441,456,0,456,472,450,466],
[456,420,440,435,0,457,444,450],
[446,442,443,419,434,0,447,469],
[431,425,438,441,447,444,0,460],
[433,435,423,425,441,422,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,422,395,491,423,431,476],
[467,0,452,541,476,396,512,547],
[469,439,0,494,512,426,527,509],
[496,350,397,0,474,425,381,480],
[400,415,379,417,0,431,422,470],
[468,495,465,466,460,0,440,607],
[460,379,364,510,469,451,0,547],
[415,344,382,411,421,284,344,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,480,445,508,420,453,490],
[422,0,437,398,466,380,410,456],
[411,454,0,428,429,376,400,448],
[446,493,463,0,436,404,443,459],
[383,425,462,455,0,396,393,434],
[471,511,515,487,495,0,444,488],
[438,481,491,448,498,447,0,477],
[401,435,443,432,457,403,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,428,467,394,443,465,474],
[458,0,471,462,416,438,469,490],
[463,420,0,446,430,440,444,475],
[424,429,445,0,396,470,445,467],
[497,475,461,495,0,445,479,481],
[448,453,451,421,446,0,470,452],
[426,422,447,446,412,421,0,450],
[417,401,416,424,410,439,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,433,431,463,446,505,431],
[434,0,451,450,465,452,476,430],
[458,440,0,426,460,470,497,437],
[460,441,465,0,455,480,480,457],
[428,426,431,436,0,448,445,444],
[445,439,421,411,443,0,450,453],
[386,415,394,411,446,441,0,430],
[460,461,454,434,447,438,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,444,494,481,459,463,453],
[418,0,415,468,448,415,433,412],
[447,476,0,477,444,421,434,407],
[397,423,414,0,442,418,434,411],
[410,443,447,449,0,423,441,434],
[432,476,470,473,468,0,470,430],
[428,458,457,457,450,421,0,425],
[438,479,484,480,457,461,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,447,446,452,447,445,456],
[464,0,449,459,453,440,472,445],
[444,442,0,474,444,434,447,442],
[445,432,417,0,458,451,473,454],
[439,438,447,433,0,433,433,428],
[444,451,457,440,458,0,455,443],
[446,419,444,418,458,436,0,432],
[435,446,449,437,463,448,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,443,454,453,453,455,458],
[433,0,463,439,436,443,441,453],
[448,428,0,448,430,469,455,447],
[437,452,443,0,433,491,455,425],
[438,455,461,458,0,487,465,456],
[438,448,422,400,404,0,405,440],
[436,450,436,436,426,486,0,450],
[433,438,444,466,435,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,450,443,469,448,467,456],
[426,0,438,438,434,431,445,425],
[441,453,0,458,454,456,462,455],
[448,453,433,0,453,418,439,432],
[422,457,437,438,0,417,459,456],
[443,460,435,473,474,0,477,463],
[424,446,429,452,432,414,0,432],
[435,466,436,459,435,428,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,432,401,450,421,438,458],
[429,0,416,400,432,419,413,433],
[459,475,0,426,463,450,449,440],
[490,491,465,0,476,444,445,461],
[441,459,428,415,0,417,419,445],
[470,472,441,447,474,0,456,451],
[453,478,442,446,472,435,0,447],
[433,458,451,430,446,440,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,470,445,443,472,451,431],
[421,0,436,426,408,439,433,411],
[421,455,0,435,423,418,432,402],
[446,465,456,0,434,466,437,419],
[448,483,468,457,0,459,443,450],
[419,452,473,425,432,0,439,427],
[440,458,459,454,448,452,0,424],
[460,480,489,472,441,464,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,439,446,468,450,444,447],
[473,0,452,457,456,431,451,446],
[452,439,0,436,440,430,446,462],
[445,434,455,0,421,426,453,417],
[423,435,451,470,0,451,451,464],
[441,460,461,465,440,0,486,466],
[447,440,445,438,440,405,0,455],
[444,445,429,474,427,425,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,457,414,460,449,438,444],
[458,0,459,459,440,463,461,463],
[434,432,0,428,426,457,464,439],
[477,432,463,0,433,452,450,465],
[431,451,465,458,0,465,451,424],
[442,428,434,439,426,0,434,426],
[453,430,427,441,440,457,0,434],
[447,428,452,426,467,465,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,423,462,421,428,423,419],
[457,0,423,432,415,407,413,444],
[468,468,0,480,409,441,457,454],
[429,459,411,0,431,426,413,407],
[470,476,482,460,0,458,450,428],
[463,484,450,465,433,0,435,440],
[468,478,434,478,441,456,0,420],
[472,447,437,484,463,451,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,596,671,596,521,445,446,596],
[295,0,519,519,222,296,222,298],
[220,372,0,593,297,369,223,223],
[295,372,298,0,150,224,0,150],
[370,669,594,741,0,667,445,522],
[446,595,522,667,224,0,150,298],
[445,669,668,891,446,741,0,595],
[295,593,668,741,369,593,296,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,465,447,438,451,464,452],
[433,0,449,453,449,450,473,484],
[426,442,0,428,448,438,439,460],
[444,438,463,0,431,456,464,461],
[453,442,443,460,0,467,459,470],
[440,441,453,435,424,0,448,436],
[427,418,452,427,432,443,0,455],
[439,407,431,430,421,455,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,475,448,456,458,441,452],
[411,0,439,439,436,448,441,433],
[416,452,0,470,461,458,452,450],
[443,452,421,0,436,442,407,438],
[435,455,430,455,0,443,426,438],
[433,443,433,449,448,0,422,430],
[450,450,439,484,465,469,0,471],
[439,458,441,453,453,461,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,477,460,458,450,460,466],
[468,0,461,484,476,446,521,434],
[414,430,0,453,431,396,461,410],
[431,407,438,0,440,422,439,433],
[433,415,460,451,0,442,486,442],
[441,445,495,469,449,0,485,447],
[431,370,430,452,405,406,0,430],
[425,457,481,458,449,444,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,459,484,460,474,464,440],
[462,0,457,460,471,457,477,428],
[432,434,0,462,459,469,483,450],
[407,431,429,0,460,465,456,440],
[431,420,432,431,0,433,461,419],
[417,434,422,426,458,0,454,498],
[427,414,408,435,430,437,0,425],
[451,463,441,451,472,393,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,450,461,469,443,473,452],
[463,0,444,447,464,441,451,448],
[441,447,0,415,467,409,419,409],
[430,444,476,0,448,432,429,421],
[422,427,424,443,0,411,445,413],
[448,450,482,459,480,0,441,424],
[418,440,472,462,446,450,0,432],
[439,443,482,470,478,467,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,452,445,426,451,434,449],
[409,0,416,453,415,415,433,440],
[439,475,0,438,444,475,434,426],
[446,438,453,0,426,435,441,456],
[465,476,447,465,0,462,467,433],
[440,476,416,456,429,0,445,456],
[457,458,457,450,424,446,0,434],
[442,451,465,435,458,435,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,469,461,441,432,487,469],
[441,0,493,483,443,474,499,462],
[422,398,0,421,408,419,409,408],
[430,408,470,0,429,433,461,436],
[450,448,483,462,0,441,438,465],
[459,417,472,458,450,0,472,480],
[404,392,482,430,453,419,0,429],
[422,429,483,455,426,411,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,462,417,442,438,458,437],
[438,0,461,424,461,449,413,414],
[429,430,0,426,449,424,421,410],
[474,467,465,0,460,462,454,445],
[449,430,442,431,0,451,432,443],
[453,442,467,429,440,0,415,437],
[433,478,470,437,459,476,0,466],
[454,477,481,446,448,454,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,425,461,451,429,449,458],
[435,0,445,458,441,442,461,439],
[466,446,0,456,444,463,437,451],
[430,433,435,0,426,416,458,433],
[440,450,447,465,0,423,451,443],
[462,449,428,475,468,0,468,475],
[442,430,454,433,440,423,0,447],
[433,452,440,458,448,416,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,452,431,429,408,439,384],
[450,0,401,394,413,387,396,379],
[439,490,0,402,462,427,464,458],
[460,497,489,0,490,439,452,420],
[462,478,429,401,0,401,432,389],
[483,504,464,452,490,0,479,432],
[452,495,427,439,459,412,0,396],
[507,512,433,471,502,459,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,490,505,455,455,439,467],
[415,0,419,415,413,443,420,448],
[401,472,0,462,433,431,415,416],
[386,476,429,0,430,430,378,439],
[436,478,458,461,0,453,433,473],
[436,448,460,461,438,0,451,440],
[452,471,476,513,458,440,0,451],
[424,443,475,452,418,451,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,436,369,408,459,452,435],
[402,0,425,427,431,412,427,398],
[455,466,0,473,439,476,413,423],
[522,464,418,0,422,479,466,433],
[483,460,452,469,0,459,465,431],
[432,479,415,412,432,0,462,457],
[439,464,478,425,426,429,0,397],
[456,493,468,458,460,434,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,483,478,414,478,417,428],
[457,0,456,417,458,470,448,464],
[408,435,0,393,391,432,421,421],
[413,474,498,0,485,460,456,451],
[477,433,500,406,0,461,455,417],
[413,421,459,431,430,0,440,442],
[474,443,470,435,436,451,0,393],
[463,427,470,440,474,449,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,435,430,454,475,466,447],
[439,0,446,469,436,464,458,451],
[456,445,0,443,430,457,440,446],
[461,422,448,0,430,456,429,434],
[437,455,461,461,0,476,438,422],
[416,427,434,435,415,0,433,430],
[425,433,451,462,453,458,0,448],
[444,440,445,457,469,461,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,503,439,426,450,467,434],
[463,0,462,434,445,392,487,459],
[388,429,0,481,443,357,385,411],
[452,457,410,0,467,385,491,424],
[465,446,448,424,0,380,486,490],
[441,499,534,506,511,0,465,437],
[424,404,506,400,405,426,0,367],
[457,432,480,467,401,454,524,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,462,457,484,454,428,459],
[465,0,459,470,469,484,432,470],
[429,432,0,431,430,461,417,439],
[434,421,460,0,457,454,404,456],
[407,422,461,434,0,470,452,457],
[437,407,430,437,421,0,406,437],
[463,459,474,487,439,485,0,487],
[432,421,452,435,434,454,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,525,543,427,454,520,446,478],
[366,0,475,356,443,517,409,392],
[348,416,0,384,337,402,396,397],
[464,535,507,0,435,500,460,443],
[437,448,554,456,0,472,472,445],
[371,374,489,391,419,0,394,358],
[445,482,495,431,419,497,0,448],
[413,499,494,448,446,533,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,449,434,474,410,443,441],
[439,0,502,472,446,391,443,376],
[442,389,0,430,451,387,419,378],
[457,419,461,0,468,458,418,431],
[417,445,440,423,0,414,412,417],
[481,500,504,433,477,0,454,425],
[448,448,472,473,479,437,0,452],
[450,515,513,460,474,466,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,464,486,446,419,427,421],
[465,0,476,469,441,457,444,433],
[427,415,0,456,412,425,418,451],
[405,422,435,0,417,399,408,419],
[445,450,479,474,0,430,442,446],
[472,434,466,492,461,0,473,464],
[464,447,473,483,449,418,0,442],
[470,458,440,472,445,427,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,429,435,437,427,413,443],
[463,0,449,438,468,430,438,455],
[462,442,0,442,451,438,436,443],
[456,453,449,0,459,423,442,442],
[454,423,440,432,0,427,441,456],
[464,461,453,468,464,0,459,440],
[478,453,455,449,450,432,0,463],
[448,436,448,449,435,451,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,475,444,474,468,442,429],
[433,0,475,425,435,424,441,430],
[416,416,0,423,431,449,434,434],
[447,466,468,0,436,448,454,449],
[417,456,460,455,0,450,426,436],
[423,467,442,443,441,0,456,451],
[449,450,457,437,465,435,0,469],
[462,461,457,442,455,440,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,462,467,467,452,421,431],
[410,0,476,417,447,432,443,428],
[429,415,0,397,436,411,429,420],
[424,474,494,0,465,439,470,468],
[424,444,455,426,0,420,433,457],
[439,459,480,452,471,0,450,439],
[470,448,462,421,458,441,0,411],
[460,463,471,423,434,452,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,450,402,443,414,417,432],
[434,0,436,455,466,464,466,416],
[441,455,0,432,428,449,454,443],
[489,436,459,0,475,490,423,462],
[448,425,463,416,0,422,440,462],
[477,427,442,401,469,0,446,415],
[474,425,437,468,451,445,0,429],
[459,475,448,429,429,476,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,445,460,436,420,434,436],
[452,0,423,467,413,439,447,457],
[446,468,0,471,434,454,454,435],
[431,424,420,0,405,436,424,425],
[455,478,457,486,0,422,476,473],
[471,452,437,455,469,0,450,452],
[457,444,437,467,415,441,0,447],
[455,434,456,466,418,439,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,440,457,439,454,462,466],
[417,0,415,401,452,432,425,449],
[451,476,0,475,437,475,458,473],
[434,490,416,0,437,446,427,464],
[452,439,454,454,0,450,466,493],
[437,459,416,445,441,0,447,441],
[429,466,433,464,425,444,0,438],
[425,442,418,427,398,450,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,454,433,455,453,471,455],
[453,0,457,451,484,437,474,447],
[437,434,0,438,464,435,436,440],
[458,440,453,0,462,458,434,433],
[436,407,427,429,0,394,409,426],
[438,454,456,433,497,0,474,445],
[420,417,455,457,482,417,0,428],
[436,444,451,458,465,446,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,431,398,413,357,428,403],
[459,0,415,477,424,426,452,419],
[460,476,0,389,411,379,407,442],
[493,414,502,0,457,459,492,435],
[478,467,480,434,0,402,429,448],
[534,465,512,432,489,0,467,440],
[463,439,484,399,462,424,0,482],
[488,472,449,456,443,451,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,439,468,504,468,472,441],
[405,0,400,453,489,423,437,413],
[452,491,0,459,463,404,457,456],
[423,438,432,0,444,434,450,413],
[387,402,428,447,0,364,390,379],
[423,468,487,457,527,0,479,439],
[419,454,434,441,501,412,0,439],
[450,478,435,478,512,452,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,456,411,467,445,446,408],
[449,0,444,411,494,451,464,418],
[435,447,0,425,453,447,484,427],
[480,480,466,0,498,456,481,437],
[424,397,438,393,0,456,432,435],
[446,440,444,435,435,0,450,448],
[445,427,407,410,459,441,0,386],
[483,473,464,454,456,443,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,560,456,435,498,417,416,374],
[331,0,411,312,412,370,457,386],
[435,480,0,417,454,396,393,309],
[456,579,474,0,536,540,498,416],
[393,479,437,355,0,499,418,395],
[474,521,495,351,392,0,479,476],
[475,434,498,393,473,412,0,368],
[517,505,582,475,496,415,523,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,451,449,440,456,449,451],
[433,0,444,447,452,455,453,444],
[440,447,0,453,452,471,444,420],
[442,444,438,0,436,456,436,438],
[451,439,439,455,0,457,448,441],
[435,436,420,435,434,0,435,424],
[442,438,447,455,443,456,0,440],
[440,447,471,453,450,467,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,438,423,435,437,434,457],
[450,0,452,434,425,438,447,447],
[453,439,0,415,430,446,412,448],
[468,457,476,0,446,444,436,460],
[456,466,461,445,0,447,454,460],
[454,453,445,447,444,0,431,449],
[457,444,479,455,437,460,0,473],
[434,444,443,431,431,442,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,431,409,451,410,429,425],
[420,0,434,406,407,421,432,398],
[460,457,0,459,457,464,445,455],
[482,485,432,0,473,448,462,474],
[440,484,434,418,0,432,458,458],
[481,470,427,443,459,0,451,453],
[462,459,446,429,433,440,0,402],
[466,493,436,417,433,438,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,547,480,495,450,453,384],
[406,0,467,502,475,401,468,448],
[344,424,0,494,452,409,394,327],
[411,389,397,0,433,388,357,337],
[396,416,439,458,0,340,376,407],
[441,490,482,503,551,0,485,356],
[438,423,497,534,515,406,0,486],
[507,443,564,554,484,535,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,473,464,457,459,436,455],
[413,0,451,423,434,428,416,427],
[418,440,0,408,435,431,417,438],
[427,468,483,0,461,445,416,461],
[434,457,456,430,0,447,442,428],
[432,463,460,446,444,0,451,424],
[455,475,474,475,449,440,0,465],
[436,464,453,430,463,467,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,340,433,355,357,434,366],
[476,0,372,460,387,448,446,377],
[551,519,0,493,487,486,460,432],
[458,431,398,0,430,419,443,447],
[536,504,404,461,0,378,459,458],
[534,443,405,472,513,0,446,437],
[457,445,431,448,432,445,0,427],
[525,514,459,444,433,454,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,490,472,446,490,446,423],
[451,0,477,419,441,438,481,457],
[401,414,0,482,355,379,435,414],
[419,472,409,0,430,441,466,424],
[445,450,536,461,0,511,498,483],
[401,453,512,450,380,0,436,462],
[445,410,456,425,393,455,0,436],
[468,434,477,467,408,429,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,451,412,441,439,429,475],
[457,0,458,445,446,448,448,490],
[440,433,0,427,433,440,401,485],
[479,446,464,0,443,451,447,474],
[450,445,458,448,0,458,448,477],
[452,443,451,440,433,0,390,473],
[462,443,490,444,443,501,0,492],
[416,401,406,417,414,418,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,423,460,450,408,413,446],
[484,0,420,438,414,436,394,474],
[468,471,0,510,425,449,414,445],
[431,453,381,0,401,432,394,436],
[441,477,466,490,0,467,446,431],
[483,455,442,459,424,0,445,452],
[478,497,477,497,445,446,0,493],
[445,417,446,455,460,439,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,327,448,452,528,528,367,527],
[564,0,364,446,486,485,363,446],
[443,527,0,527,444,490,447,568],
[439,445,364,0,445,405,322,364],
[363,405,447,446,0,487,325,448],
[363,406,401,486,404,0,362,486],
[524,528,444,569,566,529,0,610],
[364,445,323,527,443,405,281,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,486,479,449,433,477,488],
[431,0,489,459,432,437,459,465],
[405,402,0,423,419,426,410,437],
[412,432,468,0,448,431,441,450],
[442,459,472,443,0,440,451,466],
[458,454,465,460,451,0,442,451],
[414,432,481,450,440,449,0,454],
[403,426,454,441,425,440,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,450,444,453,439,444,446],
[463,0,444,454,445,448,447,461],
[441,447,0,456,449,428,436,442],
[447,437,435,0,430,433,433,438],
[438,446,442,461,0,437,444,448],
[452,443,463,458,454,0,445,440],
[447,444,455,458,447,446,0,463],
[445,430,449,453,443,451,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,430,461,397,405,447],
[441,0,440,423,473,412,434,461],
[451,451,0,404,446,450,415,467],
[461,468,487,0,458,433,445,484],
[430,418,445,433,0,412,427,464],
[494,479,441,458,479,0,477,481],
[486,457,476,446,464,414,0,478],
[444,430,424,407,427,410,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,443,417,421,409,424,410],
[454,0,449,456,445,446,446,446],
[448,442,0,450,427,437,451,425],
[474,435,441,0,443,445,436,437],
[470,446,464,448,0,448,460,435],
[482,445,454,446,443,0,441,446],
[467,445,440,455,431,450,0,421],
[481,445,466,454,456,445,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,446,473,431,452,428,418],
[471,0,489,473,470,476,391,413],
[445,402,0,456,461,453,440,428],
[418,418,435,0,461,420,441,405],
[460,421,430,430,0,415,382,395],
[439,415,438,471,476,0,449,418],
[463,500,451,450,509,442,0,459],
[473,478,463,486,496,473,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,446,448,448,432,441,456],
[449,0,427,466,462,440,420,436],
[445,464,0,445,462,437,443,465],
[443,425,446,0,432,440,441,440],
[443,429,429,459,0,416,451,444],
[459,451,454,451,475,0,432,452],
[450,471,448,450,440,459,0,453],
[435,455,426,451,447,439,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,484,498,466,370,440,424],
[552,0,493,505,494,471,436,491],
[407,398,0,466,399,355,383,428],
[393,386,425,0,384,368,377,385],
[425,397,492,507,0,371,384,418],
[521,420,536,523,520,0,505,509],
[451,455,508,514,507,386,0,462],
[467,400,463,506,473,382,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,454,439,431,447,446,449],
[445,0,443,456,444,456,452,483],
[437,448,0,467,449,453,440,461],
[452,435,424,0,417,447,434,460],
[460,447,442,474,0,459,426,467],
[444,435,438,444,432,0,438,433],
[445,439,451,457,465,453,0,475],
[442,408,430,431,424,458,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,446,429,421,444,407,422],
[467,0,449,450,440,428,446,435],
[445,442,0,420,428,443,417,428],
[462,441,471,0,474,459,443,446],
[470,451,463,417,0,470,461,451],
[447,463,448,432,421,0,438,437],
[484,445,474,448,430,453,0,444],
[469,456,463,445,440,454,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,434,438,401,421,417,458],
[425,0,443,436,451,466,436,482],
[457,448,0,426,433,432,431,488],
[453,455,465,0,432,480,450,480],
[490,440,458,459,0,462,458,468],
[470,425,459,411,429,0,453,481],
[474,455,460,441,433,438,0,483],
[433,409,403,411,423,410,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,522,519,693,547,518,434,519],
[369,0,344,487,516,399,372,427],
[372,547,0,575,429,517,490,548],
[198,404,316,0,431,314,349,429],
[344,375,462,460,0,373,432,375],
[373,492,374,577,518,0,493,404],
[457,519,401,542,459,398,0,457],
[372,464,343,462,516,487,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,410,488,516,447,516,520],
[435,0,430,509,442,434,540,499],
[481,461,0,517,486,374,517,538],
[403,382,374,0,428,326,393,389],
[375,449,405,463,0,370,537,504],
[444,457,517,565,521,0,518,553],
[375,351,374,498,354,373,0,453],
[371,392,353,502,387,338,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,427,459,430,408,456,427],
[487,0,440,500,425,465,478,499],
[464,451,0,467,433,462,441,471],
[432,391,424,0,416,437,452,441],
[461,466,458,475,0,457,444,468],
[483,426,429,454,434,0,463,446],
[435,413,450,439,447,428,0,423],
[464,392,420,450,423,445,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,423,439,411,447,444,444],
[484,0,445,447,439,466,467,445],
[468,446,0,440,417,446,439,420],
[452,444,451,0,466,476,453,448],
[480,452,474,425,0,456,437,442],
[444,425,445,415,435,0,452,435],
[447,424,452,438,454,439,0,445],
[447,446,471,443,449,456,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,449,449,463,434,461,477],
[474,0,458,433,463,470,478,475],
[442,433,0,455,441,471,453,452],
[442,458,436,0,430,470,444,498],
[428,428,450,461,0,464,476,464],
[457,421,420,421,427,0,455,498],
[430,413,438,447,415,436,0,478],
[414,416,439,393,427,393,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,380,470,416,471,457,437],
[399,0,342,414,401,421,334,438],
[511,549,0,524,491,476,477,436],
[421,477,367,0,421,493,370,387],
[475,490,400,470,0,495,426,469],
[420,470,415,398,396,0,361,343],
[434,557,414,521,465,530,0,466],
[454,453,455,504,422,548,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,425,426,440,436,417,446],
[461,0,457,460,441,476,432,475],
[466,434,0,422,470,427,454,456],
[465,431,469,0,461,465,457,480],
[451,450,421,430,0,430,427,452],
[455,415,464,426,461,0,453,464],
[474,459,437,434,464,438,0,469],
[445,416,435,411,439,427,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,420,446,435,432,441,428],
[439,0,448,441,430,421,437,441],
[471,443,0,464,434,446,427,427],
[445,450,427,0,435,433,450,421],
[456,461,457,456,0,440,433,436],
[459,470,445,458,451,0,458,459],
[450,454,464,441,458,433,0,451],
[463,450,464,470,455,432,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,436,438,491,476,449,450],
[437,0,406,465,478,460,449,435],
[455,485,0,464,499,453,456,438],
[453,426,427,0,485,451,448,412],
[400,413,392,406,0,420,412,427],
[415,431,438,440,471,0,425,410],
[442,442,435,443,479,466,0,430],
[441,456,453,479,464,481,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,424,416,442,450,416,427],
[452,0,441,433,439,436,450,460],
[467,450,0,429,440,432,435,464],
[475,458,462,0,464,457,440,463],
[449,452,451,427,0,449,435,443],
[441,455,459,434,442,0,442,447],
[475,441,456,451,456,449,0,451],
[464,431,427,428,448,444,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,437,439,418,402,435,405],
[471,0,426,435,413,400,453,427],
[454,465,0,469,447,447,445,409],
[452,456,422,0,424,420,432,406],
[473,478,444,467,0,439,446,447],
[489,491,444,471,452,0,479,432],
[456,438,446,459,445,412,0,437],
[486,464,482,485,444,459,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,431,440,399,414,418,423],
[470,0,452,440,450,427,455,488],
[460,439,0,471,468,406,435,488],
[451,451,420,0,455,424,433,453],
[492,441,423,436,0,448,470,460],
[477,464,485,467,443,0,464,484],
[473,436,456,458,421,427,0,447],
[468,403,403,438,431,407,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,374,434,419,413,462,463,373],
[517,0,459,466,511,533,482,416],
[457,432,0,442,456,463,453,460],
[472,425,449,0,423,524,439,440],
[478,380,435,468,0,508,461,367],
[429,358,428,367,383,0,414,343],
[428,409,438,452,430,477,0,362],
[518,475,431,451,524,548,529,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,428,431,430,435,436,429],
[483,0,430,441,443,463,472,456],
[463,461,0,463,434,440,442,437],
[460,450,428,0,451,427,418,440],
[461,448,457,440,0,461,495,456],
[456,428,451,464,430,0,452,452],
[455,419,449,473,396,439,0,429],
[462,435,454,451,435,439,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,493,451,455,424,464,430],
[430,0,429,430,404,462,436,433],
[398,462,0,411,399,421,433,416],
[440,461,480,0,427,435,425,443],
[436,487,492,464,0,469,448,468],
[467,429,470,456,422,0,433,438],
[427,455,458,466,443,458,0,408],
[461,458,475,448,423,453,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,431,484,538,466,461,463],
[407,0,437,466,444,436,407,416],
[460,454,0,456,512,480,419,395],
[407,425,435,0,458,456,390,409],
[353,447,379,433,0,388,396,349],
[425,455,411,435,503,0,442,448],
[430,484,472,501,495,449,0,473],
[428,475,496,482,542,443,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,453,461,471,443,463,445],
[443,0,459,457,462,458,475,479],
[438,432,0,478,443,437,445,470],
[430,434,413,0,450,397,444,447],
[420,429,448,441,0,435,436,439],
[448,433,454,494,456,0,459,459],
[428,416,446,447,455,432,0,458],
[446,412,421,444,452,432,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,454,464,410,465,434,461],
[468,0,455,445,451,459,462,479],
[437,436,0,460,435,442,440,440],
[427,446,431,0,398,446,434,447],
[481,440,456,493,0,460,459,505],
[426,432,449,445,431,0,451,480],
[457,429,451,457,432,440,0,468],
[430,412,451,444,386,411,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,442,414,448,431,409,434],
[458,0,479,426,440,456,408,460],
[449,412,0,415,432,440,402,410],
[477,465,476,0,482,452,413,468],
[443,451,459,409,0,446,429,460],
[460,435,451,439,445,0,451,447],
[482,483,489,478,462,440,0,482],
[457,431,481,423,431,444,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,444,466,450,460,485,497],
[438,0,440,438,437,460,469,458],
[447,451,0,450,447,442,475,478],
[425,453,441,0,429,458,465,475],
[441,454,444,462,0,451,481,484],
[431,431,449,433,440,0,463,459],
[406,422,416,426,410,428,0,442],
[394,433,413,416,407,432,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,429,437,463,467,442,405],
[470,0,444,450,462,431,430,436],
[462,447,0,476,458,460,451,424],
[454,441,415,0,483,458,423,449],
[428,429,433,408,0,403,444,402],
[424,460,431,433,488,0,484,416],
[449,461,440,468,447,407,0,462],
[486,455,467,442,489,475,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,472,486,435,486,490,455],
[413,0,447,472,437,445,476,464],
[419,444,0,471,449,404,451,464],
[405,419,420,0,386,408,442,431],
[456,454,442,505,0,503,512,431],
[405,446,487,483,388,0,498,493],
[401,415,440,449,379,393,0,403],
[436,427,427,460,460,398,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,439,439,428,450,469,493],
[475,0,450,476,434,474,461,487],
[452,441,0,453,457,489,480,505],
[452,415,438,0,439,440,463,454],
[463,457,434,452,0,465,458,469],
[441,417,402,451,426,0,454,469],
[422,430,411,428,433,437,0,449],
[398,404,386,437,422,422,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,433,463,465,429,467,463],
[394,0,391,488,420,427,420,421],
[458,500,0,495,423,419,462,462],
[428,403,396,0,448,406,439,414],
[426,471,468,443,0,425,452,435],
[462,464,472,485,466,0,449,421],
[424,471,429,452,439,442,0,404],
[428,470,429,477,456,470,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,441,457,438,431,452,472],
[469,0,453,438,446,442,443,438],
[450,438,0,432,449,460,437,469],
[434,453,459,0,453,432,433,455],
[453,445,442,438,0,451,450,452],
[460,449,431,459,440,0,444,477],
[439,448,454,458,441,447,0,438],
[419,453,422,436,439,414,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,440,443,461,439,441,426],
[456,0,467,460,463,443,455,450],
[451,424,0,432,441,420,446,436],
[448,431,459,0,447,430,440,444],
[430,428,450,444,0,449,447,427],
[452,448,471,461,442,0,461,465],
[450,436,445,451,444,430,0,440],
[465,441,455,447,464,426,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,452,440,434,441,465,444],
[457,0,454,462,462,436,463,463],
[439,437,0,438,411,422,442,435],
[451,429,453,0,432,447,449,450],
[457,429,480,459,0,457,452,472],
[450,455,469,444,434,0,439,453],
[426,428,449,442,439,452,0,465],
[447,428,456,441,419,438,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,445,491,444,532,509,423],
[490,0,476,420,419,439,373,462],
[446,415,0,459,472,494,471,412],
[400,471,432,0,388,462,400,426],
[447,472,419,503,0,510,411,421],
[359,452,397,429,381,0,326,384],
[382,518,420,491,480,565,0,540],
[468,429,479,465,470,507,351,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,443,413,411,427,426,437],
[466,0,433,428,422,423,433,430],
[448,458,0,414,416,421,421,443],
[478,463,477,0,444,459,441,473],
[480,469,475,447,0,439,454,470],
[464,468,470,432,452,0,455,471],
[465,458,470,450,437,436,0,447],
[454,461,448,418,421,420,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,459,446,457,453,461,429],
[430,0,426,404,417,421,414,429],
[432,465,0,419,437,422,400,402],
[445,487,472,0,433,483,475,432],
[434,474,454,458,0,472,435,432],
[438,470,469,408,419,0,449,434],
[430,477,491,416,456,442,0,466],
[462,462,489,459,459,457,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,413,437,433,434,413,390],
[475,0,458,431,467,441,435,432],
[478,433,0,412,453,418,406,402],
[454,460,479,0,477,444,438,447],
[458,424,438,414,0,427,453,440],
[457,450,473,447,464,0,426,457],
[478,456,485,453,438,465,0,453],
[501,459,489,444,451,434,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,443,495,445,429,437,447],
[447,0,471,500,434,411,426,488],
[448,420,0,508,449,470,459,500],
[396,391,383,0,411,413,431,444],
[446,457,442,480,0,423,383,458],
[462,480,421,478,468,0,467,489],
[454,465,432,460,508,424,0,527],
[444,403,391,447,433,402,364,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,442,451,436,455,425,450],
[441,0,443,462,427,448,455,457],
[449,448,0,470,447,459,449,440],
[440,429,421,0,432,438,430,418],
[455,464,444,459,0,467,460,438],
[436,443,432,453,424,0,429,448],
[466,436,442,461,431,462,0,460],
[441,434,451,473,453,443,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,423,444,431,400,456,420],
[458,0,445,426,451,424,405,417],
[468,446,0,440,451,468,433,449],
[447,465,451,0,440,453,441,442],
[460,440,440,451,0,456,432,422],
[491,467,423,438,435,0,431,455],
[435,486,458,450,459,460,0,427],
[471,474,442,449,469,436,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,461,436,456,423,445,463],
[436,0,448,439,426,432,435,441],
[430,443,0,410,416,431,438,434],
[455,452,481,0,463,445,464,451],
[435,465,475,428,0,441,440,444],
[468,459,460,446,450,0,454,439],
[446,456,453,427,451,437,0,454],
[428,450,457,440,447,452,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,499,404,461,459,434,474],
[445,0,505,415,459,463,447,481],
[392,386,0,386,390,413,414,412],
[487,476,505,0,465,477,422,493],
[430,432,501,426,0,467,427,470],
[432,428,478,414,424,0,429,469],
[457,444,477,469,464,462,0,440],
[417,410,479,398,421,422,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,474,425,444,454,446,462],
[438,0,492,463,443,451,453,468],
[417,399,0,430,437,413,432,413],
[466,428,461,0,461,468,450,444],
[447,448,454,430,0,460,436,434],
[437,440,478,423,431,0,447,460],
[445,438,459,441,455,444,0,437],
[429,423,478,447,457,431,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,448,454,468,445,448,445],
[430,0,435,444,455,438,453,445],
[443,456,0,473,462,445,444,456],
[437,447,418,0,441,435,430,435],
[423,436,429,450,0,440,446,443],
[446,453,446,456,451,0,445,465],
[443,438,447,461,445,446,0,459],
[446,446,435,456,448,426,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,422,430,478,443,442,400],
[470,0,426,439,451,411,436,397],
[469,465,0,476,455,465,434,448],
[461,452,415,0,432,430,436,408],
[413,440,436,459,0,420,458,417],
[448,480,426,461,471,0,436,424],
[449,455,457,455,433,455,0,416],
[491,494,443,483,474,467,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,462,451,445,460,434,460],
[441,0,442,443,459,467,443,459],
[429,449,0,423,455,453,438,452],
[440,448,468,0,466,443,464,458],
[446,432,436,425,0,431,439,433],
[431,424,438,448,460,0,446,446],
[457,448,453,427,452,445,0,448],
[431,432,439,433,458,445,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,454,428,412,447,446,433],
[456,0,441,437,425,445,459,445],
[437,450,0,442,441,476,456,417],
[463,454,449,0,433,473,459,469],
[479,466,450,458,0,466,458,445],
[444,446,415,418,425,0,428,437],
[445,432,435,432,433,463,0,440],
[458,446,474,422,446,454,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,418,434,460,433,445,442],
[448,0,452,440,462,438,452,475],
[473,439,0,454,465,449,457,467],
[457,451,437,0,470,454,449,461],
[431,429,426,421,0,420,425,438],
[458,453,442,437,471,0,442,462],
[446,439,434,442,466,449,0,451],
[449,416,424,430,453,429,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,401,406,387,437,398,399],
[487,0,472,462,446,464,430,472],
[490,419,0,423,398,444,403,443],
[485,429,468,0,440,462,431,444],
[504,445,493,451,0,480,451,473],
[454,427,447,429,411,0,404,421],
[493,461,488,460,440,487,0,479],
[492,419,448,447,418,470,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,445,466,472,471,456,461],
[448,0,438,458,463,445,440,433],
[446,453,0,476,460,477,459,437],
[425,433,415,0,455,431,441,413],
[419,428,431,436,0,441,423,436],
[420,446,414,460,450,0,437,412],
[435,451,432,450,468,454,0,436],
[430,458,454,478,455,479,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,469,451,452,432,452,429],
[424,0,465,443,436,455,443,468],
[422,426,0,439,436,473,434,452],
[440,448,452,0,421,451,436,435],
[439,455,455,470,0,464,423,443],
[459,436,418,440,427,0,431,418],
[439,448,457,455,468,460,0,449],
[462,423,439,456,448,473,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,442,448,500,423,474,448],
[445,0,427,408,470,416,446,400],
[449,464,0,425,482,428,475,436],
[443,483,466,0,494,472,514,490],
[391,421,409,397,0,392,450,431],
[468,475,463,419,499,0,498,449],
[417,445,416,377,441,393,0,442],
[443,491,455,401,460,442,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,489,437,416,434,379,419],
[479,0,442,462,419,427,421,417],
[402,449,0,436,387,399,423,436],
[454,429,455,0,418,429,430,455],
[475,472,504,473,0,493,440,499],
[457,464,492,462,398,0,445,445],
[512,470,468,461,451,446,0,442],
[472,474,455,436,392,446,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,447,449,454,430,445,431],
[448,0,421,442,451,428,451,422],
[444,470,0,446,449,446,445,452],
[442,449,445,0,424,450,453,430],
[437,440,442,467,0,439,466,430],
[461,463,445,441,452,0,464,442],
[446,440,446,438,425,427,0,450],
[460,469,439,461,461,449,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,444,424,420,417,432,437],
[466,0,468,423,447,445,452,437],
[447,423,0,417,416,439,445,458],
[467,468,474,0,443,463,456,440],
[471,444,475,448,0,459,471,464],
[474,446,452,428,432,0,437,449],
[459,439,446,435,420,454,0,430],
[454,454,433,451,427,442,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,440,461,459,486,462,466],
[437,0,417,438,434,475,443,452],
[451,474,0,437,456,463,453,460],
[430,453,454,0,414,458,457,443],
[432,457,435,477,0,478,459,464],
[405,416,428,433,413,0,427,447],
[429,448,438,434,432,464,0,467],
[425,439,431,448,427,444,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,429,440,433,443,444,455],
[442,0,446,414,415,472,466,440],
[462,445,0,440,456,468,465,443],
[451,477,451,0,421,469,470,453],
[458,476,435,470,0,462,467,434],
[448,419,423,422,429,0,451,449],
[447,425,426,421,424,440,0,398],
[436,451,448,438,457,442,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,468,450,445,452,464,440],
[406,0,423,435,446,475,448,431],
[423,468,0,434,435,454,473,420],
[441,456,457,0,406,456,480,464],
[446,445,456,485,0,465,461,442],
[439,416,437,435,426,0,418,446],
[427,443,418,411,430,473,0,418],
[451,460,471,427,449,445,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,439,416,440,457,449,463],
[445,0,525,461,503,439,455,517],
[452,366,0,436,394,380,447,430],
[475,430,455,0,462,459,450,462],
[451,388,497,429,0,460,457,461],
[434,452,511,432,431,0,470,492],
[442,436,444,441,434,421,0,517],
[428,374,461,429,430,399,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,466,457,428,439,442,438],
[454,0,448,461,442,455,438,447],
[425,443,0,432,430,457,427,422],
[434,430,459,0,438,439,449,443],
[463,449,461,453,0,441,462,467],
[452,436,434,452,450,0,467,448],
[449,453,464,442,429,424,0,437],
[453,444,469,448,424,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,422,346,346,458,353,400],
[440,0,358,319,358,442,374,366],
[469,533,0,399,408,495,464,474],
[545,572,492,0,466,497,437,532],
[545,533,483,425,0,483,462,491],
[433,449,396,394,408,0,389,412],
[538,517,427,454,429,502,0,507],
[491,525,417,359,400,479,384,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,891,891,594,296,891,593,891],
[0,0,297,594,296,595,296,891],
[0,594,0,594,296,594,296,594],
[297,297,297,0,296,297,297,593],
[595,595,595,595,0,595,297,891],
[0,296,297,594,296,0,296,891],
[298,595,595,594,594,595,0,891],
[0,0,297,298,0,0,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,447,460,453,490,463,437],
[423,0,431,433,419,465,447,447],
[444,460,0,437,434,469,438,413],
[431,458,454,0,414,492,440,426],
[438,472,457,477,0,472,452,450],
[401,426,422,399,419,0,433,392],
[428,444,453,451,439,458,0,437],
[454,444,478,465,441,499,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,421,449,448,423,423,435],
[444,0,451,445,462,458,456,429],
[470,440,0,434,456,476,464,453],
[442,446,457,0,458,453,437,429],
[443,429,435,433,0,438,441,427],
[468,433,415,438,453,0,450,420],
[468,435,427,454,450,441,0,411],
[456,462,438,462,464,471,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,435,456,441,457,450,435],
[440,0,443,452,452,473,427,444],
[456,448,0,445,428,471,452,433],
[435,439,446,0,445,445,448,435],
[450,439,463,446,0,458,445,450],
[434,418,420,446,433,0,427,417],
[441,464,439,443,446,464,0,436],
[456,447,458,456,441,474,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,442,434,474,432,459,418],
[487,0,448,477,494,420,469,458],
[449,443,0,438,475,466,430,445],
[457,414,453,0,463,414,440,424],
[417,397,416,428,0,429,414,396],
[459,471,425,477,462,0,446,450],
[432,422,461,451,477,445,0,453],
[473,433,446,467,495,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,433,443,436,443,426,439],
[448,0,447,467,454,450,442,444],
[458,444,0,437,443,442,435,442],
[448,424,454,0,437,442,436,450],
[455,437,448,454,0,425,442,433],
[448,441,449,449,466,0,457,442],
[465,449,456,455,449,434,0,461],
[452,447,449,441,458,449,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,439,464,526,472,445,445],
[455,0,467,443,487,520,456,437],
[452,424,0,478,492,472,437,459],
[427,448,413,0,494,440,430,436],
[365,404,399,397,0,439,412,387],
[419,371,419,451,452,0,419,436],
[446,435,454,461,479,472,0,409],
[446,454,432,455,504,455,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,460,423,432,441,471,456],
[414,0,408,374,383,397,397,411],
[431,483,0,405,422,443,401,422],
[468,517,486,0,449,438,440,475],
[459,508,469,442,0,432,454,448],
[450,494,448,453,459,0,422,469],
[420,494,490,451,437,469,0,476],
[435,480,469,416,443,422,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,446,446,488,423,458,440],
[462,0,436,484,458,466,469,417],
[445,455,0,447,463,446,451,447],
[445,407,444,0,440,442,424,435],
[403,433,428,451,0,439,433,417],
[468,425,445,449,452,0,447,460],
[433,422,440,467,458,444,0,407],
[451,474,444,456,474,431,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,442,478,456,492,441,507],
[391,0,380,418,416,402,396,459],
[449,511,0,375,464,437,450,437],
[413,473,516,0,518,504,536,464],
[435,475,427,373,0,469,425,472],
[399,489,454,387,422,0,445,474],
[450,495,441,355,466,446,0,472],
[384,432,454,427,419,417,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,456,415,417,450,427,468],
[466,0,475,439,448,446,448,496],
[435,416,0,412,431,416,431,477],
[476,452,479,0,456,442,469,501],
[474,443,460,435,0,431,472,494],
[441,445,475,449,460,0,440,498],
[464,443,460,422,419,451,0,497],
[423,395,414,390,397,393,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,465,440,464,450,435,466],
[459,0,459,452,474,424,452,446],
[426,432,0,438,453,434,434,465],
[451,439,453,0,445,435,460,444],
[427,417,438,446,0,436,426,447],
[441,467,457,456,455,0,462,471],
[456,439,457,431,465,429,0,447],
[425,445,426,447,444,420,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,448,445,450,457,482,449],
[473,0,433,461,440,464,433,475],
[443,458,0,440,445,448,461,461],
[446,430,451,0,429,423,447,422],
[441,451,446,462,0,443,424,436],
[434,427,443,468,448,0,434,452],
[409,458,430,444,467,457,0,475],
[442,416,430,469,455,439,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,455,424,412,400,429,391],
[444,0,475,446,425,398,462,409],
[436,416,0,419,401,382,432,380],
[467,445,472,0,429,410,441,431],
[479,466,490,462,0,457,429,501],
[491,493,509,481,434,0,468,481],
[462,429,459,450,462,423,0,444],
[500,482,511,460,390,410,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,446,468,472,459,482,474],
[476,0,461,461,454,440,452,473],
[445,430,0,434,436,430,471,460],
[423,430,457,0,436,461,440,441],
[419,437,455,455,0,452,441,446],
[432,451,461,430,439,0,412,433],
[409,439,420,451,450,479,0,447],
[417,418,431,450,445,458,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,411,461,438,458,432,454],
[468,0,445,471,461,468,449,466],
[480,446,0,436,430,457,457,454],
[430,420,455,0,460,477,433,429],
[453,430,461,431,0,463,432,475],
[433,423,434,414,428,0,412,428],
[459,442,434,458,459,479,0,472],
[437,425,437,462,416,463,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,400,459,428,450,427,446],
[445,0,475,467,451,487,519,516],
[491,416,0,465,408,495,473,468],
[432,424,426,0,416,415,410,463],
[463,440,483,475,0,487,484,456],
[441,404,396,476,404,0,454,445],
[464,372,418,481,407,437,0,454],
[445,375,423,428,435,446,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,469,430,457,424,426,420],
[417,0,378,394,417,400,416,429],
[422,513,0,458,502,448,456,425],
[461,497,433,0,483,457,451,471],
[434,474,389,408,0,412,442,399],
[467,491,443,434,479,0,458,439],
[465,475,435,440,449,433,0,430],
[471,462,466,420,492,452,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,462,451,464,442,446,461],
[452,0,461,456,476,452,436,451],
[429,430,0,455,453,422,418,442],
[440,435,436,0,434,420,426,437],
[427,415,438,457,0,437,422,470],
[449,439,469,471,454,0,446,450],
[445,455,473,465,469,445,0,467],
[430,440,449,454,421,441,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,461,488,423,477,485,504],
[441,0,451,437,376,473,453,444],
[430,440,0,488,446,500,484,487],
[403,454,403,0,436,449,473,460],
[468,515,445,455,0,523,516,526],
[414,418,391,442,368,0,468,491],
[406,438,407,418,375,423,0,484],
[387,447,404,431,365,400,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,429,435,450,401,441,421],
[459,0,439,447,446,413,439,430],
[462,452,0,458,425,404,434,452],
[456,444,433,0,451,439,444,436],
[441,445,466,440,0,423,429,418],
[490,478,487,452,468,0,444,459],
[450,452,457,447,462,447,0,444],
[470,461,439,455,473,432,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,440,445,453,432,450],
[448,0,437,429,430,428,414,456],
[440,454,0,444,416,427,466,447],
[451,462,447,0,452,443,447,459],
[446,461,475,439,0,440,466,468],
[438,463,464,448,451,0,442,454],
[459,477,425,444,425,449,0,433],
[441,435,444,432,423,437,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,438,436,429,426,422,426],
[433,0,458,415,411,432,430,439],
[453,433,0,449,424,466,424,408],
[455,476,442,0,456,473,421,427],
[462,480,467,435,0,484,412,451],
[465,459,425,418,407,0,401,435],
[469,461,467,470,479,490,0,440],
[465,452,483,464,440,456,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,448,435,442,470,458,426],
[479,0,428,440,429,435,435,438],
[443,463,0,451,442,476,460,466],
[456,451,440,0,434,447,468,434],
[449,462,449,457,0,485,459,440],
[421,456,415,444,406,0,459,443],
[433,456,431,423,432,432,0,439],
[465,453,425,457,451,448,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,484,415,420,470,462,461],
[490,0,493,465,444,512,449,437],
[407,398,0,393,407,439,429,437],
[476,426,498,0,476,444,415,485],
[471,447,484,415,0,428,469,427],
[421,379,452,447,463,0,417,441],
[429,442,462,476,422,474,0,460],
[430,454,454,406,464,450,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,434,418,431,442,452,414],
[464,0,453,441,433,467,472,437],
[457,438,0,426,446,456,448,439],
[473,450,465,0,444,482,482,456],
[460,458,445,447,0,459,484,451],
[449,424,435,409,432,0,469,404],
[439,419,443,409,407,422,0,404],
[477,454,452,435,440,487,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,431,441,427,441,459,480],
[461,0,450,457,444,463,473,468],
[460,441,0,455,448,454,486,483],
[450,434,436,0,455,444,453,464],
[464,447,443,436,0,457,460,478],
[450,428,437,447,434,0,465,470],
[432,418,405,438,431,426,0,465],
[411,423,408,427,413,421,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,422,428,463,452,435,449],
[456,0,433,457,438,459,457,467],
[469,458,0,441,451,463,467,463],
[463,434,450,0,444,473,446,467],
[428,453,440,447,0,450,475,446],
[439,432,428,418,441,0,448,453],
[456,434,424,445,416,443,0,444],
[442,424,428,424,445,438,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,466,454,474,430,437,474],
[410,0,446,485,440,421,397,461],
[425,445,0,444,471,432,461,456],
[437,406,447,0,442,454,413,504],
[417,451,420,449,0,403,358,396],
[461,470,459,437,488,0,455,440],
[454,494,430,478,533,436,0,418],
[417,430,435,387,495,451,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,505,419,438,364,432,462,461],
[386,0,445,416,413,416,471,443],
[472,446,0,451,428,426,480,497],
[453,475,440,0,448,418,526,454],
[527,478,463,443,0,446,522,542],
[459,475,465,473,445,0,474,490],
[429,420,411,365,369,417,0,426],
[430,448,394,437,349,401,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,425,456,447,445,474,454],
[424,0,436,468,454,446,453,444],
[466,455,0,448,462,442,466,447],
[435,423,443,0,444,429,459,438],
[444,437,429,447,0,438,448,442],
[446,445,449,462,453,0,481,460],
[417,438,425,432,443,410,0,422],
[437,447,444,453,449,431,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,453,435,446,462,432,445],
[428,0,430,423,431,426,422,419],
[438,461,0,444,427,422,441,421],
[456,468,447,0,433,467,431,450],
[445,460,464,458,0,458,460,467],
[429,465,469,424,433,0,439,435],
[459,469,450,460,431,452,0,429],
[446,472,470,441,424,456,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,445,385,417,457,408,421],
[439,0,414,413,457,448,440,429],
[446,477,0,415,443,419,440,438],
[506,478,476,0,417,497,496,493],
[474,434,448,474,0,442,429,427],
[434,443,472,394,449,0,404,405],
[483,451,451,395,462,487,0,464],
[470,462,453,398,464,486,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,376,444,308,445,409,303],
[481,0,412,548,377,513,514,479],
[515,479,0,512,375,513,546,375],
[447,343,379,0,444,584,617,376],
[583,514,516,447,0,582,548,410],
[446,378,378,307,309,0,515,476],
[482,377,345,274,343,376,0,446],
[588,412,516,515,481,415,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,466,449,480,468,451,485],
[464,0,436,437,393,423,435,439],
[425,455,0,406,439,419,435,434],
[442,454,485,0,432,434,477,435],
[411,498,452,459,0,431,440,430],
[423,468,472,457,460,0,448,446],
[440,456,456,414,451,443,0,461],
[406,452,457,456,461,445,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,477,446,411,395,401,401],
[466,0,448,442,460,400,406,415],
[414,443,0,447,352,426,378,425],
[445,449,444,0,419,371,420,412],
[480,431,539,472,0,418,445,461],
[496,491,465,520,473,0,470,445],
[490,485,513,471,446,421,0,475],
[490,476,466,479,430,446,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,381,508,387,374,447,457],
[478,0,479,455,434,456,496,514],
[510,412,0,475,482,394,462,446],
[383,436,416,0,375,410,431,451],
[504,457,409,516,0,454,498,492],
[517,435,497,481,437,0,471,522],
[444,395,429,460,393,420,0,470],
[434,377,445,440,399,369,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,422,450,434,444,450,445],
[493,0,498,484,440,469,484,480],
[469,393,0,452,443,441,466,463],
[441,407,439,0,442,443,475,442],
[457,451,448,449,0,442,486,467],
[447,422,450,448,449,0,449,446],
[441,407,425,416,405,442,0,444],
[446,411,428,449,424,445,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,449,449,461,459,422,449],
[437,0,451,441,451,451,443,428],
[442,440,0,446,461,480,448,436],
[442,450,445,0,462,451,431,455],
[430,440,430,429,0,448,426,423],
[432,440,411,440,443,0,428,439],
[469,448,443,460,465,463,0,443],
[442,463,455,436,468,452,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,453,446,418,453,436,454],
[461,0,448,466,442,465,437,461],
[438,443,0,455,462,465,463,479],
[445,425,436,0,461,442,458,469],
[473,449,429,430,0,463,448,469],
[438,426,426,449,428,0,457,470],
[455,454,428,433,443,434,0,454],
[437,430,412,422,422,421,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,444,446,444,431,438,435],
[451,0,449,441,447,444,445,450],
[447,442,0,444,447,443,453,448],
[445,450,447,0,439,447,416,451],
[447,444,444,452,0,451,460,447],
[460,447,448,444,440,0,455,450],
[453,446,438,475,431,436,0,446],
[456,441,443,440,444,441,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,470,438,457,505,454,457],
[447,0,475,439,438,492,437,438],
[421,416,0,429,458,435,414,413],
[453,452,462,0,461,468,449,426],
[434,453,433,430,0,495,413,429],
[386,399,456,423,396,0,421,413],
[437,454,477,442,478,470,0,465],
[434,453,478,465,462,478,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,449,472,430,458,465,442],
[424,0,460,441,455,433,456,441],
[442,431,0,467,409,430,482,400],
[419,450,424,0,420,431,472,406],
[461,436,482,471,0,457,475,465],
[433,458,461,460,434,0,463,428],
[426,435,409,419,416,428,0,401],
[449,450,491,485,426,463,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,455,433,468,465,428,443],
[437,0,475,431,426,470,419,444],
[436,416,0,418,421,452,447,460],
[458,460,473,0,427,467,410,464],
[423,465,470,464,0,478,459,463],
[426,421,439,424,413,0,420,462],
[463,472,444,481,432,471,0,495],
[448,447,431,427,428,429,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,495,451,472,439,452,437],
[421,0,453,431,457,432,424,421],
[396,438,0,415,462,417,405,421],
[440,460,476,0,489,416,461,432],
[419,434,429,402,0,401,394,386],
[452,459,474,475,490,0,443,442],
[439,467,486,430,497,448,0,451],
[454,470,470,459,505,449,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,485,494,475,436,501,502],
[421,0,396,452,439,432,460,466],
[406,495,0,455,472,410,502,514],
[397,439,436,0,425,421,509,486],
[416,452,419,466,0,451,510,461],
[455,459,481,470,440,0,509,533],
[390,431,389,382,381,382,0,454],
[389,425,377,405,430,358,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,417,409,444,417,436,413],
[465,0,430,440,439,447,431,433],
[474,461,0,462,472,440,437,434],
[482,451,429,0,471,470,431,440],
[447,452,419,420,0,435,420,432],
[474,444,451,421,456,0,467,487],
[455,460,454,460,471,424,0,447],
[478,458,457,451,459,404,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,459,461,501,443,458,478],
[403,0,469,399,425,451,457,437],
[432,422,0,396,478,451,445,460],
[430,492,495,0,438,479,444,482],
[390,466,413,453,0,457,455,474],
[448,440,440,412,434,0,415,437],
[433,434,446,447,436,476,0,427],
[413,454,431,409,417,454,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,428,462,449,452,455,473],
[447,0,441,443,398,473,448,470],
[463,450,0,445,454,434,505,469],
[429,448,446,0,437,446,475,471],
[442,493,437,454,0,492,485,473],
[439,418,457,445,399,0,453,469],
[436,443,386,416,406,438,0,452],
[418,421,422,420,418,422,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,455,446,439,409,455,472],
[444,0,422,428,425,420,452,439],
[436,469,0,442,437,450,470,442],
[445,463,449,0,468,452,475,437],
[452,466,454,423,0,463,430,467],
[482,471,441,439,428,0,486,460],
[436,439,421,416,461,405,0,425],
[419,452,449,454,424,431,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,417,403,443,398,464,440],
[416,0,387,413,441,410,432,439],
[474,504,0,446,476,436,468,449],
[488,478,445,0,464,459,493,473],
[448,450,415,427,0,412,443,445],
[493,481,455,432,479,0,462,493],
[427,459,423,398,448,429,0,452],
[451,452,442,418,446,398,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,444,440,431,435,440,434],
[457,0,425,440,455,464,459,430],
[447,466,0,450,434,465,460,444],
[451,451,441,0,437,438,441,415],
[460,436,457,454,0,480,440,472],
[456,427,426,453,411,0,438,445],
[451,432,431,450,451,453,0,440],
[457,461,447,476,419,446,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,461,455,445,449,449,450],
[430,0,443,429,423,447,440,435],
[430,448,0,435,436,419,427,425],
[436,462,456,0,446,451,448,439],
[446,468,455,445,0,457,446,439],
[442,444,472,440,434,0,454,437],
[442,451,464,443,445,437,0,424],
[441,456,466,452,452,454,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,416,448,443,443,433,451],
[450,0,431,434,453,427,445,435],
[475,460,0,450,445,442,453,442],
[443,457,441,0,436,452,464,417],
[448,438,446,455,0,419,452,437],
[448,464,449,439,472,0,442,437],
[458,446,438,427,439,449,0,455],
[440,456,449,474,454,454,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,420,438,449,391,411,421],
[480,0,455,472,485,430,446,462],
[471,436,0,454,419,433,422,397],
[453,419,437,0,459,425,438,422],
[442,406,472,432,0,428,425,410],
[500,461,458,466,463,0,446,444],
[480,445,469,453,466,445,0,446],
[470,429,494,469,481,447,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,453,449,440,432,461,455],
[445,0,459,453,439,451,469,480],
[438,432,0,456,455,423,449,463],
[442,438,435,0,440,428,451,435],
[451,452,436,451,0,428,460,462],
[459,440,468,463,463,0,461,446],
[430,422,442,440,431,430,0,466],
[436,411,428,456,429,445,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,402,446,415,445,438,436],
[448,0,405,420,408,414,454,421],
[489,486,0,458,440,461,482,454],
[445,471,433,0,455,437,479,444],
[476,483,451,436,0,449,486,446],
[446,477,430,454,442,0,462,440],
[453,437,409,412,405,429,0,436],
[455,470,437,447,445,451,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,462,446,443,478,426,461],
[427,0,451,424,431,399,423,425],
[429,440,0,402,440,431,424,436],
[445,467,489,0,467,427,460,437],
[448,460,451,424,0,482,417,444],
[413,492,460,464,409,0,442,444],
[465,468,467,431,474,449,0,461],
[430,466,455,454,447,447,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,427,434,477,449,433,451],
[442,0,476,424,485,495,467,450],
[464,415,0,448,434,468,443,444],
[457,467,443,0,462,479,453,463],
[414,406,457,429,0,410,408,403],
[442,396,423,412,481,0,450,406],
[458,424,448,438,483,441,0,412],
[440,441,447,428,488,485,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,445,453,432,435,457,429],
[436,0,443,452,455,446,453,419],
[446,448,0,439,432,463,476,455],
[438,439,452,0,436,438,478,423],
[459,436,459,455,0,444,463,434],
[456,445,428,453,447,0,482,452],
[434,438,415,413,428,409,0,414],
[462,472,436,468,457,439,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,489,483,481,435,462,474],
[407,0,472,469,427,448,422,434],
[402,419,0,424,429,422,430,446],
[408,422,467,0,411,425,434,423],
[410,464,462,480,0,435,464,439],
[456,443,469,466,456,0,451,445],
[429,469,461,457,427,440,0,426],
[417,457,445,468,452,446,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,464,458,435,449,444,467],
[418,0,450,429,420,454,431,460],
[427,441,0,449,426,401,447,461],
[433,462,442,0,423,431,421,475],
[456,471,465,468,0,404,476,480],
[442,437,490,460,487,0,455,503],
[447,460,444,470,415,436,0,464],
[424,431,430,416,411,388,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,437,452,427,420,443,452],
[462,0,451,462,452,447,429,480],
[454,440,0,456,431,429,436,456],
[439,429,435,0,438,402,425,440],
[464,439,460,453,0,423,447,447],
[471,444,462,489,468,0,472,476],
[448,462,455,466,444,419,0,444],
[439,411,435,451,444,415,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,434,433,427,424,439,453],
[455,0,428,471,449,428,438,443],
[457,463,0,443,432,425,452,440],
[458,420,448,0,436,461,454,440],
[464,442,459,455,0,452,469,444],
[467,463,466,430,439,0,464,446],
[452,453,439,437,422,427,0,439],
[438,448,451,451,447,445,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,463,434,479,476,447,446],
[438,0,448,455,486,434,428,446],
[428,443,0,419,455,444,452,433],
[457,436,472,0,477,464,460,432],
[412,405,436,414,0,427,404,417],
[415,457,447,427,464,0,420,414],
[444,463,439,431,487,471,0,423],
[445,445,458,459,474,477,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,336,472,454,455,406,400,441],
[555,0,535,540,510,484,525,438],
[419,356,0,409,365,381,324,327],
[437,351,482,0,374,344,354,375],
[436,381,526,517,0,449,472,440],
[485,407,510,547,442,0,503,492],
[491,366,567,537,419,388,0,423],
[450,453,564,516,451,399,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,455,458,439,460,459,445],
[443,0,453,454,438,441,426,436],
[436,438,0,451,421,447,434,445],
[433,437,440,0,420,407,409,445],
[452,453,470,471,0,452,431,455],
[431,450,444,484,439,0,429,435],
[432,465,457,482,460,462,0,469],
[446,455,446,446,436,456,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,482,450,486,429,472,465],
[411,0,417,391,442,411,446,419],
[409,474,0,414,457,417,457,443],
[441,500,477,0,487,448,477,451],
[405,449,434,404,0,424,445,432],
[462,480,474,443,467,0,472,473],
[419,445,434,414,446,419,0,395],
[426,472,448,440,459,418,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,456,452,451,441,460,450],
[417,0,442,429,437,419,407,417],
[435,449,0,435,450,438,440,443],
[439,462,456,0,470,444,454,425],
[440,454,441,421,0,445,432,421],
[450,472,453,447,446,0,436,426],
[431,484,451,437,459,455,0,447],
[441,474,448,466,470,465,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,404,422,401,377,472,493],
[502,0,469,430,440,409,477,516],
[487,422,0,469,434,438,455,518],
[469,461,422,0,493,452,465,507],
[490,451,457,398,0,429,427,448],
[514,482,453,439,462,0,499,518],
[419,414,436,426,464,392,0,449],
[398,375,373,384,443,373,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,430,449,451,448,463,458],
[451,0,441,436,445,450,452,450],
[461,450,0,442,446,440,459,482],
[442,455,449,0,429,447,461,441],
[440,446,445,462,0,440,452,468],
[443,441,451,444,451,0,462,460],
[428,439,432,430,439,429,0,457],
[433,441,409,450,423,431,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,473,470,438,469,429,464],
[414,0,406,434,432,438,432,413],
[418,485,0,443,405,358,394,423],
[421,457,448,0,422,431,445,430],
[453,459,486,469,0,425,453,452],
[422,453,533,460,466,0,462,477],
[462,459,497,446,438,429,0,440],
[427,478,468,461,439,414,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,488,468,457,419,483,421],
[471,0,429,434,416,470,463,422],
[403,462,0,373,410,412,415,433],
[423,457,518,0,453,444,455,434],
[434,475,481,438,0,449,402,406],
[472,421,479,447,442,0,419,420],
[408,428,476,436,489,472,0,474],
[470,469,458,457,485,471,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,476,491,423,455,463],
[444,0,458,448,482,469,461,461],
[446,433,0,472,478,442,421,468],
[415,443,419,0,469,431,428,469],
[400,409,413,422,0,432,382,456],
[468,422,449,460,459,0,461,475],
[436,430,470,463,509,430,0,481],
[428,430,423,422,435,416,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,472,458,467,495,477,441],
[375,0,432,423,437,427,419,412],
[419,459,0,368,399,425,428,391],
[433,468,523,0,480,464,498,438],
[424,454,492,411,0,464,475,463],
[396,464,466,427,427,0,454,371],
[414,472,463,393,416,437,0,467],
[450,479,500,453,428,520,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,519,492,485,447,479,434],
[409,0,460,448,438,405,445,413],
[372,431,0,428,405,408,422,391],
[399,443,463,0,430,403,428,409],
[406,453,486,461,0,429,482,417],
[444,486,483,488,462,0,463,458],
[412,446,469,463,409,428,0,396],
[457,478,500,482,474,433,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,471,478,464,458,498,442],
[435,0,469,440,508,439,467,459],
[420,422,0,431,455,437,488,445],
[413,451,460,0,453,458,500,460],
[427,383,436,438,0,418,427,448],
[433,452,454,433,473,0,482,465],
[393,424,403,391,464,409,0,433],
[449,432,446,431,443,426,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,458,446,454,435,459,456],
[433,0,430,439,441,440,439,435],
[433,461,0,442,445,432,477,450],
[445,452,449,0,414,433,447,446],
[437,450,446,477,0,447,471,456],
[456,451,459,458,444,0,458,462],
[432,452,414,444,420,433,0,445],
[435,456,441,445,435,429,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,451,459,440,451,435],
[443,0,443,445,436,445,446,437],
[455,448,0,452,414,413,438,429],
[440,446,439,0,449,440,444,446],
[432,455,477,442,0,450,468,449],
[451,446,478,451,441,0,467,438],
[440,445,453,447,423,424,0,436],
[456,454,462,445,442,453,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,459,446,457,453,441,424],
[462,0,443,485,467,443,433,438],
[432,448,0,439,458,469,451,444],
[445,406,452,0,436,422,401,433],
[434,424,433,455,0,459,423,446],
[438,448,422,469,432,0,434,443],
[450,458,440,490,468,457,0,435],
[467,453,447,458,445,448,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,429,423,419,419,420,428],
[476,0,458,450,451,458,417,433],
[462,433,0,455,445,435,452,423],
[468,441,436,0,447,465,428,448],
[472,440,446,444,0,438,431,437],
[472,433,456,426,453,0,433,425],
[471,474,439,463,460,458,0,457],
[463,458,468,443,454,466,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,467,480,438,494,457,467],
[449,0,462,441,433,483,435,442],
[424,429,0,411,451,452,455,425],
[411,450,480,0,430,466,434,455],
[453,458,440,461,0,468,469,451],
[397,408,439,425,423,0,417,400],
[434,456,436,457,422,474,0,450],
[424,449,466,436,440,491,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,386,451,452,483,471,494,419],
[505,0,464,450,449,463,519,417],
[440,427,0,455,475,448,500,441],
[439,441,436,0,414,444,492,458],
[408,442,416,477,0,471,483,450],
[420,428,443,447,420,0,496,455],
[397,372,391,399,408,395,0,379],
[472,474,450,433,441,436,512,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,436,459,417,450,434,404],
[449,0,492,454,459,490,473,428],
[455,399,0,436,445,435,439,453],
[432,437,455,0,448,458,458,450],
[474,432,446,443,0,453,467,430],
[441,401,456,433,438,0,448,439],
[457,418,452,433,424,443,0,429],
[487,463,438,441,461,452,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,451,455,452,467,436,452],
[447,0,467,466,443,460,473,446],
[440,424,0,435,435,419,436,430],
[436,425,456,0,446,445,447,424],
[439,448,456,445,0,449,444,428],
[424,431,472,446,442,0,466,458],
[455,418,455,444,447,425,0,422],
[439,445,461,467,463,433,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,453,468,430,443,444,460],
[433,0,441,454,449,463,456,489],
[438,450,0,457,442,450,435,481],
[423,437,434,0,449,442,443,465],
[461,442,449,442,0,461,461,479],
[448,428,441,449,430,0,441,460],
[447,435,456,448,430,450,0,451],
[431,402,410,426,412,431,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,447,473,443,445,469,469],
[429,0,406,454,445,452,450,440],
[444,485,0,470,459,491,436,443],
[418,437,421,0,430,433,434,430],
[448,446,432,461,0,475,463,459],
[446,439,400,458,416,0,430,464],
[422,441,455,457,428,461,0,457],
[422,451,448,461,432,427,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,477,460,453,444,451,433],
[436,0,438,448,439,447,439,439],
[414,453,0,458,464,465,443,426],
[431,443,433,0,472,439,429,431],
[438,452,427,419,0,443,442,423],
[447,444,426,452,448,0,420,427],
[440,452,448,462,449,471,0,459],
[458,452,465,460,468,464,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,424,447,450,464,437,441],
[472,0,458,462,461,488,430,420],
[467,433,0,467,493,472,473,448],
[444,429,424,0,462,464,431,441],
[441,430,398,429,0,423,395,457],
[427,403,419,427,468,0,424,407],
[454,461,418,460,496,467,0,442],
[450,471,443,450,434,484,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,460,459,413,480,445,441],
[449,0,441,467,434,485,465,451],
[431,450,0,465,421,421,452,425],
[432,424,426,0,431,466,455,419],
[478,457,470,460,0,444,452,456],
[411,406,470,425,447,0,433,432],
[446,426,439,436,439,458,0,440],
[450,440,466,472,435,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,445,506,472,479,501,440],
[460,0,450,505,422,427,520,433],
[446,441,0,461,429,492,494,433],
[385,386,430,0,434,404,430,425],
[419,469,462,457,0,496,450,451],
[412,464,399,487,395,0,459,415],
[390,371,397,461,441,432,0,426],
[451,458,458,466,440,476,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,444,464,443,457,461,443],
[422,0,438,444,433,450,425,423],
[447,453,0,462,443,458,451,452],
[427,447,429,0,432,458,449,448],
[448,458,448,459,0,460,445,450],
[434,441,433,433,431,0,425,417],
[430,466,440,442,446,466,0,448],
[448,468,439,443,441,474,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,474,441,446,425,391,408],
[483,0,514,441,494,439,468,436],
[417,377,0,390,414,395,395,406],
[450,450,501,0,485,438,437,436],
[445,397,477,406,0,382,440,458],
[466,452,496,453,509,0,444,440],
[500,423,496,454,451,447,0,463],
[483,455,485,455,433,451,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,430,416,422,419,428,384],
[460,0,446,408,448,413,435,391],
[461,445,0,450,396,427,448,436],
[475,483,441,0,458,490,443,456],
[469,443,495,433,0,452,444,401],
[472,478,464,401,439,0,491,405],
[463,456,443,448,447,400,0,360],
[507,500,455,435,490,486,531,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,477,460,456,471,453,462],
[449,0,494,448,407,452,446,456],
[414,397,0,436,402,433,417,431],
[431,443,455,0,408,418,443,425],
[435,484,489,483,0,473,477,477],
[420,439,458,473,418,0,446,459],
[438,445,474,448,414,445,0,454],
[429,435,460,466,414,432,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,409,463,463,466,435,406],
[410,0,420,422,402,437,413,418],
[482,471,0,449,457,460,423,432],
[428,469,442,0,435,415,405,416],
[428,489,434,456,0,424,468,426],
[425,454,431,476,467,0,439,456],
[456,478,468,486,423,452,0,441],
[485,473,459,475,465,435,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,379,408,383,365,435,377],
[453,0,355,443,452,451,431,408],
[512,536,0,462,493,485,497,440],
[483,448,429,0,433,405,435,416],
[508,439,398,458,0,413,433,457],
[526,440,406,486,478,0,445,456],
[456,460,394,456,458,446,0,438],
[514,483,451,475,434,435,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,426,416,429,420,430,441],
[461,0,460,442,451,466,440,466],
[465,431,0,438,441,456,437,480],
[475,449,453,0,430,449,433,436],
[462,440,450,461,0,446,435,458],
[471,425,435,442,445,0,458,468],
[461,451,454,458,456,433,0,469],
[450,425,411,455,433,423,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,402,412,416,444,465,408],
[475,0,426,451,448,472,456,441],
[489,465,0,450,423,447,513,437],
[479,440,441,0,412,436,531,457],
[475,443,468,479,0,479,470,418],
[447,419,444,455,412,0,481,469],
[426,435,378,360,421,410,0,416],
[483,450,454,434,473,422,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,454,442,414,450,470,446],
[437,0,473,452,418,431,430,455],
[437,418,0,430,418,413,466,446],
[449,439,461,0,460,443,463,445],
[477,473,473,431,0,458,456,445],
[441,460,478,448,433,0,474,489],
[421,461,425,428,435,417,0,431],
[445,436,445,446,446,402,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,416,440,469,450,450,491],
[437,0,455,443,434,442,474,493],
[475,436,0,437,469,445,471,484],
[451,448,454,0,482,466,437,481],
[422,457,422,409,0,430,427,473],
[441,449,446,425,461,0,450,493],
[441,417,420,454,464,441,0,464],
[400,398,407,410,418,398,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,518,446,486,450,418,472,505],
[373,0,353,358,336,373,369,441],
[445,538,0,457,374,438,389,493],
[405,533,434,0,382,369,404,501],
[441,555,517,509,0,488,453,509],
[473,518,453,522,403,0,437,541],
[419,522,502,487,438,454,0,522],
[386,450,398,390,382,350,369,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,453,474,431,450,469,487],
[414,0,430,454,418,428,442,426],
[438,461,0,453,446,445,475,427],
[417,437,438,0,457,447,449,450],
[460,473,445,434,0,450,480,459],
[441,463,446,444,441,0,447,461],
[422,449,416,442,411,444,0,459],
[404,465,464,441,432,430,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,452,410,487,516,498,442],
[420,0,473,401,453,500,507,478],
[439,418,0,460,506,491,456,458],
[481,490,431,0,513,523,454,451],
[404,438,385,378,0,409,432,374],
[375,391,400,368,482,0,429,381],
[393,384,435,437,459,462,0,426],
[449,413,433,440,517,510,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,473,485,480,446,453,431],
[437,0,462,458,471,427,439,415],
[418,429,0,427,470,412,412,418],
[406,433,464,0,471,409,445,414],
[411,420,421,420,0,378,439,402],
[445,464,479,482,513,0,447,452],
[438,452,479,446,452,444,0,420],
[460,476,473,477,489,439,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,412,443,439,445,439,448],
[485,0,450,462,450,460,439,450],
[479,441,0,449,461,486,436,489],
[448,429,442,0,457,433,464,470],
[452,441,430,434,0,441,413,432],
[446,431,405,458,450,0,426,441],
[452,452,455,427,478,465,0,437],
[443,441,402,421,459,450,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,458,417,432,421,428,445],
[427,0,444,431,443,434,453,433],
[433,447,0,453,459,435,452,457],
[474,460,438,0,448,450,448,434],
[459,448,432,443,0,448,445,480],
[470,457,456,441,443,0,465,444],
[463,438,439,443,446,426,0,463],
[446,458,434,457,411,447,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,453,419,459,462,430,459],
[464,0,473,479,436,475,469,469],
[438,418,0,449,455,422,425,469],
[472,412,442,0,462,439,404,455],
[432,455,436,429,0,440,436,466],
[429,416,469,452,451,0,427,434],
[461,422,466,487,455,464,0,451],
[432,422,422,436,425,457,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,451,444,468,471,473,483],
[440,0,438,432,448,463,454,477],
[440,453,0,437,446,454,434,465],
[447,459,454,0,442,480,451,487],
[423,443,445,449,0,447,458,481],
[420,428,437,411,444,0,448,449],
[418,437,457,440,433,443,0,459],
[408,414,426,404,410,442,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,361,362,448,341,399,335,382],
[530,0,468,535,512,489,423,445],
[529,423,0,531,445,416,490,465],
[443,356,360,0,404,377,358,447],
[550,379,446,487,0,393,397,463],
[492,402,475,514,498,0,475,383],
[556,468,401,533,494,416,0,463],
[509,446,426,444,428,508,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,431,438,451,461,449,389],
[459,0,456,496,410,487,487,452],
[460,435,0,485,425,477,451,435],
[453,395,406,0,400,423,455,375],
[440,481,466,491,0,497,489,482],
[430,404,414,468,394,0,503,499],
[442,404,440,436,402,388,0,438],
[502,439,456,516,409,392,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,451,418,400,478,418,420],
[457,0,420,454,443,465,393,445],
[440,471,0,446,444,461,446,451],
[473,437,445,0,446,490,412,442],
[491,448,447,445,0,445,412,468],
[413,426,430,401,446,0,416,419],
[473,498,445,479,479,475,0,487],
[471,446,440,449,423,472,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,469,415,521,476,446,509],
[477,0,484,472,572,442,556,494],
[422,407,0,455,489,519,473,475],
[476,419,436,0,487,451,398,494],
[370,319,402,404,0,385,441,490],
[415,449,372,440,506,0,464,424],
[445,335,418,493,450,427,0,450],
[382,397,416,397,401,467,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,437,439,441,461,461,449],
[438,0,453,460,435,464,468,482],
[454,438,0,438,456,455,463,454],
[452,431,453,0,494,451,436,473],
[450,456,435,397,0,444,459,443],
[430,427,436,440,447,0,400,446],
[430,423,428,455,432,491,0,460],
[442,409,437,418,448,445,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,445,437,452,453,441,454],
[462,0,456,469,480,447,443,433],
[446,435,0,449,483,451,460,435],
[454,422,442,0,445,432,447,438],
[439,411,408,446,0,443,458,429],
[438,444,440,459,448,0,457,463],
[450,448,431,444,433,434,0,433],
[437,458,456,453,462,428,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,500,448,459,437,448,445],
[424,0,432,411,407,401,402,413],
[391,459,0,409,440,402,392,395],
[443,480,482,0,449,418,454,453],
[432,484,451,442,0,454,466,449],
[454,490,489,473,437,0,451,478],
[443,489,499,437,425,440,0,443],
[446,478,496,438,442,413,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,430,446,462,438,437,424],
[474,0,441,425,455,452,446,455],
[461,450,0,427,503,468,436,460],
[445,466,464,0,479,456,454,465],
[429,436,388,412,0,421,430,432],
[453,439,423,435,470,0,449,453],
[454,445,455,437,461,442,0,466],
[467,436,431,426,459,438,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,464,460,480,438,471,456],
[422,0,451,429,439,387,433,419],
[427,440,0,454,441,435,450,444],
[431,462,437,0,429,446,435,453],
[411,452,450,462,0,436,447,459],
[453,504,456,445,455,0,474,453],
[420,458,441,456,444,417,0,431],
[435,472,447,438,432,438,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,435,457,421,442,447,450],
[459,0,453,439,429,439,463,483],
[456,438,0,447,451,453,469,446],
[434,452,444,0,440,459,463,441],
[470,462,440,451,0,444,487,466],
[449,452,438,432,447,0,486,448],
[444,428,422,428,404,405,0,442],
[441,408,445,450,425,443,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,458,456,487,454,460,437],
[435,0,434,454,454,440,445,431],
[433,457,0,440,445,424,450,441],
[435,437,451,0,441,437,460,453],
[404,437,446,450,0,434,453,439],
[437,451,467,454,457,0,479,459],
[431,446,441,431,438,412,0,449],
[454,460,450,438,452,432,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,396,492,452,401,468,479],
[491,0,479,533,436,478,526,531],
[495,412,0,521,439,425,427,477],
[399,358,370,0,414,332,435,423],
[439,455,452,477,0,492,491,452],
[490,413,466,559,399,0,418,465],
[423,365,464,456,400,473,0,465],
[412,360,414,468,439,426,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,475,441,471,470,462,455],
[414,0,451,428,424,434,438,457],
[416,440,0,443,426,434,430,454],
[450,463,448,0,450,445,446,455],
[420,467,465,441,0,454,440,467],
[421,457,457,446,437,0,435,453],
[429,453,461,445,451,456,0,442],
[436,434,437,436,424,438,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,456,458,438,447,428,410],
[476,0,477,458,455,461,444,428],
[435,414,0,421,422,422,438,410],
[433,433,470,0,451,454,440,431],
[453,436,469,440,0,426,448,435],
[444,430,469,437,465,0,445,438],
[463,447,453,451,443,446,0,451],
[481,463,481,460,456,453,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,434,450,432,412,434,497],
[454,0,433,467,455,444,459,491],
[457,458,0,465,405,430,427,506],
[441,424,426,0,431,432,394,463],
[459,436,486,460,0,469,430,455],
[479,447,461,459,422,0,430,492],
[457,432,464,497,461,461,0,493],
[394,400,385,428,436,399,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,366,410,444,491,446,458,516],
[525,0,556,444,550,482,541,515],
[481,335,0,426,465,385,403,423],
[447,447,465,0,494,462,476,431],
[400,341,426,397,0,446,428,398],
[445,409,506,429,445,0,484,401],
[433,350,488,415,463,407,0,458],
[375,376,468,460,493,490,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,439,437,402,422,448,419],
[473,0,472,477,455,420,423,463],
[452,419,0,422,422,422,430,414],
[454,414,469,0,409,421,428,433],
[489,436,469,482,0,465,443,440],
[469,471,469,470,426,0,457,427],
[443,468,461,463,448,434,0,434],
[472,428,477,458,451,464,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,451,448,438,468,443,435],
[463,0,450,467,455,467,445,429],
[440,441,0,438,435,464,443,436],
[443,424,453,0,438,451,427,428],
[453,436,456,453,0,472,449,452],
[423,424,427,440,419,0,432,423],
[448,446,448,464,442,459,0,427],
[456,462,455,463,439,468,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,485,454,517,448,443,470],
[478,0,479,409,493,462,475,462],
[406,412,0,459,463,456,420,430],
[437,482,432,0,465,491,397,434],
[374,398,428,426,0,448,400,426],
[443,429,435,400,443,0,413,415],
[448,416,471,494,491,478,0,449],
[421,429,461,457,465,476,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,477,511,434,492,461,483],
[472,0,444,480,415,414,415,496],
[414,447,0,446,400,403,412,419],
[380,411,445,0,445,490,413,494],
[457,476,491,446,0,432,417,481],
[399,477,488,401,459,0,418,478],
[430,476,479,478,474,473,0,527],
[408,395,472,397,410,413,364,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,448,446,442,436,465,449],
[456,0,466,429,464,437,457,446],
[443,425,0,448,470,440,451,456],
[445,462,443,0,444,459,455,453],
[449,427,421,447,0,435,458,430],
[455,454,451,432,456,0,446,445],
[426,434,440,436,433,445,0,440],
[442,445,435,438,461,446,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,488,438,469,455,485,464],
[434,0,481,431,424,440,460,468],
[403,410,0,411,405,432,462,437],
[453,460,480,0,456,442,479,481],
[422,467,486,435,0,436,461,441],
[436,451,459,449,455,0,453,454],
[406,431,429,412,430,438,0,416],
[427,423,454,410,450,437,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,486,432,464,443,458,472],
[423,0,457,440,452,448,424,462],
[405,434,0,418,429,419,427,432],
[459,451,473,0,451,453,426,462],
[427,439,462,440,0,439,447,445],
[448,443,472,438,452,0,452,451],
[433,467,464,465,444,439,0,433],
[419,429,459,429,446,440,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,489,482,447,463,467,467],
[453,0,471,460,426,481,413,484],
[402,420,0,451,414,446,454,452],
[409,431,440,0,408,439,444,445],
[444,465,477,483,0,465,454,483],
[428,410,445,452,426,0,414,476],
[424,478,437,447,437,477,0,471],
[424,407,439,446,408,415,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,450,419,420,410,386,444],
[458,0,470,426,461,468,446,440],
[441,421,0,417,436,452,416,457],
[472,465,474,0,453,462,410,462],
[471,430,455,438,0,450,415,451],
[481,423,439,429,441,0,435,468],
[505,445,475,481,476,456,0,455],
[447,451,434,429,440,423,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,426,421,429,445,459,421],
[454,0,453,438,447,453,470,455],
[465,438,0,441,438,443,469,442],
[470,453,450,0,436,447,457,457],
[462,444,453,455,0,467,469,435],
[446,438,448,444,424,0,458,447],
[432,421,422,434,422,433,0,428],
[470,436,449,434,456,444,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,426,413,443,432,425,449],
[475,0,461,435,445,451,432,445],
[465,430,0,435,446,437,430,451],
[478,456,456,0,448,450,442,453],
[448,446,445,443,0,451,436,441],
[459,440,454,441,440,0,452,455],
[466,459,461,449,455,439,0,464],
[442,446,440,438,450,436,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,432,436,399,410,407,422],
[465,0,436,462,458,447,424,424],
[459,455,0,466,458,462,441,430],
[455,429,425,0,415,418,427,425],
[492,433,433,476,0,467,442,463],
[481,444,429,473,424,0,452,455],
[484,467,450,464,449,439,0,467],
[469,467,461,466,428,436,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,451,474,434,449,457,465],
[446,0,465,491,437,444,456,447],
[440,426,0,463,448,430,487,468],
[417,400,428,0,434,414,423,431],
[457,454,443,457,0,440,457,462],
[442,447,461,477,451,0,469,458],
[434,435,404,468,434,422,0,442],
[426,444,423,460,429,433,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,432,439,445,459,436,426],
[432,0,427,417,410,434,405,423],
[459,464,0,450,420,440,435,420],
[452,474,441,0,441,451,471,431],
[446,481,471,450,0,458,432,432],
[432,457,451,440,433,0,442,454],
[455,486,456,420,459,449,0,439],
[465,468,471,460,459,437,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,444,452,429,448,409,463],
[480,0,431,413,429,426,403,462],
[447,460,0,448,471,452,429,479],
[439,478,443,0,413,432,454,479],
[462,462,420,478,0,424,433,453],
[443,465,439,459,467,0,418,466],
[482,488,462,437,458,473,0,494],
[428,429,412,412,438,425,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,452,467,447,444,452,475],
[434,0,463,451,455,437,456,451],
[439,428,0,438,447,426,455,435],
[424,440,453,0,426,415,447,453],
[444,436,444,465,0,446,456,468],
[447,454,465,476,445,0,457,483],
[439,435,436,444,435,434,0,438],
[416,440,456,438,423,408,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,461,447,427,427,429,416],
[462,0,468,445,445,417,466,446],
[430,423,0,412,431,405,424,406],
[444,446,479,0,463,428,461,445],
[464,446,460,428,0,424,470,432],
[464,474,486,463,467,0,440,470],
[462,425,467,430,421,451,0,448],
[475,445,485,446,459,421,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,522,443,407,408,421,419],
[457,0,414,454,417,391,418,411],
[369,477,0,480,432,400,424,406],
[448,437,411,0,446,424,389,389],
[484,474,459,445,0,379,448,463],
[483,500,491,467,512,0,458,404],
[470,473,467,502,443,433,0,441],
[472,480,485,502,428,487,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,450,430,479,454,404,440],
[448,0,461,433,490,468,462,448],
[441,430,0,414,433,437,458,443],
[461,458,477,0,482,484,456,440],
[412,401,458,409,0,438,411,398],
[437,423,454,407,453,0,438,426],
[487,429,433,435,480,453,0,426],
[451,443,448,451,493,465,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,448,416,438,426,407,437],
[461,0,480,461,455,443,457,457],
[443,411,0,418,454,418,424,423],
[475,430,473,0,477,425,444,459],
[453,436,437,414,0,413,446,433],
[465,448,473,466,478,0,451,444],
[484,434,467,447,445,440,0,446],
[454,434,468,432,458,447,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,454,446,467,455,443,467],
[458,0,450,441,445,444,439,463],
[437,441,0,423,439,455,451,459],
[445,450,468,0,460,439,463,459],
[424,446,452,431,0,441,433,454],
[436,447,436,452,450,0,455,465],
[448,452,440,428,458,436,0,452],
[424,428,432,432,437,426,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,444,452,462,480,450,470],
[437,0,443,421,434,474,442,448],
[447,448,0,434,466,456,450,440],
[439,470,457,0,432,483,444,440],
[429,457,425,459,0,451,448,427],
[411,417,435,408,440,0,440,443],
[441,449,441,447,443,451,0,443],
[421,443,451,451,464,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,430,448,434,447,465,454],
[433,0,432,435,409,431,431,432],
[461,459,0,451,441,453,462,447],
[443,456,440,0,446,441,437,447],
[457,482,450,445,0,445,472,457],
[444,460,438,450,446,0,446,436],
[426,460,429,454,419,445,0,424],
[437,459,444,444,434,455,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,436,417,424,453,399,413],
[464,0,463,432,455,467,423,442],
[455,428,0,447,430,456,433,440],
[474,459,444,0,432,482,454,470],
[467,436,461,459,0,456,445,434],
[438,424,435,409,435,0,418,412],
[492,468,458,437,446,473,0,465],
[478,449,451,421,457,479,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,416,464,459,434,472,447],
[448,0,449,483,412,441,465,466],
[475,442,0,486,438,439,453,446],
[427,408,405,0,420,422,432,427],
[432,479,453,471,0,459,456,471],
[457,450,452,469,432,0,443,470],
[419,426,438,459,435,448,0,437],
[444,425,445,464,420,421,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,405,407,414,412,464,408],
[475,0,466,466,431,442,468,417],
[486,425,0,416,452,455,476,428],
[484,425,475,0,454,453,501,423],
[477,460,439,437,0,439,482,412],
[479,449,436,438,452,0,442,450],
[427,423,415,390,409,449,0,380],
[483,474,463,468,479,441,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,414,456,468,444,444,450],
[442,0,438,466,451,423,447,464],
[477,453,0,458,429,460,465,454],
[435,425,433,0,422,444,432,445],
[423,440,462,469,0,453,472,450],
[447,468,431,447,438,0,462,473],
[447,444,426,459,419,429,0,441],
[441,427,437,446,441,418,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,471,474,488,414,438,440],
[420,0,415,442,453,424,408,394],
[420,476,0,415,432,433,425,413],
[417,449,476,0,479,414,443,451],
[403,438,459,412,0,398,396,420],
[477,467,458,477,493,0,444,416],
[453,483,466,448,495,447,0,444],
[451,497,478,440,471,475,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,398,422,400,460,429,407],
[478,0,432,459,462,480,468,426],
[493,459,0,430,481,494,445,444],
[469,432,461,0,451,462,450,436],
[491,429,410,440,0,494,465,448],
[431,411,397,429,397,0,451,412],
[462,423,446,441,426,440,0,462],
[484,465,447,455,443,479,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,480,409,459,429,432,475],
[436,0,460,438,438,417,439,439],
[411,431,0,407,445,435,445,426],
[482,453,484,0,445,457,475,464],
[432,453,446,446,0,433,452,472],
[462,474,456,434,458,0,470,475],
[459,452,446,416,439,421,0,430],
[416,452,465,427,419,416,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,477,406,446,463,448,447],
[444,0,475,401,414,482,440,388],
[414,416,0,406,479,495,450,395],
[485,490,485,0,432,499,467,454],
[445,477,412,459,0,491,454,421],
[428,409,396,392,400,0,472,410],
[443,451,441,424,437,419,0,434],
[444,503,496,437,470,481,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,472,436,468,455,476,458],
[425,0,445,435,436,427,446,450],
[419,446,0,436,420,466,435,423],
[455,456,455,0,453,450,444,428],
[423,455,471,438,0,476,458,436],
[436,464,425,441,415,0,448,428],
[415,445,456,447,433,443,0,432],
[433,441,468,463,455,463,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,473,394,458,449,479,429],
[470,0,451,447,452,444,474,455],
[418,440,0,420,435,442,511,434],
[497,444,471,0,484,459,543,483],
[433,439,456,407,0,439,474,431],
[442,447,449,432,452,0,482,461],
[412,417,380,348,417,409,0,401],
[462,436,457,408,460,430,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,471,466,420,494,426,446],
[408,0,449,446,440,454,465,395],
[420,442,0,411,400,448,371,400],
[425,445,480,0,453,452,425,422],
[471,451,491,438,0,452,450,407],
[397,437,443,439,439,0,418,420],
[465,426,520,466,441,473,0,470],
[445,496,491,469,484,471,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,448,418,439,422,432,441],
[446,0,441,434,435,427,429,428],
[443,450,0,410,433,431,451,453],
[473,457,481,0,449,452,437,456],
[452,456,458,442,0,441,458,454],
[469,464,460,439,450,0,450,473],
[459,462,440,454,433,441,0,443],
[450,463,438,435,437,418,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,429,463,443,448,424,436],
[430,0,443,461,429,458,429,447],
[462,448,0,469,452,446,460,443],
[428,430,422,0,433,449,418,440],
[448,462,439,458,0,440,440,443],
[443,433,445,442,451,0,434,442],
[467,462,431,473,451,457,0,464],
[455,444,448,451,448,449,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,454,447,463,470,453,402],
[470,0,441,469,476,453,456,421],
[437,450,0,460,468,461,444,431],
[444,422,431,0,462,471,447,461],
[428,415,423,429,0,458,443,448],
[421,438,430,420,433,0,428,417],
[438,435,447,444,448,463,0,441],
[489,470,460,430,443,474,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,425,425,484,457,463,447],
[430,0,424,471,479,487,468,466],
[466,467,0,436,465,459,469,451],
[466,420,455,0,459,470,445,426],
[407,412,426,432,0,437,416,437],
[434,404,432,421,454,0,412,435],
[428,423,422,446,475,479,0,443],
[444,425,440,465,454,456,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,445,419,436,442,429,444],
[440,0,424,421,418,432,437,424],
[446,467,0,459,466,458,473,445],
[472,470,432,0,443,446,470,484],
[455,473,425,448,0,449,488,463],
[449,459,433,445,442,0,455,460],
[462,454,418,421,403,436,0,458],
[447,467,446,407,428,431,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,497,467,470,427,488,451],
[436,0,473,432,451,422,412,434],
[394,418,0,408,461,420,442,382],
[424,459,483,0,427,441,466,453],
[421,440,430,464,0,414,457,433],
[464,469,471,450,477,0,394,431],
[403,479,449,425,434,497,0,407],
[440,457,509,438,458,460,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,480,421,385,458,434,428],
[404,0,470,445,428,452,454,422],
[411,421,0,422,377,414,394,401],
[470,446,469,0,453,475,449,437],
[506,463,514,438,0,470,455,453],
[433,439,477,416,421,0,449,410],
[457,437,497,442,436,442,0,444],
[463,469,490,454,438,481,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,487,411,483,416,385,520],
[474,0,485,411,476,513,444,548],
[404,406,0,374,478,543,448,482],
[480,480,517,0,549,480,415,513],
[408,415,413,342,0,413,413,481],
[475,378,348,411,478,0,344,416],
[506,447,443,476,478,547,0,519],
[371,343,409,378,410,475,372,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,464,453,430,470,464,449],
[428,0,442,449,425,456,454,431],
[427,449,0,451,413,471,465,420],
[438,442,440,0,414,480,464,387],
[461,466,478,477,0,490,474,440],
[421,435,420,411,401,0,455,393],
[427,437,426,427,417,436,0,403],
[442,460,471,504,451,498,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,455,420,460,433,458,461],
[449,0,442,396,448,453,447,444],
[436,449,0,446,465,448,473,454],
[471,495,445,0,458,481,496,468],
[431,443,426,433,0,452,445,470],
[458,438,443,410,439,0,476,461],
[433,444,418,395,446,415,0,429],
[430,447,437,423,421,430,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,436,451,471,485,473,434],
[412,0,442,433,457,465,448,437],
[455,449,0,449,465,465,457,423],
[440,458,442,0,453,475,457,448],
[420,434,426,438,0,460,461,443],
[406,426,426,416,431,0,447,421],
[418,443,434,434,430,444,0,417],
[457,454,468,443,448,470,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,466,484,476,447,463,453],
[464,0,444,426,492,433,438,484],
[425,447,0,434,471,438,468,456],
[407,465,457,0,444,486,473,442],
[415,399,420,447,0,395,413,437],
[444,458,453,405,496,0,458,425],
[428,453,423,418,478,433,0,445],
[438,407,435,449,454,466,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,453,415,447,442,426,459],
[395,0,404,380,419,384,380,398],
[438,487,0,443,419,399,422,437],
[476,511,448,0,422,430,421,483],
[444,472,472,469,0,400,440,420],
[449,507,492,461,491,0,452,437],
[465,511,469,470,451,439,0,472],
[432,493,454,408,471,454,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,473,470,429,462,457,463],
[425,0,467,444,439,446,458,460],
[418,424,0,463,400,442,463,464],
[421,447,428,0,428,433,444,448],
[462,452,491,463,0,481,449,442],
[429,445,449,458,410,0,430,441],
[434,433,428,447,442,461,0,439],
[428,431,427,443,449,450,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,429,435,464,449,462,445],
[458,0,447,453,452,443,474,455],
[462,444,0,430,460,457,456,460],
[456,438,461,0,470,440,454,437],
[427,439,431,421,0,442,462,440],
[442,448,434,451,449,0,453,434],
[429,417,435,437,429,438,0,439],
[446,436,431,454,451,457,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,415,463,434,473,491,453],
[411,0,443,451,472,425,433,447],
[476,448,0,478,458,459,447,431],
[428,440,413,0,383,430,477,389],
[457,419,433,508,0,444,491,434],
[418,466,432,461,447,0,390,465],
[400,458,444,414,400,501,0,420],
[438,444,460,502,457,426,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,478,454,477,437,467,503],
[399,0,444,429,420,448,424,433],
[413,447,0,451,442,459,465,470],
[437,462,440,0,460,421,463,447],
[414,471,449,431,0,443,453,492],
[454,443,432,470,448,0,473,480],
[424,467,426,428,438,418,0,484],
[388,458,421,444,399,411,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,456,428,474,412,527,485],
[384,0,442,430,377,413,453,494],
[435,449,0,393,380,493,464,446],
[463,461,498,0,374,474,549,511],
[417,514,511,517,0,475,476,515],
[479,478,398,417,416,0,450,477],
[364,438,427,342,415,441,0,426],
[406,397,445,380,376,414,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,442,448,450,404,406,446],
[467,0,469,419,476,409,446,442],
[449,422,0,423,454,401,409,384],
[443,472,468,0,471,396,426,456],
[441,415,437,420,0,371,419,415],
[487,482,490,495,520,0,444,477],
[485,445,482,465,472,447,0,427],
[445,449,507,435,476,414,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,451,440,435,446,449,438],
[468,0,462,455,445,454,473,447],
[440,429,0,436,445,446,476,448],
[451,436,455,0,459,445,472,461],
[456,446,446,432,0,461,476,450],
[445,437,445,446,430,0,481,447],
[442,418,415,419,415,410,0,413],
[453,444,443,430,441,444,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,372,412,447,445,464,422],
[489,0,450,428,488,433,428,462],
[519,441,0,434,480,477,506,430],
[479,463,457,0,455,439,494,431],
[444,403,411,436,0,449,414,416],
[446,458,414,452,442,0,454,448],
[427,463,385,397,477,437,0,391],
[469,429,461,460,475,443,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,450,436,442,451,444,480],
[447,0,444,448,477,471,472,484],
[441,447,0,459,471,455,456,482],
[455,443,432,0,467,459,447,476],
[449,414,420,424,0,454,424,451],
[440,420,436,432,437,0,454,446],
[447,419,435,444,467,437,0,469],
[411,407,409,415,440,445,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,488,549,510,520,440,489],
[396,0,453,418,461,421,425,429],
[403,438,0,487,439,474,431,458],
[342,473,404,0,452,420,420,500],
[381,430,452,439,0,387,421,429],
[371,470,417,471,504,0,497,504],
[451,466,460,471,470,394,0,440],
[402,462,433,391,462,387,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,499,438,427,451,466,466],
[458,0,469,464,443,430,459,458],
[392,422,0,410,391,384,426,446],
[453,427,481,0,439,458,448,476],
[464,448,500,452,0,423,458,492],
[440,461,507,433,468,0,463,470],
[425,432,465,443,433,428,0,473],
[425,433,445,415,399,421,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,459,463,451,439,436,446],
[434,0,432,425,394,418,412,369],
[432,459,0,437,416,431,434,385],
[428,466,454,0,442,445,440,376],
[440,497,475,449,0,464,464,408],
[452,473,460,446,427,0,440,404],
[455,479,457,451,427,451,0,421],
[445,522,506,515,483,487,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,460,440,453,451,422,447],
[467,0,468,448,468,456,430,444],
[431,423,0,456,470,436,416,437],
[451,443,435,0,433,410,420,439],
[438,423,421,458,0,425,432,463],
[440,435,455,481,466,0,447,449],
[469,461,475,471,459,444,0,454],
[444,447,454,452,428,442,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,460,445,415,433,465,471],
[480,0,477,431,475,449,457,458],
[431,414,0,404,407,407,460,427],
[446,460,487,0,426,416,466,466],
[476,416,484,465,0,446,452,465],
[458,442,484,475,445,0,490,443],
[426,434,431,425,439,401,0,441],
[420,433,464,425,426,448,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,477,436,385,446,371,451],
[475,0,572,474,494,432,477,400],
[414,319,0,371,382,430,435,388],
[455,417,520,0,492,425,476,447],
[506,397,509,399,0,496,336,418],
[445,459,461,466,395,0,416,448],
[520,414,456,415,555,475,0,434],
[440,491,503,444,473,443,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,448,442,451,431,414,428],
[473,0,485,486,491,444,440,453],
[443,406,0,434,435,417,405,406],
[449,405,457,0,468,441,403,424],
[440,400,456,423,0,421,415,411],
[460,447,474,450,470,0,450,441],
[477,451,486,488,476,441,0,477],
[463,438,485,467,480,450,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,465,439,468,457,444,468],
[430,0,443,432,444,445,441,439],
[426,448,0,486,455,452,459,442],
[452,459,405,0,432,447,436,445],
[423,447,436,459,0,435,423,416],
[434,446,439,444,456,0,446,449],
[447,450,432,455,468,445,0,467],
[423,452,449,446,475,442,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,460,450,451,443,454,458],
[450,0,447,448,447,440,445,474],
[431,444,0,469,464,443,458,478],
[441,443,422,0,444,453,425,455],
[440,444,427,447,0,433,429,467],
[448,451,448,438,458,0,433,481],
[437,446,433,466,462,458,0,455],
[433,417,413,436,424,410,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,453,406,443,425,379,474],
[439,0,372,381,426,389,439,404],
[438,519,0,473,507,463,464,419],
[485,510,418,0,452,442,460,421],
[448,465,384,439,0,424,407,460],
[466,502,428,449,467,0,423,458],
[512,452,427,431,484,468,0,511],
[417,487,472,470,431,433,380,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,438,406,431,416,478,467],
[483,0,469,420,460,491,518,465],
[453,422,0,418,443,456,494,453],
[485,471,473,0,417,441,521,450],
[460,431,448,474,0,372,508,417],
[475,400,435,450,519,0,512,459],
[413,373,397,370,383,379,0,415],
[424,426,438,441,474,432,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,445,495,506,484,482,486],
[431,0,439,434,394,433,410,426],
[446,452,0,500,466,447,434,455],
[396,457,391,0,425,377,419,432],
[385,497,425,466,0,443,422,467],
[407,458,444,514,448,0,444,439],
[409,481,457,472,469,447,0,439],
[405,465,436,459,424,452,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,444,446,450,481,424,444],
[457,0,437,450,450,466,469,450],
[447,454,0,450,458,478,455,439],
[445,441,441,0,477,487,456,465],
[441,441,433,414,0,476,425,447],
[410,425,413,404,415,0,443,425],
[467,422,436,435,466,448,0,437],
[447,441,452,426,444,466,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,557,415,390,517,436,522],
[440,0,540,435,480,522,477,442],
[334,351,0,368,370,374,391,397],
[476,456,523,0,438,520,538,459],
[501,411,521,453,0,480,435,502],
[374,369,517,371,411,0,434,455],
[455,414,500,353,456,457,0,499],
[369,449,494,432,389,436,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,463,460,428,461,430,444],
[440,0,442,439,452,467,444,435],
[428,449,0,431,418,432,428,430],
[431,452,460,0,437,454,450,431],
[463,439,473,454,0,468,464,471],
[430,424,459,437,423,0,437,433],
[461,447,463,441,427,454,0,435],
[447,456,461,460,420,458,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,430,414,441,442,430,414],
[440,0,425,449,438,439,434,415],
[461,466,0,450,434,442,456,459],
[477,442,441,0,465,467,451,464],
[450,453,457,426,0,451,410,425],
[449,452,449,424,440,0,440,463],
[461,457,435,440,481,451,0,451],
[477,476,432,427,466,428,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,468,442,449,468,456,476],
[450,0,453,455,447,456,438,458],
[423,438,0,440,408,433,430,451],
[449,436,451,0,401,423,416,464],
[442,444,483,490,0,457,438,465],
[423,435,458,468,434,0,417,469],
[435,453,461,475,453,474,0,490],
[415,433,440,427,426,422,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,467,423,500,442,420,423],
[406,0,441,370,437,423,360,416],
[424,450,0,436,483,462,444,484],
[468,521,455,0,507,445,453,462],
[391,454,408,384,0,372,383,392],
[449,468,429,446,519,0,455,444],
[471,531,447,438,508,436,0,479],
[468,475,407,429,499,447,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,414,452,427,426,437,435],
[483,0,454,495,440,461,481,455],
[477,437,0,480,444,470,449,463],
[439,396,411,0,412,434,429,432],
[464,451,447,479,0,434,450,460],
[465,430,421,457,457,0,437,466],
[454,410,442,462,441,454,0,467],
[456,436,428,459,431,425,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,505,444,463,449,505,477],
[450,0,474,466,454,425,462,503],
[386,417,0,400,405,411,453,441],
[447,425,491,0,464,469,462,504],
[428,437,486,427,0,498,464,491],
[442,466,480,422,393,0,456,474],
[386,429,438,429,427,435,0,484],
[414,388,450,387,400,417,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,419,452,445,433,451,411],
[440,0,415,418,417,438,427,424],
[472,476,0,463,476,471,467,445],
[439,473,428,0,460,451,441,443],
[446,474,415,431,0,446,449,438],
[458,453,420,440,445,0,462,454],
[440,464,424,450,442,429,0,428],
[480,467,446,448,453,437,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,473,428,458,437,450,449],
[459,0,461,443,450,476,462,437],
[418,430,0,454,458,433,417,417],
[463,448,437,0,424,419,465,440],
[433,441,433,467,0,449,429,426],
[454,415,458,472,442,0,467,437],
[441,429,474,426,462,424,0,421],
[442,454,474,451,465,454,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,440,452,438,435,443,446],
[446,0,455,426,432,456,472,455],
[451,436,0,445,448,436,453,465],
[439,465,446,0,425,417,454,430],
[453,459,443,466,0,422,495,437],
[456,435,455,474,469,0,453,493],
[448,419,438,437,396,438,0,437],
[445,436,426,461,454,398,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,461,470,455,431,443,451],
[447,0,467,466,427,426,419,412],
[430,424,0,436,441,411,398,442],
[421,425,455,0,441,422,447,456],
[436,464,450,450,0,454,429,439],
[460,465,480,469,437,0,447,463],
[448,472,493,444,462,444,0,467],
[440,479,449,435,452,428,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,427,410,431,444,428,440],
[462,0,419,422,428,451,436,443],
[464,472,0,446,424,463,434,458],
[481,469,445,0,446,457,462,457],
[460,463,467,445,0,457,450,462],
[447,440,428,434,434,0,440,419],
[463,455,457,429,441,451,0,440],
[451,448,433,434,429,472,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,447,438,419,410,421,432],
[449,0,446,452,414,440,437,462],
[444,445,0,422,421,429,427,435],
[453,439,469,0,406,428,447,441],
[472,477,470,485,0,455,445,448],
[481,451,462,463,436,0,449,440],
[470,454,464,444,446,442,0,476],
[459,429,456,450,443,451,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,444,452,422,426,435,423],
[441,0,448,372,400,425,424,426],
[447,443,0,427,432,433,406,449],
[439,519,464,0,472,471,467,438],
[469,491,459,419,0,433,464,449],
[465,466,458,420,458,0,463,446],
[456,467,485,424,427,428,0,444],
[468,465,442,453,442,445,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,454,423,444,442,434,421],
[458,0,460,433,467,425,455,458],
[437,431,0,433,448,447,448,455],
[468,458,458,0,481,439,457,463],
[447,424,443,410,0,428,424,421],
[449,466,444,452,463,0,479,438],
[457,436,443,434,467,412,0,449],
[470,433,436,428,470,453,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,462,455,399,445,429,439],
[446,0,475,467,447,450,434,465],
[429,416,0,436,424,433,453,453],
[436,424,455,0,426,434,441,439],
[492,444,467,465,0,472,456,464],
[446,441,458,457,419,0,421,465],
[462,457,438,450,435,470,0,446],
[452,426,438,452,427,426,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,464,471,443,442,471,482],
[443,0,436,445,468,473,450,491],
[427,455,0,430,451,434,455,441],
[420,446,461,0,469,487,471,457],
[448,423,440,422,0,447,487,445],
[449,418,457,404,444,0,453,443],
[420,441,436,420,404,438,0,434],
[409,400,450,434,446,448,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,457,421,409,414,417,426],
[468,0,456,435,442,429,453,462],
[434,435,0,422,420,409,450,419],
[470,456,469,0,455,452,460,428],
[482,449,471,436,0,426,451,427],
[477,462,482,439,465,0,457,450],
[474,438,441,431,440,434,0,440],
[465,429,472,463,464,441,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,421,456,446,463,450,419],
[439,0,460,481,456,477,432,463],
[470,431,0,460,447,472,441,424],
[435,410,431,0,420,454,418,416],
[445,435,444,471,0,469,446,420],
[428,414,419,437,422,0,407,423],
[441,459,450,473,445,484,0,430],
[472,428,467,475,471,468,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,425,434,454,464,448,460],
[434,0,417,430,435,449,456,462],
[466,474,0,445,456,455,452,481],
[457,461,446,0,435,448,456,467],
[437,456,435,456,0,458,465,471],
[427,442,436,443,433,0,443,465],
[443,435,439,435,426,448,0,438],
[431,429,410,424,420,426,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,429,467,478,446,472,456],
[457,0,461,458,452,429,465,448],
[462,430,0,422,430,440,447,434],
[424,433,469,0,468,429,457,413],
[413,439,461,423,0,417,456,394],
[445,462,451,462,474,0,475,440],
[419,426,444,434,435,416,0,401],
[435,443,457,478,497,451,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,462,441,455,453,473,429],
[426,0,467,454,444,438,465,444],
[429,424,0,410,429,431,426,429],
[450,437,481,0,457,443,458,425],
[436,447,462,434,0,436,465,452],
[438,453,460,448,455,0,451,444],
[418,426,465,433,426,440,0,428],
[462,447,462,466,439,447,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,445,438,470,525,429,396],
[460,0,428,458,459,479,445,432],
[446,463,0,399,491,436,453,417],
[453,433,492,0,466,503,448,448],
[421,432,400,425,0,402,428,376],
[366,412,455,388,489,0,399,379],
[462,446,438,443,463,492,0,457],
[495,459,474,443,515,512,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,529,427,590,528,432,531],
[431,0,431,397,399,463,531,530],
[362,460,0,329,360,463,298,533],
[464,494,562,0,433,594,498,533],
[301,492,531,458,0,498,465,436],
[363,428,428,297,393,0,400,334],
[459,360,593,393,426,491,0,466],
[360,361,358,358,455,557,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,425,452,448,419,468,467],
[445,0,447,464,447,462,468,490],
[466,444,0,483,422,459,482,449],
[439,427,408,0,410,436,464,425],
[443,444,469,481,0,472,451,472],
[472,429,432,455,419,0,444,444],
[423,423,409,427,440,447,0,438],
[424,401,442,466,419,447,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,437,447,431,450,432,431],
[439,0,446,446,447,422,460,434],
[454,445,0,451,437,444,438,418],
[444,445,440,0,431,440,455,432],
[460,444,454,460,0,431,450,433],
[441,469,447,451,460,0,443,451],
[459,431,453,436,441,448,0,413],
[460,457,473,459,458,440,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,468,460,463,479,431,436],
[418,0,452,448,405,457,403,408],
[423,439,0,439,424,427,410,403],
[431,443,452,0,430,450,412,433],
[428,486,467,461,0,477,417,451],
[412,434,464,441,414,0,410,402],
[460,488,481,479,474,481,0,438],
[455,483,488,458,440,489,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,451,465,431,459,424,430],
[461,0,464,438,428,483,456,449],
[440,427,0,421,399,456,428,430],
[426,453,470,0,447,476,437,440],
[460,463,492,444,0,464,453,479],
[432,408,435,415,427,0,407,437],
[467,435,463,454,438,484,0,464],
[461,442,461,451,412,454,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,460,460,455,447,467,442],
[418,0,427,476,448,464,437,415],
[431,464,0,474,463,442,442,448],
[431,415,417,0,441,431,419,426],
[436,443,428,450,0,426,448,448],
[444,427,449,460,465,0,449,441],
[424,454,449,472,443,442,0,441],
[449,476,443,465,443,450,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,452,470,459,444,497,425],
[375,0,410,406,429,447,442,417],
[439,481,0,464,463,471,452,409],
[421,485,427,0,425,483,486,434],
[432,462,428,466,0,460,446,441],
[447,444,420,408,431,0,427,454],
[394,449,439,405,445,464,0,402],
[466,474,482,457,450,437,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,438,425,424,460,484,446],
[455,0,444,475,429,448,441,444],
[453,447,0,429,410,474,450,412],
[466,416,462,0,420,444,463,446],
[467,462,481,471,0,484,491,438],
[431,443,417,447,407,0,460,430],
[407,450,441,428,400,431,0,426],
[445,447,479,445,453,461,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,432,419,419,471,434,424],
[446,0,420,483,436,470,423,443],
[459,471,0,465,462,482,437,452],
[472,408,426,0,471,440,451,457],
[472,455,429,420,0,416,458,425],
[420,421,409,451,475,0,426,431],
[457,468,454,440,433,465,0,420],
[467,448,439,434,466,460,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,583,501,466,470,441,456,470],
[308,0,431,297,381,382,345,412],
[390,460,0,416,473,451,446,433],
[425,594,475,0,446,515,486,529],
[421,510,418,445,0,408,382,422],
[450,509,440,376,483,0,429,413],
[435,546,445,405,509,462,0,477],
[421,479,458,362,469,478,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,443,439,439,475,457,441],
[452,0,430,424,437,465,459,434],
[448,461,0,468,426,468,466,472],
[452,467,423,0,460,457,471,448],
[452,454,465,431,0,467,454,457],
[416,426,423,434,424,0,432,430],
[434,432,425,420,437,459,0,443],
[450,457,419,443,434,461,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,448,451,447,462,421,445],
[438,0,433,450,449,467,421,456],
[443,458,0,454,435,434,436,448],
[440,441,437,0,449,448,461,456],
[444,442,456,442,0,463,442,468],
[429,424,457,443,428,0,453,442],
[470,470,455,430,449,438,0,446],
[446,435,443,435,423,449,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,414,432,493,469,431,444],
[444,0,412,460,508,509,483,458],
[477,479,0,421,525,436,447,478],
[459,431,470,0,440,389,411,416],
[398,383,366,451,0,411,440,414],
[422,382,455,502,480,0,440,416],
[460,408,444,480,451,451,0,428],
[447,433,413,475,477,475,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,418,440,463,483,455,393],
[483,0,433,466,470,549,492,471],
[473,458,0,440,504,490,475,417],
[451,425,451,0,448,513,517,433],
[428,421,387,443,0,456,448,408],
[408,342,401,378,435,0,436,365],
[436,399,416,374,443,455,0,408],
[498,420,474,458,483,526,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,427,408,428,427,430,442],
[471,0,451,441,445,427,450,471],
[464,440,0,448,448,458,453,474],
[483,450,443,0,439,440,447,469],
[463,446,443,452,0,442,452,456],
[464,464,433,451,449,0,450,455],
[461,441,438,444,439,441,0,455],
[449,420,417,422,435,436,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,466,441,423,466,439,457],
[434,0,447,444,469,474,434,443],
[425,444,0,439,455,451,417,459],
[450,447,452,0,454,470,426,446],
[468,422,436,437,0,452,431,477],
[425,417,440,421,439,0,431,435],
[452,457,474,465,460,460,0,416],
[434,448,432,445,414,456,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,454,448,470,457,427,466],
[442,0,461,440,446,454,432,445],
[437,430,0,424,449,435,437,449],
[443,451,467,0,462,455,449,470],
[421,445,442,429,0,467,447,460],
[434,437,456,436,424,0,411,434],
[464,459,454,442,444,480,0,447],
[425,446,442,421,431,457,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,479,448,436,495,462,483],
[423,0,409,461,437,500,442,434],
[412,482,0,437,465,528,450,465],
[443,430,454,0,462,477,446,455],
[455,454,426,429,0,490,477,447],
[396,391,363,414,401,0,396,417],
[429,449,441,445,414,495,0,458],
[408,457,426,436,444,474,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,336,334,111,222,337,225],
[444,0,332,445,444,334,334,557],
[555,559,0,445,333,445,448,335],
[557,446,446,0,332,333,558,557],
[780,447,558,559,0,556,448,335],
[669,557,446,558,335,0,447,335],
[554,557,443,333,443,444,0,446],
[666,334,556,334,556,556,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,456,431,443,434,460,455],
[422,0,440,417,432,460,449,439],
[435,451,0,449,432,459,470,444],
[460,474,442,0,452,461,469,454],
[448,459,459,439,0,454,485,447],
[457,431,432,430,437,0,452,431],
[431,442,421,422,406,439,0,434],
[436,452,447,437,444,460,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,486,449,459,429,437,462],
[425,0,466,451,442,435,450,438],
[405,425,0,431,445,436,417,444],
[442,440,460,0,439,413,433,445],
[432,449,446,452,0,441,432,452],
[462,456,455,478,450,0,441,458],
[454,441,474,458,459,450,0,471],
[429,453,447,446,439,433,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,464,457,468,445,449,432],
[459,0,466,485,471,475,439,413],
[427,425,0,441,437,438,418,419],
[434,406,450,0,433,445,425,416],
[423,420,454,458,0,449,409,401],
[446,416,453,446,442,0,432,436],
[442,452,473,466,482,459,0,447],
[459,478,472,475,490,455,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,444,500,489,504,460,427],
[489,0,467,521,485,501,464,436],
[447,424,0,533,461,520,473,440],
[391,370,358,0,410,438,368,336],
[402,406,430,481,0,493,440,431],
[387,390,371,453,398,0,420,409],
[431,427,418,523,451,471,0,475],
[464,455,451,555,460,482,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,426,469,426,457,398,402],
[493,0,451,445,472,452,421,451],
[465,440,0,445,459,495,428,455],
[422,446,446,0,484,477,453,461],
[465,419,432,407,0,494,448,419],
[434,439,396,414,397,0,404,377],
[493,470,463,438,443,487,0,472],
[489,440,436,430,472,514,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,454,446,463,444,454,448],
[454,0,459,460,456,444,446,452],
[437,432,0,428,450,460,448,416],
[445,431,463,0,457,457,452,426],
[428,435,441,434,0,460,427,445],
[447,447,431,434,431,0,444,445],
[437,445,443,439,464,447,0,451],
[443,439,475,465,446,446,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,440,418,433,444,463,436],
[442,0,453,425,425,439,445,441],
[451,438,0,435,442,456,450,412],
[473,466,456,0,438,452,457,465],
[458,466,449,453,0,447,458,443],
[447,452,435,439,444,0,457,462],
[428,446,441,434,433,434,0,448],
[455,450,479,426,448,429,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,452,453,441,417,438,434],
[450,0,432,445,421,428,460,443],
[439,459,0,423,436,445,441,425],
[438,446,468,0,414,465,432,435],
[450,470,455,477,0,439,455,463],
[474,463,446,426,452,0,445,440],
[453,431,450,459,436,446,0,435],
[457,448,466,456,428,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,330,366,287,387,363,416,423],
[561,0,419,470,440,472,566,565],
[525,472,0,435,416,469,488,547],
[604,421,456,0,398,380,606,515],
[504,451,475,493,0,434,587,625],
[528,419,422,511,457,0,548,589],
[475,325,403,285,304,343,0,493],
[468,326,344,376,266,302,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,478,445,426,449,402,432],
[485,0,509,451,430,444,429,455],
[413,382,0,405,391,407,422,419],
[446,440,486,0,441,456,450,441],
[465,461,500,450,0,460,437,479],
[442,447,484,435,431,0,423,442],
[489,462,469,441,454,468,0,431],
[459,436,472,450,412,449,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,445,446,427,443,446,435],
[450,0,453,460,444,448,431,449],
[446,438,0,468,435,433,434,446],
[445,431,423,0,449,434,446,447],
[464,447,456,442,0,438,438,453],
[448,443,458,457,453,0,431,449],
[445,460,457,445,453,460,0,440],
[456,442,445,444,438,442,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,434,410,399,455,418,431],
[458,0,433,408,444,423,420,472],
[457,458,0,430,431,443,469,481],
[481,483,461,0,453,444,476,495],
[492,447,460,438,0,455,430,461],
[436,468,448,447,436,0,463,460],
[473,471,422,415,461,428,0,468],
[460,419,410,396,430,431,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,457,456,437,428,437,424],
[461,0,447,454,452,437,458,421],
[434,444,0,432,441,431,451,413],
[435,437,459,0,473,434,434,448],
[454,439,450,418,0,430,429,431],
[463,454,460,457,461,0,454,431],
[454,433,440,457,462,437,0,452],
[467,470,478,443,460,460,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,484,456,444,461,461,479],
[407,0,446,447,422,439,420,458],
[407,445,0,450,428,432,407,453],
[435,444,441,0,428,423,434,451],
[447,469,463,463,0,441,437,456],
[430,452,459,468,450,0,445,463],
[430,471,484,457,454,446,0,476],
[412,433,438,440,435,428,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,442,452,434,431,423,457],
[476,0,437,485,464,460,461,477],
[449,454,0,474,425,462,455,460],
[439,406,417,0,434,398,418,426],
[457,427,466,457,0,438,446,484],
[460,431,429,493,453,0,452,475],
[468,430,436,473,445,439,0,442],
[434,414,431,465,407,416,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,449,452,418,443,420,445],
[433,0,463,457,463,512,479,436],
[442,428,0,458,480,496,440,464],
[439,434,433,0,437,457,455,441],
[473,428,411,454,0,479,432,429],
[448,379,395,434,412,0,412,428],
[471,412,451,436,459,479,0,449],
[446,455,427,450,462,463,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,572,603,448,380,478,606],
[417,0,602,478,352,446,482,509],
[319,289,0,415,320,257,451,448],
[288,413,476,0,254,315,481,387],
[443,539,571,637,0,382,450,351],
[511,445,634,576,509,0,515,447],
[413,409,440,410,441,376,0,412],
[285,382,443,504,540,444,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,482,432,455,501,461,464],
[439,0,440,447,434,476,427,453],
[409,451,0,432,418,468,433,430],
[459,444,459,0,455,475,464,464],
[436,457,473,436,0,467,463,456],
[390,415,423,416,424,0,441,437],
[430,464,458,427,428,450,0,441],
[427,438,461,427,435,454,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,451,422,476,447,434,441],
[440,0,437,431,459,443,438,428],
[440,454,0,456,467,455,450,443],
[469,460,435,0,464,437,453,448],
[415,432,424,427,0,413,459,411],
[444,448,436,454,478,0,448,461],
[457,453,441,438,432,443,0,444],
[450,463,448,443,480,430,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,441,414,442,459,447,467],
[458,0,447,459,446,449,418,457],
[450,444,0,424,415,455,428,448],
[477,432,467,0,446,472,435,460],
[449,445,476,445,0,485,454,473],
[432,442,436,419,406,0,432,430],
[444,473,463,456,437,459,0,460],
[424,434,443,431,418,461,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,441,471,454,475,466,451],
[445,0,456,449,467,474,447,457],
[450,435,0,464,443,454,445,445],
[420,442,427,0,439,469,438,438],
[437,424,448,452,0,472,461,448],
[416,417,437,422,419,0,429,430],
[425,444,446,453,430,462,0,450],
[440,434,446,453,443,461,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,466,431,482,467,446,420],
[394,0,416,420,432,426,436,431],
[425,475,0,403,483,426,450,423],
[460,471,488,0,479,426,451,454],
[409,459,408,412,0,413,422,431],
[424,465,465,465,478,0,455,449],
[445,455,441,440,469,436,0,431],
[471,460,468,437,460,442,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,430,426,416,427,412,419],
[493,0,468,426,451,450,439,447],
[461,423,0,406,424,431,423,430],
[465,465,485,0,456,459,445,445],
[475,440,467,435,0,446,451,454],
[464,441,460,432,445,0,461,465],
[479,452,468,446,440,430,0,431],
[472,444,461,446,437,426,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,429,435,444,459,426,433],
[459,0,428,453,475,458,453,445],
[462,463,0,464,469,474,443,464],
[456,438,427,0,470,476,430,468],
[447,416,422,421,0,439,426,435],
[432,433,417,415,452,0,431,416],
[465,438,448,461,465,460,0,433],
[458,446,427,423,456,475,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,522,469,484,471,493,430,464],
[369,0,416,415,425,441,431,396],
[422,475,0,479,453,452,449,424],
[407,476,412,0,432,443,430,411],
[420,466,438,459,0,484,445,455],
[398,450,439,448,407,0,418,446],
[461,460,442,461,446,473,0,432],
[427,495,467,480,436,445,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,433,433,462,432,459,450],
[418,0,450,393,376,407,420,406],
[458,441,0,425,381,426,443,416],
[458,498,466,0,397,455,462,448],
[429,515,510,494,0,485,492,468],
[459,484,465,436,406,0,451,435],
[432,471,448,429,399,440,0,404],
[441,485,475,443,423,456,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,454,436,448,422,419,441],
[423,0,446,443,429,414,411,439],
[437,445,0,419,408,411,389,398],
[455,448,472,0,457,419,441,449],
[443,462,483,434,0,455,423,445],
[469,477,480,472,436,0,420,447],
[472,480,502,450,468,471,0,438],
[450,452,493,442,446,444,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,422,415,434,427,417,462],
[465,0,421,437,452,466,439,462],
[469,470,0,465,499,442,465,454],
[476,454,426,0,462,468,416,432],
[457,439,392,429,0,445,418,429],
[464,425,449,423,446,0,441,426],
[474,452,426,475,473,450,0,459],
[429,429,437,459,462,465,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,423,471,462,461,413,446],
[418,0,450,476,417,443,416,449],
[468,441,0,515,448,460,469,478],
[420,415,376,0,398,453,427,468],
[429,474,443,493,0,402,468,451],
[430,448,431,438,489,0,429,433],
[478,475,422,464,423,462,0,503],
[445,442,413,423,440,458,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,455,443,468,457,467,444],
[425,0,449,437,452,440,457,440],
[436,442,0,435,467,442,431,435],
[448,454,456,0,461,436,467,428],
[423,439,424,430,0,418,438,447],
[434,451,449,455,473,0,443,470],
[424,434,460,424,453,448,0,441],
[447,451,456,463,444,421,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,439,477,465,478,470,449],
[431,0,460,487,473,450,490,436],
[452,431,0,478,462,481,436,461],
[414,404,413,0,443,422,430,400],
[426,418,429,448,0,424,447,427],
[413,441,410,469,467,0,431,417],
[421,401,455,461,444,460,0,409],
[442,455,430,491,464,474,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,456,399,442,406,417,432],
[469,0,472,419,475,444,415,483],
[435,419,0,416,440,421,417,425],
[492,472,475,0,500,461,443,480],
[449,416,451,391,0,425,417,454],
[485,447,470,430,466,0,455,441],
[474,476,474,448,474,436,0,467],
[459,408,466,411,437,450,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,470,474,449,486,454,440],
[431,0,462,466,439,457,458,448],
[421,429,0,449,433,460,444,428],
[417,425,442,0,433,445,438,427],
[442,452,458,458,0,479,460,445],
[405,434,431,446,412,0,444,423],
[437,433,447,453,431,447,0,445],
[451,443,463,464,446,468,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,455,455,438,378,421,424],
[514,0,452,503,502,466,479,428],
[436,439,0,442,498,379,432,463],
[436,388,449,0,479,428,463,501],
[453,389,393,412,0,408,407,418],
[513,425,512,463,483,0,458,485],
[470,412,459,428,484,433,0,476],
[467,463,428,390,473,406,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,423,440,477,423,452,413],
[452,0,469,427,458,439,452,454],
[468,422,0,470,481,455,433,442],
[451,464,421,0,488,440,449,424],
[414,433,410,403,0,377,402,415],
[468,452,436,451,514,0,440,442],
[439,439,458,442,489,451,0,435],
[478,437,449,467,476,449,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,452,435,441,426,456,450],
[465,0,441,461,453,463,436,451],
[439,450,0,459,436,437,457,468],
[456,430,432,0,432,440,430,462],
[450,438,455,459,0,440,444,481],
[465,428,454,451,451,0,479,472],
[435,455,434,461,447,412,0,436],
[441,440,423,429,410,419,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,453,452,464,433,464,453],
[476,0,402,436,463,420,466,447],
[438,489,0,427,451,394,445,425],
[439,455,464,0,457,405,417,425],
[427,428,440,434,0,386,423,429],
[458,471,497,486,505,0,438,476],
[427,425,446,474,468,453,0,472],
[438,444,466,466,462,415,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,447,402,457,471,404,449],
[414,0,432,462,457,442,452,422],
[444,459,0,415,432,453,429,475],
[489,429,476,0,473,462,449,426],
[434,434,459,418,0,480,409,435],
[420,449,438,429,411,0,428,430],
[487,439,462,442,482,463,0,441],
[442,469,416,465,456,461,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,432,450,437,441,430,438],
[424,0,453,439,435,440,442,450],
[459,438,0,443,426,461,440,417],
[441,452,448,0,436,432,457,446],
[454,456,465,455,0,448,464,437],
[450,451,430,459,443,0,470,471],
[461,449,451,434,427,421,0,467],
[453,441,474,445,454,420,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,425,417,434,396,404,391],
[475,0,460,464,468,433,409,434],
[466,431,0,434,445,430,434,433],
[474,427,457,0,472,438,455,422],
[457,423,446,419,0,435,419,433],
[495,458,461,453,456,0,426,439],
[487,482,457,436,472,465,0,446],
[500,457,458,469,458,452,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,480,478,490,452,455,453],
[455,0,479,470,492,443,461,448],
[411,412,0,414,424,439,447,419],
[413,421,477,0,478,424,444,426],
[401,399,467,413,0,431,435,417],
[439,448,452,467,460,0,461,438],
[436,430,444,447,456,430,0,438],
[438,443,472,465,474,453,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,457,461,454,482,467,457],
[462,0,450,458,422,438,456,447],
[434,441,0,459,438,446,437,460],
[430,433,432,0,436,444,446,444],
[437,469,453,455,0,485,462,453],
[409,453,445,447,406,0,435,433],
[424,435,454,445,429,456,0,461],
[434,444,431,447,438,458,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,446,451,434,438,471,435],
[454,0,444,437,403,418,471,460],
[445,447,0,427,455,448,481,458],
[440,454,464,0,468,428,493,467],
[457,488,436,423,0,471,446,477],
[453,473,443,463,420,0,471,485],
[420,420,410,398,445,420,0,466],
[456,431,433,424,414,406,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,444,441,444,444,440,421],
[440,0,429,449,415,453,443,456],
[447,462,0,452,451,478,429,446],
[450,442,439,0,415,466,420,422],
[447,476,440,476,0,473,446,437],
[447,438,413,425,418,0,435,426],
[451,448,462,471,445,456,0,437],
[470,435,445,469,454,465,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,449,477,465,485,431,465],
[424,0,458,462,480,450,415,435],
[442,433,0,463,483,460,437,461],
[414,429,428,0,445,440,447,414],
[426,411,408,446,0,421,423,414],
[406,441,431,451,470,0,424,435],
[460,476,454,444,468,467,0,452],
[426,456,430,477,477,456,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,416,400,424,405,409,412],
[466,0,449,442,472,451,447,443],
[475,442,0,431,451,434,458,423],
[491,449,460,0,484,434,438,424],
[467,419,440,407,0,391,406,410],
[486,440,457,457,500,0,452,428],
[482,444,433,453,485,439,0,447],
[479,448,468,467,481,463,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,505,481,389,426,470,526,470],
[386,0,401,351,372,408,410,411],
[410,490,0,457,380,391,508,409],
[502,540,434,0,483,518,492,442],
[465,519,511,408,0,453,502,421],
[421,483,500,373,438,0,471,456],
[365,481,383,399,389,420,0,361],
[421,480,482,449,470,435,530,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,434,446,423,438,421,441],
[463,0,440,466,439,444,437,452],
[457,451,0,465,451,464,443,455],
[445,425,426,0,437,457,436,427],
[468,452,440,454,0,469,447,463],
[453,447,427,434,422,0,417,445],
[470,454,448,455,444,474,0,441],
[450,439,436,464,428,446,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,411,443,404,423,370,479],
[483,0,444,469,452,524,466,542],
[480,447,0,423,426,463,420,457],
[448,422,468,0,391,455,421,470],
[487,439,465,500,0,467,444,483],
[468,367,428,436,424,0,396,466],
[521,425,471,470,447,495,0,458],
[412,349,434,421,408,425,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,453,430,462,416,416,451],
[483,0,465,436,457,452,446,451],
[438,426,0,413,461,418,434,406],
[461,455,478,0,459,429,471,459],
[429,434,430,432,0,419,437,441],
[475,439,473,462,472,0,455,441],
[475,445,457,420,454,436,0,421],
[440,440,485,432,450,450,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,498,491,443,456,483,505],
[413,0,432,444,449,438,446,441],
[393,459,0,448,453,457,454,424],
[400,447,443,0,465,442,449,430],
[448,442,438,426,0,443,455,455],
[435,453,434,449,448,0,438,453],
[408,445,437,442,436,453,0,431],
[386,450,467,461,436,438,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,437,450,453,448,435,455],
[426,0,428,441,446,450,429,435],
[454,463,0,436,450,445,435,457],
[441,450,455,0,437,456,434,443],
[438,445,441,454,0,448,441,446],
[443,441,446,435,443,0,449,448],
[456,462,456,457,450,442,0,456],
[436,456,434,448,445,443,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,542,466,439,395,445,511],
[384,0,464,400,465,341,345,440],
[349,427,0,443,431,413,351,387],
[425,491,448,0,497,462,456,426],
[452,426,460,394,0,468,398,492],
[496,550,478,429,423,0,459,483],
[446,546,540,435,493,432,0,477],
[380,451,504,465,399,408,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,449,452,447,486,442,465],
[434,0,440,435,447,483,447,426],
[442,451,0,414,441,477,451,425],
[439,456,477,0,473,472,464,407],
[444,444,450,418,0,471,473,456],
[405,408,414,419,420,0,430,425],
[449,444,440,427,418,461,0,431],
[426,465,466,484,435,466,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,448,468,463,458,440,456],
[433,0,419,434,444,453,444,446],
[443,472,0,463,454,455,457,452],
[423,457,428,0,448,437,439,418],
[428,447,437,443,0,437,431,428],
[433,438,436,454,454,0,439,439],
[451,447,434,452,460,452,0,410],
[435,445,439,473,463,452,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,425,460,419,421,456,455],
[430,0,401,449,437,401,428,452],
[466,490,0,456,460,467,455,436],
[431,442,435,0,423,439,442,456],
[472,454,431,468,0,478,459,454],
[470,490,424,452,413,0,448,475],
[435,463,436,449,432,443,0,446],
[436,439,455,435,437,416,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,459,407,465,424,444,452],
[438,0,483,455,495,448,418,446],
[432,408,0,400,448,426,415,422],
[484,436,491,0,485,450,447,453],
[426,396,443,406,0,404,419,430],
[467,443,465,441,487,0,474,443],
[447,473,476,444,472,417,0,448],
[439,445,469,438,461,448,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,438,444,421,427,438,426],
[457,0,453,432,431,446,448,433],
[453,438,0,451,443,436,448,417],
[447,459,440,0,426,424,440,412],
[470,460,448,465,0,451,441,448],
[464,445,455,467,440,0,445,437],
[453,443,443,451,450,446,0,442],
[465,458,474,479,443,454,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,446,444,430,449,446,458],
[432,0,440,442,429,455,441,430],
[445,451,0,439,442,439,461,436],
[447,449,452,0,452,442,445,456],
[461,462,449,439,0,428,436,450],
[442,436,452,449,463,0,430,434],
[445,450,430,446,455,461,0,444],
[433,461,455,435,441,457,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,459,468,435,473,453,444],
[456,0,465,469,443,480,474,449],
[432,426,0,449,427,457,444,424],
[423,422,442,0,429,457,432,408],
[456,448,464,462,0,467,448,438],
[418,411,434,434,424,0,432,424],
[438,417,447,459,443,459,0,423],
[447,442,467,483,453,467,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,448,436,445,447,443,444],
[426,0,423,420,449,431,439,448],
[443,468,0,467,463,439,449,445],
[455,471,424,0,458,448,436,436],
[446,442,428,433,0,453,429,442],
[444,460,452,443,438,0,434,440],
[448,452,442,455,462,457,0,466],
[447,443,446,455,449,451,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,447,459,454,437,461,450],
[443,0,435,468,473,459,502,472],
[444,456,0,474,477,446,508,470],
[432,423,417,0,452,416,470,425],
[437,418,414,439,0,433,468,448],
[454,432,445,475,458,0,492,446],
[430,389,383,421,423,399,0,434],
[441,419,421,466,443,445,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,425,472,464,465,454,462],
[427,0,448,425,456,449,449,421],
[466,443,0,479,450,498,473,456],
[419,466,412,0,459,461,463,419],
[427,435,441,432,0,441,457,425],
[426,442,393,430,450,0,424,425],
[437,442,418,428,434,467,0,415],
[429,470,435,472,466,466,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,447,479,443,493,465,477],
[455,0,448,457,442,484,484,487],
[444,443,0,458,453,475,494,452],
[412,434,433,0,424,478,479,467],
[448,449,438,467,0,472,476,450],
[398,407,416,413,419,0,436,440],
[426,407,397,412,415,455,0,435],
[414,404,439,424,441,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,498,488,518,479,443,488],
[433,0,486,450,452,483,437,416],
[393,405,0,441,415,431,399,380],
[403,441,450,0,439,451,392,414],
[373,439,476,452,0,417,432,405],
[412,408,460,440,474,0,443,457],
[448,454,492,499,459,448,0,431],
[403,475,511,477,486,434,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,477,481,475,464,525,497],
[529,0,504,460,492,414,468,475],
[414,387,0,402,429,414,425,462],
[410,431,489,0,474,397,448,530],
[416,399,462,417,0,459,500,461],
[427,477,477,494,432,0,472,496],
[366,423,466,443,391,419,0,473],
[394,416,429,361,430,395,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,428,447,442,435,436,428],
[443,0,443,431,447,452,439,438],
[463,448,0,438,449,467,439,457],
[444,460,453,0,434,445,428,436],
[449,444,442,457,0,440,436,431],
[456,439,424,446,451,0,433,425],
[455,452,452,463,455,458,0,441],
[463,453,434,455,460,466,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,409,412,426,445,405,445],
[447,0,423,429,437,442,427,448],
[482,468,0,454,434,477,463,473],
[479,462,437,0,465,458,443,481],
[465,454,457,426,0,454,429,458],
[446,449,414,433,437,0,436,464],
[486,464,428,448,462,455,0,454],
[446,443,418,410,433,427,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,465,463,464,468,458,437],
[436,0,454,488,462,482,445,462],
[426,437,0,437,434,428,426,424],
[428,403,454,0,428,439,419,415],
[427,429,457,463,0,434,428,429],
[423,409,463,452,457,0,436,421],
[433,446,465,472,463,455,0,435],
[454,429,467,476,462,470,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,424,443,448,450,445,452],
[444,0,439,464,462,477,447,453],
[467,452,0,455,445,437,463,439],
[448,427,436,0,452,462,458,464],
[443,429,446,439,0,448,439,452],
[441,414,454,429,443,0,465,459],
[446,444,428,433,452,426,0,471],
[439,438,452,427,439,432,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,472,512,403,487,531,479],
[419,0,485,567,459,514,609,448],
[419,406,0,509,441,461,489,402],
[379,324,382,0,316,374,425,332],
[488,432,450,575,0,465,540,450],
[404,377,430,517,426,0,493,411],
[360,282,402,466,351,398,0,356],
[412,443,489,559,441,480,535,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,449,409,396,369,404,435],
[503,0,484,428,465,419,483,488],
[442,407,0,419,362,426,444,447],
[482,463,472,0,424,414,470,448],
[495,426,529,467,0,449,491,483],
[522,472,465,477,442,0,444,470],
[487,408,447,421,400,447,0,455],
[456,403,444,443,408,421,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,502,500,474,445,461,473],
[416,0,449,455,431,412,424,422],
[389,442,0,450,412,423,402,417],
[391,436,441,0,413,395,393,426],
[417,460,479,478,0,415,431,452],
[446,479,468,496,476,0,470,434],
[430,467,489,498,460,421,0,449],
[418,469,474,465,439,457,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,450,437,441,450,464,441],
[473,0,454,487,446,490,463,444],
[441,437,0,468,458,482,489,458],
[454,404,423,0,436,424,435,424],
[450,445,433,455,0,466,463,432],
[441,401,409,467,425,0,424,438],
[427,428,402,456,428,467,0,426],
[450,447,433,467,459,453,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,418,445,463,433,450,443],
[447,0,448,450,448,441,475,449],
[473,443,0,454,443,448,472,457],
[446,441,437,0,440,429,435,443],
[428,443,448,451,0,449,445,459],
[458,450,443,462,442,0,446,436],
[441,416,419,456,446,445,0,432],
[448,442,434,448,432,455,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,479,447,493,453,476,445],
[441,0,442,447,479,503,407,483],
[412,449,0,427,443,407,421,436],
[444,444,464,0,440,440,403,402],
[398,412,448,451,0,433,415,423],
[438,388,484,451,458,0,432,440],
[415,484,470,488,476,459,0,411],
[446,408,455,489,468,451,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,426,440,465,455,489,454],
[465,0,430,437,434,445,494,425],
[465,461,0,440,460,424,464,451],
[451,454,451,0,448,438,477,415],
[426,457,431,443,0,441,453,424],
[436,446,467,453,450,0,498,438],
[402,397,427,414,438,393,0,410],
[437,466,440,476,467,453,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,490,442,460,468,457,477],
[467,0,460,464,469,479,445,478],
[401,431,0,416,417,424,429,424],
[449,427,475,0,440,456,452,451],
[431,422,474,451,0,438,432,440],
[423,412,467,435,453,0,435,413],
[434,446,462,439,459,456,0,474],
[414,413,467,440,451,478,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,505,458,473,433,392,436],
[418,0,424,439,438,417,447,428],
[386,467,0,455,446,437,403,430],
[433,452,436,0,452,453,413,448],
[418,453,445,439,0,413,380,431],
[458,474,454,438,478,0,453,451],
[499,444,488,478,511,438,0,466],
[455,463,461,443,460,440,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,451,423,423,444,441,426],
[475,0,483,441,432,463,470,442],
[440,408,0,439,434,424,454,433],
[468,450,452,0,438,438,457,456],
[468,459,457,453,0,443,469,456],
[447,428,467,453,448,0,443,440],
[450,421,437,434,422,448,0,435],
[465,449,458,435,435,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,453,453,434,426,436,446],
[446,0,435,453,447,433,448,449],
[438,456,0,477,467,440,436,455],
[438,438,414,0,434,424,453,444],
[457,444,424,457,0,464,471,453],
[465,458,451,467,427,0,450,463],
[455,443,455,438,420,441,0,423],
[445,442,436,447,438,428,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,458,459,455,435,447,448],
[459,0,451,452,431,457,452,478],
[433,440,0,424,455,432,440,465],
[432,439,467,0,457,444,457,459],
[436,460,436,434,0,446,450,454],
[456,434,459,447,445,0,452,476],
[444,439,451,434,441,439,0,462],
[443,413,426,432,437,415,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,453,434,420,490,464,467],
[446,0,462,438,466,469,463,477],
[438,429,0,455,436,479,453,460],
[457,453,436,0,464,462,468,444],
[471,425,455,427,0,469,481,470],
[401,422,412,429,422,0,452,446],
[427,428,438,423,410,439,0,440],
[424,414,431,447,421,445,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,430,414,431,445,395,459],
[459,0,449,434,444,456,422,447],
[461,442,0,427,442,422,417,445],
[477,457,464,0,494,462,426,468],
[460,447,449,397,0,428,422,440],
[446,435,469,429,463,0,446,475],
[496,469,474,465,469,445,0,467],
[432,444,446,423,451,416,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,462,435,499,434,429,460],
[443,0,449,453,462,463,455,464],
[429,442,0,451,486,460,452,457],
[456,438,440,0,502,457,458,477],
[392,429,405,389,0,420,415,430],
[457,428,431,434,471,0,441,462],
[462,436,439,433,476,450,0,440],
[431,427,434,414,461,429,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,462,453,492,442,477],
[446,0,447,450,445,443,422,455],
[446,444,0,461,464,465,447,471],
[429,441,430,0,451,460,449,450],
[438,446,427,440,0,444,430,447],
[399,448,426,431,447,0,437,465],
[449,469,444,442,461,454,0,462],
[414,436,420,441,444,426,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,498,537,391,607,498,569],
[394,0,393,468,501,468,431,570],
[393,498,0,535,607,502,499,675],
[354,423,356,0,426,354,568,533],
[500,390,284,465,0,465,571,569],
[284,423,389,537,426,0,570,533],
[393,460,392,323,320,321,0,606],
[322,321,216,358,322,358,285,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,416,432,413,467,424,444],
[442,0,432,454,449,465,412,447],
[475,459,0,447,447,457,420,488],
[459,437,444,0,416,495,417,432],
[478,442,444,475,0,486,449,493],
[424,426,434,396,405,0,381,427],
[467,479,471,474,442,510,0,479],
[447,444,403,459,398,464,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,457,430,417,440,426,428],
[441,0,453,409,420,453,417,426],
[434,438,0,436,418,447,431,409],
[461,482,455,0,440,458,447,452],
[474,471,473,451,0,440,429,462],
[451,438,444,433,451,0,457,417],
[465,474,460,444,462,434,0,438],
[463,465,482,439,429,474,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,436,473,430,473,484,434],
[429,0,435,454,473,471,471,425],
[455,456,0,471,486,423,458,441],
[418,437,420,0,428,406,428,391],
[461,418,405,463,0,447,444,436],
[418,420,468,485,444,0,451,455],
[407,420,433,463,447,440,0,387],
[457,466,450,500,455,436,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,441,398,421,441,391,423],
[473,0,457,456,458,476,449,425],
[450,434,0,435,448,438,439,447],
[493,435,456,0,466,480,451,432],
[470,433,443,425,0,405,401,441],
[450,415,453,411,486,0,404,446],
[500,442,452,440,490,487,0,461],
[468,466,444,459,450,445,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,450,457,456,457,456,470],
[452,0,441,457,455,449,455,474],
[441,450,0,437,438,446,434,449],
[434,434,454,0,445,451,450,477],
[435,436,453,446,0,449,445,456],
[434,442,445,440,442,0,447,438],
[435,436,457,441,446,444,0,453],
[421,417,442,414,435,453,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,428,468,461,466,462,464],
[401,0,425,445,448,443,454,425],
[463,466,0,467,469,468,465,445],
[423,446,424,0,457,434,439,430],
[430,443,422,434,0,445,442,422],
[425,448,423,457,446,0,448,411],
[429,437,426,452,449,443,0,454],
[427,466,446,461,469,480,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,477,501,393,376,435,412],
[447,0,446,487,497,462,450,442],
[414,445,0,518,477,480,495,499],
[390,404,373,0,445,364,400,367],
[498,394,414,446,0,405,417,472],
[515,429,411,527,486,0,505,483],
[456,441,396,491,474,386,0,356],
[479,449,392,524,419,408,535,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,440,430,445,448,460,494],
[453,0,436,430,457,444,431,496],
[451,455,0,448,436,474,435,482],
[461,461,443,0,457,477,470,500],
[446,434,455,434,0,458,444,476],
[443,447,417,414,433,0,450,470],
[431,460,456,421,447,441,0,518],
[397,395,409,391,415,421,373,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,480,489,459,466,457,439],
[485,0,466,505,476,445,460,458],
[411,425,0,482,403,437,440,425],
[402,386,409,0,402,394,424,417],
[432,415,488,489,0,463,451,467],
[425,446,454,497,428,0,448,456],
[434,431,451,467,440,443,0,433],
[452,433,466,474,424,435,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,444,467,481,461,449,452],
[428,0,449,455,452,464,452,436],
[447,442,0,444,441,439,452,438],
[424,436,447,0,463,433,440,431],
[410,439,450,428,0,435,428,446],
[430,427,452,458,456,0,445,451],
[442,439,439,451,463,446,0,432],
[439,455,453,460,445,440,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,446,439,458,441,450,450],
[433,0,438,437,457,431,461,468],
[445,453,0,451,460,444,440,458],
[452,454,440,0,456,447,453,450],
[433,434,431,435,0,423,433,446],
[450,460,447,444,468,0,464,458],
[441,430,451,438,458,427,0,443],
[441,423,433,441,445,433,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,428,446,437,477,432,438],
[474,0,453,464,441,489,477,465],
[463,438,0,446,444,468,433,444],
[445,427,445,0,451,464,434,448],
[454,450,447,440,0,467,421,435],
[414,402,423,427,424,0,453,407],
[459,414,458,457,470,438,0,429],
[453,426,447,443,456,484,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,421,430,440,518,418,448],
[457,0,428,423,445,500,462,501],
[470,463,0,451,472,511,375,483],
[461,468,440,0,457,537,443,488],
[451,446,419,434,0,501,433,407],
[373,391,380,354,390,0,396,418],
[473,429,516,448,458,495,0,493],
[443,390,408,403,484,473,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,460,454,459,446,455,451],
[447,0,464,442,427,431,438,435],
[431,427,0,460,419,414,439,423],
[437,449,431,0,445,452,434,412],
[432,464,472,446,0,444,460,448],
[445,460,477,439,447,0,444,423],
[436,453,452,457,431,447,0,448],
[440,456,468,479,443,468,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,439,436,448,450,441,484],
[458,0,446,429,462,436,430,456],
[452,445,0,447,462,463,453,453],
[455,462,444,0,466,432,447,482],
[443,429,429,425,0,436,416,444],
[441,455,428,459,455,0,433,442],
[450,461,438,444,475,458,0,455],
[407,435,438,409,447,449,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,469,465,447,426,445,433],
[389,0,391,426,385,403,377,395],
[422,500,0,443,446,487,419,392],
[426,465,448,0,395,418,433,422],
[444,506,445,496,0,475,466,453],
[465,488,404,473,416,0,430,411],
[446,514,472,458,425,461,0,433],
[458,496,499,469,438,480,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,442,448,458,467,457,479],
[425,0,433,425,435,468,440,434],
[449,458,0,423,440,443,441,440],
[443,466,468,0,444,483,467,437],
[433,456,451,447,0,442,491,442],
[424,423,448,408,449,0,446,420],
[434,451,450,424,400,445,0,444],
[412,457,451,454,449,471,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,415,450,456,429,471,430],
[433,0,439,443,445,448,451,447],
[476,452,0,468,464,436,472,465],
[441,448,423,0,453,417,452,449],
[435,446,427,438,0,441,453,457],
[462,443,455,474,450,0,458,467],
[420,440,419,439,438,433,0,458],
[461,444,426,442,434,424,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,448,463,470,469,455,440],
[412,0,427,448,445,455,419,431],
[443,464,0,453,478,467,456,446],
[428,443,438,0,446,428,435,433],
[421,446,413,445,0,439,415,420],
[422,436,424,463,452,0,434,467],
[436,472,435,456,476,457,0,438],
[451,460,445,458,471,424,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,608,351,433,434,436,376,406],
[283,0,434,319,345,375,261,341],
[540,457,0,488,403,458,485,429],
[458,572,403,0,458,488,486,430],
[457,546,488,433,0,546,547,436],
[455,516,433,403,345,0,343,403],
[515,630,406,405,344,548,0,460],
[485,550,462,461,455,488,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,444,452,406,455,476,415],
[453,0,441,461,471,436,469,456],
[447,450,0,451,441,437,476,437],
[439,430,440,0,440,431,464,423],
[485,420,450,451,0,448,476,433],
[436,455,454,460,443,0,474,449],
[415,422,415,427,415,417,0,392],
[476,435,454,468,458,442,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,463,443,469,473,475,467],
[436,0,466,452,440,453,446,445],
[428,425,0,426,442,439,443,433],
[448,439,465,0,446,464,459,441],
[422,451,449,445,0,446,449,425],
[418,438,452,427,445,0,436,424],
[416,445,448,432,442,455,0,446],
[424,446,458,450,466,467,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,452,448,440,442,446,448],
[455,0,433,440,442,421,417,448],
[439,458,0,413,455,451,444,441],
[443,451,478,0,471,462,459,462],
[451,449,436,420,0,460,427,452],
[449,470,440,429,431,0,414,432],
[445,474,447,432,464,477,0,440],
[443,443,450,429,439,459,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,438,471,492,460,456,462],
[441,0,456,443,481,482,419,510],
[453,435,0,454,438,406,403,458],
[420,448,437,0,457,441,372,449],
[399,410,453,434,0,410,424,435],
[431,409,485,450,481,0,422,486],
[435,472,488,519,467,469,0,492],
[429,381,433,442,456,405,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,441,440,453,452,428,435],
[473,0,455,429,452,452,447,425],
[450,436,0,427,463,452,411,449],
[451,462,464,0,432,473,426,471],
[438,439,428,459,0,456,430,467],
[439,439,439,418,435,0,415,469],
[463,444,480,465,461,476,0,456],
[456,466,442,420,424,422,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,465,442,435,430,416,411],
[442,0,446,445,459,455,438,424],
[426,445,0,448,441,424,438,448],
[449,446,443,0,452,458,418,405],
[456,432,450,439,0,423,426,428],
[461,436,467,433,468,0,455,423],
[475,453,453,473,465,436,0,416],
[480,467,443,486,463,468,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,480,479,455,416,457,470],
[441,0,420,455,436,429,473,454],
[411,471,0,474,430,468,455,469],
[412,436,417,0,434,424,428,413],
[436,455,461,457,0,469,484,488],
[475,462,423,467,422,0,464,487],
[434,418,436,463,407,427,0,432],
[421,437,422,478,403,404,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,472,437,439,434,441,464],
[442,0,438,442,417,421,407,427],
[419,453,0,458,444,454,416,449],
[454,449,433,0,426,411,425,416],
[452,474,447,465,0,467,411,422],
[457,470,437,480,424,0,449,449],
[450,484,475,466,480,442,0,468],
[427,464,442,475,469,442,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,452,466,471,458,443,460],
[419,0,450,463,442,455,439,449],
[439,441,0,447,450,456,449,453],
[425,428,444,0,434,429,425,440],
[420,449,441,457,0,459,455,450],
[433,436,435,462,432,0,428,438],
[448,452,442,466,436,463,0,464],
[431,442,438,451,441,453,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,455,426,447,433,447,420],
[404,0,411,428,425,437,408,407],
[436,480,0,421,437,452,443,439],
[465,463,470,0,454,430,448,437],
[444,466,454,437,0,461,456,452],
[458,454,439,461,430,0,436,421],
[444,483,448,443,435,455,0,439],
[471,484,452,454,439,470,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,271,616,204,344,483,411],
[483,0,481,551,413,549,550,343],
[620,410,0,618,413,551,689,479],
[275,340,273,0,409,275,480,273],
[687,478,478,482,0,618,620,411],
[547,342,340,616,273,0,550,273],
[408,341,202,411,271,341,0,271],
[480,548,412,618,480,618,620,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,448,439,450,459,429,426],
[439,0,436,446,438,451,448,437],
[443,455,0,462,445,437,447,450],
[452,445,429,0,443,468,438,458],
[441,453,446,448,0,456,452,449],
[432,440,454,423,435,0,443,434],
[462,443,444,453,439,448,0,450],
[465,454,441,433,442,457,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,436,415,445,438,408,434],
[472,0,441,459,496,449,462,466],
[455,450,0,422,433,423,420,458],
[476,432,469,0,460,455,435,490],
[446,395,458,431,0,428,454,460],
[453,442,468,436,463,0,432,460],
[483,429,471,456,437,459,0,465],
[457,425,433,401,431,431,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,294,568,443,447,445,444,382],
[597,0,628,506,538,507,445,505],
[323,263,0,473,446,507,296,292],
[448,385,418,0,443,510,446,412],
[444,353,445,448,0,565,448,386],
[446,384,384,381,326,0,416,323],
[447,446,595,445,443,475,0,445],
[509,386,599,479,505,568,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,446,462,441,393,436,474],
[466,0,435,454,479,436,472,486],
[445,456,0,466,456,453,462,482],
[429,437,425,0,463,433,461,472],
[450,412,435,428,0,428,435,472],
[498,455,438,458,463,0,455,483],
[455,419,429,430,456,436,0,471],
[417,405,409,419,419,408,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,444,437,442,466,422,415],
[424,0,402,423,475,454,424,418],
[447,489,0,436,512,479,447,469],
[454,468,455,0,467,449,421,461],
[449,416,379,424,0,444,439,408],
[425,437,412,442,447,0,448,433],
[469,467,444,470,452,443,0,455],
[476,473,422,430,483,458,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,454,446,447,468,449,412],
[465,0,457,438,444,432,446,421],
[437,434,0,440,424,421,433,409],
[445,453,451,0,443,437,410,407],
[444,447,467,448,0,430,436,436],
[423,459,470,454,461,0,443,453],
[442,445,458,481,455,448,0,430],
[479,470,482,484,455,438,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,517,567,407,550,549,517,548],
[374,0,470,373,424,422,437,516],
[324,421,0,420,468,407,467,467],
[484,518,471,0,393,485,498,549],
[341,467,423,498,0,454,467,563],
[342,469,484,406,437,0,453,434],
[374,454,424,393,424,438,0,487],
[343,375,424,342,328,457,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,455,461,450,456,449,442],
[466,0,415,452,450,483,464,435],
[436,476,0,452,459,456,435,478],
[430,439,439,0,454,455,450,449],
[441,441,432,437,0,465,451,428],
[435,408,435,436,426,0,441,423],
[442,427,456,441,440,450,0,429],
[449,456,413,442,463,468,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,439,442,469,427,394,449],
[450,0,427,430,547,460,478,466],
[452,464,0,495,514,506,433,417],
[449,461,396,0,500,472,467,413],
[422,344,377,391,0,410,445,432],
[464,431,385,419,481,0,429,424],
[497,413,458,424,446,462,0,411],
[442,425,474,478,459,467,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,398,349,377,410,434,350],
[482,0,462,414,410,445,445,416],
[493,429,0,410,386,399,412,374],
[542,477,481,0,465,500,442,448],
[514,481,505,426,0,481,523,423],
[481,446,492,391,410,0,408,430],
[457,446,479,449,368,483,0,346],
[541,475,517,443,468,461,545,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,453,431,442,418,450,440],
[471,0,457,449,459,429,498,464],
[438,434,0,426,441,415,444,434],
[460,442,465,0,481,451,479,461],
[449,432,450,410,0,405,446,446],
[473,462,476,440,486,0,510,470],
[441,393,447,412,445,381,0,427],
[451,427,457,430,445,421,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,413,442,447,419,448,446],
[443,0,451,427,443,422,443,426],
[478,440,0,457,461,459,474,466],
[449,464,434,0,463,443,451,456],
[444,448,430,428,0,442,441,444],
[472,469,432,448,449,0,474,474],
[443,448,417,440,450,417,0,419],
[445,465,425,435,447,417,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,433,462,444,435,464,455],
[442,0,455,469,458,464,459,431],
[458,436,0,477,486,465,475,449],
[429,422,414,0,437,420,455,435],
[447,433,405,454,0,429,447,406],
[456,427,426,471,462,0,453,435],
[427,432,416,436,444,438,0,412],
[436,460,442,456,485,456,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,445,451,446,414,459,466],
[461,0,503,491,512,464,438,451],
[446,388,0,475,484,404,427,414],
[440,400,416,0,455,426,484,366],
[445,379,407,436,0,396,434,367],
[477,427,487,465,495,0,466,405],
[432,453,464,407,457,425,0,412],
[425,440,477,525,524,486,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,352,387,467,407,408,412,443],
[539,0,439,521,518,490,480,507],
[504,452,0,526,403,461,395,421],
[424,370,365,0,401,402,464,481],
[484,373,488,490,0,435,467,512],
[483,401,430,489,456,0,405,418],
[479,411,496,427,424,486,0,397],
[448,384,470,410,379,473,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,455,485,486,436,432,438],
[461,0,485,454,489,445,476,478],
[436,406,0,449,468,424,431,449],
[406,437,442,0,449,447,417,465],
[405,402,423,442,0,421,416,433],
[455,446,467,444,470,0,456,481],
[459,415,460,474,475,435,0,482],
[453,413,442,426,458,410,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,419,441,413,421,429,433],
[469,0,397,469,433,433,469,416],
[472,494,0,461,450,453,484,445],
[450,422,430,0,436,432,464,436],
[478,458,441,455,0,455,480,462],
[470,458,438,459,436,0,458,440],
[462,422,407,427,411,433,0,416],
[458,475,446,455,429,451,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,499,511,445,501,485,501],
[434,0,431,474,461,478,497,465],
[392,460,0,460,409,452,432,459],
[380,417,431,0,454,441,442,475],
[446,430,482,437,0,463,459,505],
[390,413,439,450,428,0,466,486],
[406,394,459,449,432,425,0,458],
[390,426,432,416,386,405,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,458,445,474,446,513,457],
[383,0,479,458,455,405,442,426],
[433,412,0,449,474,417,487,460],
[446,433,442,0,459,413,501,457],
[417,436,417,432,0,422,484,431],
[445,486,474,478,469,0,573,517],
[378,449,404,390,407,318,0,414],
[434,465,431,434,460,374,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,374,420,409,453,410,376],
[455,0,446,480,469,430,479,436],
[517,445,0,505,467,460,426,403],
[471,411,386,0,409,404,424,395],
[482,422,424,482,0,384,432,409],
[438,461,431,487,507,0,419,446],
[481,412,465,467,459,472,0,430],
[515,455,488,496,482,445,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,455,456,448,452,427,480],
[465,0,457,468,445,449,474,488],
[436,434,0,454,453,456,452,481],
[435,423,437,0,434,431,438,468],
[443,446,438,457,0,456,444,485],
[439,442,435,460,435,0,418,469],
[464,417,439,453,447,473,0,476],
[411,403,410,423,406,422,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,477,419,446,452,460,448],
[438,0,452,412,432,424,437,419],
[414,439,0,415,408,420,422,415],
[472,479,476,0,461,461,471,440],
[445,459,483,430,0,447,438,453],
[439,467,471,430,444,0,442,462],
[431,454,469,420,453,449,0,462],
[443,472,476,451,438,429,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,466,482,432,448,454,457],
[447,0,492,458,432,440,438,457],
[425,399,0,417,410,400,390,410],
[409,433,474,0,431,426,429,450],
[459,459,481,460,0,435,451,462],
[443,451,491,465,456,0,420,453],
[437,453,501,462,440,471,0,469],
[434,434,481,441,429,438,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,450,442,435,468,439,432],
[457,0,454,464,467,454,443,462],
[441,437,0,438,463,463,439,458],
[449,427,453,0,457,458,437,436],
[456,424,428,434,0,439,433,422],
[423,437,428,433,452,0,424,421],
[452,448,452,454,458,467,0,435],
[459,429,433,455,469,470,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,468,392,451,417,494,435],
[473,0,517,470,466,471,539,426],
[423,374,0,383,424,405,428,386],
[499,421,508,0,471,447,519,450],
[440,425,467,420,0,403,458,393],
[474,420,486,444,488,0,481,433],
[397,352,463,372,433,410,0,373],
[456,465,505,441,498,458,518,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,432,457,450,460,444,429],
[454,0,463,476,468,479,436,442],
[459,428,0,471,449,471,443,453],
[434,415,420,0,441,459,431,444],
[441,423,442,450,0,439,432,434],
[431,412,420,432,452,0,425,425],
[447,455,448,460,459,466,0,440],
[462,449,438,447,457,466,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,460,462,433,463,444,447],
[441,0,437,439,450,445,448,454],
[431,454,0,434,439,462,453,440],
[429,452,457,0,442,468,448,444],
[458,441,452,449,0,464,444,461],
[428,446,429,423,427,0,449,444],
[447,443,438,443,447,442,0,437],
[444,437,451,447,430,447,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,419,424,434,446,434,437],
[441,0,442,428,467,442,468,456],
[472,449,0,448,439,438,445,466],
[467,463,443,0,455,443,468,452],
[457,424,452,436,0,424,453,431],
[445,449,453,448,467,0,446,458],
[457,423,446,423,438,445,0,446],
[454,435,425,439,460,433,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,439,472,493,454,478,471],
[423,0,411,453,454,429,450,426],
[452,480,0,455,462,438,469,465],
[419,438,436,0,447,421,439,425],
[398,437,429,444,0,440,422,417],
[437,462,453,470,451,0,442,424],
[413,441,422,452,469,449,0,426],
[420,465,426,466,474,467,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,434,469,479,462,440,497],
[430,0,476,412,446,446,438,509],
[457,415,0,419,440,426,434,491],
[422,479,472,0,462,452,448,497],
[412,445,451,429,0,418,434,454],
[429,445,465,439,473,0,410,471],
[451,453,457,443,457,481,0,480],
[394,382,400,394,437,420,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,518,456,499,386,416,462],
[469,0,628,471,537,521,422,460],
[373,263,0,356,361,298,329,325],
[435,420,535,0,482,414,398,440],
[392,354,530,409,0,427,391,393],
[505,370,593,477,464,0,473,487],
[475,469,562,493,500,418,0,493],
[429,431,566,451,498,404,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,421,415,458,427,436,438],
[458,0,437,434,466,438,455,454],
[470,454,0,422,478,445,439,459],
[476,457,469,0,486,452,437,451],
[433,425,413,405,0,436,407,460],
[464,453,446,439,455,0,465,458],
[455,436,452,454,484,426,0,461],
[453,437,432,440,431,433,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,451,463,428,468,444,433],
[437,0,443,455,438,466,453,440],
[440,448,0,443,453,464,440,449],
[428,436,448,0,439,442,430,421],
[463,453,438,452,0,455,454,444],
[423,425,427,449,436,0,420,430],
[447,438,451,461,437,471,0,431],
[458,451,442,470,447,461,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,441,431,442,447,433,448],
[445,0,413,400,420,420,432,447],
[450,478,0,445,440,436,451,460],
[460,491,446,0,447,432,435,448],
[449,471,451,444,0,441,447,437],
[444,471,455,459,450,0,443,450],
[458,459,440,456,444,448,0,454],
[443,444,431,443,454,441,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,431,460,443,445,436,455],
[470,0,449,472,473,455,442,491],
[460,442,0,450,442,449,473,504],
[431,419,441,0,483,464,451,485],
[448,418,449,408,0,447,413,451],
[446,436,442,427,444,0,453,489],
[455,449,418,440,478,438,0,485],
[436,400,387,406,440,402,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,399,398,452,465,421,400],
[494,0,448,421,438,474,429,446],
[492,443,0,455,464,517,459,430],
[493,470,436,0,479,474,480,436],
[439,453,427,412,0,429,401,413],
[426,417,374,417,462,0,398,392],
[470,462,432,411,490,493,0,434],
[491,445,461,455,478,499,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,483,459,490,444,458,464],
[446,0,470,422,450,429,447,438],
[408,421,0,438,453,438,464,449],
[432,469,453,0,482,448,449,452],
[401,441,438,409,0,415,457,432],
[447,462,453,443,476,0,469,458],
[433,444,427,442,434,422,0,433],
[427,453,442,439,459,433,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,480,449,451,448,450,444],
[421,0,450,462,444,438,446,419],
[411,441,0,442,444,437,423,407],
[442,429,449,0,450,457,439,405],
[440,447,447,441,0,425,408,405],
[443,453,454,434,466,0,444,422],
[441,445,468,452,483,447,0,451],
[447,472,484,486,486,469,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,417,442,425,413,438,440],
[456,0,440,456,429,408,435,417],
[474,451,0,449,423,414,447,441],
[449,435,442,0,420,417,439,452],
[466,462,468,471,0,422,437,437],
[478,483,477,474,469,0,454,437],
[453,456,444,452,454,437,0,439],
[451,474,450,439,454,454,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,441,481,507,491,475,492],
[414,0,455,455,484,466,456,456],
[450,436,0,451,467,482,436,440],
[410,436,440,0,474,458,455,437],
[384,407,424,417,0,460,440,447],
[400,425,409,433,431,0,432,417],
[416,435,455,436,451,459,0,432],
[399,435,451,454,444,474,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,447,461,463,441,429,441],
[450,0,453,448,470,451,465,439],
[444,438,0,450,462,431,432,429],
[430,443,441,0,443,447,445,427],
[428,421,429,448,0,422,434,447],
[450,440,460,444,469,0,460,436],
[462,426,459,446,457,431,0,450],
[450,452,462,464,444,455,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,442,448,416,427,449,474],
[428,0,430,450,463,437,454,439],
[449,461,0,479,428,416,430,451],
[443,441,412,0,420,423,434,454],
[475,428,463,471,0,433,442,466],
[464,454,475,468,458,0,444,456],
[442,437,461,457,449,447,0,463],
[417,452,440,437,425,435,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,397,428,424,436,420,423],
[465,0,450,455,469,453,440,449],
[494,441,0,448,453,468,458,438],
[463,436,443,0,441,441,418,429],
[467,422,438,450,0,436,426,431],
[455,438,423,450,455,0,447,442],
[471,451,433,473,465,444,0,445],
[468,442,453,462,460,449,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,423,453,412,455,418,443],
[448,0,452,514,424,399,481,494],
[468,439,0,531,510,440,486,515],
[438,377,360,0,401,401,379,440],
[479,467,381,490,0,466,484,400],
[436,492,451,490,425,0,483,513],
[473,410,405,512,407,408,0,493],
[448,397,376,451,491,378,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,446,440,406,398,483,456],
[483,0,478,429,452,457,529,468],
[445,413,0,429,416,409,459,438],
[451,462,462,0,439,438,495,468],
[485,439,475,452,0,441,485,443],
[493,434,482,453,450,0,500,428],
[408,362,432,396,406,391,0,397],
[435,423,453,423,448,463,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,437,416,421,407,444,441],
[472,0,441,437,430,448,444,459],
[454,450,0,421,445,460,469,458],
[475,454,470,0,457,446,458,443],
[470,461,446,434,0,471,457,478],
[484,443,431,445,420,0,453,465],
[447,447,422,433,434,438,0,438],
[450,432,433,448,413,426,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,386,415,449,420,442,389],
[451,0,453,405,482,462,451,427],
[505,438,0,436,458,453,431,453],
[476,486,455,0,441,449,461,422],
[442,409,433,450,0,423,421,425],
[471,429,438,442,468,0,446,396],
[449,440,460,430,470,445,0,426],
[502,464,438,469,466,495,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,376,403,469,409,361,464],
[425,0,378,365,368,444,388,405],
[515,513,0,460,425,410,450,481],
[488,526,431,0,478,420,492,462],
[422,523,466,413,0,422,445,468],
[482,447,481,471,469,0,471,445],
[530,503,441,399,446,420,0,452],
[427,486,410,429,423,446,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,438,450,448,456,388,403],
[473,0,432,459,454,496,451,439],
[453,459,0,444,462,453,451,432],
[441,432,447,0,453,468,423,440],
[443,437,429,438,0,438,424,412],
[435,395,438,423,453,0,417,421],
[503,440,440,468,467,474,0,458],
[488,452,459,451,479,470,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,446,429,474,433,441,493],
[467,0,442,451,515,450,443,493],
[445,449,0,461,459,454,430,464],
[462,440,430,0,450,446,441,500],
[417,376,432,441,0,413,427,450],
[458,441,437,445,478,0,484,490],
[450,448,461,450,464,407,0,469],
[398,398,427,391,441,401,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,443,449,454,441,462,459],
[437,0,459,445,443,438,434,432],
[448,432,0,440,440,445,439,440],
[442,446,451,0,456,449,434,443],
[437,448,451,435,0,441,435,455],
[450,453,446,442,450,0,441,428],
[429,457,452,457,456,450,0,432],
[432,459,451,448,436,463,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,477,452,424,457,469,466],
[497,0,493,498,439,466,496,476],
[414,398,0,442,427,416,450,442],
[439,393,449,0,398,446,435,471],
[467,452,464,493,0,430,468,511],
[434,425,475,445,461,0,496,439],
[422,395,441,456,423,395,0,491],
[425,415,449,420,380,452,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,347,410,487,346,362,348,467],
[544,0,469,607,429,463,446,508],
[481,422,0,564,567,480,424,526],
[404,284,327,0,366,463,383,342],
[545,462,324,525,0,380,405,445],
[529,428,411,428,511,0,346,386],
[543,445,467,508,486,545,0,545],
[424,383,365,549,446,505,346,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,453,439,458,450,466,437],
[461,0,462,449,442,460,483,466],
[438,429,0,430,447,446,458,440],
[452,442,461,0,449,457,487,454],
[433,449,444,442,0,442,450,450],
[441,431,445,434,449,0,479,455],
[425,408,433,404,441,412,0,423],
[454,425,451,437,441,436,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,450,435,446,454,449,452],
[430,0,453,455,420,444,432,460],
[441,438,0,443,451,456,436,466],
[456,436,448,0,439,451,432,447],
[445,471,440,452,0,462,418,437],
[437,447,435,440,429,0,432,431],
[442,459,455,459,473,459,0,455],
[439,431,425,444,454,460,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,452,471,445,452,425,449],
[464,0,451,465,445,438,434,468],
[439,440,0,467,447,420,419,468],
[420,426,424,0,437,428,403,415],
[446,446,444,454,0,416,433,456],
[439,453,471,463,475,0,454,445],
[466,457,472,488,458,437,0,487],
[442,423,423,476,435,446,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,457,571,513,423,444,496],
[392,0,403,459,501,450,418,471],
[434,488,0,546,583,489,474,526],
[320,432,345,0,467,429,400,395],
[378,390,308,424,0,435,476,452],
[468,441,402,462,456,0,531,565],
[447,473,417,491,415,360,0,524],
[395,420,365,496,439,326,367,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,498,457,462,445,440,459],
[424,0,466,451,462,452,436,458],
[393,425,0,415,430,405,425,424],
[434,440,476,0,463,427,462,457],
[429,429,461,428,0,436,427,412],
[446,439,486,464,455,0,434,432],
[451,455,466,429,464,457,0,442],
[432,433,467,434,479,459,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,430,429,452,427,442,455],
[417,0,426,426,441,414,430,446],
[461,465,0,449,454,454,442,460],
[462,465,442,0,420,407,448,433],
[439,450,437,471,0,430,431,465],
[464,477,437,484,461,0,479,466],
[449,461,449,443,460,412,0,477],
[436,445,431,458,426,425,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,450,448,426,441,445,452],
[464,0,470,437,420,464,453,460],
[441,421,0,449,421,454,427,414],
[443,454,442,0,416,465,466,441],
[465,471,470,475,0,440,444,460],
[450,427,437,426,451,0,453,435],
[446,438,464,425,447,438,0,447],
[439,431,477,450,431,456,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,513,471,484,431,473,453,428],
[378,0,448,439,450,444,419,404],
[420,443,0,458,449,476,453,488],
[407,452,433,0,453,472,444,465],
[460,441,442,438,0,484,425,450],
[418,447,415,419,407,0,387,431],
[438,472,438,447,466,504,0,449],
[463,487,403,426,441,460,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,497,435,468,455,438,419],
[446,0,452,432,456,434,421,450],
[394,439,0,408,472,408,395,437],
[456,459,483,0,476,444,431,442],
[423,435,419,415,0,408,401,396],
[436,457,483,447,483,0,451,450],
[453,470,496,460,490,440,0,504],
[472,441,454,449,495,441,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,439,438,454,448,463,451],
[441,0,428,439,424,420,431,437],
[452,463,0,453,458,443,448,452],
[453,452,438,0,444,434,437,438],
[437,467,433,447,0,442,449,440],
[443,471,448,457,449,0,444,449],
[428,460,443,454,442,447,0,449],
[440,454,439,453,451,442,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,444,442,438,478,470,466],
[446,0,422,446,434,475,455,450],
[447,469,0,440,456,473,474,458],
[449,445,451,0,448,465,455,455],
[453,457,435,443,0,466,456,440],
[413,416,418,426,425,0,431,431],
[421,436,417,436,435,460,0,453],
[425,441,433,436,451,460,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,419,444,336,441,421,391],
[392,0,522,418,494,548,423,446],
[472,369,0,448,337,389,370,340],
[447,473,443,0,364,492,369,470],
[555,397,554,527,0,523,504,576],
[450,343,502,399,368,0,478,445],
[470,468,521,522,387,413,0,520],
[500,445,551,421,315,446,371,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,470,446,430,460,439,462],
[449,0,494,451,427,446,453,438],
[421,397,0,401,416,418,429,406],
[445,440,490,0,434,440,450,450],
[461,464,475,457,0,444,441,460],
[431,445,473,451,447,0,448,440],
[452,438,462,441,450,443,0,441],
[429,453,485,441,431,451,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,456,411,442,439,446,432],
[437,0,425,441,430,407,422,417],
[435,466,0,456,469,438,426,446],
[480,450,435,0,437,408,416,414],
[449,461,422,454,0,426,430,419],
[452,484,453,483,465,0,433,440],
[445,469,465,475,461,458,0,456],
[459,474,445,477,472,451,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,457,469,463,462,431,418],
[456,0,415,443,399,414,430,413],
[434,476,0,479,439,443,462,455],
[422,448,412,0,421,446,414,432],
[428,492,452,470,0,442,459,456],
[429,477,448,445,449,0,452,439],
[460,461,429,477,432,439,0,435],
[473,478,436,459,435,452,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,397,442,460,389,456,498],
[418,0,353,406,382,395,460,455],
[494,538,0,491,438,493,510,528],
[449,485,400,0,405,361,493,545],
[431,509,453,486,0,432,555,451],
[502,496,398,530,459,0,448,495],
[435,431,381,398,336,443,0,466],
[393,436,363,346,440,396,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,483,473,436,450,455,438],
[439,0,469,489,450,442,465,462],
[408,422,0,434,414,402,410,422],
[418,402,457,0,419,415,441,415],
[455,441,477,472,0,473,466,453],
[441,449,489,476,418,0,448,442],
[436,426,481,450,425,443,0,432],
[453,429,469,476,438,449,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,513,384,497,428,363,396],
[429,0,505,420,482,474,403,382],
[378,386,0,411,464,452,375,364],
[507,471,480,0,493,486,464,385],
[394,409,427,398,0,465,348,396],
[463,417,439,405,426,0,337,394],
[528,488,516,427,543,554,0,464],
[495,509,527,506,495,497,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,559,467,351,431,449,521,504],
[332,0,447,414,470,297,373,370],
[424,444,0,410,426,411,446,407],
[540,477,481,0,522,485,424,479],
[460,421,465,369,0,332,480,424],
[442,594,480,406,559,0,499,456],
[370,518,445,467,411,392,0,384],
[387,521,484,412,467,435,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,435,415,429,437,429,423],
[477,0,455,443,443,457,476,481],
[456,436,0,414,418,446,434,422],
[476,448,477,0,428,476,455,454],
[462,448,473,463,0,470,481,445],
[454,434,445,415,421,0,445,446],
[462,415,457,436,410,446,0,421],
[468,410,469,437,446,445,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,466,454,432,444,435,442],
[454,0,449,438,446,438,452,462],
[425,442,0,431,455,433,446,442],
[437,453,460,0,463,432,426,441],
[459,445,436,428,0,432,441,438],
[447,453,458,459,459,0,441,454],
[456,439,445,465,450,450,0,468],
[449,429,449,450,453,437,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,463,448,472,453,475,436],
[427,0,456,436,473,469,456,449],
[428,435,0,440,471,443,483,421],
[443,455,451,0,451,465,462,425],
[419,418,420,440,0,448,424,430],
[438,422,448,426,443,0,437,432],
[416,435,408,429,467,454,0,425],
[455,442,470,466,461,459,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,462,448,366,430,398,406],
[480,0,504,518,426,517,461,425],
[429,387,0,454,335,403,424,420],
[443,373,437,0,365,422,376,445],
[525,465,556,526,0,493,427,503],
[461,374,488,469,398,0,385,403],
[493,430,467,515,464,506,0,442],
[485,466,471,446,388,488,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,477,462,433,458,487,461],
[409,0,479,462,459,462,498,464],
[414,412,0,464,421,387,467,411],
[429,429,427,0,395,446,443,438],
[458,432,470,496,0,404,491,456],
[433,429,504,445,487,0,506,449],
[404,393,424,448,400,385,0,453],
[430,427,480,453,435,442,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,433,434,443,437,463,426],
[454,0,442,437,424,457,443,446],
[458,449,0,457,463,444,482,440],
[457,454,434,0,438,451,481,430],
[448,467,428,453,0,451,469,442],
[454,434,447,440,440,0,450,430],
[428,448,409,410,422,441,0,435],
[465,445,451,461,449,461,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,469,461,441,447,424,449],
[454,0,514,505,466,455,494,444],
[422,377,0,426,413,421,401,415],
[430,386,465,0,411,457,401,412],
[450,425,478,480,0,433,438,415],
[444,436,470,434,458,0,458,465],
[467,397,490,490,453,433,0,420],
[442,447,476,479,476,426,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,431,438,436,441,417,424],
[467,0,463,460,416,470,446,456],
[460,428,0,459,407,440,427,457],
[453,431,432,0,451,454,439,454],
[455,475,484,440,0,475,425,445],
[450,421,451,437,416,0,428,427],
[474,445,464,452,466,463,0,456],
[467,435,434,437,446,464,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,465,486,427,434,460,445],
[434,0,439,450,409,442,461,465],
[426,452,0,416,447,441,435,448],
[405,441,475,0,425,433,449,431],
[464,482,444,466,0,477,466,444],
[457,449,450,458,414,0,454,433],
[431,430,456,442,425,437,0,439],
[446,426,443,460,447,458,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,443,439,462,444,461,451],
[443,0,450,462,455,449,447,460],
[448,441,0,449,446,438,458,445],
[452,429,442,0,452,425,464,451],
[429,436,445,439,0,443,445,427],
[447,442,453,466,448,0,441,468],
[430,444,433,427,446,450,0,451],
[440,431,446,440,464,423,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,444,449,453,431,429],
[441,0,429,430,432,441,427,438],
[450,462,0,454,435,474,431,453],
[447,461,437,0,444,453,418,441],
[442,459,456,447,0,447,444,450],
[438,450,417,438,444,0,442,425],
[460,464,460,473,447,449,0,436],
[462,453,438,450,441,466,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,465,439,413,439,432,444],
[406,0,431,423,411,434,429,391],
[426,460,0,420,410,396,413,402],
[452,468,471,0,452,450,452,445],
[478,480,481,439,0,458,457,471],
[452,457,495,441,433,0,436,456],
[459,462,478,439,434,455,0,448],
[447,500,489,446,420,435,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,439,456,466,454,476,460],
[425,0,426,417,445,421,453,434],
[452,465,0,439,472,443,475,448],
[435,474,452,0,462,432,477,456],
[425,446,419,429,0,419,442,429],
[437,470,448,459,472,0,457,467],
[415,438,416,414,449,434,0,428],
[431,457,443,435,462,424,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,447,448,435,447,450,436],
[443,0,417,450,425,433,436,440],
[444,474,0,455,454,450,457,452],
[443,441,436,0,423,447,448,438],
[456,466,437,468,0,442,448,440],
[444,458,441,444,449,0,442,442],
[441,455,434,443,443,449,0,444],
[455,451,439,453,451,449,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,474,486,424,451,454,430],
[382,0,398,392,412,451,415,401],
[417,493,0,452,425,465,466,428],
[405,499,439,0,448,488,451,451],
[467,479,466,443,0,455,474,423],
[440,440,426,403,436,0,408,432],
[437,476,425,440,417,483,0,450],
[461,490,463,440,468,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,436,444,421,476,452,454],
[406,0,544,476,477,519,472,468],
[455,347,0,389,509,494,462,419],
[447,415,502,0,466,532,468,480],
[470,414,382,425,0,435,451,443],
[415,372,397,359,456,0,431,468],
[439,419,429,423,440,460,0,448],
[437,423,472,411,448,423,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,446,445,436,438,403,440],
[459,0,426,443,476,460,420,447],
[445,465,0,491,471,467,415,466],
[446,448,400,0,409,423,412,426],
[455,415,420,482,0,432,441,425],
[453,431,424,468,459,0,451,464],
[488,471,476,479,450,440,0,465],
[451,444,425,465,466,427,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,489,454,447,429,515,442],
[441,0,482,421,449,429,497,458],
[402,409,0,385,457,399,474,398],
[437,470,506,0,420,433,462,440],
[444,442,434,471,0,446,497,486],
[462,462,492,458,445,0,528,478],
[376,394,417,429,394,363,0,411],
[449,433,493,451,405,413,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,472,459,450,458,445,447],
[449,0,456,468,470,445,454,469],
[419,435,0,453,432,444,430,438],
[432,423,438,0,440,434,433,442],
[441,421,459,451,0,422,439,451],
[433,446,447,457,469,0,440,456],
[446,437,461,458,452,451,0,469],
[444,422,453,449,440,435,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,440,451,428,386,444,436],
[436,0,423,442,419,464,446,473],
[451,468,0,479,448,417,465,477],
[440,449,412,0,466,437,446,467],
[463,472,443,425,0,438,438,488],
[505,427,474,454,453,0,468,462],
[447,445,426,445,453,423,0,468],
[455,418,414,424,403,429,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,428,454,457,454,473,464],
[422,0,429,455,461,445,424,461],
[463,462,0,455,429,465,427,441],
[437,436,436,0,418,475,462,446],
[434,430,462,473,0,469,452,421],
[437,446,426,416,422,0,415,430],
[418,467,464,429,439,476,0,461],
[427,430,450,445,470,461,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,357,356,417,345,359,446],
[463,0,446,447,466,389,440,441],
[534,445,0,443,466,420,438,433],
[535,444,448,0,469,441,460,436],
[474,425,425,422,0,446,403,409],
[546,502,471,450,445,0,421,514],
[532,451,453,431,488,470,0,458],
[445,450,458,455,482,377,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,439,503,464,480,469,521],
[435,0,479,492,454,554,542,510],
[452,412,0,435,448,481,439,533],
[388,399,456,0,435,427,433,479],
[427,437,443,456,0,458,507,529],
[411,337,410,464,433,0,448,484],
[422,349,452,458,384,443,0,515],
[370,381,358,412,362,407,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,449,425,420,414,444,439],
[458,0,425,431,445,411,426,462],
[442,466,0,409,410,427,456,425],
[466,460,482,0,442,436,478,437],
[471,446,481,449,0,436,462,456],
[477,480,464,455,455,0,437,459],
[447,465,435,413,429,454,0,422],
[452,429,466,454,435,432,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,451,452,427,441,423,447],
[447,0,435,439,419,423,459,454],
[440,456,0,438,433,424,450,435],
[439,452,453,0,446,430,451,444],
[464,472,458,445,0,447,447,460],
[450,468,467,461,444,0,480,478],
[468,432,441,440,444,411,0,436],
[444,437,456,447,431,413,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,439,430,459,467,422,429],
[426,0,428,445,435,465,434,446],
[452,463,0,480,462,469,449,433],
[461,446,411,0,457,449,417,429],
[432,456,429,434,0,454,444,436],
[424,426,422,442,437,0,413,431],
[469,457,442,474,447,478,0,441],
[462,445,458,462,455,460,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,446,422,450,437,447,458],
[442,0,463,427,464,406,452,427],
[445,428,0,383,449,417,426,419],
[469,464,508,0,477,435,464,448],
[441,427,442,414,0,423,413,413],
[454,485,474,456,468,0,436,463],
[444,439,465,427,478,455,0,446],
[433,464,472,443,478,428,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,430,421,407,410,437,438],
[473,0,474,444,462,462,447,448],
[461,417,0,432,417,426,427,416],
[470,447,459,0,438,454,451,428],
[484,429,474,453,0,427,441,439],
[481,429,465,437,464,0,440,434],
[454,444,464,440,450,451,0,413],
[453,443,475,463,452,457,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,444,460,451,469,454,465],
[436,0,433,448,466,459,462,455],
[447,458,0,453,443,461,466,450],
[431,443,438,0,447,444,455,461],
[440,425,448,444,0,456,445,464],
[422,432,430,447,435,0,481,448],
[437,429,425,436,446,410,0,424],
[426,436,441,430,427,443,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,488,492,499,435,463,460],
[425,0,466,488,485,406,441,421],
[403,425,0,484,445,402,446,421],
[399,403,407,0,467,404,445,382],
[392,406,446,424,0,389,436,403],
[456,485,489,487,502,0,444,436],
[428,450,445,446,455,447,0,436],
[431,470,470,509,488,455,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,468,441,447,438,451,448],
[439,0,431,472,469,470,425,487],
[423,460,0,484,469,427,443,467],
[450,419,407,0,457,427,429,472],
[444,422,422,434,0,423,413,455],
[453,421,464,464,468,0,463,488],
[440,466,448,462,478,428,0,469],
[443,404,424,419,436,403,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,452,459,401,430,431,425],
[434,0,476,437,440,424,442,439],
[439,415,0,437,432,432,425,449],
[432,454,454,0,418,458,432,454],
[490,451,459,473,0,466,435,455],
[461,467,459,433,425,0,459,408],
[460,449,466,459,456,432,0,439],
[466,452,442,437,436,483,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,410,435,410,441,455,413],
[452,0,451,439,427,439,434,437],
[481,440,0,396,426,433,442,435],
[456,452,495,0,451,473,471,425],
[481,464,465,440,0,472,468,448],
[450,452,458,418,419,0,445,402],
[436,457,449,420,423,446,0,422],
[478,454,456,466,443,489,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,478,477,458,445,439,456],
[459,0,500,476,495,464,465,443],
[413,391,0,456,421,416,443,397],
[414,415,435,0,426,424,431,398],
[433,396,470,465,0,458,449,450],
[446,427,475,467,433,0,443,450],
[452,426,448,460,442,448,0,437],
[435,448,494,493,441,441,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,466,424,449,444,432,457],
[464,0,473,431,429,460,446,457],
[425,418,0,398,412,413,411,430],
[467,460,493,0,434,449,426,457],
[442,462,479,457,0,462,432,449],
[447,431,478,442,429,0,429,467],
[459,445,480,465,459,462,0,492],
[434,434,461,434,442,424,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,380,406,300,363,378,414,486],
[511,0,566,434,417,416,443,487],
[485,325,0,436,423,395,334,460],
[591,457,455,0,487,510,373,525],
[528,474,468,404,0,378,425,497],
[513,475,496,381,513,0,510,541],
[477,448,557,518,466,381,0,553],
[405,404,431,366,394,350,338,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,478,466,449,471,501,417],
[470,0,468,432,446,442,446,469],
[413,423,0,499,394,461,476,441],
[425,459,392,0,394,460,444,441],
[442,445,497,497,0,457,449,472],
[420,449,430,431,434,0,453,442],
[390,445,415,447,442,438,0,422],
[474,422,450,450,419,449,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,449,426,443,482,448,445],
[506,0,485,465,469,506,426,460],
[442,406,0,447,429,493,405,458],
[465,426,444,0,471,477,440,484],
[448,422,462,420,0,497,394,457],
[409,385,398,414,394,0,367,440],
[443,465,486,451,497,524,0,495],
[446,431,433,407,434,451,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,445,450,438,447,434,449],
[452,0,442,447,457,452,491,452],
[446,449,0,454,441,436,457,459],
[441,444,437,0,450,447,452,438],
[453,434,450,441,0,440,452,437],
[444,439,455,444,451,0,479,445],
[457,400,434,439,439,412,0,456],
[442,439,432,453,454,446,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,466,430,453,441,438,441],
[453,0,445,458,455,446,448,446],
[425,446,0,452,472,439,452,425],
[461,433,439,0,470,450,441,447],
[438,436,419,421,0,445,415,423],
[450,445,452,441,446,0,425,439],
[453,443,439,450,476,466,0,440],
[450,445,466,444,468,452,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,399,474,438,443,455,458],
[412,0,418,388,405,404,467,493],
[492,473,0,487,475,437,493,515],
[417,503,404,0,415,449,519,515],
[453,486,416,476,0,440,494,481],
[448,487,454,442,451,0,511,438],
[436,424,398,372,397,380,0,398],
[433,398,376,376,410,453,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,445,458,471,466,460,456],
[423,0,422,464,471,440,433,423],
[446,469,0,477,465,454,437,438],
[433,427,414,0,448,445,437,438],
[420,420,426,443,0,432,438,437],
[425,451,437,446,459,0,432,451],
[431,458,454,454,453,459,0,434],
[435,468,453,453,454,440,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,460,476,476,460,441,439],
[427,0,461,475,453,435,469,457],
[431,430,0,459,455,454,447,408],
[415,416,432,0,457,440,438,419],
[415,438,436,434,0,460,440,428],
[431,456,437,451,431,0,442,430],
[450,422,444,453,451,449,0,419],
[452,434,483,472,463,461,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,436,456,441,448,443,437],
[427,0,432,436,408,407,420,442],
[455,459,0,460,453,442,448,454],
[435,455,431,0,448,445,462,414],
[450,483,438,443,0,426,453,430],
[443,484,449,446,465,0,443,437],
[448,471,443,429,438,448,0,455],
[454,449,437,477,461,454,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,481,449,469,436,486,478],
[429,0,450,478,456,451,462,450],
[410,441,0,428,413,426,422,413],
[442,413,463,0,429,407,425,449],
[422,435,478,462,0,431,476,439],
[455,440,465,484,460,0,479,478],
[405,429,469,466,415,412,0,427],
[413,441,478,442,452,413,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,437,446,435,442,440,461],
[439,0,437,438,427,437,441,437],
[454,454,0,438,438,460,440,452],
[445,453,453,0,451,466,443,463],
[456,464,453,440,0,457,463,452],
[449,454,431,425,434,0,437,432],
[451,450,451,448,428,454,0,431],
[430,454,439,428,439,459,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,432,443,435,438,441,426],
[457,0,439,465,422,443,491,443],
[459,452,0,440,428,440,458,427],
[448,426,451,0,435,424,457,432],
[456,469,463,456,0,445,451,447],
[453,448,451,467,446,0,442,432],
[450,400,433,434,440,449,0,395],
[465,448,464,459,444,459,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,418,431,455,428,425,410],
[446,0,450,456,433,484,457,460],
[473,441,0,456,403,484,483,399],
[460,435,435,0,440,422,486,364],
[436,458,488,451,0,437,458,466],
[463,407,407,469,454,0,417,414],
[466,434,408,405,433,474,0,450],
[481,431,492,527,425,477,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,445,441,459,433,419,418],
[460,0,454,438,449,468,446,445],
[446,437,0,442,434,415,410,418],
[450,453,449,0,449,451,436,447],
[432,442,457,442,0,456,453,436],
[458,423,476,440,435,0,422,427],
[472,445,481,455,438,469,0,436],
[473,446,473,444,455,464,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,449,473,451,429,439,470],
[476,0,442,470,452,447,462,469],
[442,449,0,436,462,419,409,443],
[418,421,455,0,447,426,450,434],
[440,439,429,444,0,417,427,452],
[462,444,472,465,474,0,457,484],
[452,429,482,441,464,434,0,471],
[421,422,448,457,439,407,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,439,449,457,458,451,472],
[439,0,435,416,438,460,466,443],
[452,456,0,442,454,454,497,450],
[442,475,449,0,443,457,459,474],
[434,453,437,448,0,450,447,455],
[433,431,437,434,441,0,428,441],
[440,425,394,432,444,463,0,427],
[419,448,441,417,436,450,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,455,420,423,431,440,413],
[450,0,455,432,439,429,457,430],
[436,436,0,442,437,440,440,420],
[471,459,449,0,439,441,458,435],
[468,452,454,452,0,455,460,425],
[460,462,451,450,436,0,456,452],
[451,434,451,433,431,435,0,417],
[478,461,471,456,466,439,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,457,466,453,439,463,461],
[433,0,442,432,409,414,432,430],
[434,449,0,443,441,415,458,426],
[425,459,448,0,421,425,463,441],
[438,482,450,470,0,442,446,446],
[452,477,476,466,449,0,439,451],
[428,459,433,428,445,452,0,453],
[430,461,465,450,445,440,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,434,432,443,446,425,436],
[471,0,452,471,457,416,454,433],
[457,439,0,474,458,451,470,464],
[459,420,417,0,449,438,451,435],
[448,434,433,442,0,448,444,448],
[445,475,440,453,443,0,450,469],
[466,437,421,440,447,441,0,443],
[455,458,427,456,443,422,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,459,418,445,420,450,417],
[463,0,430,473,463,455,429,460],
[432,461,0,451,467,453,464,446],
[473,418,440,0,465,487,464,459],
[446,428,424,426,0,445,427,429],
[471,436,438,404,446,0,435,448],
[441,462,427,427,464,456,0,405],
[474,431,445,432,462,443,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,443,461,485,451,498,465],
[418,0,426,439,458,446,466,444],
[448,465,0,421,456,451,469,445],
[430,452,470,0,451,443,473,453],
[406,433,435,440,0,440,450,459],
[440,445,440,448,451,0,458,464],
[393,425,422,418,441,433,0,406],
[426,447,446,438,432,427,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,518,466,467,413,450,421,418],
[373,0,442,422,402,401,424,372],
[425,449,0,425,453,329,437,368],
[424,469,466,0,422,421,496,451],
[478,489,438,469,0,437,428,416],
[441,490,562,470,454,0,525,431],
[470,467,454,395,463,366,0,307],
[473,519,523,440,475,460,584,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,427,449,431,438,432,451],
[430,0,415,439,410,433,429,409],
[464,476,0,488,443,438,455,475],
[442,452,403,0,429,417,424,440],
[460,481,448,462,0,436,461,458],
[453,458,453,474,455,0,438,461],
[459,462,436,467,430,453,0,468],
[440,482,416,451,433,430,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,447,436,436,453,441,412],
[416,0,440,426,411,436,424,410],
[444,451,0,462,452,445,454,437],
[455,465,429,0,443,455,428,418],
[455,480,439,448,0,470,451,419],
[438,455,446,436,421,0,438,422],
[450,467,437,463,440,453,0,448],
[479,481,454,473,472,469,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,447,414,430,468,484,460],
[389,0,396,415,427,430,451,441],
[444,495,0,448,454,436,465,464],
[477,476,443,0,462,469,494,446],
[461,464,437,429,0,437,463,451],
[423,461,455,422,454,0,469,449],
[407,440,426,397,428,422,0,413],
[431,450,427,445,440,442,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,462,453,433,433,447,446],
[447,0,448,462,461,445,452,431],
[429,443,0,442,450,428,447,435],
[438,429,449,0,432,453,459,438],
[458,430,441,459,0,448,459,432],
[458,446,463,438,443,0,466,442],
[444,439,444,432,432,425,0,437],
[445,460,456,453,459,449,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,446,427,421,427,469,424],
[434,0,447,421,458,455,429,432],
[445,444,0,448,454,461,462,471],
[464,470,443,0,455,433,476,448],
[470,433,437,436,0,462,468,461],
[464,436,430,458,429,0,443,474],
[422,462,429,415,423,448,0,468],
[467,459,420,443,430,417,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,419,451,408,447,436,432],
[474,0,450,488,463,460,420,455],
[472,441,0,462,420,465,459,447],
[440,403,429,0,405,429,419,425],
[483,428,471,486,0,466,462,451],
[444,431,426,462,425,0,434,427],
[455,471,432,472,429,457,0,435],
[459,436,444,466,440,464,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,446,465,451,487,419,440],
[446,0,405,463,466,459,412,423],
[445,486,0,462,442,481,435,464],
[426,428,429,0,435,487,413,461],
[440,425,449,456,0,475,425,426],
[404,432,410,404,416,0,451,416],
[472,479,456,478,466,440,0,440],
[451,468,427,430,465,475,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,470,437,444,445,437,386],
[448,0,483,473,461,452,432,446],
[421,408,0,417,448,425,443,393],
[454,418,474,0,436,426,447,438],
[447,430,443,455,0,441,433,421],
[446,439,466,465,450,0,456,425],
[454,459,448,444,458,435,0,430],
[505,445,498,453,470,466,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,431,439,407,411,449,415],
[475,0,452,424,421,443,445,452],
[460,439,0,415,409,420,456,399],
[452,467,476,0,445,443,458,453],
[484,470,482,446,0,432,459,438],
[480,448,471,448,459,0,464,437],
[442,446,435,433,432,427,0,431],
[476,439,492,438,453,454,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,425,420,390,444,400,452],
[493,0,459,491,465,465,429,484],
[466,432,0,445,429,444,397,465],
[471,400,446,0,460,454,414,471],
[501,426,462,431,0,495,453,503],
[447,426,447,437,396,0,414,478],
[491,462,494,477,438,477,0,499],
[439,407,426,420,388,413,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,468,453,449,515,499,439],
[411,0,466,432,444,491,464,458],
[423,425,0,426,442,473,473,415],
[438,459,465,0,514,492,483,423],
[442,447,449,377,0,461,450,444],
[376,400,418,399,430,0,421,406],
[392,427,418,408,441,470,0,432],
[452,433,476,468,447,485,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,463,393,389,482,416,422],
[450,0,461,460,466,488,437,446],
[428,430,0,439,462,467,450,434],
[498,431,452,0,459,472,451,441],
[502,425,429,432,0,450,429,449],
[409,403,424,419,441,0,408,443],
[475,454,441,440,462,483,0,431],
[469,445,457,450,442,448,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,421,426,462,452,463,467],
[447,0,450,428,448,445,446,449],
[470,441,0,444,485,459,444,473],
[465,463,447,0,477,438,450,467],
[429,443,406,414,0,444,434,429],
[439,446,432,453,447,0,462,467],
[428,445,447,441,457,429,0,443],
[424,442,418,424,462,424,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,610,610,326,514,421,513],
[471,0,563,564,376,562,518,515],
[281,328,0,470,374,421,516,562],
[281,327,421,0,185,375,281,422],
[565,515,517,706,0,516,425,564],
[377,329,470,516,375,0,564,611],
[470,373,375,610,466,327,0,467],
[378,376,329,469,327,280,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,460,484,461,465,433,458],
[432,0,459,434,436,423,430,401],
[431,432,0,437,429,442,469,412],
[407,457,454,0,421,430,448,427],
[430,455,462,470,0,445,444,447],
[426,468,449,461,446,0,419,455],
[458,461,422,443,447,472,0,467],
[433,490,479,464,444,436,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,455,447,457,462,442,474],
[408,0,437,427,442,442,429,455],
[436,454,0,431,460,458,427,456],
[444,464,460,0,467,447,446,473],
[434,449,431,424,0,433,428,448],
[429,449,433,444,458,0,432,437],
[449,462,464,445,463,459,0,453],
[417,436,435,418,443,454,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,455,332,383,500,472,397],
[459,0,417,472,362,415,385,421],
[436,474,0,510,377,439,553,376],
[559,419,381,0,379,537,517,456],
[508,529,514,512,0,553,477,395],
[391,476,452,354,338,0,455,417],
[419,506,338,374,414,436,0,455],
[494,470,515,435,496,474,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,436,455,470,466,443,506],
[410,0,406,440,436,451,416,445],
[455,485,0,438,462,439,459,481],
[436,451,453,0,434,424,442,455],
[421,455,429,457,0,450,425,461],
[425,440,452,467,441,0,452,466],
[448,475,432,449,466,439,0,481],
[385,446,410,436,430,425,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,480,445,458,459,464,485],
[443,0,433,448,449,411,470,450],
[411,458,0,435,472,423,445,426],
[446,443,456,0,474,383,443,476],
[433,442,419,417,0,390,452,473],
[432,480,468,508,501,0,490,482],
[427,421,446,448,439,401,0,447],
[406,441,465,415,418,409,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,457,465,458,452,445,450],
[449,0,466,482,429,417,474,435],
[434,425,0,457,426,401,440,434],
[426,409,434,0,442,422,431,431],
[433,462,465,449,0,450,445,447],
[439,474,490,469,441,0,477,478],
[446,417,451,460,446,414,0,443],
[441,456,457,460,444,413,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,419,391,415,450,403,458],
[461,0,435,392,411,445,397,441],
[472,456,0,398,420,423,462,457],
[500,499,493,0,470,486,445,453],
[476,480,471,421,0,463,457,437],
[441,446,468,405,428,0,432,464],
[488,494,429,446,434,459,0,486],
[433,450,434,438,454,427,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,406,432,424,456,406,442],
[459,0,404,455,440,438,417,452],
[485,487,0,440,421,483,419,466],
[459,436,451,0,438,481,405,491],
[467,451,470,453,0,513,446,428],
[435,453,408,410,378,0,365,421],
[485,474,472,486,445,526,0,524],
[449,439,425,400,463,470,367,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,432,455,473,436,424,465],
[427,0,468,480,458,457,422,446],
[459,423,0,479,460,455,455,455],
[436,411,412,0,441,449,413,436],
[418,433,431,450,0,429,401,418],
[455,434,436,442,462,0,421,454],
[467,469,436,478,490,470,0,462],
[426,445,436,455,473,437,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,453,457,448,431,443,436],
[441,0,483,445,465,456,451,452],
[438,408,0,448,453,432,423,435],
[434,446,443,0,464,458,423,461],
[443,426,438,427,0,422,414,412],
[460,435,459,433,469,0,441,441],
[448,440,468,468,477,450,0,449],
[455,439,456,430,479,450,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,460,419,423,409,444,428],
[447,0,420,422,427,396,452,416],
[431,471,0,437,421,430,424,442],
[472,469,454,0,442,435,446,451],
[468,464,470,449,0,424,457,454],
[482,495,461,456,467,0,467,441],
[447,439,467,445,434,424,0,443],
[463,475,449,440,437,450,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,447,454,429,423,434,434],
[463,0,476,503,476,442,473,469],
[444,415,0,434,435,427,437,416],
[437,388,457,0,443,427,425,437],
[462,415,456,448,0,471,457,469],
[468,449,464,464,420,0,440,445],
[457,418,454,466,434,451,0,455],
[457,422,475,454,422,446,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,455,438,471,426,451,457],
[407,0,432,436,432,421,458,406],
[436,459,0,455,452,429,456,437],
[453,455,436,0,450,455,458,434],
[420,459,439,441,0,447,444,448],
[465,470,462,436,444,0,461,442],
[440,433,435,433,447,430,0,419],
[434,485,454,457,443,449,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,444,424,454,424,434,443],
[458,0,453,448,455,449,457,444],
[447,438,0,448,457,460,430,449],
[467,443,443,0,443,451,449,467],
[437,436,434,448,0,410,439,437],
[467,442,431,440,481,0,450,446],
[457,434,461,442,452,441,0,462],
[448,447,442,424,454,445,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,435,430,478,423,442,452],
[416,0,380,459,436,436,391,406],
[456,511,0,454,552,491,463,396],
[461,432,437,0,412,498,402,419],
[413,455,339,479,0,422,417,427],
[468,455,400,393,469,0,417,467],
[449,500,428,489,474,474,0,470],
[439,485,495,472,464,424,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,458,438,434,418,420,430],
[460,0,464,462,447,431,437,449],
[433,427,0,428,455,416,405,416],
[453,429,463,0,439,407,418,443],
[457,444,436,452,0,415,426,424],
[473,460,475,484,476,0,438,450],
[471,454,486,473,465,453,0,434],
[461,442,475,448,467,441,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,448,452,454,452,464,441],
[440,0,427,440,442,460,450,459],
[443,464,0,453,478,455,470,458],
[439,451,438,0,436,471,454,453],
[437,449,413,455,0,452,452,451],
[439,431,436,420,439,0,444,441],
[427,441,421,437,439,447,0,446],
[450,432,433,438,440,450,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,421,456,458,430,426,431],
[449,0,403,438,458,434,431,442],
[470,488,0,467,493,459,443,459],
[435,453,424,0,453,421,421,436],
[433,433,398,438,0,398,424,420],
[461,457,432,470,493,0,431,434],
[465,460,448,470,467,460,0,445],
[460,449,432,455,471,457,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,445,470,452,445,483,456],
[402,0,433,431,419,435,408,429],
[446,458,0,443,410,424,449,430],
[421,460,448,0,421,435,467,456],
[439,472,481,470,0,467,492,488],
[446,456,467,456,424,0,458,458],
[408,483,442,424,399,433,0,427],
[435,462,461,435,403,433,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,526,570,514,460,444,462],
[407,0,415,492,467,431,470,439],
[365,476,0,492,509,386,456,415],
[321,399,399,0,424,367,433,352],
[377,424,382,467,0,327,363,396],
[431,460,505,524,564,0,532,470],
[447,421,435,458,528,359,0,435],
[429,452,476,539,495,421,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,459,497,497,475,455,473],
[451,0,408,459,420,471,396,441],
[432,483,0,486,447,457,460,463],
[394,432,405,0,404,457,430,461],
[394,471,444,487,0,483,477,484],
[416,420,434,434,408,0,440,466],
[436,495,431,461,414,451,0,459],
[418,450,428,430,407,425,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,453,461,425,434,450,468],
[427,0,412,456,441,467,451,439],
[438,479,0,443,458,462,458,490],
[430,435,448,0,449,454,440,472],
[466,450,433,442,0,480,469,457],
[457,424,429,437,411,0,434,416],
[441,440,433,451,422,457,0,440],
[423,452,401,419,434,475,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,442,450,472,440,439,442],
[430,0,433,434,451,432,442,417],
[449,458,0,438,455,451,434,435],
[441,457,453,0,470,450,441,456],
[419,440,436,421,0,443,426,432],
[451,459,440,441,448,0,444,432],
[452,449,457,450,465,447,0,439],
[449,474,456,435,459,459,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,430,417,419,433,418,402],
[475,0,451,449,444,472,426,446],
[461,440,0,428,439,444,429,426],
[474,442,463,0,472,441,449,435],
[472,447,452,419,0,438,472,434],
[458,419,447,450,453,0,428,435],
[473,465,462,442,419,463,0,442],
[489,445,465,456,457,456,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,429,428,419,428,435,450],
[462,0,449,430,447,426,445,478],
[462,442,0,433,434,456,445,462],
[463,461,458,0,477,440,453,462],
[472,444,457,414,0,453,444,466],
[463,465,435,451,438,0,422,450],
[456,446,446,438,447,469,0,478],
[441,413,429,429,425,441,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,418,428,440,459,429,458],
[471,0,451,472,442,462,466,480],
[473,440,0,465,448,484,446,470],
[463,419,426,0,455,450,442,455],
[451,449,443,436,0,449,443,463],
[432,429,407,441,442,0,431,460],
[462,425,445,449,448,460,0,470],
[433,411,421,436,428,431,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,471,452,477,385,491,452],
[431,0,441,406,432,410,476,452],
[420,450,0,425,477,428,484,430],
[439,485,466,0,479,448,522,392],
[414,459,414,412,0,441,446,450],
[506,481,463,443,450,0,484,422],
[400,415,407,369,445,407,0,381],
[439,439,461,499,441,469,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,451,454,426,426,445,454],
[463,0,480,425,432,441,460,467],
[440,411,0,413,460,437,475,425],
[437,466,478,0,408,438,457,438],
[465,459,431,483,0,443,477,437],
[465,450,454,453,448,0,498,444],
[446,431,416,434,414,393,0,415],
[437,424,466,453,454,447,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,478,476,500,475,465,494],
[459,0,444,442,466,454,441,476],
[413,447,0,471,449,447,441,471],
[415,449,420,0,478,426,444,478],
[391,425,442,413,0,402,425,440],
[416,437,444,465,489,0,447,462],
[426,450,450,447,466,444,0,453],
[397,415,420,413,451,429,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,435,418,462,419,437,421],
[474,0,452,455,465,437,462,462],
[456,439,0,434,427,439,428,435],
[473,436,457,0,479,450,442,427],
[429,426,464,412,0,423,415,440],
[472,454,452,441,468,0,460,452],
[454,429,463,449,476,431,0,470],
[470,429,456,464,451,439,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,416,388,414,452,413,427],
[444,0,402,434,402,448,460,440],
[475,489,0,443,457,472,461,457],
[503,457,448,0,431,450,444,463],
[477,489,434,460,0,477,470,449],
[439,443,419,441,414,0,456,421],
[478,431,430,447,421,435,0,438],
[464,451,434,428,442,470,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,467,432,427,443,418,449],
[472,0,478,456,457,445,454,475],
[424,413,0,436,444,428,417,415],
[459,435,455,0,453,429,440,464],
[464,434,447,438,0,435,436,442],
[448,446,463,462,456,0,435,476],
[473,437,474,451,455,456,0,473],
[442,416,476,427,449,415,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,363,432,402,481,392,359],
[444,0,399,398,398,454,393,384],
[528,492,0,434,473,545,483,465],
[459,493,457,0,489,473,419,411],
[489,493,418,402,0,451,440,469],
[410,437,346,418,440,0,420,395],
[499,498,408,472,451,471,0,422],
[532,507,426,480,422,496,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,464,446,439,459,405,445],
[442,0,477,494,473,454,460,497],
[427,414,0,405,418,420,395,446],
[445,397,486,0,436,427,390,480],
[452,418,473,455,0,465,417,454],
[432,437,471,464,426,0,431,470],
[486,431,496,501,474,460,0,497],
[446,394,445,411,437,421,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,446,436,435,428,478,438],
[465,0,457,431,446,436,479,443],
[445,434,0,434,452,449,465,428],
[455,460,457,0,460,452,450,427],
[456,445,439,431,0,440,467,448],
[463,455,442,439,451,0,464,443],
[413,412,426,441,424,427,0,425],
[453,448,463,464,443,448,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,448,464,448,449,420,436],
[450,0,442,452,435,421,418,456],
[443,449,0,479,456,418,429,456],
[427,439,412,0,439,412,410,424],
[443,456,435,452,0,414,437,454],
[442,470,473,479,477,0,458,472],
[471,473,462,481,454,433,0,479],
[455,435,435,467,437,419,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,460,444,409,453,464,479],
[409,0,442,429,427,428,452,424],
[431,449,0,433,422,420,461,438],
[447,462,458,0,436,445,455,443],
[482,464,469,455,0,455,460,437],
[438,463,471,446,436,0,465,474],
[427,439,430,436,431,426,0,442],
[412,467,453,448,454,417,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,437,456,461,456,469,474],
[432,0,408,437,428,411,457,451],
[454,483,0,442,455,453,467,493],
[435,454,449,0,444,448,457,465],
[430,463,436,447,0,436,456,464],
[435,480,438,443,455,0,458,476],
[422,434,424,434,435,433,0,464],
[417,440,398,426,427,415,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,410,426,425,425,436,423],
[462,0,428,438,451,462,465,435],
[481,463,0,456,460,449,439,437],
[465,453,435,0,474,480,458,452],
[466,440,431,417,0,478,443,442],
[466,429,442,411,413,0,447,429],
[455,426,452,433,448,444,0,437],
[468,456,454,439,449,462,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,456,458,454,451,464,471],
[464,0,470,460,479,419,463,451],
[435,421,0,461,432,403,410,384],
[433,431,430,0,473,416,483,433],
[437,412,459,418,0,382,433,453],
[440,472,488,475,509,0,461,461],
[427,428,481,408,458,430,0,420],
[420,440,507,458,438,430,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,458,445,396,448,443,470],
[431,0,443,449,414,437,470,480],
[433,448,0,465,447,464,452,488],
[446,442,426,0,394,429,423,459],
[495,477,444,497,0,458,484,497],
[443,454,427,462,433,0,457,468],
[448,421,439,468,407,434,0,461],
[421,411,403,432,394,423,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,390,420,426,404,375,393],
[491,0,454,465,409,398,369,479],
[501,437,0,436,458,392,348,459],
[471,426,455,0,425,399,358,437],
[465,482,433,466,0,397,449,446],
[487,493,499,492,494,0,384,489],
[516,522,543,533,442,507,0,555],
[498,412,432,454,445,402,336,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,418,438,430,418,414,406],
[481,0,438,470,475,461,455,466],
[473,453,0,427,450,437,444,437],
[453,421,464,0,459,444,448,429],
[461,416,441,432,0,453,444,438],
[473,430,454,447,438,0,452,442],
[477,436,447,443,447,439,0,445],
[485,425,454,462,453,449,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,445,460,441,464,464,449],
[469,0,471,427,467,489,492,467],
[446,420,0,462,456,446,452,461],
[431,464,429,0,453,485,458,443],
[450,424,435,438,0,460,444,438],
[427,402,445,406,431,0,458,424],
[427,399,439,433,447,433,0,443],
[442,424,430,448,453,467,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,443,452,465,467,471,459],
[451,0,451,458,442,452,467,461],
[448,440,0,466,438,439,486,446],
[439,433,425,0,454,450,480,443],
[426,449,453,437,0,410,450,442],
[424,439,452,441,481,0,454,436],
[420,424,405,411,441,437,0,432],
[432,430,445,448,449,455,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,461,441,455,438,415,428],
[440,0,488,413,401,426,403,425],
[430,403,0,390,438,401,384,429],
[450,478,501,0,450,433,433,455],
[436,490,453,441,0,429,411,444],
[453,465,490,458,462,0,449,443],
[476,488,507,458,480,442,0,453],
[463,466,462,436,447,448,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,465,419,440,393,423,434],
[428,0,461,418,435,402,405,416],
[426,430,0,407,442,405,422,429],
[472,473,484,0,474,431,447,457],
[451,456,449,417,0,429,437,411],
[498,489,486,460,462,0,432,473],
[468,486,469,444,454,459,0,442],
[457,475,462,434,480,418,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,423,443,436,440,452,479],
[454,0,436,448,456,443,470,503],
[468,455,0,427,460,451,473,487],
[448,443,464,0,446,453,432,462],
[455,435,431,445,0,436,465,464],
[451,448,440,438,455,0,446,490],
[439,421,418,459,426,445,0,478],
[412,388,404,429,427,401,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,469,474,456,447,441,473],
[426,0,461,447,465,459,454,444],
[422,430,0,485,461,429,451,465],
[417,444,406,0,412,435,426,442],
[435,426,430,479,0,423,434,439],
[444,432,462,456,468,0,434,449],
[450,437,440,465,457,457,0,504],
[418,447,426,449,452,442,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,431,416,398,409,413,403],
[484,0,447,461,424,437,458,472],
[460,444,0,447,434,425,420,427],
[475,430,444,0,419,412,399,402],
[493,467,457,472,0,444,436,457],
[482,454,466,479,447,0,422,462],
[478,433,471,492,455,469,0,469],
[488,419,464,489,434,429,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,463,432,453,472,443,474],
[445,0,475,448,430,455,458,465],
[428,416,0,406,432,423,426,438],
[459,443,485,0,466,465,451,446],
[438,461,459,425,0,434,423,453],
[419,436,468,426,457,0,397,425],
[448,433,465,440,468,494,0,448],
[417,426,453,445,438,466,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,439,446,451,442,445,422],
[465,0,453,457,458,497,442,474],
[452,438,0,432,443,467,444,435],
[445,434,459,0,433,469,439,432],
[440,433,448,458,0,471,446,441],
[449,394,424,422,420,0,420,422],
[446,449,447,452,445,471,0,447],
[469,417,456,459,450,469,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,492,477,462,464,401,531],
[439,0,459,432,479,479,403,499],
[399,432,0,446,479,489,388,470],
[414,459,445,0,508,491,453,530],
[429,412,412,383,0,465,386,478],
[427,412,402,400,426,0,429,444],
[490,488,503,438,505,462,0,551],
[360,392,421,361,413,447,340,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,444,425,463,452,461,445],
[436,0,413,444,468,411,440,430],
[447,478,0,458,454,438,461,464],
[466,447,433,0,456,441,440,460],
[428,423,437,435,0,428,444,430],
[439,480,453,450,463,0,463,467],
[430,451,430,451,447,428,0,443],
[446,461,427,431,461,424,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,460,431,459,428,440,466],
[441,0,437,429,463,427,456,461],
[431,454,0,436,482,442,428,469],
[460,462,455,0,466,462,436,471],
[432,428,409,425,0,416,425,456],
[463,464,449,429,475,0,459,474],
[451,435,463,455,466,432,0,465],
[425,430,422,420,435,417,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,421,414,416,419,431,440],
[514,0,456,449,459,475,439,466],
[470,435,0,467,474,496,469,465],
[477,442,424,0,400,433,435,454],
[475,432,417,491,0,460,467,445],
[472,416,395,458,431,0,451,457],
[460,452,422,456,424,440,0,438],
[451,425,426,437,446,434,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,462,445,445,433,447,452],
[459,0,435,418,427,450,436,448],
[429,456,0,425,410,443,414,433],
[446,473,466,0,445,455,442,450],
[446,464,481,446,0,471,444,434],
[458,441,448,436,420,0,434,442],
[444,455,477,449,447,457,0,448],
[439,443,458,441,457,449,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,511,384,640,384,513,513,384],
[380,0,382,255,127,511,385,256],
[507,509,0,509,383,511,383,382],
[251,636,382,0,509,385,385,381],
[507,764,508,382,0,511,385,255],
[378,380,380,506,380,0,381,252],
[378,506,508,506,506,510,0,508],
[507,635,509,510,636,639,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,445,539,483,434,376,385],
[459,0,522,584,484,530,441,492],
[446,369,0,467,422,438,371,390],
[352,307,424,0,378,393,419,405],
[408,407,469,513,0,418,414,396],
[457,361,453,498,473,0,467,428],
[515,450,520,472,477,424,0,499],
[506,399,501,486,495,463,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,451,456,493,464,429,467],
[435,0,470,449,467,472,449,458],
[440,421,0,407,469,449,437,435],
[435,442,484,0,485,474,432,457],
[398,424,422,406,0,436,398,431],
[427,419,442,417,455,0,426,439],
[462,442,454,459,493,465,0,503],
[424,433,456,434,460,452,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,456,423,409,468,418,453],
[475,0,462,449,456,494,443,452],
[435,429,0,410,428,447,418,430],
[468,442,481,0,414,473,442,454],
[482,435,463,477,0,472,457,455],
[423,397,444,418,419,0,407,423],
[473,448,473,449,434,484,0,450],
[438,439,461,437,436,468,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,368,394,366,423,422,390],
[487,0,391,526,431,453,443,444],
[523,500,0,441,393,446,454,447],
[497,365,450,0,391,365,409,407],
[525,460,498,500,0,496,473,445],
[468,438,445,526,395,0,422,409],
[469,448,437,482,418,469,0,439],
[501,447,444,484,446,482,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,429,426,414,443,417,412],
[476,0,452,441,463,499,445,452],
[462,439,0,454,437,469,447,435],
[465,450,437,0,444,463,424,453],
[477,428,454,447,0,452,443,456],
[448,392,422,428,439,0,415,419],
[474,446,444,467,448,476,0,447],
[479,439,456,438,435,472,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,456,450,472,466,440,461],
[442,0,441,448,445,450,452,486],
[435,450,0,487,458,442,442,466],
[441,443,404,0,450,429,455,477],
[419,446,433,441,0,439,465,447],
[425,441,449,462,452,0,479,456],
[451,439,449,436,426,412,0,488],
[430,405,425,414,444,435,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,424,440,427,460,470,457],
[440,0,484,460,469,450,470,490],
[467,407,0,446,438,442,462,462],
[451,431,445,0,428,451,462,471],
[464,422,453,463,0,458,450,476],
[431,441,449,440,433,0,468,486],
[421,421,429,429,441,423,0,472],
[434,401,429,420,415,405,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,415,423,421,441,387,409],
[453,0,458,467,459,476,444,459],
[476,433,0,434,434,466,427,445],
[468,424,457,0,421,438,448,454],
[470,432,457,470,0,452,455,469],
[450,415,425,453,439,0,402,418],
[504,447,464,443,436,489,0,474],
[482,432,446,437,422,473,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,455,447,471,442,455,482],
[426,0,457,450,480,452,450,489],
[436,434,0,449,486,460,409,460],
[444,441,442,0,484,424,479,494],
[420,411,405,407,0,404,432,431],
[449,439,431,467,487,0,463,482],
[436,441,482,412,459,428,0,439],
[409,402,431,397,460,409,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,467,456,475,488,442,486],
[420,0,445,416,462,446,475,483],
[424,446,0,434,469,421,432,474],
[435,475,457,0,459,444,452,485],
[416,429,422,432,0,443,447,474],
[403,445,470,447,448,0,455,497],
[449,416,459,439,444,436,0,467],
[405,408,417,406,417,394,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,421,538,466,417,433,439],
[479,0,378,525,430,437,471,424],
[470,513,0,544,506,424,501,498],
[353,366,347,0,375,338,396,374],
[425,461,385,516,0,431,431,486],
[474,454,467,553,460,0,409,463],
[458,420,390,495,460,482,0,459],
[452,467,393,517,405,428,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,441,441,385,400,441,414],
[462,0,472,449,448,451,438,470],
[450,419,0,404,390,376,429,415],
[450,442,487,0,420,381,434,413],
[506,443,501,471,0,424,464,455],
[491,440,515,510,467,0,478,460],
[450,453,462,457,427,413,0,440],
[477,421,476,478,436,431,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,412,442,467,432,458,461],
[389,0,413,414,435,456,421,442],
[479,478,0,479,468,482,462,439],
[449,477,412,0,457,457,449,461],
[424,456,423,434,0,473,440,457],
[459,435,409,434,418,0,394,454],
[433,470,429,442,451,497,0,491],
[430,449,452,430,434,437,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,425,441,426,416,395,425],
[451,0,434,450,467,452,456,443],
[466,457,0,457,462,431,419,434],
[450,441,434,0,439,437,436,421],
[465,424,429,452,0,458,420,427],
[475,439,460,454,433,0,429,461],
[496,435,472,455,471,462,0,478],
[466,448,457,470,464,430,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,376,433,399,459,400,490,435],
[515,0,470,439,502,459,477,478],
[458,421,0,414,429,405,470,408],
[492,452,477,0,483,445,512,504],
[432,389,462,408,0,398,479,405],
[491,432,486,446,493,0,477,460],
[401,414,421,379,412,414,0,404],
[456,413,483,387,486,431,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,444,462,448,457,450,465],
[436,0,430,436,411,434,437,445],
[447,461,0,443,421,450,430,447],
[429,455,448,0,432,443,429,450],
[443,480,470,459,0,448,454,472],
[434,457,441,448,443,0,436,439],
[441,454,461,462,437,455,0,428],
[426,446,444,441,419,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,473,469,452,448,439,464],
[447,0,469,451,451,440,448,435],
[418,422,0,430,450,427,425,424],
[422,440,461,0,439,443,422,445],
[439,440,441,452,0,449,442,442],
[443,451,464,448,442,0,422,435],
[452,443,466,469,449,469,0,463],
[427,456,467,446,449,456,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,464,460,451,456,448],
[452,0,443,444,448,442,461,438],
[451,448,0,445,445,463,448,430],
[427,447,446,0,442,431,446,448],
[431,443,446,449,0,439,442,425],
[440,449,428,460,452,0,455,438],
[435,430,443,445,449,436,0,445],
[443,453,461,443,466,453,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,433,482,414,461,497,450],
[413,0,437,450,437,418,473,442],
[458,454,0,447,408,429,465,438],
[409,441,444,0,445,435,468,396],
[477,454,483,446,0,460,465,439],
[430,473,462,456,431,0,474,455],
[394,418,426,423,426,417,0,423],
[441,449,453,495,452,436,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,439,445,451,461,453,457],
[450,0,441,460,454,440,450,451],
[452,450,0,478,438,473,459,455],
[446,431,413,0,438,430,423,449],
[440,437,453,453,0,455,447,452],
[430,451,418,461,436,0,445,441],
[438,441,432,468,444,446,0,451],
[434,440,436,442,439,450,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,442,442,452,473,428,447],
[450,0,436,449,438,465,430,478],
[449,455,0,450,466,470,434,470],
[449,442,441,0,457,463,464,450],
[439,453,425,434,0,466,456,460],
[418,426,421,428,425,0,415,444],
[463,461,457,427,435,476,0,476],
[444,413,421,441,431,447,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,436,420,469,447,464,410],
[415,0,388,414,444,396,390,385],
[455,503,0,461,468,470,484,432],
[471,477,430,0,459,451,453,431],
[422,447,423,432,0,456,440,414],
[444,495,421,440,435,0,392,402],
[427,501,407,438,451,499,0,454],
[481,506,459,460,477,489,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,425,456,451,454,432,416],
[475,0,471,470,488,458,445,448],
[466,420,0,461,467,455,440,452],
[435,421,430,0,431,457,427,466],
[440,403,424,460,0,465,432,429],
[437,433,436,434,426,0,437,452],
[459,446,451,464,459,454,0,428],
[475,443,439,425,462,439,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,442,454,439,411,446,476],
[486,0,472,485,442,467,442,523],
[449,419,0,415,435,426,413,445],
[437,406,476,0,440,440,427,447],
[452,449,456,451,0,463,413,458],
[480,424,465,451,428,0,421,473],
[445,449,478,464,478,470,0,476],
[415,368,446,444,433,418,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 891, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_891.csv", index=False, header=False)