
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,31,24,25,46,29,28,38],
[50,0,46,39,52,46,29,42],
[57,35,0,51,46,50,35,52],
[56,42,30,0,53,43,44,53],
[35,29,35,28,0,35,27,44],
[52,35,31,38,46,0,37,35],
[53,52,46,37,54,44,0,53],
[43,39,29,28,37,46,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,37,42,50,45,56],
[42,0,35,40,40,23,55,50],
[43,46,0,43,46,37,44,47],
[44,41,38,0,49,38,55,51],
[39,41,35,32,0,37,53,45],
[31,58,44,43,44,0,58,60],
[36,26,37,26,28,23,0,48],
[25,31,34,30,36,21,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,49,49,46,51,49,45],
[48,0,44,46,42,49,50,39],
[32,37,0,37,29,41,32,35],
[32,35,44,0,29,43,39,35],
[35,39,52,52,0,47,45,46],
[30,32,40,38,34,0,37,33],
[32,31,49,42,36,44,0,33],
[36,42,46,46,35,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,46,40,42,44,40],
[46,0,39,50,37,38,43,44],
[40,42,0,47,41,41,43,40],
[35,31,34,0,33,38,37,34],
[41,44,40,48,0,43,41,36],
[39,43,40,43,38,0,36,38],
[37,38,38,44,40,45,0,42],
[41,37,41,47,45,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,45,47,41,44,47],
[41,0,39,44,43,38,40,44],
[38,42,0,38,45,37,41,48],
[36,37,43,0,40,39,37,40],
[34,38,36,41,0,34,36,41],
[40,43,44,42,47,0,39,47],
[37,41,40,44,45,42,0,45],
[34,37,33,41,40,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,44,49,44,49,37,44],
[25,0,62,41,41,49,41,37],
[37,19,0,49,0,49,0,0],
[32,40,32,0,7,12,25,7],
[37,40,81,74,0,49,37,7],
[32,32,32,69,32,0,32,7],
[44,40,81,56,44,49,0,7],
[37,44,81,74,74,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,33,35,38,38,41],
[42,0,27,30,30,35,39,35],
[45,54,0,38,45,41,44,34],
[48,51,43,0,47,40,42,39],
[46,51,36,34,0,33,41,36],
[43,46,40,41,48,0,39,44],
[43,42,37,39,40,42,0,41],
[40,46,47,42,45,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,16,26,23,29,31],
[61,0,37,43,48,45,37,39],
[62,44,0,55,41,47,38,40],
[65,38,26,0,38,29,32,35],
[55,33,40,43,0,41,40,40],
[58,36,34,52,40,0,43,51],
[52,44,43,49,41,38,0,55],
[50,42,41,46,41,30,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,35,40,40,37,43],
[42,0,38,46,43,50,45,46],
[42,43,0,39,43,45,44,42],
[46,35,42,0,44,42,45,43],
[41,38,38,37,0,37,42,39],
[41,31,36,39,44,0,37,42],
[44,36,37,36,39,44,0,43],
[38,35,39,38,42,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,44,49,57,43,34,40],
[50,0,35,51,58,52,49,43],
[37,46,0,46,52,33,37,45],
[32,30,35,0,43,37,44,38],
[24,23,29,38,0,34,35,33],
[38,29,48,44,47,0,43,39],
[47,32,44,37,46,38,0,34],
[41,38,36,43,48,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,53,52,39,62,69,49],
[37,0,59,37,43,65,45,44],
[28,22,0,20,27,19,41,48],
[29,44,61,0,35,53,69,56],
[42,38,54,46,0,47,47,56],
[19,16,62,28,34,0,28,50],
[12,36,40,12,34,53,0,32],
[32,37,33,25,25,31,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,28,52,37,37,38,43],
[43,0,44,51,36,44,36,40],
[53,37,0,58,48,55,51,47],
[29,30,23,0,31,31,29,24],
[44,45,33,50,0,37,36,40],
[44,37,26,50,44,0,39,38],
[43,45,30,52,45,42,0,31],
[38,41,34,57,41,43,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,43,45,46,43,48],
[37,0,34,37,35,48,38,42],
[41,47,0,54,39,56,41,45],
[38,44,27,0,36,43,33,40],
[36,46,42,45,0,46,40,49],
[35,33,25,38,35,0,36,40],
[38,43,40,48,41,45,0,46],
[33,39,36,41,32,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,30,16,81,45,36,50],
[45,0,61,47,61,45,50,30],
[51,20,0,51,81,65,36,36],
[65,34,30,0,81,65,50,50],
[0,20,0,0,0,14,36,16],
[36,36,16,16,67,0,36,36],
[45,31,45,31,45,45,0,14],
[31,51,45,31,65,45,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,39,43,46,43,41],
[34,0,26,40,39,22,32,44],
[41,55,0,44,44,32,52,45],
[42,41,37,0,38,28,50,37],
[38,42,37,43,0,36,49,44],
[35,59,49,53,45,0,59,55],
[38,49,29,31,32,22,0,47],
[40,37,36,44,37,26,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,38,40,41,40,39],
[47,0,41,37,47,42,49,48],
[42,40,0,45,37,40,41,43],
[43,44,36,0,37,39,39,42],
[41,34,44,44,0,44,45,44],
[40,39,41,42,37,0,43,42],
[41,32,40,42,36,38,0,43],
[42,33,38,39,37,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,50,50,39,52,45,42],
[32,0,56,53,42,33,46,34],
[31,25,0,49,39,29,39,30],
[31,28,32,0,31,45,38,36],
[42,39,42,50,0,48,60,43],
[29,48,52,36,33,0,43,46],
[36,35,42,43,21,38,0,30],
[39,47,51,45,38,35,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,54,43,46,46,40],
[40,0,43,46,34,47,49,38],
[36,38,0,41,35,40,41,35],
[27,35,40,0,23,36,36,25],
[38,47,46,58,0,46,43,44],
[35,34,41,45,35,0,47,36],
[35,32,40,45,38,34,0,37],
[41,43,46,56,37,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,38,33,22,39,34,39],
[52,0,32,46,43,38,38,40],
[43,49,0,41,28,46,34,45],
[48,35,40,0,26,38,27,44],
[59,38,53,55,0,48,47,45],
[42,43,35,43,33,0,38,44],
[47,43,47,54,34,43,0,49],
[42,41,36,37,36,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,68,36,56,19,39,36],
[42,0,46,34,42,22,41,47],
[13,35,0,14,33,3,21,9],
[45,47,67,0,42,43,40,41],
[25,39,48,39,0,22,21,12],
[62,59,78,38,59,0,53,71],
[42,40,60,41,60,28,0,46],
[45,34,72,40,69,10,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,42,43,42,47,23],
[38,0,45,45,44,34,46,42],
[39,36,0,36,42,28,45,28],
[39,36,45,0,36,27,51,29],
[38,37,39,45,0,37,45,32],
[39,47,53,54,44,0,51,37],
[34,35,36,30,36,30,0,23],
[58,39,53,52,49,44,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,37,42,55,43,32,39],
[58,0,45,38,50,37,26,49],
[44,36,0,35,63,41,44,44],
[39,43,46,0,57,52,48,52],
[26,31,18,24,0,25,26,49],
[38,44,40,29,56,0,35,48],
[49,55,37,33,55,46,0,50],
[42,32,37,29,32,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,35,32,36,37,36,41],
[47,0,39,37,46,40,45,41],
[46,42,0,41,44,40,44,42],
[49,44,40,0,43,48,40,46],
[45,35,37,38,0,47,38,35],
[44,41,41,33,34,0,39,37],
[45,36,37,41,43,42,0,40],
[40,40,39,35,46,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,41,46,40,44,40],
[39,0,33,39,42,44,38,37],
[40,48,0,52,49,50,46,44],
[40,42,29,0,34,49,38,33],
[35,39,32,47,0,43,44,33],
[41,37,31,32,38,0,39,24],
[37,43,35,43,37,42,0,30],
[41,44,37,48,48,57,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,53,53,81,37,63,37],
[16,0,16,37,37,16,37,37],
[28,65,0,71,49,55,81,47],
[28,44,10,0,28,34,60,26],
[0,44,32,53,0,16,63,16],
[44,65,26,47,65,0,47,47],
[18,44,0,21,18,34,0,0],
[44,44,34,55,65,34,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,44,34,39,37,48],
[33,0,42,44,30,34,39,46],
[34,39,0,40,36,39,41,47],
[37,37,41,0,33,36,39,46],
[47,51,45,48,0,43,39,47],
[42,47,42,45,38,0,41,53],
[44,42,40,42,42,40,0,41],
[33,35,34,35,34,28,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,37,50,48,48,34],
[38,0,49,52,54,36,38,34],
[38,32,0,34,38,32,34,34],
[44,29,47,0,45,38,42,44],
[31,27,43,36,0,26,32,30],
[33,45,49,43,55,0,37,38],
[33,43,47,39,49,44,0,27],
[47,47,47,37,51,43,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,43,33,39,35,45],
[47,0,32,42,26,41,39,35],
[44,49,0,48,42,32,32,40],
[38,39,33,0,30,30,33,24],
[48,55,39,51,0,45,42,39],
[42,40,49,51,36,0,42,42],
[46,42,49,48,39,39,0,50],
[36,46,41,57,42,39,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,44,39,47,48,43],
[39,0,42,49,46,46,46,50],
[41,39,0,45,41,50,48,48],
[37,32,36,0,34,43,43,44],
[42,35,40,47,0,46,46,44],
[34,35,31,38,35,0,39,36],
[33,35,33,38,35,42,0,35],
[38,31,33,37,37,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,71,62,57,49,52,49],
[41,0,68,46,44,55,39,36],
[10,13,0,49,44,25,15,22],
[19,35,32,0,45,26,19,32],
[24,37,37,36,0,31,23,37],
[32,26,56,55,50,0,35,42],
[29,42,66,62,58,46,0,49],
[32,45,59,49,44,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,24,37,36,36,33,37],
[38,0,33,41,38,36,36,32],
[57,48,0,47,50,39,41,47],
[44,40,34,0,41,37,32,45],
[45,43,31,40,0,39,37,39],
[45,45,42,44,42,0,36,42],
[48,45,40,49,44,45,0,49],
[44,49,34,36,42,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,51,42,48,41,38],
[39,0,40,39,39,39,37,39],
[32,41,0,38,42,36,32,37],
[30,42,43,0,42,46,40,44],
[39,42,39,39,0,41,38,36],
[33,42,45,35,40,0,33,40],
[40,44,49,41,43,48,0,42],
[43,42,44,37,45,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,39,40,40,46,40],
[44,0,40,44,42,43,47,38],
[43,41,0,38,37,38,42,32],
[42,37,43,0,37,44,41,36],
[41,39,44,44,0,46,44,44],
[41,38,43,37,35,0,44,32],
[35,34,39,40,37,37,0,33],
[41,43,49,45,37,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,29,49,33,34,42,23],
[48,0,55,57,57,37,57,41],
[52,26,0,56,43,42,42,26],
[32,24,25,0,22,32,29,23],
[48,24,38,59,0,37,41,20],
[47,44,39,49,44,0,46,45],
[39,24,39,52,40,35,0,17],
[58,40,55,58,61,36,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,45,48,50,42,62,39],
[27,0,44,32,36,28,61,39],
[36,37,0,34,30,35,51,36],
[33,49,47,0,30,39,56,33],
[31,45,51,51,0,36,66,39],
[39,53,46,42,45,0,54,41],
[19,20,30,25,15,27,0,22],
[42,42,45,48,42,40,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,39,44,37,50,46,47],
[33,0,30,34,35,41,41,40],
[42,51,0,36,42,50,46,47],
[37,47,45,0,44,52,47,48],
[44,46,39,37,0,48,39,41],
[31,40,31,29,33,0,34,41],
[35,40,35,34,42,47,0,45],
[34,41,34,33,40,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,30,30,11,23,23,38],
[57,0,43,55,43,55,51,38],
[51,38,0,30,37,40,37,38],
[51,26,51,0,51,40,25,51],
[70,38,44,30,0,38,37,39],
[58,26,41,41,43,0,34,47],
[58,30,44,56,44,47,0,45],
[43,43,43,30,42,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,46,43,34,46,45,47],
[45,0,49,31,38,47,40,43],
[35,32,0,33,35,41,36,44],
[38,50,48,0,42,43,48,47],
[47,43,46,39,0,44,43,43],
[35,34,40,38,37,0,45,49],
[36,41,45,33,38,36,0,43],
[34,38,37,34,38,32,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,51,71,31,41,40,46],
[25,0,45,69,34,58,40,53],
[30,36,0,39,42,42,28,24],
[10,12,42,0,30,35,25,21],
[50,47,39,51,0,46,34,51],
[40,23,39,46,35,0,18,31],
[41,41,53,56,47,63,0,34],
[35,28,57,60,30,50,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,47,47,39,44,47,44],
[40,0,47,43,46,42,50,51],
[34,34,0,37,40,37,43,38],
[34,38,44,0,38,35,47,46],
[42,35,41,43,0,37,43,41],
[37,39,44,46,44,0,51,42],
[34,31,38,34,38,30,0,35],
[37,30,43,35,40,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,42,55,39,46,53],
[37,0,45,27,42,24,27,34],
[37,36,0,44,41,45,45,52],
[39,54,37,0,40,37,41,50],
[26,39,40,41,0,43,33,46],
[42,57,36,44,38,0,42,58],
[35,54,36,40,48,39,0,51],
[28,47,29,31,35,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,33,35,39,39,41],
[49,0,44,42,45,37,44,43],
[44,37,0,32,43,46,38,44],
[48,39,49,0,47,46,45,43],
[46,36,38,34,0,38,40,41],
[42,44,35,35,43,0,47,47],
[42,37,43,36,41,34,0,48],
[40,38,37,38,40,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,40,37,44,39,41],
[36,0,43,35,35,39,34,40],
[37,38,0,44,34,43,32,41],
[41,46,37,0,39,42,36,39],
[44,46,47,42,0,44,33,46],
[37,42,38,39,37,0,39,35],
[42,47,49,45,48,42,0,40],
[40,41,40,42,35,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,42,39,25,37,29],
[50,0,34,33,22,39,24,14],
[53,47,0,48,29,42,26,23],
[39,48,33,0,40,27,26,30],
[42,59,52,41,0,38,41,45],
[56,42,39,54,43,0,37,32],
[44,57,55,55,40,44,0,40],
[52,67,58,51,36,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,50,47,49,44,48,40],
[51,0,55,39,36,36,43,48],
[31,26,0,25,29,31,36,21],
[34,42,56,0,46,49,44,26],
[32,45,52,35,0,47,45,43],
[37,45,50,32,34,0,40,36],
[33,38,45,37,36,41,0,34],
[41,33,60,55,38,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,42,44,50,50,40,45],
[31,0,42,46,35,54,28,45],
[39,39,0,29,24,36,26,35],
[37,35,52,0,32,41,42,40],
[31,46,57,49,0,38,47,49],
[31,27,45,40,43,0,25,43],
[41,53,55,39,34,56,0,46],
[36,36,46,41,32,38,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,29,38,32,26,32],
[42,0,50,46,35,46,36,26],
[45,31,0,31,32,41,37,26],
[52,35,50,0,40,48,41,47],
[43,46,49,41,0,36,38,43],
[49,35,40,33,45,0,43,47],
[55,45,44,40,43,38,0,45],
[49,55,55,34,38,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,43,42,47,49,39],
[39,0,32,39,33,38,44,41],
[46,49,0,50,37,43,54,47],
[38,42,31,0,27,37,43,38],
[39,48,44,54,0,41,54,48],
[34,43,38,44,40,0,54,44],
[32,37,27,38,27,27,0,39],
[42,40,34,43,33,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,36,49,43,47,31,49],
[40,0,44,45,29,43,32,33],
[45,37,0,46,46,51,38,38],
[32,36,35,0,33,44,30,38],
[38,52,35,48,0,50,43,45],
[34,38,30,37,31,0,38,39],
[50,49,43,51,38,43,0,40],
[32,48,43,43,36,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,41,38,50,26,38,61],
[26,0,9,29,27,26,15,34],
[40,72,0,55,54,41,56,62],
[43,52,26,0,45,38,37,52],
[31,54,27,36,0,25,25,52],
[55,55,40,43,56,0,56,64],
[43,66,25,44,56,25,0,55],
[20,47,19,29,29,17,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,41,50,37,43,41],
[39,0,37,42,47,33,40,35],
[40,44,0,46,42,41,45,41],
[40,39,35,0,43,31,38,35],
[31,34,39,38,0,38,40,39],
[44,48,40,50,43,0,52,41],
[38,41,36,43,41,29,0,38],
[40,46,40,46,42,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,23,36,32,37,35],
[47,0,45,37,42,40,39,42],
[49,36,0,34,39,37,34,41],
[58,44,47,0,45,36,46,47],
[45,39,42,36,0,42,44,46],
[49,41,44,45,39,0,46,47],
[44,42,47,35,37,35,0,44],
[46,39,40,34,35,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,32,31,33,36,42],
[49,0,48,38,28,45,39,48],
[47,33,0,32,41,41,35,34],
[49,43,49,0,35,45,29,47],
[50,53,40,46,0,47,43,51],
[48,36,40,36,34,0,46,36],
[45,42,46,52,38,35,0,41],
[39,33,47,34,30,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,36,54,37,40,43],
[33,0,44,33,47,34,38,33],
[32,37,0,27,51,29,44,39],
[45,48,54,0,59,45,44,35],
[27,34,30,22,0,18,32,24],
[44,47,52,36,63,0,46,43],
[41,43,37,37,49,35,0,30],
[38,48,42,46,57,38,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,32,45,42,32,32,45],
[36,0,35,38,30,25,43,41],
[49,46,0,55,51,43,38,51],
[36,43,26,0,33,27,39,42],
[39,51,30,48,0,30,34,45],
[49,56,38,54,51,0,44,46],
[49,38,43,42,47,37,0,55],
[36,40,30,39,36,35,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,37,37,39,41,35],
[43,0,38,42,45,33,37,37],
[46,43,0,38,46,35,38,42],
[44,39,43,0,34,34,37,27],
[44,36,35,47,0,41,42,40],
[42,48,46,47,40,0,39,34],
[40,44,43,44,39,42,0,33],
[46,44,39,54,41,47,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,46,44,47,40,43],
[39,0,55,43,49,43,40,39],
[35,26,0,38,36,36,35,35],
[35,38,43,0,28,30,30,27],
[37,32,45,53,0,38,37,33],
[34,38,45,51,43,0,41,41],
[41,41,46,51,44,40,0,45],
[38,42,46,54,48,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,50,43,38,49,37,47],
[39,0,46,38,24,35,48,62],
[31,35,0,38,18,36,44,32],
[38,43,43,0,27,45,38,53],
[43,57,63,54,0,64,38,53],
[32,46,45,36,17,0,36,46],
[44,33,37,43,43,45,0,34],
[34,19,49,28,28,35,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,44,40,41,55,32,48],
[30,0,32,32,22,29,23,38],
[37,49,0,49,34,34,41,34],
[41,49,32,0,28,36,30,34],
[40,59,47,53,0,51,45,51],
[26,52,47,45,30,0,30,31],
[49,58,40,51,36,51,0,56],
[33,43,47,47,30,50,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,47,47,48,47,46],
[42,0,40,50,48,49,40,41],
[42,41,0,40,39,41,40,42],
[34,31,41,0,38,43,38,37],
[34,33,42,43,0,41,36,35],
[33,32,40,38,40,0,45,33],
[34,41,41,43,45,36,0,41],
[35,40,39,44,46,48,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,42,48,39,39,43],
[45,0,47,40,41,43,37,42],
[37,34,0,41,41,42,43,40],
[39,41,40,0,48,37,45,46],
[33,40,40,33,0,38,40,37],
[42,38,39,44,43,0,46,40],
[42,44,38,36,41,35,0,39],
[38,39,41,35,44,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,26,30,39,24,25,43],
[52,0,42,42,46,44,27,40],
[55,39,0,51,46,43,44,48],
[51,39,30,0,44,32,41,50],
[42,35,35,37,0,42,21,35],
[57,37,38,49,39,0,35,49],
[56,54,37,40,60,46,0,45],
[38,41,33,31,46,32,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,29,42,35,38,37],
[47,0,44,29,41,38,38,37],
[42,37,0,36,39,35,39,35],
[52,52,45,0,44,46,40,41],
[39,40,42,37,0,42,41,38],
[46,43,46,35,39,0,38,33],
[43,43,42,41,40,43,0,44],
[44,44,46,40,43,48,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,41,46,50,40,51,51],
[27,0,41,32,38,40,37,42],
[40,40,0,36,45,36,43,40],
[35,49,45,0,42,42,38,40],
[31,43,36,39,0,33,34,33],
[41,41,45,39,48,0,51,49],
[30,44,38,43,47,30,0,36],
[30,39,41,41,48,32,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,41,48,46,47,38],
[34,0,33,33,46,35,44,30],
[40,48,0,36,50,42,38,40],
[40,48,45,0,43,40,30,43],
[33,35,31,38,0,27,38,34],
[35,46,39,41,54,0,32,34],
[34,37,43,51,43,49,0,37],
[43,51,41,38,47,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,34,45,46,50,43],
[42,0,31,42,42,35,34,46],
[44,50,0,38,45,43,47,47],
[47,39,43,0,54,53,52,48],
[36,39,36,27,0,37,42,36],
[35,46,38,28,44,0,47,45],
[31,47,34,29,39,34,0,40],
[38,35,34,33,45,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,34,40,41,41,44],
[40,0,50,39,48,38,34,48],
[37,31,0,26,33,30,27,38],
[47,42,55,0,38,43,37,50],
[41,33,48,43,0,38,37,48],
[40,43,51,38,43,0,38,35],
[40,47,54,44,44,43,0,42],
[37,33,43,31,33,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,51,37,46,30,27,43],
[41,0,44,29,47,47,36,38],
[30,37,0,17,41,42,20,20],
[44,52,64,0,42,42,47,37],
[35,34,40,39,0,52,32,33],
[51,34,39,39,29,0,29,31],
[54,45,61,34,49,52,0,53],
[38,43,61,44,48,50,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,43,44,39,45,34],
[38,0,49,49,45,49,50,43],
[39,32,0,38,32,41,39,35],
[38,32,43,0,42,45,45,31],
[37,36,49,39,0,46,43,33],
[42,32,40,36,35,0,40,34],
[36,31,42,36,38,41,0,32],
[47,38,46,50,48,47,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,48,42,44,39,49],
[40,0,33,44,47,39,35,42],
[37,48,0,46,46,44,39,47],
[33,37,35,0,41,38,33,42],
[39,34,35,40,0,37,36,43],
[37,42,37,43,44,0,41,48],
[42,46,42,48,45,40,0,46],
[32,39,34,39,38,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,41,43,46,42,45],
[38,0,38,41,34,40,38,38],
[45,43,0,39,53,49,50,45],
[40,40,42,0,45,43,42,36],
[38,47,28,36,0,33,41,37],
[35,41,32,38,48,0,44,39],
[39,43,31,39,40,37,0,41],
[36,43,36,45,44,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,43,39,53,44,28],
[38,0,35,29,38,44,31,34],
[45,46,0,42,31,53,40,41],
[38,52,39,0,41,41,36,47],
[42,43,50,40,0,50,42,38],
[28,37,28,40,31,0,33,35],
[37,50,41,45,39,48,0,39],
[53,47,40,34,43,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,34,41,35,41,42],
[37,0,52,37,38,41,48,38],
[37,29,0,43,37,38,42,40],
[47,44,38,0,36,43,47,41],
[40,43,44,45,0,47,54,48],
[46,40,43,38,34,0,47,44],
[40,33,39,34,27,34,0,33],
[39,43,41,40,33,37,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,32,38,40,43,44],
[41,0,38,34,26,37,46,36],
[36,43,0,42,40,46,48,51],
[49,47,39,0,41,47,48,43],
[43,55,41,40,0,40,54,42],
[41,44,35,34,41,0,44,38],
[38,35,33,33,27,37,0,36],
[37,45,30,38,39,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,41,44,39,53,48,48],
[29,0,32,34,37,39,35,38],
[40,49,0,45,45,54,54,45],
[37,47,36,0,40,48,46,46],
[42,44,36,41,0,44,42,48],
[28,42,27,33,37,0,45,45],
[33,46,27,35,39,36,0,39],
[33,43,36,35,33,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,31,44,44,41,43,42],
[50,0,40,43,41,33,36,45],
[50,41,0,55,30,34,50,53],
[37,38,26,0,37,41,40,51],
[37,40,51,44,0,40,40,41],
[40,48,47,40,41,0,50,47],
[38,45,31,41,41,31,0,47],
[39,36,28,30,40,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,44,50,39,45,39],
[37,0,45,36,43,31,43,31],
[33,36,0,25,38,35,35,32],
[37,45,56,0,47,43,51,44],
[31,38,43,34,0,33,36,37],
[42,50,46,38,48,0,51,44],
[36,38,46,30,45,30,0,33],
[42,50,49,37,44,37,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,37,30,31,49,43],
[39,0,37,38,37,42,41,44],
[44,44,0,37,54,39,44,49],
[44,43,44,0,44,34,52,51],
[51,44,27,37,0,41,45,40],
[50,39,42,47,40,0,54,45],
[32,40,37,29,36,27,0,42],
[38,37,32,30,41,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,32,38,39,36,45,33],
[42,0,36,41,31,31,40,32],
[49,45,0,48,42,40,49,45],
[43,40,33,0,34,31,37,37],
[42,50,39,47,0,43,44,40],
[45,50,41,50,38,0,46,46],
[36,41,32,44,37,35,0,36],
[48,49,36,44,41,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,34,32,42,37,39],
[40,0,31,36,19,38,32,37],
[46,50,0,46,36,45,27,44],
[47,45,35,0,37,47,43,38],
[49,62,45,44,0,46,37,51],
[39,43,36,34,35,0,36,41],
[44,49,54,38,44,45,0,48],
[42,44,37,43,30,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,42,35,41,39,38],
[35,0,50,41,43,33,35,47],
[31,31,0,35,32,35,35,42],
[39,40,46,0,46,43,34,38],
[46,38,49,35,0,41,34,40],
[40,48,46,38,40,0,47,36],
[42,46,46,47,47,34,0,44],
[43,34,39,43,41,45,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,39,38,46,33,35],
[38,0,42,35,55,37,41,37],
[33,39,0,31,34,28,33,30],
[42,46,50,0,57,52,42,39],
[43,26,47,24,0,38,35,36],
[35,44,53,29,43,0,38,33],
[48,40,48,39,46,43,0,42],
[46,44,51,42,45,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,38,49,41,32,46],
[38,0,52,40,51,46,36,51],
[42,29,0,39,44,30,38,48],
[43,41,42,0,52,41,39,45],
[32,30,37,29,0,37,34,35],
[40,35,51,40,44,0,40,39],
[49,45,43,42,47,41,0,30],
[35,30,33,36,46,42,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,28,33,32,43,38,40],
[41,0,41,43,40,49,35,41],
[53,40,0,38,42,46,40,56],
[48,38,43,0,43,48,41,45],
[49,41,39,38,0,45,43,49],
[38,32,35,33,36,0,31,41],
[43,46,41,40,38,50,0,48],
[41,40,25,36,32,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,22,27,19,21,32],
[41,0,58,44,27,19,27,37],
[44,23,0,47,13,14,15,15],
[59,37,34,0,21,34,30,29],
[54,54,68,60,0,54,36,43],
[62,62,67,47,27,0,42,29],
[60,54,66,51,45,39,0,36],
[49,44,66,52,38,52,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,31,48,47,39,43],
[42,0,41,33,49,46,44,41],
[44,40,0,38,47,36,35,44],
[50,48,43,0,54,45,40,45],
[33,32,34,27,0,49,40,33],
[34,35,45,36,32,0,27,39],
[42,37,46,41,41,54,0,42],
[38,40,37,36,48,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,37,44,29,54,41,46],
[33,0,40,25,30,40,43,38],
[44,41,0,43,51,52,56,38],
[37,56,38,0,42,52,31,38],
[52,51,30,39,0,49,58,32],
[27,41,29,29,32,0,29,39],
[40,38,25,50,23,52,0,29],
[35,43,43,43,49,42,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,39,44,36,44,38],
[40,0,54,48,46,52,47,42],
[41,27,0,32,37,29,40,37],
[42,33,49,0,45,44,50,48],
[37,35,44,36,0,33,45,30],
[45,29,52,37,48,0,33,30],
[37,34,41,31,36,48,0,44],
[43,39,44,33,51,51,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,30,34,29,33,27],
[45,0,36,36,41,34,26,34],
[50,45,0,35,36,30,37,37],
[51,45,46,0,42,41,40,38],
[47,40,45,39,0,37,36,33],
[52,47,51,40,44,0,43,43],
[48,55,44,41,45,38,0,48],
[54,47,44,43,48,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,46,54,57,42,51,36],
[28,0,41,44,49,34,47,37],
[35,40,0,41,42,46,39,41],
[27,37,40,0,44,36,45,39],
[24,32,39,37,0,30,45,41],
[39,47,35,45,51,0,45,36],
[30,34,42,36,36,36,0,24],
[45,44,40,42,40,45,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,35,38,35,39,29],
[44,0,42,33,44,34,44,35],
[46,39,0,37,40,40,46,40],
[46,48,44,0,40,36,45,35],
[43,37,41,41,0,41,44,37],
[46,47,41,45,40,0,45,43],
[42,37,35,36,37,36,0,34],
[52,46,41,46,44,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,41,40,46,39,32,40],
[30,0,31,36,34,38,29,32],
[40,50,0,42,40,42,39,36],
[41,45,39,0,45,44,47,41],
[35,47,41,36,0,43,36,38],
[42,43,39,37,38,0,36,35],
[49,52,42,34,45,45,0,41],
[41,49,45,40,43,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,0,55,81,23,23,0],
[49,0,0,81,81,49,49,26],
[81,81,0,81,81,49,49,26],
[26,0,0,0,81,26,49,26],
[0,0,0,0,0,0,0,0],
[58,32,32,55,81,0,23,32],
[58,32,32,32,81,58,0,58],
[81,55,55,55,81,49,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,49,26,40,28,21,31],
[47,0,40,48,50,33,35,48],
[32,41,0,23,38,30,29,38],
[55,33,58,0,39,30,33,40],
[41,31,43,42,0,38,31,45],
[53,48,51,51,43,0,44,38],
[60,46,52,48,50,37,0,54],
[50,33,43,41,36,43,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,33,48,46,51,49,41],
[34,0,42,46,38,46,42,37],
[48,39,0,38,40,49,43,44],
[33,35,43,0,44,47,42,43],
[35,43,41,37,0,45,42,44],
[30,35,32,34,36,0,41,33],
[32,39,38,39,39,40,0,35],
[40,44,37,38,37,48,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,44,37,28,41,50],
[39,0,40,35,29,26,28,35],
[46,41,0,53,44,44,40,52],
[37,46,28,0,38,38,31,45],
[44,52,37,43,0,30,38,50],
[53,55,37,43,51,0,48,58],
[40,53,41,50,43,33,0,61],
[31,46,29,36,31,23,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,41,47,43,38,55],
[33,0,54,38,44,55,42,46],
[32,27,0,35,49,36,44,37],
[40,43,46,0,46,41,52,43],
[34,37,32,35,0,40,48,37],
[38,26,45,40,41,0,38,42],
[43,39,37,29,33,43,0,41],
[26,35,44,38,44,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,33,45,37,46,39,34],
[36,0,38,44,37,43,33,37],
[48,43,0,40,35,42,42,39],
[36,37,41,0,37,37,37,33],
[44,44,46,44,0,54,43,40],
[35,38,39,44,27,0,34,31],
[42,48,39,44,38,47,0,41],
[47,44,42,48,41,50,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,47,41,41,43,45,45],
[43,0,44,34,43,39,29,37],
[34,37,0,29,41,37,41,35],
[40,47,52,0,50,47,55,55],
[40,38,40,31,0,35,45,44],
[38,42,44,34,46,0,41,51],
[36,52,40,26,36,40,0,45],
[36,44,46,26,37,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,39,29,43,32,23],
[45,0,47,41,41,54,41,30],
[50,34,0,38,44,47,37,37],
[42,40,43,0,40,49,34,39],
[52,40,37,41,0,42,32,34],
[38,27,34,32,39,0,26,34],
[49,40,44,47,49,55,0,49],
[58,51,44,42,47,47,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,44,43,49,46,42],
[36,0,37,43,51,49,48,52],
[41,44,0,40,50,56,43,54],
[37,38,41,0,31,51,46,40],
[38,30,31,50,0,53,49,40],
[32,32,25,30,28,0,23,39],
[35,33,38,35,32,58,0,37],
[39,29,27,41,41,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,41,45,49,45,53],
[42,0,44,32,46,43,44,46],
[35,37,0,35,41,36,42,45],
[40,49,46,0,38,42,41,40],
[36,35,40,43,0,38,38,44],
[32,38,45,39,43,0,36,42],
[36,37,39,40,43,45,0,45],
[28,35,36,41,37,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,43,41,40,46,43],
[36,0,38,45,47,42,45,38],
[41,43,0,44,36,43,47,42],
[38,36,37,0,45,41,42,39],
[40,34,45,36,0,41,43,39],
[41,39,38,40,40,0,42,41],
[35,36,34,39,38,39,0,34],
[38,43,39,42,42,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,42,42,42,42,39,46],
[45,0,43,47,37,50,44,46],
[39,38,0,44,34,44,42,47],
[39,34,37,0,35,45,39,46],
[39,44,47,46,0,48,38,47],
[39,31,37,36,33,0,36,44],
[42,37,39,42,43,45,0,46],
[35,35,34,35,34,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,40,49,41,40,43],
[42,0,40,36,42,37,38,40],
[44,41,0,43,46,47,40,47],
[41,45,38,0,44,41,41,48],
[32,39,35,37,0,40,33,50],
[40,44,34,40,41,0,36,47],
[41,43,41,40,48,45,0,47],
[38,41,34,33,31,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,36,46,33,44,39],
[46,0,42,36,47,42,36,34],
[43,39,0,38,51,35,32,44],
[45,45,43,0,53,40,36,46],
[35,34,30,28,0,30,24,31],
[48,39,46,41,51,0,43,45],
[37,45,49,45,57,38,0,41],
[42,47,37,35,50,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,20,20,23,60,35,53],
[43,0,42,23,23,58,38,43],
[61,39,0,41,44,81,56,78],
[61,58,40,0,63,78,53,78],
[58,58,37,18,0,58,33,58],
[21,23,0,3,23,0,15,58],
[46,43,25,28,48,66,0,63],
[28,38,3,3,23,23,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,43,34,34,41,40],
[39,0,42,39,38,45,37,47],
[44,39,0,44,33,34,40,36],
[38,42,37,0,39,45,43,41],
[47,43,48,42,0,37,42,48],
[47,36,47,36,44,0,34,46],
[40,44,41,38,39,47,0,47],
[41,34,45,40,33,35,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,25,38,59,26,36,48],
[36,0,32,47,32,24,40,37],
[56,49,0,50,55,32,38,49],
[43,34,31,0,53,42,47,59],
[22,49,26,28,0,36,50,62],
[55,57,49,39,45,0,46,46],
[45,41,43,34,31,35,0,66],
[33,44,32,22,19,35,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,42,45,52,34,41],
[35,0,43,36,38,46,34,39],
[42,38,0,39,45,44,35,35],
[39,45,42,0,38,48,36,41],
[36,43,36,43,0,48,42,46],
[29,35,37,33,33,0,27,35],
[47,47,46,45,39,54,0,46],
[40,42,46,40,35,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,32,35,41,31,33,33],
[48,0,35,42,49,36,38,41],
[49,46,0,40,43,39,46,40],
[46,39,41,0,43,33,40,38],
[40,32,38,38,0,40,39,39],
[50,45,42,48,41,0,47,33],
[48,43,35,41,42,34,0,38],
[48,40,41,43,42,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,29,39,42,36,49,41],
[28,0,28,32,27,26,39,32],
[52,53,0,50,33,52,47,47],
[42,49,31,0,33,42,52,29],
[39,54,48,48,0,51,49,42],
[45,55,29,39,30,0,46,36],
[32,42,34,29,32,35,0,41],
[40,49,34,52,39,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,45,22,48,59,43,34],
[59,0,45,45,61,49,33,35],
[36,36,0,11,49,60,23,24],
[59,36,70,0,59,59,34,45],
[33,20,32,22,0,58,32,55],
[22,32,21,22,23,0,21,44],
[38,48,58,47,49,60,0,37],
[47,46,57,36,26,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,49,59,51,44,32],
[38,0,44,49,60,50,42,43],
[39,37,0,56,48,47,43,26],
[32,32,25,0,40,30,37,32],
[22,21,33,41,0,40,30,25],
[30,31,34,51,41,0,32,38],
[37,39,38,44,51,49,0,38],
[49,38,55,49,56,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,63,63,53,44,40,58],
[40,0,67,59,40,45,40,40],
[18,14,0,15,32,10,25,30],
[18,22,66,0,43,30,30,61],
[28,41,49,38,0,31,49,43],
[37,36,71,51,50,0,34,66],
[41,41,56,51,32,47,0,50],
[23,41,51,20,38,15,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,36,57,52,43,68,42],
[26,0,40,49,35,30,66,40],
[45,41,0,39,46,43,63,41],
[24,32,42,0,37,32,72,24],
[29,46,35,44,0,22,50,41],
[38,51,38,49,59,0,64,38],
[13,15,18,9,31,17,0,15],
[39,41,40,57,40,43,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,50,39,45,39,41,33],
[43,0,50,58,43,44,45,34],
[31,31,0,26,32,45,50,45],
[42,23,55,0,47,57,44,38],
[36,38,49,34,0,50,41,44],
[42,37,36,24,31,0,22,22],
[40,36,31,37,40,59,0,41],
[48,47,36,43,37,59,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,32,52,37,28,56,51],
[36,0,45,43,32,36,41,29],
[49,36,0,46,52,36,54,33],
[29,38,35,0,24,22,37,28],
[44,49,29,57,0,33,60,33],
[53,45,45,59,48,0,53,32],
[25,40,27,44,21,28,0,45],
[30,52,48,53,48,49,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,47,43,41,38,44,51],
[31,0,42,43,40,35,35,43],
[34,39,0,38,38,35,33,42],
[38,38,43,0,33,41,38,50],
[40,41,43,48,0,42,36,45],
[43,46,46,40,39,0,44,52],
[37,46,48,43,45,37,0,49],
[30,38,39,31,36,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,38,40,42,42,47],
[38,0,47,39,38,45,38,42],
[44,34,0,34,36,41,43,40],
[43,42,47,0,41,40,46,50],
[41,43,45,40,0,42,45,45],
[39,36,40,41,39,0,44,45],
[39,43,38,35,36,37,0,41],
[34,39,41,31,36,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,31,40,58,32,47,54],
[37,0,44,40,56,35,42,56],
[50,37,0,49,68,51,57,58],
[41,41,32,0,37,46,44,49],
[23,25,13,44,0,30,15,18],
[49,46,30,35,51,0,35,37],
[34,39,24,37,66,46,0,38],
[27,25,23,32,63,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,50,38,48,33,55],
[37,0,41,31,37,30,29,49],
[33,40,0,38,41,42,24,48],
[31,50,43,0,30,38,36,53],
[43,44,40,51,0,43,43,64],
[33,51,39,43,38,0,27,54],
[48,52,57,45,38,54,0,38],
[26,32,33,28,17,27,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,49,39,36,52,37,41],
[49,0,43,44,37,53,41,42],
[32,38,0,41,34,49,36,38],
[42,37,40,0,36,41,41,37],
[45,44,47,45,0,42,34,39],
[29,28,32,40,39,0,36,31],
[44,40,45,40,47,45,0,39],
[40,39,43,44,42,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,40,34,31,37,41],
[49,0,39,40,49,31,44,49],
[52,42,0,40,51,45,41,32],
[41,41,41,0,37,35,48,39],
[47,32,30,44,0,37,33,46],
[50,50,36,46,44,0,41,51],
[44,37,40,33,48,40,0,58],
[40,32,49,42,35,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,42,27,36,34,31,32],
[49,0,51,36,52,41,39,52],
[39,30,0,28,46,33,27,32],
[54,45,53,0,60,52,37,52],
[45,29,35,21,0,32,26,32],
[47,40,48,29,49,0,44,37],
[50,42,54,44,55,37,0,47],
[49,29,49,29,49,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,43,40,40,41,46,36],
[53,0,43,41,46,49,44,38],
[38,38,0,40,43,39,39,36],
[41,40,41,0,41,40,36,40],
[41,35,38,40,0,44,45,39],
[40,32,42,41,37,0,40,37],
[35,37,42,45,36,41,0,45],
[45,43,45,41,42,44,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,22,40,29,33,28,31],
[49,0,34,49,36,30,29,37],
[59,47,0,50,42,44,36,45],
[41,32,31,0,28,26,30,38],
[52,45,39,53,0,42,48,47],
[48,51,37,55,39,0,38,45],
[53,52,45,51,33,43,0,47],
[50,44,36,43,34,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,27,28,35,39,37],
[36,0,32,20,29,45,26,32],
[38,49,0,39,42,47,34,49],
[54,61,42,0,47,57,35,41],
[53,52,39,34,0,48,43,36],
[46,36,34,24,33,0,30,32],
[42,55,47,46,38,51,0,44],
[44,49,32,40,45,49,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,43,71,24,24,43],
[38,0,52,57,62,13,43,23],
[42,29,0,48,57,42,29,42],
[38,24,33,0,52,37,20,18],
[10,19,24,29,0,0,10,0],
[57,68,39,44,81,0,30,34],
[57,38,52,61,71,51,0,51],
[38,58,39,63,81,47,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,32,36,35,43,46],
[38,0,33,33,37,40,39,46],
[40,48,0,42,41,43,41,44],
[49,48,39,0,42,47,46,49],
[45,44,40,39,0,39,40,46],
[46,41,38,34,42,0,44,45],
[38,42,40,35,41,37,0,51],
[35,35,37,32,35,36,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,43,38,32,34,33],
[50,0,42,45,43,42,40,42],
[53,39,0,54,49,50,44,43],
[38,36,27,0,39,33,31,37],
[43,38,32,42,0,43,37,42],
[49,39,31,48,38,0,39,35],
[47,41,37,50,44,42,0,39],
[48,39,38,44,39,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,39,44,46,41,44],
[38,0,45,36,39,41,39,40],
[40,36,0,42,40,41,42,43],
[42,45,39,0,47,44,39,46],
[37,42,41,34,0,39,41,43],
[35,40,40,37,42,0,42,39],
[40,42,39,42,40,39,0,45],
[37,41,38,35,38,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,47,43,42,40,52,40],
[40,0,41,42,45,47,51,42],
[34,40,0,40,42,38,46,38],
[38,39,41,0,43,37,43,34],
[39,36,39,38,0,41,46,42],
[41,34,43,44,40,0,47,42],
[29,30,35,38,35,34,0,34],
[41,39,43,47,39,39,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,24,47,51,26,12,46],
[60,0,41,61,63,37,49,63],
[57,40,0,48,66,43,35,56],
[34,20,33,0,60,20,46,36],
[30,18,15,21,0,29,25,32],
[55,44,38,61,52,0,29,60],
[69,32,46,35,56,52,0,56],
[35,18,25,45,49,21,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,43,38,39,43,44],
[38,0,42,40,40,38,42,42],
[36,39,0,41,41,41,41,40],
[38,41,40,0,37,44,42,42],
[43,41,40,44,0,41,39,44],
[42,43,40,37,40,0,41,41],
[38,39,40,39,42,40,0,41],
[37,39,41,39,37,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,42,44,43,47,30,41],
[33,0,37,37,44,43,27,38],
[39,44,0,41,36,42,36,38],
[37,44,40,0,35,39,33,33],
[38,37,45,46,0,40,37,34],
[34,38,39,42,41,0,33,31],
[51,54,45,48,44,48,0,40],
[40,43,43,48,47,50,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,43,44,55,47,42],
[45,0,44,44,44,40,48,43],
[32,37,0,39,34,40,40,32],
[38,37,42,0,38,40,38,33],
[37,37,47,43,0,44,38,42],
[26,41,41,41,37,0,33,35],
[34,33,41,43,43,48,0,41],
[39,38,49,48,39,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,42,41,36,37,42],
[41,0,41,34,45,33,41,44],
[37,40,0,43,46,42,44,44],
[39,47,38,0,42,38,35,40],
[40,36,35,39,0,39,32,41],
[45,48,39,43,42,0,39,44],
[44,40,37,46,49,42,0,45],
[39,37,37,41,40,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,38,62,38,62,47,57],
[7,0,7,25,7,28,26,41],
[43,74,0,39,37,39,25,58],
[19,56,42,0,26,47,32,57],
[43,74,44,55,0,55,40,63],
[19,53,42,34,26,0,26,42],
[34,55,56,49,41,55,0,56],
[24,40,23,24,18,39,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,40,34,32,36,39],
[37,0,37,39,37,31,36,38],
[43,44,0,49,42,41,36,45],
[41,42,32,0,33,40,39,44],
[47,44,39,48,0,40,40,44],
[49,50,40,41,41,0,42,43],
[45,45,45,42,41,39,0,38],
[42,43,36,37,37,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,41,42,40,46,36],
[40,0,38,43,37,33,44,38],
[37,43,0,35,41,37,44,33],
[40,38,46,0,39,35,41,43],
[39,44,40,42,0,41,45,50],
[41,48,44,46,40,0,46,40],
[35,37,37,40,36,35,0,40],
[45,43,48,38,31,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,46,43,54,43,41],
[42,0,44,46,43,39,49,42],
[40,37,0,41,49,51,38,48],
[35,35,40,0,19,51,34,27],
[38,38,32,62,0,53,43,34],
[27,42,30,30,28,0,30,24],
[38,32,43,47,38,51,0,32],
[40,39,33,54,47,57,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,35,49,53,57,50,67],
[17,0,26,25,44,38,21,47],
[46,55,0,41,39,44,60,59],
[32,56,40,0,53,51,48,61],
[28,37,42,28,0,38,37,41],
[24,43,37,30,43,0,24,38],
[31,60,21,33,44,57,0,60],
[14,34,22,20,40,43,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,40,35,35,37,40],
[47,0,39,44,43,41,42,46],
[47,42,0,38,39,42,40,43],
[41,37,43,0,36,34,38,35],
[46,38,42,45,0,38,43,44],
[46,40,39,47,43,0,42,43],
[44,39,41,43,38,39,0,39],
[41,35,38,46,37,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,44,44,47,48,54],
[41,0,43,38,39,46,36,46],
[37,38,0,40,38,43,36,40],
[37,43,41,0,37,41,37,38],
[37,42,43,44,0,47,37,50],
[34,35,38,40,34,0,36,37],
[33,45,45,44,44,45,0,41],
[27,35,41,43,31,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,39,39,40,44,41],
[43,0,44,46,47,40,51,46],
[41,37,0,47,45,41,44,48],
[42,35,34,0,37,40,40,37],
[42,34,36,44,0,35,37,44],
[41,41,40,41,46,0,47,48],
[37,30,37,41,44,34,0,39],
[40,35,33,44,37,33,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,29,32,47,35,25,47],
[43,0,35,52,52,30,55,48],
[52,46,0,32,58,47,35,49],
[49,29,49,0,63,52,50,55],
[34,29,23,18,0,25,18,40],
[46,51,34,29,56,0,37,51],
[56,26,46,31,63,44,0,58],
[34,33,32,26,41,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,51,51,46,44,43],
[44,0,39,46,45,52,47,42],
[35,42,0,46,40,49,41,39],
[30,35,35,0,39,36,43,30],
[30,36,41,42,0,43,36,36],
[35,29,32,45,38,0,35,25],
[37,34,40,38,45,46,0,36],
[38,39,42,51,45,56,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,45,40,39,46,45],
[36,0,39,43,39,41,44,43],
[38,42,0,42,38,40,36,46],
[36,38,39,0,42,41,39,45],
[41,42,43,39,0,34,43,46],
[42,40,41,40,47,0,44,44],
[35,37,45,42,38,37,0,43],
[36,38,35,36,35,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,53,38,38,42,47,49],
[44,0,42,38,40,34,56,48],
[28,39,0,28,33,38,36,40],
[43,43,53,0,34,37,37,43],
[43,41,48,47,0,32,50,45],
[39,47,43,44,49,0,51,50],
[34,25,45,44,31,30,0,43],
[32,33,41,38,36,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,34,47,34,56,49,42],
[29,0,43,19,27,56,48,48],
[47,38,0,33,29,59,55,32],
[34,62,48,0,43,51,56,59],
[47,54,52,38,0,68,65,44],
[25,25,22,30,13,0,35,45],
[32,33,26,25,16,46,0,40],
[39,33,49,22,37,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,72,21,35,35,22,38],
[45,0,40,45,59,60,59,38],
[9,41,0,18,32,30,31,46],
[60,36,63,0,59,52,33,60],
[46,22,49,22,0,70,31,46],
[46,21,51,29,11,0,33,38],
[59,22,50,48,50,48,0,56],
[43,43,35,21,35,43,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,43,50,48,38,43],
[43,0,39,39,40,42,32,43],
[36,42,0,44,42,52,43,40],
[38,42,37,0,50,57,49,48],
[31,41,39,31,0,49,37,45],
[33,39,29,24,32,0,27,40],
[43,49,38,32,44,54,0,42],
[38,38,41,33,36,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,45,43,49,37,36],
[39,0,39,39,50,38,44,35],
[40,42,0,34,48,39,47,46],
[36,42,47,0,41,41,41,40],
[38,31,33,40,0,37,42,40],
[32,43,42,40,44,0,46,42],
[44,37,34,40,39,35,0,38],
[45,46,35,41,41,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,40,42,43,40,40],
[40,0,39,40,41,41,33,40],
[38,42,0,42,40,38,31,35],
[41,41,39,0,37,43,41,40],
[39,40,41,44,0,46,41,41],
[38,40,43,38,35,0,44,41],
[41,48,50,40,40,37,0,36],
[41,41,46,41,40,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,34,32,33,38,32],
[46,0,43,32,34,37,42,36],
[51,38,0,41,43,37,38,37],
[47,49,40,0,39,38,40,41],
[49,47,38,42,0,47,43,46],
[48,44,44,43,34,0,34,44],
[43,39,43,41,38,47,0,44],
[49,45,44,40,35,37,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,44,46,44,39,48],
[34,0,39,41,26,45,35,32],
[39,42,0,43,40,43,32,39],
[37,40,38,0,48,40,39,36],
[35,55,41,33,0,43,44,40],
[37,36,38,41,38,0,38,37],
[42,46,49,42,37,43,0,44],
[33,49,42,45,41,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,50,44,45,38,43],
[38,0,38,35,29,30,39,46],
[35,43,0,44,36,41,40,48],
[31,46,37,0,42,44,46,44],
[37,52,45,39,0,36,36,45],
[36,51,40,37,45,0,44,36],
[43,42,41,35,45,37,0,43],
[38,35,33,37,36,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,37,44,37,39,30],
[50,0,43,37,50,48,40,31],
[48,38,0,36,49,36,28,38],
[44,44,45,0,49,53,48,39],
[37,31,32,32,0,20,30,17],
[44,33,45,28,61,0,32,25],
[42,41,53,33,51,49,0,46],
[51,50,43,42,64,56,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,43,39,42,37,30],
[43,0,43,43,34,40,33,38],
[35,38,0,42,37,42,33,31],
[38,38,39,0,39,38,32,34],
[42,47,44,42,0,38,32,43],
[39,41,39,43,43,0,35,38],
[44,48,48,49,49,46,0,36],
[51,43,50,47,38,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,26,29,35,38,39,32],
[35,0,37,33,37,32,47,35],
[55,44,0,44,51,41,34,48],
[52,48,37,0,42,44,45,52],
[46,44,30,39,0,31,45,44],
[43,49,40,37,50,0,43,45],
[42,34,47,36,36,38,0,45],
[49,46,33,29,37,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,42,43,38,54,43],
[40,0,40,43,39,32,49,38],
[42,41,0,40,47,34,55,44],
[39,38,41,0,44,34,48,45],
[38,42,34,37,0,41,57,45],
[43,49,47,47,40,0,51,50],
[27,32,26,33,24,30,0,30],
[38,43,37,36,36,31,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,29,42,36,43,37,39],
[42,0,37,49,41,53,41,46],
[52,44,0,46,39,46,42,42],
[39,32,35,0,32,36,39,32],
[45,40,42,49,0,43,46,42],
[38,28,35,45,38,0,43,40],
[44,40,39,42,35,38,0,39],
[42,35,39,49,39,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,51,48,48,38,33,43],
[41,0,41,38,36,39,35,40],
[30,40,0,33,38,40,41,37],
[33,43,48,0,37,47,38,46],
[33,45,43,44,0,39,41,37],
[43,42,41,34,42,0,37,42],
[48,46,40,43,40,44,0,31],
[38,41,44,35,44,39,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,39,32,34,39,42],
[42,0,32,39,28,30,34,32],
[40,49,0,47,40,34,48,45],
[42,42,34,0,38,35,39,31],
[49,53,41,43,0,40,47,47],
[47,51,47,46,41,0,45,40],
[42,47,33,42,34,36,0,34],
[39,49,36,50,34,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,35,40,43,40,44],
[42,0,36,38,37,37,39,37],
[40,45,0,38,45,43,42,50],
[46,43,43,0,38,39,43,48],
[41,44,36,43,0,38,38,45],
[38,44,38,42,43,0,39,47],
[41,42,39,38,43,42,0,38],
[37,44,31,33,36,34,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,80,59,44,45,26],
[36,0,21,60,40,39,41,25],
[37,60,0,60,40,54,55,41],
[1,21,21,0,16,20,20,0],
[22,41,41,65,0,40,61,21],
[37,42,27,61,41,0,37,61],
[36,40,26,61,20,44,0,26],
[55,56,40,81,60,20,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,45,36,40,39,40],
[44,0,39,49,36,46,41,41],
[48,42,0,51,40,47,38,43],
[36,32,30,0,35,35,38,35],
[45,45,41,46,0,46,39,43],
[41,35,34,46,35,0,39,40],
[42,40,43,43,42,42,0,41],
[41,40,38,46,38,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,48,40,47,43,39,46],
[34,0,36,40,39,46,39,43],
[33,45,0,42,40,42,31,45],
[41,41,39,0,47,48,37,44],
[34,42,41,34,0,45,37,42],
[38,35,39,33,36,0,41,39],
[42,42,50,44,44,40,0,52],
[35,38,36,37,39,42,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,44,36,41,44,34],
[44,0,43,47,46,41,43,39],
[40,38,0,44,42,49,45,44],
[37,34,37,0,32,43,46,30],
[45,35,39,49,0,45,42,39],
[40,40,32,38,36,0,38,39],
[37,38,36,35,39,43,0,41],
[47,42,37,51,42,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,7,35,23,47,60,65],
[20,0,7,27,36,60,36,36],
[74,74,0,35,59,74,53,65],
[46,54,46,0,39,61,39,30],
[58,45,22,42,0,58,37,65],
[34,21,7,20,23,0,36,50],
[21,45,28,42,44,45,0,65],
[16,45,16,51,16,31,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,49,44,43,31,48],
[32,0,36,49,36,36,33,41],
[34,45,0,54,40,37,36,39],
[32,32,27,0,29,34,33,38],
[37,45,41,52,0,33,41,55],
[38,45,44,47,48,0,42,53],
[50,48,45,48,40,39,0,52],
[33,40,42,43,26,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,40,48,52,53,42],
[37,0,46,35,50,44,49,45],
[38,35,0,41,44,41,43,43],
[41,46,40,0,40,44,56,40],
[33,31,37,41,0,39,41,44],
[29,37,40,37,42,0,44,38],
[28,32,38,25,40,37,0,36],
[39,36,38,41,37,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,34,33,59,26,30,28],
[46,0,44,42,51,35,47,43],
[47,37,0,36,38,34,35,38],
[48,39,45,0,48,33,37,39],
[22,30,43,33,0,32,32,27],
[55,46,47,48,49,0,37,51],
[51,34,46,44,49,44,0,54],
[53,38,43,42,54,30,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,44,44,39,37,42,42],
[47,0,40,44,40,40,33,41],
[37,41,0,40,36,36,35,46],
[37,37,41,0,42,42,33,46],
[42,41,45,39,0,40,28,51],
[44,41,45,39,41,0,39,44],
[39,48,46,48,53,42,0,54],
[39,40,35,35,30,37,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,44,49,43,44,35],
[45,0,45,46,52,43,47,38],
[38,36,0,52,52,50,50,39],
[37,35,29,0,45,38,37,39],
[32,29,29,36,0,37,40,32],
[38,38,31,43,44,0,39,41],
[37,34,31,44,41,42,0,41],
[46,43,42,42,49,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,50,50,49,39,49,47],
[34,0,54,37,44,41,42,42],
[31,27,0,38,36,29,34,38],
[31,44,43,0,52,39,38,45],
[32,37,45,29,0,40,36,39],
[42,40,52,42,41,0,43,40],
[32,39,47,43,45,38,0,45],
[34,39,43,36,42,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,30,53,23,36,34,38],
[41,0,37,46,31,29,35,32],
[51,44,0,45,26,34,39,47],
[28,35,36,0,29,28,43,32],
[58,50,55,52,0,45,39,55],
[45,52,47,53,36,0,44,51],
[47,46,42,38,42,37,0,47],
[43,49,34,49,26,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,42,53,37,42,41],
[31,0,42,35,46,31,34,36],
[38,39,0,41,43,31,40,36],
[39,46,40,0,49,39,37,36],
[28,35,38,32,0,29,30,34],
[44,50,50,42,52,0,35,42],
[39,47,41,44,51,46,0,39],
[40,45,45,45,47,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,54,39,44,45,51],
[37,0,52,42,45,38,37,43],
[32,29,0,35,24,26,32,27],
[27,39,46,0,40,28,41,38],
[42,36,57,41,0,34,45,30],
[37,43,55,53,47,0,49,46],
[36,44,49,40,36,32,0,49],
[30,38,54,43,51,35,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,43,39,45,42,46],
[44,0,40,40,41,46,46,47],
[44,41,0,41,37,47,47,48],
[38,41,40,0,38,41,45,49],
[42,40,44,43,0,46,49,50],
[36,35,34,40,35,0,41,47],
[39,35,34,36,32,40,0,48],
[35,34,33,32,31,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,45,36,47,41,27,48],
[50,0,50,52,54,41,30,51],
[36,31,0,32,45,23,33,42],
[45,29,49,0,53,37,41,52],
[34,27,36,28,0,33,26,40],
[40,40,58,44,48,0,45,53],
[54,51,48,40,55,36,0,63],
[33,30,39,29,41,28,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,34,38,44,45,43],
[40,0,37,37,39,37,44,42],
[35,44,0,40,41,34,42,42],
[47,44,41,0,36,42,38,39],
[43,42,40,45,0,40,41,44],
[37,44,47,39,41,0,38,40],
[36,37,39,43,40,43,0,41],
[38,39,39,42,37,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,24,19,26,26,34,27],
[55,0,48,44,40,53,41,49],
[57,33,0,40,51,55,52,56],
[62,37,41,0,57,54,49,53],
[55,41,30,24,0,53,44,60],
[55,28,26,27,28,0,41,27],
[47,40,29,32,37,40,0,45],
[54,32,25,28,21,54,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,25,49,33,31,52,27],
[36,0,31,58,29,40,45,24],
[56,50,0,65,45,50,58,38],
[32,23,16,0,19,26,35,18],
[48,52,36,62,0,48,55,42],
[50,41,31,55,33,0,65,30],
[29,36,23,46,26,16,0,24],
[54,57,43,63,39,51,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,44,42,44,45,35],
[32,0,40,40,37,36,39,45],
[34,41,0,27,27,34,36,43],
[37,41,54,0,38,45,45,43],
[39,44,54,43,0,49,35,47],
[37,45,47,36,32,0,37,47],
[36,42,45,36,46,44,0,44],
[46,36,38,38,34,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,38,46,35,52,44],
[35,0,40,32,42,37,40,41],
[32,41,0,33,33,33,42,39],
[43,49,48,0,40,36,40,44],
[35,39,48,41,0,38,43,41],
[46,44,48,45,43,0,35,46],
[29,41,39,41,38,46,0,35],
[37,40,42,37,40,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,42,43,39,41,40],
[41,0,36,47,37,37,34,37],
[37,45,0,39,41,41,35,37],
[39,34,42,0,43,39,32,36],
[38,44,40,38,0,38,34,35],
[42,44,40,42,43,0,39,40],
[40,47,46,49,47,42,0,45],
[41,44,44,45,46,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,41,47,52,39,48],
[33,0,48,37,50,46,43,44],
[37,33,0,47,40,43,34,40],
[40,44,34,0,37,41,26,43],
[34,31,41,44,0,50,32,34],
[29,35,38,40,31,0,33,41],
[42,38,47,55,49,48,0,49],
[33,37,41,38,47,40,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,46,49,45,44,48],
[45,0,44,45,44,40,47,46],
[37,37,0,44,43,44,45,43],
[35,36,37,0,38,36,41,43],
[32,37,38,43,0,41,46,41],
[36,41,37,45,40,0,41,45],
[37,34,36,40,35,40,0,43],
[33,35,38,38,40,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,48,52,37,43,42],
[41,0,30,45,47,42,35,33],
[39,51,0,44,55,50,50,38],
[33,36,37,0,43,43,38,38],
[29,34,26,38,0,35,33,36],
[44,39,31,38,46,0,42,39],
[38,46,31,43,48,39,0,35],
[39,48,43,43,45,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,43,49,42,44,38],
[41,0,43,36,48,43,43,39],
[33,38,0,35,43,36,39,36],
[38,45,46,0,46,38,43,43],
[32,33,38,35,0,38,39,31],
[39,38,45,43,43,0,40,44],
[37,38,42,38,42,41,0,46],
[43,42,45,38,50,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,45,49,63,54,41],
[43,0,38,38,36,51,41,30],
[41,43,0,34,35,42,40,37],
[36,43,47,0,37,52,47,31],
[32,45,46,44,0,48,46,32],
[18,30,39,29,33,0,36,25],
[27,40,41,34,35,45,0,32],
[40,51,44,50,49,56,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,32,49,42,41,39],
[38,0,27,29,36,34,29,27],
[42,54,0,36,42,43,49,42],
[49,52,45,0,50,49,59,40],
[32,45,39,31,0,36,45,36],
[39,47,38,32,45,0,41,43],
[40,52,32,22,36,40,0,25],
[42,54,39,41,45,38,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,34,42,45,36,32],
[43,0,43,32,46,44,38,38],
[46,38,0,39,47,38,43,43],
[47,49,42,0,46,44,42,38],
[39,35,34,35,0,37,31,39],
[36,37,43,37,44,0,36,38],
[45,43,38,39,50,45,0,41],
[49,43,38,43,42,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,36,31,47,42,44,36],
[33,0,27,27,37,24,29,34],
[45,54,0,45,34,31,46,42],
[50,54,36,0,52,31,41,52],
[34,44,47,29,0,26,36,26],
[39,57,50,50,55,0,50,51],
[37,52,35,40,45,31,0,44],
[45,47,39,29,55,30,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,50,35,39,49,40],
[43,0,37,56,45,42,47,38],
[41,44,0,45,43,32,37,38],
[31,25,36,0,31,31,37,27],
[46,36,38,50,0,32,48,38],
[42,39,49,50,49,0,46,42],
[32,34,44,44,33,35,0,33],
[41,43,43,54,43,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,46,34,37,34,37],
[44,0,37,43,49,37,36,38],
[38,44,0,40,42,43,36,36],
[35,38,41,0,44,40,34,43],
[47,32,39,37,0,35,37,37],
[44,44,38,41,46,0,43,40],
[47,45,45,47,44,38,0,41],
[44,43,45,38,44,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,34,45,41,37,39,37],
[39,0,31,51,26,37,39,29],
[47,50,0,57,43,41,54,39],
[36,30,24,0,22,33,30,21],
[40,55,38,59,0,45,49,44],
[44,44,40,48,36,0,47,37],
[42,42,27,51,32,34,0,29],
[44,52,42,60,37,44,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,26,26,32,34,33,30],
[46,0,38,32,35,43,42,39],
[55,43,0,31,42,45,41,42],
[55,49,50,0,40,50,49,49],
[49,46,39,41,0,46,42,44],
[47,38,36,31,35,0,37,42],
[48,39,40,32,39,44,0,37],
[51,42,39,32,37,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,46,48,37,46,39],
[37,0,46,48,48,41,42,39],
[33,35,0,47,46,45,39,36],
[35,33,34,0,36,36,34,31],
[33,33,35,45,0,40,33,32],
[44,40,36,45,41,0,41,37],
[35,39,42,47,48,40,0,41],
[42,42,45,50,49,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,38,49,48,43,35],
[44,0,38,40,44,44,42,41],
[44,43,0,45,50,42,47,37],
[43,41,36,0,40,46,43,37],
[32,37,31,41,0,40,34,32],
[33,37,39,35,41,0,42,34],
[38,39,34,38,47,39,0,35],
[46,40,44,44,49,47,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,40,40,31,29,30],
[37,0,37,41,43,45,40,36],
[47,44,0,48,42,34,36,29],
[41,40,33,0,33,36,28,32],
[41,38,39,48,0,43,31,38],
[50,36,47,45,38,0,45,39],
[52,41,45,53,50,36,0,51],
[51,45,52,49,43,42,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,52,41,40,38,36,36],
[44,0,57,37,44,46,42,47],
[29,24,0,31,27,31,30,24],
[40,44,50,0,41,36,46,50],
[41,37,54,40,0,50,43,40],
[43,35,50,45,31,0,37,30],
[45,39,51,35,38,44,0,41],
[45,34,57,31,41,51,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,18,22,26,22,21,33],
[54,0,30,25,42,48,58,44],
[63,51,0,24,29,54,50,34],
[59,56,57,0,39,44,56,43],
[55,39,52,42,0,42,59,36],
[59,33,27,37,39,0,46,30],
[60,23,31,25,22,35,0,22],
[48,37,47,38,45,51,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,53,44,43,51,51,30],
[47,0,47,68,44,35,78,48],
[28,34,0,42,43,42,41,45],
[37,13,39,0,25,35,26,29],
[38,37,38,56,0,35,51,22],
[30,46,39,46,46,0,55,34],
[30,3,40,55,30,26,0,34],
[51,33,36,52,59,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,42,45,34,46,40],
[35,0,38,30,42,29,33,37],
[31,43,0,39,39,34,38,40],
[39,51,42,0,41,52,39,52],
[36,39,42,40,0,34,34,35],
[47,52,47,29,47,0,42,44],
[35,48,43,42,47,39,0,41],
[41,44,41,29,46,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,51,43,44,43,40,53],
[38,0,41,40,51,41,42,49],
[30,40,0,41,40,36,33,44],
[38,41,40,0,43,43,34,44],
[37,30,41,38,0,32,37,44],
[38,40,45,38,49,0,39,56],
[41,39,48,47,44,42,0,50],
[28,32,37,37,37,25,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,32,30,27,35,35],
[38,0,29,35,37,26,32,40],
[44,52,0,47,37,39,41,48],
[49,46,34,0,41,32,42,44],
[51,44,44,40,0,42,39,47],
[54,55,42,49,39,0,45,51],
[46,49,40,39,42,36,0,47],
[46,41,33,37,34,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,43,39,36,32,36],
[48,0,48,50,37,39,35,36],
[42,33,0,44,39,44,40,42],
[38,31,37,0,31,28,34,33],
[42,44,42,50,0,39,40,45],
[45,42,37,53,42,0,41,41],
[49,46,41,47,41,40,0,44],
[45,45,39,48,36,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,58,57,49,42,54,35],
[24,0,39,38,28,38,42,37],
[23,42,0,34,28,42,47,28],
[24,43,47,0,38,41,50,44],
[32,53,53,43,0,56,60,29],
[39,43,39,40,25,0,28,20],
[27,39,34,31,21,53,0,34],
[46,44,53,37,52,61,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,42,39,42,47,42,34],
[45,0,42,38,43,39,41,31],
[39,39,0,34,43,41,43,32],
[42,43,47,0,35,43,46,43],
[39,38,38,46,0,41,47,35],
[34,42,40,38,40,0,38,35],
[39,40,38,35,34,43,0,32],
[47,50,49,38,46,46,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,47,47,34,58,37,40],
[50,0,48,52,44,52,43,40],
[34,33,0,30,33,34,31,35],
[34,29,51,0,27,43,37,35],
[47,37,48,54,0,59,42,50],
[23,29,47,38,22,0,33,35],
[44,38,50,44,39,48,0,48],
[41,41,46,46,31,46,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,43,36,43,46,43],
[44,0,35,37,32,40,41,35],
[41,46,0,40,43,42,47,44],
[38,44,41,0,40,38,41,36],
[45,49,38,41,0,39,42,41],
[38,41,39,43,42,0,41,39],
[35,40,34,40,39,40,0,42],
[38,46,37,45,40,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,44,44,39,47,42],
[35,0,45,51,43,43,46,39],
[37,36,0,46,38,40,43,40],
[37,30,35,0,38,43,39,31],
[37,38,43,43,0,47,45,46],
[42,38,41,38,34,0,42,33],
[34,35,38,42,36,39,0,31],
[39,42,41,50,35,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,38,40,46,43,40],
[45,0,36,40,47,48,47,36],
[48,45,0,43,39,50,44,40],
[43,41,38,0,40,46,41,41],
[41,34,42,41,0,42,47,31],
[35,33,31,35,39,0,41,36],
[38,34,37,40,34,40,0,38],
[41,45,41,40,50,45,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,36,47,46,38,34],
[44,0,30,42,38,40,44,31],
[37,51,0,34,54,38,44,37],
[45,39,47,0,54,45,50,47],
[34,43,27,27,0,39,41,34],
[35,41,43,36,42,0,58,23],
[43,37,37,31,40,23,0,35],
[47,50,44,34,47,58,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,48,48,52,44,29],
[47,0,39,45,34,40,47,34],
[41,42,0,60,54,52,45,35],
[33,36,21,0,35,29,21,30],
[33,47,27,46,0,30,30,22],
[29,41,29,52,51,0,26,40],
[37,34,36,60,51,55,0,51],
[52,47,46,51,59,41,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,45,53,44,39,38],
[38,0,42,35,54,41,36,35],
[37,39,0,38,48,43,38,37],
[36,46,43,0,55,42,36,42],
[28,27,33,26,0,36,27,28],
[37,40,38,39,45,0,34,30],
[42,45,43,45,54,47,0,36],
[43,46,44,39,53,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,34,38,34,33,34,34],
[48,0,39,44,48,28,42,31],
[47,42,0,43,39,30,34,32],
[43,37,38,0,35,34,38,43],
[47,33,42,46,0,28,36,39],
[48,53,51,47,53,0,49,39],
[47,39,47,43,45,32,0,45],
[47,50,49,38,42,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,38,29,31,43,34],
[45,0,31,34,42,43,46,40],
[47,50,0,44,31,39,45,46],
[43,47,37,0,36,39,39,38],
[52,39,50,45,0,44,47,45],
[50,38,42,42,37,0,43,49],
[38,35,36,42,34,38,0,33],
[47,41,35,43,36,32,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,36,32,49,50,22],
[49,0,32,35,22,30,43,37],
[47,49,0,48,40,41,55,42],
[45,46,33,0,38,44,49,42],
[49,59,41,43,0,36,44,41],
[32,51,40,37,45,0,46,37],
[31,38,26,32,37,35,0,30],
[59,44,39,39,40,44,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,36,41,49,54,46],
[37,0,50,48,45,39,44,34],
[45,31,0,35,26,40,45,40],
[45,33,46,0,46,43,46,34],
[40,36,55,35,0,51,50,34],
[32,42,41,38,30,0,42,31],
[27,37,36,35,31,39,0,39],
[35,47,41,47,47,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,44,39,38,38,38],
[42,0,39,45,39,35,48,35],
[35,42,0,42,36,37,40,36],
[37,36,39,0,35,38,44,42],
[42,42,45,46,0,42,45,40],
[43,46,44,43,39,0,46,40],
[43,33,41,37,36,35,0,35],
[43,46,45,39,41,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,44,42,38,51,45,42],
[29,0,30,34,33,35,35,37],
[37,51,0,41,38,38,45,39],
[39,47,40,0,40,41,40,37],
[43,48,43,41,0,36,41,40],
[30,46,43,40,45,0,41,44],
[36,46,36,41,40,40,0,42],
[39,44,42,44,41,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,37,58,50,55,56],
[39,0,20,33,43,47,45,41],
[39,61,0,43,56,63,53,52],
[44,48,38,0,38,56,43,44],
[23,38,25,43,0,43,33,39],
[31,34,18,25,38,0,38,27],
[26,36,28,38,48,43,0,57],
[25,40,29,37,42,54,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,39,32,45,36,39],
[39,0,48,45,32,43,42,43],
[42,33,0,42,27,35,37,38],
[42,36,39,0,29,37,25,42],
[49,49,54,52,0,57,34,53],
[36,38,46,44,24,0,30,30],
[45,39,44,56,47,51,0,52],
[42,38,43,39,28,51,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,49,39,38,56,52,43],
[46,0,35,45,40,53,44,43],
[32,46,0,48,42,52,43,44],
[42,36,33,0,34,54,28,37],
[43,41,39,47,0,56,49,50],
[25,28,29,27,25,0,24,32],
[29,37,38,53,32,57,0,52],
[38,38,37,44,31,49,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,66,42,71,66,66,55],
[55,0,55,69,67,55,62,34],
[15,26,0,40,50,35,81,29],
[39,12,41,0,36,31,41,34],
[10,14,31,45,0,21,52,10],
[15,26,46,50,60,0,81,53],
[15,19,0,40,29,0,0,15],
[26,47,52,47,71,28,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,31,38,37,50,43,39],
[43,0,45,40,40,51,43,42],
[50,36,0,42,44,45,47,41],
[43,41,39,0,40,47,45,40],
[44,41,37,41,0,47,47,40],
[31,30,36,34,34,0,43,34],
[38,38,34,36,34,38,0,42],
[42,39,40,41,41,47,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,40,54,38,34,42,43],
[33,0,45,42,30,31,31,42],
[41,36,0,52,44,44,35,53],
[27,39,29,0,29,31,31,33],
[43,51,37,52,0,40,42,55],
[47,50,37,50,41,0,29,51],
[39,50,46,50,39,52,0,53],
[38,39,28,48,26,30,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,47,48,48,33,48],
[33,0,46,49,62,64,28,46],
[34,35,0,34,21,31,6,17],
[34,32,47,0,28,16,17,28],
[33,19,60,53,0,30,47,41],
[33,17,50,65,51,0,32,27],
[48,53,75,64,34,49,0,61],
[33,35,64,53,40,54,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,37,48,37,42,49],
[46,0,46,41,51,39,44,47],
[38,35,0,31,50,37,32,45],
[44,40,50,0,53,42,48,42],
[33,30,31,28,0,28,33,36],
[44,42,44,39,53,0,43,46],
[39,37,49,33,48,38,0,43],
[32,34,36,39,45,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,51,46,42,44,50,46],
[45,0,40,40,39,39,43,40],
[30,41,0,42,37,35,32,40],
[35,41,39,0,33,30,34,36],
[39,42,44,48,0,35,41,42],
[37,42,46,51,46,0,43,47],
[31,38,49,47,40,38,0,46],
[35,41,41,45,39,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,29,52,36,40,39,46],
[45,0,41,54,35,46,57,57],
[52,40,0,63,61,57,68,58],
[29,27,18,0,27,32,37,37],
[45,46,20,54,0,49,49,46],
[41,35,24,49,32,0,51,38],
[42,24,13,44,32,30,0,28],
[35,24,23,44,35,43,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,43,49,43,44,40,36],
[48,0,51,50,48,40,48,45],
[38,30,0,50,37,36,35,35],
[32,31,31,0,34,34,35,35],
[38,33,44,47,0,38,39,37],
[37,41,45,47,43,0,40,41],
[41,33,46,46,42,41,0,37],
[45,36,46,46,44,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,46,48,41,51,39],
[41,0,38,42,36,44,51,46],
[39,43,0,40,42,45,46,31],
[35,39,41,0,40,41,44,49],
[33,45,39,41,0,38,44,35],
[40,37,36,40,43,0,48,44],
[30,30,35,37,37,33,0,37],
[42,35,50,32,46,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,45,42,52,46,44,40],
[27,0,27,39,38,33,30,38],
[36,54,0,44,53,44,39,44],
[39,42,37,0,39,42,40,38],
[29,43,28,42,0,36,32,35],
[35,48,37,39,45,0,39,43],
[37,51,42,41,49,42,0,42],
[41,43,37,43,46,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,35,50,45,44,40],
[44,0,52,30,43,38,41,42],
[36,29,0,25,46,36,40,44],
[46,51,56,0,55,47,38,47],
[31,38,35,26,0,32,34,38],
[36,43,45,34,49,0,43,40],
[37,40,41,43,47,38,0,46],
[41,39,37,34,43,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,36,47,21,36,47,45],
[36,0,38,31,39,41,56,45],
[45,43,0,52,43,33,54,47],
[34,50,29,0,26,28,45,43],
[60,42,38,55,0,46,66,52],
[45,40,48,53,35,0,44,43],
[34,25,27,36,15,37,0,35],
[36,36,34,38,29,38,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,35,39,35,38,41],
[47,0,46,39,50,48,47,44],
[47,35,0,40,50,40,43,34],
[46,42,41,0,54,38,44,42],
[42,31,31,27,0,34,38,34],
[46,33,41,43,47,0,43,44],
[43,34,38,37,43,38,0,42],
[40,37,47,39,47,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,27,25,34,31,35,38],
[57,0,36,45,47,49,45,46],
[54,45,0,40,47,50,48,56],
[56,36,41,0,40,44,48,46],
[47,34,34,41,0,44,40,40],
[50,32,31,37,37,0,40,45],
[46,36,33,33,41,41,0,42],
[43,35,25,35,41,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,34,38,31,38,40,39],
[39,0,36,42,46,43,49,45],
[47,45,0,43,40,47,53,45],
[43,39,38,0,38,44,43,40],
[50,35,41,43,0,47,43,44],
[43,38,34,37,34,0,41,37],
[41,32,28,38,38,40,0,41],
[42,36,36,41,37,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,42,37,43,37,34],
[35,0,40,38,38,35,38,35],
[37,41,0,43,40,42,36,33],
[39,43,38,0,40,36,38,35],
[44,43,41,41,0,45,41,34],
[38,46,39,45,36,0,40,41],
[44,43,45,43,40,41,0,38],
[47,46,48,46,47,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,49,44,46,42,50,44],
[42,0,48,38,42,39,42,41],
[32,33,0,37,35,40,39,37],
[37,43,44,0,46,46,39,38],
[35,39,46,35,0,36,40,35],
[39,42,41,35,45,0,39,33],
[31,39,42,42,41,42,0,31],
[37,40,44,43,46,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,40,36,33,39,39],
[47,0,32,39,37,32,37,45],
[38,49,0,46,35,30,36,39],
[41,42,35,0,36,36,32,41],
[45,44,46,45,0,37,42,42],
[48,49,51,45,44,0,36,38],
[42,44,45,49,39,45,0,50],
[42,36,42,40,39,43,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,0,25,25,28,19,0],
[44,0,22,18,18,22,38,9],
[81,59,0,47,47,41,59,9],
[56,63,34,0,54,34,63,43],
[56,63,34,27,0,34,50,9],
[53,59,40,47,47,0,59,22],
[62,43,22,18,31,22,0,9],
[81,72,72,38,72,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,28,42,44,51,42,52],
[29,0,43,29,42,40,27,36],
[53,38,0,41,35,50,34,41],
[39,52,40,0,43,41,40,37],
[37,39,46,38,0,42,23,35],
[30,41,31,40,39,0,42,43],
[39,54,47,41,58,39,0,44],
[29,45,40,44,46,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,26,33,48,36,41,37],
[38,0,42,35,50,44,39,40],
[55,39,0,43,51,40,23,36],
[48,46,38,0,46,35,35,39],
[33,31,30,35,0,38,39,38],
[45,37,41,46,43,0,33,40],
[40,42,58,46,42,48,0,52],
[44,41,45,42,43,41,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,47,37,45,45,43,36],
[40,0,45,40,37,44,46,35],
[34,36,0,35,37,45,42,38],
[44,41,46,0,39,48,47,41],
[36,44,44,42,0,45,45,35],
[36,37,36,33,36,0,34,26],
[38,35,39,34,36,47,0,43],
[45,46,43,40,46,55,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,44,42,44,36,41],
[40,0,46,42,41,43,41,42],
[37,35,0,41,41,38,37,38],
[37,39,40,0,30,38,40,43],
[39,40,40,51,0,47,43,38],
[37,38,43,43,34,0,37,38],
[45,40,44,41,38,44,0,44],
[40,39,43,38,43,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,44,41,40,49,37,36],
[48,0,37,40,46,40,38,53],
[37,44,0,43,44,44,36,43],
[40,41,38,0,39,50,43,43],
[41,35,37,42,0,43,36,42],
[32,41,37,31,38,0,34,41],
[44,43,45,38,45,47,0,50],
[45,28,38,38,39,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,51,39,34,47,32],
[44,0,36,41,49,41,49,36],
[41,45,0,50,52,53,56,36],
[30,40,31,0,40,35,33,34],
[42,32,29,41,0,42,47,39],
[47,40,28,46,39,0,45,41],
[34,32,25,48,34,36,0,43],
[49,45,45,47,42,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,43,43,44,38,42],
[37,0,45,33,39,37,36,45],
[34,36,0,36,45,30,35,41],
[38,48,45,0,45,39,42,43],
[38,42,36,36,0,33,39,44],
[37,44,51,42,48,0,42,41],
[43,45,46,39,42,39,0,45],
[39,36,40,38,37,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,27,36,36,31,29],
[49,0,36,52,36,49,38,55],
[47,45,0,56,38,51,47,48],
[54,29,25,0,41,46,34,40],
[45,45,43,40,0,58,50,48],
[45,32,30,35,23,0,40,33],
[50,43,34,47,31,41,0,49],
[52,26,33,41,33,48,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,58,65,53,41,39,55],
[35,0,50,66,42,41,45,44],
[23,31,0,50,31,33,40,32],
[16,15,31,0,19,38,25,28],
[28,39,50,62,0,36,34,44],
[40,40,48,43,45,0,37,48],
[42,36,41,56,47,44,0,46],
[26,37,49,53,37,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,49,53,47,39,23],
[34,0,28,50,40,34,34,23],
[39,53,0,52,54,46,47,43],
[32,31,29,0,43,40,44,25],
[28,41,27,38,0,46,36,32],
[34,47,35,41,35,0,35,34],
[42,47,34,37,45,46,0,26],
[58,58,38,56,49,47,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,40,34,33,28,26,54],
[49,0,48,55,40,28,51,80],
[41,33,0,41,41,27,27,61],
[47,26,40,0,34,38,22,69],
[48,41,40,47,0,51,40,62],
[53,53,54,43,30,0,36,64],
[55,30,54,59,41,45,0,69],
[27,1,20,12,19,17,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,39,43,36,39,34],
[41,0,43,42,50,43,44,39],
[40,38,0,34,44,35,39,40],
[42,39,47,0,48,38,43,42],
[38,31,37,33,0,35,38,29],
[45,38,46,43,46,0,43,35],
[42,37,42,38,43,38,0,37],
[47,42,41,39,52,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,16,40,22,40,35,21],
[59,0,13,34,59,31,31,40],
[65,68,0,45,50,24,40,67],
[41,47,36,0,28,23,72,46],
[59,22,31,53,0,50,52,43],
[41,50,57,58,31,0,62,49],
[46,50,41,9,29,19,0,28],
[60,41,14,35,38,32,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,37,41,33,42,39,40],
[48,0,52,54,38,44,41,48],
[44,29,0,38,35,40,41,46],
[40,27,43,0,33,41,30,41],
[48,43,46,48,0,49,36,50],
[39,37,41,40,32,0,40,42],
[42,40,40,51,45,41,0,46],
[41,33,35,40,31,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,42,52,44,36,46],
[37,0,44,38,43,34,36,43],
[43,37,0,36,41,38,44,47],
[39,43,45,0,44,30,50,54],
[29,38,40,37,0,34,34,46],
[37,47,43,51,47,0,47,50],
[45,45,37,31,47,34,0,41],
[35,38,34,27,35,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,67,51,54,51,46,39],
[49,0,58,44,50,56,45,35],
[14,23,0,21,34,33,27,27],
[30,37,60,0,50,33,40,44],
[27,31,47,31,0,31,28,34],
[30,25,48,48,50,0,50,38],
[35,36,54,41,53,31,0,30],
[42,46,54,37,47,43,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,67,49,50,40,27,25],
[36,0,45,31,37,25,20,26],
[14,36,0,42,44,38,21,21],
[32,50,39,0,36,22,23,22],
[31,44,37,45,0,34,41,41],
[41,56,43,59,47,0,56,38],
[54,61,60,58,40,25,0,29],
[56,55,60,59,40,43,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,37,38,48,41,37],
[38,0,42,39,46,40,36,39],
[39,39,0,40,39,51,42,43],
[44,42,41,0,42,47,38,39],
[43,35,42,39,0,45,37,31],
[33,41,30,34,36,0,38,35],
[40,45,39,43,44,43,0,30],
[44,42,38,42,50,46,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,35,38,37,36,40],
[47,0,40,40,42,41,43,39],
[44,41,0,37,41,41,45,44],
[46,41,44,0,46,40,46,38],
[43,39,40,35,0,39,41,43],
[44,40,40,41,42,0,44,40],
[45,38,36,35,40,37,0,40],
[41,42,37,43,38,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,39,43,38,45,42],
[39,0,39,40,45,41,42,41],
[46,42,0,43,43,38,35,42],
[42,41,38,0,43,39,39,35],
[38,36,38,38,0,37,36,38],
[43,40,43,42,44,0,42,46],
[36,39,46,42,45,39,0,42],
[39,40,39,46,43,35,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,46,44,42,36,51],
[35,0,43,37,43,46,37,43],
[40,38,0,33,58,45,34,34],
[35,44,48,0,50,41,40,49],
[37,38,23,31,0,44,25,27],
[39,35,36,40,37,0,42,41],
[45,44,47,41,56,39,0,34],
[30,38,47,32,54,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,34,43,40,46,43],
[37,0,48,36,39,37,38,41],
[33,33,0,30,37,40,34,37],
[47,45,51,0,45,39,43,47],
[38,42,44,36,0,41,41,39],
[41,44,41,42,40,0,40,45],
[35,43,47,38,40,41,0,42],
[38,40,44,34,42,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,39,44,39,41,40],
[38,0,42,41,51,39,50,43],
[39,39,0,46,49,42,45,41],
[42,40,35,0,50,39,44,44],
[37,30,32,31,0,31,37,35],
[42,42,39,42,50,0,49,46],
[40,31,36,37,44,32,0,39],
[41,38,40,37,46,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,35,26,29,33,32,31],
[36,0,39,32,40,41,38,35],
[46,42,0,25,41,39,39,46],
[55,49,56,0,45,39,43,57],
[52,41,40,36,0,38,47,50],
[48,40,42,42,43,0,37,47],
[49,43,42,38,34,44,0,42],
[50,46,35,24,31,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,27,23,22,22,35],
[52,0,45,47,47,44,35,27],
[49,36,0,45,47,49,31,27],
[54,34,36,0,31,57,41,50],
[58,34,34,50,0,53,45,40],
[59,37,32,24,28,0,32,44],
[59,46,50,40,36,49,0,31],
[46,54,54,31,41,37,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,37,45,38,53,37],
[44,0,46,35,53,30,38,40],
[35,35,0,37,58,48,61,40],
[44,46,44,0,40,25,53,45],
[36,28,23,41,0,38,61,38],
[43,51,33,56,43,0,66,38],
[28,43,20,28,20,15,0,30],
[44,41,41,36,43,43,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,38,40,48,30,30],
[42,0,40,40,30,46,38,21],
[38,41,0,45,32,48,40,31],
[43,41,36,0,32,36,44,26],
[41,51,49,49,0,48,40,37],
[33,35,33,45,33,0,45,28],
[51,43,41,37,41,36,0,46],
[51,60,50,55,44,53,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,41,48,48,34,36],
[39,0,42,41,58,50,45,37],
[35,39,0,36,48,44,41,31],
[40,40,45,0,52,37,43,37],
[33,23,33,29,0,34,40,26],
[33,31,37,44,47,0,37,26],
[47,36,40,38,41,44,0,50],
[45,44,50,44,55,55,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,41,42,38,41,43],
[37,0,39,42,40,35,45,37],
[39,42,0,35,34,38,43,39],
[40,39,46,0,48,32,41,41],
[39,41,47,33,0,42,44,36],
[43,46,43,49,39,0,39,48],
[40,36,38,40,37,42,0,40],
[38,44,42,40,45,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,34,35,30,34,28],
[46,0,36,42,35,36,39,31],
[40,45,0,45,47,42,38,37],
[47,39,36,0,34,39,43,40],
[46,46,34,47,0,40,42,33],
[51,45,39,42,41,0,55,47],
[47,42,43,38,39,26,0,19],
[53,50,44,41,48,34,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,38,41,43,40,35,41],
[34,0,33,41,38,41,36,37],
[43,48,0,38,38,42,38,39],
[40,40,43,0,49,36,42,40],
[38,43,43,32,0,33,35,32],
[41,40,39,45,48,0,34,35],
[46,45,43,39,46,47,0,40],
[40,44,42,41,49,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,33,47,44,37,32,54],
[39,0,35,43,43,40,31,51],
[48,46,0,62,42,44,37,48],
[34,38,19,0,36,20,38,35],
[37,38,39,45,0,38,46,38],
[44,41,37,61,43,0,48,50],
[49,50,44,43,35,33,0,44],
[27,30,33,46,43,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,44,47,35,49,43],
[23,0,36,29,29,24,25,11],
[29,45,0,38,32,45,32,30],
[37,52,43,0,55,49,43,31],
[34,52,49,26,0,33,36,25],
[46,57,36,32,48,0,44,37],
[32,56,49,38,45,37,0,46],
[38,70,51,50,56,44,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,37,48,42,39,43],
[42,0,40,50,40,41,45,48],
[42,41,0,49,40,45,47,47],
[44,31,32,0,37,41,41,40],
[33,41,41,44,0,33,42,39],
[39,40,36,40,48,0,41,45],
[42,36,34,40,39,40,0,47],
[38,33,34,41,42,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,27,30,26,35,28,35],
[43,0,34,37,29,31,31,49],
[54,47,0,43,43,42,40,46],
[51,44,38,0,38,45,33,44],
[55,52,38,43,0,41,38,44],
[46,50,39,36,40,0,46,52],
[53,50,41,48,43,35,0,48],
[46,32,35,37,37,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,49,50,39,41,43],
[34,0,43,45,52,42,32,44],
[39,38,0,39,49,49,40,44],
[32,36,42,0,48,44,32,35],
[31,29,32,33,0,38,30,33],
[42,39,32,37,43,0,38,40],
[40,49,41,49,51,43,0,45],
[38,37,37,46,48,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,45,39,45,49,50],
[38,0,35,32,28,42,37,38],
[38,46,0,34,39,43,43,42],
[36,49,47,0,48,54,47,45],
[42,53,42,33,0,43,44,47],
[36,39,38,27,38,0,43,39],
[32,44,38,34,37,38,0,42],
[31,43,39,36,34,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,46,37,41,38,36],
[41,0,38,48,48,46,37,48],
[43,43,0,39,46,50,44,52],
[35,33,42,0,43,38,35,38],
[44,33,35,38,0,39,36,43],
[40,35,31,43,42,0,44,53],
[43,44,37,46,45,37,0,45],
[45,33,29,43,38,28,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,57,41,47,31,50],
[37,0,45,48,36,38,44,37],
[45,36,0,45,41,38,39,48],
[24,33,36,0,27,39,35,34],
[40,45,40,54,0,50,40,38],
[34,43,43,42,31,0,41,43],
[50,37,42,46,41,40,0,42],
[31,44,33,47,43,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,50,45,41,46,40],
[37,0,35,40,36,38,43,33],
[37,46,0,43,45,50,52,47],
[31,41,38,0,43,43,46,39],
[36,45,36,38,0,37,47,34],
[40,43,31,38,44,0,45,41],
[35,38,29,35,34,36,0,35],
[41,48,34,42,47,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,42,40,41,40,41],
[43,0,39,49,49,45,45,46],
[44,42,0,45,40,44,42,45],
[39,32,36,0,44,38,41,41],
[41,32,41,37,0,43,35,40],
[40,36,37,43,38,0,43,41],
[41,36,39,40,46,38,0,43],
[40,35,36,40,41,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,35,39,34,42,41],
[44,0,39,39,38,38,44,36],
[41,42,0,41,40,37,37,43],
[46,42,40,0,37,36,42,34],
[42,43,41,44,0,32,41,42],
[47,43,44,45,49,0,45,38],
[39,37,44,39,40,36,0,37],
[40,45,38,47,39,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,43,47,51,40,37],
[38,0,39,42,46,46,44,41],
[49,42,0,39,35,50,42,35],
[38,39,42,0,49,55,52,43],
[34,35,46,32,0,46,45,36],
[30,35,31,26,35,0,44,36],
[41,37,39,29,36,37,0,35],
[44,40,46,38,45,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,50,53,44,37,42],
[44,0,31,49,49,35,31,35],
[35,50,0,47,44,36,42,40],
[31,32,34,0,44,42,38,36],
[28,32,37,37,0,29,24,30],
[37,46,45,39,52,0,37,42],
[44,50,39,43,57,44,0,49],
[39,46,41,45,51,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,5,27,21,43,27,48],
[43,0,26,5,43,26,48,26],
[76,55,0,55,33,43,43,64],
[54,76,26,0,54,42,48,26],
[60,38,48,27,0,27,27,48],
[38,55,38,39,54,0,39,65],
[54,33,38,33,54,42,0,26],
[33,55,17,55,33,16,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,20,34,28,28,34],
[38,0,42,36,48,49,58,35],
[47,39,0,36,44,56,57,41],
[61,45,45,0,50,65,35,54],
[47,33,37,31,0,67,64,29],
[53,32,25,16,14,0,45,35],
[53,23,24,46,17,36,0,34],
[47,46,40,27,52,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,48,42,42,42,42,38],
[35,0,41,43,38,35,36,42],
[33,40,0,33,38,36,33,34],
[39,38,48,0,39,39,42,37],
[39,43,43,42,0,44,39,45],
[39,46,45,42,37,0,41,37],
[39,45,48,39,42,40,0,37],
[43,39,47,44,36,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,53,53,30,48,56,44],
[15,0,40,29,19,19,47,29],
[28,41,0,30,29,28,64,29],
[28,52,51,0,22,40,45,35],
[51,62,52,59,0,38,56,53],
[33,62,53,41,43,0,54,43],
[25,34,17,36,25,27,0,39],
[37,52,52,46,28,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,33,37,44,50,39],
[43,0,42,40,42,39,50,37],
[47,39,0,47,42,44,50,37],
[48,41,34,0,41,43,47,40],
[44,39,39,40,0,46,50,45],
[37,42,37,38,35,0,52,39],
[31,31,31,34,31,29,0,30],
[42,44,44,41,36,42,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,44,46,27,42,42],
[42,0,49,46,42,38,51,48],
[35,32,0,43,45,37,35,35],
[37,35,38,0,35,34,41,42],
[35,39,36,46,0,34,46,44],
[54,43,44,47,47,0,46,40],
[39,30,46,40,35,35,0,39],
[39,33,46,39,37,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,30,43,44,38,30,33],
[43,0,38,42,45,38,38,30],
[51,43,0,34,35,54,45,38],
[38,39,47,0,48,51,43,41],
[37,36,46,33,0,52,31,32],
[43,43,27,30,29,0,37,27],
[51,43,36,38,50,44,0,30],
[48,51,43,40,49,54,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,41,38,33,42,32],
[47,0,44,55,41,38,47,37],
[45,37,0,46,34,58,53,39],
[40,26,35,0,33,27,26,33],
[43,40,47,48,0,36,47,41],
[48,43,23,54,45,0,49,40],
[39,34,28,55,34,32,0,32],
[49,44,42,48,40,41,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,24,33,38,33,36,35],
[49,0,35,42,43,38,45,41],
[57,46,0,36,41,43,49,40],
[48,39,45,0,43,44,49,46],
[43,38,40,38,0,37,39,39],
[48,43,38,37,44,0,53,34],
[45,36,32,32,42,28,0,31],
[46,40,41,35,42,47,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,48,37,48,40,42,48],
[47,0,52,43,47,55,40,49],
[33,29,0,34,46,34,41,41],
[44,38,47,0,45,41,41,49],
[33,34,35,36,0,46,38,35],
[41,26,47,40,35,0,31,44],
[39,41,40,40,43,50,0,49],
[33,32,40,32,46,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,28,38,50,38,27],
[41,0,42,30,38,52,38,35],
[43,39,0,33,30,52,51,32],
[53,51,48,0,46,59,40,42],
[43,43,51,35,0,55,49,34],
[31,29,29,22,26,0,27,25],
[43,43,30,41,32,54,0,29],
[54,46,49,39,47,56,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,30,40,36,37,41,43],
[43,0,36,42,38,41,42,49],
[51,45,0,38,45,43,46,47],
[41,39,43,0,39,37,44,44],
[45,43,36,42,0,37,38,43],
[44,40,38,44,44,0,45,42],
[40,39,35,37,43,36,0,35],
[38,32,34,37,38,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,50,51,31,43,44],
[37,0,35,38,32,39,27,38],
[41,46,0,46,46,39,32,47],
[31,43,35,0,45,40,34,45],
[30,49,35,36,0,41,30,39],
[50,42,42,41,40,0,30,35],
[38,54,49,47,51,51,0,52],
[37,43,34,36,42,46,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,40,36,56,38,35],
[50,0,39,40,40,54,35,29],
[42,42,0,51,38,49,45,28],
[41,41,30,0,35,47,27,30],
[45,41,43,46,0,62,44,29],
[25,27,32,34,19,0,27,26],
[43,46,36,54,37,54,0,45],
[46,52,53,51,52,55,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,36,41,38,46,41,37],
[36,0,31,41,34,42,41,40],
[45,50,0,39,41,47,38,50],
[40,40,42,0,41,43,41,38],
[43,47,40,40,0,51,44,41],
[35,39,34,38,30,0,34,33],
[40,40,43,40,37,47,0,40],
[44,41,31,43,40,48,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,10,21,24,22,27,12,20],
[71,0,57,69,47,59,34,45],
[60,24,0,35,30,25,23,26],
[57,12,46,0,43,37,14,32],
[59,34,51,38,0,37,28,53],
[54,22,56,44,44,0,31,37],
[69,47,58,67,53,50,0,39],
[61,36,55,49,28,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,30,39,42,26,51,38],
[50,0,36,44,49,39,47,47],
[51,45,0,54,51,34,59,55],
[42,37,27,0,49,42,43,38],
[39,32,30,32,0,25,41,46],
[55,42,47,39,56,0,54,46],
[30,34,22,38,40,27,0,28],
[43,34,26,43,35,35,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,51,53,36,39,38],
[33,0,48,52,40,25,26,37],
[37,33,0,51,39,18,30,25],
[30,29,30,0,40,38,13,23],
[28,41,42,41,0,27,25,28],
[45,56,63,43,54,0,29,53],
[42,55,51,68,56,52,0,39],
[43,44,56,58,53,28,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,41,32,39,45,36],
[44,0,44,48,38,48,23,43],
[52,37,0,39,22,56,47,36],
[40,33,42,0,49,59,39,35],
[49,43,59,32,0,58,53,44],
[42,33,25,22,23,0,39,35],
[36,58,34,42,28,42,0,38],
[45,38,45,46,37,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,35,20,39,25,33],
[49,0,42,44,42,50,40,44],
[47,39,0,32,32,51,35,37],
[46,37,49,0,36,51,44,41],
[61,39,49,45,0,48,40,38],
[42,31,30,30,33,0,30,37],
[56,41,46,37,41,51,0,45],
[48,37,44,40,43,44,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,27,35,33,39,38],
[44,0,44,46,43,35,40,47],
[49,37,0,39,47,36,33,43],
[54,35,42,0,38,28,40,48],
[46,38,34,43,0,48,43,46],
[48,46,45,53,33,0,48,53],
[42,41,48,41,38,33,0,47],
[43,34,38,33,35,28,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,44,54,55,42,44],
[40,0,38,47,44,42,50,42],
[42,43,0,40,40,39,45,47],
[37,34,41,0,38,43,36,40],
[27,37,41,43,0,46,41,48],
[26,39,42,38,35,0,39,42],
[39,31,36,45,40,42,0,50],
[37,39,34,41,33,39,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,44,49,46,41,35],
[32,0,28,42,43,36,34,31],
[39,53,0,44,46,41,41,38],
[37,39,37,0,40,39,36,38],
[32,38,35,41,0,36,33,36],
[35,45,40,42,45,0,43,42],
[40,47,40,45,48,38,0,39],
[46,50,43,43,45,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,43,39,44,45,37],
[39,0,35,39,37,37,37,39],
[43,46,0,39,45,38,45,43],
[38,42,42,0,41,43,44,39],
[42,44,36,40,0,38,38,37],
[37,44,43,38,43,0,42,42],
[36,44,36,37,43,39,0,39],
[44,42,38,42,44,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,51,44,44,40,44],
[45,0,40,45,40,40,42,40],
[41,41,0,44,39,44,37,39],
[30,36,37,0,29,39,36,34],
[37,41,42,52,0,38,38,38],
[37,41,37,42,43,0,37,42],
[41,39,44,45,43,44,0,35],
[37,41,42,47,43,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,37,50,43,40,46,40],
[32,0,46,48,44,40,43,47],
[44,35,0,47,34,47,42,41],
[31,33,34,0,25,36,32,32],
[38,37,47,56,0,37,43,37],
[41,41,34,45,44,0,48,43],
[35,38,39,49,38,33,0,39],
[41,34,40,49,44,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,39,49,36,47,45,42],
[49,0,40,46,37,40,44,46],
[42,41,0,49,35,38,46,43],
[32,35,32,0,32,27,35,39],
[45,44,46,49,0,36,37,51],
[34,41,43,54,45,0,36,42],
[36,37,35,46,44,45,0,42],
[39,35,38,42,30,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,43,42,44,46,41],
[45,0,47,46,36,38,43,39],
[44,34,0,46,45,50,52,43],
[38,35,35,0,41,27,47,31],
[39,45,36,40,0,30,49,35],
[37,43,31,54,51,0,53,47],
[35,38,29,34,32,28,0,33],
[40,42,38,50,46,34,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,45,38,40,58,53],
[20,0,32,38,27,29,42,49],
[18,49,0,54,32,38,42,36],
[36,43,27,0,50,41,38,29],
[43,54,49,31,0,46,54,51],
[41,52,43,40,35,0,51,60],
[23,39,39,43,27,30,0,47],
[28,32,45,52,30,21,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,30,36,40,26,38,36],
[42,0,44,46,34,41,33,44],
[51,37,0,44,46,41,40,45],
[45,35,37,0,37,29,42,38],
[41,47,35,44,0,36,37,37],
[55,40,40,52,45,0,40,41],
[43,48,41,39,44,41,0,36],
[45,37,36,43,44,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,51,47,40,46,49],
[35,0,40,43,39,41,45,44],
[40,41,0,41,41,41,38,48],
[30,38,40,0,31,42,37,42],
[34,42,40,50,0,38,44,46],
[41,40,40,39,43,0,44,47],
[35,36,43,44,37,37,0,41],
[32,37,33,39,35,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,63,3,61,21,58,61],
[38,0,41,41,78,41,38,41],
[18,40,0,3,58,21,58,61],
[78,40,78,0,58,61,58,61],
[20,3,23,23,0,23,20,3],
[60,40,60,20,58,0,60,40],
[23,43,23,23,61,21,0,21],
[20,40,20,20,78,41,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,43,36,43,36,44],
[45,0,38,49,33,44,39,42],
[47,43,0,48,43,40,37,48],
[38,32,33,0,27,38,34,38],
[45,48,38,54,0,47,44,48],
[38,37,41,43,34,0,35,35],
[45,42,44,47,37,46,0,49],
[37,39,33,43,33,46,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,63,46,39,58,49],
[34,0,38,38,42,41,54,48],
[41,43,0,54,49,36,52,53],
[18,43,27,0,31,26,39,35],
[35,39,32,50,0,33,48,42],
[42,40,45,55,48,0,62,49],
[23,27,29,42,33,19,0,32],
[32,33,28,46,39,32,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,33,41,33,39,35],
[42,0,43,38,41,32,53,39],
[48,38,0,49,29,37,44,36],
[48,43,32,0,41,35,42,41],
[40,40,52,40,0,33,49,30],
[48,49,44,46,48,0,49,39],
[42,28,37,39,32,32,0,31],
[46,42,45,40,51,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,15,58,58,43,58],
[34,0,43,15,43,15,15,15],
[38,38,0,53,53,38,38,53],
[66,66,28,0,43,62,28,58],
[23,38,28,38,0,38,0,34],
[23,66,43,19,43,0,28,62],
[38,66,43,53,81,53,0,81],
[23,66,28,23,47,19,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,39,44,44,45,55],
[36,0,54,42,39,36,58,37],
[40,27,0,28,30,27,30,44],
[42,39,53,0,30,28,40,50],
[37,42,51,51,0,39,34,66],
[37,45,54,53,42,0,46,59],
[36,23,51,41,47,35,0,54],
[26,44,37,31,15,22,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,72,49,32,52,32,45],
[41,0,51,29,15,41,56,29],
[9,30,0,39,22,38,26,35],
[32,52,42,0,44,17,44,20],
[49,66,59,37,0,49,63,42],
[29,40,43,64,32,0,32,60],
[49,25,55,37,18,49,0,33],
[36,52,46,61,39,21,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,38,30,42,30,31,36],
[28,0,53,45,55,47,43,51],
[43,28,0,57,44,65,56,43],
[51,36,24,0,37,34,45,31],
[39,26,37,44,0,45,58,35],
[51,34,16,47,36,0,49,41],
[50,38,25,36,23,32,0,24],
[45,30,38,50,46,40,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,43,41,50,41,40],
[36,0,43,40,35,35,38,37],
[35,38,0,37,40,39,35,34],
[38,41,44,0,39,40,40,39],
[40,46,41,42,0,44,45,37],
[31,46,42,41,37,0,37,34],
[40,43,46,41,36,44,0,41],
[41,44,47,42,44,47,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,37,29,30,39,31],
[42,0,48,43,37,40,32,37],
[39,33,0,47,37,30,38,31],
[44,38,34,0,41,43,44,38],
[52,44,44,40,0,51,44,43],
[51,41,51,38,30,0,49,42],
[42,49,43,37,37,32,0,38],
[50,44,50,43,38,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,48,40,49,45,51,39],
[35,0,50,45,46,41,45,45],
[33,31,0,41,43,38,43,37],
[41,36,40,0,48,37,35,32],
[32,35,38,33,0,33,34,33],
[36,40,43,44,48,0,44,42],
[30,36,38,46,47,37,0,39],
[42,36,44,49,48,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,32,38,32,39,37,34],
[46,0,38,44,31,40,50,33],
[49,43,0,42,27,27,44,33],
[43,37,39,0,37,35,49,42],
[49,50,54,44,0,35,53,43],
[42,41,54,46,46,0,52,37],
[44,31,37,32,28,29,0,27],
[47,48,48,39,38,44,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,33,40,28,38,27],
[46,0,44,33,49,39,39,29],
[51,37,0,27,37,33,46,26],
[48,48,54,0,45,43,44,32],
[41,32,44,36,0,36,39,34],
[53,42,48,38,45,0,43,47],
[43,42,35,37,42,38,0,34],
[54,52,55,49,47,34,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,37,29,30,29,32],
[46,0,42,46,43,37,38,41],
[42,39,0,48,40,38,44,45],
[44,35,33,0,36,40,38,38],
[52,38,41,45,0,40,39,44],
[51,44,43,41,41,0,39,44],
[52,43,37,43,42,42,0,45],
[49,40,36,43,37,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,50,48,44,42,30,37],
[32,0,43,38,40,35,23,34],
[31,38,0,35,39,33,28,37],
[33,43,46,0,30,33,23,38],
[37,41,42,51,0,43,32,42],
[39,46,48,48,38,0,43,42],
[51,58,53,58,49,38,0,49],
[44,47,44,43,39,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,46,38,34,39,43],
[37,0,42,42,38,37,35,34],
[44,39,0,45,35,33,35,38],
[35,39,36,0,34,26,30,38],
[43,43,46,47,0,37,46,46],
[47,44,48,55,44,0,36,35],
[42,46,46,51,35,45,0,44],
[38,47,43,43,35,46,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,45,41,47,37,47],
[41,0,48,48,40,49,44,50],
[38,33,0,38,40,39,38,47],
[36,33,43,0,29,38,37,39],
[40,41,41,52,0,44,40,57],
[34,32,42,43,37,0,34,49],
[44,37,43,44,41,47,0,51],
[34,31,34,42,24,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,30,39,41,40,41],
[43,0,38,37,39,37,34,34],
[44,43,0,41,45,36,42,44],
[51,44,40,0,50,45,43,44],
[42,42,36,31,0,37,37,43],
[40,44,45,36,44,0,42,45],
[41,47,39,38,44,39,0,42],
[40,47,37,37,38,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,46,42,47,37,40],
[43,0,38,47,41,40,41,41],
[33,43,0,42,41,41,36,35],
[35,34,39,0,39,43,37,40],
[39,40,40,42,0,45,42,43],
[34,41,40,38,36,0,33,42],
[44,40,45,44,39,48,0,49],
[41,40,46,41,38,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,44,41,40,33,42],
[46,0,42,47,44,45,36,48],
[42,39,0,50,41,48,45,43],
[37,34,31,0,36,31,30,35],
[40,37,40,45,0,36,35,41],
[41,36,33,50,45,0,36,42],
[48,45,36,51,46,45,0,54],
[39,33,38,46,40,39,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,40,50,53,36,46,41],
[29,0,26,36,40,29,26,24],
[41,55,0,39,40,34,42,38],
[31,45,42,0,46,36,41,34],
[28,41,41,35,0,32,42,36],
[45,52,47,45,49,0,44,37],
[35,55,39,40,39,37,0,39],
[40,57,43,47,45,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,41,33,40,44,41],
[37,0,33,36,44,38,40,39],
[42,48,0,45,42,45,39,44],
[40,45,36,0,40,50,43,40],
[48,37,39,41,0,40,51,41],
[41,43,36,31,41,0,44,45],
[37,41,42,38,30,37,0,42],
[40,42,37,41,40,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,40,43,22,38,29],
[42,0,38,27,57,27,28,40],
[48,43,0,50,55,35,52,39],
[41,54,31,0,45,47,44,40],
[38,24,26,36,0,40,24,52],
[59,54,46,34,41,0,57,46],
[43,53,29,37,57,24,0,46],
[52,41,42,41,29,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,51,33,48,49,45,57],
[34,0,43,42,29,46,35,54],
[30,38,0,29,26,34,20,50],
[48,39,52,0,43,44,49,66],
[33,52,55,38,0,41,48,59],
[32,35,47,37,40,0,37,48],
[36,46,61,32,33,44,0,51],
[24,27,31,15,22,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,44,42,33,38,40],
[46,0,45,37,46,40,35,42],
[42,36,0,31,36,34,31,34],
[37,44,50,0,47,43,39,46],
[39,35,45,34,0,28,32,37],
[48,41,47,38,53,0,43,45],
[43,46,50,42,49,38,0,44],
[41,39,47,35,44,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,42,28,27,30,24],
[54,0,45,52,40,44,43,46],
[50,36,0,47,36,41,42,35],
[39,29,34,0,28,29,28,31],
[53,41,45,53,0,37,40,44],
[54,37,40,52,44,0,44,41],
[51,38,39,53,41,37,0,43],
[57,35,46,50,37,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,52,46,40,44,40,43],
[42,0,47,41,43,42,36,40],
[29,34,0,35,37,36,36,33],
[35,40,46,0,40,44,37,39],
[41,38,44,41,0,40,41,37],
[37,39,45,37,41,0,35,38],
[41,45,45,44,40,46,0,40],
[38,41,48,42,44,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,43,44,45,39,45],
[39,0,39,40,32,46,40,42],
[42,42,0,44,45,44,37,45],
[38,41,37,0,41,36,42,47],
[37,49,36,40,0,37,38,47],
[36,35,37,45,44,0,36,42],
[42,41,44,39,43,45,0,42],
[36,39,36,34,34,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,46,44,44,42,47],
[36,0,37,35,38,41,32,33],
[43,44,0,32,41,29,41,29],
[35,46,49,0,28,38,50,40],
[37,43,40,53,0,48,44,35],
[37,40,52,43,33,0,52,28],
[39,49,40,31,37,29,0,30],
[34,48,52,41,46,53,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,39,37,37,40,38],
[40,0,45,41,33,39,38,39],
[41,36,0,42,43,38,38,40],
[42,40,39,0,29,41,45,37],
[44,48,38,52,0,43,45,49],
[44,42,43,40,38,0,43,43],
[41,43,43,36,36,38,0,40],
[43,42,41,44,32,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,46,33,43,34,52],
[42,0,55,56,40,38,56,54],
[33,26,0,48,38,30,30,30],
[35,25,33,0,31,35,40,32],
[48,41,43,50,0,47,39,45],
[38,43,51,46,34,0,45,52],
[47,25,51,41,42,36,0,51],
[29,27,51,49,36,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,45,53,44,45,47],
[43,0,45,42,49,39,46,49],
[33,36,0,35,42,37,43,41],
[36,39,46,0,47,45,40,45],
[28,32,39,34,0,36,36,42],
[37,42,44,36,45,0,46,45],
[36,35,38,41,45,35,0,45],
[34,32,40,36,39,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,36,31,37,35,35],
[43,0,44,41,38,37,36,31],
[44,37,0,38,34,40,37,42],
[45,40,43,0,25,34,36,36],
[50,43,47,56,0,47,47,39],
[44,44,41,47,34,0,35,39],
[46,45,44,45,34,46,0,45],
[46,50,39,45,42,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,38,42,39,38,42],
[41,0,38,37,42,39,46,38],
[43,43,0,37,38,37,42,46],
[43,44,44,0,41,37,36,42],
[39,39,43,40,0,40,43,42],
[42,42,44,44,41,0,37,46],
[43,35,39,45,38,44,0,46],
[39,43,35,39,39,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,55,38,38,29,39],
[36,0,42,51,38,42,35,43],
[41,39,0,46,38,46,35,40],
[26,30,35,0,33,29,26,25],
[43,43,43,48,0,42,29,25],
[43,39,35,52,39,0,33,28],
[52,46,46,55,52,48,0,34],
[42,38,41,56,56,53,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,42,44,23,19,51,31],
[58,0,43,51,37,44,56,42],
[39,38,0,44,37,33,48,32],
[37,30,37,0,27,31,26,33],
[58,44,44,54,0,37,56,48],
[62,37,48,50,44,0,61,32],
[30,25,33,55,25,20,0,31],
[50,39,49,48,33,49,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,34,45,41,42,38,38],
[36,0,34,44,39,41,37,37],
[47,47,0,38,43,43,50,48],
[36,37,43,0,37,38,36,35],
[40,42,38,44,0,43,43,40],
[39,40,38,43,38,0,45,43],
[43,44,31,45,38,36,0,29],
[43,44,33,46,41,38,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,42,55,39,40,41,62],
[47,0,33,34,45,47,36,47],
[39,48,0,54,35,54,42,61],
[26,47,27,0,28,42,60,71],
[42,36,46,53,0,31,46,43],
[41,34,27,39,50,0,51,76],
[40,45,39,21,35,30,0,61],
[19,34,20,10,38,5,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,46,42,51,38,49],
[43,0,41,40,35,53,40,44],
[44,40,0,53,47,55,42,52],
[35,41,28,0,38,35,30,42],
[39,46,34,43,0,52,56,41],
[30,28,26,46,29,0,29,40],
[43,41,39,51,25,52,0,48],
[32,37,29,39,40,41,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,51,45,50,56,38,47],
[36,0,64,52,43,52,52,42],
[30,17,0,43,43,52,26,31],
[36,29,38,0,21,36,31,31],
[31,38,38,60,0,64,31,53],
[25,29,29,45,17,0,32,31],
[43,29,55,50,50,49,0,42],
[34,39,50,50,28,50,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,38,44,56,50,38],
[34,0,41,31,33,28,41,52],
[37,40,0,43,41,33,39,33],
[43,50,38,0,34,35,56,38],
[37,48,40,47,0,42,40,45],
[25,53,48,46,39,0,34,39],
[31,40,42,25,41,47,0,34],
[43,29,48,43,36,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,31,27,33,33,34],
[44,0,38,46,39,41,42,40],
[48,43,0,39,47,41,44,42],
[50,35,42,0,41,46,46,38],
[54,42,34,40,0,42,39,42],
[48,40,40,35,39,0,44,36],
[48,39,37,35,42,37,0,41],
[47,41,39,43,39,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,43,37,43,51,43,49],
[32,0,32,35,35,41,36,42],
[38,49,0,39,41,48,46,50],
[44,46,42,0,40,42,39,44],
[38,46,40,41,0,45,35,48],
[30,40,33,39,36,0,34,40],
[38,45,35,42,46,47,0,40],
[32,39,31,37,33,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,40,44,42,48,39],
[42,0,34,42,38,42,40,46],
[37,47,0,43,44,43,43,43],
[41,39,38,0,41,41,49,48],
[37,43,37,40,0,41,41,39],
[39,39,38,40,40,0,46,43],
[33,41,38,32,40,35,0,43],
[42,35,38,33,42,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,42,64,60,64,75,52],
[47,0,37,45,47,45,72,62],
[39,44,0,28,48,43,54,52],
[17,36,53,0,63,62,68,63],
[21,34,33,18,0,55,49,35],
[17,36,38,19,26,0,38,36],
[6,9,27,13,32,43,0,19],
[29,19,29,18,46,45,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,40,48,43,38,43,45],
[31,0,26,42,45,43,35,20],
[41,55,0,56,42,36,49,38],
[33,39,25,0,36,40,34,19],
[38,36,39,45,0,43,43,35],
[43,38,45,41,38,0,42,44],
[38,46,32,47,38,39,0,42],
[36,61,43,62,46,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,45,38,37,35,39],
[42,0,46,41,40,39,39,45],
[39,35,0,34,39,30,35,33],
[36,40,47,0,41,39,36,45],
[43,41,42,40,0,41,39,46],
[44,42,51,42,40,0,39,45],
[46,42,46,45,42,42,0,40],
[42,36,48,36,35,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,55,42,42,40,63,45],
[56,0,60,67,63,53,74,35],
[26,21,0,55,46,31,47,26],
[39,14,26,0,38,34,33,32],
[39,18,35,43,0,38,44,22],
[41,28,50,47,43,0,52,31],
[18,7,34,48,37,29,0,18],
[36,46,55,49,59,50,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,36,39,45,44,42],
[39,0,46,42,42,41,45,48],
[38,35,0,42,44,44,41,43],
[45,39,39,0,39,40,46,45],
[42,39,37,42,0,44,44,46],
[36,40,37,41,37,0,44,41],
[37,36,40,35,37,37,0,40],
[39,33,38,36,35,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,46,40,35,39,44],
[39,0,38,44,34,29,35,45],
[40,43,0,41,35,41,41,40],
[35,37,40,0,35,35,39,39],
[41,47,46,46,0,32,42,42],
[46,52,40,46,49,0,48,48],
[42,46,40,42,39,33,0,40],
[37,36,41,42,39,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,33,48,42,35,36,28],
[41,0,34,47,47,36,46,39],
[48,47,0,64,54,46,45,40],
[33,34,17,0,39,35,42,29],
[39,34,27,42,0,37,43,31],
[46,45,35,46,44,0,43,43],
[45,35,36,39,38,38,0,41],
[53,42,41,52,50,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,42,42,47,40,41],
[47,0,46,52,41,51,44,40],
[40,35,0,47,40,48,40,38],
[39,29,34,0,23,36,37,32],
[39,40,41,58,0,44,42,42],
[34,30,33,45,37,0,34,34],
[41,37,41,44,39,47,0,37],
[40,41,43,49,39,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,40,34,42,43,48],
[33,0,43,32,33,38,36,44],
[34,38,0,33,33,41,35,41],
[41,49,48,0,39,45,42,53],
[47,48,48,42,0,50,37,53],
[39,43,40,36,31,0,36,40],
[38,45,46,39,44,45,0,50],
[33,37,40,28,28,41,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,33,40,38,37,43],
[38,0,39,32,40,35,36,43],
[38,42,0,44,48,46,46,59],
[48,49,37,0,49,39,43,55],
[41,41,33,32,0,35,42,50],
[43,46,35,42,46,0,42,58],
[44,45,35,38,39,39,0,55],
[38,38,22,26,31,23,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,32,39,36,40,33,32],
[32,0,25,46,30,47,36,29],
[49,56,0,50,40,46,41,42],
[42,35,31,0,33,43,34,35],
[45,51,41,48,0,48,41,40],
[41,34,35,38,33,0,43,35],
[48,45,40,47,40,38,0,41],
[49,52,39,46,41,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,42,38,45,42,44],
[47,0,30,49,33,39,30,36],
[38,51,0,45,45,48,47,51],
[39,32,36,0,36,35,36,38],
[43,48,36,45,0,43,37,39],
[36,42,33,46,38,0,37,43],
[39,51,34,45,44,44,0,42],
[37,45,30,43,42,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,41,45,46,41,40],
[40,0,45,43,43,45,48,45],
[36,36,0,38,40,42,44,35],
[40,38,43,0,38,45,40,33],
[36,38,41,43,0,40,39,42],
[35,36,39,36,41,0,35,33],
[40,33,37,41,42,46,0,34],
[41,36,46,48,39,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,44,31,30,41,31],
[40,0,33,37,32,31,38,26],
[36,48,0,40,38,38,39,34],
[37,44,41,0,30,25,43,34],
[50,49,43,51,0,37,47,44],
[51,50,43,56,44,0,54,37],
[40,43,42,38,34,27,0,25],
[50,55,47,47,37,44,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,38,44,39,41,36],
[44,0,44,38,43,40,38,33],
[40,37,0,42,41,42,42,38],
[43,43,39,0,47,43,42,41],
[37,38,40,34,0,35,41,37],
[42,41,39,38,46,0,41,43],
[40,43,39,39,40,40,0,40],
[45,48,43,40,44,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,38,42,54,31,33,45],
[23,0,20,38,38,27,29,36],
[43,61,0,47,44,39,43,68],
[39,43,34,0,40,35,33,60],
[27,43,37,41,0,34,25,52],
[50,54,42,46,47,0,33,65],
[48,52,38,48,56,48,0,55],
[36,45,13,21,29,16,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,52,35,36,24,30],
[41,0,39,48,31,34,40,28],
[44,42,0,53,40,34,42,33],
[29,33,28,0,27,26,34,32],
[46,50,41,54,0,39,37,30],
[45,47,47,55,42,0,40,46],
[57,41,39,47,44,41,0,37],
[51,53,48,49,51,35,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,50,45,45,42,44],
[40,0,45,46,47,55,42,56],
[42,36,0,37,34,47,44,48],
[31,35,44,0,31,25,29,37],
[36,34,47,50,0,47,44,42],
[36,26,34,56,34,0,42,41],
[39,39,37,52,37,39,0,43],
[37,25,33,44,39,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,37,47,27,39,38],
[44,0,42,32,42,40,35,32],
[43,39,0,36,47,44,44,40],
[44,49,45,0,45,44,45,38],
[34,39,34,36,0,34,28,28],
[54,41,37,37,47,0,37,49],
[42,46,37,36,53,44,0,35],
[43,49,41,43,53,32,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,44,50,44,42,40],
[44,0,42,39,52,46,47,45],
[35,39,0,33,47,37,39,38],
[37,42,48,0,45,43,41,43],
[31,29,34,36,0,36,38,39],
[37,35,44,38,45,0,45,41],
[39,34,42,40,43,36,0,38],
[41,36,43,38,42,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,32,46,37,21,31,21],
[36,0,43,57,48,45,37,54],
[49,38,0,56,48,39,33,27],
[35,24,25,0,25,28,31,14],
[44,33,33,56,0,25,28,20],
[60,36,42,53,56,0,31,55],
[50,44,48,50,53,50,0,29],
[60,27,54,67,61,26,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,38,32,41,40,39],
[43,0,34,38,37,46,46,39],
[44,47,0,42,36,45,41,44],
[43,43,39,0,30,45,42,32],
[49,44,45,51,0,44,39,38],
[40,35,36,36,37,0,40,38],
[41,35,40,39,42,41,0,32],
[42,42,37,49,43,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,43,41,38,41,39],
[37,0,41,43,38,44,41,41],
[45,40,0,44,40,36,42,44],
[38,38,37,0,41,36,38,48],
[40,43,41,40,0,40,46,50],
[43,37,45,45,41,0,41,42],
[40,40,39,43,35,40,0,48],
[42,40,37,33,31,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,49,46,38,43,50,55],
[32,0,45,44,43,52,43,38],
[32,36,0,39,39,43,42,44],
[35,37,42,0,44,45,44,44],
[43,38,42,37,0,49,47,49],
[38,29,38,36,32,0,39,38],
[31,38,39,37,34,42,0,41],
[26,43,37,37,32,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,35,39,42,35,37],
[37,0,42,35,40,41,35,36],
[34,39,0,36,42,45,37,34],
[46,46,45,0,49,38,41,41],
[42,41,39,32,0,36,39,41],
[39,40,36,43,45,0,38,40],
[46,46,44,40,42,43,0,38],
[44,45,47,40,40,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,39,31,35,40,30,37],
[33,0,37,39,31,46,29,37],
[42,44,0,39,33,39,37,34],
[50,42,42,0,48,46,36,35],
[46,50,48,33,0,47,47,50],
[41,35,42,35,34,0,27,34],
[51,52,44,45,34,54,0,37],
[44,44,47,46,31,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,40,50,34,48,36],
[37,0,40,39,44,33,44,33],
[44,41,0,51,51,53,49,40],
[41,42,30,0,47,37,44,45],
[31,37,30,34,0,34,45,32],
[47,48,28,44,47,0,52,37],
[33,37,32,37,36,29,0,40],
[45,48,41,36,49,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,58,41,45,39,46,41],
[35,0,40,36,42,37,38,35],
[23,41,0,26,32,29,30,37],
[40,45,55,0,46,39,49,41],
[36,39,49,35,0,37,33,43],
[42,44,52,42,44,0,45,40],
[35,43,51,32,48,36,0,45],
[40,46,44,40,38,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,50,40,34,55,45,44],
[37,0,36,30,34,48,45,48],
[31,45,0,32,37,37,36,35],
[41,51,49,0,36,46,40,47],
[47,47,44,45,0,39,35,40],
[26,33,44,35,42,0,38,40],
[36,36,45,41,46,43,0,41],
[37,33,46,34,41,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,30,37,34,40,37],
[45,0,41,39,39,41,44,40],
[45,40,0,47,41,43,51,43],
[51,42,34,0,38,36,44,41],
[44,42,40,43,0,40,39,47],
[47,40,38,45,41,0,46,45],
[41,37,30,37,42,35,0,41],
[44,41,38,40,34,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,41,40,36,43,32],
[44,0,43,39,38,40,40,39],
[39,38,0,36,35,35,48,29],
[40,42,45,0,42,42,52,38],
[41,43,46,39,0,45,50,39],
[45,41,46,39,36,0,45,42],
[38,41,33,29,31,36,0,32],
[49,42,52,43,42,39,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,37,34,37,39,34],
[42,0,34,35,36,37,40,37],
[45,47,0,40,43,42,45,39],
[44,46,41,0,46,37,44,33],
[47,45,38,35,0,33,39,43],
[44,44,39,44,48,0,38,45],
[42,41,36,37,42,43,0,39],
[47,44,42,48,38,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,69,60,58,68,45,40],
[25,0,44,51,34,47,44,31],
[12,37,0,31,27,30,25,31],
[21,30,50,0,39,41,18,25],
[23,47,54,42,0,44,36,39],
[13,34,51,40,37,0,33,42],
[36,37,56,63,45,48,0,30],
[41,50,50,56,42,39,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,48,40,49,38,49,48],
[29,0,47,27,23,18,37,31],
[33,34,0,38,36,22,30,41],
[41,54,43,0,32,39,41,50],
[32,58,45,49,0,43,42,57],
[43,63,59,42,38,0,53,56],
[32,44,51,40,39,28,0,42],
[33,50,40,31,24,25,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,47,49,47,54,40,44],
[25,0,34,33,33,42,32,37],
[34,47,0,39,36,49,45,42],
[32,48,42,0,42,42,43,39],
[34,48,45,39,0,48,52,36],
[27,39,32,39,33,0,29,40],
[41,49,36,38,29,52,0,24],
[37,44,39,42,45,41,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,40,57,53,48,41],
[35,0,42,45,55,41,47,37],
[43,39,0,37,45,46,41,39],
[41,36,44,0,61,49,44,50],
[24,26,36,20,0,40,36,29],
[28,40,35,32,41,0,42,39],
[33,34,40,37,45,39,0,35],
[40,44,42,31,52,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,34,34,51,51,34,32],
[30,0,15,34,36,17,64,62],
[47,66,0,64,36,36,49,47],
[47,47,17,0,17,17,47,47],
[30,45,45,64,0,32,64,62],
[30,64,45,64,49,0,64,45],
[47,17,32,34,17,17,0,62],
[49,19,34,34,19,36,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,33,40,25,35,22],
[39,0,35,38,32,32,41,31],
[50,46,0,49,42,35,49,30],
[48,43,32,0,32,42,43,34],
[41,49,39,49,0,39,36,37],
[56,49,46,39,42,0,42,27],
[46,40,32,38,45,39,0,45],
[59,50,51,47,44,54,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,36,41,38,35,37],
[45,0,39,36,36,29,37,36],
[41,42,0,35,32,31,31,39],
[45,45,46,0,43,29,40,38],
[40,45,49,38,0,36,29,41],
[43,52,50,52,45,0,37,45],
[46,44,50,41,52,44,0,35],
[44,45,42,43,40,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,43,28,33,36,47],
[49,0,39,43,33,40,45,48],
[51,42,0,53,44,40,41,46],
[38,38,28,0,37,33,42,36],
[53,48,37,44,0,52,53,44],
[48,41,41,48,29,0,47,46],
[45,36,40,39,28,34,0,35],
[34,33,35,45,37,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,51,48,40,53,50],
[29,0,46,35,38,51,48,39],
[21,35,0,30,30,26,44,40],
[30,46,51,0,40,40,42,42],
[33,43,51,41,0,56,51,42],
[41,30,55,41,25,0,50,44],
[28,33,37,39,30,31,0,40],
[31,42,41,39,39,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,42,31,42,34,31,30],
[52,0,52,32,51,61,47,45],
[39,29,0,37,30,43,35,45],
[50,49,44,0,50,52,36,43],
[39,30,51,31,0,48,36,41],
[47,20,38,29,33,0,40,38],
[50,34,46,45,45,41,0,40],
[51,36,36,38,40,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,35,39,39,27,44],
[46,0,55,41,54,25,36,45],
[40,26,0,28,36,29,35,28],
[46,40,53,0,69,48,42,44],
[42,27,45,12,0,18,43,23],
[42,56,52,33,63,0,38,47],
[54,45,46,39,38,43,0,44],
[37,36,53,37,58,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,40,44,32,25,37,39],
[53,0,44,52,39,35,40,41],
[41,37,0,53,30,32,41,35],
[37,29,28,0,33,30,34,35],
[49,42,51,48,0,47,38,44],
[56,46,49,51,34,0,46,41],
[44,41,40,47,43,35,0,45],
[42,40,46,46,37,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,30,44,35,52,40,39],
[36,0,38,34,50,44,33,43],
[51,43,0,51,50,39,50,53],
[37,47,30,0,23,41,31,36],
[46,31,31,58,0,48,46,52],
[29,37,42,40,33,0,36,40],
[41,48,31,50,35,45,0,50],
[42,38,28,45,29,41,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,33,35,42,34,40],
[41,0,42,37,44,42,35,41],
[36,39,0,40,43,42,41,36],
[48,44,41,0,39,48,42,47],
[46,37,38,42,0,48,41,46],
[39,39,39,33,33,0,39,36],
[47,46,40,39,40,42,0,40],
[41,40,45,34,35,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,44,47,40,41,37],
[42,0,48,36,47,42,49,42],
[33,33,0,33,37,30,32,35],
[37,45,48,0,40,40,42,43],
[34,34,44,41,0,36,40,38],
[41,39,51,41,45,0,46,41],
[40,32,49,39,41,35,0,39],
[44,39,46,38,43,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,38,48,36,41,39],
[45,0,31,28,37,39,36,35],
[46,50,0,35,47,45,41,45],
[43,53,46,0,50,38,44,42],
[33,44,34,31,0,29,34,34],
[45,42,36,43,52,0,46,39],
[40,45,40,37,47,35,0,31],
[42,46,36,39,47,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,48,43,56,41,38],
[34,0,32,37,38,37,34,37],
[37,49,0,37,47,50,38,39],
[33,44,44,0,52,45,46,41],
[38,43,34,29,0,39,41,38],
[25,44,31,36,42,0,28,36],
[40,47,43,35,40,53,0,46],
[43,44,42,40,43,45,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,38,35,37,30,36],
[40,0,51,41,37,41,36,40],
[43,30,0,40,39,35,37,38],
[43,40,41,0,36,34,40,31],
[46,44,42,45,0,38,34,33],
[44,40,46,47,43,0,34,42],
[51,45,44,41,47,47,0,37],
[45,41,43,50,48,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,45,37,52,44,44],
[41,0,39,37,41,41,42,42],
[44,42,0,52,37,46,49,51],
[36,44,29,0,35,37,31,44],
[44,40,44,46,0,50,47,44],
[29,40,35,44,31,0,34,44],
[37,39,32,50,34,47,0,47],
[37,39,30,37,37,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,32,49,41,41,36],
[44,0,45,50,60,47,39,46],
[46,36,0,31,59,41,32,44],
[49,31,50,0,61,44,34,35],
[32,21,22,20,0,19,37,26],
[40,34,40,37,62,0,29,45],
[40,42,49,47,44,52,0,37],
[45,35,37,46,55,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,33,34,41,36,38],
[45,0,40,44,41,45,37,46],
[41,41,0,43,36,44,42,42],
[48,37,38,0,42,46,41,45],
[47,40,45,39,0,43,42,50],
[40,36,37,35,38,0,39,44],
[45,44,39,40,39,42,0,49],
[43,35,39,36,31,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,31,41,31,35,28],
[41,0,39,33,34,34,26,30],
[40,42,0,37,50,41,36,35],
[50,48,44,0,42,45,29,35],
[40,47,31,39,0,36,40,33],
[50,47,40,36,45,0,43,41],
[46,55,45,52,41,38,0,41],
[53,51,46,46,48,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,46,39,42,29,41],
[46,0,45,48,41,36,41,49],
[40,36,0,46,39,43,36,48],
[35,33,35,0,31,31,29,45],
[42,40,42,50,0,46,36,44],
[39,45,38,50,35,0,32,47],
[52,40,45,52,45,49,0,47],
[40,32,33,36,37,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,26,27,19,53,25,32],
[40,0,42,38,51,41,43,39],
[55,39,0,40,49,47,43,38],
[54,43,41,0,49,55,29,42],
[62,30,32,32,0,58,41,28],
[28,40,34,26,23,0,23,38],
[56,38,38,52,40,58,0,37],
[49,42,43,39,53,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,34,27,32,25,41,18],
[54,0,27,39,31,33,33,21],
[47,54,0,50,38,54,58,33],
[54,42,31,0,41,44,28,41],
[49,50,43,40,0,50,37,38],
[56,48,27,37,31,0,44,47],
[40,48,23,53,44,37,0,26],
[63,60,48,40,43,34,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,36,37,43,44,33,41],
[32,0,31,35,36,34,39,29],
[45,50,0,48,49,47,38,33],
[44,46,33,0,41,48,38,37],
[38,45,32,40,0,42,35,36],
[37,47,34,33,39,0,33,35],
[48,42,43,43,46,48,0,34],
[40,52,48,44,45,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,27,36,35,30,36,37],
[46,0,32,31,35,33,38,33],
[54,49,0,34,39,41,47,43],
[45,50,47,0,39,40,49,38],
[46,46,42,42,0,42,50,37],
[51,48,40,41,39,0,52,47],
[45,43,34,32,31,29,0,30],
[44,48,38,43,44,34,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,36,47,40,42,37,47],
[32,0,38,37,38,31,37,34],
[45,43,0,44,39,36,43,41],
[34,44,37,0,39,34,36,39],
[41,43,42,42,0,36,37,36],
[39,50,45,47,45,0,42,39],
[44,44,38,45,44,39,0,43],
[34,47,40,42,45,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,42,44,48,46,54],
[35,0,34,36,29,42,40,47],
[41,47,0,35,43,41,44,50],
[39,45,46,0,48,42,49,57],
[37,52,38,33,0,38,36,35],
[33,39,40,39,43,0,34,45],
[35,41,37,32,45,47,0,45],
[27,34,31,24,46,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,37,36,28,46,55],
[50,0,24,37,30,40,42,50],
[54,57,0,35,40,41,40,56],
[44,44,46,0,44,42,40,61],
[45,51,41,37,0,36,39,51],
[53,41,40,39,45,0,48,54],
[35,39,41,41,42,33,0,56],
[26,31,25,20,30,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,42,35,34,48,31],
[44,0,40,38,41,43,49,41],
[42,41,0,43,41,51,47,38],
[39,43,38,0,34,37,36,32],
[46,40,40,47,0,37,38,46],
[47,38,30,44,44,0,41,35],
[33,32,34,45,43,40,0,36],
[50,40,43,49,35,46,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,47,35,49,36,34],
[47,0,42,40,41,42,29,32],
[42,39,0,44,30,39,46,26],
[34,41,37,0,33,46,35,35],
[46,40,51,48,0,51,44,41],
[32,39,42,35,30,0,34,26],
[45,52,35,46,37,47,0,34],
[47,49,55,46,40,55,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,36,41,37,50,33],
[40,0,38,40,33,41,43,34],
[42,43,0,42,42,39,42,44],
[45,41,39,0,45,44,43,38],
[40,48,39,36,0,38,46,44],
[44,40,42,37,43,0,45,35],
[31,38,39,38,35,36,0,40],
[48,47,37,43,37,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,59,28,37,40,45,44],
[34,0,50,30,31,34,33,29],
[22,31,0,39,21,30,45,33],
[53,51,42,0,42,38,49,38],
[44,50,60,39,0,52,41,40],
[41,47,51,43,29,0,46,44],
[36,48,36,32,40,35,0,43],
[37,52,48,43,41,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,51,45,41,37,40,36],
[42,0,47,48,43,37,45,35],
[30,34,0,36,36,30,32,31],
[36,33,45,0,39,41,39,40],
[40,38,45,42,0,37,40,38],
[44,44,51,40,44,0,42,43],
[41,36,49,42,41,39,0,38],
[45,46,50,41,43,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,37,40,46,41,27],
[37,0,25,21,32,25,29,34],
[39,56,0,44,50,34,39,42],
[44,60,37,0,46,39,44,37],
[41,49,31,35,0,43,30,35],
[35,56,47,42,38,0,48,40],
[40,52,42,37,51,33,0,33],
[54,47,39,44,46,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,42,29,47,50,48],
[37,0,48,35,37,47,41,34],
[35,33,0,36,40,33,45,39],
[39,46,45,0,42,43,56,29],
[52,44,41,39,0,51,45,49],
[34,34,48,38,30,0,43,35],
[31,40,36,25,36,38,0,43],
[33,47,42,52,32,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,38,40,34,38,38],
[44,0,44,42,38,42,41,42],
[47,37,0,43,40,29,42,39],
[43,39,38,0,40,30,38,37],
[41,43,41,41,0,36,45,38],
[47,39,52,51,45,0,44,42],
[43,40,39,43,36,37,0,32],
[43,39,42,44,43,39,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,41,49,42,31,36,29],
[29,0,41,25,32,41,36,24],
[40,40,0,45,50,42,48,41],
[32,56,36,0,37,42,34,30],
[39,49,31,44,0,33,30,32],
[50,40,39,39,48,0,39,26],
[45,45,33,47,51,42,0,38],
[52,57,40,51,49,55,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,38,30,26,32,35],
[45,0,41,40,46,44,38,47],
[46,40,0,38,45,32,42,43],
[43,41,43,0,44,35,39,49],
[51,35,36,37,0,34,37,43],
[55,37,49,46,47,0,40,44],
[49,43,39,42,44,41,0,49],
[46,34,38,32,38,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,48,36,39,36,33,26],
[52,0,46,43,47,35,40,40],
[33,35,0,34,38,27,31,32],
[45,38,47,0,46,32,35,39],
[42,34,43,35,0,36,32,35],
[45,46,54,49,45,0,39,41],
[48,41,50,46,49,42,0,36],
[55,41,49,42,46,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,20,25,25,27,25],
[40,0,44,36,42,41,49,41],
[44,37,0,37,63,57,53,42],
[61,45,44,0,32,22,52,25],
[56,39,18,49,0,52,41,18],
[56,40,24,59,29,0,44,41],
[54,32,28,29,40,37,0,12],
[56,40,39,56,63,40,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,14,30,46,33,36,42],
[45,0,33,42,39,32,18,45],
[67,48,0,28,56,40,46,51],
[51,39,53,0,42,50,46,51],
[35,42,25,39,0,37,22,50],
[48,49,41,31,44,0,16,59],
[45,63,35,35,59,65,0,59],
[39,36,30,30,31,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,35,27,32,37,25],
[44,0,45,49,43,33,49,42],
[47,36,0,44,39,34,47,35],
[46,32,37,0,36,35,55,37],
[54,38,42,45,0,33,51,36],
[49,48,47,46,48,0,53,40],
[44,32,34,26,30,28,0,28],
[56,39,46,44,45,41,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,27,25,43,26,25,45],
[33,0,35,39,45,26,29,55],
[54,46,0,52,33,26,46,58],
[56,42,29,0,36,32,48,53],
[38,36,48,45,0,41,32,57],
[55,55,55,49,40,0,38,68],
[56,52,35,33,49,43,0,54],
[36,26,23,28,24,13,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,38,36,44,41,43],
[41,0,40,42,44,45,47,48],
[39,41,0,40,34,38,39,46],
[43,39,41,0,40,43,45,46],
[45,37,47,41,0,43,48,45],
[37,36,43,38,38,0,38,42],
[40,34,42,36,33,43,0,39],
[38,33,35,35,36,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,47,36,27,28,52,25],
[54,0,52,38,35,36,45,19],
[34,29,0,34,23,34,47,21],
[45,43,47,0,27,55,51,42],
[54,46,58,54,0,38,40,15],
[53,45,47,26,43,0,47,21],
[29,36,34,30,41,34,0,19],
[56,62,60,39,66,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,41,40,33,49,39,28],
[58,0,45,59,39,54,42,49],
[40,36,0,49,40,47,34,31],
[41,22,32,0,26,41,22,32],
[48,42,41,55,0,54,45,39],
[32,27,34,40,27,0,32,22],
[42,39,47,59,36,49,0,42],
[53,32,50,49,42,59,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,38,44,44,41,48],
[48,0,50,42,46,47,40,43],
[39,31,0,35,37,41,36,31],
[43,39,46,0,43,40,47,43],
[37,35,44,38,0,42,40,37],
[37,34,40,41,39,0,42,33],
[40,41,45,34,41,39,0,44],
[33,38,50,38,44,48,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,22,29,36,35,36],
[46,0,44,37,40,35,47,49],
[42,37,0,35,31,33,39,32],
[59,44,46,0,39,45,40,51],
[52,41,50,42,0,34,49,40],
[45,46,48,36,47,0,43,38],
[46,34,42,41,32,38,0,42],
[45,32,49,30,41,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,38,40,42,45,44],
[40,0,36,39,35,35,31,36],
[37,45,0,37,41,30,36,43],
[43,42,44,0,42,40,41,40],
[41,46,40,39,0,42,34,38],
[39,46,51,41,39,0,35,36],
[36,50,45,40,47,46,0,43],
[37,45,38,41,43,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,40,34,35,33,32],
[39,0,39,43,40,46,35,34],
[40,42,0,43,42,37,39,43],
[41,38,38,0,35,41,36,37],
[47,41,39,46,0,43,42,40],
[46,35,44,40,38,0,42,35],
[48,46,42,45,39,39,0,41],
[49,47,38,44,41,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,36,36,31,36,36],
[47,0,43,41,39,39,44,44],
[43,38,0,43,44,44,41,41],
[45,40,38,0,48,43,39,45],
[45,42,37,33,0,40,45,32],
[50,42,37,38,41,0,47,44],
[45,37,40,42,36,34,0,46],
[45,37,40,36,49,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,46,29,30,30,41],
[42,0,38,42,29,39,28,46],
[47,43,0,58,35,45,40,42],
[35,39,23,0,37,38,27,33],
[52,52,46,44,0,40,37,48],
[51,42,36,43,41,0,33,43],
[51,53,41,54,44,48,0,40],
[40,35,39,48,33,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,38,33,38,33,39],
[40,0,45,46,30,39,41,42],
[41,36,0,40,34,37,39,35],
[43,35,41,0,32,36,35,35],
[48,51,47,49,0,44,39,50],
[43,42,44,45,37,0,37,46],
[48,40,42,46,42,44,0,42],
[42,39,46,46,31,35,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,34,45,43,37,39],
[41,0,34,32,39,33,29,41],
[43,47,0,35,39,43,39,41],
[47,49,46,0,45,50,40,38],
[36,42,42,36,0,50,36,42],
[38,48,38,31,31,0,31,32],
[44,52,42,41,45,50,0,36],
[42,40,40,43,39,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,49,40,37,39,48],
[40,0,54,50,48,43,42,43],
[32,27,0,45,43,33,40,40],
[32,31,36,0,41,36,37,37],
[41,33,38,40,0,43,40,40],
[44,38,48,45,38,0,42,44],
[42,39,41,44,41,39,0,37],
[33,38,41,44,41,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,36,44,52,37,48],
[39,0,43,39,40,50,45,55],
[36,38,0,41,36,44,44,39],
[45,42,40,0,44,47,48,47],
[37,41,45,37,0,51,42,49],
[29,31,37,34,30,0,36,38],
[44,36,37,33,39,45,0,42],
[33,26,42,34,32,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,48,49,37,50,36],
[38,0,39,41,42,33,48,47],
[37,42,0,41,36,38,36,42],
[33,40,40,0,34,44,36,44],
[32,39,45,47,0,35,27,39],
[44,48,43,37,46,0,63,41],
[31,33,45,45,54,18,0,37],
[45,34,39,37,42,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,35,40,35,47,34],
[45,0,35,36,43,46,54,34],
[41,46,0,40,45,42,47,41],
[46,45,41,0,45,40,50,40],
[41,38,36,36,0,38,49,32],
[46,35,39,41,43,0,53,42],
[34,27,34,31,32,28,0,25],
[47,47,40,41,49,39,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,28,40,34,32,42,34],
[47,0,43,42,39,44,49,35],
[53,38,0,39,48,34,40,31],
[41,39,42,0,44,39,49,36],
[47,42,33,37,0,30,40,40],
[49,37,47,42,51,0,48,43],
[39,32,41,32,41,33,0,39],
[47,46,50,45,41,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,41,41,41,48,46],
[47,0,41,43,50,35,40,46],
[41,40,0,47,48,36,40,43],
[40,38,34,0,51,44,44,46],
[40,31,33,30,0,31,36,40],
[40,46,45,37,50,0,35,43],
[33,41,41,37,45,46,0,45],
[35,35,38,35,41,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,42,50,46,44,47],
[41,0,40,44,44,46,41,48],
[34,41,0,39,38,44,43,40],
[39,37,42,0,45,39,41,38],
[31,37,43,36,0,40,34,39],
[35,35,37,42,41,0,41,42],
[37,40,38,40,47,40,0,45],
[34,33,41,43,42,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,39,39,44,36,23,38],
[28,0,36,30,30,34,29,22],
[42,45,0,44,51,37,33,41],
[42,51,37,0,51,51,34,48],
[37,51,30,30,0,38,23,32],
[45,47,44,30,43,0,39,42],
[58,52,48,47,58,42,0,39],
[43,59,40,33,49,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,50,37,32,50,30,37],
[27,0,20,6,33,34,26,41],
[31,61,0,38,44,54,46,37],
[44,75,43,0,53,39,51,50],
[49,48,37,28,0,33,45,29],
[31,47,27,42,48,0,39,35],
[51,55,35,30,36,42,0,37],
[44,40,44,31,52,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,37,37,36,33,35],
[39,0,40,42,46,38,36,40],
[38,41,0,38,44,42,36,41],
[44,39,43,0,40,37,41,39],
[44,35,37,41,0,39,33,40],
[45,43,39,44,42,0,36,38],
[48,45,45,40,48,45,0,45],
[46,41,40,42,41,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,52,42,37,43,45,43],
[42,0,45,41,39,38,46,42],
[29,36,0,42,35,34,40,41],
[39,40,39,0,31,40,43,37],
[44,42,46,50,0,38,46,50],
[38,43,47,41,43,0,44,43],
[36,35,41,38,35,37,0,45],
[38,39,40,44,31,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,48,46,39,49,33,53],
[32,0,42,39,41,42,48,40],
[33,39,0,41,35,51,37,46],
[35,42,40,0,41,39,29,38],
[42,40,46,40,0,49,43,55],
[32,39,30,42,32,0,35,41],
[48,33,44,52,38,46,0,50],
[28,41,35,43,26,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,36,31,36,53,44],
[44,0,46,40,47,45,57,54],
[52,35,0,35,25,43,52,45],
[45,41,46,0,31,28,55,50],
[50,34,56,50,0,41,60,50],
[45,36,38,53,40,0,56,65],
[28,24,29,26,21,25,0,35],
[37,27,36,31,31,16,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,37,39,44,42,47],
[37,0,42,31,38,43,33,36],
[46,39,0,33,38,45,40,41],
[44,50,48,0,42,51,39,45],
[42,43,43,39,0,41,39,41],
[37,38,36,30,40,0,36,37],
[39,48,41,42,42,45,0,47],
[34,45,40,36,40,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,42,46,47,44,44],
[42,0,43,33,34,43,34,36],
[33,38,0,29,33,37,37,31],
[39,48,52,0,44,44,44,42],
[35,47,48,37,0,41,43,45],
[34,38,44,37,40,0,34,37],
[37,47,44,37,38,47,0,42],
[37,45,50,39,36,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,37,38,33,31,41],
[38,0,35,39,42,36,36,41],
[39,46,0,41,47,39,44,51],
[44,42,40,0,48,45,41,43],
[43,39,34,33,0,35,42,43],
[48,45,42,36,46,0,37,46],
[50,45,37,40,39,44,0,50],
[40,40,30,38,38,35,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,41,40,40,38,35],
[42,0,42,35,33,37,34,37],
[42,39,0,39,38,38,31,35],
[40,46,42,0,37,39,35,34],
[41,48,43,44,0,39,38,41],
[41,44,43,42,42,0,43,38],
[43,47,50,46,43,38,0,40],
[46,44,46,47,40,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,42,52,48,52,45],
[39,0,35,40,43,39,47,47],
[42,46,0,49,51,40,53,42],
[39,41,32,0,40,34,49,36],
[29,38,30,41,0,41,35,38],
[33,42,41,47,40,0,48,42],
[29,34,28,32,46,33,0,34],
[36,34,39,45,43,39,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,44,44,38,46,46],
[35,0,47,43,47,39,45,45],
[37,34,0,44,39,37,37,43],
[37,38,37,0,41,35,42,37],
[37,34,42,40,0,35,37,45],
[43,42,44,46,46,0,39,44],
[35,36,44,39,44,42,0,44],
[35,36,38,44,36,37,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,32,40,39,36,36],
[47,0,41,40,51,39,38,43],
[41,40,0,34,48,41,42,46],
[49,41,47,0,52,46,39,36],
[41,30,33,29,0,34,28,41],
[42,42,40,35,47,0,43,44],
[45,43,39,42,53,38,0,46],
[45,38,35,45,40,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,50,42,39,45,41,40],
[41,0,47,38,39,42,34,45],
[31,34,0,30,31,37,32,33],
[39,43,51,0,42,48,39,45],
[42,42,50,39,0,46,45,40],
[36,39,44,33,35,0,39,42],
[40,47,49,42,36,42,0,42],
[41,36,48,36,41,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,43,41,29,43,50],
[37,0,39,44,40,32,30,42],
[44,42,0,38,39,47,40,44],
[38,37,43,0,40,35,34,43],
[40,41,42,41,0,30,42,48],
[52,49,34,46,51,0,48,51],
[38,51,41,47,39,33,0,55],
[31,39,37,38,33,30,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,41,35,45,42,47],
[44,0,40,45,41,49,46,48],
[40,41,0,39,39,41,50,45],
[40,36,42,0,34,43,39,47],
[46,40,42,47,0,47,45,48],
[36,32,40,38,34,0,41,42],
[39,35,31,42,36,40,0,43],
[34,33,36,34,33,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,42,39,34,48,37],
[41,0,38,45,42,43,36,43],
[34,43,0,45,42,44,32,32],
[39,36,36,0,47,35,42,30],
[42,39,39,34,0,26,34,29],
[47,38,37,46,55,0,50,40],
[33,45,49,39,47,31,0,41],
[44,38,49,51,52,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,24,24,0,24,24],
[57,0,63,39,39,39,24,39],
[57,18,0,0,18,0,0,57],
[57,42,81,0,81,18,42,81],
[57,42,63,0,0,0,24,57],
[81,42,81,63,81,0,24,81],
[57,57,81,39,57,57,0,57],
[57,42,24,0,24,0,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,35,22,31,41,31,33],
[48,0,49,50,31,62,49,67],
[46,32,0,34,30,49,43,48],
[59,31,47,0,49,56,39,45],
[50,50,51,32,0,53,48,51],
[40,19,32,25,28,0,23,40],
[50,32,38,42,33,58,0,50],
[48,14,33,36,30,41,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,35,39,29,29,33,49],
[38,0,34,41,29,32,41,43],
[46,47,0,45,40,31,34,46],
[42,40,36,0,39,31,32,58],
[52,52,41,42,0,31,36,53],
[52,49,50,50,50,0,34,56],
[48,40,47,49,45,47,0,54],
[32,38,35,23,28,25,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,47,43,41,48,38,43],
[30,0,43,40,32,42,39,36],
[34,38,0,44,30,40,37,33],
[38,41,37,0,30,44,30,40],
[40,49,51,51,0,53,47,47],
[33,39,41,37,28,0,38,33],
[43,42,44,51,34,43,0,45],
[38,45,48,41,34,48,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,49,42,39,37,35],
[39,0,37,51,44,42,49,38],
[39,44,0,47,42,44,38,39],
[32,30,34,0,40,33,38,29],
[39,37,39,41,0,46,45,46],
[42,39,37,48,35,0,41,42],
[44,32,43,43,36,40,0,38],
[46,43,42,52,35,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,37,37,38,31,45,36],
[51,0,30,42,45,27,39,40],
[44,51,0,46,49,46,44,38],
[44,39,35,0,39,33,46,38],
[43,36,32,42,0,34,45,38],
[50,54,35,48,47,0,48,53],
[36,42,37,35,36,33,0,42],
[45,41,43,43,43,28,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,42,41,43,46,40],
[43,0,38,39,42,42,45,42],
[36,43,0,43,41,37,41,38],
[39,42,38,0,42,42,37,40],
[40,39,40,39,0,38,40,47],
[38,39,44,39,43,0,48,43],
[35,36,40,44,41,33,0,42],
[41,39,43,41,34,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,18,37,40,33,41],
[15,0,40,17,25,35,24,7],
[25,41,0,13,41,34,43,27],
[63,64,68,0,48,53,49,40],
[44,56,40,33,0,36,38,31],
[41,46,47,28,45,0,49,42],
[48,57,38,32,43,32,0,55],
[40,74,54,41,50,39,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,46,40,43,35,40,46],
[46,0,43,42,41,36,40,41],
[35,38,0,42,40,42,37,40],
[41,39,39,0,39,34,35,31],
[38,40,41,42,0,37,37,47],
[46,45,39,47,44,0,48,44],
[41,41,44,46,44,33,0,43],
[35,40,41,50,34,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,1,53,9,61,32,53],
[53,0,53,53,61,61,24,53],
[80,28,0,52,28,80,51,52],
[28,28,29,0,29,29,28,52],
[72,20,53,52,0,61,43,52],
[20,20,1,52,20,0,20,52],
[49,57,30,53,38,61,0,53],
[28,28,29,29,29,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,38,44,35,42,42],
[35,0,40,38,38,33,39,41],
[38,41,0,45,35,41,45,37],
[43,43,36,0,42,47,47,40],
[37,43,46,39,0,39,39,39],
[46,48,40,34,42,0,41,35],
[39,42,36,34,42,40,0,31],
[39,40,44,41,42,46,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,51,39,45,47,43],
[40,0,40,44,42,43,48,37],
[47,41,0,49,38,45,53,50],
[30,37,32,0,36,38,41,42],
[42,39,43,45,0,43,54,44],
[36,38,36,43,38,0,45,42],
[34,33,28,40,27,36,0,36],
[38,44,31,39,37,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,35,40,26,43,41],
[43,0,40,36,37,36,44,39],
[45,41,0,33,40,45,44,38],
[46,45,48,0,41,37,40,42],
[41,44,41,40,0,41,36,41],
[55,45,36,44,40,0,44,40],
[38,37,37,41,45,37,0,43],
[40,42,43,39,40,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,36,32,30,36,41,31],
[48,0,52,36,46,46,49,42],
[45,29,0,38,28,34,44,31],
[49,45,43,0,36,47,48,41],
[51,35,53,45,0,48,58,47],
[45,35,47,34,33,0,45,40],
[40,32,37,33,23,36,0,36],
[50,39,50,40,34,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,38,45,40,44,44],
[47,0,46,44,49,43,48,40],
[40,35,0,37,42,37,40,40],
[43,37,44,0,48,42,43,43],
[36,32,39,33,0,39,40,34],
[41,38,44,39,42,0,40,35],
[37,33,41,38,41,41,0,39],
[37,41,41,38,47,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,32,28,30,28,32,27],
[59,0,43,42,51,42,38,44],
[49,38,0,39,39,44,38,45],
[53,39,42,0,43,41,48,45],
[51,30,42,38,0,43,37,41],
[53,39,37,40,38,0,43,38],
[49,43,43,33,44,38,0,41],
[54,37,36,36,40,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,53,46,32,49,38],
[35,0,46,42,36,47,46,40],
[31,35,0,42,36,40,43,42],
[28,39,39,0,37,23,49,33],
[35,45,45,44,0,37,47,46],
[49,34,41,58,44,0,45,53],
[32,35,38,32,34,36,0,34],
[43,41,39,48,35,28,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,34,43,33,35,35],
[40,0,38,48,48,36,40,42],
[44,43,0,44,45,45,44,40],
[47,33,37,0,43,36,35,49],
[38,33,36,38,0,45,30,34],
[48,45,36,45,36,0,31,45],
[46,41,37,46,51,50,0,33],
[46,39,41,32,47,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,32,29,36,38,38,41],
[42,0,37,36,38,43,37,34],
[49,44,0,43,39,44,40,49],
[52,45,38,0,49,50,47,47],
[45,43,42,32,0,44,41,38],
[43,38,37,31,37,0,39,34],
[43,44,41,34,40,42,0,46],
[40,47,32,34,43,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,42,34,39,40,37],
[44,0,39,45,39,36,37,39],
[47,42,0,46,37,41,43,40],
[39,36,35,0,33,40,33,37],
[47,42,44,48,0,43,37,40],
[42,45,40,41,38,0,36,42],
[41,44,38,48,44,45,0,39],
[44,42,41,44,41,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,37,50,44,42,54],
[44,0,42,41,49,36,41,51],
[34,39,0,42,42,35,43,46],
[44,40,39,0,46,36,41,42],
[31,32,39,35,0,35,39,39],
[37,45,46,45,46,0,43,51],
[39,40,38,40,42,38,0,41],
[27,30,35,39,42,30,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,37,34,51,34,44],
[41,0,33,32,44,45,44,47],
[43,48,0,34,45,50,57,59],
[44,49,47,0,37,53,51,57],
[47,37,36,44,0,51,34,53],
[30,36,31,28,30,0,42,38],
[47,37,24,30,47,39,0,44],
[37,34,22,24,28,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,41,44,49,34,66],
[19,0,41,9,19,30,19,47],
[30,40,0,28,29,37,31,45],
[40,72,53,0,54,47,46,69],
[37,62,52,27,0,40,37,61],
[32,51,44,34,41,0,32,58],
[47,62,50,35,44,49,0,64],
[15,34,36,12,20,23,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,42,51,38,46,55],
[39,0,52,52,41,42,29,57],
[36,29,0,30,41,37,24,32],
[39,29,51,0,35,50,33,40],
[30,40,40,46,0,42,34,35],
[43,39,44,31,39,0,28,53],
[35,52,57,48,47,53,0,49],
[26,24,49,41,46,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,36,34,47,42,42],
[42,0,49,35,40,31,38,42],
[31,32,0,24,31,25,36,31],
[45,46,57,0,35,44,45,41],
[47,41,50,46,0,44,42,39],
[34,50,56,37,37,0,44,46],
[39,43,45,36,39,37,0,41],
[39,39,50,40,42,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,53,36,41,39,38,34],
[30,0,47,26,45,32,31,13],
[28,34,0,30,41,23,42,35],
[45,55,51,0,51,46,44,31],
[40,36,40,30,0,33,33,33],
[42,49,58,35,48,0,45,41],
[43,50,39,37,48,36,0,35],
[47,68,46,50,48,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,37,35,42,33,40],
[32,0,44,29,29,32,25,42],
[34,37,0,44,33,41,30,39],
[44,52,37,0,42,44,36,47],
[46,52,48,39,0,37,41,48],
[39,49,40,37,44,0,40,42],
[48,56,51,45,40,41,0,47],
[41,39,42,34,33,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,36,34,39,40,38],
[37,0,35,36,30,34,32,29],
[41,46,0,36,34,33,45,38],
[45,45,45,0,33,38,42,33],
[47,51,47,48,0,40,47,46],
[42,47,48,43,41,0,46,35],
[41,49,36,39,34,35,0,32],
[43,52,43,48,35,46,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,40,38,50,35,42],
[41,0,40,41,40,46,38,41],
[39,41,0,36,38,43,36,35],
[41,40,45,0,44,48,44,41],
[43,41,43,37,0,49,43,44],
[31,35,38,33,32,0,35,38],
[46,43,45,37,38,46,0,38],
[39,40,46,40,37,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,28,28,24,38,43,39],
[37,0,32,22,37,34,29,20],
[53,49,0,34,48,32,49,31],
[53,59,47,0,40,45,48,52],
[57,44,33,41,0,34,46,46],
[43,47,49,36,47,0,30,45],
[38,52,32,33,35,51,0,38],
[42,61,50,29,35,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,45,41,40,42,41],
[38,0,46,49,49,41,50,40],
[37,35,0,42,33,34,45,38],
[36,32,39,0,34,31,37,37],
[40,32,48,47,0,38,46,37],
[41,40,47,50,43,0,50,45],
[39,31,36,44,35,31,0,38],
[40,41,43,44,44,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,44,41,49,42,39],
[40,0,37,44,41,42,35,42],
[36,44,0,45,42,53,34,39],
[37,37,36,0,38,48,36,41],
[40,40,39,43,0,49,31,38],
[32,39,28,33,32,0,31,35],
[39,46,47,45,50,50,0,40],
[42,39,42,40,43,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,38,43,32,35,42],
[41,0,37,46,39,35,35,40],
[40,44,0,52,41,40,42,46],
[43,35,29,0,33,31,34,32],
[38,42,40,48,0,38,34,48],
[49,46,41,50,43,0,38,45],
[46,46,39,47,47,43,0,46],
[39,41,35,49,33,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,34,37,37,34,32,40],
[46,0,37,37,43,35,35,36],
[47,44,0,41,48,44,39,43],
[44,44,40,0,46,39,41,44],
[44,38,33,35,0,37,35,37],
[47,46,37,42,44,0,39,38],
[49,46,42,40,46,42,0,41],
[41,45,38,37,44,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,35,30,39,47,30,44],
[34,0,36,36,22,45,40,29],
[46,45,0,37,29,34,33,37],
[51,45,44,0,33,44,36,45],
[42,59,52,48,0,44,44,38],
[34,36,47,37,37,0,33,36],
[51,41,48,45,37,48,0,36],
[37,52,44,36,43,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,52,34,33,47,26,28],
[45,0,54,43,46,51,34,45],
[29,27,0,28,41,40,36,33],
[47,38,53,0,45,56,43,45],
[48,35,40,36,0,44,39,23],
[34,30,41,25,37,0,29,26],
[55,47,45,38,42,52,0,43],
[53,36,48,36,58,55,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,36,50,40,44,44],
[36,0,44,33,45,37,42,37],
[34,37,0,36,38,31,35,37],
[45,48,45,0,54,47,36,43],
[31,36,43,27,0,42,40,45],
[41,44,50,34,39,0,44,37],
[37,39,46,45,41,37,0,35],
[37,44,44,38,36,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,44,40,38,44,37],
[37,0,40,33,37,42,34,35],
[34,41,0,37,42,33,32,36],
[37,48,44,0,47,37,42,41],
[41,44,39,34,0,36,38,41],
[43,39,48,44,45,0,40,42],
[37,47,49,39,43,41,0,48],
[44,46,45,40,40,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,40,38,37,37,45],
[45,0,37,37,42,34,42,47],
[36,44,0,34,33,43,41,45],
[41,44,47,0,35,43,41,51],
[43,39,48,46,0,40,42,46],
[44,47,38,38,41,0,43,44],
[44,39,40,40,39,38,0,43],
[36,34,36,30,35,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,36,43,41,41,36],
[41,0,38,34,39,37,43,34],
[33,43,0,35,36,30,34,31],
[45,47,46,0,45,36,46,35],
[38,42,45,36,0,37,40,35],
[40,44,51,45,44,0,40,38],
[40,38,47,35,41,41,0,42],
[45,47,50,46,46,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,38,44,39,38,42],
[41,0,38,45,42,43,39,45],
[45,43,0,39,41,41,35,42],
[43,36,42,0,46,37,37,47],
[37,39,40,35,0,38,34,44],
[42,38,40,44,43,0,38,41],
[43,42,46,44,47,43,0,39],
[39,36,39,34,37,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,42,31,34,16,40,35],
[55,0,42,26,28,19,54,33],
[39,39,0,31,21,9,48,22],
[50,55,50,0,35,46,50,50],
[47,53,60,46,0,38,59,59],
[65,62,72,35,43,0,52,64],
[41,27,33,31,22,29,0,26],
[46,48,59,31,22,17,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,34,48,30,33,40,42],
[41,0,36,48,51,21,37,44],
[47,45,0,47,33,42,35,49],
[33,33,34,0,21,23,27,39],
[51,30,48,60,0,32,41,52],
[48,60,39,58,49,0,42,45],
[41,44,46,54,40,39,0,37],
[39,37,32,42,29,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,46,36,47,33,40],
[40,0,50,50,36,41,38,38],
[39,31,0,44,40,32,34,31],
[35,31,37,0,32,40,33,40],
[45,45,41,49,0,46,33,38],
[34,40,49,41,35,0,41,35],
[48,43,47,48,48,40,0,46],
[41,43,50,41,43,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,51,47,47,37,42],
[37,0,39,41,39,37,35,38],
[40,42,0,35,43,44,35,38],
[30,40,46,0,35,37,38,35],
[34,42,38,46,0,50,33,36],
[34,44,37,44,31,0,38,35],
[44,46,46,43,48,43,0,40],
[39,43,43,46,45,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,48,43,32,33,30],
[38,0,57,57,44,35,41,43],
[36,24,0,38,29,36,29,35],
[33,24,43,0,55,45,13,27],
[38,37,52,26,0,33,16,17],
[49,46,45,36,48,0,34,17],
[48,40,52,68,65,47,0,51],
[51,38,46,54,64,64,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,40,39,39,40,39],
[37,0,41,37,45,40,33,48],
[39,40,0,41,38,33,44,35],
[41,44,40,0,42,38,39,45],
[42,36,43,39,0,42,36,42],
[42,41,48,43,39,0,46,41],
[41,48,37,42,45,35,0,33],
[42,33,46,36,39,40,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,34,37,25,40,33],
[40,0,45,56,48,33,40,42],
[35,36,0,35,42,33,26,35],
[47,25,46,0,35,30,30,27],
[44,33,39,46,0,31,29,35],
[56,48,48,51,50,0,47,36],
[41,41,55,51,52,34,0,40],
[48,39,46,54,46,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,49,44,40,39,46],
[37,0,39,43,38,40,38,37],
[37,42,0,41,35,37,33,37],
[32,38,40,0,34,39,32,37],
[37,43,46,47,0,41,36,40],
[41,41,44,42,40,0,41,40],
[42,43,48,49,45,40,0,43],
[35,44,44,44,41,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,48,44,47,43,43,39],
[36,0,40,34,53,33,25,30],
[33,41,0,43,57,36,36,34],
[37,47,38,0,51,39,44,39],
[34,28,24,30,0,26,34,30],
[38,48,45,42,55,0,40,32],
[38,56,45,37,47,41,0,41],
[42,51,47,42,51,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,38,45,39,47,48],
[34,0,39,35,35,26,51,42],
[39,42,0,39,46,44,44,46],
[43,46,42,0,51,39,51,47],
[36,46,35,30,0,35,52,44],
[42,55,37,42,46,0,49,47],
[34,30,37,30,29,32,0,44],
[33,39,35,34,37,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,32,41,42,35,37],
[34,0,37,27,44,30,37,32],
[32,44,0,34,46,40,36,30],
[49,54,47,0,47,44,39,39],
[40,37,35,34,0,35,41,26],
[39,51,41,37,46,0,34,35],
[46,44,45,42,40,47,0,43],
[44,49,51,42,55,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,43,54,33,40,38],
[14,0,49,37,35,43,38,47],
[11,32,0,23,12,13,13,22],
[38,44,58,0,37,42,24,37],
[27,46,69,44,0,29,42,22],
[48,38,68,39,52,0,48,52],
[41,43,68,57,39,33,0,37],
[43,34,59,44,59,29,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,30,33,37,43,39],
[34,0,35,32,39,29,34,36],
[38,46,0,40,36,36,40,36],
[51,49,41,0,42,44,40,47],
[48,42,45,39,0,41,45,48],
[44,52,45,37,40,0,41,39],
[38,47,41,41,36,40,0,39],
[42,45,45,34,33,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,37,33,44,41,39],
[47,0,44,42,35,41,36,34],
[43,37,0,46,38,43,34,37],
[44,39,35,0,42,40,35,35],
[48,46,43,39,0,44,36,43],
[37,40,38,41,37,0,38,41],
[40,45,47,46,45,43,0,47],
[42,47,44,46,38,40,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,29,56,46,41,43,38],
[35,0,36,58,64,57,65,40],
[52,45,0,54,38,41,64,36],
[25,23,27,0,24,30,51,23],
[35,17,43,57,0,47,59,41],
[40,24,40,51,34,0,57,35],
[38,16,17,30,22,24,0,24],
[43,41,45,58,40,46,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,42,36,30,37,41,30],
[47,0,50,35,40,44,41,42],
[39,31,0,34,29,29,36,41],
[45,46,47,0,29,47,47,42],
[51,41,52,52,0,52,58,36],
[44,37,52,34,29,0,39,47],
[40,40,45,34,23,42,0,34],
[51,39,40,39,45,34,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,37,36,44,32,36],
[43,0,37,38,35,37,35,40],
[40,44,0,40,33,37,38,38],
[44,43,41,0,39,43,41,43],
[45,46,48,42,0,47,39,50],
[37,44,44,38,34,0,31,36],
[49,46,43,40,42,50,0,45],
[45,41,43,38,31,45,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,55,44,51,50,48,32],
[45,0,50,45,46,45,38,47],
[26,31,0,32,43,36,31,27],
[37,36,49,0,46,35,35,35],
[30,35,38,35,0,41,36,26],
[31,36,45,46,40,0,43,31],
[33,43,50,46,45,38,0,35],
[49,34,54,46,55,50,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,44,42,41,40,36],
[42,0,45,41,46,41,41,38],
[44,36,0,40,44,43,44,42],
[37,40,41,0,39,31,35,37],
[39,35,37,42,0,38,35,37],
[40,40,38,50,43,0,43,38],
[41,40,37,46,46,38,0,37],
[45,43,39,44,44,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,48,49,35,38,51],
[50,0,39,54,50,39,56,54],
[42,42,0,48,47,43,37,49],
[33,27,33,0,28,29,31,34],
[32,31,34,53,0,23,39,38],
[46,42,38,52,58,0,42,48],
[43,25,44,50,42,39,0,39],
[30,27,32,47,43,33,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,38,44,40,37,33,39],
[50,0,44,49,50,43,39,45],
[43,37,0,52,45,34,39,40],
[37,32,29,0,40,29,37,29],
[41,31,36,41,0,31,35,36],
[44,38,47,52,50,0,43,48],
[48,42,42,44,46,38,0,36],
[42,36,41,52,45,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,41,28,37,43,33],
[41,0,31,22,41,52,35,40],
[46,50,0,61,29,38,55,33],
[40,59,20,0,37,41,49,29],
[53,40,52,44,0,50,44,45],
[44,29,43,40,31,0,48,44],
[38,46,26,32,37,33,0,35],
[48,41,48,52,36,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,37,46,35,40,47],
[40,0,48,44,45,43,41,48],
[44,33,0,40,40,34,36,44],
[44,37,41,0,43,43,40,45],
[35,36,41,38,0,37,34,41],
[46,38,47,38,44,0,38,46],
[41,40,45,41,47,43,0,44],
[34,33,37,36,40,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,43,36,72,52,65],
[38,0,57,58,58,74,54,58],
[33,24,0,36,61,65,33,30],
[38,23,45,0,25,45,25,38],
[45,23,20,56,0,72,32,29],
[9,7,16,36,9,0,32,25],
[29,27,48,56,49,49,0,65],
[16,23,51,43,52,56,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,45,38,51,43,39],
[39,0,41,45,45,54,48,41],
[45,40,0,50,39,46,44,40],
[36,36,31,0,39,49,42,31],
[43,36,42,42,0,44,41,39],
[30,27,35,32,37,0,36,26],
[38,33,37,39,40,45,0,30],
[42,40,41,50,42,55,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,42,45,38,49,45,41],
[29,0,31,40,38,36,44,34],
[39,50,0,49,43,44,50,36],
[36,41,32,0,41,47,47,37],
[43,43,38,40,0,44,45,32],
[32,45,37,34,37,0,43,39],
[36,37,31,34,36,38,0,28],
[40,47,45,44,49,42,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,47,38,47,30,41],
[40,0,41,43,39,41,28,44],
[42,40,0,48,50,51,38,40],
[34,38,33,0,38,44,24,32],
[43,42,31,43,0,41,34,37],
[34,40,30,37,40,0,33,31],
[51,53,43,57,47,48,0,39],
[40,37,41,49,44,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,36,41,43,47,40],
[37,0,37,30,35,31,38,34],
[33,44,0,42,41,34,35,33],
[45,51,39,0,42,38,45,39],
[40,46,40,39,0,39,43,38],
[38,50,47,43,42,0,44,41],
[34,43,46,36,38,37,0,39],
[41,47,48,42,43,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,47,36,45,26,40,34],
[39,0,41,46,42,47,37,36],
[34,40,0,41,38,34,40,30],
[45,35,40,0,34,34,44,39],
[36,39,43,47,0,40,42,43],
[55,34,47,47,41,0,50,43],
[41,44,41,37,39,31,0,37],
[47,45,51,42,38,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,26,24,46,40,46,54],
[57,0,52,45,42,45,40,52],
[55,29,0,33,30,31,48,51],
[57,36,48,0,39,33,55,52],
[35,39,51,42,0,30,51,41],
[41,36,50,48,51,0,37,40],
[35,41,33,26,30,44,0,39],
[27,29,30,29,40,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,36,33,38,50,32],
[41,0,38,34,42,46,48,33],
[39,43,0,29,36,33,47,38],
[45,47,52,0,37,46,52,38],
[48,39,45,44,0,41,53,41],
[43,35,48,35,40,0,47,39],
[31,33,34,29,28,34,0,25],
[49,48,43,43,40,42,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,41,43,54,32,48,52],
[48,0,45,45,51,39,45,40],
[40,36,0,46,41,43,33,41],
[38,36,35,0,36,43,40,37],
[27,30,40,45,0,38,32,37],
[49,42,38,38,43,0,45,42],
[33,36,48,41,49,36,0,44],
[29,41,40,44,44,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,40,40,24,43,24],
[40,0,44,28,37,17,35,21],
[36,37,0,31,45,29,42,30],
[41,53,50,0,42,26,40,42],
[41,44,36,39,0,24,28,39],
[57,64,52,55,57,0,47,38],
[38,46,39,41,53,34,0,34],
[57,60,51,39,42,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,31,28,36,17,26,30],
[44,0,47,45,44,41,36,44],
[50,34,0,39,41,36,42,35],
[53,36,42,0,34,20,26,21],
[45,37,40,47,0,40,42,36],
[64,40,45,61,41,0,33,51],
[55,45,39,55,39,48,0,39],
[51,37,46,60,45,30,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,52,66,29,60,41],
[47,0,37,43,59,42,57,45],
[35,44,0,48,52,31,45,44],
[29,38,33,0,43,27,40,24],
[15,22,29,38,0,37,33,32],
[52,39,50,54,44,0,51,34],
[21,24,36,41,48,30,0,32],
[40,36,37,57,49,47,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,47,43,47,36,40,52],
[39,0,40,40,50,41,44,47],
[34,41,0,39,51,42,40,43],
[38,41,42,0,49,42,41,42],
[34,31,30,32,0,37,37,38],
[45,40,39,39,44,0,38,48],
[41,37,41,40,44,43,0,44],
[29,34,38,39,43,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,42,40,43,40,45],
[47,0,31,38,37,39,39,45],
[49,50,0,50,42,48,39,51],
[39,43,31,0,43,37,33,46],
[41,44,39,38,0,41,45,43],
[38,42,33,44,40,0,33,37],
[41,42,42,48,36,48,0,44],
[36,36,30,35,38,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,36,39,43,45,49],
[46,0,51,43,47,39,49,57],
[38,30,0,33,38,37,45,43],
[45,38,48,0,46,44,48,56],
[42,34,43,35,0,35,45,39],
[38,42,44,37,46,0,43,48],
[36,32,36,33,36,38,0,41],
[32,24,38,25,42,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,45,43,41,33,38],
[42,0,59,40,40,49,44,37],
[31,22,0,33,34,41,33,37],
[36,41,48,0,39,44,30,47],
[38,41,47,42,0,43,36,32],
[40,32,40,37,38,0,28,34],
[48,37,48,51,45,53,0,46],
[43,44,44,34,49,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,37,41,41,40,44,28],
[52,0,40,48,39,40,49,46],
[44,41,0,44,43,33,50,31],
[40,33,37,0,41,31,48,36],
[40,42,38,40,0,43,51,44],
[41,41,48,50,38,0,46,45],
[37,32,31,33,30,35,0,28],
[53,35,50,45,37,36,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,41,36,41,43,43],
[44,0,42,44,43,46,40,36],
[44,39,0,38,43,46,38,29],
[40,37,43,0,39,38,41,41],
[45,38,38,42,0,46,42,35],
[40,35,35,43,35,0,46,38],
[38,41,43,40,39,35,0,35],
[38,45,52,40,46,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,47,44,40,47,43],
[39,0,39,35,41,45,32,36],
[37,42,0,38,43,49,35,37],
[34,46,43,0,37,45,39,33],
[37,40,38,44,0,41,38,39],
[41,36,32,36,40,0,38,40],
[34,49,46,42,43,43,0,42],
[38,45,44,48,42,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,36,46,43,39,46],
[41,0,46,32,44,43,40,42],
[39,35,0,41,44,43,28,39],
[45,49,40,0,44,45,42,40],
[35,37,37,37,0,44,29,40],
[38,38,38,36,37,0,40,43],
[42,41,53,39,52,41,0,49],
[35,39,42,41,41,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,53,25,37,38,34,38],
[36,0,47,21,38,47,24,39],
[28,34,0,22,35,39,29,45],
[56,60,59,0,54,49,36,52],
[44,43,46,27,0,46,30,34],
[43,34,42,32,35,0,41,34],
[47,57,52,45,51,40,0,46],
[43,42,36,29,47,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,47,42,38,32,41,38],
[43,0,48,46,50,39,50,42],
[34,33,0,37,36,31,32,38],
[39,35,44,0,39,35,37,29],
[43,31,45,42,0,32,37,38],
[49,42,50,46,49,0,36,49],
[40,31,49,44,44,45,0,42],
[43,39,43,52,43,32,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,34,31,39,37,34],
[37,0,34,24,26,35,38,34],
[33,47,0,35,29,28,31,23],
[47,57,46,0,58,40,49,49],
[50,55,52,23,0,45,48,51],
[42,46,53,41,36,0,46,50],
[44,43,50,32,33,35,0,43],
[47,47,58,32,30,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,44,48,39,60,49,48],
[28,0,32,42,28,46,41,42],
[37,49,0,42,37,42,49,51],
[33,39,39,0,30,34,31,56],
[42,53,44,51,0,51,32,57],
[21,35,39,47,30,0,34,41],
[32,40,32,50,49,47,0,49],
[33,39,30,25,24,40,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,30,38,40,36,42],
[37,0,36,38,37,30,34,35],
[49,45,0,44,34,37,42,38],
[51,43,37,0,40,35,35,37],
[43,44,47,41,0,41,41,33],
[41,51,44,46,40,0,37,44],
[45,47,39,46,40,44,0,37],
[39,46,43,44,48,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,38,42,45,33,49],
[43,0,39,37,43,36,41,48],
[39,42,0,40,46,42,43,44],
[43,44,41,0,38,42,38,44],
[39,38,35,43,0,39,36,43],
[36,45,39,39,42,0,40,44],
[48,40,38,43,45,41,0,42],
[32,33,37,37,38,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,32,50,47,39,42,39],
[41,0,27,55,44,48,42,37],
[49,54,0,55,54,53,39,39],
[31,26,26,0,41,31,20,21],
[34,37,27,40,0,38,26,26],
[42,33,28,50,43,0,29,17],
[39,39,42,61,55,52,0,41],
[42,44,42,60,55,64,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,27,55,47,55,37,47],
[46,0,35,55,55,29,54,29],
[54,46,0,46,38,28,28,20],
[26,26,35,0,55,55,46,46],
[34,26,43,26,0,17,8,0],
[26,52,53,26,64,0,34,18],
[44,27,53,35,73,47,0,47],
[34,52,61,35,81,63,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,38,41,45,41,39],
[40,0,45,35,41,41,36,38],
[39,36,0,36,45,45,35,39],
[43,46,45,0,45,47,43,38],
[40,40,36,36,0,41,34,41],
[36,40,36,34,40,0,32,34],
[40,45,46,38,47,49,0,37],
[42,43,42,43,40,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,31,38,40,26,42],
[46,0,55,36,49,46,50,35],
[41,26,0,31,40,35,36,28],
[50,45,50,0,50,43,55,37],
[43,32,41,31,0,37,40,33],
[41,35,46,38,44,0,47,28],
[55,31,45,26,41,34,0,34],
[39,46,53,44,48,53,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,35,36,38,39,36],
[41,0,39,45,42,35,40,39],
[42,42,0,50,38,41,40,38],
[46,36,31,0,35,32,37,34],
[45,39,43,46,0,38,37,37],
[43,46,40,49,43,0,44,37],
[42,41,41,44,44,37,0,42],
[45,42,43,47,44,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,44,43,50,37,44,53],
[46,0,45,38,47,42,54,47],
[37,36,0,39,46,39,45,46],
[38,43,42,0,39,41,48,44],
[31,34,35,42,0,39,42,30],
[44,39,42,40,42,0,46,41],
[37,27,36,33,39,35,0,44],
[28,34,35,37,51,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,36,23,32,26,38,35],
[56,0,47,29,30,45,43,39],
[45,34,0,34,31,16,32,31],
[58,52,47,0,34,32,54,54],
[49,51,50,47,0,29,40,50],
[55,36,65,49,52,0,46,44],
[43,38,49,27,41,35,0,35],
[46,42,50,27,31,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,25,52,51,51,49,22],
[27,0,22,27,0,29,27,0],
[56,59,0,78,51,51,49,22],
[29,54,3,0,29,29,27,0],
[30,81,30,52,0,51,30,22],
[30,52,30,52,30,0,52,44],
[32,54,32,54,51,29,0,51],
[59,81,59,81,59,37,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,39,49,39,35,34],
[44,0,43,43,37,46,41,41],
[44,38,0,43,40,40,49,39],
[42,38,38,0,42,41,42,31],
[32,44,41,39,0,48,34,29],
[42,35,41,40,33,0,45,38],
[46,40,32,39,47,36,0,38],
[47,40,42,50,52,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,52,31,45,41,48,34],
[49,0,56,34,41,45,47,48],
[29,25,0,32,41,41,35,36],
[50,47,49,0,41,45,43,38],
[36,40,40,40,0,37,45,36],
[40,36,40,36,44,0,47,45],
[33,34,46,38,36,34,0,34],
[47,33,45,43,45,36,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,39,49,56,47,35],
[40,0,42,41,47,59,37,50],
[33,39,0,48,36,60,34,35],
[42,40,33,0,31,46,43,34],
[32,34,45,50,0,51,29,46],
[25,22,21,35,30,0,20,27],
[34,44,47,38,52,61,0,58],
[46,31,46,47,35,54,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,22,42,35,56,39],
[44,0,44,39,31,45,51,34],
[32,37,0,22,29,23,36,28],
[59,42,59,0,54,40,54,47],
[39,50,52,27,0,33,49,38],
[46,36,58,41,48,0,53,49],
[25,30,45,27,32,28,0,34],
[42,47,53,34,43,32,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,34,36,31,39,39,33],
[32,0,32,31,40,32,41,43],
[47,49,0,54,33,48,41,24],
[45,50,27,0,34,46,31,37],
[50,41,48,47,0,48,28,51],
[42,49,33,35,33,0,31,40],
[42,40,40,50,53,50,0,43],
[48,38,57,44,30,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,31,39,45,39,28],
[51,0,26,36,42,50,43,27],
[48,55,0,41,45,52,40,45],
[50,45,40,0,50,57,47,36],
[42,39,36,31,0,50,31,28],
[36,31,29,24,31,0,26,28],
[42,38,41,34,50,55,0,45],
[53,54,36,45,53,53,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,39,41,55,48,43],
[43,0,31,43,29,49,34,42],
[41,50,0,40,36,45,39,33],
[42,38,41,0,41,46,35,41],
[40,52,45,40,0,43,45,39],
[26,32,36,35,38,0,30,26],
[33,47,42,46,36,51,0,36],
[38,39,48,40,42,55,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,30,49,42,54,34,33],
[33,0,33,54,34,46,36,46],
[51,48,0,37,28,52,29,26],
[32,27,44,0,38,39,41,43],
[39,47,53,43,0,40,31,33],
[27,35,29,42,41,0,30,40],
[47,45,52,40,50,51,0,46],
[48,35,55,38,48,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,28,62,47,45,30],
[38,0,46,36,57,42,49,51],
[42,35,0,48,56,38,45,48],
[53,45,33,0,55,45,43,38],
[19,24,25,26,0,25,40,21],
[34,39,43,36,56,0,46,39],
[36,32,36,38,41,35,0,54],
[51,30,33,43,60,42,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,64,40,43,41,46,50],
[41,0,51,51,40,40,52,44],
[17,30,0,28,20,25,36,34],
[41,30,53,0,43,38,56,38],
[38,41,61,38,0,33,44,41],
[40,41,56,43,48,0,48,50],
[35,29,45,25,37,33,0,45],
[31,37,47,43,40,31,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,28,38,38,32,37,40],
[23,0,20,32,17,16,27,41],
[53,61,0,59,58,33,36,43],
[43,49,22,0,42,30,26,47],
[43,64,23,39,0,37,49,42],
[49,65,48,51,44,0,37,42],
[44,54,45,55,32,44,0,46],
[41,40,38,34,39,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,39,47,42,39,41],
[37,0,36,35,42,31,33,46],
[38,45,0,37,43,35,39,48],
[42,46,44,0,42,39,41,47],
[34,39,38,39,0,33,37,41],
[39,50,46,42,48,0,41,52],
[42,48,42,40,44,40,0,51],
[40,35,33,34,40,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,46,38,40,42,45],
[44,0,48,50,47,49,39,42],
[41,33,0,48,46,35,41,45],
[35,31,33,0,38,34,31,35],
[43,34,35,43,0,35,42,40],
[41,32,46,47,46,0,39,42],
[39,42,40,50,39,42,0,52],
[36,39,36,46,41,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,36,49,39,45,49],
[40,0,51,43,48,50,60,57],
[40,30,0,36,37,37,43,42],
[45,38,45,0,38,38,52,53],
[32,33,44,43,0,34,49,48],
[42,31,44,43,47,0,51,50],
[36,21,38,29,32,30,0,41],
[32,24,39,28,33,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,34,33,27,36,33],
[40,0,39,45,38,30,31,29],
[43,42,0,46,48,32,36,27],
[47,36,35,0,45,31,35,38],
[48,43,33,36,0,31,33,38],
[54,51,49,50,50,0,50,32],
[45,50,45,46,48,31,0,43],
[48,52,54,43,43,49,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,39,59,50,46,48,48],
[32,0,38,34,51,45,46,43],
[42,43,0,51,49,39,47,53],
[22,47,30,0,44,35,39,44],
[31,30,32,37,0,21,33,36],
[35,36,42,46,60,0,48,47],
[33,35,34,42,48,33,0,44],
[33,38,28,37,45,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,51,34,37,43,46,46],
[38,0,44,29,32,40,40,42],
[30,37,0,25,30,28,31,34],
[47,52,56,0,38,42,47,51],
[44,49,51,43,0,39,44,42],
[38,41,53,39,42,0,35,49],
[35,41,50,34,37,46,0,44],
[35,39,47,30,39,32,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,40,41,41,46,48],
[46,0,42,45,40,43,42,47],
[46,39,0,48,39,42,50,42],
[41,36,33,0,33,37,39,46],
[40,41,42,48,0,44,46,47],
[40,38,39,44,37,0,40,47],
[35,39,31,42,35,41,0,49],
[33,34,39,35,34,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,41,45,49,38,40],
[40,0,46,36,38,52,47,46],
[37,35,0,43,35,46,40,36],
[40,45,38,0,36,43,42,40],
[36,43,46,45,0,53,41,43],
[32,29,35,38,28,0,35,34],
[43,34,41,39,40,46,0,37],
[41,35,45,41,38,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,40,36,38,14,20,25],
[53,0,39,49,37,40,39,35],
[41,42,0,41,40,28,37,36],
[45,32,40,0,41,30,40,38],
[43,44,41,40,0,31,44,36],
[67,41,53,51,50,0,42,38],
[61,42,44,41,37,39,0,43],
[56,46,45,43,45,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,32,28,32,37,35],
[47,0,41,49,43,39,45,44],
[52,40,0,49,45,50,48,48],
[49,32,32,0,40,34,37,42],
[53,38,36,41,0,37,40,46],
[49,42,31,47,44,0,45,48],
[44,36,33,44,41,36,0,50],
[46,37,33,39,35,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,37,40,36,40,40],
[43,0,44,41,44,41,37,39],
[38,37,0,39,39,45,47,33],
[44,40,42,0,45,44,40,37],
[41,37,42,36,0,33,40,37],
[45,40,36,37,48,0,42,45],
[41,44,34,41,41,39,0,42],
[41,42,48,44,44,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,43,34,42,49,37],
[41,0,36,45,38,44,43,44],
[41,45,0,40,41,46,46,43],
[38,36,41,0,29,32,45,40],
[47,43,40,52,0,45,52,46],
[39,37,35,49,36,0,46,44],
[32,38,35,36,29,35,0,39],
[44,37,38,41,35,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,37,38,41,42,39,37],
[48,0,43,43,40,43,44,43],
[44,38,0,42,46,38,36,44],
[43,38,39,0,35,41,33,40],
[40,41,35,46,0,39,39,39],
[39,38,43,40,42,0,35,34],
[42,37,45,48,42,46,0,41],
[44,38,37,41,42,47,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,40,42,45,43,37],
[45,0,45,47,44,41,45,40],
[37,36,0,37,36,44,41,40],
[41,34,44,0,41,50,44,34],
[39,37,45,40,0,48,42,41],
[36,40,37,31,33,0,37,31],
[38,36,40,37,39,44,0,50],
[44,41,41,47,40,50,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,46,49,58,39,49],
[45,0,58,54,38,54,41,51],
[41,23,0,35,30,45,47,42],
[35,27,46,0,19,38,41,42],
[32,43,51,62,0,44,40,55],
[23,27,36,43,37,0,41,46],
[42,40,34,40,41,40,0,38],
[32,30,39,39,26,35,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,42,52,55,36,49],
[44,0,47,33,48,57,48,47],
[39,34,0,41,49,56,42,53],
[39,48,40,0,50,59,43,48],
[29,33,32,31,0,48,37,40],
[26,24,25,22,33,0,35,26],
[45,33,39,38,44,46,0,41],
[32,34,28,33,41,55,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,48,41,40,41,46,49],
[45,0,54,40,50,48,37,31],
[33,27,0,31,37,39,37,29],
[40,41,50,0,40,43,42,40],
[41,31,44,41,0,41,41,39],
[40,33,42,38,40,0,41,37],
[35,44,44,39,40,40,0,44],
[32,50,52,41,42,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,60,42,51,54,30],
[28,0,69,73,60,50,58,43],
[30,12,0,45,32,51,40,37],
[21,8,36,0,37,50,9,41],
[39,21,49,44,0,48,48,49],
[30,31,30,31,33,0,30,45],
[27,23,41,72,33,51,0,34],
[51,38,44,40,32,36,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,32,34,36,38,42],
[40,0,33,52,31,47,55,50],
[40,48,0,38,45,34,47,38],
[49,29,43,0,26,38,51,53],
[47,50,36,55,0,53,63,50],
[45,34,47,43,28,0,34,45],
[43,26,34,30,18,47,0,41],
[39,31,43,28,31,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,35,57,50,36,38],
[26,0,71,28,69,47,33,47],
[19,10,0,19,34,29,15,15],
[46,53,62,0,46,38,36,36],
[24,12,47,35,0,36,43,24],
[31,34,52,43,45,0,33,14],
[45,48,66,45,38,48,0,26],
[43,34,66,45,57,67,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,35,46,38,45,36],
[38,0,37,38,49,41,41,40],
[39,44,0,41,44,45,46,37],
[46,43,40,0,48,39,42,42],
[35,32,37,33,0,33,43,34],
[43,40,36,42,48,0,45,38],
[36,40,35,39,38,36,0,36],
[45,41,44,39,47,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,46,42,41,42,50],
[43,0,41,36,41,37,40,45],
[36,40,0,37,36,39,38,39],
[35,45,44,0,42,37,34,43],
[39,40,45,39,0,37,39,49],
[40,44,42,44,44,0,39,45],
[39,41,43,47,42,42,0,50],
[31,36,42,38,32,36,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,27,36,29,27,37,30],
[45,0,39,42,42,44,49,51],
[54,42,0,43,36,38,49,50],
[45,39,38,0,34,45,43,43],
[52,39,45,47,0,40,50,48],
[54,37,43,36,41,0,39,52],
[44,32,32,38,31,42,0,42],
[51,30,31,38,33,29,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,34,64,42,57,64,42],
[20,0,34,76,54,69,68,32],
[47,47,0,46,73,47,46,20],
[17,5,35,0,35,61,64,20],
[39,27,8,46,0,47,38,20],
[24,12,34,20,34,0,56,20],
[17,13,35,17,43,25,0,13],
[39,49,61,61,61,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,49,29,40,57,31,31],
[42,0,30,23,42,27,45,32],
[32,51,0,29,31,27,31,32],
[52,58,52,0,45,60,45,40],
[41,39,50,36,0,38,43,38],
[24,54,54,21,43,0,50,45],
[50,36,50,36,38,31,0,37],
[50,49,49,41,43,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,41,37,37,36,33],
[39,0,40,40,43,43,36,41],
[44,41,0,40,33,44,35,39],
[40,41,41,0,36,43,32,42],
[44,38,48,45,0,43,47,45],
[44,38,37,38,38,0,34,36],
[45,45,46,49,34,47,0,43],
[48,40,42,39,36,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,42,31,37,49,42,40],
[45,0,47,46,40,50,52,45],
[39,34,0,32,36,44,35,42],
[50,35,49,0,37,55,50,56],
[44,41,45,44,0,59,42,38],
[32,31,37,26,22,0,40,42],
[39,29,46,31,39,41,0,45],
[41,36,39,25,43,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,37,44,42,44,50],
[40,0,43,45,46,51,44,44],
[47,38,0,41,45,53,48,41],
[44,36,40,0,45,44,52,45],
[37,35,36,36,0,41,38,34],
[39,30,28,37,40,0,37,38],
[37,37,33,29,43,44,0,45],
[31,37,40,36,47,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,43,42,37,40,39],
[38,0,38,41,44,38,41,32],
[42,43,0,38,42,32,38,34],
[38,40,43,0,42,35,32,34],
[39,37,39,39,0,36,29,31],
[44,43,49,46,45,0,40,37],
[41,40,43,49,52,41,0,45],
[42,49,47,47,50,44,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,42,40,49,42,38],
[39,0,34,35,38,35,22,48],
[37,47,0,37,34,26,38,37],
[39,46,44,0,62,39,46,41],
[41,43,47,19,0,45,30,47],
[32,46,55,42,36,0,53,48],
[39,59,43,35,51,28,0,38],
[43,33,44,40,34,33,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,43,41,38,41,36],
[44,0,37,49,45,41,42,43],
[43,44,0,48,41,40,40,46],
[38,32,33,0,33,33,39,42],
[40,36,40,48,0,34,42,39],
[43,40,41,48,47,0,43,45],
[40,39,41,42,39,38,0,42],
[45,38,35,39,42,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,38,41,20,12,39,38],
[53,0,49,47,42,40,53,52],
[43,32,0,45,29,35,38,45],
[40,34,36,0,30,32,43,36],
[61,39,52,51,0,45,49,56],
[69,41,46,49,36,0,47,49],
[42,28,43,38,32,34,0,45],
[43,29,36,45,25,32,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,56,47,49,53,59,29],
[40,0,45,24,40,43,42,27],
[25,36,0,29,27,34,35,15],
[34,57,52,0,46,48,49,42],
[32,41,54,35,0,46,56,20],
[28,38,47,33,35,0,50,23],
[22,39,46,32,25,31,0,24],
[52,54,66,39,61,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,33,36,46,38,44],
[43,0,49,37,36,42,35,46],
[37,32,0,41,43,44,37,44],
[48,44,40,0,43,48,42,39],
[45,45,38,38,0,46,38,41],
[35,39,37,33,35,0,30,35],
[43,46,44,39,43,51,0,40],
[37,35,37,42,40,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,35,54,31,42,46,40],
[33,0,38,46,36,50,38,37],
[46,43,0,53,46,38,48,39],
[27,35,28,0,29,31,36,29],
[50,45,35,52,0,42,51,40],
[39,31,43,50,39,0,45,41],
[35,43,33,45,30,36,0,41],
[41,44,42,52,41,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,56,37,43,37,44],
[37,0,36,46,39,43,34,38],
[39,45,0,47,44,49,43,39],
[25,35,34,0,29,40,34,28],
[44,42,37,52,0,44,37,35],
[38,38,32,41,37,0,37,31],
[44,47,38,47,44,44,0,40],
[37,43,42,53,46,50,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,45,40,51,42,45,42],
[33,0,35,31,34,32,46,33],
[36,46,0,40,40,37,46,40],
[41,50,41,0,40,31,38,41],
[30,47,41,41,0,38,51,42],
[39,49,44,50,43,0,55,44],
[36,35,35,43,30,26,0,37],
[39,48,41,40,39,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,47,34,29,38,31,35],
[46,0,46,40,38,45,44,45],
[34,35,0,32,25,35,25,36],
[47,41,49,0,44,48,37,45],
[52,43,56,37,0,47,35,43],
[43,36,46,33,34,0,47,37],
[50,37,56,44,46,34,0,34],
[46,36,45,36,38,44,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,37,36,49,49,45],
[38,0,53,35,51,50,39,57],
[35,28,0,41,27,9,38,35],
[44,46,40,0,51,30,19,55],
[45,30,54,30,0,32,42,50],
[32,31,72,51,49,0,46,38],
[32,42,43,62,39,35,0,49],
[36,24,46,26,31,43,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,52,35,58,56,57],
[40,0,45,55,47,51,66,62],
[33,36,0,52,37,58,41,60],
[29,26,29,0,35,47,42,35],
[46,34,44,46,0,53,48,65],
[23,30,23,34,28,0,33,43],
[25,15,40,39,33,48,0,48],
[24,19,21,46,16,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,48,47,40,41,41],
[42,0,39,42,44,41,42,39],
[41,42,0,40,44,40,39,41],
[33,39,41,0,39,33,35,39],
[34,37,37,42,0,38,38,38],
[41,40,41,48,43,0,36,38],
[40,39,42,46,43,45,0,41],
[40,42,40,42,43,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,42,45,48,44,51],
[44,0,44,39,38,40,41,48],
[32,37,0,31,34,40,32,39],
[39,42,50,0,44,41,36,45],
[36,43,47,37,0,44,43,47],
[33,41,41,40,37,0,35,36],
[37,40,49,45,38,46,0,47],
[30,33,42,36,34,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,32,29,36,44,34,33],
[39,0,35,24,21,36,34,20],
[49,46,0,42,43,50,48,32],
[52,57,39,0,40,61,46,46],
[45,60,38,41,0,56,43,44],
[37,45,31,20,25,0,28,22],
[47,47,33,35,38,53,0,36],
[48,61,49,35,37,59,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,37,42,47,43,43],
[39,0,35,36,46,38,39,40],
[40,46,0,44,45,45,52,48],
[44,45,37,0,46,46,44,39],
[39,35,36,35,0,38,36,35],
[34,43,36,35,43,0,43,36],
[38,42,29,37,45,38,0,38],
[38,41,33,42,46,45,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,36,39,41,60,29,39],
[30,0,41,39,44,60,45,42],
[45,40,0,52,45,53,46,36],
[42,42,29,0,41,43,41,24],
[40,37,36,40,0,50,42,32],
[21,21,28,38,31,0,27,31],
[52,36,35,40,39,54,0,36],
[42,39,45,57,49,50,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,39,48,48,59,29],
[38,0,49,43,37,36,36,30],
[44,32,0,38,38,53,52,34],
[42,38,43,0,32,46,53,42],
[33,44,43,49,0,52,51,38],
[33,45,28,35,29,0,36,38],
[22,45,29,28,30,45,0,26],
[52,51,47,39,43,43,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,26,34,17,30,23],
[51,0,36,36,40,32,36,40],
[48,45,0,30,37,23,33,32],
[55,45,51,0,62,35,46,55],
[47,41,44,19,0,27,33,29],
[64,49,58,46,54,0,37,38],
[51,45,48,35,48,44,0,46],
[58,41,49,26,52,43,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,38,38,40,37,35],
[43,0,37,35,38,39,41,34],
[37,44,0,40,45,46,42,42],
[43,46,41,0,43,41,44,39],
[43,43,36,38,0,42,36,33],
[41,42,35,40,39,0,43,36],
[44,40,39,37,45,38,0,36],
[46,47,39,42,48,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,31,34,36,38,31,34],
[50,0,36,43,45,44,48,38],
[50,45,0,44,40,39,39,39],
[47,38,37,0,42,43,41,41],
[45,36,41,39,0,40,33,36],
[43,37,42,38,41,0,38,35],
[50,33,42,40,48,43,0,34],
[47,43,42,40,45,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,37,36,31,39,29],
[50,0,56,43,34,45,49,39],
[42,25,0,41,31,32,43,36],
[44,38,40,0,36,30,46,44],
[45,47,50,45,0,40,53,44],
[50,36,49,51,41,0,47,46],
[42,32,38,35,28,34,0,36],
[52,42,45,37,37,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,38,42,41,43,42],
[37,0,43,42,41,39,35,37],
[40,38,0,39,39,39,37,34],
[43,39,42,0,41,45,39,39],
[39,40,42,40,0,35,39,36],
[40,42,42,36,46,0,34,34],
[38,46,44,42,42,47,0,43],
[39,44,47,42,45,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,43,32,41,40,30],
[36,0,33,34,36,52,42,37],
[40,48,0,44,34,50,35,39],
[38,47,37,0,41,56,38,44],
[49,45,47,40,0,54,50,43],
[40,29,31,25,27,0,33,38],
[41,39,46,43,31,48,0,37],
[51,44,42,37,38,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,40,36,42,41,34],
[43,0,37,38,46,43,44,39],
[38,44,0,40,44,45,43,37],
[41,43,41,0,37,46,41,39],
[45,35,37,44,0,45,44,45],
[39,38,36,35,36,0,40,33],
[40,37,38,40,37,41,0,37],
[47,42,44,42,36,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,47,41,42,34,34],
[33,0,38,41,36,40,42,36],
[34,43,0,37,36,38,32,29],
[34,40,44,0,44,34,32,39],
[40,45,45,37,0,49,42,35],
[39,41,43,47,32,0,47,39],
[47,39,49,49,39,34,0,46],
[47,45,52,42,46,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,38,42,49,45,44],
[34,0,40,46,42,40,44,49],
[36,41,0,37,38,39,33,39],
[43,35,44,0,42,43,42,45],
[39,39,43,39,0,35,40,50],
[32,41,42,38,46,0,35,39],
[36,37,48,39,41,46,0,45],
[37,32,42,36,31,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,61,34,28,29,49,34],
[52,0,67,58,57,37,69,69],
[20,14,0,17,30,40,32,26],
[47,23,64,0,49,42,59,39],
[53,24,51,32,0,40,55,48],
[52,44,41,39,41,0,41,46],
[32,12,49,22,26,40,0,24],
[47,12,55,42,33,35,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,39,35,39,42,46],
[40,0,43,39,45,40,37,46],
[40,38,0,38,39,36,37,48],
[42,42,43,0,43,42,40,49],
[46,36,42,38,0,41,47,40],
[42,41,45,39,40,0,46,44],
[39,44,44,41,34,35,0,44],
[35,35,33,32,41,37,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,42,48,37,40,42],
[42,0,34,43,44,47,42,43],
[44,47,0,50,45,39,46,50],
[39,38,31,0,39,38,40,39],
[33,37,36,42,0,40,45,36],
[44,34,42,43,41,0,42,38],
[41,39,35,41,36,39,0,42],
[39,38,31,42,45,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,41,45,47,45,47],
[42,0,39,40,44,42,45,43],
[31,42,0,37,44,42,44,45],
[40,41,44,0,40,43,40,43],
[36,37,37,41,0,40,37,39],
[34,39,39,38,41,0,37,35],
[36,36,37,41,44,44,0,40],
[34,38,36,38,42,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,44,44,55,39,45,42],
[32,0,30,39,43,31,33,30],
[37,51,0,55,41,38,44,33],
[37,42,26,0,43,40,36,30],
[26,38,40,38,0,33,36,33],
[42,50,43,41,48,0,38,41],
[36,48,37,45,45,43,0,41],
[39,51,48,51,48,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,48,41,42,53,59,33],
[25,0,42,19,37,45,47,26],
[33,39,0,29,31,43,47,31],
[40,62,52,0,40,45,50,42],
[39,44,50,41,0,32,40,32],
[28,36,38,36,49,0,48,33],
[22,34,34,31,41,33,0,31],
[48,55,50,39,49,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,55,34,29,50,43,43],
[37,0,41,45,47,45,43,42],
[26,40,0,35,37,57,27,49],
[47,36,46,0,44,49,54,39],
[52,34,44,37,0,50,50,32],
[31,36,24,32,31,0,33,35],
[38,38,54,27,31,48,0,34],
[38,39,32,42,49,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,32,32,28,40,40],
[48,0,40,45,45,35,51,39],
[43,41,0,42,40,41,42,44],
[49,36,39,0,34,25,42,33],
[49,36,41,47,0,39,44,44],
[53,46,40,56,42,0,42,55],
[41,30,39,39,37,39,0,42],
[41,42,37,48,37,26,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,38,45,33,40,38],
[36,0,37,42,43,39,37,47],
[39,44,0,42,44,47,42,40],
[43,39,39,0,38,40,42,35],
[36,38,37,43,0,41,37,43],
[48,42,34,41,40,0,37,43],
[41,44,39,39,44,44,0,35],
[43,34,41,46,38,38,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,42,51,48,38,39],
[38,0,41,46,51,48,44,44],
[37,40,0,40,47,44,42,41],
[39,35,41,0,47,38,38,40],
[30,30,34,34,0,43,36,36],
[33,33,37,43,38,0,39,41],
[43,37,39,43,45,42,0,42],
[42,37,40,41,45,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,52,40,34,37,42,50],
[44,0,48,52,40,46,40,37],
[29,33,0,45,25,23,32,40],
[41,29,36,0,33,22,29,35],
[47,41,56,48,0,60,51,37],
[44,35,58,59,21,0,27,41],
[39,41,49,52,30,54,0,38],
[31,44,41,46,44,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,46,41,37,33,36],
[35,0,43,35,28,37,38,33],
[38,38,0,43,40,36,43,39],
[35,46,38,0,33,33,34,31],
[40,53,41,48,0,40,43,38],
[44,44,45,48,41,0,38,45],
[48,43,38,47,38,43,0,36],
[45,48,42,50,43,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,50,51,55,42,42],
[41,0,36,31,47,48,34,41],
[40,45,0,47,58,51,42,48],
[31,50,34,0,54,49,47,39],
[30,34,23,27,0,49,34,26],
[26,33,30,32,32,0,35,34],
[39,47,39,34,47,46,0,39],
[39,40,33,42,55,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,39,47,46,40,43],
[40,0,46,44,49,40,46,43],
[39,35,0,40,48,38,44,40],
[42,37,41,0,46,38,43,36],
[34,32,33,35,0,35,40,34],
[35,41,43,43,46,0,46,42],
[41,35,37,38,41,35,0,36],
[38,38,41,45,47,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,46,38,46,43,37],
[36,0,43,49,37,46,41,32],
[40,38,0,47,38,43,43,33],
[35,32,34,0,30,39,44,27],
[43,44,43,51,0,40,44,33],
[35,35,38,42,41,0,42,33],
[38,40,38,37,37,39,0,42],
[44,49,48,54,48,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,30,44,39,38,43],
[40,0,28,44,49,50,48,33],
[42,53,0,45,42,46,35,53],
[51,37,36,0,39,40,42,47],
[37,32,39,42,0,45,43,32],
[42,31,35,41,36,0,49,48],
[43,33,46,39,38,32,0,29],
[38,48,28,34,49,33,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,49,56,36,47,49,40],
[41,0,42,52,36,47,44,38],
[32,39,0,43,31,39,38,36],
[25,29,38,0,31,29,37,32],
[45,45,50,50,0,42,42,40],
[34,34,42,52,39,0,49,42],
[32,37,43,44,39,32,0,33],
[41,43,45,49,41,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,14,14,52,0,0],
[38,0,81,38,52,52,38,38],
[38,0,0,38,38,52,38,38],
[67,43,43,0,14,81,67,0],
[67,29,43,67,0,81,67,67],
[29,29,29,0,0,0,29,0],
[81,43,43,14,14,52,0,14],
[81,43,43,81,14,81,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,49,49,74,49,49],
[44,0,40,40,40,81,40,56],
[32,41,0,53,28,69,16,23],
[32,41,28,0,12,41,28,16],
[32,41,53,69,0,69,53,48],
[7,0,12,40,12,0,12,12],
[32,41,65,53,28,69,0,48],
[32,25,58,65,33,69,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,55,44,31,53,46],
[34,0,34,24,22,23,54,54],
[39,47,0,55,42,47,42,44],
[26,57,26,0,32,32,54,35],
[37,59,39,49,0,49,54,46],
[50,58,34,49,32,0,49,49],
[28,27,39,27,27,32,0,17],
[35,27,37,46,35,32,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,62,24,41,36,36,52],
[38,0,48,35,42,41,39,42],
[19,33,0,14,49,33,30,42],
[57,46,67,0,57,54,37,58],
[40,39,32,24,0,46,27,54],
[45,40,48,27,35,0,47,59],
[45,42,51,44,54,34,0,63],
[29,39,39,23,27,22,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,36,41,40,35,37],
[36,0,36,34,34,34,34,34],
[40,45,0,41,35,42,36,42],
[45,47,40,0,36,45,39,37],
[40,47,46,45,0,41,35,43],
[41,47,39,36,40,0,37,39],
[46,47,45,42,46,44,0,40],
[44,47,39,44,38,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,38,42,42,36,36,42],
[31,0,40,40,31,32,37,36],
[43,41,0,40,40,36,37,39],
[39,41,41,0,44,33,39,35],
[39,50,41,37,0,38,42,44],
[45,49,45,48,43,0,38,45],
[45,44,44,42,39,43,0,35],
[39,45,42,46,37,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,40,33,28,31,31],
[50,0,46,48,44,41,37,43],
[49,35,0,44,45,39,37,39],
[41,33,37,0,37,42,34,41],
[48,37,36,44,0,39,34,44],
[53,40,42,39,42,0,43,53],
[50,44,44,47,47,38,0,48],
[50,38,42,40,37,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,37,37,36,37,44],
[41,0,46,36,39,34,43,40],
[42,35,0,36,38,38,42,32],
[44,45,45,0,44,46,43,36],
[44,42,43,37,0,40,38,36],
[45,47,43,35,41,0,46,38],
[44,38,39,38,43,35,0,41],
[37,41,49,45,45,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,47,37,41,42,30,42],
[38,0,53,39,43,39,41,39],
[34,28,0,43,40,42,35,43],
[44,42,38,0,35,42,39,42],
[40,38,41,46,0,50,40,43],
[39,42,39,39,31,0,22,37],
[51,40,46,42,41,59,0,40],
[39,42,38,39,38,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,45,44,40,41,39],
[34,0,32,39,36,32,46,37],
[42,49,0,53,37,50,49,37],
[36,42,28,0,34,36,41,29],
[37,45,44,47,0,42,44,41],
[41,49,31,45,39,0,45,35],
[40,35,32,40,37,36,0,29],
[42,44,44,52,40,46,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,34,42,49,49,36,39],
[48,0,41,53,49,49,40,43],
[47,40,0,54,47,52,34,40],
[39,28,27,0,41,34,24,33],
[32,32,34,40,0,36,27,33],
[32,32,29,47,45,0,26,33],
[45,41,47,57,54,55,0,37],
[42,38,41,48,48,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,32,45,43,44,53],
[50,0,42,39,45,42,37,56],
[46,39,0,44,51,46,39,54],
[49,42,37,0,44,45,40,47],
[36,36,30,37,0,37,38,50],
[38,39,35,36,44,0,42,42],
[37,44,42,41,43,39,0,54],
[28,25,27,34,31,39,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,33,43,33,50,37],
[45,0,44,39,50,41,37,40],
[44,37,0,42,49,30,49,46],
[48,42,39,0,46,32,48,34],
[38,31,32,35,0,19,40,36],
[48,40,51,49,62,0,47,47],
[31,44,32,33,41,34,0,36],
[44,41,35,47,45,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,41,41,41,38,42],
[38,0,39,36,30,31,30,34],
[35,42,0,37,35,31,31,40],
[40,45,44,0,38,37,39,42],
[40,51,46,43,0,39,41,45],
[40,50,50,44,42,0,39,40],
[43,51,50,42,40,42,0,44],
[39,47,41,39,36,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,42,41,42,39,37],
[36,0,35,42,36,39,34,41],
[43,46,0,43,38,33,45,37],
[39,39,38,0,35,39,43,38],
[40,45,43,46,0,41,39,47],
[39,42,48,42,40,0,39,41],
[42,47,36,38,42,42,0,41],
[44,40,44,43,34,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,41,47,38,35,41],
[47,0,44,44,43,46,34,44],
[40,37,0,44,36,39,35,47],
[40,37,37,0,43,46,40,38],
[34,38,45,38,0,44,41,41],
[43,35,42,35,37,0,33,39],
[46,47,46,41,40,48,0,41],
[40,37,34,43,40,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,42,46,43,47,41],
[43,0,38,38,44,48,44,43],
[41,43,0,44,38,43,45,44],
[39,43,37,0,36,41,43,40],
[35,37,43,45,0,44,46,46],
[38,33,38,40,37,0,40,46],
[34,37,36,38,35,41,0,40],
[40,38,37,41,35,35,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,58,41,45,50,66],
[45,0,52,53,26,49,45,69],
[46,29,0,41,32,61,61,56],
[23,28,40,0,29,36,32,51],
[40,55,49,52,0,42,60,70],
[36,32,20,45,39,0,40,45],
[31,36,20,49,21,41,0,40],
[15,12,25,30,11,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,43,52,41,44,38],
[37,0,41,42,45,36,37,31],
[37,40,0,41,44,35,40,37],
[38,39,40,0,42,34,47,32],
[29,36,37,39,0,33,40,30],
[40,45,46,47,48,0,48,42],
[37,44,41,34,41,33,0,34],
[43,50,44,49,51,39,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,55,51,38,41,48,44],
[41,0,49,56,38,42,39,39],
[26,32,0,38,38,28,37,31],
[30,25,43,0,31,44,32,38],
[43,43,43,50,0,39,37,39],
[40,39,53,37,42,0,42,42],
[33,42,44,49,44,39,0,44],
[37,42,50,43,42,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,50,34,49,46,39],
[32,0,48,45,41,45,49,41],
[34,33,0,56,27,41,55,35],
[31,36,25,0,25,42,43,30],
[47,40,54,56,0,45,55,39],
[32,36,40,39,36,0,36,35],
[35,32,26,38,26,45,0,30],
[42,40,46,51,42,46,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,45,42,38,68,57,44],
[46,0,45,28,24,38,43,33],
[36,36,0,50,36,45,45,56],
[39,53,31,0,55,54,59,57],
[43,57,45,26,0,52,55,66],
[13,43,36,27,29,0,53,33],
[24,38,36,22,26,28,0,19],
[37,48,25,24,15,48,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,70,37,62,51,45,79],
[30,0,43,50,42,47,32,34],
[11,38,0,28,49,51,41,48],
[44,31,53,0,43,70,42,48],
[19,39,32,38,0,38,42,48],
[30,34,30,11,43,0,34,57],
[36,49,40,39,39,47,0,34],
[2,47,33,33,33,24,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,49,46,57,48,44],
[38,0,33,43,42,33,41,49],
[43,48,0,48,53,44,44,35],
[32,38,33,0,48,34,45,32],
[35,39,28,33,0,33,29,36],
[24,48,37,47,48,0,46,38],
[33,40,37,36,52,35,0,34],
[37,32,46,49,45,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,42,38,39,30,50],
[42,0,49,41,38,46,48,44],
[39,32,0,36,24,42,42,25],
[39,40,45,0,41,33,42,44],
[43,43,57,40,0,38,31,39],
[42,35,39,48,43,0,45,33],
[51,33,39,39,50,36,0,46],
[31,37,56,37,42,48,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,42,39,38,36,34],
[41,0,38,41,42,38,41,40],
[42,43,0,41,49,39,38,40],
[39,40,40,0,44,40,35,46],
[42,39,32,37,0,38,30,43],
[43,43,42,41,43,0,36,39],
[45,40,43,46,51,45,0,43],
[47,41,41,35,38,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,39,38,42,44,46],
[34,0,46,43,42,40,39,49],
[39,35,0,39,40,42,39,46],
[42,38,42,0,44,40,44,36],
[43,39,41,37,0,43,44,46],
[39,41,39,41,38,0,45,40],
[37,42,42,37,37,36,0,45],
[35,32,35,45,35,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,26,36,37,29,46,36],
[40,0,26,36,36,30,45,40],
[55,55,0,46,48,46,51,39],
[45,45,35,0,44,44,56,41],
[44,45,33,37,0,35,45,38],
[52,51,35,37,46,0,58,44],
[35,36,30,25,36,23,0,29],
[45,41,42,40,43,37,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,51,42,41,46,50,40],
[33,0,44,44,46,34,44,41],
[30,37,0,35,34,30,34,40],
[39,37,46,0,41,38,46,48],
[40,35,47,40,0,40,45,41],
[35,47,51,43,41,0,47,40],
[31,37,47,35,36,34,0,40],
[41,40,41,33,40,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,41,50,56,31,22,72],
[6,0,28,6,25,22,28,28],
[40,53,0,15,34,34,31,62],
[31,75,66,0,34,56,47,72],
[25,56,47,47,0,28,47,47],
[50,59,47,25,53,0,72,72],
[59,53,50,34,34,9,0,81],
[9,53,19,9,34,9,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,50,31,42,25,45],
[34,0,32,59,37,46,31,59],
[44,49,0,57,43,43,37,54],
[31,22,24,0,21,42,31,56],
[50,44,38,60,0,43,44,70],
[39,35,38,39,38,0,30,34],
[56,50,44,50,37,51,0,55],
[36,22,27,25,11,47,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,36,30,48,43,43],
[43,0,36,29,33,46,32,36],
[39,45,0,38,44,54,39,38],
[45,52,43,0,42,53,38,47],
[51,48,37,39,0,55,42,47],
[33,35,27,28,26,0,22,31],
[38,49,42,43,39,59,0,38],
[38,45,43,34,34,50,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,41,44,36,45,45],
[41,0,36,49,28,44,42,36],
[35,45,0,43,24,35,22,23],
[40,32,38,0,31,45,39,30],
[37,53,57,50,0,53,44,58],
[45,37,46,36,28,0,40,41],
[36,39,59,42,37,41,0,46],
[36,45,58,51,23,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,45,41,38,41,45],
[41,0,44,40,39,39,39,45],
[40,37,0,41,42,42,43,45],
[36,41,40,0,43,37,45,43],
[40,42,39,38,0,44,42,48],
[43,42,39,44,37,0,48,55],
[40,42,38,36,39,33,0,46],
[36,36,36,38,33,26,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,38,48,32,46,38],
[27,0,32,24,36,42,47,36],
[26,49,0,43,39,33,52,36],
[43,57,38,0,46,44,58,42],
[33,45,42,35,0,37,37,44],
[49,39,48,37,44,0,50,45],
[35,34,29,23,44,31,0,35],
[43,45,45,39,37,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,31,35,28,24,32,39],
[33,0,25,35,27,25,31,35],
[50,56,0,45,40,40,51,44],
[46,46,36,0,41,33,38,41],
[53,54,41,40,0,43,46,44],
[57,56,41,48,38,0,50,47],
[49,50,30,43,35,31,0,42],
[42,46,37,40,37,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,48,46,37,43,43],
[39,0,45,43,44,43,46,51],
[32,36,0,34,33,30,41,34],
[33,38,47,0,37,32,50,41],
[35,37,48,44,0,38,40,46],
[44,38,51,49,43,0,47,36],
[38,35,40,31,41,34,0,40],
[38,30,47,40,35,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,35,29,45,36,33],
[39,0,43,35,32,41,40,42],
[44,38,0,37,36,43,39,31],
[46,46,44,0,44,47,36,44],
[52,49,45,37,0,48,44,37],
[36,40,38,34,33,0,28,32],
[45,41,42,45,37,53,0,42],
[48,39,50,37,44,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,28,40,36,33,32,39],
[40,0,31,34,36,36,38,42],
[53,50,0,48,42,48,43,40],
[41,47,33,0,33,36,36,34],
[45,45,39,48,0,43,43,49],
[48,45,33,45,38,0,41,37],
[49,43,38,45,38,40,0,43],
[42,39,41,47,32,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,33,37,30,42,44,37],
[39,0,29,31,26,34,34,35],
[48,52,0,42,44,49,48,38],
[44,50,39,0,39,50,46,31],
[51,55,37,42,0,50,54,42],
[39,47,32,31,31,0,47,34],
[37,47,33,35,27,34,0,29],
[44,46,43,50,39,47,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,43,38,41,40,44],
[40,0,38,37,30,35,39,43],
[39,43,0,42,36,38,46,46],
[38,44,39,0,42,34,39,42],
[43,51,45,39,0,43,49,45],
[40,46,43,47,38,0,47,42],
[41,42,35,42,32,34,0,42],
[37,38,35,39,36,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,41,41,52,51,36],
[33,0,42,41,35,42,44,39],
[35,39,0,43,28,44,49,48],
[40,40,38,0,33,46,44,35],
[40,46,53,48,0,56,53,47],
[29,39,37,35,25,0,40,32],
[30,37,32,37,28,41,0,37],
[45,42,33,46,34,49,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,39,39,42,40,42],
[49,0,42,36,45,47,42,50],
[52,39,0,54,45,41,40,48],
[42,45,27,0,47,39,45,46],
[42,36,36,34,0,42,39,47],
[39,34,40,42,39,0,36,48],
[41,39,41,36,42,45,0,44],
[39,31,33,35,34,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,42,45,38,45,38],
[40,0,37,39,35,38,38,36],
[35,44,0,39,40,40,38,35],
[39,42,42,0,43,33,44,35],
[36,46,41,38,0,38,40,41],
[43,43,41,48,43,0,44,40],
[36,43,43,37,41,37,0,35],
[43,45,46,46,40,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,36,35,41,42,52],
[43,0,46,45,43,40,36,56],
[42,35,0,46,44,39,44,45],
[45,36,35,0,37,38,42,41],
[46,38,37,44,0,31,39,50],
[40,41,42,43,50,0,40,44],
[39,45,37,39,42,41,0,40],
[29,25,36,40,31,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,46,40,36,47,42],
[35,0,44,43,39,38,50,40],
[38,37,0,40,35,36,41,39],
[35,38,41,0,36,30,36,41],
[41,42,46,45,0,39,48,44],
[45,43,45,51,42,0,47,39],
[34,31,40,45,33,34,0,41],
[39,41,42,40,37,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,42,47,42,39,38],
[36,0,36,33,40,33,32,25],
[39,45,0,45,48,41,35,40],
[39,48,36,0,42,37,41,40],
[34,41,33,39,0,40,34,37],
[39,48,40,44,41,0,38,41],
[42,49,46,40,47,43,0,40],
[43,56,41,41,44,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,42,47,43,41,37],
[35,0,34,32,33,35,33,33],
[38,47,0,41,41,41,33,40],
[39,49,40,0,41,40,35,36],
[34,48,40,40,0,49,42,38],
[38,46,40,41,32,0,33,41],
[40,48,48,46,39,48,0,49],
[44,48,41,45,43,40,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,45,33,36,35,48],
[47,0,44,18,21,29,22,46],
[44,37,0,43,41,42,41,38],
[36,63,38,0,33,38,26,57],
[48,60,40,48,0,41,37,46],
[45,52,39,43,40,0,54,37],
[46,59,40,55,44,27,0,51],
[33,35,43,24,35,44,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,50,33,55,61,44,42],
[38,0,41,26,60,64,62,60],
[31,40,0,45,44,54,43,43],
[48,55,36,0,68,68,76,58],
[26,21,37,13,0,45,40,37],
[20,17,27,13,36,0,45,25],
[37,19,38,5,41,36,0,32],
[39,21,38,23,44,56,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,37,52,41,45,42],
[42,0,39,40,45,52,50,38],
[41,42,0,35,42,51,45,36],
[44,41,46,0,47,56,47,35],
[29,36,39,34,0,52,41,32],
[40,29,30,25,29,0,32,25],
[36,31,36,34,40,49,0,27],
[39,43,45,46,49,56,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,44,35,44,57,43,48],
[24,0,60,51,22,44,34,35],
[37,21,0,46,22,25,47,25],
[46,30,35,0,31,27,20,29],
[37,59,59,50,0,46,40,63],
[24,37,56,54,35,0,41,30],
[38,47,34,61,41,40,0,40],
[33,46,56,52,18,51,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,56,43,46,49,44],
[43,0,36,42,29,38,46,43],
[38,45,0,33,36,38,45,42],
[25,39,48,0,50,52,40,39],
[38,52,45,31,0,34,39,42],
[35,43,43,29,47,0,37,42],
[32,35,36,41,42,44,0,38],
[37,38,39,42,39,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,21,33,33,33,28],
[43,0,58,32,30,33,37,33],
[40,23,0,23,17,25,31,17],
[60,49,58,0,36,41,59,36],
[48,51,64,45,0,40,50,37],
[48,48,56,40,41,0,45,41],
[48,44,50,22,31,36,0,21],
[53,48,64,45,44,40,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,46,48,35,40,39,40],
[49,0,53,46,39,40,37,45],
[35,28,0,45,31,35,45,31],
[33,35,36,0,33,37,34,42],
[46,42,50,48,0,34,46,50],
[41,41,46,44,47,0,46,36],
[42,44,36,47,35,35,0,48],
[41,36,50,39,31,45,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,47,59,34,56,53,39],
[49,0,31,50,36,45,47,43],
[34,50,0,50,37,52,40,41],
[22,31,31,0,19,29,29,29],
[47,45,44,62,0,51,51,40],
[25,36,29,52,30,0,32,37],
[28,34,41,52,30,49,0,37],
[42,38,40,52,41,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,33,41,41,35,37],
[45,0,39,37,39,38,37,38],
[40,42,0,33,45,37,42,42],
[48,44,48,0,47,40,41,44],
[40,42,36,34,0,39,40,38],
[40,43,44,41,42,0,43,40],
[46,44,39,40,41,38,0,36],
[44,43,39,37,43,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,29,36,27,39,34,54],
[27,0,37,36,37,38,34,49],
[52,44,0,51,52,50,37,62],
[45,45,30,0,52,40,40,57],
[54,44,29,29,0,42,45,59],
[42,43,31,41,39,0,37,54],
[47,47,44,41,36,44,0,57],
[27,32,19,24,22,27,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,40,48,45,54,48,52],
[32,0,27,43,43,43,40,37],
[41,54,0,45,46,45,40,49],
[33,38,36,0,38,45,39,38],
[36,38,35,43,0,44,44,47],
[27,38,36,36,37,0,34,38],
[33,41,41,42,37,47,0,32],
[29,44,32,43,34,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,50,48,40,39,29],
[43,0,50,39,46,40,37,47],
[43,31,0,35,54,37,36,40],
[31,42,46,0,49,44,43,40],
[33,35,27,32,0,31,28,45],
[41,41,44,37,50,0,33,48],
[42,44,45,38,53,48,0,41],
[52,34,41,41,36,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,35,30,26,37,33,39],
[36,0,39,41,35,39,36,37],
[46,42,0,34,28,33,34,47],
[51,40,47,0,43,44,42,52],
[55,46,53,38,0,45,48,43],
[44,42,48,37,36,0,38,44],
[48,45,47,39,33,43,0,42],
[42,44,34,29,38,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,51,35,45,37,39,46],
[36,0,36,27,35,34,36,38],
[30,45,0,34,41,35,40,32],
[46,54,47,0,37,41,41,47],
[36,46,40,44,0,39,30,33],
[44,47,46,40,42,0,39,43],
[42,45,41,40,51,42,0,45],
[35,43,49,34,48,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,46,40,40,45,37],
[35,0,37,43,35,40,41,41],
[41,44,0,46,41,41,45,38],
[35,38,35,0,36,38,37,43],
[41,46,40,45,0,45,42,44],
[41,41,40,43,36,0,36,38],
[36,40,36,44,39,45,0,37],
[44,40,43,38,37,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,41,36,33,42,43],
[42,0,46,47,37,46,42,45],
[37,35,0,47,37,40,42,44],
[40,34,34,0,45,41,42,48],
[45,44,44,36,0,41,48,46],
[48,35,41,40,40,0,43,44],
[39,39,39,39,33,38,0,40],
[38,36,37,33,35,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,47,45,38,39,38],
[28,0,36,39,50,33,37,42],
[30,45,0,42,46,38,40,42],
[34,42,39,0,41,32,42,38],
[36,31,35,40,0,19,31,42],
[43,48,43,49,62,0,40,41],
[42,44,41,39,50,41,0,43],
[43,39,39,43,39,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,50,43,38,41,42,49],
[29,0,42,37,36,31,31,40],
[31,39,0,43,38,36,39,46],
[38,44,38,0,41,38,33,43],
[43,45,43,40,0,37,35,48],
[40,50,45,43,44,0,42,46],
[39,50,42,48,46,39,0,46],
[32,41,35,38,33,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,28,34,25,27,34,30],
[40,0,30,32,40,40,28,34],
[53,51,0,43,47,37,47,46],
[47,49,38,0,40,41,41,41],
[56,41,34,41,0,45,43,51],
[54,41,44,40,36,0,34,42],
[47,53,34,40,38,47,0,31],
[51,47,35,40,30,39,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,33,36,43,41,36,34],
[41,0,34,34,41,40,42,41],
[48,47,0,43,50,49,39,45],
[45,47,38,0,49,45,47,40],
[38,40,31,32,0,39,35,40],
[40,41,32,36,42,0,38,37],
[45,39,42,34,46,43,0,36],
[47,40,36,41,41,44,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,48,35,50,43,42],
[36,0,41,38,26,43,32,47],
[34,40,0,44,45,53,30,41],
[33,43,37,0,36,55,40,36],
[46,55,36,45,0,54,38,47],
[31,38,28,26,27,0,25,31],
[38,49,51,41,43,56,0,49],
[39,34,40,45,34,50,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,41,45,36,41,45],
[40,0,40,42,43,39,38,43],
[44,41,0,41,41,42,38,41],
[40,39,40,0,40,33,36,34],
[36,38,40,41,0,30,39,38],
[45,42,39,48,51,0,41,50],
[40,43,43,45,42,40,0,41],
[36,38,40,47,43,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,40,49,38,33,32],
[49,0,45,43,45,39,41,37],
[47,36,0,41,54,36,44,45],
[41,38,40,0,50,42,36,40],
[32,36,27,31,0,33,30,41],
[43,42,45,39,48,0,41,45],
[48,40,37,45,51,40,0,43],
[49,44,36,41,40,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,33,36,34,40,43],
[39,0,39,40,34,38,41,38],
[41,42,0,38,39,41,43,41],
[48,41,43,0,42,44,40,42],
[45,47,42,39,0,40,36,44],
[47,43,40,37,41,0,39,41],
[41,40,38,41,45,42,0,42],
[38,43,40,39,37,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,24,30,45,31,28,42],
[56,0,42,48,61,39,51,66],
[57,39,0,37,56,41,56,55],
[51,33,44,0,40,31,40,53],
[36,20,25,41,0,31,30,45],
[50,42,40,50,50,0,52,60],
[53,30,25,41,51,29,0,54],
[39,15,26,28,36,21,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,63,53,44,72,30],
[37,0,35,43,28,26,36,27],
[49,46,0,61,38,39,50,17],
[18,38,20,0,23,40,51,3],
[28,53,43,58,0,30,53,48],
[37,55,42,41,51,0,36,42],
[9,45,31,30,28,45,0,8],
[51,54,64,78,33,39,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,42,32,39,35,38],
[38,0,37,39,36,34,30,43],
[42,44,0,43,34,33,38,41],
[39,42,38,0,35,35,38,47],
[49,45,47,46,0,44,39,39],
[42,47,48,46,37,0,43,44],
[46,51,43,43,42,38,0,45],
[43,38,40,34,42,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,24,30,44,37,36,45],
[57,0,48,33,36,42,72,66],
[57,33,0,41,56,51,62,65],
[51,48,40,0,50,34,77,60],
[37,45,25,31,0,28,49,52],
[44,39,30,47,53,0,56,59],
[45,9,19,4,32,25,0,57],
[36,15,16,21,29,22,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,39,33,34,40,38],
[34,0,37,39,35,38,31,34],
[42,44,0,43,45,43,43,40],
[42,42,38,0,39,38,40,44],
[48,46,36,42,0,43,44,41],
[47,43,38,43,38,0,40,42],
[41,50,38,41,37,41,0,37],
[43,47,41,37,40,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,40,36,36,37,41],
[46,0,45,43,47,42,37,35],
[51,36,0,56,47,47,43,45],
[41,38,25,0,32,38,35,28],
[45,34,34,49,0,44,42,30],
[45,39,34,43,37,0,34,40],
[44,44,38,46,39,47,0,37],
[40,46,36,53,51,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,40,41,42,47,38],
[47,0,49,40,43,42,44,38],
[42,32,0,40,44,44,41,35],
[41,41,41,0,49,40,42,41],
[40,38,37,32,0,37,46,35],
[39,39,37,41,44,0,45,45],
[34,37,40,39,35,36,0,29],
[43,43,46,40,46,36,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,46,47,37,43,39],
[45,0,40,41,41,33,45,45],
[38,41,0,42,46,45,44,39],
[35,40,39,0,45,39,46,38],
[34,40,35,36,0,34,45,42],
[44,48,36,42,47,0,45,46],
[38,36,37,35,36,36,0,42],
[42,36,42,43,39,35,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,43,45,44,38,50],
[35,0,35,33,42,32,34,39],
[37,46,0,38,46,42,38,42],
[38,48,43,0,48,40,45,45],
[36,39,35,33,0,41,37,40],
[37,49,39,41,40,0,38,46],
[43,47,43,36,44,43,0,51],
[31,42,39,36,41,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,36,37,31,35,41],
[45,0,38,41,43,40,41,40],
[48,43,0,46,41,42,39,38],
[45,40,35,0,41,38,42,41],
[44,38,40,40,0,36,40,39],
[50,41,39,43,45,0,43,42],
[46,40,42,39,41,38,0,45],
[40,41,43,40,42,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,44,47,58,31,43,25],
[46,0,44,32,43,8,43,25],
[37,37,0,47,47,38,49,54],
[34,49,34,0,41,57,34,26],
[23,38,34,40,0,16,27,39],
[50,73,43,24,65,0,43,43],
[38,38,32,47,54,38,0,39],
[56,56,27,55,42,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,36,36,42,40,34],
[39,0,38,33,27,30,31,31],
[40,43,0,39,34,30,38,33],
[45,48,42,0,41,43,39,32],
[45,54,47,40,0,37,46,44],
[39,51,51,38,44,0,42,48],
[41,50,43,42,35,39,0,41],
[47,50,48,49,37,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,30,22,48,21,23,36],
[39,0,36,35,36,38,34,37],
[51,45,0,53,35,24,51,49],
[59,46,28,0,41,37,43,37],
[33,45,46,40,0,42,27,26],
[60,43,57,44,39,0,59,56],
[58,47,30,38,54,22,0,32],
[45,44,32,44,55,25,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,48,45,48,40,49],
[39,0,40,44,46,43,40,43],
[40,41,0,49,51,46,42,51],
[33,37,32,0,39,31,27,40],
[36,35,30,42,0,39,34,41],
[33,38,35,50,42,0,38,42],
[41,41,39,54,47,43,0,46],
[32,38,30,41,40,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,29,37,38,31,35,33],
[40,0,44,37,40,34,29,33],
[52,37,0,43,38,41,32,38],
[44,44,38,0,41,39,43,44],
[43,41,43,40,0,42,38,43],
[50,47,40,42,39,0,35,38],
[46,52,49,38,43,46,0,37],
[48,48,43,37,38,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,42,41,30,36,25,56],
[51,0,53,47,34,41,36,56],
[39,28,0,35,5,30,36,48],
[40,34,46,0,11,32,42,48],
[51,47,76,70,0,45,36,61],
[45,40,51,49,36,0,53,45],
[56,45,45,39,45,28,0,48],
[25,25,33,33,20,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,22,18,61,41,41,32],
[23,0,37,23,46,43,42,28],
[59,44,0,33,51,48,60,32],
[63,58,48,0,55,35,61,35],
[20,35,30,26,0,34,48,8],
[40,38,33,46,47,0,60,46],
[40,39,21,20,33,21,0,8],
[49,53,49,46,73,35,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,43,49,43,37,43],
[39,0,37,44,49,36,31,46],
[43,44,0,48,45,35,41,51],
[38,37,33,0,43,32,40,38],
[32,32,36,38,0,33,35,44],
[38,45,46,49,48,0,42,50],
[44,50,40,41,46,39,0,48],
[38,35,30,43,37,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,41,44,45,45,41],
[41,0,38,34,39,41,43,32],
[41,43,0,38,46,47,48,38],
[40,47,43,0,41,44,45,39],
[37,42,35,40,0,46,44,38],
[36,40,34,37,35,0,37,33],
[36,38,33,36,37,44,0,36],
[40,49,43,42,43,48,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,37,38,46,44,38],
[39,0,31,36,37,36,39,44],
[38,50,0,46,45,45,46,54],
[44,45,35,0,46,44,43,45],
[43,44,36,35,0,44,44,47],
[35,45,36,37,37,0,39,43],
[37,42,35,38,37,42,0,34],
[43,37,27,36,34,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,35,44,41,34,37],
[39,0,49,37,33,43,49,35],
[50,32,0,32,40,44,43,33],
[46,44,49,0,45,43,46,40],
[37,48,41,36,0,41,40,41],
[40,38,37,38,40,0,42,42],
[47,32,38,35,41,39,0,37],
[44,46,48,41,40,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,42,27,25,34,36,38],
[59,0,60,53,38,52,70,50],
[39,21,0,27,30,35,37,35],
[54,28,54,0,29,41,55,56],
[56,43,51,52,0,37,59,47],
[47,29,46,40,44,0,50,46],
[45,11,44,26,22,31,0,32],
[43,31,46,25,34,35,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,44,46,38,41,45],
[38,0,29,35,40,40,40,32],
[36,52,0,46,47,44,52,36],
[37,46,35,0,48,43,48,35],
[35,41,34,33,0,38,44,33],
[43,41,37,38,43,0,46,40],
[40,41,29,33,37,35,0,41],
[36,49,45,46,48,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,42,47,40,41,43,55],
[27,0,31,33,32,26,28,35],
[39,50,0,43,46,38,35,43],
[34,48,38,0,36,26,29,40],
[41,49,35,45,0,30,29,35],
[40,55,43,55,51,0,33,51],
[38,53,46,52,52,48,0,50],
[26,46,38,41,46,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,45,47,51,52,47,39],
[29,0,44,23,40,31,34,30],
[36,37,0,38,36,38,42,24],
[34,58,43,0,50,43,45,28],
[30,41,45,31,0,42,41,37],
[29,50,43,38,39,0,37,45],
[34,47,39,36,40,44,0,37],
[42,51,57,53,44,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,50,29,37,38,42],
[45,0,46,56,34,35,53,49],
[42,35,0,50,22,35,34,34],
[31,25,31,0,22,27,42,20],
[52,47,59,59,0,38,52,44],
[44,46,46,54,43,0,50,35],
[43,28,47,39,29,31,0,31],
[39,32,47,61,37,46,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,30,35,50,47,35,38],
[40,0,40,37,45,46,36,42],
[51,41,0,37,59,43,44,42],
[46,44,44,0,48,45,39,46],
[31,36,22,33,0,33,36,33],
[34,35,38,36,48,0,45,43],
[46,45,37,42,45,36,0,46],
[43,39,39,35,48,38,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,49,32,50,35,45,54],
[29,0,37,33,40,41,38,48],
[32,44,0,37,46,42,37,50],
[49,48,44,0,51,49,39,48],
[31,41,35,30,0,37,39,43],
[46,40,39,32,44,0,42,45],
[36,43,44,42,42,39,0,48],
[27,33,31,33,38,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,31,45,34,51,52,53],
[31,0,43,52,39,61,30,43],
[50,38,0,58,49,56,53,46],
[36,29,23,0,35,39,36,26],
[47,42,32,46,0,37,44,39],
[30,20,25,42,44,0,28,39],
[29,51,28,45,37,53,0,42],
[28,38,35,55,42,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,39,42,42,43,46],
[40,0,36,45,48,41,45,47],
[46,45,0,44,49,46,40,46],
[42,36,37,0,43,38,37,40],
[39,33,32,38,0,41,33,35],
[39,40,35,43,40,0,43,47],
[38,36,41,44,48,38,0,47],
[35,34,35,41,46,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,40,39,40,42,42],
[37,0,36,41,34,28,40,41],
[39,45,0,37,42,41,42,43],
[41,40,44,0,36,34,40,36],
[42,47,39,45,0,39,48,42],
[41,53,40,47,42,0,49,42],
[39,41,39,41,33,32,0,42],
[39,40,38,45,39,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,49,48,38,49,36,36],
[38,0,45,44,32,53,36,37],
[32,36,0,43,29,44,35,29],
[33,37,38,0,38,50,44,33],
[43,49,52,43,0,47,37,44],
[32,28,37,31,34,0,41,37],
[45,45,46,37,44,40,0,39],
[45,44,52,48,37,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,45,56,41,37,48],
[36,0,41,38,45,43,41,34],
[37,40,0,43,43,42,37,34],
[36,43,38,0,44,39,44,35],
[25,36,38,37,0,35,29,38],
[40,38,39,42,46,0,33,38],
[44,40,44,37,52,48,0,43],
[33,47,47,46,43,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,42,45,40,46,39],
[38,0,44,47,46,48,41,41],
[36,37,0,37,45,49,32,37],
[39,34,44,0,39,36,35,41],
[36,35,36,42,0,48,33,40],
[41,33,32,45,33,0,33,37],
[35,40,49,46,48,48,0,42],
[42,40,44,40,41,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,39,35,39,44,37,35],
[33,0,37,37,47,41,33,32],
[42,44,0,38,47,48,42,36],
[46,44,43,0,55,52,44,35],
[42,34,34,26,0,42,35,26],
[37,40,33,29,39,0,29,26],
[44,48,39,37,46,52,0,47],
[46,49,45,46,55,55,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,47,45,63,43,33],
[39,0,42,37,41,67,38,32],
[44,39,0,42,50,66,44,39],
[34,44,39,0,41,42,47,32],
[36,40,31,40,0,59,45,43],
[18,14,15,39,22,0,20,16],
[38,43,37,34,36,61,0,31],
[48,49,42,49,38,65,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,50,43,41,44,40],
[36,0,28,35,31,30,33,34],
[39,53,0,51,45,43,41,48],
[31,46,30,0,32,39,37,37],
[38,50,36,49,0,37,43,41],
[40,51,38,42,44,0,48,50],
[37,48,40,44,38,33,0,40],
[41,47,33,44,40,31,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,27,30,30,23,34,35],
[55,0,36,47,50,41,48,39],
[54,45,0,47,39,27,40,42],
[51,34,34,0,43,26,35,42],
[51,31,42,38,0,27,36,37],
[58,40,54,55,54,0,41,49],
[47,33,41,46,45,40,0,48],
[46,42,39,39,44,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,46,32,45,40,41],
[36,0,45,46,37,49,39,36],
[41,36,0,36,36,45,41,46],
[35,35,45,0,29,44,42,43],
[49,44,45,52,0,46,34,46],
[36,32,36,37,35,0,35,38],
[41,42,40,39,47,46,0,36],
[40,45,35,38,35,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,32,35,36,39,43,38],
[41,0,38,38,29,42,55,32],
[49,43,0,42,41,48,58,33],
[46,43,39,0,32,48,53,41],
[45,52,40,49,0,46,56,39],
[42,39,33,33,35,0,58,33],
[38,26,23,28,25,23,0,28],
[43,49,48,40,42,48,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,37,34,43,40,40,40],
[46,0,44,40,52,46,41,38],
[44,37,0,41,51,48,40,45],
[47,41,40,0,48,52,50,55],
[38,29,30,33,0,28,35,42],
[41,35,33,29,53,0,31,42],
[41,40,41,31,46,50,0,48],
[41,43,36,26,39,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,40,43,39,44,37],
[43,0,31,43,40,46,43,31],
[45,50,0,38,43,41,46,41],
[41,38,43,0,43,40,41,42],
[38,41,38,38,0,40,36,35],
[42,35,40,41,41,0,41,42],
[37,38,35,40,45,40,0,39],
[44,50,40,39,46,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,49,38,38,37,49],
[34,0,36,37,26,37,25,47],
[38,45,0,36,31,44,42,50],
[32,44,45,0,43,39,41,43],
[43,55,50,38,0,41,44,46],
[43,44,37,42,40,0,31,44],
[44,56,39,40,37,50,0,62],
[32,34,31,38,35,37,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,16,21,31,24,44],
[42,0,48,23,38,43,33,38],
[50,33,0,47,52,66,47,38],
[65,58,34,0,32,52,47,48],
[60,43,29,49,0,49,57,43],
[50,38,15,29,32,0,47,38],
[57,48,34,34,24,34,0,38],
[37,43,43,33,38,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,44,58,45,49,47],
[42,0,41,39,50,37,46,45],
[31,40,0,30,46,40,49,40],
[37,42,51,0,49,41,47,40],
[23,31,35,32,0,30,40,35],
[36,44,41,40,51,0,51,41],
[32,35,32,34,41,30,0,36],
[34,36,41,41,46,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,41,42,40,34,39],
[43,0,31,41,46,45,43,42],
[44,50,0,46,40,42,45,39],
[40,40,35,0,43,38,40,41],
[39,35,41,38,0,40,43,39],
[41,36,39,43,41,0,44,44],
[47,38,36,41,38,37,0,40],
[42,39,42,40,42,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,62,41,44,42,45,69],
[41,0,40,36,44,54,55,47],
[19,41,0,33,33,38,33,49],
[40,45,48,0,55,45,50,65],
[37,37,48,26,0,44,24,65],
[39,27,43,36,37,0,33,48],
[36,26,48,31,57,48,0,51],
[12,34,32,16,16,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,48,42,52,42,45,43],
[51,0,43,46,52,37,37,31],
[33,38,0,34,42,36,33,37],
[39,35,47,0,50,43,37,29],
[29,29,39,31,0,30,33,25],
[39,44,45,38,51,0,36,38],
[36,44,48,44,48,45,0,37],
[38,50,44,52,56,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,31,36,35,40,36,34],
[41,0,40,45,35,42,38,36],
[50,41,0,41,36,38,43,44],
[45,36,40,0,34,41,33,34],
[46,46,45,47,0,49,40,43],
[41,39,43,40,32,0,39,43],
[45,43,38,48,41,42,0,44],
[47,45,37,47,38,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,43,42,39,46,44],
[40,0,39,39,34,34,39,36],
[42,42,0,43,45,35,47,39],
[38,42,38,0,39,42,45,45],
[39,47,36,42,0,40,41,41],
[42,47,46,39,41,0,42,42],
[35,42,34,36,40,39,0,46],
[37,45,42,36,40,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,61,48,46,62,72],
[42,0,58,49,23,49,50,65],
[45,23,0,45,44,55,71,81],
[20,32,36,0,23,54,79,57],
[33,58,37,58,0,33,81,58],
[35,32,26,27,48,0,55,33],
[19,31,10,2,0,26,0,56],
[9,16,0,24,23,48,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,42,36,39,50,45],
[41,0,43,40,43,37,37,41],
[40,38,0,41,41,39,40,43],
[39,41,40,0,40,33,42,43],
[45,38,40,41,0,40,44,45],
[42,44,42,48,41,0,43,38],
[31,44,41,39,37,38,0,38],
[36,40,38,38,36,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,28,50,14,7,47,34],
[54,0,48,67,39,56,50,59],
[53,33,0,53,34,36,55,51],
[31,14,28,0,12,29,30,44],
[67,42,47,69,0,31,54,51],
[74,25,45,52,50,0,47,56],
[34,31,26,51,27,34,0,30],
[47,22,30,37,30,25,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,41,32,45,45,47],
[44,0,48,38,47,45,46,32],
[36,33,0,45,37,35,33,30],
[40,43,36,0,40,36,38,34],
[49,34,44,41,0,42,48,37],
[36,36,46,45,39,0,34,34],
[36,35,48,43,33,47,0,40],
[34,49,51,47,44,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,47,43,45,38,60,38],
[38,0,49,38,35,50,54,47],
[34,32,0,26,22,36,44,38],
[38,43,55,0,42,36,55,48],
[36,46,59,39,0,45,53,51],
[43,31,45,45,36,0,51,47],
[21,27,37,26,28,30,0,34],
[43,34,43,33,30,34,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,29,41,47,25,47,70],
[45,0,67,61,39,24,58,80],
[52,14,0,29,18,24,57,59],
[40,20,52,0,37,13,46,81],
[34,42,63,44,0,18,40,63],
[56,57,57,68,63,0,34,74],
[34,23,24,35,41,47,0,53],
[11,1,22,0,18,7,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,33,38,36,32,31],
[43,0,26,51,40,35,29,32],
[35,55,0,39,44,41,31,38],
[48,30,42,0,38,41,41,37],
[43,41,37,43,0,46,37,37],
[45,46,40,40,35,0,40,40],
[49,52,50,40,44,41,0,47],
[50,49,43,44,44,41,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,39,35,39,43,38],
[42,0,45,50,46,35,39,36],
[38,36,0,41,38,38,37,35],
[42,31,40,0,35,40,35,38],
[46,35,43,46,0,39,45,34],
[42,46,43,41,42,0,39,41],
[38,42,44,46,36,42,0,43],
[43,45,46,43,47,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,34,37,42,46,37],
[30,0,41,32,28,31,34,29],
[30,40,0,31,25,27,31,31],
[47,49,50,0,40,47,38,42],
[44,53,56,41,0,50,41,40],
[39,50,54,34,31,0,42,38],
[35,47,50,43,40,39,0,35],
[44,52,50,39,41,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,49,35,41,51,42,44],
[28,0,33,33,31,29,32,25],
[32,48,0,30,26,41,44,33],
[46,48,51,0,39,48,47,35],
[40,50,55,42,0,44,42,45],
[30,52,40,33,37,0,39,22],
[39,49,37,34,39,42,0,29],
[37,56,48,46,36,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,41,49,35,44,43],
[42,0,52,57,58,39,51,44],
[38,29,0,38,49,35,50,45],
[40,24,43,0,46,41,38,38],
[32,23,32,35,0,30,28,31],
[46,42,46,40,51,0,49,45],
[37,30,31,43,53,32,0,46],
[38,37,36,43,50,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,41,47,49,43,48],
[42,0,49,46,40,60,47,42],
[40,32,0,37,34,39,35,38],
[40,35,44,0,38,45,38,36],
[34,41,47,43,0,44,42,43],
[32,21,42,36,37,0,27,37],
[38,34,46,43,39,54,0,37],
[33,39,43,45,38,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,24,27,32,16,32,20],
[47,0,43,22,22,40,36,51],
[57,38,0,41,38,37,26,50],
[54,59,40,0,43,49,40,51],
[49,59,43,38,0,42,34,41],
[65,41,44,32,39,0,48,34],
[49,45,55,41,47,33,0,34],
[61,30,31,30,40,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,27,41,32,26,18,50],
[72,0,41,69,40,46,73,63],
[54,40,0,57,25,28,41,37],
[40,12,24,0,26,22,12,46],
[49,41,56,55,0,17,36,55],
[55,35,53,59,64,0,50,72],
[63,8,40,69,45,31,0,63],
[31,18,44,35,26,9,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,25,34,35,34,46],
[42,0,47,44,38,47,41,41],
[41,34,0,33,40,34,45,25],
[56,37,48,0,46,48,42,37],
[47,43,41,35,0,41,41,38],
[46,34,47,33,40,0,37,37],
[47,40,36,39,40,44,0,40],
[35,40,56,44,43,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,47,24,41,34,34],
[45,0,46,40,43,51,42,37],
[50,35,0,45,25,44,23,31],
[34,41,36,0,34,31,33,37],
[57,38,56,47,0,49,40,51],
[40,30,37,50,32,0,41,35],
[47,39,58,48,41,40,0,54],
[47,44,50,44,30,46,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,33,40,43,35,39,39],
[46,0,45,47,38,41,44,45],
[48,36,0,46,40,41,43,39],
[41,34,35,0,35,37,40,37],
[38,43,41,46,0,41,46,39],
[46,40,40,44,40,0,41,41],
[42,37,38,41,35,40,0,34],
[42,36,42,44,42,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,27,41,41,23,51],
[44,0,47,57,38,34,54,51],
[40,34,0,57,38,48,40,61],
[54,24,24,0,24,34,44,47],
[40,43,43,57,0,64,33,51],
[40,47,33,47,17,0,33,27],
[58,27,41,37,48,48,0,51],
[30,30,20,34,30,54,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,36,38,45,32,34,25],
[49,0,37,39,46,31,40,47],
[45,44,0,42,43,33,30,33],
[43,42,39,0,58,43,43,34],
[36,35,38,23,0,42,29,25],
[49,50,48,38,39,0,34,38],
[47,41,51,38,52,47,0,30],
[56,34,48,47,56,43,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,46,47,41,34,44],
[47,0,42,49,47,40,42,44],
[38,39,0,43,45,40,36,42],
[35,32,38,0,39,32,31,43],
[34,34,36,42,0,36,38,47],
[40,41,41,49,45,0,36,45],
[47,39,45,50,43,45,0,53],
[37,37,39,38,34,36,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,47,46,44,49,49,39],
[22,0,47,39,48,40,32,32],
[34,34,0,34,35,33,28,29],
[35,42,47,0,34,48,47,37],
[37,33,46,47,0,53,38,37],
[32,41,48,33,28,0,43,42],
[32,49,53,34,43,38,0,30],
[42,49,52,44,44,39,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,16,51,29,34,16,28],
[60,0,31,67,73,49,31,51],
[65,50,0,51,50,19,32,57],
[30,14,30,0,14,21,21,30],
[52,8,31,67,0,36,18,51],
[47,32,62,60,45,0,49,44],
[65,50,49,60,63,32,0,62],
[53,30,24,51,30,37,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,49,33,35,40,41],
[38,0,36,55,44,45,47,40],
[45,45,0,49,50,35,48,33],
[32,26,32,0,40,31,31,38],
[48,37,31,41,0,29,40,35],
[46,36,46,50,52,0,50,35],
[41,34,33,50,41,31,0,40],
[40,41,48,43,46,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,40,46,37,40,47],
[41,0,38,42,44,35,44,44],
[45,43,0,43,46,39,42,42],
[41,39,38,0,46,42,38,43],
[35,37,35,35,0,36,37,46],
[44,46,42,39,45,0,42,41],
[41,37,39,43,44,39,0,41],
[34,37,39,38,35,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,29,28,40,24,41],
[34,0,36,36,37,40,23,37],
[44,45,0,40,41,31,30,50],
[52,45,41,0,34,35,34,51],
[53,44,40,47,0,40,44,49],
[41,41,50,46,41,0,36,53],
[57,58,51,47,37,45,0,56],
[40,44,31,30,32,28,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,31,39,40,35,35,48],
[27,0,32,46,31,33,18,33],
[50,49,0,77,43,47,37,54],
[42,35,4,0,29,20,20,35],
[41,50,38,52,0,35,43,60],
[46,48,34,61,46,0,33,42],
[46,63,44,61,38,48,0,52],
[33,48,27,46,21,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,47,48,37,43,41],
[43,0,38,48,46,38,34,37],
[39,43,0,46,41,43,37,40],
[34,33,35,0,40,38,31,37],
[33,35,40,41,0,38,36,35],
[44,43,38,43,43,0,39,43],
[38,47,44,50,45,42,0,36],
[40,44,41,44,46,38,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,45,34,37,36,39,38],
[37,0,46,44,43,43,45,39],
[36,35,0,35,41,39,43,35],
[47,37,46,0,41,43,43,50],
[44,38,40,40,0,41,42,36],
[45,38,42,38,40,0,44,40],
[42,36,38,38,39,37,0,36],
[43,42,46,31,45,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,45,36,38,35,41],
[41,0,41,42,36,40,36,36],
[38,40,0,38,33,39,33,30],
[36,39,43,0,36,44,39,35],
[45,45,48,45,0,41,38,42],
[43,41,42,37,40,0,34,35],
[46,45,48,42,43,47,0,37],
[40,45,51,46,39,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,35,51,46,44,43],
[36,0,33,28,45,44,34,29],
[38,48,0,29,48,60,57,39],
[46,53,52,0,50,51,49,38],
[30,36,33,31,0,51,49,31],
[35,37,21,30,30,0,51,29],
[37,47,24,32,32,30,0,21],
[38,52,42,43,50,52,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,51,44,49,42,44,38],
[44,0,49,37,51,36,49,43],
[30,32,0,41,34,31,37,33],
[37,44,40,0,45,27,38,46],
[32,30,47,36,0,34,35,31],
[39,45,50,54,47,0,49,49],
[37,32,44,43,46,32,0,35],
[43,38,48,35,50,32,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,50,37,46,56,69,48],
[24,0,34,30,35,58,49,41],
[31,47,0,43,48,51,50,40],
[44,51,38,0,49,59,52,45],
[35,46,33,32,0,55,47,46],
[25,23,30,22,26,0,43,46],
[12,32,31,29,34,38,0,39],
[33,40,41,36,35,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,47,44,42,40,42],
[39,0,35,40,51,46,45,47],
[45,46,0,38,48,49,42,43],
[34,41,43,0,48,39,48,37],
[37,30,33,33,0,37,40,37],
[39,35,32,42,44,0,40,36],
[41,36,39,33,41,41,0,34],
[39,34,38,44,44,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,40,48,37,43,41],
[34,0,39,35,44,36,35,35],
[37,42,0,44,42,40,39,44],
[41,46,37,0,49,43,40,44],
[33,37,39,32,0,28,38,39],
[44,45,41,38,53,0,45,36],
[38,46,42,41,43,36,0,40],
[40,46,37,37,42,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,35,38,42,31,44,33],
[36,0,26,42,26,38,41,28],
[46,55,0,54,31,45,47,44],
[43,39,27,0,35,32,39,36],
[39,55,50,46,0,42,42,45],
[50,43,36,49,39,0,42,38],
[37,40,34,42,39,39,0,36],
[48,53,37,45,36,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,40,35,34,40,41],
[37,0,38,49,44,42,48,43],
[38,43,0,47,41,43,46,46],
[41,32,34,0,41,31,42,41],
[46,37,40,40,0,38,41,37],
[47,39,38,50,43,0,50,43],
[41,33,35,39,40,31,0,38],
[40,38,35,40,44,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,35,50,42,40,42],
[36,0,33,34,43,37,38,25],
[37,48,0,34,45,33,32,31],
[46,47,47,0,44,41,33,46],
[31,38,36,37,0,41,28,37],
[39,44,48,40,40,0,40,32],
[41,43,49,48,53,41,0,38],
[39,56,50,35,44,49,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,76,41,41,41,41,25],
[56,0,56,21,21,21,16,30],
[5,25,0,21,46,46,25,30],
[40,60,60,0,46,46,25,60],
[40,60,35,35,0,5,0,60],
[40,60,35,35,76,0,60,60],
[40,65,56,56,81,21,0,65],
[56,51,51,21,21,21,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,37,38,41,43,44],
[33,0,37,28,33,40,37,35],
[38,44,0,33,38,37,32,32],
[44,53,48,0,36,47,49,42],
[43,48,43,45,0,44,39,41],
[40,41,44,34,37,0,33,41],
[38,44,49,32,42,48,0,39],
[37,46,49,39,40,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,48,44,36,51,43],
[42,0,36,45,43,33,43,36],
[42,45,0,45,38,34,49,40],
[33,36,36,0,49,41,48,42],
[37,38,43,32,0,29,55,39],
[45,48,47,40,52,0,51,40],
[30,38,32,33,26,30,0,32],
[38,45,41,39,42,41,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,30,60,49,78,67,60],
[29,0,18,11,7,36,18,60],
[51,63,0,51,70,58,40,63],
[21,70,30,0,30,39,41,49],
[32,74,11,51,0,51,51,63],
[3,45,23,42,30,0,41,49],
[14,63,41,40,30,40,0,60],
[21,21,18,32,18,32,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,28,24,24,0,7,35],
[81,0,61,55,78,78,50,35],
[53,20,0,27,24,53,27,35],
[57,26,54,0,33,26,33,61],
[57,3,57,48,0,57,29,31],
[81,3,28,55,24,0,7,35],
[74,31,54,48,52,74,0,35],
[46,46,46,20,50,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,37,31,34,34,37,43],
[51,0,36,39,35,35,47,36],
[44,45,0,38,40,34,45,43],
[50,42,43,0,45,37,58,41],
[47,46,41,36,0,32,46,37],
[47,46,47,44,49,0,47,37],
[44,34,36,23,35,34,0,36],
[38,45,38,40,44,44,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,48,46,44,42,51],
[34,0,44,36,38,39,46,41],
[41,37,0,41,38,32,38,35],
[33,45,40,0,45,38,41,41],
[35,43,43,36,0,44,44,39],
[37,42,49,43,37,0,43,39],
[39,35,43,40,37,38,0,34],
[30,40,46,40,42,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,51,37,44,39,32],
[38,0,43,42,58,47,53,33],
[43,38,0,41,36,56,52,45],
[30,39,40,0,50,41,26,19],
[44,23,45,31,0,45,49,32],
[37,34,25,40,36,0,47,39],
[42,28,29,55,32,34,0,44],
[49,48,36,62,49,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,43,49,46,41,51,40],
[32,0,38,48,31,41,37,30],
[38,43,0,54,51,56,58,52],
[32,33,27,0,42,39,35,24],
[35,50,30,39,0,45,35,34],
[40,40,25,42,36,0,32,31],
[30,44,23,46,46,49,0,23],
[41,51,29,57,47,50,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,41,41,34,28,29,34],
[52,0,51,45,36,39,39,43],
[40,30,0,40,30,34,34,37],
[40,36,41,0,41,31,33,39],
[47,45,51,40,0,38,34,38],
[53,42,47,50,43,0,42,40],
[52,42,47,48,47,39,0,46],
[47,38,44,42,43,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,29,43,43,44,49,42],
[35,0,56,55,30,31,47,48],
[52,25,0,39,42,33,45,35],
[38,26,42,0,36,35,32,34],
[38,51,39,45,0,33,46,45],
[37,50,48,46,48,0,27,43],
[32,34,36,49,35,54,0,42],
[39,33,46,47,36,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,41,48,47,40,52],
[33,0,37,39,39,34,42,55],
[38,44,0,33,42,39,39,53],
[40,42,48,0,40,46,45,48],
[33,42,39,41,0,38,46,47],
[34,47,42,35,43,0,41,52],
[41,39,42,36,35,40,0,46],
[29,26,28,33,34,29,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,38,48,40,40,50],
[32,0,33,39,35,38,42,48],
[40,48,0,41,49,45,49,54],
[43,42,40,0,44,47,43,48],
[33,46,32,37,0,39,43,50],
[41,43,36,34,42,0,42,50],
[41,39,32,38,38,39,0,44],
[31,33,27,33,31,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,45,46,54,32,36],
[47,0,40,45,46,50,44,42],
[40,41,0,44,44,51,37,33],
[36,36,37,0,35,50,30,34],
[35,35,37,46,0,46,39,34],
[27,31,30,31,35,0,26,22],
[49,37,44,51,42,55,0,48],
[45,39,48,47,47,59,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,59,43,34,47,28,36],
[32,0,44,32,39,38,36,33],
[22,37,0,26,26,32,23,15],
[38,49,55,0,37,37,41,31],
[47,42,55,44,0,48,34,35],
[34,43,49,44,33,0,29,29],
[53,45,58,40,47,52,0,41],
[45,48,66,50,46,52,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,24,40,44,42,57,52],
[32,0,22,40,22,17,37,37],
[57,59,0,66,45,47,62,37],
[41,41,15,0,41,36,55,43],
[37,59,36,40,0,42,52,52],
[39,64,34,45,39,0,59,34],
[24,44,19,26,29,22,0,44],
[29,44,44,38,29,47,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,29,40,32,40,39],
[40,0,41,41,40,49,45,49],
[46,40,0,29,38,39,43,38],
[52,40,52,0,45,40,42,46],
[41,41,43,36,0,39,45,44],
[49,32,42,41,42,0,38,41],
[41,36,38,39,36,43,0,38],
[42,32,43,35,37,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,34,39,55,34,42],
[34,0,40,42,36,41,34,30],
[44,41,0,55,32,37,37,44],
[47,39,26,0,26,31,28,41],
[42,45,49,55,0,43,42,31],
[26,40,44,50,38,0,38,37],
[47,47,44,53,39,43,0,39],
[39,51,37,40,50,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,40,37,42,34,30],
[44,0,37,30,37,39,43,34],
[45,44,0,47,31,46,31,48],
[41,51,34,0,40,47,35,38],
[44,44,50,41,0,52,35,51],
[39,42,35,34,29,0,37,35],
[47,38,50,46,46,44,0,41],
[51,47,33,43,30,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,37,45,37,49,42],
[38,0,32,39,36,36,49,42],
[48,49,0,42,47,39,48,47],
[44,42,39,0,42,42,47,50],
[36,45,34,39,0,34,38,42],
[44,45,42,39,47,0,51,51],
[32,32,33,34,43,30,0,36],
[39,39,34,31,39,30,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,49,28,49,28,48,40],
[21,0,48,48,42,42,27,39],
[32,33,0,42,42,42,48,33],
[53,33,39,0,54,53,59,53],
[32,39,39,27,0,42,48,39],
[53,39,39,28,39,0,48,60],
[33,54,33,22,33,33,0,33],
[41,42,48,28,42,21,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,42,44,38,37,45],
[37,0,46,39,38,43,40,40],
[38,35,0,36,40,37,41,40],
[39,42,45,0,49,36,41,38],
[37,43,41,32,0,32,35,35],
[43,38,44,45,49,0,37,40],
[44,41,40,40,46,44,0,43],
[36,41,41,43,46,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,53,31,36,40,24,34],
[50,0,41,41,41,49,24,42],
[28,40,0,43,34,46,45,47],
[50,40,38,0,40,45,32,51],
[45,40,47,41,0,68,32,43],
[41,32,35,36,13,0,13,35],
[57,57,36,49,49,68,0,55],
[47,39,34,30,38,46,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,50,23,55,55,0,76],
[53,0,27,76,27,32,53,53],
[31,54,0,54,81,81,26,76],
[58,5,27,0,32,32,0,53],
[26,54,0,49,0,58,26,53],
[26,49,0,49,23,0,26,49],
[81,28,55,81,55,55,0,76],
[5,28,5,28,28,32,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,36,58,64,59,64],
[39,0,39,17,22,39,23,44],
[38,42,0,36,38,65,36,65],
[45,64,45,0,37,65,58,64],
[23,59,43,44,0,43,58,64],
[17,42,16,16,38,0,16,44],
[22,58,45,23,23,65,0,80],
[17,37,16,17,17,37,1,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,20,22,23,21,33,21],
[55,0,33,43,43,47,42,49],
[61,48,0,40,47,50,46,36],
[59,38,41,0,41,45,32,46],
[58,38,34,40,0,48,33,44],
[60,34,31,36,33,0,42,36],
[48,39,35,49,48,39,0,41],
[60,32,45,35,37,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,44,31,39,31,33,41],
[52,0,60,48,36,54,42,57],
[37,21,0,27,21,28,19,41],
[50,33,54,0,38,38,46,42],
[42,45,60,43,0,36,49,53],
[50,27,53,43,45,0,34,44],
[48,39,62,35,32,47,0,47],
[40,24,40,39,28,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,56,49,42,42,39],
[34,0,48,58,34,42,27,37],
[34,33,0,57,42,44,25,43],
[25,23,24,0,30,18,18,35],
[32,47,39,51,0,33,32,48],
[39,39,37,63,48,0,43,35],
[39,54,56,63,49,38,0,54],
[42,44,38,46,33,46,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,49,38,45,42,46],
[35,0,39,30,39,43,42,40],
[34,42,0,43,39,42,42,38],
[32,51,38,0,44,42,49,39],
[43,42,42,37,0,48,45,31],
[36,38,39,39,33,0,37,29],
[39,39,39,32,36,44,0,35],
[35,41,43,42,50,52,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,40,39,41,41,43],
[32,0,39,34,35,27,36,47],
[40,42,0,44,38,34,43,53],
[41,47,37,0,39,29,45,38],
[42,46,43,42,0,35,58,50],
[40,54,47,52,46,0,47,56],
[40,45,38,36,23,34,0,37],
[38,34,28,43,31,25,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,50,34,43,41,39,41],
[37,0,54,42,37,34,47,33],
[31,27,0,27,22,29,30,29],
[47,39,54,0,36,36,54,40],
[38,44,59,45,0,52,47,37],
[40,47,52,45,29,0,45,34],
[42,34,51,27,34,36,0,36],
[40,48,52,41,44,47,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,36,39,38,46,54],
[38,0,41,51,37,39,49,50],
[41,40,0,46,31,43,36,43],
[45,30,35,0,29,35,41,52],
[42,44,50,52,0,38,47,58],
[43,42,38,46,43,0,43,52],
[35,32,45,40,34,38,0,44],
[27,31,38,29,23,29,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,36,41,36,43,43],
[44,0,29,38,43,35,32,23],
[47,52,0,56,33,41,58,40],
[45,43,25,0,40,40,32,23],
[40,38,48,41,0,40,44,28],
[45,46,40,41,41,0,34,21],
[38,49,23,49,37,47,0,32],
[38,58,41,58,53,60,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,54,51,54,39,40],
[39,0,41,38,52,38,40,37],
[32,40,0,44,52,37,35,33],
[27,43,37,0,51,35,41,41],
[30,29,29,30,0,42,34,40],
[27,43,44,46,39,0,35,34],
[42,41,46,40,47,46,0,35],
[41,44,48,40,41,47,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,34,32,39,38,41,32],
[36,0,29,28,32,43,37,29],
[47,52,0,44,47,40,47,46],
[49,53,37,0,45,52,48,49],
[42,49,34,36,0,38,33,36],
[43,38,41,29,43,0,41,38],
[40,44,34,33,48,40,0,45],
[49,52,35,32,45,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,33,30,37,37,29],
[54,0,46,46,45,40,50,41],
[50,35,0,42,39,41,43,43],
[48,35,39,0,38,36,41,29],
[51,36,42,43,0,46,42,36],
[44,41,40,45,35,0,33,31],
[44,31,38,40,39,48,0,36],
[52,40,38,52,45,50,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,32,39,37,34,36],
[44,0,40,38,37,44,38,38],
[52,41,0,44,46,41,41,39],
[49,43,37,0,44,40,41,47],
[42,44,35,37,0,38,42,44],
[44,37,40,41,43,0,34,36],
[47,43,40,40,39,47,0,35],
[45,43,42,34,37,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,37,46,42,43,40],
[39,0,37,39,47,42,42,43],
[39,44,0,36,43,43,40,37],
[44,42,45,0,43,46,45,40],
[35,34,38,38,0,37,39,39],
[39,39,38,35,44,0,43,36],
[38,39,41,36,42,38,0,37],
[41,38,44,41,42,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,34,51,37,39,47],
[44,0,36,36,52,38,40,48],
[40,45,0,41,51,40,46,48],
[47,45,40,0,50,46,46,45],
[30,29,30,31,0,28,30,37],
[44,43,41,35,53,0,43,44],
[42,41,35,35,51,38,0,45],
[34,33,33,36,44,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,37,42,37,35,34],
[48,0,47,44,49,39,44,41],
[42,34,0,39,42,36,40,32],
[44,37,42,0,45,41,46,34],
[39,32,39,36,0,33,37,35],
[44,42,45,40,48,0,46,33],
[46,37,41,35,44,35,0,35],
[47,40,49,47,46,48,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,42,43,36,40,36],
[45,0,45,44,47,39,42,37],
[38,36,0,37,41,34,31,29],
[39,37,44,0,46,33,36,36],
[38,34,40,35,0,37,35,35],
[45,42,47,48,44,0,38,30],
[41,39,50,45,46,43,0,43],
[45,44,52,45,46,51,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,45,48,41,42,48,38],
[32,0,37,41,35,33,35,25],
[36,44,0,43,36,29,35,27],
[33,40,38,0,36,23,34,23],
[40,46,45,45,0,33,41,36],
[39,48,52,58,48,0,54,43],
[33,46,46,47,40,27,0,28],
[43,56,54,58,45,38,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,23,38,50,47,36,30],
[40,0,41,42,58,41,39,33],
[58,40,0,34,52,52,46,36],
[43,39,47,0,55,53,53,41],
[31,23,29,26,0,47,30,28],
[34,40,29,28,34,0,29,30],
[45,42,35,28,51,52,0,42],
[51,48,45,40,53,51,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,54,58,74,37,54,55],
[32,0,32,34,43,35,50,37],
[27,49,0,15,31,42,32,30],
[23,47,66,0,34,35,51,40],
[7,38,50,47,0,30,31,12],
[44,46,39,46,51,0,46,36],
[27,31,49,30,50,35,0,25],
[26,44,51,41,69,45,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,47,43,40,44,43,33],
[43,0,43,44,40,39,41,44],
[34,38,0,40,32,35,40,40],
[38,37,41,0,34,42,46,39],
[41,41,49,47,0,43,43,40],
[37,42,46,39,38,0,37,46],
[38,40,41,35,38,44,0,33],
[48,37,41,42,41,35,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,40,41,45,40,50],
[39,0,35,35,37,44,41,42],
[40,46,0,36,39,44,40,45],
[41,46,45,0,36,43,48,44],
[40,44,42,45,0,47,43,43],
[36,37,37,38,34,0,35,42],
[41,40,41,33,38,46,0,45],
[31,39,36,37,38,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,33,34,22,35,29],
[50,0,36,45,48,35,41,48],
[52,45,0,39,45,26,36,41],
[48,36,42,0,42,32,41,41],
[47,33,36,39,0,34,20,41],
[59,46,55,49,47,0,41,40],
[46,40,45,40,61,40,0,47],
[52,33,40,40,40,41,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,40,29,42,51,32,56],
[55,0,61,49,42,59,22,51],
[41,20,0,24,21,67,22,48],
[52,32,57,0,30,61,42,52],
[39,39,60,51,0,67,47,50],
[30,22,14,20,14,0,17,16],
[49,59,59,39,34,64,0,60],
[25,30,33,29,31,65,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,26,32,29,38,23,23],
[45,0,35,51,37,46,29,38],
[55,46,0,55,35,62,35,33],
[49,30,26,0,42,49,38,26],
[52,44,46,39,0,46,42,27],
[43,35,19,32,35,0,25,32],
[58,52,46,43,39,56,0,45],
[58,43,48,55,54,49,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,53,50,50,40,50],
[36,0,37,43,45,38,41,36],
[35,44,0,41,41,38,38,38],
[28,38,40,0,42,35,37,42],
[31,36,40,39,0,38,32,31],
[31,43,43,46,43,0,41,41],
[41,40,43,44,49,40,0,42],
[31,45,43,39,50,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,44,59,45,47,55],
[39,0,48,52,48,67,67,79],
[50,33,0,22,57,42,59,40],
[37,29,59,0,59,46,47,43],
[22,33,24,22,0,21,40,38],
[36,14,39,35,60,0,55,53],
[34,14,22,34,41,26,0,34],
[26,2,41,38,43,28,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,36,51,46,46,32,43],
[56,0,48,67,55,76,50,37],
[45,33,0,58,46,49,46,45],
[30,14,23,0,22,34,24,12],
[35,26,35,59,0,42,41,23],
[35,5,32,47,39,0,30,17],
[49,31,35,57,40,51,0,23],
[38,44,36,69,58,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,6,27,71,28,28,44],
[37,0,27,38,49,49,37,37],
[75,54,0,32,66,50,53,54],
[54,43,49,0,44,49,37,22],
[10,32,15,37,0,27,15,54],
[53,32,31,32,54,0,31,32],
[53,44,28,44,66,50,0,44],
[37,44,27,59,27,49,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,48,38,33,44,33,33],
[48,0,48,38,45,36,47,50],
[33,33,0,51,42,36,36,40],
[43,43,30,0,36,34,46,51],
[48,36,39,45,0,32,44,43],
[37,45,45,47,49,0,52,42],
[48,34,45,35,37,29,0,46],
[48,31,41,30,38,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,45,47,38,53,44],
[39,0,46,46,56,40,53,50],
[33,35,0,35,46,37,39,45],
[36,35,46,0,39,36,44,33],
[34,25,35,42,0,32,39,29],
[43,41,44,45,49,0,40,43],
[28,28,42,37,42,41,0,38],
[37,31,36,48,52,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,42,24,27,22,26,28],
[53,0,38,36,35,45,27,33],
[39,43,0,35,15,36,38,35],
[57,45,46,0,38,31,32,50],
[54,46,66,43,0,37,53,47],
[59,36,45,50,44,0,32,36],
[55,54,43,49,28,49,0,54],
[53,48,46,31,34,45,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,45,41,43,49,32],
[36,0,57,41,40,49,40,34],
[34,24,0,27,30,42,37,26],
[36,40,54,0,34,49,39,38],
[40,41,51,47,0,52,43,41],
[38,32,39,32,29,0,45,29],
[32,41,44,42,38,36,0,31],
[49,47,55,43,40,52,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,43,42,38,45,42],
[34,0,35,37,40,37,38,38],
[41,46,0,43,41,38,41,35],
[38,44,38,0,40,34,39,38],
[39,41,40,41,0,35,40,35],
[43,44,43,47,46,0,48,38],
[36,43,40,42,41,33,0,34],
[39,43,46,43,46,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,46,39,43,48,47],
[38,0,37,48,49,40,53,42],
[48,44,0,49,44,48,54,37],
[35,33,32,0,41,29,29,33],
[42,32,37,40,0,34,36,42],
[38,41,33,52,47,0,37,35],
[33,28,27,52,45,44,0,43],
[34,39,44,48,39,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,42,43,43,32,36],
[45,0,42,52,52,40,43,50],
[38,39,0,47,42,41,42,48],
[39,29,34,0,34,44,39,50],
[38,29,39,47,0,39,42,46],
[38,41,40,37,42,0,39,54],
[49,38,39,42,39,42,0,45],
[45,31,33,31,35,27,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,31,32,39,29,39,40],
[29,0,28,28,42,34,32,37],
[50,53,0,36,43,41,42,51],
[49,53,45,0,43,44,40,45],
[42,39,38,38,0,36,47,45],
[52,47,40,37,45,0,47,47],
[42,49,39,41,34,34,0,38],
[41,44,30,36,36,34,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,35,49,38,38,56],
[42,0,33,41,50,43,43,54],
[42,48,0,38,46,49,43,57],
[46,40,43,0,49,40,42,56],
[32,31,35,32,0,36,39,43],
[43,38,32,41,45,0,34,53],
[43,38,38,39,42,47,0,45],
[25,27,24,25,38,28,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,60,61,57,58,47],
[37,0,42,56,54,48,46,46],
[41,39,0,57,68,52,40,28],
[21,25,24,0,37,27,24,26],
[20,27,13,44,0,55,40,24],
[24,33,29,54,26,0,48,31],
[23,35,41,57,41,33,0,21],
[34,35,53,55,57,50,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,42,41,44,39,36],
[43,0,39,42,39,41,36,36],
[39,42,0,38,41,38,43,39],
[39,39,43,0,39,41,44,41],
[40,42,40,42,0,44,44,36],
[37,40,43,40,37,0,35,40],
[42,45,38,37,37,46,0,38],
[45,45,42,40,45,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,29,61,30,32,25],
[38,0,57,39,54,24,46,26],
[37,24,0,41,43,24,41,13],
[52,42,40,0,52,30,25,33],
[20,27,38,29,0,21,19,4],
[51,57,57,51,60,0,25,42],
[49,35,40,56,62,56,0,45],
[56,55,68,48,77,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,41,44,49,51,41],
[38,0,36,39,44,42,48,38],
[42,45,0,34,40,46,51,38],
[40,42,47,0,46,50,55,45],
[37,37,41,35,0,44,38,37],
[32,39,35,31,37,0,43,37],
[30,33,30,26,43,38,0,30],
[40,43,43,36,44,44,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,34,50,46,44,41],
[38,0,36,33,37,39,34,43],
[44,45,0,42,40,41,39,41],
[47,48,39,0,45,49,48,50],
[31,44,41,36,0,48,43,35],
[35,42,40,32,33,0,32,39],
[37,47,42,33,38,49,0,40],
[40,38,40,31,46,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,31,45,42,35,34,39],
[47,0,28,32,31,36,31,44],
[50,53,0,39,38,47,35,51],
[36,49,42,0,38,37,42,46],
[39,50,43,43,0,35,39,42],
[46,45,34,44,46,0,32,51],
[47,50,46,39,42,49,0,51],
[42,37,30,35,39,30,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,37,35,36,40,41,43],
[36,0,31,34,35,35,41,39],
[44,50,0,45,38,41,41,46],
[46,47,36,0,43,39,43,43],
[45,46,43,38,0,43,48,50],
[41,46,40,42,38,0,38,44],
[40,40,40,38,33,43,0,40],
[38,42,35,38,31,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,45,45,36,47,42,47],
[33,0,28,38,37,38,37,38],
[36,53,0,43,35,44,36,38],
[36,43,38,0,41,52,43,40],
[45,44,46,40,0,53,36,42],
[34,43,37,29,28,0,32,47],
[39,44,45,38,45,49,0,35],
[34,43,43,41,39,34,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,40,39,38,47,42],
[37,0,43,42,37,40,48,38],
[46,38,0,46,37,43,49,43],
[41,39,35,0,43,40,47,39],
[42,44,44,38,0,45,48,41],
[43,41,38,41,36,0,50,41],
[34,33,32,34,33,31,0,35],
[39,43,38,42,40,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,38,47,53,47,48,39],
[31,0,42,42,44,33,42,42],
[43,39,0,35,48,33,42,43],
[34,39,46,0,51,33,40,43],
[28,37,33,30,0,26,35,34],
[34,48,48,48,55,0,50,45],
[33,39,39,41,46,31,0,33],
[42,39,38,38,47,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,55,55,21,21,21],
[41,0,19,33,18,12,19,58],
[41,62,0,57,65,8,41,58],
[26,48,24,0,24,29,4,43],
[26,63,16,57,0,9,16,43],
[60,69,73,52,72,0,34,50],
[60,62,40,77,65,47,0,77],
[60,23,23,38,38,31,4,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,47,48,46,52,38],
[39,0,38,52,34,45,49,38],
[32,43,0,35,28,42,47,44],
[34,29,46,0,28,35,44,38],
[33,47,53,53,0,44,47,47],
[35,36,39,46,37,0,42,51],
[29,32,34,37,34,39,0,47],
[43,43,37,43,34,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,25,36,25,53,40,67],
[59,0,30,17,29,66,42,72],
[56,51,0,38,51,65,39,42],
[45,64,43,0,32,69,69,72],
[56,52,30,49,0,78,53,69],
[28,15,16,12,3,0,17,55],
[41,39,42,12,28,64,0,71],
[14,9,39,9,12,26,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,24,62,32,48,24],
[47,0,28,23,28,29,23,24],
[52,53,0,28,38,9,52,28],
[57,58,53,0,38,14,48,25],
[19,53,43,43,0,43,42,43],
[49,52,72,67,38,0,67,45],
[33,58,29,33,39,14,0,25],
[57,57,53,56,38,36,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,31,45,37,42,46,44],
[33,0,32,43,36,42,43,25],
[50,49,0,53,42,48,41,40],
[36,38,28,0,24,25,43,26],
[44,45,39,57,0,42,60,36],
[39,39,33,56,39,0,42,33],
[35,38,40,38,21,39,0,16],
[37,56,41,55,45,48,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,45,49,32,31,50],
[39,0,33,42,33,28,24,21],
[37,48,0,35,27,29,36,38],
[36,39,46,0,49,56,29,40],
[32,48,54,32,0,49,48,56],
[49,53,52,25,32,0,25,37],
[50,57,45,52,33,56,0,43],
[31,60,43,41,25,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,42,47,37,33,32],
[37,0,39,27,42,31,38,37],
[35,42,0,33,44,27,38,42],
[39,54,48,0,47,38,39,37],
[34,39,37,34,0,30,21,25],
[44,50,54,43,51,0,42,40],
[48,43,43,42,60,39,0,45],
[49,44,39,44,56,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,26,33,41,46,49],
[39,0,41,29,35,31,42,52],
[46,40,0,37,33,41,52,55],
[55,52,44,0,37,49,54,60],
[48,46,48,44,0,39,42,52],
[40,50,40,32,42,0,54,46],
[35,39,29,27,39,27,0,39],
[32,29,26,21,29,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,47,37,40,53,46],
[37,0,42,34,29,30,45,39],
[39,39,0,35,39,34,46,43],
[34,47,46,0,46,26,42,42],
[44,52,42,35,0,43,55,45],
[41,51,47,55,38,0,54,46],
[28,36,35,39,26,27,0,32],
[35,42,38,39,36,35,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,43,46,38,36,43],
[39,0,42,44,45,38,40,55],
[45,39,0,46,47,40,44,47],
[38,37,35,0,43,43,36,45],
[35,36,34,38,0,31,36,39],
[43,43,41,38,50,0,46,48],
[45,41,37,45,45,35,0,47],
[38,26,34,36,42,33,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,30,38,35,33,31],
[42,0,34,40,40,43,42,44],
[47,47,0,37,51,36,39,48],
[51,41,44,0,48,48,39,55],
[43,41,30,33,0,42,41,43],
[46,38,45,33,39,0,43,41],
[48,39,42,42,40,38,0,42],
[50,37,33,26,38,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,33,43,47,42,41,35],
[43,0,38,42,39,39,43,37],
[48,43,0,44,51,40,48,48],
[38,39,37,0,38,48,56,39],
[34,42,30,43,0,35,41,30],
[39,42,41,33,46,0,40,35],
[40,38,33,25,40,41,0,39],
[46,44,33,42,51,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,41,42,39,35,41],
[38,0,41,33,35,39,41,40],
[38,40,0,39,38,40,36,43],
[40,48,42,0,43,46,45,41],
[39,46,43,38,0,42,43,38],
[42,42,41,35,39,0,42,40],
[46,40,45,36,38,39,0,39],
[40,41,38,40,43,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,42,47,36,46,49],
[34,0,42,33,41,37,39,35],
[36,39,0,32,36,30,35,37],
[39,48,49,0,50,41,52,46],
[34,40,45,31,0,34,38,41],
[45,44,51,40,47,0,49,42],
[35,42,46,29,43,32,0,35],
[32,46,44,35,40,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,50,37,38,40,40,48],
[39,0,48,36,35,39,40,39],
[31,33,0,29,28,26,27,30],
[44,45,52,0,43,45,37,46],
[43,46,53,38,0,44,42,46],
[41,42,55,36,37,0,32,54],
[41,41,54,44,39,49,0,47],
[33,42,51,35,35,27,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,43,38,47,38,46],
[35,0,38,38,34,35,41,37],
[38,43,0,39,41,46,40,35],
[38,43,42,0,33,39,36,45],
[43,47,40,48,0,48,45,43],
[34,46,35,42,33,0,33,46],
[43,40,41,45,36,48,0,39],
[35,44,46,36,38,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,39,44,48,37,45],
[38,0,29,35,35,39,37,42],
[40,52,0,39,38,49,43,45],
[42,46,42,0,43,39,39,44],
[37,46,43,38,0,44,49,45],
[33,42,32,42,37,0,38,35],
[44,44,38,42,32,43,0,41],
[36,39,36,37,36,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,54,35,39,47,41,30],
[39,0,43,44,44,39,41,27],
[27,38,0,39,38,42,39,30],
[46,37,42,0,48,40,41,35],
[42,37,43,33,0,48,43,32],
[34,42,39,41,33,0,40,34],
[40,40,42,40,38,41,0,43],
[51,54,51,46,49,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,24,30,40,52,36,38],
[44,0,40,39,51,59,50,47],
[57,41,0,40,47,62,46,44],
[51,42,41,0,42,57,40,38],
[41,30,34,39,0,53,36,39],
[29,22,19,24,28,0,28,28],
[45,31,35,41,45,53,0,43],
[43,34,37,43,42,53,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,31,42,49,37,61,40],
[41,0,38,23,39,32,43,46],
[50,43,0,41,39,40,46,34],
[39,58,40,0,43,48,54,47],
[32,42,42,38,0,39,63,41],
[44,49,41,33,42,0,33,39],
[20,38,35,27,18,48,0,21],
[41,35,47,34,40,42,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,43,38,41,39,32],
[39,0,50,51,37,42,46,39],
[37,31,0,34,34,39,36,34],
[38,30,47,0,35,46,41,39],
[43,44,47,46,0,39,48,41],
[40,39,42,35,42,0,41,36],
[42,35,45,40,33,40,0,40],
[49,42,47,42,40,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,45,46,36,33,47],
[38,0,41,43,46,37,32,41],
[39,40,0,37,40,35,33,37],
[36,38,44,0,42,44,31,44],
[35,35,41,39,0,38,35,45],
[45,44,46,37,43,0,42,47],
[48,49,48,50,46,39,0,48],
[34,40,44,37,36,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,36,25,37,38,41],
[46,0,38,52,34,50,49,49],
[40,43,0,37,42,49,57,42],
[45,29,44,0,34,40,43,37],
[56,47,39,47,0,53,44,57],
[44,31,32,41,28,0,37,39],
[43,32,24,38,37,44,0,42],
[40,32,39,44,24,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,47,36,40,38,39],
[45,0,40,42,38,43,41,45],
[42,41,0,44,44,45,39,48],
[34,39,37,0,33,36,32,42],
[45,43,37,48,0,46,42,44],
[41,38,36,45,35,0,42,39],
[43,40,42,49,39,39,0,37],
[42,36,33,39,37,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,55,36,25,58,35],
[42,0,43,42,37,35,39,29],
[42,38,0,52,45,37,49,42],
[26,39,29,0,25,19,34,20],
[45,44,36,56,0,39,50,61],
[56,46,44,62,42,0,65,28],
[23,42,32,47,31,16,0,24],
[46,52,39,61,20,53,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,29,37,41,35,40],
[48,0,43,38,38,45,37,41],
[42,38,0,32,41,41,42,49],
[52,43,49,0,45,43,40,56],
[44,43,40,36,0,40,39,46],
[40,36,40,38,41,0,35,39],
[46,44,39,41,42,46,0,46],
[41,40,32,25,35,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,40,43,42,44,49],
[39,0,42,40,41,35,40,45],
[45,39,0,41,44,47,45,46],
[41,41,40,0,51,38,39,43],
[38,40,37,30,0,37,31,32],
[39,46,34,43,44,0,38,47],
[37,41,36,42,50,43,0,47],
[32,36,35,38,49,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,42,42,41,40,45,38],
[31,0,30,37,35,31,40,38],
[39,51,0,42,46,41,48,43],
[39,44,39,0,38,39,46,44],
[40,46,35,43,0,34,48,42],
[41,50,40,42,47,0,47,43],
[36,41,33,35,33,34,0,32],
[43,43,38,37,39,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,49,47,44,41,39],
[38,0,38,41,35,43,39,28],
[35,43,0,38,38,37,37,40],
[32,40,43,0,44,40,37,32],
[34,46,43,37,0,43,38,42],
[37,38,44,41,38,0,40,38],
[40,42,44,44,43,41,0,29],
[42,53,41,49,39,43,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,34,39,47,53,62,34],
[33,0,40,36,30,48,54,25],
[47,41,0,33,37,48,56,29],
[42,45,48,0,38,54,66,33],
[34,51,44,43,0,56,53,42],
[28,33,33,27,25,0,54,27],
[19,27,25,15,28,27,0,17],
[47,56,52,48,39,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,35,43,41,35,34,43],
[38,0,40,39,37,38,40,40],
[46,41,0,47,40,38,39,40],
[38,42,34,0,34,35,28,41],
[40,44,41,47,0,38,49,43],
[46,43,43,46,43,0,39,43],
[47,41,42,53,32,42,0,50],
[38,41,41,40,38,38,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,51,47,41,36,46,34],
[39,0,39,49,35,37,48,42],
[30,42,0,36,21,29,42,35],
[34,32,45,0,33,29,39,18],
[40,46,60,48,0,46,48,51],
[45,44,52,52,35,0,47,42],
[35,33,39,42,33,34,0,36],
[47,39,46,63,30,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,33,48,45,45,46,36],
[69,0,69,58,39,67,80,47],
[48,12,0,53,29,24,52,48],
[33,23,28,0,50,45,52,35],
[36,42,52,31,0,48,52,36],
[36,14,57,36,33,0,52,29],
[35,1,29,29,29,29,0,13],
[45,34,33,46,45,52,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,11,6,11,51,39,19,24],
[70,0,29,66,44,28,17,46],
[75,52,0,65,64,39,60,52],
[70,15,16,0,46,28,17,48],
[30,37,17,35,0,4,17,22],
[42,53,42,53,77,0,48,36],
[62,64,21,64,64,33,0,35],
[57,35,29,33,59,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,48,29,35,17,46,40],
[54,0,49,46,39,46,52,51],
[33,32,0,33,32,29,24,41],
[52,35,48,0,42,35,45,45],
[46,42,49,39,0,43,47,41],
[64,35,52,46,38,0,56,58],
[35,29,57,36,34,25,0,42],
[41,30,40,36,40,23,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,24,19,18,19,28,36],
[50,0,35,33,33,42,55,42],
[57,46,0,52,33,19,50,56],
[62,48,29,0,38,30,54,47],
[63,48,48,43,0,35,41,42],
[62,39,62,51,46,0,68,69],
[53,26,31,27,40,13,0,36],
[45,39,25,34,39,12,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,42,44,48,36,40],
[40,0,35,42,43,37,37,34],
[39,46,0,53,41,47,47,45],
[39,39,28,0,40,38,45,34],
[37,38,40,41,0,41,45,36],
[33,44,34,43,40,0,36,43],
[45,44,34,36,36,45,0,32],
[41,47,36,47,45,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,17,29,21,23,56],
[56,0,41,44,47,37,46,51],
[51,40,0,38,42,30,49,52],
[64,37,43,0,45,24,35,53],
[52,34,39,36,0,23,33,50],
[60,44,51,57,58,0,34,58],
[58,35,32,46,48,47,0,53],
[25,30,29,28,31,23,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,42,48,27,34,31],
[36,0,28,37,39,46,37,38],
[40,53,0,45,51,45,41,38],
[39,44,36,0,49,38,42,35],
[33,42,30,32,0,41,30,32],
[54,35,36,43,40,0,38,31],
[47,44,40,39,51,43,0,41],
[50,43,43,46,49,50,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,41,40,40,41,36],
[37,0,34,42,35,43,38,40],
[43,47,0,37,41,37,39,39],
[40,39,44,0,33,35,40,42],
[41,46,40,48,0,43,48,40],
[41,38,44,46,38,0,42,39],
[40,43,42,41,33,39,0,40],
[45,41,42,39,41,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,38,44,37,34,39],
[42,0,42,44,38,36,39,39],
[40,39,0,36,43,39,36,37],
[43,37,45,0,46,39,40,40],
[37,43,38,35,0,38,40,33],
[44,45,42,42,43,0,40,43],
[47,42,45,41,41,41,0,37],
[42,42,44,41,48,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,42,46,40,42,37],
[36,0,39,35,41,38,39,39],
[41,42,0,39,42,33,37,42],
[39,46,42,0,43,41,39,40],
[35,40,39,38,0,38,40,37],
[41,43,48,40,43,0,38,40],
[39,42,44,42,41,43,0,39],
[44,42,39,41,44,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,47,37,46,45,43,41],
[39,0,48,45,49,45,45,42],
[34,33,0,34,39,40,30,40],
[44,36,47,0,45,38,46,44],
[35,32,42,36,0,35,35,35],
[36,36,41,43,46,0,40,41],
[38,36,51,35,46,41,0,39],
[40,39,41,37,46,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,20,22,36,39,42],
[53,0,50,33,42,50,48,49],
[51,31,0,25,24,47,48,40],
[61,48,56,0,32,42,56,47],
[59,39,57,49,0,50,52,54],
[45,31,34,39,31,0,50,41],
[42,33,33,25,29,31,0,25],
[39,32,41,34,27,40,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,41,37,33,42,35],
[36,0,43,39,41,35,42,42],
[42,38,0,37,34,32,39,31],
[40,42,44,0,40,36,46,42],
[44,40,47,41,0,44,40,37],
[48,46,49,45,37,0,45,37],
[39,39,42,35,41,36,0,39],
[46,39,50,39,44,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,43,41,45,49,37,51],
[32,0,33,42,38,45,26,40],
[38,48,0,43,44,51,42,52],
[40,39,38,0,37,42,35,37],
[36,43,37,44,0,38,36,48],
[32,36,30,39,43,0,26,49],
[44,55,39,46,45,55,0,52],
[30,41,29,44,33,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,48,38,45,42,45],
[42,0,49,53,53,49,48,40],
[37,32,0,40,43,31,36,41],
[33,28,41,0,37,38,38,40],
[43,28,38,44,0,37,41,36],
[36,32,50,43,44,0,37,42],
[39,33,45,43,40,44,0,43],
[36,41,40,41,45,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,35,42,39,34,37],
[44,0,42,37,44,41,40,42],
[42,39,0,40,42,39,39,44],
[46,44,41,0,41,40,42,41],
[39,37,39,40,0,38,33,35],
[42,40,42,41,43,0,44,38],
[47,41,42,39,48,37,0,43],
[44,39,37,40,46,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,50,42,34,52,48],
[38,0,40,46,45,47,49,44],
[40,41,0,47,43,52,44,43],
[31,35,34,0,35,31,45,41],
[39,36,38,46,0,43,49,38],
[47,34,29,50,38,0,51,51],
[29,32,37,36,32,30,0,32],
[33,37,38,40,43,30,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,35,39,47,43,49,40],
[38,0,37,38,43,41,44,42],
[46,44,0,47,47,43,40,52],
[42,43,34,0,36,45,42,46],
[34,38,34,45,0,39,42,44],
[38,40,38,36,42,0,39,38],
[32,37,41,39,39,42,0,45],
[41,39,29,35,37,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,51,50,46,46,41,37],
[41,0,51,56,46,40,48,45],
[30,30,0,44,41,30,33,36],
[31,25,37,0,35,34,33,39],
[35,35,40,46,0,41,36,38],
[35,41,51,47,40,0,35,42],
[40,33,48,48,45,46,0,48],
[44,36,45,42,43,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,54,49,43,46,38,42],
[31,0,33,25,17,46,26,39],
[27,48,0,33,26,34,37,35],
[32,56,48,0,34,39,33,53],
[38,64,55,47,0,49,50,58],
[35,35,47,42,32,0,27,51],
[43,55,44,48,31,54,0,49],
[39,42,46,28,23,30,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,36,40,37,39,41],
[35,0,38,32,36,32,38,41],
[34,43,0,42,42,44,39,36],
[45,49,39,0,51,44,46,53],
[41,45,39,30,0,43,39,39],
[44,49,37,37,38,0,41,41],
[42,43,42,35,42,40,0,37],
[40,40,45,28,42,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,39,47,41,44,42],
[40,0,39,35,44,40,46,35],
[41,42,0,39,43,48,46,40],
[42,46,42,0,39,40,47,38],
[34,37,38,42,0,33,37,28],
[40,41,33,41,48,0,43,37],
[37,35,35,34,44,38,0,32],
[39,46,41,43,53,44,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,46,44,49,43,47],
[41,0,36,41,43,38,43,42],
[45,45,0,36,45,41,49,50],
[35,40,45,0,42,40,41,49],
[37,38,36,39,0,37,37,38],
[32,43,40,41,44,0,39,46],
[38,38,32,40,44,42,0,40],
[34,39,31,32,43,35,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,36,39,35,38,38],
[38,0,40,38,43,42,36,38],
[41,41,0,37,41,37,34,35],
[45,43,44,0,42,39,40,38],
[42,38,40,39,0,39,42,33],
[46,39,44,42,42,0,44,36],
[43,45,47,41,39,37,0,47],
[43,43,46,43,48,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,39,45,53,54,56],
[38,0,53,52,46,46,48,47],
[36,28,0,31,42,47,42,38],
[42,29,50,0,47,41,45,39],
[36,35,39,34,0,46,44,42],
[28,35,34,40,35,0,42,44],
[27,33,39,36,37,39,0,35],
[25,34,43,42,39,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,37,42,42,42,46],
[32,0,40,34,41,40,35,42],
[34,41,0,44,44,46,35,41],
[44,47,37,0,48,41,39,45],
[39,40,37,33,0,38,30,41],
[39,41,35,40,43,0,39,44],
[39,46,46,42,51,42,0,52],
[35,39,40,36,40,37,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,58,33,39,39,32,26],
[33,0,43,47,30,27,28,18],
[23,38,0,39,30,44,39,26],
[48,34,42,0,39,25,40,40],
[42,51,51,42,0,40,42,30],
[42,54,37,56,41,0,58,49],
[49,53,42,41,39,23,0,36],
[55,63,55,41,51,32,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,48,53,39,49,46],
[35,0,41,39,38,37,38,34],
[32,40,0,41,37,44,39,36],
[33,42,40,0,36,37,37,40],
[28,43,44,45,0,35,37,41],
[42,44,37,44,46,0,38,41],
[32,43,42,44,44,43,0,40],
[35,47,45,41,40,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,42,47,44,51,54,35],
[30,0,31,42,41,49,48,30],
[39,50,0,42,36,54,50,50],
[34,39,39,0,41,53,51,32],
[37,40,45,40,0,53,47,42],
[30,32,27,28,28,0,34,36],
[27,33,31,30,34,47,0,37],
[46,51,31,49,39,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,42,37,44,39,50],
[42,0,40,40,34,36,43,40],
[39,41,0,40,41,40,48,42],
[39,41,41,0,43,47,47,44],
[44,47,40,38,0,47,45,49],
[37,45,41,34,34,0,45,43],
[42,38,33,34,36,36,0,42],
[31,41,39,37,32,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,34,47,33,25,29],
[47,0,49,44,47,41,41,40],
[47,32,0,30,25,43,30,33],
[47,37,51,0,50,44,47,41],
[34,34,56,31,0,49,29,42],
[48,40,38,37,32,0,35,40],
[56,40,51,34,52,46,0,49],
[52,41,48,40,39,41,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,43,41,40,45,36,39],
[49,0,43,44,45,51,36,43],
[38,38,0,38,41,47,39,33],
[40,37,43,0,43,46,41,42],
[41,36,40,38,0,46,41,34],
[36,30,34,35,35,0,24,37],
[45,45,42,40,40,57,0,46],
[42,38,48,39,47,44,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,53,40,59,62,45,47],
[21,0,36,23,19,29,23,15],
[28,45,0,39,46,44,37,45],
[41,58,42,0,52,51,60,40],
[22,62,35,29,0,43,30,30],
[19,52,37,30,38,0,26,43],
[36,58,44,21,51,55,0,42],
[34,66,36,41,51,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,14,29,38,21,26,11,33],
[67,0,60,52,38,39,54,41],
[52,21,0,38,30,25,28,32],
[43,29,43,0,33,31,31,26],
[60,43,51,48,0,43,40,40],
[55,42,56,50,38,0,27,39],
[70,27,53,50,41,54,0,44],
[48,40,49,55,41,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,42,44,47,50,43,39],
[21,0,31,32,36,34,30,30],
[39,50,0,38,32,47,38,43],
[37,49,43,0,49,51,42,44],
[34,45,49,32,0,44,40,41],
[31,47,34,30,37,0,30,37],
[38,51,43,39,41,51,0,39],
[42,51,38,37,40,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,47,44,43,44,40],
[39,0,43,42,41,49,51,37],
[43,38,0,35,41,36,43,33],
[34,39,46,0,34,42,37,48],
[37,40,40,47,0,40,44,30],
[38,32,45,39,41,0,44,47],
[37,30,38,44,37,37,0,36],
[41,44,48,33,51,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,47,45,38,35,42],
[34,0,35,42,31,47,38,39],
[34,46,0,44,35,43,43,34],
[34,39,37,0,32,42,37,31],
[36,50,46,49,0,48,41,37],
[43,34,38,39,33,0,38,37],
[46,43,38,44,40,43,0,41],
[39,42,47,50,44,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,35,53,35,40,40,34],
[36,0,33,56,34,37,32,36],
[46,48,0,56,39,39,43,39],
[28,25,25,0,27,23,28,25],
[46,47,42,54,0,37,38,46],
[41,44,42,58,44,0,38,41],
[41,49,38,53,43,43,0,42],
[47,45,42,56,35,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,38,42,44,38,42],
[44,0,52,40,47,52,35,46],
[39,29,0,48,46,45,43,39],
[43,41,33,0,38,49,47,49],
[39,34,35,43,0,37,39,38],
[37,29,36,32,44,0,30,44],
[43,46,38,34,42,51,0,36],
[39,35,42,32,43,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,42,33,33,40,56],
[42,0,44,38,51,42,46,50],
[42,37,0,37,43,34,34,57],
[39,43,44,0,48,41,45,59],
[48,30,38,33,0,37,35,44],
[48,39,47,40,44,0,46,56],
[41,35,47,36,46,35,0,48],
[25,31,24,22,37,25,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,26,27,34,36,41,21],
[27,0,11,39,39,41,27,27],
[55,70,0,44,44,46,44,33],
[54,42,37,0,34,29,40,29],
[47,42,37,47,0,38,40,39],
[45,40,35,52,43,0,31,32],
[40,54,37,41,41,50,0,46],
[60,54,48,52,42,49,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,27,23,37,35,30,35],
[64,0,29,30,48,54,46,43],
[54,52,0,50,47,50,40,53],
[58,51,31,0,48,60,44,54],
[44,33,34,33,0,29,33,47],
[46,27,31,21,52,0,39,42],
[51,35,41,37,48,42,0,39],
[46,38,28,27,34,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,60,67,56,40,48],
[27,0,39,34,40,38,35,31],
[20,42,0,35,40,34,28,36],
[21,47,46,0,45,42,32,38],
[14,41,41,36,0,37,31,39],
[25,43,47,39,44,0,31,28],
[41,46,53,49,50,50,0,40],
[33,50,45,43,42,53,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,77,66,51,66,45,45],
[41,0,55,57,38,47,24,77],
[4,26,0,26,41,21,18,46],
[15,24,55,0,15,22,19,51],
[30,43,40,66,0,47,44,63],
[15,34,60,59,34,0,38,33],
[36,57,63,62,37,43,0,76],
[36,4,35,30,18,48,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,39,37,40,46,45,44],
[32,0,33,42,38,41,35,37],
[42,48,0,49,41,39,52,36],
[44,39,32,0,39,48,41,33],
[41,43,40,42,0,41,40,41],
[35,40,42,33,40,0,46,39],
[36,46,29,40,41,35,0,41],
[37,44,45,48,40,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,52,45,34,37,41,47],
[38,0,38,49,37,37,46,39],
[29,43,0,45,36,35,29,33],
[36,32,36,0,28,40,34,37],
[47,44,45,53,0,47,43,37],
[44,44,46,41,34,0,49,41],
[40,35,52,47,38,32,0,39],
[34,42,48,44,44,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,32,44,42,42,46,28],
[39,0,34,41,45,38,39,29],
[49,47,0,56,53,45,45,39],
[37,40,25,0,34,39,39,30],
[39,36,28,47,0,41,38,45],
[39,43,36,42,40,0,35,38],
[35,42,36,42,43,46,0,29],
[53,52,42,51,36,43,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,42,44,47,55,48,36],
[30,0,36,33,29,38,28,36],
[39,45,0,49,42,40,43,40],
[37,48,32,0,39,40,44,39],
[34,52,39,42,0,42,39,37],
[26,43,41,41,39,0,43,44],
[33,53,38,37,42,38,0,38],
[45,45,41,42,44,37,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,42,52,32,50,36,42],
[21,0,25,42,16,26,26,36],
[39,56,0,41,34,52,30,48],
[29,39,40,0,39,38,46,35],
[49,65,47,42,0,38,45,38],
[31,55,29,43,43,0,36,28],
[45,55,51,35,36,45,0,64],
[39,45,33,46,43,53,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,55,43,47,55,51,41],
[42,0,54,46,42,45,48,39],
[26,27,0,35,29,34,33,26],
[38,35,46,0,38,34,38,29],
[34,39,52,43,0,54,36,29],
[26,36,47,47,27,0,38,26],
[30,33,48,43,45,43,0,39],
[40,42,55,52,52,55,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,38,40,43,37,39],
[46,0,37,47,45,42,43,45],
[46,44,0,48,36,48,41,40],
[43,34,33,0,32,38,36,37],
[41,36,45,49,0,39,45,48],
[38,39,33,43,42,0,44,40],
[44,38,40,45,36,37,0,44],
[42,36,41,44,33,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,44,41,40,35,49],
[47,0,43,49,36,47,41,38],
[41,38,0,52,37,52,44,50],
[37,32,29,0,32,41,36,23],
[40,45,44,49,0,48,44,44],
[41,34,29,40,33,0,35,38],
[46,40,37,45,37,46,0,42],
[32,43,31,58,37,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,49,38,47,52,33],
[27,0,29,25,31,46,37,36],
[28,52,0,26,45,58,48,38],
[32,56,55,0,41,48,54,35],
[43,50,36,40,0,27,40,48],
[34,35,23,33,54,0,41,29],
[29,44,33,27,41,40,0,26],
[48,45,43,46,33,52,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,30,51,42,67,55],
[38,0,39,35,45,45,61,53],
[43,42,0,32,46,35,68,55],
[51,46,49,0,55,33,60,49],
[30,36,35,26,0,30,67,37],
[39,36,46,48,51,0,58,49],
[14,20,13,21,14,23,0,32],
[26,28,26,32,44,32,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,38,42,46,47,48],
[34,0,43,37,40,37,43,33],
[32,38,0,39,36,34,38,39],
[43,44,42,0,43,41,43,40],
[39,41,45,38,0,42,41,39],
[35,44,47,40,39,0,43,39],
[34,38,43,38,40,38,0,38],
[33,48,42,41,42,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,42,46,32,35,36],
[37,0,39,34,46,36,41,44],
[40,42,0,36,48,35,40,38],
[39,47,45,0,51,36,40,43],
[35,35,33,30,0,36,37,33],
[49,45,46,45,45,0,44,37],
[46,40,41,41,44,37,0,42],
[45,37,43,38,48,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,32,53,52,36,49],
[50,0,38,44,45,51,46,48],
[44,43,0,35,53,59,38,53],
[49,37,46,0,51,47,59,57],
[28,36,28,30,0,37,38,48],
[29,30,22,34,44,0,37,42],
[45,35,43,22,43,44,0,51],
[32,33,28,24,33,39,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,52,43,43,40,49,52],
[32,0,41,40,43,28,34,50],
[29,40,0,30,42,28,43,45],
[38,41,51,0,44,38,42,53],
[38,38,39,37,0,35,39,44],
[41,53,53,43,46,0,40,57],
[32,47,38,39,42,41,0,44],
[29,31,36,28,37,24,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,45,29,37,44,27,32],
[48,0,59,34,38,42,43,39],
[36,22,0,25,35,39,31,28],
[52,47,56,0,39,52,38,46],
[44,43,46,42,0,47,31,41],
[37,39,42,29,34,0,32,35],
[54,38,50,43,50,49,0,50],
[49,42,53,35,40,46,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,58,42,43,46,51,57],
[41,0,47,43,31,50,61,45],
[23,34,0,28,14,30,53,52],
[39,38,53,0,25,41,60,47],
[38,50,67,56,0,61,74,54],
[35,31,51,40,20,0,58,49],
[30,20,28,21,7,23,0,32],
[24,36,29,34,27,32,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,37,36,58,29,63,49],
[33,0,18,61,45,27,46,30],
[44,63,0,49,40,57,48,48],
[45,20,32,0,60,39,47,35],
[23,36,41,21,0,30,21,34],
[52,54,24,42,51,0,69,48],
[18,35,33,34,60,12,0,34],
[32,51,33,46,47,33,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,41,40,32,30,46],
[47,0,50,46,35,38,43,47],
[41,31,0,27,32,32,27,41],
[40,35,54,0,43,42,44,45],
[41,46,49,38,0,42,28,41],
[49,43,49,39,39,0,42,45],
[51,38,54,37,53,39,0,46],
[35,34,40,36,40,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,48,67,61,38,46,54],
[25,0,35,47,57,24,29,38],
[33,46,0,60,54,43,37,55],
[14,34,21,0,35,19,31,43],
[20,24,27,46,0,23,28,26],
[43,57,38,62,58,0,47,39],
[35,52,44,50,53,34,0,52],
[27,43,26,38,55,42,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,26,35,49,40,42,37],
[47,0,31,35,57,33,37,39],
[55,50,0,49,66,34,44,43],
[46,46,32,0,53,45,36,49],
[32,24,15,28,0,21,29,36],
[41,48,47,36,60,0,48,47],
[39,44,37,45,52,33,0,41],
[44,42,38,32,45,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,32,40,31,41,45],
[51,0,43,39,53,54,42,55],
[49,38,0,37,48,40,42,45],
[49,42,44,0,52,45,39,49],
[41,28,33,29,0,37,34,45],
[50,27,41,36,44,0,38,39],
[40,39,39,42,47,43,0,45],
[36,26,36,32,36,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,43,49,44,43,43],
[43,0,41,47,49,44,38,48],
[43,40,0,52,53,46,51,51],
[38,34,29,0,33,41,33,34],
[32,32,28,48,0,37,42,33],
[37,37,35,40,44,0,38,43],
[38,43,30,48,39,43,0,42],
[38,33,30,47,48,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,40,40,48,41,38],
[44,0,39,42,35,57,38,35],
[37,42,0,44,36,49,45,40],
[41,39,37,0,33,50,36,31],
[41,46,45,48,0,50,48,35],
[33,24,32,31,31,0,28,27],
[40,43,36,45,33,53,0,47],
[43,46,41,50,46,54,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,47,35,50,43,39,47],
[24,0,42,19,59,31,35,29],
[34,39,0,37,43,38,50,27],
[46,62,44,0,48,48,39,43],
[31,22,38,33,0,32,34,31],
[38,50,43,33,49,0,41,33],
[42,46,31,42,47,40,0,33],
[34,52,54,38,50,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,43,50,50,43,41],
[44,0,41,48,48,44,43,37],
[35,40,0,48,44,46,48,42],
[38,33,33,0,45,33,41,38],
[31,33,37,36,0,39,46,40],
[31,37,35,48,42,0,49,39],
[38,38,33,40,35,32,0,32],
[40,44,39,43,41,42,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,39,39,25,44,43,33],
[24,0,21,24,16,34,32,32],
[42,60,0,41,41,44,43,37],
[42,57,40,0,38,49,50,43],
[56,65,40,43,0,41,49,49],
[37,47,37,32,40,0,44,35],
[38,49,38,31,32,37,0,37],
[48,49,44,38,32,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,53,45,40,50,50,41],
[30,0,39,36,34,35,46,32],
[28,42,0,40,27,44,43,39],
[36,45,41,0,36,35,48,31],
[41,47,54,45,0,52,55,40],
[31,46,37,46,29,0,44,35],
[31,35,38,33,26,37,0,41],
[40,49,42,50,41,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,39,46,41,27,42],
[34,0,37,32,36,42,34,35],
[38,44,0,31,45,41,38,38],
[42,49,50,0,45,52,31,36],
[35,45,36,36,0,41,34,34],
[40,39,40,29,40,0,43,40],
[54,47,43,50,47,38,0,36],
[39,46,43,45,47,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,37,47,50,41,49],
[41,0,36,41,35,57,48,50],
[35,45,0,35,37,38,51,37],
[44,40,46,0,52,56,48,52],
[34,46,44,29,0,55,51,44],
[31,24,43,25,26,0,39,42],
[40,33,30,33,30,42,0,43],
[32,31,44,29,37,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,38,38,42,41,42],
[34,0,31,36,42,38,41,37],
[42,50,0,43,45,36,45,38],
[43,45,38,0,37,40,49,35],
[43,39,36,44,0,43,45,37],
[39,43,45,41,38,0,41,45],
[40,40,36,32,36,40,0,36],
[39,44,43,46,44,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,34,42,32,40,33,34],
[41,0,38,50,41,35,44,45],
[47,43,0,48,35,33,46,35],
[39,31,33,0,42,36,32,31],
[49,40,46,39,0,32,43,30],
[41,46,48,45,49,0,48,40],
[48,37,35,49,38,33,0,39],
[47,36,46,50,51,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,47,46,50,45,43,39],
[45,0,41,38,40,51,37,42],
[34,40,0,42,47,44,31,44],
[35,43,39,0,43,41,40,38],
[31,41,34,38,0,36,35,31],
[36,30,37,40,45,0,34,36],
[38,44,50,41,46,47,0,47],
[42,39,37,43,50,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,40,38,38,35,40],
[45,0,44,46,40,39,44,42],
[40,37,0,37,40,40,45,32],
[41,35,44,0,38,34,40,42],
[43,41,41,43,0,37,45,39],
[43,42,41,47,44,0,41,40],
[46,37,36,41,36,40,0,40],
[41,39,49,39,42,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,38,39,38,34,39],
[45,0,49,37,42,41,41,44],
[42,32,0,36,35,37,34,34],
[43,44,45,0,43,43,43,39],
[42,39,46,38,0,42,39,38],
[43,40,44,38,39,0,40,39],
[47,40,47,38,42,41,0,40],
[42,37,47,42,43,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,35,45,31,39,31],
[44,0,38,53,55,49,49,41],
[48,43,0,45,53,48,54,37],
[46,28,36,0,35,36,33,32],
[36,26,28,46,0,36,38,30],
[50,32,33,45,45,0,46,31],
[42,32,27,48,43,35,0,32],
[50,40,44,49,51,50,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,44,25,45,33,37,15],
[56,0,38,36,47,44,48,38],
[37,43,0,41,53,58,45,32],
[56,45,40,0,40,33,36,38],
[36,34,28,41,0,48,36,25],
[48,37,23,48,33,0,36,48],
[44,33,36,45,45,45,0,36],
[66,43,49,43,56,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,33,48,32,47,43],
[36,0,31,26,39,28,34,41],
[43,50,0,41,48,31,39,38],
[48,55,40,0,46,37,43,37],
[33,42,33,35,0,28,30,24],
[49,53,50,44,53,0,35,39],
[34,47,42,38,51,46,0,39],
[38,40,43,44,57,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,39,45,41,46,39,35],
[32,0,40,35,33,38,34,37],
[42,41,0,34,36,44,28,39],
[36,46,47,0,46,56,46,43],
[40,48,45,35,0,51,41,45],
[35,43,37,25,30,0,42,36],
[42,47,53,35,40,39,0,37],
[46,44,42,38,36,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,30,20,31,23,35,32],
[56,0,45,50,32,48,37,56],
[51,36,0,31,33,37,26,37],
[61,31,50,0,50,49,42,48],
[50,49,48,31,0,42,54,44],
[58,33,44,32,39,0,36,38],
[46,44,55,39,27,45,0,43],
[49,25,44,33,37,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,31,29,26,34,32],
[44,0,39,34,30,42,35,39],
[44,42,0,37,29,36,34,36],
[50,47,44,0,32,38,49,43],
[52,51,52,49,0,45,49,39],
[55,39,45,43,36,0,47,40],
[47,46,47,32,32,34,0,35],
[49,42,45,38,42,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,34,45,28,39,28],
[42,0,45,41,41,43,34,40],
[33,36,0,46,46,31,40,31],
[47,40,35,0,45,33,31,44],
[36,40,35,36,0,22,30,34],
[53,38,50,48,59,0,51,40],
[42,47,41,50,51,30,0,42],
[53,41,50,37,47,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,37,36,37,36,48],
[38,0,40,41,29,39,28,37],
[42,41,0,44,39,38,41,44],
[44,40,37,0,35,44,31,43],
[45,52,42,46,0,45,37,40],
[44,42,43,37,36,0,38,42],
[45,53,40,50,44,43,0,47],
[33,44,37,38,41,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,41,21,41,21,41,41],
[60,0,81,20,60,20,41,20],
[40,0,0,0,0,0,41,20],
[60,61,81,0,60,20,41,40],
[40,21,81,21,0,21,41,41],
[60,61,81,61,60,0,61,40],
[40,40,40,40,40,20,0,60],
[40,61,61,41,40,41,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,27,60,51,29,32,37],
[47,0,43,53,58,38,39,46],
[54,38,0,54,45,40,47,39],
[21,28,27,0,44,22,29,37],
[30,23,36,37,0,45,45,30],
[52,43,41,59,36,0,45,37],
[49,42,34,52,36,36,0,37],
[44,35,42,44,51,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,38,31,40,35,37],
[41,0,32,39,38,36,38,36],
[45,49,0,47,40,46,39,39],
[43,42,34,0,40,41,35,40],
[50,43,41,41,0,42,44,38],
[41,45,35,40,39,0,40,37],
[46,43,42,46,37,41,0,42],
[44,45,42,41,43,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,39,40,43,41,42],
[39,0,48,36,37,44,39,36],
[36,33,0,31,38,35,29,36],
[42,45,50,0,46,42,42,39],
[41,44,43,35,0,41,46,36],
[38,37,46,39,40,0,41,36],
[40,42,52,39,35,40,0,42],
[39,45,45,42,45,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,45,38,40,31,29],
[41,0,36,44,44,53,41,41],
[39,45,0,45,37,38,41,38],
[36,37,36,0,39,39,41,40],
[43,37,44,42,0,43,37,44],
[41,28,43,42,38,0,35,43],
[50,40,40,40,44,46,0,34],
[52,40,43,41,37,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,51,38,45,35,42],
[44,0,43,45,41,34,41,41],
[32,38,0,33,41,36,31,34],
[30,36,48,0,22,36,33,36],
[43,40,40,59,0,53,39,44],
[36,47,45,45,28,0,32,36],
[46,40,50,48,42,49,0,43],
[39,40,47,45,37,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,26,28,53,26,28],
[81,0,55,54,28,81,53,28],
[81,26,0,26,28,81,53,28],
[55,27,55,0,55,55,27,55],
[53,53,53,26,0,53,53,53],
[28,0,0,26,28,0,0,28],
[55,28,28,54,28,81,0,28],
[53,53,53,26,28,53,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,33,36,39,49,45],
[38,0,38,37,34,41,49,45],
[48,43,0,40,32,45,44,51],
[48,44,41,0,48,42,40,44],
[45,47,49,33,0,41,50,51],
[42,40,36,39,40,0,46,46],
[32,32,37,41,31,35,0,43],
[36,36,30,37,30,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,36,30,37,32,37],
[49,0,37,43,37,52,45,43],
[44,44,0,37,34,32,36,35],
[45,38,44,0,45,48,45,37],
[51,44,47,36,0,43,40,41],
[44,29,49,33,38,0,34,40],
[49,36,45,36,41,47,0,32],
[44,38,46,44,40,41,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,45,42,54,36,32],
[35,0,27,36,29,51,40,29],
[44,54,0,39,38,53,38,43],
[36,45,42,0,32,53,49,44],
[39,52,43,49,0,54,45,42],
[27,30,28,28,27,0,33,22],
[45,41,43,32,36,48,0,35],
[49,52,38,37,39,59,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,38,37,47,37,38],
[37,0,35,42,39,44,33,35],
[42,46,0,43,45,39,42,41],
[43,39,38,0,36,39,35,36],
[44,42,36,45,0,47,34,38],
[34,37,42,42,34,0,37,35],
[44,48,39,46,47,44,0,46],
[43,46,40,45,43,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,41,42,49,42,42],
[41,0,41,41,43,36,43,36],
[36,40,0,47,44,44,37,41],
[40,40,34,0,42,41,36,37],
[39,38,37,39,0,37,40,42],
[32,45,37,40,44,0,38,42],
[39,38,44,45,41,43,0,44],
[39,45,40,44,39,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,35,30,43,35,34],
[51,0,41,40,44,44,46,27],
[52,40,0,36,45,48,38,39],
[46,41,45,0,37,44,45,45],
[51,37,36,44,0,56,46,36],
[38,37,33,37,25,0,37,37],
[46,35,43,36,35,44,0,30],
[47,54,42,36,45,44,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,45,41,40,44,41],
[36,0,42,39,34,33,39,31],
[43,39,0,41,36,33,46,34],
[36,42,40,0,42,30,42,29],
[40,47,45,39,0,27,42,26],
[41,48,48,51,54,0,39,35],
[37,42,35,39,39,42,0,33],
[40,50,47,52,55,46,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,49,40,24,29,36,51],
[48,0,45,47,32,45,46,49],
[32,36,0,32,20,26,30,45],
[41,34,49,0,31,29,46,51],
[57,49,61,50,0,35,48,44],
[52,36,55,52,46,0,44,57],
[45,35,51,35,33,37,0,43],
[30,32,36,30,37,24,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,21,9,31,29,19,40],
[81,0,62,49,52,39,39,60],
[60,19,0,49,41,29,29,39],
[72,32,32,0,52,51,61,51],
[50,29,40,29,0,39,29,60],
[52,42,52,30,42,0,51,41],
[62,42,52,20,52,30,0,61],
[41,21,42,30,21,40,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,21,33,45,35,47],
[23,0,45,10,23,45,23,35],
[12,36,0,22,23,57,24,25],
[60,71,59,0,36,35,60,60],
[48,58,58,45,0,45,35,48],
[36,36,24,46,36,0,36,36],
[46,58,57,21,46,45,0,35],
[34,46,56,21,33,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,40,39,35,41,39],
[43,0,37,37,35,36,41,41],
[37,44,0,40,43,39,48,45],
[41,44,41,0,39,46,45,49],
[42,46,38,42,0,40,46,44],
[46,45,42,35,41,0,47,45],
[40,40,33,36,35,34,0,39],
[42,40,36,32,37,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,38,47,43,47,36],
[41,0,50,44,45,44,43,37],
[44,31,0,38,44,36,39,35],
[43,37,43,0,46,39,43,43],
[34,36,37,35,0,35,29,32],
[38,37,45,42,46,0,39,37],
[34,38,42,38,52,42,0,32],
[45,44,46,38,49,44,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,42,44,42,47,38],
[43,0,49,46,41,38,40,35],
[38,32,0,37,44,41,39,37],
[39,35,44,0,47,46,51,33],
[37,40,37,34,0,34,41,35],
[39,43,40,35,47,0,38,43],
[34,41,42,30,40,43,0,41],
[43,46,44,48,46,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,23,33,36,44,38],
[43,0,31,34,43,35,42,40],
[44,50,0,34,34,41,40,45],
[58,47,47,0,51,42,41,38],
[48,38,47,30,0,33,42,43],
[45,46,40,39,48,0,46,37],
[37,39,41,40,39,35,0,39],
[43,41,36,43,38,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,25,45,32,32,45,57],
[42,0,15,49,37,23,47,51],
[56,66,0,51,40,47,52,56],
[36,32,30,0,30,20,43,41],
[49,44,41,51,0,39,52,42],
[49,58,34,61,42,0,62,54],
[36,34,29,38,29,19,0,38],
[24,30,25,40,39,27,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,44,56,42,39,48],
[36,0,35,39,41,40,36,43],
[38,46,0,36,47,35,40,46],
[37,42,45,0,45,38,30,54],
[25,40,34,36,0,32,47,46],
[39,41,46,43,49,0,44,42],
[42,45,41,51,34,37,0,45],
[33,38,35,27,35,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,44,56,31,30,42,32],
[19,0,32,44,43,42,30,32],
[37,49,0,49,36,42,49,44],
[25,37,32,0,44,32,55,32],
[50,38,45,37,0,31,32,31],
[51,39,39,49,50,0,37,39],
[39,51,32,26,49,44,0,44],
[49,49,37,49,50,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,36,34,36,31,37],
[52,0,41,51,39,40,50,43],
[50,40,0,50,44,40,53,36],
[45,30,31,0,36,30,37,30],
[47,42,37,45,0,41,32,40],
[45,41,41,51,40,0,45,38],
[50,31,28,44,49,36,0,37],
[44,38,45,51,41,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,26,35,34,37,30],
[45,0,38,36,43,43,40,33],
[45,43,0,34,42,43,42,43],
[55,45,47,0,42,42,48,38],
[46,38,39,39,0,48,42,36],
[47,38,38,39,33,0,44,35],
[44,41,39,33,39,37,0,36],
[51,48,38,43,45,46,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,37,38,41,41,34],
[42,0,41,32,36,36,42,43],
[44,40,0,39,41,40,44,32],
[44,49,42,0,40,34,41,40],
[43,45,40,41,0,38,46,37],
[40,45,41,47,43,0,52,38],
[40,39,37,40,35,29,0,31],
[47,38,49,41,44,43,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,37,33,42,38,39],
[41,0,47,45,36,29,33,30],
[38,34,0,45,41,34,37,35],
[44,36,36,0,41,32,33,33],
[48,45,40,40,0,37,32,42],
[39,52,47,49,44,0,36,41],
[43,48,44,48,49,45,0,38],
[42,51,46,48,39,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,43,37,53,39,46],
[35,0,31,35,30,43,41,37],
[39,50,0,43,51,57,41,38],
[38,46,38,0,38,48,39,34],
[44,51,30,43,0,41,35,40],
[28,38,24,33,40,0,31,38],
[42,40,40,42,46,50,0,43],
[35,44,43,47,41,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,46,44,45,53,38],
[44,0,46,37,43,44,43,36],
[37,35,0,36,44,48,46,46],
[35,44,45,0,41,46,43,44],
[37,38,37,40,0,36,46,35],
[36,37,33,35,45,0,42,32],
[28,38,35,38,35,39,0,38],
[43,45,35,37,46,49,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,41,47,44,45,43],
[42,0,42,37,42,38,44,43],
[40,39,0,46,39,44,42,41],
[40,44,35,0,49,39,39,37],
[34,39,42,32,0,39,30,33],
[37,43,37,42,42,0,35,44],
[36,37,39,42,51,46,0,41],
[38,38,40,44,48,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,31,45,38,34,31],
[41,0,36,37,51,31,37,40],
[43,45,0,44,51,31,42,35],
[50,44,37,0,45,34,38,44],
[36,30,30,36,0,25,26,26],
[43,50,50,47,56,0,44,40],
[47,44,39,43,55,37,0,37],
[50,41,46,37,55,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,36,45,39,50,35],
[36,0,26,33,44,33,34,27],
[38,55,0,38,49,43,49,41],
[45,48,43,0,49,39,50,34],
[36,37,32,32,0,40,43,38],
[42,48,38,42,41,0,39,42],
[31,47,32,31,38,42,0,26],
[46,54,40,47,43,39,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,29,32,30,40,29],
[54,0,38,50,30,30,29,29],
[49,43,0,48,37,43,38,39],
[52,31,33,0,27,34,32,39],
[49,51,44,54,0,30,57,50],
[51,51,38,47,51,0,52,63],
[41,52,43,49,24,29,0,33],
[52,52,42,42,31,18,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,34,36,40,41,43,49],
[34,0,30,30,40,39,37,33],
[47,51,0,47,47,36,58,48],
[45,51,34,0,47,42,49,40],
[41,41,34,34,0,46,36,39],
[40,42,45,39,35,0,46,40],
[38,44,23,32,45,35,0,45],
[32,48,33,41,42,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,36,64,45,54,44,60],
[40,0,44,52,37,55,49,57],
[45,37,0,63,46,60,50,57],
[17,29,18,0,35,47,35,29],
[36,44,35,46,0,56,36,54],
[27,26,21,34,25,0,39,36],
[37,32,31,46,45,42,0,35],
[21,24,24,52,27,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,38,35,42,36,33],
[40,0,44,37,40,41,35,35],
[39,37,0,36,40,42,30,35],
[43,44,45,0,37,43,43,40],
[46,41,41,44,0,39,36,31],
[39,40,39,38,42,0,30,34],
[45,46,51,38,45,51,0,43],
[48,46,46,41,50,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,43,34,44,51,45],
[46,0,40,47,40,43,43,49],
[43,41,0,45,42,40,41,46],
[38,34,36,0,36,42,39,38],
[47,41,39,45,0,41,45,43],
[37,38,41,39,40,0,40,39],
[30,38,40,42,36,41,0,43],
[36,32,35,43,38,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,52,43,47,46,46,52],
[42,0,42,38,47,37,47,41],
[29,39,0,39,44,35,46,37],
[38,43,42,0,38,45,49,39],
[34,34,37,43,0,34,33,30],
[35,44,46,36,47,0,54,45],
[35,34,35,32,48,27,0,40],
[29,40,44,42,51,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,47,42,26,32,26],
[44,0,33,48,45,30,44,30],
[38,48,0,61,47,40,37,41],
[34,33,20,0,30,15,28,24],
[39,36,34,51,0,37,36,25],
[55,51,41,66,44,0,49,33],
[49,37,44,53,45,32,0,34],
[55,51,40,57,56,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,22,42,23,28,45,33],
[33,0,41,33,33,19,43,34],
[59,40,0,35,33,38,53,35],
[39,48,46,0,38,39,41,46],
[58,48,48,43,0,48,58,38],
[53,62,43,42,33,0,51,41],
[36,38,28,40,23,30,0,29],
[48,47,46,35,43,40,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,48,43,26,51,39,31],
[44,0,45,44,41,44,39,44],
[33,36,0,35,37,46,33,23],
[38,37,46,0,34,55,38,27],
[55,40,44,47,0,62,49,41],
[30,37,35,26,19,0,29,32],
[42,42,48,43,32,52,0,35],
[50,37,58,54,40,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,33,35,32,39,32],
[38,0,33,22,27,29,40,29],
[43,48,0,28,28,34,33,36],
[48,59,53,0,41,47,60,39],
[46,54,53,40,0,40,51,39],
[49,52,47,34,41,0,49,43],
[42,41,48,21,30,32,0,34],
[49,52,45,42,42,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,35,51,47,42,49],
[36,0,45,42,48,51,48,49],
[41,36,0,29,37,45,43,45],
[46,39,52,0,51,51,47,48],
[30,33,44,30,0,40,35,38],
[34,30,36,30,41,0,34,42],
[39,33,38,34,46,47,0,42],
[32,32,36,33,43,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,36,52,22,45,37],
[42,0,29,35,43,28,44,43],
[50,52,0,43,51,51,60,35],
[45,46,38,0,45,37,59,45],
[29,38,30,36,0,44,60,43],
[59,53,30,44,37,0,52,44],
[36,37,21,22,21,29,0,29],
[44,38,46,36,38,37,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,50,52,39,47,48,45],
[39,0,42,39,49,43,40,39],
[31,39,0,40,37,40,40,34],
[29,42,41,0,37,41,33,36],
[42,32,44,44,0,43,43,39],
[34,38,41,40,38,0,38,42],
[33,41,41,48,38,43,0,38],
[36,42,47,45,42,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,40,28,32,31,33],
[58,0,42,46,53,40,50,50],
[58,39,0,50,47,44,47,46],
[41,35,31,0,33,29,23,36],
[53,28,34,48,0,46,33,46],
[49,41,37,52,35,0,38,43],
[50,31,34,58,48,43,0,49],
[48,31,35,45,35,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,36,41,43,37,41],
[36,0,38,41,42,39,42,32],
[37,43,0,38,40,44,42,43],
[45,40,43,0,41,40,40,41],
[40,39,41,40,0,40,44,44],
[38,42,37,41,41,0,41,38],
[44,39,39,41,37,40,0,42],
[40,49,38,40,37,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,45,42,40,36,48],
[40,0,40,47,41,36,37,33],
[33,41,0,44,38,33,35,26],
[36,34,37,0,37,39,31,44],
[39,40,43,44,0,45,37,43],
[41,45,48,42,36,0,44,42],
[45,44,46,50,44,37,0,42],
[33,48,55,37,38,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,43,40,33,41,40],
[42,0,44,45,47,41,40,41],
[39,37,0,43,37,41,38,41],
[38,36,38,0,39,41,41,41],
[41,34,44,42,0,45,44,42],
[48,40,40,40,36,0,44,44],
[40,41,43,40,37,37,0,43],
[41,40,40,40,39,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,30,36,32,34,32,35],
[47,0,32,43,41,38,42,40],
[51,49,0,38,42,34,41,52],
[45,38,43,0,41,41,43,38],
[49,40,39,40,0,36,43,45],
[47,43,47,40,45,0,44,50],
[49,39,40,38,38,37,0,42],
[46,41,29,43,36,31,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,38,37,33,25,25],
[44,0,45,48,51,45,40,45],
[43,36,0,49,46,46,41,43],
[43,33,32,0,43,42,47,35],
[44,30,35,38,0,44,39,36],
[48,36,35,39,37,0,32,38],
[56,41,40,34,42,49,0,48],
[56,36,38,46,45,43,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,46,48,46,42,39,46],
[30,0,39,35,33,37,41,39],
[35,42,0,50,47,42,42,31],
[33,46,31,0,45,37,40,27],
[35,48,34,36,0,35,38,27],
[39,44,39,44,46,0,40,40],
[42,40,39,41,43,41,0,31],
[35,42,50,54,54,41,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,36,46,41,33,40],
[37,0,39,33,56,32,45,40],
[38,42,0,33,38,30,36,38],
[45,48,48,0,49,40,48,48],
[35,25,43,32,0,31,40,40],
[40,49,51,41,50,0,40,43],
[48,36,45,33,41,41,0,43],
[41,41,43,33,41,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,36,42,46,48,47,39],
[25,0,42,37,39,41,33,41],
[45,39,0,39,38,44,44,37],
[39,44,42,0,46,50,41,52],
[35,42,43,35,0,42,45,41],
[33,40,37,31,39,0,35,44],
[34,48,37,40,36,46,0,42],
[42,40,44,29,40,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,41,39,45,42,46],
[39,0,47,42,42,47,39,44],
[37,34,0,43,38,40,33,39],
[40,39,38,0,41,45,40,37],
[42,39,43,40,0,46,38,46],
[36,34,41,36,35,0,39,35],
[39,42,48,41,43,42,0,42],
[35,37,42,44,35,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,40,42,38,33,42],
[45,0,42,47,45,37,38,44],
[47,39,0,39,40,42,41,53],
[41,34,42,0,35,34,35,45],
[39,36,41,46,0,36,34,48],
[43,44,39,47,45,0,45,47],
[48,43,40,46,47,36,0,43],
[39,37,28,36,33,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,43,42,39,36,40],
[39,0,39,48,34,42,39,41],
[41,42,0,41,38,44,37,39],
[38,33,40,0,31,39,31,37],
[39,47,43,50,0,49,43,41],
[42,39,37,42,32,0,40,34],
[45,42,44,50,38,41,0,44],
[41,40,42,44,40,47,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,49,55,38,55,38],
[34,0,53,44,53,41,44,40],
[44,28,0,46,55,45,54,47],
[32,37,35,0,44,40,42,38],
[26,28,26,37,0,21,49,26],
[43,40,36,41,60,0,53,35],
[26,37,27,39,32,28,0,30],
[43,41,34,43,55,46,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,45,25,33,37,29],
[34,0,43,42,39,41,43,41],
[42,38,0,38,23,23,33,50],
[36,39,43,0,41,41,44,38],
[56,42,58,40,0,48,49,45],
[48,40,58,40,33,0,32,42],
[44,38,48,37,32,49,0,40],
[52,40,31,43,36,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,41,42,40,37,32],
[42,0,41,37,39,40,36,36],
[38,40,0,36,40,34,35,33],
[40,44,45,0,41,40,38,37],
[39,42,41,40,0,37,37,37],
[41,41,47,41,44,0,46,40],
[44,45,46,43,44,35,0,41],
[49,45,48,44,44,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,63,63,63,47,31,63],
[0,0,0,47,48,32,16,16],
[18,81,0,81,81,32,49,65],
[18,34,0,0,50,16,34,32],
[18,33,0,31,0,0,18,15],
[34,49,49,65,81,0,49,49],
[50,65,32,47,63,32,0,47],
[18,65,16,49,66,32,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,44,42,40,39,43],
[44,0,46,43,43,43,38,44],
[37,35,0,35,35,37,39,39],
[37,38,46,0,38,41,40,44],
[39,38,46,43,0,39,41,43],
[41,38,44,40,42,0,39,45],
[42,43,42,41,40,42,0,41],
[38,37,42,37,38,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,39,33,26,37,27,29],
[53,0,45,42,43,37,43,39],
[42,36,0,38,29,37,29,31],
[48,39,43,0,39,35,37,30],
[55,38,52,42,0,45,38,36],
[44,44,44,46,36,0,34,39],
[54,38,52,44,43,47,0,41],
[52,42,50,51,45,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,35,38,41,37,41,38],
[47,0,42,38,50,43,40,44],
[46,39,0,42,50,48,45,44],
[43,43,39,0,46,43,45,45],
[40,31,31,35,0,39,40,43],
[44,38,33,38,42,0,46,46],
[40,41,36,36,41,35,0,39],
[43,37,37,36,38,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,45,41,42,48,40],
[42,0,42,47,37,49,47,39],
[37,39,0,34,37,33,39,45],
[36,34,47,0,39,39,48,38],
[40,44,44,42,0,42,43,34],
[39,32,48,42,39,0,43,37],
[33,34,42,33,38,38,0,37],
[41,42,36,43,47,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,36,41,39,43,37],
[40,0,44,44,44,49,43,46],
[42,37,0,32,43,37,38,40],
[45,37,49,0,43,37,44,38],
[40,37,38,38,0,40,39,38],
[42,32,44,44,41,0,44,38],
[38,38,43,37,42,37,0,35],
[44,35,41,43,43,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,42,53,39,31,42],
[42,0,52,43,53,21,41,63],
[40,29,0,40,41,28,30,51],
[39,38,41,0,40,40,18,49],
[28,28,40,41,0,39,19,38],
[42,60,53,41,42,0,31,61],
[50,40,51,63,62,50,0,72],
[39,18,30,32,43,20,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,34,36,38,32,30],
[47,0,41,46,47,52,35,40],
[44,40,0,38,43,41,45,41],
[47,35,43,0,39,40,39,33],
[45,34,38,42,0,35,38,35],
[43,29,40,41,46,0,41,37],
[49,46,36,42,43,40,0,33],
[51,41,40,48,46,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,34,46,45,43,37],
[37,0,33,33,42,36,34,32],
[45,48,0,41,48,47,40,42],
[47,48,40,0,51,47,45,47],
[35,39,33,30,0,40,34,32],
[36,45,34,34,41,0,36,38],
[38,47,41,36,47,45,0,38],
[44,49,39,34,49,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,36,32,35,25,40],
[42,0,41,42,42,30,40,47],
[38,40,0,39,26,33,23,34],
[45,39,42,0,41,40,41,47],
[49,39,55,40,0,38,38,47],
[46,51,48,41,43,0,37,46],
[56,41,58,40,43,44,0,48],
[41,34,47,34,34,35,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,37,47,44,52,44],
[40,0,41,37,48,37,37,36],
[39,40,0,42,46,45,50,46],
[44,44,39,0,50,41,43,43],
[34,33,35,31,0,36,34,31],
[37,44,36,40,45,0,44,42],
[29,44,31,38,47,37,0,43],
[37,45,35,38,50,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,42,38,45,39,39],
[41,0,37,39,40,43,44,44],
[41,44,0,42,42,45,46,38],
[39,42,39,0,31,46,36,40],
[43,41,39,50,0,48,39,51],
[36,38,36,35,33,0,40,37],
[42,37,35,45,42,41,0,48],
[42,37,43,41,30,44,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,39,41,39,35,36],
[42,0,39,39,32,37,39,37],
[47,42,0,44,42,42,44,39],
[42,42,37,0,37,38,41,41],
[40,49,39,44,0,45,37,43],
[42,44,39,43,36,0,41,43],
[46,42,37,40,44,40,0,43],
[45,44,42,40,38,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,27,46,59,33,40,38],
[36,0,41,51,48,41,34,48],
[54,40,0,48,55,35,37,54],
[35,30,33,0,39,28,41,45],
[22,33,26,42,0,32,48,36],
[48,40,46,53,49,0,31,47],
[41,47,44,40,33,50,0,51],
[43,33,27,36,45,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,45,39,41,41,35],
[43,0,49,43,47,44,39,44],
[38,32,0,40,38,38,35,37],
[36,38,41,0,39,35,38,41],
[42,34,43,42,0,40,44,38],
[40,37,43,46,41,0,46,43],
[40,42,46,43,37,35,0,39],
[46,37,44,40,43,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,48,39,39,43,47],
[40,0,45,44,45,40,42,46],
[39,36,0,41,38,28,37,35],
[33,37,40,0,38,39,39,42],
[42,36,43,43,0,38,40,42],
[42,41,53,42,43,0,42,37],
[38,39,44,42,41,39,0,42],
[34,35,46,39,39,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,41,35,46,47,45],
[39,0,37,33,38,44,44,44],
[39,44,0,35,36,42,44,45],
[40,48,46,0,36,41,48,42],
[46,43,45,45,0,45,49,39],
[35,37,39,40,36,0,37,40],
[34,37,37,33,32,44,0,39],
[36,37,36,39,42,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,47,40,35,34,39],
[45,0,37,47,38,39,42,39],
[42,44,0,38,41,49,33,50],
[34,34,43,0,37,43,40,41],
[41,43,40,44,0,46,31,44],
[46,42,32,38,35,0,30,38],
[47,39,48,41,50,51,0,52],
[42,42,31,40,37,43,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,48,32,47,36,34],
[45,0,45,54,35,50,46,43],
[47,36,0,49,42,46,37,40],
[33,27,32,0,23,36,33,33],
[49,46,39,58,0,46,43,27],
[34,31,35,45,35,0,36,24],
[45,35,44,48,38,45,0,46],
[47,38,41,48,54,57,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,34,33,36,28,38,38],
[39,0,33,35,39,32,42,38],
[47,48,0,40,39,37,39,39],
[48,46,41,0,45,38,42,42],
[45,42,42,36,0,41,43,34],
[53,49,44,43,40,0,43,47],
[43,39,42,39,38,38,0,42],
[43,43,42,39,47,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,29,43,38,43,42,25],
[48,0,43,49,50,53,34,38],
[52,38,0,46,52,49,35,52],
[38,32,35,0,49,42,31,46],
[43,31,29,32,0,41,29,48],
[38,28,32,39,40,0,40,27],
[39,47,46,50,52,41,0,39],
[56,43,29,35,33,54,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,31,54,41,44,44,49],
[43,0,45,51,40,46,52,43],
[50,36,0,51,41,51,37,40],
[27,30,30,0,24,42,36,31],
[40,41,40,57,0,41,40,38],
[37,35,30,39,40,0,40,35],
[37,29,44,45,41,41,0,34],
[32,38,41,50,43,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,49,48,34,44,42,34],
[38,0,49,42,47,43,44,52],
[32,32,0,30,29,20,33,42],
[33,39,51,0,27,37,29,40],
[47,34,52,54,0,40,44,54],
[37,38,61,44,41,0,46,51],
[39,37,48,52,37,35,0,38],
[47,29,39,41,27,30,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,44,44,39,39,52,35],
[12,0,23,15,13,25,23,25],
[37,58,0,30,25,46,53,26],
[37,66,51,0,46,50,40,26],
[42,68,56,35,0,43,46,46],
[42,56,35,31,38,0,40,36],
[29,58,28,41,35,41,0,29],
[46,56,55,55,35,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,43,42,43,42,42],
[34,0,33,43,38,34,36,39],
[41,48,0,40,47,42,44,39],
[38,38,41,0,37,34,34,38],
[39,43,34,44,0,39,36,41],
[38,47,39,47,42,0,35,39],
[39,45,37,47,45,46,0,38],
[39,42,42,43,40,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,33,29,40,26,38,39],
[41,0,44,34,45,36,42,41],
[48,37,0,38,50,38,37,39],
[52,47,43,0,43,35,38,51],
[41,36,31,38,0,35,33,44],
[55,45,43,46,46,0,36,38],
[43,39,44,43,48,45,0,56],
[42,40,42,30,37,43,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,33,40,34,37,45],
[42,0,39,41,39,47,28,48],
[47,42,0,43,37,44,38,47],
[48,40,38,0,43,50,42,51],
[41,42,44,38,0,41,45,43],
[47,34,37,31,40,0,40,43],
[44,53,43,39,36,41,0,60],
[36,33,34,30,38,38,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,58,63,47,39,57,62],
[40,0,54,49,36,48,55,67],
[23,27,0,25,37,30,42,40],
[18,32,56,0,37,36,69,48],
[34,45,44,44,0,33,57,47],
[42,33,51,45,48,0,49,61],
[24,26,39,12,24,32,0,43],
[19,14,41,33,34,20,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,46,44,37,49,39],
[37,0,43,46,52,50,44,47],
[35,38,0,42,38,42,39,38],
[35,35,39,0,40,41,36,36],
[37,29,43,41,0,40,38,42],
[44,31,39,40,41,0,39,35],
[32,37,42,45,43,42,0,42],
[42,34,43,45,39,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,39,39,39,39,38],
[45,0,42,47,42,49,42,39],
[50,39,0,50,46,49,43,48],
[42,34,31,0,39,39,35,38],
[42,39,35,42,0,45,34,36],
[42,32,32,42,36,0,37,37],
[42,39,38,46,47,44,0,40],
[43,42,33,43,45,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,34,47,31,44,37],
[37,0,40,36,41,31,49,39],
[47,41,0,45,45,38,50,39],
[47,45,36,0,50,39,47,46],
[34,40,36,31,0,35,35,30],
[50,50,43,42,46,0,52,39],
[37,32,31,34,46,29,0,33],
[44,42,42,35,51,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,38,30,31,33,26],
[46,0,44,36,45,42,45,40],
[40,37,0,31,45,32,39,29],
[43,45,50,0,43,29,37,38],
[51,36,36,38,0,34,35,36],
[50,39,49,52,47,0,40,54],
[48,36,42,44,46,41,0,35],
[55,41,52,43,45,27,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,32,41,39,36,39],
[49,0,49,31,52,42,40,39],
[44,32,0,27,45,34,25,38],
[49,50,54,0,54,37,51,53],
[40,29,36,27,0,31,35,37],
[42,39,47,44,50,0,32,37],
[45,41,56,30,46,49,0,46],
[42,42,43,28,44,44,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,48,39,46,47,51],
[32,0,42,40,40,45,34,42],
[34,39,0,34,41,39,34,40],
[33,41,47,0,38,43,38,45],
[42,41,40,43,0,44,45,40],
[35,36,42,38,37,0,36,41],
[34,47,47,43,36,45,0,48],
[30,39,41,36,41,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,32,30,39,24,31],
[50,0,38,37,35,41,34,29],
[54,43,0,40,51,50,38,41],
[49,44,41,0,42,46,33,38],
[51,46,30,39,0,49,34,38],
[42,40,31,35,32,0,27,33],
[57,47,43,48,47,54,0,39],
[50,52,40,43,43,48,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,71,48,26,71,60],
[33,0,59,60,47,35,70,48],
[34,22,0,60,35,47,60,60],
[10,21,21,0,21,23,57,59],
[33,34,46,60,0,36,70,38],
[55,46,34,58,45,0,68,47],
[10,11,21,24,11,13,0,26],
[21,33,21,22,43,34,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,34,36,33,49,40,43],
[52,0,41,42,40,54,49,42],
[47,40,0,33,37,42,47,37],
[45,39,48,0,46,52,39,39],
[48,41,44,35,0,49,42,46],
[32,27,39,29,32,0,36,25],
[41,32,34,42,39,45,0,36],
[38,39,44,42,35,56,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,49,41,53,45,41],
[44,0,35,51,39,48,36,37],
[47,46,0,54,48,51,40,49],
[32,30,27,0,36,43,36,29],
[40,42,33,45,0,43,38,38],
[28,33,30,38,38,0,34,28],
[36,45,41,45,43,47,0,38],
[40,44,32,52,43,53,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,40,32,25,30,38],
[45,0,37,41,47,33,45,49],
[46,44,0,44,48,32,47,44],
[41,40,37,0,50,32,33,52],
[49,34,33,31,0,41,42,55],
[56,48,49,49,40,0,46,48],
[51,36,34,48,39,35,0,46],
[43,32,37,29,26,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,47,39,40,35,43],
[42,0,31,43,38,37,42,37],
[42,50,0,54,39,45,40,38],
[34,38,27,0,40,36,32,29],
[42,43,42,41,0,43,44,37],
[41,44,36,45,38,0,39,34],
[46,39,41,49,37,42,0,39],
[38,44,43,52,44,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,81,42,39,60,40,60],
[19,0,60,40,39,60,40,40],
[0,21,0,21,20,41,21,21],
[39,41,60,0,39,60,40,60],
[42,42,61,42,0,42,61,21],
[21,21,40,21,39,0,61,21],
[41,41,60,41,20,20,0,41],
[21,41,60,21,60,60,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,36,34,37,31,43],
[38,0,44,28,35,37,37,39],
[40,37,0,36,26,32,29,39],
[45,53,45,0,41,47,37,47],
[47,46,55,40,0,50,42,48],
[44,44,49,34,31,0,34,43],
[50,44,52,44,39,47,0,48],
[38,42,42,34,33,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,44,47,39,34,43],
[39,0,40,44,41,37,36,45],
[39,41,0,42,41,41,34,47],
[37,37,39,0,41,34,40,43],
[34,40,40,40,0,35,34,44],
[42,44,40,47,46,0,42,48],
[47,45,47,41,47,39,0,49],
[38,36,34,38,37,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,33,40,31,40,37],
[45,0,45,42,43,35,44,45],
[42,36,0,40,43,36,38,40],
[48,39,41,0,45,40,37,42],
[41,38,38,36,0,30,34,34],
[50,46,45,41,51,0,38,42],
[41,37,43,44,47,43,0,44],
[44,36,41,39,47,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,49,39,31,30,46,30],
[38,0,41,39,33,31,30,35],
[32,40,0,29,34,41,50,39],
[42,42,52,0,36,40,43,38],
[50,48,47,45,0,32,52,40],
[51,50,40,41,49,0,48,52],
[35,51,31,38,29,33,0,40],
[51,46,42,43,41,29,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,35,28,46,35,44,36],
[38,0,26,19,37,45,26,27],
[46,55,0,46,55,46,27,55],
[53,62,35,0,46,54,53,52],
[35,44,26,35,0,44,34,35],
[46,36,35,27,37,0,45,36],
[37,55,54,28,47,36,0,37],
[45,54,26,29,46,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,47,27,35,34,34],
[47,0,36,50,41,38,37,42],
[43,45,0,56,35,45,29,44],
[34,31,25,0,26,34,26,29],
[54,40,46,55,0,55,52,44],
[46,43,36,47,26,0,42,46],
[47,44,52,55,29,39,0,45],
[47,39,37,52,37,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,40,39,38,47,53,49],
[27,0,35,36,30,23,37,36],
[41,46,0,44,42,40,36,45],
[42,45,37,0,36,40,34,44],
[43,51,39,45,0,52,37,44],
[34,58,41,41,29,0,38,39],
[28,44,45,47,44,43,0,41],
[32,45,36,37,37,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,32,64,66,31,64],
[17,0,33,32,31,66,33,17],
[17,48,0,49,31,49,33,49],
[49,49,32,0,32,49,49,66],
[17,50,50,49,0,66,33,34],
[15,15,32,32,15,0,31,32],
[50,48,48,32,48,50,0,48],
[17,64,32,15,47,49,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,41,43,36,37,42],
[44,0,41,47,42,41,37,42],
[43,40,0,42,44,41,37,43],
[40,34,39,0,36,35,32,35],
[38,39,37,45,0,44,36,39],
[45,40,40,46,37,0,38,36],
[44,44,44,49,45,43,0,35],
[39,39,38,46,42,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,44,44,39,51,42],
[36,0,42,41,42,42,43,35],
[36,39,0,44,46,37,43,37],
[37,40,37,0,36,38,37,32],
[37,39,35,45,0,35,38,38],
[42,39,44,43,46,0,47,44],
[30,38,38,44,43,34,0,39],
[39,46,44,49,43,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,35,45,38,34,42],
[38,0,43,40,50,44,44,42],
[37,38,0,39,47,39,39,31],
[46,41,42,0,47,41,38,44],
[36,31,34,34,0,40,39,37],
[43,37,42,40,41,0,43,46],
[47,37,42,43,42,38,0,45],
[39,39,50,37,44,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,28,28,10,19,28,18],
[53,0,27,44,27,45,27,25],
[53,54,0,44,35,55,35,43],
[53,37,37,0,19,19,27,35],
[71,54,46,62,0,45,36,62],
[62,36,26,62,36,0,35,35],
[53,54,46,54,45,46,0,35],
[63,56,38,46,19,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,39,35,36,41,40],
[41,0,33,34,31,37,35,39],
[41,48,0,34,39,36,38,44],
[42,47,47,0,46,37,35,39],
[46,50,42,35,0,42,40,43],
[45,44,45,44,39,0,43,46],
[40,46,43,46,41,38,0,46],
[41,42,37,42,38,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,50,34,36,53,39],
[44,0,37,50,43,54,46,50],
[40,44,0,43,34,45,58,46],
[31,31,38,0,38,46,38,45],
[47,38,47,43,0,46,46,49],
[45,27,36,35,35,0,46,33],
[28,35,23,43,35,35,0,38],
[42,31,35,36,32,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,33,39,43,36,45],
[39,0,45,34,39,38,38,43],
[42,36,0,36,45,44,45,48],
[48,47,45,0,47,40,45,44],
[42,42,36,34,0,44,42,43],
[38,43,37,41,37,0,43,45],
[45,43,36,36,39,38,0,42],
[36,38,33,37,38,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,29,41,41,31,38],
[47,0,40,42,43,33,37,42],
[35,41,0,33,39,46,33,32],
[52,39,48,0,54,45,48,46],
[40,38,42,27,0,38,34,40],
[40,48,35,36,43,0,30,34],
[50,44,48,33,47,51,0,42],
[43,39,49,35,41,47,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,42,36,45,36,45,43],
[30,0,44,30,35,37,38,39],
[39,37,0,41,38,36,41,38],
[45,51,40,0,39,35,39,40],
[36,46,43,42,0,40,45,44],
[45,44,45,46,41,0,40,45],
[36,43,40,42,36,41,0,36],
[38,42,43,41,37,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,30,37,45,54,38,17],
[64,0,47,47,72,55,47,26],
[51,34,0,35,43,62,54,43],
[44,34,46,0,45,55,47,34],
[36,9,38,36,0,38,38,35],
[27,26,19,26,43,0,37,26],
[43,34,27,34,43,44,0,34],
[64,55,38,47,46,55,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,40,44,45,41,42,43],
[54,0,48,37,43,45,45,45],
[41,33,0,38,47,41,45,49],
[37,44,43,0,50,45,41,47],
[36,38,34,31,0,39,41,43],
[40,36,40,36,42,0,42,48],
[39,36,36,40,40,39,0,36],
[38,36,32,34,38,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,39,42,42,40,40,43],
[28,0,35,35,31,42,32,40],
[42,46,0,41,40,40,47,37],
[39,46,40,0,42,42,42,52],
[39,50,41,39,0,40,43,44],
[41,39,41,39,41,0,40,41],
[41,49,34,39,38,41,0,55],
[38,41,44,29,37,40,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,17,23,44,33,45,29,35],
[64,0,39,58,58,64,42,64],
[58,42,0,39,57,40,46,58],
[37,23,42,0,45,52,29,34],
[48,23,24,36,0,54,28,42],
[36,17,41,29,27,0,21,39],
[52,39,35,52,53,60,0,47],
[46,17,23,47,39,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,34,33,43,25,27],
[45,0,37,54,44,71,45,55],
[36,44,0,45,36,43,17,54],
[47,27,36,0,36,44,17,26],
[48,37,45,45,0,52,34,47],
[38,10,38,37,29,0,25,29],
[56,36,64,64,47,56,0,56],
[54,26,27,55,34,52,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,41,41,46,48,51],
[44,0,47,49,39,33,46,48],
[46,34,0,42,40,35,44,47],
[40,32,39,0,45,39,41,48],
[40,42,41,36,0,34,41,54],
[35,48,46,42,47,0,57,47],
[33,35,37,40,40,24,0,46],
[30,33,34,33,27,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,34,32,45,33,32],
[41,0,46,35,37,52,37,36],
[34,35,0,35,37,39,42,40],
[47,46,46,0,31,45,40,41],
[49,44,44,50,0,52,42,40],
[36,29,42,36,29,0,33,30],
[48,44,39,41,39,48,0,42],
[49,45,41,40,41,51,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,39,46,39,54,52],
[42,0,39,43,44,48,44,44],
[31,42,0,30,37,43,51,33],
[42,38,51,0,52,51,56,56],
[35,37,44,29,0,43,54,43],
[42,33,38,30,38,0,39,38],
[27,37,30,25,27,42,0,29],
[29,37,48,25,38,43,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,47,45,43,43,53],
[46,0,39,52,39,43,38,40],
[41,42,0,39,42,51,45,40],
[34,29,42,0,37,53,25,44],
[36,42,39,44,0,52,36,44],
[38,38,30,28,29,0,21,28],
[38,43,36,56,45,60,0,43],
[28,41,41,37,37,53,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,37,41,43,41,39],
[35,0,41,39,33,40,39,39],
[36,40,0,41,39,37,39,40],
[44,42,40,0,42,45,41,42],
[40,48,42,39,0,41,44,43],
[38,41,44,36,40,0,46,39],
[40,42,42,40,37,35,0,41],
[42,42,41,39,38,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,34,46,41,43,36],
[39,0,45,40,41,40,47,43],
[44,36,0,41,40,39,48,35],
[47,41,40,0,40,47,46,39],
[35,40,41,41,0,41,49,39],
[40,41,42,34,40,0,46,45],
[38,34,33,35,32,35,0,35],
[45,38,46,42,42,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,56,62,49,55,37,46],
[40,0,45,50,36,34,39,45],
[25,36,0,51,56,40,41,46],
[19,31,30,0,41,44,20,31],
[32,45,25,40,0,32,27,33],
[26,47,41,37,49,0,32,32],
[44,42,40,61,54,49,0,44],
[35,36,35,50,48,49,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,50,41,48,44,38,43],
[47,0,39,55,61,60,53,64],
[31,42,0,42,58,27,45,48],
[40,26,39,0,42,43,33,51],
[33,20,23,39,0,28,33,39],
[37,21,54,38,53,0,52,54],
[43,28,36,48,48,29,0,35],
[38,17,33,30,42,27,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,52,47,42,41,42],
[39,0,43,46,48,49,34,54],
[44,38,0,43,51,45,38,48],
[29,35,38,0,42,45,31,48],
[34,33,30,39,0,42,28,38],
[39,32,36,36,39,0,23,35],
[40,47,43,50,53,58,0,56],
[39,27,33,33,43,46,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,43,38,44,47,45],
[36,0,36,43,35,41,48,42],
[39,45,0,45,42,45,45,46],
[38,38,36,0,39,39,40,40],
[43,46,39,42,0,46,44,42],
[37,40,36,42,35,0,43,41],
[34,33,36,41,37,38,0,40],
[36,39,35,41,39,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,45,42,40,48,45,41],
[47,0,40,45,36,45,42,40],
[36,41,0,31,34,45,38,43],
[39,36,50,0,36,42,41,37],
[41,45,47,45,0,48,40,44],
[33,36,36,39,33,0,38,43],
[36,39,43,40,41,43,0,45],
[40,41,38,44,37,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,46,43,43,31,49,41],
[24,0,41,26,27,33,31,20],
[35,40,0,23,32,36,39,20],
[38,55,58,0,46,38,45,44],
[38,54,49,35,0,38,46,37],
[50,48,45,43,43,0,43,36],
[32,50,42,36,35,38,0,34],
[40,61,61,37,44,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,35,41,43,37,39],
[49,0,44,45,44,40,49,53],
[48,37,0,37,35,41,37,38],
[46,36,44,0,36,41,41,40],
[40,37,46,45,0,36,38,37],
[38,41,40,40,45,0,51,42],
[44,32,44,40,43,30,0,40],
[42,28,43,41,44,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,47,44,42,37,42],
[39,0,46,42,43,39,38,36],
[38,35,0,40,38,37,36,27],
[34,39,41,0,42,39,31,37],
[37,38,43,39,0,35,37,32],
[39,42,44,42,46,0,42,36],
[44,43,45,50,44,39,0,34],
[39,45,54,44,49,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,52,39,42,38,40,41],
[46,0,53,41,39,39,42,48],
[29,28,0,26,38,30,36,30],
[42,40,55,0,44,40,39,40],
[39,42,43,37,0,35,46,41],
[43,42,51,41,46,0,44,37],
[41,39,45,42,35,37,0,44],
[40,33,51,41,40,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,29,43,36,34,52,35],
[55,0,48,41,46,38,53,46],
[52,33,0,46,46,50,59,45],
[38,40,35,0,45,32,47,42],
[45,35,35,36,0,45,50,45],
[47,43,31,49,36,0,55,39],
[29,28,22,34,31,26,0,32],
[46,35,36,39,36,42,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,52,42,46,40,49,44],
[30,0,35,37,34,36,39,36],
[29,46,0,41,45,43,37,44],
[39,44,40,0,41,48,45,42],
[35,47,36,40,0,47,40,45],
[41,45,38,33,34,0,39,37],
[32,42,44,36,41,42,0,40],
[37,45,37,39,36,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,44,41,52,37,41],
[40,0,37,38,37,37,41,28],
[43,44,0,52,31,45,41,31],
[37,43,29,0,34,43,40,32],
[40,44,50,47,0,54,45,41],
[29,44,36,38,27,0,37,34],
[44,40,40,41,36,44,0,34],
[40,53,50,49,40,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,36,34,33,40,34],
[43,0,41,38,42,34,37,36],
[42,40,0,43,41,41,37,41],
[45,43,38,0,41,37,49,42],
[47,39,40,40,0,37,39,39],
[48,47,40,44,44,0,45,42],
[41,44,44,32,42,36,0,41],
[47,45,40,39,42,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,60,46,50,44,49,50],
[45,0,50,35,60,43,48,28],
[21,31,0,33,22,21,26,23],
[35,46,48,0,44,42,49,41],
[31,21,59,37,0,34,36,33],
[37,38,60,39,47,0,46,40],
[32,33,55,32,45,35,0,28],
[31,53,58,40,48,41,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,42,22,42,37,26,28],
[58,0,46,38,45,48,42,43],
[39,35,0,44,41,42,38,41],
[59,43,37,0,52,42,42,35],
[39,36,40,29,0,32,33,34],
[44,33,39,39,49,0,41,39],
[55,39,43,39,48,40,0,42],
[53,38,40,46,47,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,39,40,33,39,44],
[35,0,47,24,37,25,31,31],
[38,34,0,47,40,41,46,47],
[42,57,34,0,38,30,29,48],
[41,44,41,43,0,38,25,38],
[48,56,40,51,43,0,37,51],
[42,50,35,52,56,44,0,45],
[37,50,34,33,43,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,17,32,39,50,42,50],
[49,0,58,49,40,50,33,49],
[64,23,0,48,40,56,41,57],
[49,32,33,0,30,58,41,42],
[42,41,41,51,0,50,33,51],
[31,31,25,23,31,0,16,39],
[39,48,40,40,48,65,0,58],
[31,32,24,39,30,42,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,61,37,43,45,39],
[35,0,47,39,39,42,34,24],
[30,34,0,32,33,37,37,26],
[20,42,49,0,34,43,34,39],
[44,42,48,47,0,48,35,39],
[38,39,44,38,33,0,36,45],
[36,47,44,47,46,45,0,33],
[42,57,55,42,42,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,27,38,38,33,39,29],
[47,0,33,48,47,31,48,46],
[54,48,0,54,37,55,49,42],
[43,33,27,0,35,40,39,46],
[43,34,44,46,0,45,47,46],
[48,50,26,41,36,0,43,39],
[42,33,32,42,34,38,0,40],
[52,35,39,35,35,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,47,37,72,46,34],
[9,0,36,29,17,62,46,34],
[17,45,0,38,28,72,45,34],
[34,52,43,0,26,52,36,43],
[44,64,53,55,0,53,64,34],
[9,19,9,29,28,0,28,0],
[35,35,36,45,17,53,0,26],
[47,47,47,38,47,81,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,41,46,45,41,39],
[42,0,38,36,49,45,38,37],
[41,43,0,46,48,47,37,41],
[40,45,35,0,47,38,37,38],
[35,32,33,34,0,40,32,34],
[36,36,34,43,41,0,44,41],
[40,43,44,44,49,37,0,38],
[42,44,40,43,47,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,55,46,63,54,64,54],
[45,0,53,36,55,44,54,35],
[26,28,0,26,45,17,35,27],
[35,45,55,0,55,46,26,45],
[18,26,36,26,0,8,9,26],
[27,37,64,35,73,0,27,55],
[17,27,46,55,72,54,0,45],
[27,46,54,36,55,26,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,26,40,33,42,32],
[44,0,38,35,36,36,40,40],
[49,43,0,38,42,40,47,43],
[55,46,43,0,47,41,39,41],
[41,45,39,34,0,41,50,41],
[48,45,41,40,40,0,47,54],
[39,41,34,42,31,34,0,38],
[49,41,38,40,40,27,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,52,44,42,36,44],
[41,0,47,50,38,40,44,36],
[41,34,0,41,32,35,41,34],
[29,31,40,0,42,35,38,42],
[37,43,49,39,0,37,36,38],
[39,41,46,46,44,0,44,51],
[45,37,40,43,45,37,0,37],
[37,45,47,39,43,30,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,53,49,58,44,46],
[42,0,38,44,29,61,44,34],
[36,43,0,38,16,48,27,31],
[28,37,43,0,23,38,35,19],
[32,52,65,58,0,49,51,46],
[23,20,33,43,32,0,25,31],
[37,37,54,46,30,56,0,45],
[35,47,50,62,35,50,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,44,39,41,39,39],
[35,0,34,42,40,42,42,39],
[40,47,0,43,42,45,41,37],
[37,39,38,0,39,34,39,33],
[42,41,39,42,0,38,34,38],
[40,39,36,47,43,0,38,35],
[42,39,40,42,47,43,0,42],
[42,42,44,48,43,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,39,43,44,37,45],
[40,0,46,37,45,35,41,42],
[38,35,0,41,42,37,33,41],
[42,44,40,0,44,47,40,42],
[38,36,39,37,0,38,37,38],
[37,46,44,34,43,0,34,44],
[44,40,48,41,44,47,0,45],
[36,39,40,39,43,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,40,36,48,29,44,43],
[32,0,33,46,41,36,48,34],
[41,48,0,39,44,39,48,47],
[45,35,42,0,45,41,47,48],
[33,40,37,36,0,36,38,42],
[52,45,42,40,45,0,54,45],
[37,33,33,34,43,27,0,29],
[38,47,34,33,39,36,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,48,44,59,50,38,71],
[46,0,48,50,54,41,28,60],
[33,33,0,51,51,43,40,57],
[37,31,30,0,31,30,20,45],
[22,27,30,50,0,42,44,44],
[31,40,38,51,39,0,32,53],
[43,53,41,61,37,49,0,51],
[10,21,24,36,37,28,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,44,37,50,38,38,34],
[29,0,44,28,42,33,29,36],
[37,37,0,31,50,38,41,40],
[44,53,50,0,57,42,39,44],
[31,39,31,24,0,31,29,33],
[43,48,43,39,50,0,36,46],
[43,52,40,42,52,45,0,41],
[47,45,41,37,48,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,34,35,23,23,47,35],
[69,0,57,45,69,44,56,33],
[47,24,0,48,35,35,46,24],
[46,36,33,0,57,36,46,44],
[58,12,46,24,0,23,58,35],
[58,37,46,45,58,0,46,33],
[34,25,35,35,23,35,0,46],
[46,48,57,37,46,48,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,39,38,45,41,40],
[38,0,45,46,40,41,45,42],
[44,36,0,44,37,36,48,40],
[42,35,37,0,37,40,44,37],
[43,41,44,44,0,42,46,37],
[36,40,45,41,39,0,46,46],
[40,36,33,37,35,35,0,40],
[41,39,41,44,44,35,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,30,34,43,37,41],
[46,0,36,49,34,46,44,39],
[45,45,0,32,49,55,47,49],
[51,32,49,0,38,49,31,43],
[47,47,32,43,0,41,33,50],
[38,35,26,32,40,0,42,29],
[44,37,34,50,48,39,0,46],
[40,42,32,38,31,52,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,43,33,59,44,51,42],
[32,0,37,24,28,42,40,13],
[38,44,0,42,52,55,52,45],
[48,57,39,0,47,51,56,47],
[22,53,29,34,0,48,38,33],
[37,39,26,30,33,0,39,34],
[30,41,29,25,43,42,0,28],
[39,68,36,34,48,47,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,37,51,40,42,57,51],
[30,0,35,20,25,35,49,49],
[44,46,0,36,39,40,52,52],
[30,61,45,0,31,37,48,35],
[41,56,42,50,0,37,59,59],
[39,46,41,44,44,0,56,56],
[24,32,29,33,22,25,0,41],
[30,32,29,46,22,25,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,54,42,39,40,31,35],
[38,0,49,38,50,34,38,33],
[27,32,0,26,42,35,25,36],
[39,43,55,0,53,44,39,41],
[42,31,39,28,0,41,32,35],
[41,47,46,37,40,0,44,45],
[50,43,56,42,49,37,0,36],
[46,48,45,40,46,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,45,32,41,36,36],
[48,0,40,44,44,39,37,35],
[39,41,0,45,36,39,40,42],
[36,37,36,0,36,30,38,36],
[49,37,45,45,0,43,36,37],
[40,42,42,51,38,0,40,37],
[45,44,41,43,45,41,0,39],
[45,46,39,45,44,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,29,26,28,25,36,35],
[46,0,36,32,35,30,30,45],
[52,45,0,41,42,39,41,45],
[55,49,40,0,44,42,40,50],
[53,46,39,37,0,32,40,52],
[56,51,42,39,49,0,40,50],
[45,51,40,41,41,41,0,48],
[46,36,36,31,29,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,41,47,44,53,36],
[43,0,41,33,38,42,46,45],
[33,40,0,32,34,33,45,36],
[40,48,49,0,45,45,50,39],
[34,43,47,36,0,42,46,40],
[37,39,48,36,39,0,44,38],
[28,35,36,31,35,37,0,30],
[45,36,45,42,41,43,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,32,40,31,36,44,46],
[48,0,22,31,30,42,30,40],
[49,59,0,46,49,37,43,55],
[41,50,35,0,37,34,28,39],
[50,51,32,44,0,49,45,56],
[45,39,44,47,32,0,43,43],
[37,51,38,53,36,38,0,41],
[35,41,26,42,25,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,12,14,25,56,28,28,26],
[69,0,41,40,56,56,28,42],
[67,40,0,40,68,55,27,40],
[56,41,41,0,56,56,28,42],
[25,25,13,25,0,27,0,25],
[53,25,26,25,54,0,13,53],
[53,53,54,53,81,68,0,40],
[55,39,41,39,56,28,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,37,43,53,56,46],
[37,0,41,40,41,39,36,40],
[33,40,0,31,24,44,37,36],
[44,41,50,0,31,48,41,41],
[38,40,57,50,0,51,41,36],
[28,42,37,33,30,0,33,38],
[25,45,44,40,40,48,0,31],
[35,41,45,40,45,43,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,38,36,36,40,29,35],
[51,0,46,46,43,31,42,44],
[43,35,0,43,43,38,43,44],
[45,35,38,0,51,39,24,38],
[45,38,38,30,0,32,38,23],
[41,50,43,42,49,0,33,40],
[52,39,38,57,43,48,0,39],
[46,37,37,43,58,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,38,39,44,43,40],
[41,0,49,42,36,43,44,44],
[40,32,0,37,37,44,40,43],
[43,39,44,0,37,42,45,43],
[42,45,44,44,0,39,51,43],
[37,38,37,39,42,0,39,42],
[38,37,41,36,30,42,0,39],
[41,37,38,38,38,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,50,47,44,37,36],
[46,0,35,48,52,41,32,40],
[43,46,0,39,44,43,38,43],
[31,33,42,0,39,37,28,33],
[34,29,37,42,0,44,35,33],
[37,40,38,44,37,0,29,38],
[44,49,43,53,46,52,0,40],
[45,41,38,48,48,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,35,31,47,29,26,29],
[47,0,49,50,49,48,41,31],
[46,32,0,41,42,40,34,29],
[50,31,40,0,47,40,40,35],
[34,32,39,34,0,34,28,33],
[52,33,41,41,47,0,42,34],
[55,40,47,41,53,39,0,42],
[52,50,52,46,48,47,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,39,47,33,42,37],
[38,0,36,41,50,42,39,47],
[48,45,0,34,51,31,34,44],
[42,40,47,0,55,39,46,42],
[34,31,30,26,0,25,39,33],
[48,39,50,42,56,0,43,45],
[39,42,47,35,42,38,0,50],
[44,34,37,39,48,36,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,41,47,48,49,43],
[39,0,39,34,38,53,49,50],
[46,42,0,42,39,52,47,49],
[40,47,39,0,36,46,46,40],
[34,43,42,45,0,45,56,48],
[33,28,29,35,36,0,41,35],
[32,32,34,35,25,40,0,46],
[38,31,32,41,33,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,38,46,42,45,42],
[34,0,48,40,40,39,42,47],
[42,33,0,33,30,35,39,39],
[43,41,48,0,38,46,42,46],
[35,41,51,43,0,40,48,52],
[39,42,46,35,41,0,36,45],
[36,39,42,39,33,45,0,45],
[39,34,42,35,29,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,41,46,50,43,48],
[43,0,44,36,50,41,40,49],
[36,37,0,32,39,43,31,42],
[40,45,49,0,48,47,45,46],
[35,31,42,33,0,42,39,47],
[31,40,38,34,39,0,32,47],
[38,41,50,36,42,49,0,60],
[33,32,39,35,34,34,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,36,51,28,34,38,39],
[35,0,37,50,28,37,33,31],
[45,44,0,50,38,39,53,41],
[30,31,31,0,18,36,36,31],
[53,53,43,63,0,46,51,35],
[47,44,42,45,35,0,48,43],
[43,48,28,45,30,33,0,31],
[42,50,40,50,46,38,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,45,45,44,44,40],
[35,0,35,33,38,39,33,32],
[31,46,0,38,42,43,38,33],
[36,48,43,0,44,45,44,37],
[36,43,39,37,0,38,36,35],
[37,42,38,36,43,0,36,30],
[37,48,43,37,45,45,0,45],
[41,49,48,44,46,51,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,48,42,53,48,40],
[30,0,33,36,31,42,43,26],
[30,48,0,36,41,42,47,42],
[33,45,45,0,37,44,48,37],
[39,50,40,44,0,51,41,39],
[28,39,39,37,30,0,39,20],
[33,38,34,33,40,42,0,35],
[41,55,39,44,42,61,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,9,28,45,27,37,28,36],
[72,0,34,72,43,47,45,53],
[53,47,0,55,38,57,53,62],
[36,9,26,0,27,28,26,53],
[54,38,43,54,0,37,45,53],
[44,34,24,53,44,0,35,34],
[53,36,28,55,36,46,0,43],
[45,28,19,28,28,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,47,49,43,44,44],
[37,0,34,36,41,34,41,35],
[41,47,0,39,47,42,45,43],
[34,45,42,0,45,43,42,38],
[32,40,34,36,0,34,36,32],
[38,47,39,38,47,0,48,41],
[37,40,36,39,45,33,0,39],
[37,46,38,43,49,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,36,35,54,54,58],
[50,0,56,51,39,51,60,69],
[48,25,0,37,36,39,31,57],
[45,30,44,0,41,39,37,52],
[46,42,45,40,0,41,49,49],
[27,30,42,42,40,0,45,52],
[27,21,50,44,32,36,0,54],
[23,12,24,29,32,29,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,43,35,42,55,29,50],
[52,0,54,41,61,54,40,68],
[38,27,0,35,46,51,41,69],
[46,40,46,0,46,45,39,54],
[39,20,35,35,0,52,43,56],
[26,27,30,36,29,0,29,50],
[52,41,40,42,38,52,0,54],
[31,13,12,27,25,31,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,43,56,54,43,29],
[38,0,24,39,38,38,53,28],
[39,57,0,43,28,68,54,29],
[38,42,38,0,38,39,39,29],
[25,43,53,43,0,54,54,29],
[27,43,13,42,27,0,42,42],
[38,28,27,42,27,39,0,42],
[52,53,52,52,52,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,37,40,38,42,42],
[43,0,53,39,51,49,51,42],
[39,28,0,46,43,45,58,46],
[44,42,35,0,46,41,42,44],
[41,30,38,35,0,35,44,41],
[43,32,36,40,46,0,50,44],
[39,30,23,39,37,31,0,28],
[39,39,35,37,40,37,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,36,34,34,22,33],
[46,0,43,43,38,43,30,39],
[43,38,0,44,37,43,32,43],
[45,38,37,0,44,35,34,33],
[47,43,44,37,0,40,41,41],
[47,38,38,46,41,0,45,51],
[59,51,49,47,40,36,0,45],
[48,42,38,48,40,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,42,40,33,35,40],
[39,0,39,39,32,32,32,23],
[39,42,0,48,49,32,34,32],
[39,42,33,0,42,51,27,25],
[41,49,32,39,0,43,27,50],
[48,49,49,30,38,0,34,25],
[46,49,47,54,54,47,0,39],
[41,58,49,56,31,56,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,27,31,31,25,30,32],
[73,0,42,56,47,49,39,31],
[54,39,0,47,31,31,30,15],
[50,25,34,0,43,26,32,34],
[50,34,50,38,0,43,25,42],
[56,32,50,55,38,0,24,33],
[51,42,51,49,56,57,0,32],
[49,50,66,47,39,48,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,31,39,32,36,48,45],
[55,0,48,41,39,45,44,48],
[50,33,0,37,35,28,47,37],
[42,40,44,0,38,37,53,49],
[49,42,46,43,0,30,48,43],
[45,36,53,44,51,0,57,47],
[33,37,34,28,33,24,0,37],
[36,33,44,32,38,34,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,43,34,34,32,33],
[48,0,36,43,35,36,29,43],
[42,45,0,41,39,35,33,38],
[38,38,40,0,29,33,37,36],
[47,46,42,52,0,38,36,38],
[47,45,46,48,43,0,41,39],
[49,52,48,44,45,40,0,44],
[48,38,43,45,43,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,25,34,43,53,43,54],
[19,0,35,53,44,28,25,36],
[56,46,0,64,63,56,26,47],
[47,28,17,0,44,46,17,47],
[38,37,18,37,0,37,35,28],
[28,53,25,35,44,0,34,55],
[38,56,55,64,46,47,0,38],
[27,45,34,34,53,26,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,40,56,44,48,59,50],
[28,0,31,34,38,33,38,34],
[41,50,0,52,39,42,53,49],
[25,47,29,0,39,36,45,41],
[37,43,42,42,0,37,46,46],
[33,48,39,45,44,0,48,41],
[22,43,28,36,35,33,0,37],
[31,47,32,40,35,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,17,25,39,24,33,34],
[50,0,34,32,39,24,32,41],
[64,47,0,48,54,55,33,57],
[56,49,33,0,57,64,43,65],
[42,42,27,24,0,42,18,42],
[57,57,26,17,39,0,34,26],
[48,49,48,38,63,47,0,64],
[47,40,24,16,39,55,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,51,48,46,41,37,41],
[29,0,41,38,43,23,37,36],
[30,40,0,38,46,18,33,33],
[33,43,43,0,47,26,42,54],
[35,38,35,34,0,40,48,27],
[40,58,63,55,41,0,37,39],
[44,44,48,39,33,44,0,32],
[40,45,48,27,54,42,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,41,42,34,46,37,40],
[50,0,41,42,37,49,46,51],
[40,40,0,45,45,41,44,38],
[39,39,36,0,36,46,42,42],
[47,44,36,45,0,42,44,47],
[35,32,40,35,39,0,40,45],
[44,35,37,39,37,41,0,40],
[41,30,43,39,34,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,37,39,42,43,38],
[37,0,41,41,39,41,39,38],
[40,40,0,42,37,41,40,40],
[44,40,39,0,44,45,45,41],
[42,42,44,37,0,44,41,39],
[39,40,40,36,37,0,36,33],
[38,42,41,36,40,45,0,35],
[43,43,41,40,42,48,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,27,27,27,27,54,26],
[41,0,41,41,41,41,41,27],
[54,40,0,27,40,13,41,40],
[54,40,54,0,68,41,54,40],
[54,40,41,13,0,27,41,27],
[54,40,68,40,54,0,68,54],
[27,40,40,27,40,13,0,40],
[55,54,41,41,54,27,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,35,38,37,29,33],
[50,0,41,51,44,44,39,46],
[53,40,0,40,48,42,36,44],
[46,30,41,0,39,44,42,41],
[43,37,33,42,0,41,36,33],
[44,37,39,37,40,0,43,42],
[52,42,45,39,45,38,0,48],
[48,35,37,40,48,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,40,42,41,40,41,41],
[32,0,39,46,32,37,39,34],
[41,42,0,44,40,41,44,32],
[39,35,37,0,40,40,36,35],
[40,49,41,41,0,39,37,42],
[41,44,40,41,42,0,43,40],
[40,42,37,45,44,38,0,40],
[40,47,49,46,39,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,54,29,35,47,25,34],
[40,0,53,43,33,45,34,38],
[27,28,0,28,27,39,28,31],
[52,38,53,0,33,51,31,44],
[46,48,54,48,0,48,46,40],
[34,36,42,30,33,0,21,32],
[56,47,53,50,35,60,0,46],
[47,43,50,37,41,49,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,45,45,33,37,44,42],
[54,0,59,51,39,44,52,45],
[36,22,0,34,33,42,32,31],
[36,30,47,0,36,38,38,30],
[48,42,48,45,0,46,39,30],
[44,37,39,43,35,0,38,32],
[37,29,49,43,42,43,0,36],
[39,36,50,51,51,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,48,49,41,40,48],
[36,0,38,35,43,40,39,44],
[38,43,0,42,46,48,46,44],
[33,46,39,0,46,41,48,45],
[32,38,35,35,0,42,40,33],
[40,41,33,40,39,0,46,41],
[41,42,35,33,41,35,0,40],
[33,37,37,36,48,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,40,35,42,43,36,47],
[51,0,48,48,40,46,47,64],
[41,33,0,43,33,45,38,42],
[46,33,38,0,41,41,39,48],
[39,41,48,40,0,47,43,47],
[38,35,36,40,34,0,40,49],
[45,34,43,42,38,41,0,44],
[34,17,39,33,34,32,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,32,36,39,35,40,36],
[53,0,40,45,56,45,50,42],
[49,41,0,43,52,34,47,49],
[45,36,38,0,44,37,46,41],
[42,25,29,37,0,38,37,37],
[46,36,47,44,43,0,44,46],
[41,31,34,35,44,37,0,41],
[45,39,32,40,44,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,37,38,33,34,37],
[45,0,37,33,40,30,40,37],
[44,44,0,40,41,42,37,42],
[44,48,41,0,46,39,43,48],
[43,41,40,35,0,34,42,36],
[48,51,39,42,47,0,40,39],
[47,41,44,38,39,41,0,45],
[44,44,39,33,45,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,54,51,35,47,47,41],
[35,0,45,34,30,32,37,25],
[27,36,0,34,32,38,36,29],
[30,47,47,0,44,45,33,32],
[46,51,49,37,0,52,45,43],
[34,49,43,36,29,0,34,37],
[34,44,45,48,36,47,0,38],
[40,56,52,49,38,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,43,46,41,42,42],
[38,0,42,39,47,45,48,44],
[47,39,0,45,44,39,45,44],
[38,42,36,0,50,37,39,42],
[35,34,37,31,0,38,41,41],
[40,36,42,44,43,0,48,44],
[39,33,36,42,40,33,0,38],
[39,37,37,39,40,37,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,45,45,43,67,30],
[17,0,30,33,30,25,42,35],
[23,51,0,33,20,37,55,24],
[36,48,48,0,31,38,49,47],
[36,51,61,50,0,51,60,48],
[38,56,44,43,30,0,55,49],
[14,39,26,32,21,26,0,24],
[51,46,57,34,33,32,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,56,66,57,72,37],
[24,0,32,37,46,53,53,36],
[29,49,0,37,49,48,48,45],
[25,44,44,0,35,55,34,43],
[15,35,32,46,0,47,51,36],
[24,28,33,26,34,0,41,26],
[9,28,33,47,30,40,0,27],
[44,45,36,38,45,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,37,41,34,42,39],
[40,0,44,36,43,41,37,44],
[40,37,0,27,34,31,34,31],
[44,45,54,0,56,48,34,42],
[40,38,47,25,0,32,32,32],
[47,40,50,33,49,0,37,41],
[39,44,47,47,49,44,0,48],
[42,37,50,39,49,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,42,28,37,43,41],
[44,0,46,45,41,40,47,46],
[37,35,0,35,29,36,36,32],
[39,36,46,0,30,32,38,36],
[53,40,52,51,0,46,45,46],
[44,41,45,49,35,0,43,49],
[38,34,45,43,36,38,0,36],
[40,35,49,45,35,32,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,37,47,39,37,37],
[47,0,40,43,48,42,39,44],
[41,41,0,38,43,37,42,36],
[44,38,43,0,46,43,43,38],
[34,33,38,35,0,31,31,33],
[42,39,44,38,50,0,37,34],
[44,42,39,38,50,44,0,36],
[44,37,45,43,48,47,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,34,43,40,43,44],
[49,0,49,37,51,54,49,49],
[51,32,0,41,53,45,48,40],
[47,44,40,0,55,51,47,47],
[38,30,28,26,0,36,29,32],
[41,27,36,30,45,0,39,36],
[38,32,33,34,52,42,0,41],
[37,32,41,34,49,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,39,53,48,51,40],
[38,0,37,37,41,47,43,42],
[38,44,0,39,43,40,36,35],
[42,44,42,0,38,46,46,31],
[28,40,38,43,0,39,45,32],
[33,34,41,35,42,0,33,31],
[30,38,45,35,36,48,0,33],
[41,39,46,50,49,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,36,50,44,50,38,49],
[33,0,28,40,42,52,39,49],
[45,53,0,61,46,59,35,48],
[31,41,20,0,31,43,30,39],
[37,39,35,50,0,52,44,43],
[31,29,22,38,29,0,24,30],
[43,42,46,51,37,57,0,36],
[32,32,33,42,38,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,47,42,51,44,32],
[39,0,42,40,36,35,39,36],
[41,39,0,29,41,36,37,28],
[34,41,52,0,39,43,39,40],
[39,45,40,42,0,44,30,41],
[30,46,45,38,37,0,39,25],
[37,42,44,42,51,42,0,41],
[49,45,53,41,40,56,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,43,40,51,44,39],
[39,0,31,35,37,41,37,34],
[42,50,0,32,37,38,46,37],
[38,46,49,0,47,44,43,45],
[41,44,44,34,0,42,43,36],
[30,40,43,37,39,0,36,36],
[37,44,35,38,38,45,0,34],
[42,47,44,36,45,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,35,44,43,41,43],
[43,0,32,42,45,39,38,36],
[43,49,0,38,46,45,39,37],
[46,39,43,0,46,40,43,44],
[37,36,35,35,0,35,38,38],
[38,42,36,41,46,0,43,42],
[40,43,42,38,43,38,0,41],
[38,45,44,37,43,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,42,42,48,48,39,42],
[29,0,37,27,29,49,31,32],
[39,44,0,37,39,50,42,44],
[39,54,44,0,43,54,42,46],
[33,52,42,38,0,55,42,49],
[33,32,31,27,26,0,35,38],
[42,50,39,39,39,46,0,50],
[39,49,37,35,32,43,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,47,40,36,37,39,35],
[49,0,45,41,37,40,41,43],
[34,36,0,37,31,31,30,29],
[41,40,44,0,41,39,33,36],
[45,44,50,40,0,38,41,40],
[44,41,50,42,43,0,39,34],
[42,40,51,48,40,42,0,40],
[46,38,52,45,41,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,30,45,38,40,48,43],
[34,0,32,30,27,29,39,27],
[51,49,0,45,42,37,46,44],
[36,51,36,0,38,36,41,35],
[43,54,39,43,0,39,46,40],
[41,52,44,45,42,0,50,38],
[33,42,35,40,35,31,0,32],
[38,54,37,46,41,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,47,43,41,40,43,33],
[38,0,45,51,46,38,34,35],
[34,36,0,59,30,38,36,40],
[38,30,22,0,35,25,31,27],
[40,35,51,46,0,41,46,46],
[41,43,43,56,40,0,33,39],
[38,47,45,50,35,48,0,44],
[48,46,41,54,35,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,21,27,36,28,35,29],
[46,0,39,33,40,39,40,33],
[60,42,0,20,48,14,40,21],
[54,48,61,0,48,47,49,36],
[45,41,33,33,0,33,34,41],
[53,42,67,34,48,0,61,50],
[46,41,41,32,47,20,0,36],
[52,48,60,45,40,31,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,46,49,35,41,28,38],
[31,0,32,45,43,36,34,29],
[35,49,0,52,45,36,40,42],
[32,36,29,0,39,25,33,34],
[46,38,36,42,0,29,30,36],
[40,45,45,56,52,0,43,38],
[53,47,41,48,51,38,0,45],
[43,52,39,47,45,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,42,52,40,49,52],
[41,0,41,47,50,37,47,53],
[38,40,0,49,44,41,45,51],
[39,34,32,0,47,44,40,55],
[29,31,37,34,0,33,43,43],
[41,44,40,37,48,0,49,48],
[32,34,36,41,38,32,0,56],
[29,28,30,26,38,33,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,58,41,45,52,51,30],
[31,0,35,31,37,29,45,45],
[23,46,0,25,47,35,46,47],
[40,50,56,0,64,57,59,43],
[36,44,34,17,0,28,38,32],
[29,52,46,24,53,0,60,38],
[30,36,35,22,43,21,0,30],
[51,36,34,38,49,43,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,46,49,50,44,53],
[45,0,44,39,56,44,45,50],
[44,37,0,36,49,47,47,48],
[35,42,45,0,47,44,52,48],
[32,25,32,34,0,37,40,44],
[31,37,34,37,44,0,44,41],
[37,36,34,29,41,37,0,35],
[28,31,33,33,37,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,54,37,34,34,33,44],
[40,0,38,49,39,41,56,46],
[27,43,0,38,49,29,39,38],
[44,32,43,0,29,22,26,40],
[47,42,32,52,0,30,32,44],
[47,40,52,59,51,0,41,46],
[48,25,42,55,49,40,0,37],
[37,35,43,41,37,35,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,44,42,39,47,38],
[37,0,35,45,43,41,38,38],
[44,46,0,53,48,38,47,49],
[37,36,28,0,42,30,40,39],
[39,38,33,39,0,41,39,39],
[42,40,43,51,40,0,46,40],
[34,43,34,41,42,35,0,34],
[43,43,32,42,42,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,41,36,42,45,39],
[46,0,42,40,42,39,42,43],
[42,39,0,38,44,37,45,44],
[40,41,43,0,43,44,47,40],
[45,39,37,38,0,32,45,42],
[39,42,44,37,49,0,41,38],
[36,39,36,34,36,40,0,42],
[42,38,37,41,39,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,43,26,32,48,47],
[44,0,49,47,38,35,47,43],
[40,32,0,29,37,30,46,29],
[38,34,52,0,41,32,41,34],
[55,43,44,40,0,41,48,43],
[49,46,51,49,40,0,52,48],
[33,34,35,40,33,29,0,40],
[34,38,52,47,38,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,40,40,38,45,40],
[46,0,49,42,37,37,46,48],
[43,32,0,43,41,34,42,40],
[41,39,38,0,37,41,43,50],
[41,44,40,44,0,40,48,47],
[43,44,47,40,41,0,47,46],
[36,35,39,38,33,34,0,41],
[41,33,41,31,34,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,45,49,38,53,46,43],
[47,0,56,52,36,57,42,51],
[36,25,0,49,33,35,27,41],
[32,29,32,0,32,45,31,39],
[43,45,48,49,0,45,38,53],
[28,24,46,36,36,0,31,41],
[35,39,54,50,43,50,0,38],
[38,30,40,42,28,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,46,48,35,38,38,41],
[56,0,49,55,42,40,37,48],
[35,32,0,48,39,41,39,47],
[33,26,33,0,32,39,26,35],
[46,39,42,49,0,40,44,38],
[43,41,40,42,41,0,45,38],
[43,44,42,55,37,36,0,42],
[40,33,34,46,43,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,36,28,32,24,25,33],
[48,0,30,35,36,28,36,46],
[45,51,0,34,35,41,33,44],
[53,46,47,0,40,45,48,48],
[49,45,46,41,0,38,37,50],
[57,53,40,36,43,0,41,52],
[56,45,48,33,44,40,0,53],
[48,35,37,33,31,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,50,25,39,42,41],
[45,0,38,47,36,41,34,45],
[40,43,0,52,41,38,47,39],
[31,34,29,0,29,37,28,31],
[56,45,40,52,0,47,41,42],
[42,40,43,44,34,0,36,36],
[39,47,34,53,40,45,0,42],
[40,36,42,50,39,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,37,42,30,37,33],
[40,0,44,48,46,36,35,43],
[50,37,0,48,42,43,35,45],
[44,33,33,0,33,28,31,30],
[39,35,39,48,0,31,33,43],
[51,45,38,53,50,0,41,39],
[44,46,46,50,48,40,0,46],
[48,38,36,51,38,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,33,40,36,46,44],
[39,0,47,41,47,38,39,42],
[37,34,0,39,42,41,40,44],
[48,40,42,0,40,33,42,49],
[41,34,39,41,0,38,42,43],
[45,43,40,48,43,0,46,48],
[35,42,41,39,39,35,0,37],
[37,39,37,32,38,33,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,26,19,29,24,35,26],
[36,0,34,21,27,28,31,30],
[55,47,0,41,41,48,38,46],
[62,60,40,0,33,28,45,42],
[52,54,40,48,0,36,44,52],
[57,53,33,53,45,0,48,41],
[46,50,43,36,37,33,0,38],
[55,51,35,39,29,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,54,81,54,81,81,27],
[0,0,27,54,0,54,27,0],
[27,54,0,81,54,54,54,27],
[0,27,0,0,27,27,27,0],
[27,81,27,54,0,81,54,54],
[0,27,27,54,0,0,27,0],
[0,54,27,54,27,54,0,27],
[54,81,54,81,27,81,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,51,30,40,47,46],
[39,0,52,53,44,48,43,37],
[35,29,0,42,19,39,36,32],
[30,28,39,0,30,34,31,34],
[51,37,62,51,0,54,46,45],
[41,33,42,47,27,0,41,31],
[34,38,45,50,35,40,0,43],
[35,44,49,47,36,50,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,41,45,56,39,39],
[48,0,38,38,40,39,42,41],
[43,43,0,34,50,40,33,33],
[40,43,47,0,48,48,47,41],
[36,41,31,33,0,43,37,36],
[25,42,41,33,38,0,29,37],
[42,39,48,34,44,52,0,35],
[42,40,48,40,45,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,31,30,30,39,50],
[35,0,44,24,33,24,38,38],
[34,37,0,28,29,28,44,48],
[50,57,53,0,48,44,40,54],
[51,48,52,33,0,45,45,54],
[51,57,53,37,36,0,39,55],
[42,43,37,41,36,42,0,51],
[31,43,33,27,27,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,40,37,31,36,31],
[43,0,39,38,41,35,38,35],
[45,42,0,48,39,43,45,41],
[41,43,33,0,41,33,32,39],
[44,40,42,40,0,43,37,40],
[50,46,38,48,38,0,44,38],
[45,43,36,49,44,37,0,38],
[50,46,40,42,41,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,42,43,35,35,39],
[44,0,42,46,49,51,45,40],
[36,39,0,44,46,47,40,41],
[39,35,37,0,38,40,37,40],
[38,32,35,43,0,40,33,27],
[46,30,34,41,41,0,35,33],
[46,36,41,44,48,46,0,39],
[42,41,40,41,54,48,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,41,48,46,39,45],
[42,0,44,34,45,41,50,40],
[37,37,0,35,42,36,44,42],
[40,47,46,0,43,39,46,48],
[33,36,39,38,0,36,36,40],
[35,40,45,42,45,0,38,39],
[42,31,37,35,45,43,0,38],
[36,41,39,33,41,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,46,44,47,47,46],
[42,0,53,34,45,56,46,44],
[37,28,0,35,34,37,41,35],
[35,47,46,0,41,43,46,49],
[37,36,47,40,0,40,46,42],
[34,25,44,38,41,0,38,40],
[34,35,40,35,35,43,0,40],
[35,37,46,32,39,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,36,31,43,30,34,36],
[53,0,43,37,44,42,38,35],
[45,38,0,38,42,35,34,34],
[50,44,43,0,48,34,35,41],
[38,37,39,33,0,28,30,28],
[51,39,46,47,53,0,35,38],
[47,43,47,46,51,46,0,39],
[45,46,47,40,53,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,38,47,45,47,40],
[35,0,38,35,40,29,45,34],
[35,43,0,39,47,36,43,43],
[43,46,42,0,38,37,40,42],
[34,41,34,43,0,38,36,41],
[36,52,45,44,43,0,40,42],
[34,36,38,41,45,41,0,46],
[41,47,38,39,40,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,54,43,38,48,46,53],
[43,0,42,53,40,50,47,38],
[27,39,0,46,28,33,34,40],
[38,28,35,0,36,39,16,27],
[43,41,53,45,0,48,40,41],
[33,31,48,42,33,0,47,32],
[35,34,47,65,41,34,0,39],
[28,43,41,54,40,49,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,26,40,33,28,27],
[44,0,46,30,43,32,43,37],
[48,35,0,35,51,35,50,35],
[55,51,46,0,50,25,46,46],
[41,38,30,31,0,33,40,21],
[48,49,46,56,48,0,37,33],
[53,38,31,35,41,44,0,31],
[54,44,46,35,60,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,59,42,48,46,46],
[43,0,42,57,32,31,41,36],
[40,39,0,39,32,39,38,34],
[22,24,42,0,31,31,31,36],
[39,49,49,50,0,50,49,57],
[33,50,42,50,31,0,37,33],
[35,40,43,50,32,44,0,37],
[35,45,47,45,24,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,49,40,27,29,38],
[40,0,47,59,53,37,40,44],
[35,34,0,54,37,21,38,29],
[32,22,27,0,33,16,28,18],
[41,28,44,48,0,30,34,35],
[54,44,60,65,51,0,50,38],
[52,41,43,53,47,31,0,35],
[43,37,52,63,46,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,32,35,40,43,39,48],
[31,0,35,35,41,37,31,34],
[49,46,0,41,48,48,39,43],
[46,46,40,0,48,41,45,42],
[41,40,33,33,0,41,35,43],
[38,44,33,40,40,0,38,33],
[42,50,42,36,46,43,0,47],
[33,47,38,39,38,48,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,44,44,46,48,48,39],
[50,0,37,46,49,44,56,37],
[37,44,0,50,39,47,48,39],
[37,35,31,0,40,42,40,31],
[35,32,42,41,0,41,53,42],
[33,37,34,39,40,0,39,37],
[33,25,33,41,28,42,0,21],
[42,44,42,50,39,44,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,40,51,42,46,44,49],
[26,0,39,58,48,38,40,48],
[41,42,0,53,44,27,42,48],
[30,23,28,0,34,31,32,31],
[39,33,37,47,0,33,38,39],
[35,43,54,50,48,0,38,36],
[37,41,39,49,43,43,0,49],
[32,33,33,50,42,45,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,42,37,40,39,40,40],
[51,0,49,42,39,40,41,47],
[39,32,0,39,32,41,38,41],
[44,39,42,0,39,38,47,48],
[41,42,49,42,0,37,44,52],
[42,41,40,43,44,0,41,51],
[41,40,43,34,37,40,0,43],
[41,34,40,33,29,30,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,49,59,39,29,61,41],
[50,0,50,50,40,41,70,40],
[32,31,0,51,31,20,53,43],
[22,31,30,0,31,10,53,43],
[42,41,50,50,0,20,61,61],
[52,40,61,71,61,0,62,52],
[20,11,28,28,20,19,0,20],
[40,41,38,38,20,29,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,49,50,42,40,55],
[41,0,32,56,51,41,43,46],
[33,49,0,48,43,33,36,43],
[32,25,33,0,38,33,27,42],
[31,30,38,43,0,25,41,43],
[39,40,48,48,56,0,46,48],
[41,38,45,54,40,35,0,47],
[26,35,38,39,38,33,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,44,32,38,34,34,39],
[47,0,47,30,37,35,46,39],
[37,34,0,37,42,33,26,44],
[49,51,44,0,54,35,40,46],
[43,44,39,27,0,28,37,39],
[47,46,48,46,53,0,42,37],
[47,35,55,41,44,39,0,38],
[42,42,37,35,42,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,38,49,32,49,41],
[50,0,42,47,58,35,44,46],
[44,39,0,47,56,39,56,44],
[43,34,34,0,40,42,41,41],
[32,23,25,41,0,25,35,44],
[49,46,42,39,56,0,51,46],
[32,37,25,40,46,30,0,39],
[40,35,37,40,37,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,51,49,34,43,42,40],
[34,0,44,46,38,40,38,38],
[30,37,0,37,38,49,29,48],
[32,35,44,0,34,43,34,39],
[47,43,43,47,0,49,38,45],
[38,41,32,38,32,0,36,48],
[39,43,52,47,43,45,0,46],
[41,43,33,42,36,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,31,41,29,29,32],
[43,0,38,30,36,28,31,26],
[46,43,0,36,42,36,32,36],
[50,51,45,0,39,44,43,47],
[40,45,39,42,0,28,32,33],
[52,53,45,37,53,0,34,42],
[52,50,49,38,49,47,0,36],
[49,55,45,34,48,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,30,29,47,40,37,26],
[45,0,42,35,51,39,54,33],
[51,39,0,49,48,42,55,39],
[52,46,32,0,45,47,46,42],
[34,30,33,36,0,35,49,31],
[41,42,39,34,46,0,52,41],
[44,27,26,35,32,29,0,29],
[55,48,42,39,50,40,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,45,37,44,44,40],
[36,0,35,39,41,38,33,37],
[41,46,0,41,42,38,44,43],
[36,42,40,0,41,32,40,36],
[44,40,39,40,0,39,43,34],
[37,43,43,49,42,0,42,37],
[37,48,37,41,38,39,0,41],
[41,44,38,45,47,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,37,42,47,39,41,49],
[36,0,38,37,43,35,42,38],
[44,43,0,38,46,39,39,46],
[39,44,43,0,49,48,43,47],
[34,38,35,32,0,36,36,38],
[42,46,42,33,45,0,45,42],
[40,39,42,38,45,36,0,41],
[32,43,35,34,43,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,38,44,45,41,40],
[43,0,46,40,42,45,39,42],
[37,35,0,35,36,42,37,38],
[43,41,46,0,46,48,42,39],
[37,39,45,35,0,42,35,39],
[36,36,39,33,39,0,37,38],
[40,42,44,39,46,44,0,39],
[41,39,43,42,42,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,42,42,20,42,42],
[39,0,59,39,39,40,0,59],
[42,22,0,22,22,20,22,42],
[39,42,59,0,42,40,42,62],
[39,42,59,39,0,40,42,62],
[61,41,61,41,41,0,22,61],
[39,81,59,39,39,59,0,59],
[39,22,39,19,19,20,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,39,42,53,46,46],
[35,0,42,38,41,45,42,38],
[32,39,0,37,33,44,34,40],
[42,43,44,0,38,47,50,43],
[39,40,48,43,0,45,45,34],
[28,36,37,34,36,0,35,36],
[35,39,47,31,36,46,0,36],
[35,43,41,38,47,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,37,39,36,45,39],
[41,0,38,35,40,39,47,38],
[42,43,0,42,42,40,40,43],
[44,46,39,0,47,37,51,41],
[42,41,39,34,0,44,47,43],
[45,42,41,44,37,0,44,39],
[36,34,41,30,34,37,0,37],
[42,43,38,40,38,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,65,36,45,56,43],
[36,0,37,59,45,42,51,41],
[39,44,0,54,35,45,52,27],
[16,22,27,0,42,33,51,32],
[45,36,46,39,0,49,71,43],
[36,39,36,48,32,0,49,37],
[25,30,29,30,10,32,0,20],
[38,40,54,49,38,44,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,35,43,40,39,44],
[38,0,42,36,43,43,41,38],
[42,39,0,33,40,43,39,42],
[46,45,48,0,44,48,39,38],
[38,38,41,37,0,43,29,38],
[41,38,38,33,38,0,40,37],
[42,40,42,42,52,41,0,46],
[37,43,39,43,43,44,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,44,38,33,45,42],
[44,0,46,40,40,41,46,41],
[35,35,0,36,40,42,41,42],
[37,41,45,0,37,37,49,41],
[43,41,41,44,0,37,44,43],
[48,40,39,44,44,0,50,46],
[36,35,40,32,37,31,0,33],
[39,40,39,40,38,35,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,28,28,32,32,19,28],
[59,0,29,63,37,57,45,50],
[53,52,0,64,42,50,38,49],
[53,18,17,0,34,39,23,38],
[49,44,39,47,0,43,38,43],
[49,24,31,42,38,0,30,45],
[62,36,43,58,43,51,0,65],
[53,31,32,43,38,36,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,41,33,39,38,42,40],
[55,0,43,48,57,37,44,49],
[40,38,0,27,34,35,35,43],
[48,33,54,0,48,44,47,47],
[42,24,47,33,0,29,40,38],
[43,44,46,37,52,0,45,52],
[39,37,46,34,41,36,0,46],
[41,32,38,34,43,29,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,41,39,38,43,46],
[41,0,35,44,40,47,41,49],
[43,46,0,41,46,42,39,46],
[40,37,40,0,39,37,39,49],
[42,41,35,42,0,38,46,46],
[43,34,39,44,43,0,36,45],
[38,40,42,42,35,45,0,47],
[35,32,35,32,35,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,44,39,34,45,36],
[37,0,37,54,38,39,39,47],
[42,44,0,43,42,34,37,37],
[37,27,38,0,37,36,30,39],
[42,43,39,44,0,31,37,37],
[47,42,47,45,50,0,39,42],
[36,42,44,51,44,42,0,39],
[45,34,44,42,44,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,41,43,30,55,41],
[43,0,26,32,43,40,39,35],
[44,55,0,34,43,45,44,38],
[40,49,47,0,50,46,52,39],
[38,38,38,31,0,30,37,39],
[51,41,36,35,51,0,54,33],
[26,42,37,29,44,27,0,30],
[40,46,43,42,42,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,43,46,42,42,44],
[41,0,38,38,39,40,49,48],
[43,43,0,41,44,36,47,48],
[38,43,40,0,36,31,47,51],
[35,42,37,45,0,44,47,44],
[39,41,45,50,37,0,51,45],
[39,32,34,34,34,30,0,39],
[37,33,33,30,37,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,45,37,38,48,42],
[35,0,42,40,42,36,48,41],
[42,39,0,38,40,42,42,36],
[36,41,43,0,37,42,49,38],
[44,39,41,44,0,37,40,37],
[43,45,39,39,44,0,43,34],
[33,33,39,32,41,38,0,38],
[39,40,45,43,44,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,38,42,56,46,46],
[34,0,39,29,37,37,36,28],
[38,42,0,26,34,36,33,33],
[43,52,55,0,50,45,33,46],
[39,44,47,31,0,40,34,34],
[25,44,45,36,41,0,39,38],
[35,45,48,48,47,42,0,41],
[35,53,48,35,47,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,45,24,38,43,39],
[35,0,40,31,33,26,46,33],
[43,41,0,31,20,38,41,27],
[36,50,50,0,41,42,48,43],
[57,48,61,40,0,41,56,46],
[43,55,43,39,40,0,43,40],
[38,35,40,33,25,38,0,26],
[42,48,54,38,35,41,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,42,45,56,40,50,43],
[31,0,31,46,54,37,53,49],
[39,50,0,52,58,41,54,55],
[36,35,29,0,60,33,46,38],
[25,27,23,21,0,22,29,31],
[41,44,40,48,59,0,48,49],
[31,28,27,35,52,33,0,41],
[38,32,26,43,50,32,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,44,41,37,43,34,36],
[29,0,32,32,36,28,38,29],
[37,49,0,37,33,34,30,32],
[40,49,44,0,37,36,41,30],
[44,45,48,44,0,46,38,47],
[38,53,47,45,35,0,49,41],
[47,43,51,40,43,32,0,36],
[45,52,49,51,34,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,57,40,42,36,42,33],
[45,0,61,52,44,38,41,50],
[24,20,0,26,30,28,30,12],
[41,29,55,0,44,38,45,44],
[39,37,51,37,0,46,40,33],
[45,43,53,43,35,0,45,33],
[39,40,51,36,41,36,0,34],
[48,31,69,37,48,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,37,31,30,25,28],
[47,0,48,45,54,42,41,35],
[43,33,0,48,32,26,33,37],
[44,36,33,0,36,43,31,31],
[50,27,49,45,0,48,32,41],
[51,39,55,38,33,0,29,44],
[56,40,48,50,49,52,0,40],
[53,46,44,50,40,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,36,36,53,44,26],
[42,0,34,33,30,45,34,42],
[41,47,0,29,36,52,45,41],
[45,48,52,0,45,51,49,35],
[45,51,45,36,0,56,43,35],
[28,36,29,30,25,0,27,33],
[37,47,36,32,38,54,0,35],
[55,39,40,46,46,48,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,39,49,42,38,35],
[41,0,50,39,44,36,40,37],
[42,31,0,43,41,39,41,43],
[42,42,38,0,37,35,41,37],
[32,37,40,44,0,46,40,41],
[39,45,42,46,35,0,38,41],
[43,41,40,40,41,43,0,37],
[46,44,38,44,40,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,35,29,35,34,35,65],
[54,0,53,29,46,43,44,73],
[46,28,0,20,28,28,38,40],
[52,52,61,0,53,24,35,73],
[46,35,53,28,0,34,47,73],
[47,38,53,57,47,0,20,56],
[46,37,43,46,34,61,0,55],
[16,8,41,8,8,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,40,39,36,40,57,46],
[49,0,39,49,45,45,52,50],
[41,42,0,51,38,36,50,40],
[42,32,30,0,38,33,46,40],
[45,36,43,43,0,38,43,48],
[41,36,45,48,43,0,54,45],
[24,29,31,35,38,27,0,23],
[35,31,41,41,33,36,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,33,41,29,41,36],
[34,0,37,24,30,22,24,24],
[37,44,0,36,34,33,31,31],
[48,57,45,0,43,41,37,52],
[40,51,47,38,0,44,39,40],
[52,59,48,40,37,0,43,46],
[40,57,50,44,42,38,0,43],
[45,57,50,29,41,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,44,36,44,35,41],
[40,0,43,48,47,39,48,44],
[40,38,0,46,35,49,36,44],
[37,33,35,0,44,38,43,37],
[45,34,46,37,0,40,37,42],
[37,42,32,43,41,0,39,39],
[46,33,45,38,44,42,0,32],
[40,37,37,44,39,42,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,31,38,37,31,30,30],
[41,0,30,37,32,33,25,34],
[50,51,0,38,46,43,40,41],
[43,44,43,0,33,33,40,40],
[44,49,35,48,0,32,37,42],
[50,48,38,48,49,0,41,38],
[51,56,41,41,44,40,0,40],
[51,47,40,41,39,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,41,48,51,44,41,49],
[50,0,40,39,52,43,50,37],
[40,41,0,40,52,36,49,41],
[33,42,41,0,42,32,42,45],
[30,29,29,39,0,39,37,37],
[37,38,45,49,42,0,50,41],
[40,31,32,39,44,31,0,34],
[32,44,40,36,44,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,36,38,43,42,43],
[46,0,40,37,40,44,45,43],
[42,41,0,38,38,44,42,43],
[45,44,43,0,41,39,45,41],
[43,41,43,40,0,39,46,43],
[38,37,37,42,42,0,44,39],
[39,36,39,36,35,37,0,42],
[38,38,38,40,38,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,50,39,40,48,52,37],
[39,0,35,44,51,39,53,44],
[31,46,0,42,44,48,44,35],
[42,37,39,0,47,45,51,48],
[41,30,37,34,0,40,48,38],
[33,42,33,36,41,0,44,30],
[29,28,37,30,33,37,0,36],
[44,37,46,33,43,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,54,54,54,27,57],
[27,0,27,27,27,41,12,42],
[15,54,0,12,28,41,13,42],
[27,54,69,0,40,41,42,57],
[27,54,53,41,0,38,39,69],
[27,40,40,40,43,0,25,43],
[54,69,68,39,42,56,0,56],
[24,39,39,24,12,38,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,41,26,43,54,40],
[40,0,46,35,47,33,40,48],
[33,35,0,31,28,27,39,39],
[40,46,50,0,46,33,40,40],
[55,34,53,35,0,33,44,39],
[38,48,54,48,48,0,45,55],
[27,41,42,41,37,36,0,35],
[41,33,42,41,42,26,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,55,28,41,28,28,14],
[39,0,26,13,26,14,13,13],
[26,55,0,13,67,14,27,13],
[53,68,68,0,67,28,54,40],
[40,55,14,14,0,14,27,27],
[53,67,67,53,67,0,40,53],
[53,68,54,27,54,41,0,40],
[67,68,68,41,54,28,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,34,45,37,55,40],
[41,0,47,41,47,37,40,44],
[35,34,0,43,48,29,50,43],
[47,40,38,0,48,45,55,51],
[36,34,33,33,0,28,36,43],
[44,44,52,36,53,0,52,54],
[26,41,31,26,45,29,0,42],
[41,37,38,30,38,27,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,37,46,40,37,53],
[42,0,42,55,40,47,36,46],
[33,39,0,52,33,49,50,46],
[44,26,29,0,41,50,31,35],
[35,41,48,40,0,35,51,61],
[41,34,32,31,46,0,23,55],
[44,45,31,50,30,58,0,59],
[28,35,35,46,20,26,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,33,32,38,35,37],
[43,0,41,35,32,48,40,44],
[41,40,0,45,23,39,43,40],
[48,46,36,0,39,51,39,49],
[49,49,58,42,0,51,37,49],
[43,33,42,30,30,0,32,34],
[46,41,38,42,44,49,0,44],
[44,37,41,32,32,47,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,25,53,53,53,53,53],
[28,0,53,56,56,28,53,53],
[56,28,0,28,28,28,53,28],
[28,25,53,0,28,25,25,25],
[28,25,53,53,0,53,53,25],
[28,53,53,56,28,0,53,53],
[28,28,28,56,28,28,0,0],
[28,28,53,56,56,28,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,53,49,37,46,32],
[39,0,28,44,43,31,49,25],
[46,53,0,60,51,34,45,37],
[28,37,21,0,51,28,37,16],
[32,38,30,30,0,22,38,26],
[44,50,47,53,59,0,37,43],
[35,32,36,44,43,44,0,43],
[49,56,44,65,55,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,34,38,32,38,44,37],
[46,0,46,45,41,45,47,38],
[47,35,0,46,42,47,47,36],
[43,36,35,0,40,43,43,41],
[49,40,39,41,0,44,50,36],
[43,36,34,38,37,0,46,37],
[37,34,34,38,31,35,0,37],
[44,43,45,40,45,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,36,42,40,39,59],
[45,0,40,32,40,41,32,58],
[42,41,0,41,38,28,45,57],
[45,49,40,0,49,39,41,55],
[39,41,43,32,0,40,36,57],
[41,40,53,42,41,0,52,46],
[42,49,36,40,45,29,0,54],
[22,23,24,26,24,35,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,20,32,31,21,57,20],
[48,0,32,45,20,21,48,56],
[61,49,0,47,20,46,37,36],
[49,36,34,0,32,24,36,23],
[50,61,61,49,0,37,48,36],
[60,60,35,57,44,0,47,47],
[24,33,44,45,33,34,0,44],
[61,25,45,58,45,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,44,39,45,60,47],
[42,0,42,45,27,41,42,44],
[44,39,0,50,44,59,60,53],
[37,36,31,0,50,41,55,37],
[42,54,37,31,0,45,54,56],
[36,40,22,40,36,0,35,51],
[21,39,21,26,27,46,0,27],
[34,37,28,44,25,30,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,44,45,52,38,48,49],
[47,0,48,35,45,48,55,46],
[37,33,0,37,33,30,34,41],
[36,46,44,0,41,36,38,35],
[29,36,48,40,0,40,39,44],
[43,33,51,45,41,0,49,44],
[33,26,47,43,42,32,0,37],
[32,35,40,46,37,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,40,52,40,40,35],
[36,0,47,45,47,46,48,43],
[34,34,0,34,39,38,35,28],
[41,36,47,0,46,40,35,41],
[29,34,42,35,0,40,39,36],
[41,35,43,41,41,0,39,33],
[41,33,46,46,42,42,0,46],
[46,38,53,40,45,48,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,34,36,37,40,27],
[53,0,41,40,42,54,38,43],
[50,40,0,48,52,51,48,41],
[47,41,33,0,29,40,32,35],
[45,39,29,52,0,45,48,34],
[44,27,30,41,36,0,32,25],
[41,43,33,49,33,49,0,32],
[54,38,40,46,47,56,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,40,40,37,43,35],
[44,0,49,38,38,44,49,43],
[39,32,0,33,38,34,47,33],
[41,43,48,0,39,38,43,35],
[41,43,43,42,0,38,49,32],
[44,37,47,43,43,0,45,39],
[38,32,34,38,32,36,0,32],
[46,38,48,46,49,42,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,48,43,55,42,45],
[40,0,56,52,42,48,41,53],
[41,25,0,34,42,52,49,38],
[33,29,47,0,41,33,21,45],
[38,39,39,40,0,38,33,48],
[26,33,29,48,43,0,36,41],
[39,40,32,60,48,45,0,48],
[36,28,43,36,33,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,32,40,35,41,33,43],
[45,0,38,41,34,42,39,34],
[49,43,0,50,37,44,48,45],
[41,40,31,0,38,40,34,42],
[46,47,44,43,0,47,36,46],
[40,39,37,41,34,0,38,46],
[48,42,33,47,45,43,0,48],
[38,47,36,39,35,35,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,46,45,49,51,46],
[35,0,48,45,34,52,46,41],
[43,33,0,44,37,49,45,49],
[35,36,37,0,23,37,36,54],
[36,47,44,58,0,56,50,62],
[32,29,32,44,25,0,41,48],
[30,35,36,45,31,40,0,47],
[35,40,32,27,19,33,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,25,47,31,47,50,32],
[29,0,32,39,31,35,46,34],
[56,49,0,54,42,39,49,50],
[34,42,27,0,32,34,41,18],
[50,50,39,49,0,60,46,44],
[34,46,42,47,21,0,51,22],
[31,35,32,40,35,30,0,40],
[49,47,31,63,37,59,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,41,28,37,38,51,29],
[33,0,43,38,33,45,52,27],
[40,38,0,31,32,48,45,33],
[53,43,50,0,38,48,50,42],
[44,48,49,43,0,57,54,36],
[43,36,33,33,24,0,40,34],
[30,29,36,31,27,41,0,27],
[52,54,48,39,45,47,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,42,45,43,39,38,46],
[33,0,34,33,37,29,32,38],
[39,47,0,44,46,36,37,46],
[36,48,37,0,41,46,36,51],
[38,44,35,40,0,37,35,41],
[42,52,45,35,44,0,41,42],
[43,49,44,45,46,40,0,49],
[35,43,35,30,40,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,38,37,43,44,44],
[38,0,42,39,44,44,42,36],
[42,39,0,38,50,38,41,39],
[43,42,43,0,45,44,46,39],
[44,37,31,36,0,40,42,38],
[38,37,43,37,41,0,41,37],
[37,39,40,35,39,40,0,43],
[37,45,42,42,43,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,46,30,15,30,30,31],
[66,0,49,48,33,33,49,49],
[35,32,0,48,33,18,0,18],
[51,33,33,0,31,33,33,16],
[66,48,48,50,0,66,48,31],
[51,48,63,48,15,0,46,31],
[51,32,81,48,33,35,0,49],
[50,32,63,65,50,50,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,44,44,33,33,36],
[34,0,38,40,48,34,26,32],
[40,43,0,43,41,35,41,37],
[37,41,38,0,37,30,32,43],
[37,33,40,44,0,40,32,35],
[48,47,46,51,41,0,35,49],
[48,55,40,49,49,46,0,50],
[45,49,44,38,46,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,40,40,44,43,44],
[41,0,42,45,39,39,33,48],
[38,39,0,31,38,41,35,43],
[41,36,50,0,39,42,32,40],
[41,42,43,42,0,42,37,46],
[37,42,40,39,39,0,34,41],
[38,48,46,49,44,47,0,50],
[37,33,38,41,35,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,39,19,39,19,39,59],
[62,0,20,20,81,42,62,40],
[42,61,0,39,61,42,42,61],
[62,61,42,0,81,22,62,62],
[42,0,20,0,0,0,40,40],
[62,39,39,59,81,0,40,59],
[42,19,39,19,41,41,0,59],
[22,41,20,19,41,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,28,36,38,34,24,49],
[42,0,30,44,37,31,32,44],
[53,51,0,50,42,41,37,54],
[45,37,31,0,43,31,38,51],
[43,44,39,38,0,40,43,53],
[47,50,40,50,41,0,32,47],
[57,49,44,43,38,49,0,51],
[32,37,27,30,28,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,28,35,35,31,38,31],
[43,0,31,40,38,40,39,38],
[53,50,0,53,49,38,54,52],
[46,41,28,0,44,33,40,30],
[46,43,32,37,0,36,41,30],
[50,41,43,48,45,0,47,36],
[43,42,27,41,40,34,0,33],
[50,43,29,51,51,45,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,55,38,73,48,63,38],
[41,0,48,24,65,48,67,48],
[26,33,0,16,44,25,42,22],
[43,57,65,0,65,57,67,40],
[8,16,37,16,0,16,25,29],
[33,33,56,24,65,0,57,30],
[18,14,39,14,56,24,0,31],
[43,33,59,41,52,51,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,40,48,49,47,40,67],
[24,0,39,47,45,33,26,54],
[41,42,0,34,33,35,15,37],
[33,34,47,0,46,30,31,60],
[32,36,48,35,0,35,24,52],
[34,48,46,51,46,0,42,59],
[41,55,66,50,57,39,0,62],
[14,27,44,21,29,22,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,40,43,40,37,42],
[39,0,41,45,49,41,44,49],
[40,40,0,41,45,47,48,50],
[41,36,40,0,45,40,42,46],
[38,32,36,36,0,36,43,38],
[41,40,34,41,45,0,38,48],
[44,37,33,39,38,43,0,44],
[39,32,31,35,43,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,45,42,41,46,40,44],
[33,0,32,30,41,39,34,39],
[36,49,0,36,42,42,45,36],
[39,51,45,0,42,40,44,41],
[40,40,39,39,0,41,39,37],
[35,42,39,41,40,0,35,33],
[41,47,36,37,42,46,0,42],
[37,42,45,40,44,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,51,41,29,23,44],
[40,0,32,27,47,29,27,30],
[47,49,0,41,52,26,47,39],
[30,54,40,0,57,36,28,47],
[40,34,29,24,0,32,34,24],
[52,52,55,45,49,0,40,42],
[58,54,34,53,47,41,0,45],
[37,51,42,34,57,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,47,44,45,44,33],
[37,0,34,48,61,66,38,34],
[47,47,0,36,47,47,47,45],
[34,33,45,0,51,45,32,45],
[37,20,34,30,0,40,22,28],
[36,15,34,36,41,0,26,33],
[37,43,34,49,59,55,0,34],
[48,47,36,36,53,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,16,50,33,33,34,17],
[30,0,16,47,47,33,50,31],
[65,65,0,48,81,50,34,31],
[31,34,33,0,50,50,34,48],
[48,34,0,31,0,17,34,14],
[48,48,31,31,64,0,31,48],
[47,31,47,47,47,50,0,31],
[64,50,50,33,67,33,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,33,42,40,31,39],
[45,0,47,41,47,38,35,50],
[32,34,0,30,37,40,34,35],
[48,40,51,0,45,47,42,46],
[39,34,44,36,0,35,34,48],
[41,43,41,34,46,0,41,52],
[50,46,47,39,47,40,0,62],
[42,31,46,35,33,29,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,34,46,39,35,43],
[40,0,42,40,47,46,39,46],
[47,39,0,37,41,42,43,43],
[47,41,44,0,51,52,39,54],
[35,34,40,30,0,35,35,44],
[42,35,39,29,46,0,32,44],
[46,42,38,42,46,49,0,50],
[38,35,38,27,37,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,41,27,28,14,28,27],
[27,0,27,40,27,27,41,27],
[40,54,0,67,41,54,55,40],
[54,41,14,0,41,54,55,27],
[53,54,40,40,0,54,54,54],
[67,54,27,27,27,0,40,27],
[53,40,26,26,27,41,0,27],
[54,54,41,54,27,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,39,34,44,55,42,46],
[29,0,30,35,47,43,33,35],
[42,51,0,45,51,57,39,48],
[47,46,36,0,44,50,49,40],
[37,34,30,37,0,51,34,40],
[26,38,24,31,30,0,34,34],
[39,48,42,32,47,47,0,43],
[35,46,33,41,41,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,50,35,41,39,43,42],
[49,0,55,37,49,48,44,54],
[31,26,0,32,35,40,36,35],
[46,44,49,0,47,42,32,50],
[40,32,46,34,0,41,33,40],
[42,33,41,39,40,0,47,46],
[38,37,45,49,48,34,0,50],
[39,27,46,31,41,35,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,51,39,42,44,45],
[44,0,46,56,37,38,43,48],
[34,35,0,44,32,28,41,35],
[30,25,37,0,30,27,38,33],
[42,44,49,51,0,34,38,41],
[39,43,53,54,47,0,42,44],
[37,38,40,43,43,39,0,41],
[36,33,46,48,40,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,38,38,32,36,38,32],
[54,0,47,42,41,41,40,39],
[43,34,0,39,31,46,44,36],
[43,39,42,0,36,44,46,41],
[49,40,50,45,0,52,47,43],
[45,40,35,37,29,0,38,41],
[43,41,37,35,34,43,0,41],
[49,42,45,40,38,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,55,46,49,50,37],
[34,0,43,49,47,38,42,42],
[41,38,0,57,45,43,45,44],
[26,32,24,0,43,32,33,33],
[35,34,36,38,0,40,34,34],
[32,43,38,49,41,0,35,40],
[31,39,36,48,47,46,0,38],
[44,39,37,48,47,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,41,41,37,43,46],
[42,0,42,44,39,46,42,46],
[39,39,0,41,32,45,43,50],
[40,37,40,0,29,39,41,41],
[40,42,49,52,0,47,51,48],
[44,35,36,42,34,0,43,44],
[38,39,38,40,30,38,0,40],
[35,35,31,40,33,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,43,50,54,39,38,55],
[26,0,32,39,40,31,32,36],
[38,49,0,54,52,43,43,56],
[31,42,27,0,45,39,32,33],
[27,41,29,36,0,32,35,41],
[42,50,38,42,49,0,43,45],
[43,49,38,49,46,38,0,53],
[26,45,25,48,40,36,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,34,31,45,38,37],
[39,0,44,39,38,40,44,41],
[40,37,0,35,37,33,38,33],
[47,42,46,0,36,46,44,47],
[50,43,44,45,0,45,39,42],
[36,41,48,35,36,0,40,38],
[43,37,43,37,42,41,0,38],
[44,40,48,34,39,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,59,45,35,46,57,81],
[35,0,47,11,35,47,35,47],
[22,34,0,45,11,34,34,46],
[36,70,36,0,47,36,58,59],
[46,46,70,34,0,34,46,58],
[35,34,47,45,47,0,57,58],
[24,46,47,23,35,24,0,59],
[0,34,35,22,23,23,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,45,37,34,47,42,34],
[47,0,52,49,39,45,49,43],
[36,29,0,35,33,27,36,37],
[44,32,46,0,40,43,40,35],
[47,42,48,41,0,38,47,47],
[34,36,54,38,43,0,40,40],
[39,32,45,41,34,41,0,33],
[47,38,44,46,34,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,36,39,49,40,36],
[45,0,41,39,41,52,40,47],
[40,40,0,37,33,56,38,40],
[45,42,44,0,40,52,40,39],
[42,40,48,41,0,56,43,53],
[32,29,25,29,25,0,36,30],
[41,41,43,41,38,45,0,43],
[45,34,41,42,28,51,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,37,36,36,37,35],
[44,0,42,40,42,41,45,43],
[39,39,0,35,40,42,42,35],
[44,41,46,0,40,45,44,40],
[45,39,41,41,0,47,44,40],
[45,40,39,36,34,0,41,36],
[44,36,39,37,37,40,0,35],
[46,38,46,41,41,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,34,49,36,52,32],
[47,0,45,34,35,33,48,44],
[35,36,0,29,29,27,56,32],
[47,47,52,0,45,30,64,45],
[32,46,52,36,0,32,39,36],
[45,48,54,51,49,0,59,29],
[29,33,25,17,42,22,0,22],
[49,37,49,36,45,52,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,40,51,58,43,46],
[46,0,42,44,31,48,44,38],
[51,39,0,44,45,52,47,35],
[41,37,37,0,46,57,44,41],
[30,50,36,35,0,46,53,42],
[23,33,29,24,35,0,44,25],
[38,37,34,37,28,37,0,32],
[35,43,46,40,39,56,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,32,43,37,30,30,41],
[40,0,26,32,37,35,25,32],
[49,55,0,48,47,48,40,44],
[38,49,33,0,45,44,42,38],
[44,44,34,36,0,40,32,40],
[51,46,33,37,41,0,39,35],
[51,56,41,39,49,42,0,45],
[40,49,37,43,41,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,37,31,33,31,37],
[46,0,45,49,38,50,43,39],
[43,36,0,43,37,38,37,36],
[44,32,38,0,40,36,38,32],
[50,43,44,41,0,43,39,41],
[48,31,43,45,38,0,39,36],
[50,38,44,43,42,42,0,39],
[44,42,45,49,40,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,35,43,44,53,44],
[43,0,49,48,47,54,49,40],
[37,32,0,38,45,41,49,38],
[46,33,43,0,40,42,42,45],
[38,34,36,41,0,37,37,38],
[37,27,40,39,44,0,43,47],
[28,32,32,39,44,38,0,48],
[37,41,43,36,43,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,39,61,41,61,61,61],
[20,0,40,20,20,62,62,42],
[42,41,0,22,42,42,22,42],
[20,61,59,0,42,81,42,61],
[40,61,39,39,0,61,42,61],
[20,19,39,0,20,0,42,42],
[20,19,59,39,39,39,0,39],
[20,39,39,20,20,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,36,38,35,38,34,38],
[40,0,32,38,40,35,31,37],
[45,49,0,40,36,41,44,44],
[43,43,41,0,35,42,37,43],
[46,41,45,46,0,42,39,50],
[43,46,40,39,39,0,33,44],
[47,50,37,44,42,48,0,43],
[43,44,37,38,31,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,48,38,42,46,46],
[42,0,39,40,34,34,43,41],
[35,42,0,40,42,44,36,37],
[33,41,41,0,35,36,40,42],
[43,47,39,46,0,41,44,51],
[39,47,37,45,40,0,43,39],
[35,38,45,41,37,38,0,39],
[35,40,44,39,30,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,35,36,41,40,44,42],
[49,0,34,34,36,29,40,34],
[46,47,0,38,43,45,44,40],
[45,47,43,0,35,34,46,37],
[40,45,38,46,0,37,43,37],
[41,52,36,47,44,0,43,44],
[37,41,37,35,38,38,0,38],
[39,47,41,44,44,37,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,39,29,34,36,38],
[44,0,56,38,34,29,39,40],
[45,25,0,24,38,32,32,38],
[42,43,57,0,40,37,49,42],
[52,47,43,41,0,40,46,53],
[47,52,49,44,41,0,45,40],
[45,42,49,32,35,36,0,33],
[43,41,43,39,28,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,38,32,42,33,32],
[37,0,54,27,38,36,40,38],
[43,27,0,38,31,32,27,36],
[43,54,43,0,39,47,44,43],
[49,43,50,42,0,48,42,31],
[39,45,49,34,33,0,44,32],
[48,41,54,37,39,37,0,33],
[49,43,45,38,50,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,44,36,42,34,30],
[40,0,40,46,43,40,31,44],
[50,41,0,46,55,43,35,43],
[37,35,35,0,41,44,19,32],
[45,38,26,40,0,49,37,40],
[39,41,38,37,32,0,26,35],
[47,50,46,62,44,55,0,38],
[51,37,38,49,41,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,56,39,46,43,32,41],
[36,0,43,35,42,35,32,42],
[25,38,0,28,38,28,29,33],
[42,46,53,0,42,39,35,49],
[35,39,43,39,0,44,32,43],
[38,46,53,42,37,0,41,44],
[49,49,52,46,49,40,0,48],
[40,39,48,32,38,37,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,53,39,53,66,54,53],
[56,0,40,41,68,81,56,68],
[28,41,0,41,28,56,43,56],
[42,40,40,0,27,55,43,68],
[28,13,53,54,0,41,41,53],
[15,0,25,26,40,0,26,40],
[27,25,38,38,40,55,0,55],
[28,13,25,13,28,41,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,47,48,43,41,47],
[44,0,48,44,46,47,36,50],
[34,33,0,36,38,44,38,42],
[34,37,45,0,47,44,32,41],
[33,35,43,34,0,38,34,41],
[38,34,37,37,43,0,38,45],
[40,45,43,49,47,43,0,47],
[34,31,39,40,40,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,46,36,33,45,38],
[38,0,39,32,41,44,43,45],
[35,42,0,42,38,36,40,31],
[35,49,39,0,46,44,41,44],
[45,40,43,35,0,38,39,34],
[48,37,45,37,43,0,38,35],
[36,38,41,40,42,43,0,30],
[43,36,50,37,47,46,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,30,47,47,34,34,45],
[52,0,43,49,53,41,34,50],
[51,38,0,39,54,46,44,49],
[34,32,42,0,50,39,33,43],
[34,28,27,31,0,26,34,31],
[47,40,35,42,55,0,45,45],
[47,47,37,48,47,36,0,38],
[36,31,32,38,50,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,36,40,46,40,41,33],
[33,0,31,36,33,29,25,23],
[45,50,0,54,43,48,42,40],
[41,45,27,0,40,33,35,24],
[35,48,38,41,0,40,31,36],
[41,52,33,48,41,0,42,44],
[40,56,39,46,50,39,0,42],
[48,58,41,57,45,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,24,53,32,32,40],
[29,0,38,41,41,29,41,60],
[21,43,0,21,21,21,33,31],
[57,40,60,0,50,29,41,51],
[28,40,60,31,0,22,31,40],
[49,52,60,52,59,0,51,40],
[49,40,48,40,50,30,0,40],
[41,21,50,30,41,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,44,42,49,47,38],
[42,0,46,42,38,48,44,44],
[34,35,0,44,38,39,41,30],
[37,39,37,0,40,42,39,40],
[39,43,43,41,0,54,41,42],
[32,33,42,39,27,0,39,41],
[34,37,40,42,40,42,0,32],
[43,37,51,41,39,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,45,50,44,42,39,38],
[27,0,31,34,44,36,24,43],
[36,50,0,45,43,38,46,46],
[31,47,36,0,40,37,30,39],
[37,37,38,41,0,42,34,41],
[39,45,43,44,39,0,29,38],
[42,57,35,51,47,52,0,42],
[43,38,35,42,40,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,44,41,51,36,40],
[43,0,46,44,38,47,41,36],
[40,35,0,39,36,37,32,36],
[37,37,42,0,34,43,35,44],
[40,43,45,47,0,51,42,34],
[30,34,44,38,30,0,34,38],
[45,40,49,46,39,47,0,43],
[41,45,45,37,47,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,48,54,53,50,63,38],
[31,0,37,47,29,40,37,27],
[33,44,0,48,37,48,50,30],
[27,34,33,0,17,25,49,24],
[28,52,44,64,0,53,47,49],
[31,41,33,56,28,0,51,34],
[18,44,31,32,34,30,0,22],
[43,54,51,57,32,47,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,32,34,42,46,37],
[46,0,42,39,45,41,47,49],
[46,39,0,41,47,45,45,38],
[49,42,40,0,56,56,56,56],
[47,36,34,25,0,31,38,42],
[39,40,36,25,50,0,39,29],
[35,34,36,25,43,42,0,37],
[44,32,43,25,39,52,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,19,36,37,19,35,19],
[61,0,56,44,53,56,53,37],
[62,25,0,36,35,43,62,47],
[45,37,45,0,44,36,44,28],
[44,28,46,37,0,46,44,46],
[62,25,38,45,35,0,43,37],
[46,28,19,37,37,38,0,47],
[62,44,34,53,35,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,48,37,42,41,35],
[37,0,37,46,34,34,39,36],
[40,44,0,44,41,37,42,34],
[33,35,37,0,29,33,37,30],
[44,47,40,52,0,46,47,41],
[39,47,44,48,35,0,46,30],
[40,42,39,44,34,35,0,34],
[46,45,47,51,40,51,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,33,33,38,25,34,34],
[43,0,44,40,37,49,41,43],
[48,37,0,45,43,36,44,47],
[48,41,36,0,40,34,32,43],
[43,44,38,41,0,38,38,37],
[56,32,45,47,43,0,40,41],
[47,40,37,49,43,41,0,41],
[47,38,34,38,44,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,42,31,56,56,49],
[39,0,23,42,33,49,40,33],
[44,58,0,51,42,51,40,58],
[39,39,30,0,21,39,30,46],
[50,48,39,60,0,51,58,42],
[25,32,30,42,30,0,30,39],
[25,41,41,51,23,51,0,49],
[32,48,23,35,39,42,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,28,50,39,20,59,50],
[51,0,50,58,49,39,70,28],
[53,31,0,61,60,50,70,39],
[31,23,20,0,29,30,48,39],
[42,32,21,52,0,30,59,30],
[61,42,31,51,51,0,59,39],
[22,11,11,33,22,22,0,11],
[31,53,42,42,51,42,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,0,39,20,20,21,12],
[50,0,21,29,11,29,38,34],
[81,60,0,50,53,28,50,40],
[42,52,31,0,31,21,40,44],
[61,70,28,50,0,37,60,41],
[61,52,53,60,44,0,52,33],
[60,43,31,41,21,29,0,23],
[69,47,41,37,40,48,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,48,37,42,42,44,43],
[47,0,44,42,38,47,42,47],
[33,37,0,35,34,38,33,39],
[44,39,46,0,38,46,38,41],
[39,43,47,43,0,32,50,49],
[39,34,43,35,49,0,42,44],
[37,39,48,43,31,39,0,46],
[38,34,42,40,32,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,53,50,50,38,32,40],
[50,0,55,39,41,40,49,41],
[28,26,0,35,38,34,25,35],
[31,42,46,0,41,40,31,37],
[31,40,43,40,0,31,29,36],
[43,41,47,41,50,0,34,40],
[49,32,56,50,52,47,0,49],
[41,40,46,44,45,41,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,51,42,43,47,43],
[40,0,40,50,43,46,41,50],
[41,41,0,45,35,39,39,40],
[30,31,36,0,31,40,35,35],
[39,38,46,50,0,44,43,43],
[38,35,42,41,37,0,42,32],
[34,40,42,46,38,39,0,46],
[38,31,41,46,38,49,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,37,26,35,23,30],
[44,0,39,44,36,37,44,42],
[52,42,0,46,41,45,38,45],
[44,37,35,0,36,38,37,37],
[55,45,40,45,0,41,41,39],
[46,44,36,43,40,0,43,42],
[58,37,43,44,40,38,0,40],
[51,39,36,44,42,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,49,39,40,36,40,36],
[48,0,43,28,39,43,36,35],
[32,38,0,36,40,45,35,34],
[42,53,45,0,30,45,42,39],
[41,42,41,51,0,45,39,32],
[45,38,36,36,36,0,30,35],
[41,45,46,39,42,51,0,41],
[45,46,47,42,49,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,56,56,56,37,43],
[34,0,40,60,44,50,34,34],
[34,41,0,69,37,55,57,43],
[25,21,12,0,22,28,32,13],
[25,37,44,59,0,69,40,40],
[25,31,26,53,12,0,32,33],
[44,47,24,49,41,49,0,37],
[38,47,38,68,41,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,39,38,43,41,40],
[39,0,39,38,35,37,38,37],
[41,42,0,37,43,45,45,41],
[42,43,44,0,36,45,45,45],
[43,46,38,45,0,42,44,39],
[38,44,36,36,39,0,42,35],
[40,43,36,36,37,39,0,38],
[41,44,40,36,42,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,40,50,48,46,36,42],
[33,0,44,27,43,51,28,28],
[41,37,0,38,39,34,44,28],
[31,54,43,0,43,47,41,37],
[33,38,42,38,0,42,35,32],
[35,30,47,34,39,0,35,31],
[45,53,37,40,46,46,0,36],
[39,53,53,44,49,50,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,43,44,41,45,49],
[38,0,54,54,32,45,31,45],
[41,27,0,41,46,32,34,43],
[38,27,40,0,41,40,34,48],
[37,49,35,40,0,36,47,47],
[40,36,49,41,45,0,35,39],
[36,50,47,47,34,46,0,56],
[32,36,38,33,34,42,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,36,41,37,37,33,34],
[51,0,48,49,40,43,47,46],
[45,33,0,48,41,41,41,38],
[40,32,33,0,35,39,36,34],
[44,41,40,46,0,43,41,39],
[44,38,40,42,38,0,41,34],
[48,34,40,45,40,40,0,40],
[47,35,43,47,42,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,43,36,53,39,31],
[37,0,40,49,33,50,43,39],
[38,41,0,48,44,46,40,38],
[38,32,33,0,43,47,39,36],
[45,48,37,38,0,44,48,41],
[28,31,35,34,37,0,35,37],
[42,38,41,42,33,46,0,38],
[50,42,43,45,40,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,43,36,33,43,33],
[45,0,42,41,38,43,49,32],
[47,39,0,47,37,40,50,45],
[38,40,34,0,36,38,42,33],
[45,43,44,45,0,40,49,40],
[48,38,41,43,41,0,43,33],
[38,32,31,39,32,38,0,31],
[48,49,36,48,41,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,64,33,64,81,48],
[15,0,48,32,32,15,15,32],
[15,33,0,32,17,48,32,32],
[17,49,49,0,34,48,64,48],
[48,49,64,47,0,47,64,31],
[17,66,33,33,34,0,50,48],
[0,66,49,17,17,31,0,32],
[33,49,49,33,50,33,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,30,32,38,33,41],
[47,0,44,42,41,46,38,50],
[47,37,0,39,39,38,39,43],
[51,39,42,0,43,44,43,47],
[49,40,42,38,0,47,46,46],
[43,35,43,37,34,0,42,49],
[48,43,42,38,35,39,0,41],
[40,31,38,34,35,32,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,35,43,41,39,46],
[47,0,46,40,45,53,54,54],
[44,35,0,46,50,47,52,49],
[46,41,35,0,53,57,53,53],
[38,36,31,28,0,44,35,29],
[40,28,34,24,37,0,41,46],
[42,27,29,28,46,40,0,40],
[35,27,32,28,52,35,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,44,35,34,46,46,23],
[48,0,44,34,34,34,57,23],
[37,37,0,36,48,35,24,48],
[46,47,45,0,36,35,45,48],
[47,47,33,45,0,34,46,34],
[35,47,46,46,47,0,46,36],
[35,24,57,36,35,35,0,47],
[58,58,33,33,47,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,42,42,32,31,37,37],
[46,0,47,51,38,39,40,41],
[39,34,0,44,35,42,36,33],
[39,30,37,0,25,29,24,41],
[49,43,46,56,0,43,41,35],
[50,42,39,52,38,0,46,43],
[44,41,45,57,40,35,0,39],
[44,40,48,40,46,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,43,42,41,50,36],
[42,0,52,40,41,40,44,40],
[33,29,0,36,37,32,44,33],
[38,41,45,0,38,33,44,36],
[39,40,44,43,0,36,45,41],
[40,41,49,48,45,0,45,44],
[31,37,37,37,36,36,0,36],
[45,41,48,45,40,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,48,45,39,39,46,45],
[45,0,38,41,50,46,42,37],
[33,43,0,39,40,41,44,30],
[36,40,42,0,35,38,38,40],
[42,31,41,46,0,41,41,36],
[42,35,40,43,40,0,37,34],
[35,39,37,43,40,44,0,39],
[36,44,51,41,45,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,47,51,52,40,38],
[35,0,50,35,45,40,42,41],
[32,31,0,38,44,33,43,39],
[34,46,43,0,41,41,42,39],
[30,36,37,40,0,43,32,28],
[29,41,48,40,38,0,37,36],
[41,39,38,39,49,44,0,33],
[43,40,42,42,53,45,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,55,45,37,45,39,47],
[38,0,48,39,44,42,44,42],
[26,33,0,28,38,39,32,29],
[36,42,53,0,43,48,40,42],
[44,37,43,38,0,43,43,41],
[36,39,42,33,38,0,44,40],
[42,37,49,41,38,37,0,42],
[34,39,52,39,40,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,23,33,25,38,31],
[50,0,39,29,34,24,43,43],
[52,42,0,43,42,40,44,51],
[58,52,38,0,41,45,56,56],
[48,47,39,40,0,47,45,48],
[56,57,41,36,34,0,48,50],
[43,38,37,25,36,33,0,42],
[50,38,30,25,33,31,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,46,48,40,46,45],
[34,0,37,40,34,34,41,38],
[39,44,0,39,37,36,45,46],
[35,41,42,0,44,42,44,45],
[33,47,44,37,0,48,39,48],
[41,47,45,39,33,0,44,44],
[35,40,36,37,42,37,0,39],
[36,43,35,36,33,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,40,41,28,42,39],
[37,0,37,43,46,33,42,42],
[42,44,0,38,39,32,39,39],
[41,38,43,0,48,33,33,36],
[40,35,42,33,0,44,32,37],
[53,48,49,48,37,0,40,49],
[39,39,42,48,49,41,0,40],
[42,39,42,45,44,32,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,49,38,51,48,33],
[33,0,48,34,41,45,45,33],
[33,33,0,33,28,30,33,26],
[32,47,48,0,23,38,49,40],
[43,40,53,58,0,54,56,41],
[30,36,51,43,27,0,41,32],
[33,36,48,32,25,40,0,23],
[48,48,55,41,40,49,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,41,51,45,45,52],
[35,0,40,40,46,40,42,50],
[41,41,0,41,47,44,40,52],
[40,41,40,0,49,45,42,53],
[30,35,34,32,0,30,37,41],
[36,41,37,36,51,0,40,44],
[36,39,41,39,44,41,0,50],
[29,31,29,28,40,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,17,33,14,34,17,50],
[31,0,31,47,31,17,31,31],
[64,50,0,47,31,17,48,64],
[48,34,34,0,31,17,48,48],
[67,50,50,50,0,50,17,67],
[47,64,64,64,31,0,31,64],
[64,50,33,33,64,50,0,50],
[31,50,17,33,14,17,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,34,35,33,27,38,29],
[50,0,39,43,38,38,34,42],
[47,42,0,44,38,44,39,40],
[46,38,37,0,31,45,32,40],
[48,43,43,50,0,35,38,37],
[54,43,37,36,46,0,43,22],
[43,47,42,49,43,38,0,39],
[52,39,41,41,44,59,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,38,47,41,39,41,44],
[30,0,28,26,18,30,27,39],
[43,53,0,30,34,40,35,54],
[34,55,51,0,47,46,53,51],
[40,63,47,34,0,43,53,56],
[42,51,41,35,38,0,48,45],
[40,54,46,28,28,33,0,52],
[37,42,27,30,25,36,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,41,17,48,48,66,39],
[33,0,47,17,49,23,34,41],
[40,34,0,24,40,16,25,24],
[64,64,57,0,47,55,66,39],
[33,32,41,34,0,32,50,49],
[33,58,65,26,49,0,58,56],
[15,47,56,15,31,23,0,31],
[42,40,57,42,32,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,46,49,40,44,35,41],
[50,0,47,47,43,39,42,40],
[35,34,0,44,33,41,40,32],
[32,34,37,0,31,32,41,45],
[41,38,48,50,0,40,35,34],
[37,42,40,49,41,0,43,39],
[46,39,41,40,46,38,0,47],
[40,41,49,36,47,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,38,50,50,41,38],
[40,0,38,37,44,49,34,45],
[38,43,0,35,44,51,38,42],
[43,44,46,0,51,45,52,40],
[31,37,37,30,0,39,31,37],
[31,32,30,36,42,0,38,36],
[40,47,43,29,50,43,0,43],
[43,36,39,41,44,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,44,50,49,40,48],
[42,0,44,44,53,55,41,38],
[50,37,0,55,48,51,42,40],
[37,37,26,0,40,50,35,31],
[31,28,33,41,0,39,39,36],
[32,26,30,31,42,0,45,37],
[41,40,39,46,42,36,0,32],
[33,43,41,50,45,44,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,42,42,38,41,37],
[34,0,40,37,40,38,37,39],
[35,41,0,31,43,36,35,39],
[39,44,50,0,40,36,45,45],
[39,41,38,41,0,41,39,47],
[43,43,45,45,40,0,48,46],
[40,44,46,36,42,33,0,45],
[44,42,42,36,34,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,50,40,46,43,62,28],
[43,0,46,52,42,40,64,43],
[31,35,0,48,30,29,55,17],
[41,29,33,0,24,40,34,35],
[35,39,51,57,0,28,57,36],
[38,41,52,41,53,0,53,48],
[19,17,26,47,24,28,0,16],
[53,38,64,46,45,33,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,45,39,43,48,42],
[47,0,43,44,40,48,48,47],
[43,38,0,44,41,48,43,44],
[36,37,37,0,44,47,47,47],
[42,41,40,37,0,37,43,44],
[38,33,33,34,44,0,44,45],
[33,33,38,34,38,37,0,41],
[39,34,37,34,37,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,37,31,41,46,39],
[46,0,27,43,38,30,49,31],
[42,54,0,40,39,38,55,35],
[44,38,41,0,34,41,41,33],
[50,43,42,47,0,39,51,42],
[40,51,43,40,42,0,45,45],
[35,32,26,40,30,36,0,33],
[42,50,46,48,39,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,38,41,32,48,42],
[33,0,47,32,35,34,42,40],
[37,34,0,35,44,46,50,38],
[43,49,46,0,40,51,56,38],
[40,46,37,41,0,47,56,41],
[49,47,35,30,34,0,52,34],
[33,39,31,25,25,29,0,34],
[39,41,43,43,40,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,39,39,36,38,36],
[48,0,53,47,41,41,40,44],
[39,28,0,35,35,32,32,32],
[42,34,46,0,38,35,35,33],
[42,40,46,43,0,38,43,43],
[45,40,49,46,43,0,33,43],
[43,41,49,46,38,48,0,41],
[45,37,49,48,38,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,38,39,36,41,39],
[43,0,38,46,47,45,39,37],
[45,43,0,42,43,39,41,37],
[43,35,39,0,35,33,44,37],
[42,34,38,46,0,30,38,40],
[45,36,42,48,51,0,45,39],
[40,42,40,37,43,36,0,41],
[42,44,44,44,41,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,41,55,27,41,41,41],
[27,0,53,29,54,54,40,54],
[40,28,0,29,42,41,41,29],
[26,52,52,0,53,67,52,39],
[54,27,39,28,0,55,40,40],
[40,27,40,14,26,0,27,28],
[40,41,40,29,41,54,0,54],
[40,27,52,42,41,53,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,37,47,41,53,41],
[41,0,34,32,45,35,45,38],
[40,47,0,37,34,45,46,50],
[44,49,44,0,36,39,46,41],
[34,36,47,45,0,44,54,46],
[40,46,36,42,37,0,41,42],
[28,36,35,35,27,40,0,28],
[40,43,31,40,35,39,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,48,36,45,50,52],
[35,0,34,35,34,28,29,33],
[38,47,0,47,40,47,39,49],
[33,46,34,0,32,32,35,41],
[45,47,41,49,0,38,39,49],
[36,53,34,49,43,0,43,49],
[31,52,42,46,42,38,0,51],
[29,48,32,40,32,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,45,43,47,40,29,38],
[47,0,51,36,37,42,41,41],
[36,30,0,34,35,36,26,33],
[38,45,47,0,41,47,37,39],
[34,44,46,40,0,43,36,39],
[41,39,45,34,38,0,35,40],
[52,40,55,44,45,46,0,41],
[43,40,48,42,42,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,40,39,41,44,39],
[38,0,37,31,39,35,39,35],
[38,44,0,36,40,41,46,35],
[41,50,45,0,41,41,41,39],
[42,42,41,40,0,38,38,38],
[40,46,40,40,43,0,38,38],
[37,42,35,40,43,43,0,42],
[42,46,46,42,43,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,50,50,41,43,43],
[35,0,32,43,43,38,37,40],
[43,49,0,43,53,46,37,40],
[31,38,38,0,54,40,32,33],
[31,38,28,27,0,31,31,29],
[40,43,35,41,50,0,35,35],
[38,44,44,49,50,46,0,42],
[38,41,41,48,52,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,24,32,48,30,46],
[35,0,45,29,29,59,37,51],
[41,36,0,28,14,36,36,36],
[57,52,53,0,30,44,45,50],
[49,52,67,51,0,61,37,51],
[33,22,45,37,20,0,35,42],
[51,44,45,36,44,46,0,50],
[35,30,45,31,30,39,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,54,52,52,38,37,50],
[31,0,42,32,42,45,41,41],
[27,39,0,34,35,42,40,43],
[29,49,47,0,37,33,42,52],
[29,39,46,44,0,41,37,43],
[43,36,39,48,40,0,43,43],
[44,40,41,39,44,38,0,57],
[31,40,38,29,38,38,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,37,38,41,37,40],
[44,0,44,36,40,41,34,42],
[52,37,0,40,43,45,39,50],
[44,45,41,0,36,39,41,53],
[43,41,38,45,0,39,35,47],
[40,40,36,42,42,0,38,39],
[44,47,42,40,46,43,0,52],
[41,39,31,28,34,42,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,48,53,49,40,38,46],
[36,0,48,48,55,46,50,39],
[33,33,0,42,46,34,43,40],
[28,33,39,0,44,34,37,33],
[32,26,35,37,0,36,33,33],
[41,35,47,47,45,0,46,42],
[43,31,38,44,48,35,0,41],
[35,42,41,48,48,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,37,44,47,44,39],
[37,0,37,35,37,37,41,32],
[39,44,0,45,44,43,42,44],
[44,46,36,0,42,41,40,43],
[37,44,37,39,0,41,39,43],
[34,44,38,40,40,0,41,34],
[37,40,39,41,42,40,0,38],
[42,49,37,38,38,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,39,36,43,42,40],
[44,0,41,43,40,44,44,42],
[35,40,0,40,41,38,37,36],
[42,38,41,0,41,44,42,40],
[45,41,40,40,0,40,47,40],
[38,37,43,37,41,0,47,31],
[39,37,44,39,34,34,0,37],
[41,39,45,41,41,50,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,38,39,42,39,40],
[45,0,44,35,33,38,37,42],
[47,37,0,41,36,39,38,34],
[43,46,40,0,32,44,43,34],
[42,48,45,49,0,42,40,39],
[39,43,42,37,39,0,45,38],
[42,44,43,38,41,36,0,43],
[41,39,47,47,42,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,55,46,39,41,37],
[37,0,45,58,38,41,49,47],
[41,36,0,49,37,33,44,35],
[26,23,32,0,32,32,32,30],
[35,43,44,49,0,36,37,35],
[42,40,48,49,45,0,44,42],
[40,32,37,49,44,37,0,36],
[44,34,46,51,46,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,31,45,41,43,49,40],
[21,0,20,16,28,33,41,20],
[50,61,0,50,38,51,57,41],
[36,65,31,0,41,54,51,37],
[40,53,43,40,0,61,46,45],
[38,48,30,27,20,0,47,35],
[32,40,24,30,35,34,0,37],
[41,61,40,44,36,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,45,47,44,40,47],
[34,0,37,47,39,44,35,40],
[38,44,0,42,41,38,44,45],
[36,34,39,0,37,38,33,39],
[34,42,40,44,0,38,42,38],
[37,37,43,43,43,0,39,45],
[41,46,37,48,39,42,0,46],
[34,41,36,42,43,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,40,42,37,33,43],
[36,0,39,41,34,38,48,33],
[35,42,0,39,28,30,39,29],
[41,40,42,0,36,41,48,34],
[39,47,53,45,0,42,43,38],
[44,43,51,40,39,0,37,35],
[48,33,42,33,38,44,0,42],
[38,48,52,47,43,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,35,37,33,37,37,34],
[36,0,39,37,37,39,41,39],
[46,42,0,43,41,40,45,38],
[44,44,38,0,35,38,46,41],
[48,44,40,46,0,48,45,46],
[44,42,41,43,33,0,48,43],
[44,40,36,35,36,33,0,41],
[47,42,43,40,35,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,22,34,34,51,31,22],
[47,0,19,43,31,37,28,50],
[59,62,0,52,41,39,18,40],
[47,38,29,0,39,37,37,50],
[47,50,40,42,0,27,18,49],
[30,44,42,44,54,0,41,42],
[50,53,63,44,63,40,0,41],
[59,31,41,31,32,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,41,33,36,36,28,46],
[50,0,46,37,42,49,43,47],
[40,35,0,29,33,39,34,48],
[48,44,52,0,42,50,36,50],
[45,39,48,39,0,46,41,50],
[45,32,42,31,35,0,33,42],
[53,38,47,45,40,48,0,43],
[35,34,33,31,31,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,52,40,31,45,43,49],
[44,0,45,45,44,29,39,49],
[29,36,0,38,39,35,35,49],
[41,36,43,0,39,37,43,43],
[50,37,42,42,0,33,43,59],
[36,52,46,44,48,0,44,62],
[38,42,46,38,38,37,0,48],
[32,32,32,38,22,19,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,36,42,41,46,33,42],
[36,0,41,33,48,41,37,37],
[45,40,0,30,49,52,42,39],
[39,48,51,0,46,52,45,43],
[40,33,32,35,0,44,44,38],
[35,40,29,29,37,0,34,36],
[48,44,39,36,37,47,0,46],
[39,44,42,38,43,45,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,49,46,49,42,46],
[37,0,34,45,44,37,35,45],
[41,47,0,37,44,42,47,46],
[32,36,44,0,38,35,43,41],
[35,37,37,43,0,40,38,38],
[32,44,39,46,41,0,42,38],
[39,46,34,38,43,39,0,41],
[35,36,35,40,43,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,31,30,27,36,33],
[50,0,38,42,32,41,44,36],
[48,43,0,37,38,44,47,41],
[50,39,44,0,46,45,50,46],
[51,49,43,35,0,43,48,47],
[54,40,37,36,38,0,42,37],
[45,37,34,31,33,39,0,33],
[48,45,40,35,34,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,43,35,39,38,45],
[44,0,36,41,40,38,38,39],
[42,45,0,36,37,37,47,45],
[38,40,45,0,39,45,46,44],
[46,41,44,42,0,45,36,40],
[42,43,44,36,36,0,43,37],
[43,43,34,35,45,38,0,41],
[36,42,36,37,41,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,34,42,40,47,36,46],
[34,0,36,32,31,42,39,43],
[47,45,0,43,42,46,35,43],
[39,49,38,0,28,52,38,40],
[41,50,39,53,0,49,43,49],
[34,39,35,29,32,0,31,40],
[45,42,46,43,38,50,0,46],
[35,38,38,41,32,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,31,45,47,43,38],
[43,0,41,44,48,40,36,48],
[44,40,0,43,32,36,32,41],
[50,37,38,0,40,41,33,46],
[36,33,49,41,0,33,32,41],
[34,41,45,40,48,0,40,43],
[38,45,49,48,49,41,0,43],
[43,33,40,35,40,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,41,42,33,36,41],
[45,0,42,45,46,38,42,41],
[46,39,0,54,49,41,48,47],
[40,36,27,0,38,36,43,45],
[39,35,32,43,0,36,43,45],
[48,43,40,45,45,0,45,46],
[45,39,33,38,38,36,0,49],
[40,40,34,36,36,35,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,49,42,39,41,55,52],
[28,0,28,38,28,37,49,43],
[32,53,0,47,44,30,45,52],
[39,43,34,0,36,29,50,45],
[42,53,37,45,0,42,46,49],
[40,44,51,52,39,0,50,51],
[26,32,36,31,35,31,0,36],
[29,38,29,36,32,30,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,40,33,31,36,38],
[37,0,35,40,38,34,40,40],
[43,46,0,41,43,39,46,47],
[41,41,40,0,40,37,48,42],
[48,43,38,41,0,42,48,49],
[50,47,42,44,39,0,45,46],
[45,41,35,33,33,36,0,37],
[43,41,34,39,32,35,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,36,38,36,42,35],
[45,0,38,44,43,39,46,48],
[47,43,0,44,42,40,47,42],
[45,37,37,0,37,37,46,39],
[43,38,39,44,0,43,43,43],
[45,42,41,44,38,0,48,42],
[39,35,34,35,38,33,0,35],
[46,33,39,42,38,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,42,41,44,40,49],
[36,0,35,31,39,48,39,40],
[35,46,0,38,36,42,40,44],
[39,50,43,0,46,45,41,45],
[40,42,45,35,0,55,40,37],
[37,33,39,36,26,0,36,34],
[41,42,41,40,41,45,0,50],
[32,41,37,36,44,47,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,50,40,41,37,45],
[39,0,47,41,42,43,39,46],
[35,34,0,38,48,37,47,34],
[31,40,43,0,44,33,36,27],
[41,39,33,37,0,27,34,32],
[40,38,44,48,54,0,36,32],
[44,42,34,45,47,45,0,42],
[36,35,47,54,49,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,44,33,31,38,33,36],
[46,0,37,38,38,44,47,37],
[37,44,0,40,33,44,41,41],
[48,43,41,0,37,42,41,39],
[50,43,48,44,0,55,39,42],
[43,37,37,39,26,0,39,30],
[48,34,40,40,42,42,0,44],
[45,44,40,42,39,51,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,52,52,26,55,52,52],
[29,0,26,26,26,29,0,26],
[29,55,0,26,26,55,29,26],
[29,55,55,0,55,29,55,55],
[55,55,55,26,0,55,55,81],
[26,52,26,52,26,0,26,52],
[29,81,52,26,26,55,0,26],
[29,55,55,26,0,29,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,43,33,35,39,39],
[47,0,42,49,41,43,44,37],
[42,39,0,56,43,46,40,42],
[38,32,25,0,37,38,30,39],
[48,40,38,44,0,40,43,36],
[46,38,35,43,41,0,39,46],
[42,37,41,51,38,42,0,35],
[42,44,39,42,45,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,54,27,63,26,37,25],
[36,0,63,55,45,18,27,45],
[27,18,0,27,54,26,28,35],
[54,26,54,0,62,36,53,45],
[18,36,27,19,0,19,27,18],
[55,63,55,45,62,0,36,35],
[44,54,53,28,54,45,0,35],
[56,36,46,36,63,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,46,44,40,46,46],
[36,0,42,40,41,40,35,41],
[38,39,0,40,53,36,39,49],
[35,41,41,0,43,40,41,41],
[37,40,28,38,0,41,40,45],
[41,41,45,41,40,0,36,45],
[35,46,42,40,41,45,0,45],
[35,40,32,40,36,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,50,45,37,53,47,48],
[23,0,37,33,35,36,30,39],
[31,44,0,43,29,43,37,40],
[36,48,38,0,41,41,43,38],
[44,46,52,40,0,50,46,45],
[28,45,38,40,31,0,41,47],
[34,51,44,38,35,40,0,42],
[33,42,41,43,36,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,49,38,45,49,38],
[34,0,33,39,36,38,35,40],
[37,48,0,46,35,40,43,35],
[32,42,35,0,32,38,39,32],
[43,45,46,49,0,51,51,37],
[36,43,41,43,30,0,39,46],
[32,46,38,42,30,42,0,41],
[43,41,46,49,44,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,46,53,48,38,49,48],
[30,0,41,38,41,46,40,35],
[35,40,0,43,41,50,43,36],
[28,43,38,0,46,43,43,31],
[33,40,40,35,0,45,41,40],
[43,35,31,38,36,0,38,33],
[32,41,38,38,40,43,0,33],
[33,46,45,50,41,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,31,38,30,29,39,40],
[51,0,42,45,41,40,52,46],
[50,39,0,38,34,43,43,48],
[43,36,43,0,38,43,46,38],
[51,40,47,43,0,44,54,36],
[52,41,38,38,37,0,47,40],
[42,29,38,35,27,34,0,33],
[41,35,33,43,45,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,21,38,32,47,32,27],
[49,0,30,40,37,57,45,51],
[60,51,0,47,55,56,49,40],
[43,41,34,0,42,59,48,41],
[49,44,26,39,0,47,43,37],
[34,24,25,22,34,0,28,33],
[49,36,32,33,38,53,0,34],
[54,30,41,40,44,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,41,40,35,42,43],
[41,0,43,36,45,41,40,51],
[35,38,0,34,41,40,37,48],
[40,45,47,0,41,37,39,47],
[41,36,40,40,0,34,35,43],
[46,40,41,44,47,0,43,42],
[39,41,44,42,46,38,0,47],
[38,30,33,34,38,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,27,36,41,35,37,34],
[36,0,38,27,45,33,20,46],
[54,43,0,49,40,29,41,31],
[45,54,32,0,44,29,44,43],
[40,36,41,37,0,40,26,34],
[46,48,52,52,41,0,38,41],
[44,61,40,37,55,43,0,42],
[47,35,50,38,47,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,19,25,36,28,34],
[36,0,39,33,37,37,32,38],
[42,42,0,30,33,47,42,46],
[62,48,51,0,34,55,46,44],
[56,44,48,47,0,52,42,39],
[45,44,34,26,29,0,43,32],
[53,49,39,35,39,38,0,37],
[47,43,35,37,42,49,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,37,42,48,39,44],
[44,0,48,45,44,54,40,44],
[39,33,0,45,46,53,43,47],
[44,36,36,0,43,44,30,38],
[39,37,35,38,0,45,38,43],
[33,27,28,37,36,0,30,41],
[42,41,38,51,43,51,0,47],
[37,37,34,43,38,40,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,34,34,46,35,39],
[41,0,38,42,42,46,45,42],
[43,43,0,39,41,45,41,41],
[47,39,42,0,37,45,45,44],
[47,39,40,44,0,46,46,40],
[35,35,36,36,35,0,34,40],
[46,36,40,36,35,47,0,47],
[42,39,40,37,41,41,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,36,41,30,34,43],
[41,0,39,42,52,36,35,38],
[45,42,0,48,47,44,36,42],
[45,39,33,0,43,36,47,35],
[40,29,34,38,0,36,35,30],
[51,45,37,45,45,0,44,47],
[47,46,45,34,46,37,0,42],
[38,43,39,46,51,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,36,46,44,36,49,38],
[33,0,34,37,50,36,39,42],
[45,47,0,35,48,48,58,47],
[35,44,46,0,49,44,48,47],
[37,31,33,32,0,34,44,45],
[45,45,33,37,47,0,44,52],
[32,42,23,33,37,37,0,31],
[43,39,34,34,36,29,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,55,36,41,44,39,44],
[35,0,46,41,41,42,36,45],
[26,35,0,29,38,34,34,40],
[45,40,52,0,47,45,46,47],
[40,40,43,34,0,40,31,39],
[37,39,47,36,41,0,37,44],
[42,45,47,35,50,44,0,45],
[37,36,41,34,42,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,39,44,34,33,35],
[43,0,37,44,51,43,41,40],
[47,44,0,39,51,49,40,46],
[42,37,42,0,47,43,35,45],
[37,30,30,34,0,33,36,30],
[47,38,32,38,48,0,33,37],
[48,40,41,46,45,48,0,45],
[46,41,35,36,51,44,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,43,51,38,43,42,43],
[27,0,37,46,43,30,32,37],
[38,44,0,50,52,42,32,32],
[30,35,31,0,48,22,28,29],
[43,38,29,33,0,33,30,30],
[38,51,39,59,48,0,37,39],
[39,49,49,53,51,44,0,48],
[38,44,49,52,51,42,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,39,38,36,39,40,37],
[49,0,45,43,40,46,49,41],
[42,36,0,43,41,45,46,40],
[43,38,38,0,37,36,42,39],
[45,41,40,44,0,41,44,39],
[42,35,36,45,40,0,41,39],
[41,32,35,39,37,40,0,36],
[44,40,41,42,42,42,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,45,48,43,47,39],
[40,0,40,42,41,42,47,41],
[41,41,0,45,45,48,47,38],
[36,39,36,0,38,40,40,35],
[33,40,36,43,0,44,39,32],
[38,39,33,41,37,0,43,36],
[34,34,34,41,42,38,0,30],
[42,40,43,46,49,45,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,38,45,52,45,53],
[42,0,46,40,47,45,45,46],
[39,35,0,39,39,48,43,47],
[43,41,42,0,43,47,37,47],
[36,34,42,38,0,44,46,52],
[29,36,33,34,37,0,30,32],
[36,36,38,44,35,51,0,52],
[28,35,34,34,29,49,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,59,44,40,49,44,43],
[37,0,46,39,35,41,43,39],
[22,35,0,30,30,31,41,31],
[37,42,51,0,34,49,34,36],
[41,46,51,47,0,49,39,42],
[32,40,50,32,32,0,47,36],
[37,38,40,47,42,34,0,34],
[38,42,50,45,39,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,34,41,43,41,37],
[38,0,40,39,37,37,29,37],
[43,41,0,43,33,40,38,47],
[47,42,38,0,39,32,38,40],
[40,44,48,42,0,35,35,44],
[38,44,41,49,46,0,39,50],
[40,52,43,43,46,42,0,46],
[44,44,34,41,37,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,51,46,44,46,49],
[45,0,37,45,41,36,39,47],
[45,44,0,49,41,28,43,57],
[30,36,32,0,35,38,42,32],
[35,40,40,46,0,35,32,38],
[37,45,53,43,46,0,43,51],
[35,42,38,39,49,38,0,45],
[32,34,24,49,43,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,44,52,55,40,41],
[38,0,43,46,44,57,51,40],
[41,38,0,43,51,55,53,34],
[37,35,38,0,36,48,40,29],
[29,37,30,45,0,44,42,27],
[26,24,26,33,37,0,27,28],
[41,30,28,41,39,54,0,35],
[40,41,47,52,54,53,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,27,30,37,25,47,56],
[26,0,29,44,30,29,40,29],
[54,52,0,39,44,34,49,57],
[51,37,42,0,42,37,50,46],
[44,51,37,39,0,43,44,42],
[56,52,47,44,38,0,46,55],
[34,41,32,31,37,35,0,41],
[25,52,24,35,39,26,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,33,43,44,38,36,34],
[47,0,33,39,48,37,39,37],
[48,48,0,41,52,48,44,40],
[38,42,40,0,48,39,38,34],
[37,33,29,33,0,33,41,30],
[43,44,33,42,48,0,40,41],
[45,42,37,43,40,41,0,35],
[47,44,41,47,51,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,43,41,43,38,46],
[37,0,45,48,39,42,44,45],
[40,36,0,43,39,38,35,34],
[38,33,38,0,39,39,33,41],
[40,42,42,42,0,43,40,45],
[38,39,43,42,38,0,40,39],
[43,37,46,48,41,41,0,47],
[35,36,47,40,36,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,28,38,25,30,29,35],
[57,0,49,53,38,51,44,44],
[53,32,0,44,40,41,36,45],
[43,28,37,0,31,37,33,32],
[56,43,41,50,0,38,44,36],
[51,30,40,44,43,0,36,45],
[52,37,45,48,37,45,0,42],
[46,37,36,49,45,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,38,49,37,40,36],
[40,0,41,37,46,37,38,40],
[31,40,0,38,40,40,42,42],
[43,44,43,0,49,38,43,38],
[32,35,41,32,0,32,35,34],
[44,44,41,43,49,0,38,41],
[41,43,39,38,46,43,0,38],
[45,41,39,43,47,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,31,41,42,32,62,43],
[28,0,49,41,60,50,60,41],
[50,32,0,31,39,30,70,41],
[40,40,50,0,19,41,59,30],
[39,21,42,62,0,31,40,32],
[49,31,51,40,50,0,40,31],
[19,21,11,22,41,41,0,52],
[38,40,40,51,49,50,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,46,40,45,48,43],
[38,0,43,47,41,49,50,48],
[43,38,0,38,43,35,44,42],
[35,34,43,0,41,41,41,43],
[41,40,38,40,0,42,51,40],
[36,32,46,40,39,0,46,42],
[33,31,37,40,30,35,0,44],
[38,33,39,38,41,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,37,39,51,43,40],
[36,0,49,40,37,41,41,44],
[35,32,0,32,31,32,41,36],
[44,41,49,0,37,37,36,49],
[42,44,50,44,0,36,39,50],
[30,40,49,44,45,0,41,48],
[38,40,40,45,42,40,0,49],
[41,37,45,32,31,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,41,34,26,42,36,42],
[59,0,46,37,46,60,50,56],
[40,35,0,31,37,46,43,36],
[47,44,50,0,42,49,36,48],
[55,35,44,39,0,44,35,47],
[39,21,35,32,37,0,40,49],
[45,31,38,45,46,41,0,42],
[39,25,45,33,34,32,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,31,40,39,47,46],
[38,0,34,33,34,51,50,43],
[48,47,0,36,32,47,39,47],
[50,48,45,0,34,57,41,43],
[41,47,49,47,0,44,35,40],
[42,30,34,24,37,0,32,47],
[34,31,42,40,46,49,0,42],
[35,38,34,38,41,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,41,46,38,42,37,40],
[48,0,38,43,42,45,44,41],
[40,43,0,48,45,46,48,40],
[35,38,33,0,36,39,35,32],
[43,39,36,45,0,39,36,42],
[39,36,35,42,42,0,37,37],
[44,37,33,46,45,44,0,43],
[41,40,41,49,39,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,15,52,17,37,24,25,33],
[66,0,44,46,48,20,27,46],
[29,37,0,37,48,37,25,36],
[64,35,44,0,46,44,38,27],
[44,33,33,35,0,19,27,35],
[57,61,44,37,62,0,46,48],
[56,54,56,43,54,35,0,34],
[48,35,45,54,46,33,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,30,30,39,43,33,32],
[45,0,36,37,35,42,31,37],
[51,45,0,33,41,50,41,36],
[51,44,48,0,42,55,38,38],
[42,46,40,39,0,46,43,37],
[38,39,31,26,35,0,28,27],
[48,50,40,43,38,53,0,44],
[49,44,45,43,44,54,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,44,46,33,45,36],
[42,0,35,48,44,45,50,41],
[44,46,0,47,41,37,55,46],
[37,33,34,0,42,31,37,42],
[35,37,40,39,0,33,42,35],
[48,36,44,50,48,0,49,50],
[36,31,26,44,39,32,0,41],
[45,40,35,39,46,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,38,29,41,34,32,36],
[50,0,52,41,49,46,39,42],
[43,29,0,27,40,26,27,38],
[52,40,54,0,58,51,48,43],
[40,32,41,23,0,33,27,40],
[47,35,55,30,48,0,38,40],
[49,42,54,33,54,43,0,50],
[45,39,43,38,41,41,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,47,42,39,43,44],
[33,0,37,38,46,44,33,35],
[35,44,0,41,38,36,40,38],
[34,43,40,0,40,40,36,36],
[39,35,43,41,0,45,40,35],
[42,37,45,41,36,0,46,33],
[38,48,41,45,41,35,0,41],
[37,46,43,45,46,48,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,51,48,51,54,33,40],
[47,0,34,52,54,51,41,43],
[30,47,0,54,54,52,36,42],
[33,29,27,0,42,45,26,29],
[30,27,27,39,0,32,36,34],
[27,30,29,36,49,0,36,35],
[48,40,45,55,45,45,0,46],
[41,38,39,52,47,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,41,43,35,39,42],
[45,0,41,49,43,36,40,43],
[48,40,0,53,48,37,48,43],
[40,32,28,0,38,36,29,35],
[38,38,33,43,0,32,37,46],
[46,45,44,45,49,0,38,48],
[42,41,33,52,44,43,0,53],
[39,38,38,46,35,33,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,25,29,43,13,24,30],
[56,0,29,43,43,28,44,31],
[56,52,0,42,48,28,64,43],
[52,38,39,0,50,29,55,23],
[38,38,33,31,0,12,38,23],
[68,53,53,52,69,0,67,38],
[57,37,17,26,43,14,0,23],
[51,50,38,58,58,43,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,42,47,37,40,44],
[41,0,32,40,38,38,32,38],
[42,49,0,41,39,40,47,35],
[39,41,40,0,44,35,38,38],
[34,43,42,37,0,34,42,28],
[44,43,41,46,47,0,42,37],
[41,49,34,43,39,39,0,40],
[37,43,46,43,53,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,46,57,46,35,33],
[35,0,35,46,35,35,22,46],
[35,46,0,57,46,46,33,35],
[35,35,24,0,46,35,46,33],
[24,46,35,35,0,46,35,46],
[35,46,35,46,35,0,57,44],
[46,59,48,35,46,24,0,57],
[48,35,46,48,35,37,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,41,47,41,39,33,38],
[33,0,35,44,42,41,27,35],
[40,46,0,46,47,50,41,47],
[34,37,35,0,35,30,43,36],
[40,39,34,46,0,46,40,47],
[42,40,31,51,35,0,37,31],
[48,54,40,38,41,44,0,28],
[43,46,34,45,34,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,48,44,49,44,45,36],
[31,0,42,34,35,34,35,34],
[33,39,0,28,42,39,34,36],
[37,47,53,0,31,37,40,47],
[32,46,39,50,0,41,38,48],
[37,47,42,44,40,0,37,45],
[36,46,47,41,43,44,0,35],
[45,47,45,34,33,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,43,43,43,42,46],
[42,0,43,45,39,39,46,49],
[40,38,0,46,35,38,42,45],
[38,36,35,0,36,35,40,38],
[38,42,46,45,0,44,44,50],
[38,42,43,46,37,0,47,52],
[39,35,39,41,37,34,0,40],
[35,32,36,43,31,29,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,47,50,40,46,55],
[37,0,39,42,44,46,40,43],
[39,42,0,45,43,41,39,44],
[34,39,36,0,46,37,42,48],
[31,37,38,35,0,34,37,39],
[41,35,40,44,47,0,37,40],
[35,41,42,39,44,44,0,45],
[26,38,37,33,42,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,19,29,16,23,26],
[56,0,52,50,56,37,38,46],
[50,29,0,31,38,25,43,41],
[62,31,50,0,40,48,49,42],
[52,25,43,41,0,32,30,49],
[65,44,56,33,49,0,40,52],
[58,43,38,32,51,41,0,47],
[55,35,40,39,32,29,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,33,42,43,45,41],
[37,0,47,41,35,40,36,42],
[30,34,0,29,25,44,36,30],
[48,40,52,0,36,41,35,44],
[39,46,56,45,0,46,49,42],
[38,41,37,40,35,0,34,40],
[36,45,45,46,32,47,0,34],
[40,39,51,37,39,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,33,41,44,44,48],
[33,0,41,40,41,42,50,40],
[35,40,0,39,41,26,41,47],
[48,41,42,0,33,41,43,55],
[40,40,40,48,0,42,42,46],
[37,39,55,40,39,0,51,47],
[37,31,40,38,39,30,0,36],
[33,41,34,26,35,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,41,39,40,36,38],
[42,0,42,40,40,33,35,37],
[46,39,0,50,40,46,45,41],
[40,41,31,0,40,46,48,41],
[42,41,41,41,0,48,41,40],
[41,48,35,35,33,0,35,42],
[45,46,36,33,40,46,0,41],
[43,44,40,40,41,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,46,50,46,35,43],
[50,0,47,40,50,54,41,44],
[44,34,0,42,44,53,40,45],
[35,41,39,0,45,44,30,32],
[31,31,37,36,0,40,30,36],
[35,27,28,37,41,0,28,35],
[46,40,41,51,51,53,0,54],
[38,37,36,49,45,46,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,55,40,47,44,48],
[39,0,40,46,43,37,39,35],
[41,41,0,41,35,46,42,44],
[26,35,40,0,26,37,32,32],
[41,38,46,55,0,41,46,46],
[34,44,35,44,40,0,33,41],
[37,42,39,49,35,48,0,48],
[33,46,37,49,35,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,42,46,43,45,40],
[39,0,40,40,44,41,40,48],
[39,41,0,42,47,41,42,44],
[39,41,39,0,42,42,38,40],
[35,37,34,39,0,41,37,37],
[38,40,40,39,40,0,45,43],
[36,41,39,43,44,36,0,42],
[41,33,37,41,44,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,41,41,48,43,40],
[34,0,36,36,34,36,37,34],
[40,45,0,43,36,42,34,44],
[40,45,38,0,34,45,41,40],
[40,47,45,47,0,44,40,40],
[33,45,39,36,37,0,35,38],
[38,44,47,40,41,46,0,42],
[41,47,37,41,41,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,35,40,40,39,32],
[42,0,45,40,28,46,50,40],
[34,36,0,30,23,34,38,27],
[46,41,51,0,30,42,47,41],
[41,53,58,51,0,46,48,36],
[41,35,47,39,35,0,37,33],
[42,31,43,34,33,44,0,31],
[49,41,54,40,45,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,52,40,35,41,37,43],
[43,0,50,40,42,53,42,52],
[29,31,0,33,34,31,22,31],
[41,41,48,0,36,35,36,43],
[46,39,47,45,0,54,41,55],
[40,28,50,46,27,0,35,50],
[44,39,59,45,40,46,0,49],
[38,29,50,38,26,31,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,44,42,39,47,43,38],
[32,0,25,30,28,38,34,29],
[37,56,0,46,43,44,45,41],
[39,51,35,0,33,43,39,31],
[42,53,38,48,0,52,55,48],
[34,43,37,38,29,0,38,25],
[38,47,36,42,26,43,0,35],
[43,52,40,50,33,56,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,43,40,44,45,45],
[41,0,43,40,42,46,42,42],
[43,38,0,33,39,41,46,45],
[38,41,48,0,44,43,43,50],
[41,39,42,37,0,42,50,47],
[37,35,40,38,39,0,39,49],
[36,39,35,38,31,42,0,48],
[36,39,36,31,34,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,38,36,41,34,44,39],
[34,0,35,35,37,33,40,36],
[43,46,0,41,39,37,48,45],
[45,46,40,0,45,37,49,40],
[40,44,42,36,0,42,42,41],
[47,48,44,44,39,0,51,40],
[37,41,33,32,39,30,0,33],
[42,45,36,41,40,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,44,38,48,36,43,36],
[29,0,42,40,37,39,38,42],
[37,39,0,39,40,37,42,41],
[43,41,42,0,44,45,39,42],
[33,44,41,37,0,31,34,41],
[45,42,44,36,50,0,40,38],
[38,43,39,42,47,41,0,44],
[45,39,40,39,40,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,36,40,35,42,47],
[36,0,41,37,37,36,36,42],
[35,40,0,30,34,40,30,43],
[45,44,51,0,41,37,42,49],
[41,44,47,40,0,43,40,46],
[46,45,41,44,38,0,37,47],
[39,45,51,39,41,44,0,45],
[34,39,38,32,35,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,27,30,27,33,36,33],
[62,0,40,49,50,41,50,31],
[54,41,0,35,41,31,47,40],
[51,32,46,0,46,51,47,40],
[54,31,40,35,0,34,42,42],
[48,40,50,30,47,0,53,56],
[45,31,34,34,39,28,0,31],
[48,50,41,41,39,25,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,39,40,26,66,53,39],
[28,0,41,55,28,55,41,28],
[42,40,0,42,42,55,27,55],
[41,26,39,0,41,53,26,28],
[55,53,39,40,0,53,53,26],
[15,26,26,28,28,0,13,41],
[28,40,54,55,28,68,0,41],
[42,53,26,53,55,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,47,58,50,39,51,51],
[31,0,38,53,42,46,42,39],
[34,43,0,48,43,38,51,46],
[23,28,33,0,31,40,33,30],
[31,39,38,50,0,39,38,35],
[42,35,43,41,42,0,43,40],
[30,39,30,48,43,38,0,31],
[30,42,35,51,46,41,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,38,44,36,40,44],
[41,0,43,46,50,43,40,46],
[43,38,0,40,39,36,47,39],
[43,35,41,0,40,35,38,39],
[37,31,42,41,0,32,42,42],
[45,38,45,46,49,0,43,43],
[41,41,34,43,39,38,0,37],
[37,35,42,42,39,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,39,33,37,45,37,35],
[31,0,50,34,42,33,39,40],
[42,31,0,30,40,37,43,22],
[48,47,51,0,38,42,46,45],
[44,39,41,43,0,35,40,43],
[36,48,44,39,46,0,40,35],
[44,42,38,35,41,41,0,40],
[46,41,59,36,38,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,49,57,50,35,52],
[40,0,29,28,49,47,41,43],
[44,52,0,43,58,48,36,58],
[32,53,38,0,45,41,42,52],
[24,32,23,36,0,26,26,36],
[31,34,33,40,55,0,38,43],
[46,40,45,39,55,43,0,48],
[29,38,23,29,45,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,48,41,43,48,40],
[39,0,34,42,38,42,45,47],
[37,47,0,44,43,39,46,41],
[33,39,37,0,36,37,38,40],
[40,43,38,45,0,40,45,42],
[38,39,42,44,41,0,37,44],
[33,36,35,43,36,44,0,39],
[41,34,40,41,39,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,52,43,44,41,39],
[38,0,31,46,33,39,41,37],
[49,50,0,54,43,44,42,40],
[29,35,27,0,35,34,28,33],
[38,48,38,46,0,47,38,40],
[37,42,37,47,34,0,40,35],
[40,40,39,53,43,41,0,42],
[42,44,41,48,41,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,49,30,41,40,49,40],
[41,0,39,49,41,71,71,49],
[32,42,0,30,42,42,51,30],
[51,32,51,0,51,51,61,52],
[40,40,39,30,0,50,39,40],
[41,10,39,30,31,0,61,20],
[32,10,30,20,42,20,0,20],
[41,32,51,29,41,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,49,36,45,50,41],
[38,0,34,38,39,40,42,35],
[38,47,0,38,40,49,44,43],
[32,43,43,0,43,47,48,43],
[45,42,41,38,0,42,48,39],
[36,41,32,34,39,0,40,38],
[31,39,37,33,33,41,0,36],
[40,46,38,38,42,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,50,39,42,42,47,28],
[44,0,55,42,66,43,59,33],
[31,26,0,10,57,40,44,25],
[42,39,71,0,53,56,55,41],
[39,15,24,28,0,31,37,18],
[39,38,41,25,50,0,44,39],
[34,22,37,26,44,37,0,41],
[53,48,56,40,63,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,37,39,41,46,44],
[46,0,37,35,44,39,41,42],
[38,44,0,47,41,41,46,37],
[44,46,34,0,39,35,48,41],
[42,37,40,42,0,34,46,42],
[40,42,40,46,47,0,54,48],
[35,40,35,33,35,27,0,37],
[37,39,44,40,39,33,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,35,39,46,52,43],
[44,0,49,50,45,57,54,39],
[48,32,0,35,45,48,46,36],
[46,31,46,0,33,48,53,42],
[42,36,36,48,0,54,52,41],
[35,24,33,33,27,0,49,24],
[29,27,35,28,29,32,0,29],
[38,42,45,39,40,57,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,35,38,42,35,39],
[36,0,35,41,36,43,35,38],
[40,46,0,39,41,43,38,38],
[46,40,42,0,43,45,32,41],
[43,45,40,38,0,44,44,41],
[39,38,38,36,37,0,35,32],
[46,46,43,49,37,46,0,40],
[42,43,43,40,40,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,45,46,52,38,59],
[37,0,45,44,47,49,48,55],
[30,36,0,37,32,37,34,43],
[36,37,44,0,45,50,43,49],
[35,34,49,36,0,42,34,55],
[29,32,44,31,39,0,47,51],
[43,33,47,38,47,34,0,47],
[22,26,38,32,26,30,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,42,41,35,30,41],
[38,0,34,35,41,40,36,38],
[43,47,0,45,48,34,38,44],
[39,46,36,0,48,41,40,44],
[40,40,33,33,0,34,40,42],
[46,41,47,40,47,0,47,47],
[51,45,43,41,41,34,0,49],
[40,43,37,37,39,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,25,38,33,47,31,32],
[18,0,27,32,34,49,16,17],
[56,54,0,38,48,47,46,30],
[43,49,43,0,34,49,34,42],
[48,47,33,47,0,48,39,23],
[34,32,34,32,33,0,24,25],
[50,65,35,47,42,57,0,25],
[49,64,51,39,58,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,35,39,39,36,37],
[44,0,41,45,48,40,42,41],
[36,40,0,39,44,38,31,36],
[46,36,42,0,46,41,46,43],
[42,33,37,35,0,39,41,38],
[42,41,43,40,42,0,43,41],
[45,39,50,35,40,38,0,42],
[44,40,45,38,43,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,43,42,38,42,37,38],
[29,0,35,30,31,18,28,31],
[38,46,0,29,38,39,28,36],
[39,51,52,0,43,49,48,42],
[43,50,43,38,0,46,38,47],
[39,63,42,32,35,0,30,50],
[44,53,53,33,43,51,0,43],
[43,50,45,39,34,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,35,44,38,37,34],
[44,0,42,48,42,42,40,41],
[45,39,0,37,41,35,42,50],
[46,33,44,0,48,37,38,37],
[37,39,40,33,0,43,41,39],
[43,39,46,44,38,0,33,43],
[44,41,39,43,40,48,0,32],
[47,40,31,44,42,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,35,61,48,46,45,53],
[33,0,34,42,36,32,32,46],
[46,47,0,53,45,42,36,44],
[20,39,28,0,30,36,18,35],
[33,45,36,51,0,40,36,37],
[35,49,39,45,41,0,44,46],
[36,49,45,63,45,37,0,48],
[28,35,37,46,44,35,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,32,30,32,40,32,31],
[43,0,33,35,29,41,30,35],
[49,48,0,39,37,44,42,37],
[51,46,42,0,40,39,35,37],
[49,52,44,41,0,44,36,35],
[41,40,37,42,37,0,40,33],
[49,51,39,46,45,41,0,43],
[50,46,44,44,46,48,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,45,39,43,40,46],
[39,0,39,45,41,45,40,44],
[42,42,0,43,43,35,42,42],
[36,36,38,0,39,41,38,39],
[42,40,38,42,0,41,43,44],
[38,36,46,40,40,0,43,46],
[41,41,39,43,38,38,0,43],
[35,37,39,42,37,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,24,33,42,38,50,56],
[41,0,26,33,18,40,43,16],
[57,55,0,41,49,48,57,32],
[48,48,40,0,25,55,49,48],
[39,63,32,56,0,55,58,47],
[43,41,33,26,26,0,42,32],
[31,38,24,32,23,39,0,40],
[25,65,49,33,34,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,63,41,43,52,40,51],
[48,0,30,39,48,49,45,56],
[18,51,0,34,42,35,33,43],
[40,42,47,0,57,47,49,57],
[38,33,39,24,0,39,40,40],
[29,32,46,34,42,0,31,32],
[41,36,48,32,41,50,0,41],
[30,25,38,24,41,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,42,38,34,40,39],
[42,0,49,53,44,36,44,38],
[41,32,0,38,44,37,39,41],
[39,28,43,0,31,40,44,35],
[43,37,37,50,0,32,42,39],
[47,45,44,41,49,0,44,38],
[41,37,42,37,39,37,0,36],
[42,43,40,46,42,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,38,45,37,40,31,41],
[49,0,44,41,44,37,45,38],
[43,37,0,36,48,39,42,38],
[36,40,45,0,32,34,40,33],
[44,37,33,49,0,39,36,39],
[41,44,42,47,42,0,37,39],
[50,36,39,41,45,44,0,46],
[40,43,43,48,42,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,34,44,38,39,39],
[44,0,41,40,42,48,40,41],
[43,40,0,44,43,42,49,36],
[47,41,37,0,40,38,45,33],
[37,39,38,41,0,40,47,41],
[43,33,39,43,41,0,42,38],
[42,41,32,36,34,39,0,44],
[42,40,45,48,40,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,29,28,44,39,33,42],
[60,0,38,52,50,54,48,56],
[52,43,0,42,42,36,39,48],
[53,29,39,0,44,51,44,43],
[37,31,39,37,0,30,44,40],
[42,27,45,30,51,0,31,32],
[48,33,42,37,37,50,0,37],
[39,25,33,38,41,49,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,35,38,46,48,49,54],
[34,0,44,38,35,39,49,49],
[46,37,0,40,38,34,45,48],
[43,43,41,0,41,43,41,39],
[35,46,43,40,0,41,48,45],
[33,42,47,38,40,0,50,44],
[32,32,36,40,33,31,0,34],
[27,32,33,42,36,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,36,38,43,28,33,41],
[53,0,43,51,37,38,39,56],
[45,38,0,44,49,41,38,55],
[43,30,37,0,46,42,32,48],
[38,44,32,35,0,35,30,45],
[53,43,40,39,46,0,41,39],
[48,42,43,49,51,40,0,44],
[40,25,26,33,36,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,41,39,38,46,41],
[36,0,39,39,41,39,43,38],
[38,42,0,35,46,42,39,30],
[40,42,46,0,47,39,52,39],
[42,40,35,34,0,44,43,35],
[43,42,39,42,37,0,49,41],
[35,38,42,29,38,32,0,37],
[40,43,51,42,46,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,57,46,50,36,41,45],
[31,0,42,30,34,32,29,45],
[24,39,0,32,36,27,32,35],
[35,51,49,0,40,36,47,52],
[31,47,45,41,0,41,42,42],
[45,49,54,45,40,0,42,50],
[40,52,49,34,39,39,0,44],
[36,36,46,29,39,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,45,47,42,49,49],
[34,0,37,35,40,36,36,42],
[41,44,0,36,39,30,37,50],
[36,46,45,0,47,38,41,49],
[34,41,42,34,0,34,38,50],
[39,45,51,43,47,0,42,51],
[32,45,44,40,43,39,0,55],
[32,39,31,32,31,30,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,43,49,39,53,43],
[41,0,26,43,48,33,39,54],
[36,55,0,55,63,50,55,51],
[38,38,26,0,45,39,41,47],
[32,33,18,36,0,30,23,49],
[42,48,31,42,51,0,38,48],
[28,42,26,40,58,43,0,51],
[38,27,30,34,32,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,35,42,45,43,42,37],
[36,0,34,33,37,36,39,33],
[46,47,0,46,46,49,37,44],
[39,48,35,0,41,40,45,39],
[36,44,35,40,0,44,45,42],
[38,45,32,41,37,0,44,38],
[39,42,44,36,36,37,0,34],
[44,48,37,42,39,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,35,38,41,47,32,32],
[33,0,34,34,32,48,38,42],
[46,47,0,49,33,56,47,36],
[43,47,32,0,29,29,48,46],
[40,49,48,52,0,62,38,47],
[34,33,25,52,19,0,31,30],
[49,43,34,33,43,50,0,49],
[49,39,45,35,34,51,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,38,35,34,33,33],
[41,0,43,44,44,37,43,40],
[45,38,0,47,46,44,42,48],
[43,37,34,0,39,37,40,41],
[46,37,35,42,0,35,38,30],
[47,44,37,44,46,0,38,33],
[48,38,39,41,43,43,0,42],
[48,41,33,40,51,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,34,37,50,46,44,45],
[36,0,33,43,45,40,39,38],
[47,48,0,48,48,47,57,37],
[44,38,33,0,43,50,48,44],
[31,36,33,38,0,43,41,43],
[35,41,34,31,38,0,43,31],
[37,42,24,33,40,38,0,30],
[36,43,44,37,38,50,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,33,35,36,42,30],
[44,0,42,40,43,37,39,36],
[45,39,0,38,42,41,38,30],
[48,41,43,0,42,38,38,34],
[46,38,39,39,0,33,39,31],
[45,44,40,43,48,0,46,47],
[39,42,43,43,42,35,0,37],
[51,45,51,47,50,34,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,41,49,37,47,47],
[41,0,37,36,45,36,48,46],
[37,44,0,45,44,43,46,45],
[40,45,36,0,43,48,35,49],
[32,36,37,38,0,31,47,37],
[44,45,38,33,50,0,46,46],
[34,33,35,46,34,35,0,46],
[34,35,36,32,44,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,47,25,43,53,28,30],
[52,0,59,44,37,56,32,38],
[34,22,0,37,33,48,31,23],
[56,37,44,0,45,50,17,40],
[38,44,48,36,0,53,45,30],
[28,25,33,31,28,0,13,29],
[53,49,50,64,36,68,0,43],
[51,43,58,41,51,52,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,30,32,32,34,43,39],
[40,0,27,31,30,40,40,32],
[51,54,0,35,35,52,43,51],
[49,50,46,0,44,43,38,43],
[49,51,46,37,0,49,46,44],
[47,41,29,38,32,0,40,42],
[38,41,38,43,35,41,0,46],
[42,49,30,38,37,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,43,49,44,34,40],
[39,0,31,37,38,33,29,31],
[37,50,0,44,40,49,37,45],
[38,44,37,0,34,28,39,43],
[32,43,41,47,0,40,38,37],
[37,48,32,53,41,0,41,39],
[47,52,44,42,43,40,0,34],
[41,50,36,38,44,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,21,39,32,31,40,31],
[62,0,39,50,43,51,53,42],
[60,42,0,43,35,51,47,44],
[42,31,38,0,31,40,39,41],
[49,38,46,50,0,49,44,51],
[50,30,30,41,32,0,38,43],
[41,28,34,42,37,43,0,39],
[50,39,37,40,30,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,34,24,33,23,29,35],
[59,0,35,23,28,30,33,47],
[47,46,0,41,52,35,51,48],
[57,58,40,0,42,51,48,41],
[48,53,29,39,0,32,43,49],
[58,51,46,30,49,0,37,44],
[52,48,30,33,38,44,0,35],
[46,34,33,40,32,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,43,37,45,45,46,52],
[23,0,43,44,44,36,54,67],
[38,38,0,51,59,45,53,68],
[44,37,30,0,50,43,53,60],
[36,37,22,31,0,44,38,51],
[36,45,36,38,37,0,47,60],
[35,27,28,28,43,34,0,51],
[29,14,13,21,30,21,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,37,48,12,23,35,37],
[57,0,34,36,35,22,11,36],
[44,47,0,59,46,34,58,47],
[33,45,22,0,45,33,22,22],
[69,46,35,36,0,34,36,35],
[58,59,47,48,47,0,48,35],
[46,70,23,59,45,33,0,35],
[44,45,34,59,46,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,53,52,21,32,52,33],
[29,0,20,31,10,20,29,0],
[28,61,0,60,10,31,28,19],
[29,50,21,0,21,19,40,21],
[60,71,71,60,0,31,50,61],
[49,61,50,62,50,0,49,40],
[29,52,53,41,31,32,0,43],
[48,81,62,60,20,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,63,63,51,34,45],
[18,0,36,45,42,26,52,34],
[28,45,0,47,54,17,37,36],
[18,36,34,0,33,9,35,25],
[18,39,27,48,0,18,35,26],
[30,55,64,72,63,0,54,45],
[47,29,44,46,46,27,0,36],
[36,47,45,56,55,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,46,40,34,44,54],
[39,0,53,43,45,38,54,57],
[36,28,0,29,38,38,44,41],
[35,38,52,0,44,43,52,49],
[41,36,43,37,0,29,44,47],
[47,43,43,38,52,0,52,51],
[37,27,37,29,37,29,0,45],
[27,24,40,32,34,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,57,42,40,43,43,36],
[46,0,41,33,53,48,58,51],
[24,40,0,45,45,36,42,26],
[39,48,36,0,48,35,47,39],
[41,28,36,33,0,43,31,44],
[38,33,45,46,38,0,36,36],
[38,23,39,34,50,45,0,32],
[45,30,55,42,37,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,32,32,35,42,43,33],
[41,0,37,34,40,41,49,38],
[49,44,0,45,43,39,52,43],
[49,47,36,0,41,46,44,45],
[46,41,38,40,0,43,44,48],
[39,40,42,35,38,0,48,43],
[38,32,29,37,37,33,0,36],
[48,43,38,36,33,38,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,43,47,43,43,38],
[36,0,32,43,39,46,45,41],
[34,49,0,46,47,49,39,33],
[38,38,35,0,39,43,37,37],
[34,42,34,42,0,38,41,38],
[38,35,32,38,43,0,43,34],
[38,36,42,44,40,38,0,33],
[43,40,48,44,43,47,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,29,35,34,35,44,33],
[39,0,52,42,47,44,46,39],
[52,29,0,34,40,35,51,30],
[46,39,47,0,53,54,55,37],
[47,34,41,28,0,41,48,52],
[46,37,46,27,40,0,48,31],
[37,35,30,26,33,33,0,33],
[48,42,51,44,29,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,42,43,38,38,40],
[43,0,43,46,36,42,42,39],
[45,38,0,45,46,43,45,42],
[39,35,36,0,36,39,31,31],
[38,45,35,45,0,47,36,40],
[43,39,38,42,34,0,34,41],
[43,39,36,50,45,47,0,42],
[41,42,39,50,41,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,34,32,35,42,28],
[42,0,45,40,40,34,38,29],
[40,36,0,39,44,34,43,42],
[47,41,42,0,38,44,40,38],
[49,41,37,43,0,37,41,35],
[46,47,47,37,44,0,42,39],
[39,43,38,41,40,39,0,27],
[53,52,39,43,46,42,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,50,41,43,35,39,41],
[37,0,43,47,40,39,37,41],
[31,38,0,37,42,33,37,40],
[40,34,44,0,38,36,35,41],
[38,41,39,43,0,37,44,44],
[46,42,48,45,44,0,45,40],
[42,44,44,46,37,36,0,41],
[40,40,41,40,37,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,40,49,41,53,41],
[39,0,42,42,46,43,48,48],
[33,39,0,35,42,35,43,40],
[41,39,46,0,38,39,42,33],
[32,35,39,43,0,39,43,31],
[40,38,46,42,42,0,43,37],
[28,33,38,39,38,38,0,34],
[40,33,41,48,50,44,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,40,30,36,28,34],
[47,0,38,41,35,50,40,50],
[49,43,0,34,31,41,31,38],
[41,40,47,0,30,40,38,39],
[51,46,50,51,0,49,42,36],
[45,31,40,41,32,0,28,34],
[53,41,50,43,39,53,0,37],
[47,31,43,42,45,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,42,46,34,44,33],
[37,0,47,35,42,43,43,36],
[37,34,0,35,38,35,37,36],
[39,46,46,0,39,38,40,37],
[35,39,43,42,0,37,37,36],
[47,38,46,43,44,0,43,41],
[37,38,44,41,44,38,0,40],
[48,45,45,44,45,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,41,30,50,22,31],
[30,0,70,30,21,51,32,41],
[21,11,0,30,32,21,21,21],
[40,51,51,0,40,50,42,42],
[51,60,49,41,0,70,32,41],
[31,30,60,31,11,0,33,22],
[59,49,60,39,49,48,0,39],
[50,40,60,39,40,59,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,42,42,40,29,31],
[50,0,54,52,42,44,39,42],
[42,27,0,40,42,43,34,29],
[39,29,41,0,37,37,29,34],
[39,39,39,44,0,45,38,30],
[41,37,38,44,36,0,36,40],
[52,42,47,52,43,45,0,39],
[50,39,52,47,51,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,42,57,55,48,42],
[45,0,49,45,49,60,33,54],
[40,32,0,26,48,47,26,47],
[39,36,55,0,50,56,40,49],
[24,32,33,31,0,38,31,32],
[26,21,34,25,43,0,24,14],
[33,48,55,41,50,57,0,50],
[39,27,34,32,49,67,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,45,36,40,39,40,60],
[31,0,43,43,39,52,35,53],
[36,38,0,28,29,43,46,48],
[45,38,53,0,45,41,45,53],
[41,42,52,36,0,42,56,63],
[42,29,38,40,39,0,34,53],
[41,46,35,36,25,47,0,57],
[21,28,33,28,18,28,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,51,37,37,59,30],
[39,0,38,45,36,38,46,37],
[37,43,0,36,43,23,60,35],
[30,36,45,0,37,31,44,29],
[44,45,38,44,0,36,57,44],
[44,43,58,50,45,0,46,38],
[22,35,21,37,24,35,0,32],
[51,44,46,52,37,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,52,44,52,42,37,48],
[41,0,48,38,47,40,42,49],
[29,33,0,37,36,38,29,48],
[37,43,44,0,40,37,35,54],
[29,34,45,41,0,34,38,44],
[39,41,43,44,47,0,42,46],
[44,39,52,46,43,39,0,46],
[33,32,33,27,37,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,53,35,57,52,52,46],
[38,0,52,42,67,53,61,53],
[28,29,0,28,36,43,38,34],
[46,39,53,0,55,59,56,55],
[24,14,45,26,0,39,27,31],
[29,28,38,22,42,0,39,47],
[29,20,43,25,54,42,0,40],
[35,28,47,26,50,34,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,22,41,41,29,39,51],
[30,0,21,20,19,29,19,29],
[59,60,0,49,39,58,59,39],
[40,61,32,0,41,20,39,40],
[40,62,42,40,0,19,59,40],
[52,52,23,61,62,0,49,51],
[42,62,22,42,22,32,0,42],
[30,52,42,41,41,30,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,47,40,45,48,47],
[33,0,38,38,42,43,40,38],
[32,43,0,39,33,40,36,40],
[34,43,42,0,34,37,41,37],
[41,39,48,47,0,44,45,50],
[36,38,41,44,37,0,44,31],
[33,41,45,40,36,37,0,36],
[34,43,41,44,31,50,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,35,22,36,58,35,58],
[57,0,45,56,34,57,45,68],
[46,36,0,11,25,58,35,59],
[59,25,70,0,48,70,46,59],
[45,47,56,33,0,69,44,69],
[23,24,23,11,12,0,22,36],
[46,36,46,35,37,59,0,48],
[23,13,22,22,12,45,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,27,45,28,36,26,26],
[38,0,28,37,28,46,27,18],
[54,53,0,54,45,35,44,44],
[36,44,27,0,27,36,17,26],
[53,53,36,54,0,44,53,53],
[45,35,46,45,37,0,36,27],
[55,54,37,64,28,45,0,36],
[55,63,37,55,28,54,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,38,31,37,35,32],
[50,0,44,45,36,44,45,45],
[49,37,0,46,42,46,42,42],
[43,36,35,0,36,42,45,42],
[50,45,39,45,0,43,45,43],
[44,37,35,39,38,0,34,36],
[46,36,39,36,36,47,0,41],
[49,36,39,39,38,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,39,41,48,49,46],
[43,0,37,41,48,50,43,48],
[44,44,0,37,41,53,53,43],
[42,40,44,0,39,49,49,39],
[40,33,40,42,0,46,52,42],
[33,31,28,32,35,0,41,36],
[32,38,28,32,29,40,0,36],
[35,33,38,42,39,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,48,30,45,46,45],
[42,0,46,32,31,44,53,51],
[36,35,0,38,29,14,37,43],
[33,49,43,0,43,51,42,57],
[51,50,52,38,0,58,58,51],
[36,37,67,30,23,0,45,52],
[35,28,44,39,23,36,0,30],
[36,30,38,24,30,29,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,45,32,38,32,33],
[44,0,51,47,39,41,37,33],
[37,30,0,41,31,39,33,30],
[36,34,40,0,29,31,35,30],
[49,42,50,52,0,54,43,39],
[43,40,42,50,27,0,32,31],
[49,44,48,46,38,49,0,41],
[48,48,51,51,42,50,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,38,35,35,46,49],
[43,0,38,54,41,44,47,55],
[41,43,0,46,34,35,42,43],
[43,27,35,0,33,35,38,51],
[46,40,47,48,0,38,35,41],
[46,37,46,46,43,0,43,53],
[35,34,39,43,46,38,0,49],
[32,26,38,30,40,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,40,35,42,39,41],
[40,0,41,48,46,50,50,54],
[40,40,0,42,38,42,39,44],
[41,33,39,0,41,32,42,48],
[46,35,43,40,0,36,38,34],
[39,31,39,49,45,0,48,47],
[42,31,42,39,43,33,0,44],
[40,27,37,33,47,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,48,34,42,41,37],
[42,0,37,48,40,52,42,40],
[36,44,0,52,39,53,47,50],
[33,33,29,0,29,43,42,28],
[47,41,42,52,0,49,41,38],
[39,29,28,38,32,0,34,28],
[40,39,34,39,40,47,0,38],
[44,41,31,53,43,53,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,41,33,41,36,42],
[43,0,38,49,41,56,38,47],
[39,43,0,46,35,45,44,45],
[40,32,35,0,33,41,35,43],
[48,40,46,48,0,44,36,39],
[40,25,36,40,37,0,34,39],
[45,43,37,46,45,47,0,37],
[39,34,36,38,42,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,50,46,43,42,38,39],
[38,0,52,46,45,44,52,42],
[31,29,0,37,33,35,37,34],
[35,35,44,0,36,35,42,33],
[38,36,48,45,0,47,45,40],
[39,37,46,46,34,0,44,36],
[43,29,44,39,36,37,0,37],
[42,39,47,48,41,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,45,37,42,36,45],
[40,0,41,42,46,43,43,46],
[42,40,0,40,37,43,36,40],
[36,39,41,0,39,38,39,38],
[44,35,44,42,0,43,36,43],
[39,38,38,43,38,0,36,37],
[45,38,45,42,45,45,0,41],
[36,35,41,43,38,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,39,39,41,43,42],
[40,0,35,36,37,36,35,42],
[41,46,0,47,40,40,43,42],
[42,45,34,0,38,41,37,41],
[42,44,41,43,0,39,38,41],
[40,45,41,40,42,0,38,46],
[38,46,38,44,43,43,0,44],
[39,39,39,40,40,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,29,41,41,40,47,33],
[31,0,16,24,40,26,30,33],
[52,65,0,44,43,46,47,37],
[40,57,37,0,45,36,45,44],
[40,41,38,36,0,30,33,33],
[41,55,35,45,51,0,45,52],
[34,51,34,36,48,36,0,37],
[48,48,44,37,48,29,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,54,36,49,33,48,44],
[34,0,57,39,39,42,41,32],
[27,24,0,30,24,28,26,21],
[45,42,51,0,38,38,49,42],
[32,42,57,43,0,34,40,26],
[48,39,53,43,47,0,58,47],
[33,40,55,32,41,23,0,32],
[37,49,60,39,55,34,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,46,39,45,44,41],
[32,0,44,41,43,36,32,34],
[40,37,0,42,37,37,35,42],
[35,40,39,0,35,41,37,34],
[42,38,44,46,0,45,41,36],
[36,45,44,40,36,0,35,40],
[37,49,46,44,40,46,0,36],
[40,47,39,47,45,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,51,53,44,34,43],
[39,0,44,40,62,35,42,50],
[42,37,0,40,53,47,47,47],
[30,41,41,0,59,47,35,42],
[28,19,28,22,0,26,37,33],
[37,46,34,34,55,0,38,33],
[47,39,34,46,44,43,0,33],
[38,31,34,39,48,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,29,18,24,28,39,30],
[48,0,41,42,39,41,49,37],
[52,40,0,34,31,42,42,40],
[63,39,47,0,41,42,45,46],
[57,42,50,40,0,38,47,39],
[53,40,39,39,43,0,46,53],
[42,32,39,36,34,35,0,37],
[51,44,41,35,42,28,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,37,50,45,31,38,28],
[52,0,41,58,35,53,28,37],
[44,40,0,43,42,53,39,38],
[31,23,38,0,33,37,28,28],
[36,46,39,48,0,40,29,31],
[50,28,28,44,41,0,38,43],
[43,53,42,53,52,43,0,40],
[53,44,43,53,50,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,40,43,42,42,42,39],
[49,0,40,39,41,48,39,42],
[41,41,0,36,41,43,41,45],
[38,42,45,0,36,47,48,39],
[39,40,40,45,0,42,43,39],
[39,33,38,34,39,0,37,37],
[39,42,40,33,38,44,0,38],
[42,39,36,42,42,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,45,52,45,58,45],
[40,0,46,53,49,40,50,44],
[46,35,0,42,50,40,56,33],
[36,28,39,0,23,33,45,27],
[29,32,31,58,0,38,45,30],
[36,41,41,48,43,0,53,37],
[23,31,25,36,36,28,0,36],
[36,37,48,54,51,44,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,38,47,48,34,37],
[41,0,44,47,53,44,40,43],
[38,37,0,44,46,51,37,43],
[43,34,37,0,44,44,44,37],
[34,28,35,37,0,43,45,32],
[33,37,30,37,38,0,42,35],
[47,41,44,37,36,39,0,44],
[44,38,38,44,49,46,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,43,44,39,50,40],
[45,0,37,41,42,41,48,43],
[48,44,0,49,49,37,51,43],
[38,40,32,0,40,38,48,42],
[37,39,32,41,0,37,47,37],
[42,40,44,43,44,0,52,46],
[31,33,30,33,34,29,0,35],
[41,38,38,39,44,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,36,37,45,41,41],
[36,0,40,35,42,34,42,34],
[42,41,0,41,39,35,39,40],
[45,46,40,0,42,43,38,41],
[44,39,42,39,0,40,44,40],
[36,47,46,38,41,0,44,37],
[40,39,42,43,37,37,0,41],
[40,47,41,40,41,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,38,43,38,38,43],
[42,0,49,36,36,39,38,38],
[41,32,0,44,39,40,37,47],
[43,45,37,0,42,49,41,35],
[38,45,42,39,0,31,45,36],
[43,42,41,32,50,0,47,36],
[43,43,44,40,36,34,0,37],
[38,43,34,46,45,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,43,49,37,42,46],
[33,0,35,35,52,35,38,33],
[37,46,0,34,42,33,36,33],
[38,46,47,0,51,37,38,48],
[32,29,39,30,0,35,37,36],
[44,46,48,44,46,0,40,54],
[39,43,45,43,44,41,0,42],
[35,48,48,33,45,27,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,36,39,32,29,37],
[44,0,32,35,40,34,33,32],
[43,49,0,39,52,44,34,34],
[45,46,42,0,42,38,37,43],
[42,41,29,39,0,36,38,37],
[49,47,37,43,45,0,43,42],
[52,48,47,44,43,38,0,40],
[44,49,47,38,44,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,50,31,43,41,40,50],
[44,0,53,44,49,51,35,47],
[31,28,0,34,40,39,32,34],
[50,37,47,0,49,50,46,51],
[38,32,41,32,0,36,30,36],
[40,30,42,31,45,0,37,42],
[41,46,49,35,51,44,0,45],
[31,34,47,30,45,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,18,35,22,38,37],
[42,0,37,17,39,30,49,40],
[50,44,0,22,33,33,33,33],
[63,64,59,0,51,40,59,59],
[46,42,48,30,0,51,47,38],
[59,51,48,41,30,0,42,49],
[43,32,48,22,34,39,0,37],
[44,41,48,22,43,32,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,51,30,37,26,43],
[35,0,35,49,45,39,33,55],
[43,46,0,44,44,44,40,50],
[30,32,37,0,34,38,35,39],
[51,36,37,47,0,44,28,46],
[44,42,37,43,37,0,47,38],
[55,48,41,46,53,34,0,40],
[38,26,31,42,35,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,52,43,35,36,37],
[35,0,43,39,35,35,38,32],
[39,38,0,42,34,36,31,36],
[29,42,39,0,33,24,29,27],
[38,46,47,48,0,37,34,36],
[46,46,45,57,44,0,40,43],
[45,43,50,52,47,41,0,39],
[44,49,45,54,45,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,52,42,36,45,41,50],
[31,0,39,41,29,37,35,37],
[29,42,0,46,31,35,31,42],
[39,40,35,0,33,36,33,38],
[45,52,50,48,0,35,43,42],
[36,44,46,45,46,0,36,44],
[40,46,50,48,38,45,0,49],
[31,44,39,43,39,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,54,50,39,47,40,50],
[38,0,45,43,40,29,42,48],
[27,36,0,43,29,34,42,44],
[31,38,38,0,30,35,41,49],
[42,41,52,51,0,38,42,48],
[34,52,47,46,43,0,44,55],
[41,39,39,40,39,37,0,46],
[31,33,37,32,33,26,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,48,45,34,56,47,32],
[55,0,55,47,46,46,40,41],
[33,26,0,33,19,40,34,26],
[36,34,48,0,52,65,65,50],
[47,35,62,29,0,43,47,31],
[25,35,41,16,38,0,25,25],
[34,41,47,16,34,56,0,40],
[49,40,55,31,50,56,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,36,44,40,41,43,45],
[35,0,39,40,41,41,39,38],
[45,42,0,39,43,43,47,49],
[37,41,42,0,40,47,45,53],
[41,40,38,41,0,42,51,42],
[40,40,38,34,39,0,40,46],
[38,42,34,36,30,41,0,42],
[36,43,32,28,39,35,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,52,47,55,36,45],
[34,0,35,42,41,35,30,45],
[35,46,0,47,52,32,37,40],
[29,39,34,0,40,31,33,48],
[34,40,29,41,0,34,29,34],
[26,46,49,50,47,0,45,44],
[45,51,44,48,52,36,0,40],
[36,36,41,33,47,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,52,48,42,50,51,47],
[42,0,49,43,38,45,48,43],
[29,32,0,44,34,40,41,38],
[33,38,37,0,26,40,46,28],
[39,43,47,55,0,49,53,43],
[31,36,41,41,32,0,41,36],
[30,33,40,35,28,40,0,35],
[34,38,43,53,38,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,37,35,50,36,36],
[47,0,44,40,40,47,43,42],
[41,37,0,42,34,47,44,44],
[44,41,39,0,37,45,39,40],
[46,41,47,44,0,48,48,39],
[31,34,34,36,33,0,40,33],
[45,38,37,42,33,41,0,39],
[45,39,37,41,42,48,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,48,37,42,38,42,38],
[36,0,43,32,36,27,29,29],
[33,38,0,34,32,34,33,41],
[44,49,47,0,39,43,42,40],
[39,45,49,42,0,33,36,43],
[43,54,47,38,48,0,41,43],
[39,52,48,39,45,40,0,48],
[43,52,40,41,38,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,34,42,39,51,44],
[44,0,37,38,46,36,47,40],
[37,44,0,40,43,37,49,42],
[47,43,41,0,43,41,43,40],
[39,35,38,38,0,27,40,46],
[42,45,44,40,54,0,51,44],
[30,34,32,38,41,30,0,34],
[37,41,39,41,35,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,41,44,44,44,46],
[43,0,46,42,39,48,49,48],
[41,35,0,41,38,44,39,39],
[40,39,40,0,38,48,37,42],
[37,42,43,43,0,41,38,40],
[37,33,37,33,40,0,37,45],
[37,32,42,44,43,44,0,38],
[35,33,42,39,41,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,30,35,37,52,53],
[40,0,47,34,32,43,32,42],
[41,34,0,32,38,35,41,41],
[51,47,49,0,42,44,40,49],
[46,49,43,39,0,53,49,54],
[44,38,46,37,28,0,51,47],
[29,49,40,41,32,30,0,34],
[28,39,40,32,27,34,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,32,31,27,23,34],
[50,0,45,43,48,37,34,45],
[44,36,0,34,35,35,31,44],
[49,38,47,0,41,47,42,49],
[50,33,46,40,0,34,41,43],
[54,44,46,34,47,0,41,47],
[58,47,50,39,40,40,0,61],
[47,36,37,32,38,34,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,39,34,40,37,33],
[43,0,38,41,41,37,37,33],
[46,43,0,44,41,42,35,41],
[42,40,37,0,37,35,39,34],
[47,40,40,44,0,42,45,37],
[41,44,39,46,39,0,38,37],
[44,44,46,42,36,43,0,38],
[48,48,40,47,44,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,35,42,39,41,42],
[40,0,42,38,42,41,39,45],
[47,39,0,42,36,41,42,41],
[46,43,39,0,43,42,42,42],
[39,39,45,38,0,44,42,45],
[42,40,40,39,37,0,40,44],
[40,42,39,39,39,41,0,36],
[39,36,40,39,36,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,37,36,40,40,35],
[38,0,47,34,37,34,35,39],
[42,34,0,42,33,38,39,47],
[44,47,39,0,44,50,44,44],
[45,44,48,37,0,36,46,43],
[41,47,43,31,45,0,39,45],
[41,46,42,37,35,42,0,46],
[46,42,34,37,38,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,45,42,43,33,35],
[37,0,46,43,44,47,38,43],
[39,35,0,40,51,38,41,38],
[36,38,41,0,49,40,38,38],
[39,37,30,32,0,30,29,34],
[38,34,43,41,51,0,32,40],
[48,43,40,43,52,49,0,44],
[46,38,43,43,47,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,44,60,38,31,40],
[35,0,39,41,46,35,41,39],
[43,42,0,41,44,36,30,37],
[37,40,40,0,41,36,27,30],
[21,35,37,40,0,31,24,30],
[43,46,45,45,50,0,28,37],
[50,40,51,54,57,53,0,53],
[41,42,44,51,51,44,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,47,35,40,43,39],
[42,0,35,50,39,38,39,37],
[45,46,0,48,49,39,43,38],
[34,31,33,0,32,38,31,28],
[46,42,32,49,0,32,35,39],
[41,43,42,43,49,0,33,42],
[38,42,38,50,46,48,0,39],
[42,44,43,53,42,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,39,38,47,43,52],
[36,0,42,42,41,49,48,50],
[41,39,0,48,31,46,44,50],
[42,39,33,0,38,43,38,48],
[43,40,50,43,0,45,48,55],
[34,32,35,38,36,0,42,48],
[38,33,37,43,33,39,0,49],
[29,31,31,33,26,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,38,30,43,42,51,32],
[49,0,48,30,55,58,45,40],
[43,33,0,43,49,56,46,36],
[51,51,38,0,48,69,50,44],
[38,26,32,33,0,53,33,29],
[39,23,25,12,28,0,44,20],
[30,36,35,31,48,37,0,29],
[49,41,45,37,52,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,40,45,46,49,43],
[36,0,44,36,41,47,48,38],
[36,37,0,41,44,54,47,36],
[41,45,40,0,48,49,50,44],
[36,40,37,33,0,44,47,37],
[35,34,27,32,37,0,40,31],
[32,33,34,31,34,41,0,33],
[38,43,45,37,44,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,47,46,47,43,40,46],
[38,0,40,46,45,41,42,35],
[34,41,0,42,44,42,42,36],
[35,35,39,0,37,39,38,35],
[34,36,37,44,0,35,45,37],
[38,40,39,42,46,0,38,35],
[41,39,39,43,36,43,0,39],
[35,46,45,46,44,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,46,38,43,45,42],
[36,0,34,43,28,39,33,40],
[36,47,0,43,38,45,41,39],
[35,38,38,0,37,41,39,41],
[43,53,43,44,0,46,42,38],
[38,42,36,40,35,0,37,35],
[36,48,40,42,39,44,0,39],
[39,41,42,40,43,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,42,37,38,41,39],
[34,0,40,32,35,35,39,35],
[42,41,0,42,42,40,46,37],
[39,49,39,0,44,46,41,42],
[44,46,39,37,0,39,40,44],
[43,46,41,35,42,0,44,39],
[40,42,35,40,41,37,0,39],
[42,46,44,39,37,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,48,48,47,38,54],
[37,0,39,43,39,37,41,43],
[34,42,0,42,44,41,33,38],
[33,38,39,0,38,38,28,33],
[33,42,37,43,0,39,35,42],
[34,44,40,43,42,0,45,45],
[43,40,48,53,46,36,0,54],
[27,38,43,48,39,36,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,41,49,54,43,39],
[36,0,31,62,36,52,39,27],
[42,50,0,49,47,58,44,38],
[40,19,32,0,29,44,34,28],
[32,45,34,52,0,56,40,34],
[27,29,23,37,25,0,25,36],
[38,42,37,47,41,56,0,47],
[42,54,43,53,47,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,43,53,55,44,32,51],
[26,0,37,48,42,41,24,41],
[38,44,0,40,52,40,41,58],
[28,33,41,0,45,42,24,44],
[26,39,29,36,0,37,18,32],
[37,40,41,39,44,0,33,38],
[49,57,40,57,63,48,0,55],
[30,40,23,37,49,43,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,48,41,37,41,37,33],
[60,0,49,46,46,42,32,59],
[33,32,0,18,39,27,20,39],
[40,35,63,0,46,37,37,51],
[44,35,42,35,0,31,32,46],
[40,39,54,44,50,0,41,48],
[44,49,61,44,49,40,0,48],
[48,22,42,30,35,33,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,37,45,40,43,45],
[34,0,33,33,37,37,40,41],
[34,48,0,37,40,38,42,45],
[44,48,44,0,47,38,43,42],
[36,44,41,34,0,35,46,37],
[41,44,43,43,46,0,46,40],
[38,41,39,38,35,35,0,39],
[36,40,36,39,44,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,28,50,45,37,48],
[39,0,29,36,40,39,36,38],
[41,52,0,41,40,49,35,47],
[53,45,40,0,39,40,41,44],
[31,41,41,42,0,44,36,46],
[36,42,32,41,37,0,38,40],
[44,45,46,40,45,43,0,49],
[33,43,34,37,35,41,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,47,12,21,33,70],
[37,0,46,37,35,23,33,49],
[37,35,0,48,37,46,33,59],
[34,44,33,0,35,22,33,59],
[69,46,44,46,0,32,44,70],
[60,58,35,59,49,0,44,59],
[48,48,48,48,37,37,0,49],
[11,32,22,22,11,22,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,28,28,0,28,26,27],
[81,0,54,54,28,28,53,55],
[53,27,0,81,0,55,53,27],
[53,27,0,0,0,0,53,27],
[81,53,81,81,0,55,53,27],
[53,53,26,81,26,0,53,53],
[55,28,28,28,28,28,0,55],
[54,26,54,54,54,28,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,41,38,47,46,32,42],
[56,0,46,43,47,45,39,48],
[40,35,0,43,53,28,42,51],
[43,38,38,0,50,35,38,36],
[34,34,28,31,0,28,20,40],
[35,36,53,46,53,0,40,51],
[49,42,39,43,61,41,0,46],
[39,33,30,45,41,30,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,21,61,41,21,60,21],
[41,0,41,41,41,41,40,21],
[60,40,0,61,40,40,60,41],
[20,40,20,0,0,20,40,21],
[40,40,41,81,0,20,40,61],
[60,40,41,61,61,0,60,41],
[21,41,21,41,41,21,0,21],
[60,60,40,60,20,40,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,42,45,46,40,38],
[39,0,46,47,46,50,44,49],
[39,35,0,44,40,47,34,39],
[39,34,37,0,38,45,38,39],
[36,35,41,43,0,52,44,41],
[35,31,34,36,29,0,30,36],
[41,37,47,43,37,51,0,39],
[43,32,42,42,40,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,36,27,36,43,40,48],
[35,0,39,22,31,45,27,37],
[45,42,0,35,38,42,41,46],
[54,59,46,0,41,46,39,46],
[45,50,43,40,0,33,32,47],
[38,36,39,35,48,0,30,42],
[41,54,40,42,49,51,0,50],
[33,44,35,35,34,39,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,48,41,43,41,48],
[34,0,43,46,37,37,35,42],
[41,38,0,36,41,32,36,41],
[33,35,45,0,39,40,34,44],
[40,44,40,42,0,40,45,47],
[38,44,49,41,41,0,46,49],
[40,46,45,47,36,35,0,41],
[33,39,40,37,34,32,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,44,43,42,42,45],
[43,0,36,46,45,37,33,43],
[37,45,0,42,48,35,40,42],
[37,35,39,0,41,29,41,39],
[38,36,33,40,0,22,41,39],
[39,44,46,52,59,0,55,52],
[39,48,41,40,40,26,0,42],
[36,38,39,42,42,29,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,39,35,38,36,37],
[41,0,42,47,42,36,42,43],
[36,39,0,37,39,35,42,40],
[42,34,44,0,46,37,42,45],
[46,39,42,35,0,37,44,44],
[43,45,46,44,44,0,39,51],
[45,39,39,39,37,42,0,48],
[44,38,41,36,37,30,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,43,36,39,34,44],
[42,0,39,44,38,41,35,31],
[40,42,0,43,30,39,33,42],
[38,37,38,0,33,33,37,28],
[45,43,51,48,0,38,39,44],
[42,40,42,48,43,0,36,38],
[47,46,48,44,42,45,0,40],
[37,50,39,53,37,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,49,45,26,39,30,39],
[46,0,39,38,39,28,36,48],
[32,42,0,44,35,36,38,41],
[36,43,37,0,35,28,36,41],
[55,42,46,46,0,48,40,43],
[42,53,45,53,33,0,41,57],
[51,45,43,45,41,40,0,52],
[42,33,40,40,38,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,45,38,37,38,49],
[36,0,34,33,24,31,34,38],
[37,47,0,34,33,35,36,39],
[36,48,47,0,42,38,34,38],
[43,57,48,39,0,49,41,44],
[44,50,46,43,32,0,35,44],
[43,47,45,47,40,46,0,41],
[32,43,42,43,37,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,35,38,43,36,30],
[35,0,34,26,48,39,40,36],
[42,47,0,36,35,44,36,30],
[46,55,45,0,50,49,40,46],
[43,33,46,31,0,51,26,30],
[38,42,37,32,30,0,30,27],
[45,41,45,41,55,51,0,39],
[51,45,51,35,51,54,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,47,46,48,50,51],
[45,0,48,39,42,35,51,48],
[36,33,0,38,30,36,35,42],
[34,42,43,0,36,36,43,47],
[35,39,51,45,0,44,42,47],
[33,46,45,45,37,0,43,43],
[31,30,46,38,39,38,0,37],
[30,33,39,34,34,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,41,36,38,29,43,29],
[51,0,64,36,63,50,63,43],
[40,17,0,32,44,28,49,28],
[45,45,49,0,66,43,57,36],
[43,18,37,15,0,12,28,19],
[52,31,53,38,69,0,66,46],
[38,18,32,24,53,15,0,36],
[52,38,53,45,62,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,49,38,44,42,44],
[42,0,41,43,37,38,40,47],
[41,40,0,49,47,37,42,46],
[32,38,32,0,41,37,37,44],
[43,44,34,40,0,40,38,40],
[37,43,44,44,41,0,38,51],
[39,41,39,44,43,43,0,46],
[37,34,35,37,41,30,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,42,41,47,39,31],
[35,0,43,42,38,51,25,36],
[42,38,0,41,43,41,41,37],
[39,39,40,0,37,42,35,34],
[40,43,38,44,0,42,32,31],
[34,30,40,39,39,0,33,33],
[42,56,40,46,49,48,0,45],
[50,45,44,47,50,48,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,46,47,47,41,39],
[35,0,45,47,41,42,36,40],
[39,36,0,40,38,37,30,44],
[35,34,41,0,33,41,24,28],
[34,40,43,48,0,46,35,45],
[34,39,44,40,35,0,38,40],
[40,45,51,57,46,43,0,50],
[42,41,37,53,36,41,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,43,46,40,48,37,37],
[32,0,27,31,41,42,40,37],
[38,54,0,44,43,46,44,49],
[35,50,37,0,46,36,47,40],
[41,40,38,35,0,41,36,34],
[33,39,35,45,40,0,30,32],
[44,41,37,34,45,51,0,33],
[44,44,32,41,47,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,42,43,34,45,43],
[41,0,46,34,41,38,41,39],
[38,35,0,40,38,41,41,37],
[39,47,41,0,50,46,43,41],
[38,40,43,31,0,34,37,37],
[47,43,40,35,47,0,43,38],
[36,40,40,38,44,38,0,40],
[38,42,44,40,44,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,40,39,40,28,46],
[42,0,41,54,27,47,42,40],
[40,40,0,40,53,29,55,55],
[41,27,41,0,32,20,49,33],
[42,54,28,49,0,34,44,33],
[41,34,52,61,47,0,46,45],
[53,39,26,32,37,35,0,33],
[35,41,26,48,48,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,35,38,32,52,40,37],
[27,0,31,34,24,38,35,31],
[46,50,0,42,42,52,39,43],
[43,47,39,0,36,41,47,42],
[49,57,39,45,0,46,47,40],
[29,43,29,40,35,0,42,36],
[41,46,42,34,34,39,0,35],
[44,50,38,39,41,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,41,33,44,40,37],
[44,0,42,45,37,45,44,36],
[49,39,0,47,47,51,49,40],
[40,36,34,0,33,40,38,34],
[48,44,34,48,0,43,40,46],
[37,36,30,41,38,0,38,37],
[41,37,32,43,41,43,0,37],
[44,45,41,47,35,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,29,43,44,36,41,45],
[51,0,43,53,53,36,47,49],
[52,38,0,49,50,46,51,48],
[38,28,32,0,45,33,36,35],
[37,28,31,36,0,30,32,29],
[45,45,35,48,51,0,52,45],
[40,34,30,45,49,29,0,34],
[36,32,33,46,52,36,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,42,41,35,45,44,42],
[33,0,41,42,37,42,38,41],
[39,40,0,33,34,42,42,38],
[40,39,48,0,33,39,44,38],
[46,44,47,48,0,44,50,40],
[36,39,39,42,37,0,48,41],
[37,43,39,37,31,33,0,36],
[39,40,43,43,41,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,40,32,37,38,36],
[41,0,42,35,36,39,38,26],
[37,39,0,31,30,27,39,34],
[41,46,50,0,40,41,36,42],
[49,45,51,41,0,42,33,39],
[44,42,54,40,39,0,35,45],
[43,43,42,45,48,46,0,37],
[45,55,47,39,42,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,40,43,47,47,47],
[32,0,34,46,39,47,38,39],
[39,47,0,56,49,40,42,52],
[41,35,25,0,26,36,36,34],
[38,42,32,55,0,47,42,43],
[34,34,41,45,34,0,31,35],
[34,43,39,45,39,50,0,46],
[34,42,29,47,38,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,29,35,34,38,29,32],
[50,0,43,38,46,48,39,39],
[52,38,0,43,47,44,46,42],
[46,43,38,0,46,44,40,39],
[47,35,34,35,0,41,30,34],
[43,33,37,37,40,0,39,36],
[52,42,35,41,51,42,0,41],
[49,42,39,42,47,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,33,32,39,30,34],
[43,0,35,30,35,47,36,48],
[37,46,0,36,36,45,42,38],
[48,51,45,0,35,58,35,50],
[49,46,45,46,0,47,39,44],
[42,34,36,23,34,0,26,28],
[51,45,39,46,42,55,0,52],
[47,33,43,31,37,53,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,58,50,50,40,56],
[36,0,47,53,42,40,41,47],
[34,34,0,47,40,42,31,43],
[23,28,34,0,39,28,32,39],
[31,39,41,42,0,42,38,42],
[31,41,39,53,39,0,41,41],
[41,40,50,49,43,40,0,52],
[25,34,38,42,39,40,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,41,37,44,42,46],
[41,0,42,37,44,40,45,40],
[38,39,0,41,41,41,46,48],
[40,44,40,0,35,39,43,44],
[44,37,40,46,0,38,42,48],
[37,41,40,42,43,0,44,41],
[39,36,35,38,39,37,0,36],
[35,41,33,37,33,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,36,32,39,36,42],
[35,0,46,40,32,24,39,38],
[38,35,0,40,26,29,44,41],
[45,41,41,0,44,43,53,31],
[49,49,55,37,0,34,47,36],
[42,57,52,38,47,0,55,46],
[45,42,37,28,34,26,0,36],
[39,43,40,50,45,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,43,36,44,35,39],
[39,0,25,36,32,33,36,45],
[40,56,0,45,42,46,44,48],
[38,45,36,0,43,43,44,32],
[45,49,39,38,0,50,45,42],
[37,48,35,38,31,0,41,41],
[46,45,37,37,36,40,0,43],
[42,36,33,49,39,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,45,37,40,41,33,33],
[33,0,37,39,33,34,34,38],
[36,44,0,39,36,40,43,37],
[44,42,42,0,37,48,46,37],
[41,48,45,44,0,31,32,37],
[40,47,41,33,50,0,52,43],
[48,47,38,35,49,29,0,37],
[48,43,44,44,44,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,41,35,40,42,36,37],
[51,0,43,47,43,45,39,45],
[40,38,0,37,39,34,33,38],
[46,34,44,0,43,38,42,39],
[41,38,42,38,0,41,37,40],
[39,36,47,43,40,0,37,41],
[45,42,48,39,44,44,0,43],
[44,36,43,42,41,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,43,33,20,29,45],
[42,0,52,42,51,36,50,48],
[43,29,0,31,41,27,39,43],
[38,39,50,0,40,38,39,48],
[48,30,40,41,0,16,41,39],
[61,45,54,43,65,0,40,44],
[52,31,42,42,40,41,0,41],
[36,33,38,33,42,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,43,40,34,37,34],
[37,0,43,40,39,40,45,36],
[33,38,0,45,41,35,42,40],
[38,41,36,0,37,32,40,38],
[41,42,40,44,0,46,43,36],
[47,41,46,49,35,0,44,49],
[44,36,39,41,38,37,0,41],
[47,45,41,43,45,32,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,42,38,35,45,33],
[42,0,34,46,44,41,46,39],
[46,47,0,46,49,45,51,37],
[39,35,35,0,38,38,47,36],
[43,37,32,43,0,43,52,37],
[46,40,36,43,38,0,42,42],
[36,35,30,34,29,39,0,33],
[48,42,44,45,44,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,34,45,44,36,45,44],
[27,0,25,19,37,30,28,29],
[47,56,0,36,46,43,48,45],
[36,62,45,0,52,45,40,41],
[37,44,35,29,0,30,44,37],
[45,51,38,36,51,0,39,43],
[36,53,33,41,37,42,0,37],
[37,52,36,40,44,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,49,45,49,47,37,45],
[36,0,58,41,35,47,33,30],
[32,23,0,24,37,31,21,28],
[36,40,57,0,39,45,30,37],
[32,46,44,42,0,45,34,40],
[34,34,50,36,36,0,27,35],
[44,48,60,51,47,54,0,35],
[36,51,53,44,41,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,42,42,44,40,39,49],
[33,0,46,42,43,30,33,39],
[39,35,0,42,43,33,34,43],
[39,39,39,0,37,37,27,41],
[37,38,38,44,0,44,33,37],
[41,51,48,44,37,0,44,42],
[42,48,47,54,48,37,0,47],
[32,42,38,40,44,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,38,35,38,39,40],
[41,0,38,37,36,38,39,42],
[46,43,0,42,41,41,40,42],
[43,44,39,0,39,32,43,45],
[46,45,40,42,0,40,48,44],
[43,43,40,49,41,0,46,45],
[42,42,41,38,33,35,0,49],
[41,39,39,36,37,36,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,33,34,42,34,40],
[45,0,41,34,45,41,41,40],
[46,40,0,30,44,37,42,50],
[48,47,51,0,43,40,40,45],
[47,36,37,38,0,24,37,35],
[39,40,44,41,57,0,40,39],
[47,40,39,41,44,41,0,47],
[41,41,31,36,46,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,36,42,46,30,33,43],
[53,0,40,52,51,42,46,56],
[45,41,0,44,40,36,33,46],
[39,29,37,0,32,41,30,49],
[35,30,41,49,0,39,24,44],
[51,39,45,40,42,0,37,53],
[48,35,48,51,57,44,0,49],
[38,25,35,32,37,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,22,23,34,24,33],
[43,0,31,34,31,31,36,34],
[46,50,0,42,33,44,46,36],
[59,47,39,0,35,36,54,45],
[58,50,48,46,0,35,57,35],
[47,50,37,45,46,0,38,47],
[57,45,35,27,24,43,0,39],
[48,47,45,36,46,34,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,28,35,41,37,35,35],
[38,0,30,26,38,34,29,22],
[53,51,0,39,59,51,46,51],
[46,55,42,0,42,42,41,35],
[40,43,22,39,0,49,39,36],
[44,47,30,39,32,0,36,35],
[46,52,35,40,42,45,0,38],
[46,59,30,46,45,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,45,46,48,39,38],
[40,0,52,51,54,61,50,51],
[33,29,0,32,35,39,37,39],
[36,30,49,0,39,32,39,48],
[35,27,46,42,0,37,38,39],
[33,20,42,49,44,0,34,46],
[42,31,44,42,43,47,0,42],
[43,30,42,33,42,35,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,41,30,36,45,31,29],
[50,0,37,39,36,39,29,32],
[40,44,0,41,47,37,35,30],
[51,42,40,0,37,27,28,32],
[45,45,34,44,0,41,30,41],
[36,42,44,54,40,0,38,42],
[50,52,46,53,51,43,0,35],
[52,49,51,49,40,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,39,36,54,51,40],
[38,0,41,51,41,36,47,42],
[37,40,0,51,43,49,50,43],
[42,30,30,0,41,25,53,48],
[45,40,38,40,0,38,48,55],
[27,45,32,56,43,0,52,44],
[30,34,31,28,33,29,0,26],
[41,39,38,33,26,37,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,43,42,38,47,43],
[40,0,44,43,37,38,45,42],
[39,37,0,39,45,35,42,39],
[38,38,42,0,41,38,40,38],
[39,44,36,40,0,31,38,44],
[43,43,46,43,50,0,49,40],
[34,36,39,41,43,32,0,34],
[38,39,42,43,37,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,36,35,44,27,35],
[37,0,44,35,43,35,26,36],
[47,37,0,36,27,44,27,45],
[45,46,45,0,34,43,18,27],
[46,38,54,47,0,55,47,55],
[37,46,37,38,26,0,29,37],
[54,55,54,63,34,52,0,27],
[46,45,36,54,26,44,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,49,42,38,48,33],
[39,0,40,41,38,25,38,29],
[38,41,0,45,35,41,38,31],
[32,40,36,0,30,30,31,30],
[39,43,46,51,0,36,42,44],
[43,56,40,51,45,0,51,46],
[33,43,43,50,39,30,0,33],
[48,52,50,51,37,35,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,39,33,43,41,41],
[43,0,39,42,40,33,37,45],
[41,42,0,43,41,35,40,44],
[42,39,38,0,43,34,29,44],
[48,41,40,38,0,39,42,50],
[38,48,46,47,42,0,41,50],
[40,44,41,52,39,40,0,44],
[40,36,37,37,31,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,34,42,34,37,38],
[39,0,41,35,38,35,37,33],
[46,40,0,40,41,41,40,39],
[47,46,41,0,43,43,39,38],
[39,43,40,38,0,36,37,37],
[47,46,40,38,45,0,45,41],
[44,44,41,42,44,36,0,38],
[43,48,42,43,44,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,48,40,46,51,42],
[38,0,37,35,37,31,40,41],
[36,44,0,44,36,42,41,38],
[33,46,37,0,44,37,41,50],
[41,44,45,37,0,34,40,45],
[35,50,39,44,47,0,48,34],
[30,41,40,40,41,33,0,35],
[39,40,43,31,36,47,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,40,39,40,42,39],
[37,0,44,47,43,39,46,44],
[46,37,0,50,34,43,38,42],
[41,34,31,0,33,35,42,32],
[42,38,47,48,0,36,46,40],
[41,42,38,46,45,0,41,41],
[39,35,43,39,35,40,0,38],
[42,37,39,49,41,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,45,32,36,45,36,41],
[37,0,51,42,33,45,37,44],
[36,30,0,35,41,32,39,54],
[49,39,46,0,50,45,42,50],
[45,48,40,31,0,48,47,47],
[36,36,49,36,33,0,33,52],
[45,44,42,39,34,48,0,53],
[40,37,27,31,34,29,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,39,37,35,38,37],
[40,0,46,46,36,36,39,43],
[37,35,0,39,41,35,34,35],
[42,35,42,0,40,33,37,29],
[44,45,40,41,0,36,42,34],
[46,45,46,48,45,0,39,36],
[43,42,47,44,39,42,0,37],
[44,38,46,52,47,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,42,36,37,37,35],
[39,0,41,40,42,45,43,43],
[45,40,0,40,47,45,48,45],
[39,41,41,0,44,49,41,45],
[45,39,34,37,0,48,37,44],
[44,36,36,32,33,0,41,32],
[44,38,33,40,44,40,0,38],
[46,38,36,36,37,49,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,48,43,45,42,37,42],
[37,0,41,41,38,38,38,37],
[33,40,0,46,43,37,36,42],
[38,40,35,0,44,38,32,39],
[36,43,38,37,0,37,36,34],
[39,43,44,43,44,0,43,43],
[44,43,45,49,45,38,0,38],
[39,44,39,42,47,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,37,46,33,45,38],
[43,0,39,35,44,38,50,47],
[44,42,0,38,44,38,41,46],
[44,46,43,0,49,41,39,38],
[35,37,37,32,0,29,44,29],
[48,43,43,40,52,0,47,45],
[36,31,40,42,37,34,0,33],
[43,34,35,43,52,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,44,51,37,35,48,45],
[29,0,47,53,34,34,38,37],
[37,34,0,49,30,41,44,40],
[30,28,32,0,24,27,26,34],
[44,47,51,57,0,35,52,48],
[46,47,40,54,46,0,50,45],
[33,43,37,55,29,31,0,46],
[36,44,41,47,33,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,44,36,36,33,47],
[43,0,38,40,38,37,27,36],
[45,43,0,51,39,42,37,40],
[37,41,30,0,34,31,27,32],
[45,43,42,47,0,36,32,38],
[45,44,39,50,45,0,37,41],
[48,54,44,54,49,44,0,39],
[34,45,41,49,43,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,44,35,36,43,43,45],
[31,0,37,28,28,31,29,30],
[37,44,0,21,33,39,30,30],
[46,53,60,0,48,51,38,59],
[45,53,48,33,0,47,48,46],
[38,50,42,30,34,0,31,34],
[38,52,51,43,33,50,0,49],
[36,51,51,22,35,47,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,38,48,38,41,43,46],
[33,0,42,45,37,40,41,33],
[43,39,0,41,39,40,44,33],
[33,36,40,0,35,38,35,37],
[43,44,42,46,0,34,36,41],
[40,41,41,43,47,0,44,35],
[38,40,37,46,45,37,0,37],
[35,48,48,44,40,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,39,48,40,48,42,48],
[28,0,28,42,34,46,31,35],
[42,53,0,46,43,52,34,48],
[33,39,35,0,46,25,27,39],
[41,47,38,35,0,33,41,49],
[33,35,29,56,48,0,34,41],
[39,50,47,54,40,47,0,46],
[33,46,33,42,32,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,52,50,32,54,37],
[36,0,41,48,38,33,36,37],
[36,40,0,43,48,39,40,58],
[29,33,38,0,37,28,31,43],
[31,43,33,44,0,26,32,38],
[49,48,42,53,55,0,35,50],
[27,45,41,50,49,46,0,50],
[44,44,23,38,43,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,52,38,44,49,49,48],
[39,0,51,39,31,43,43,48],
[29,30,0,33,36,40,46,39],
[43,42,48,0,46,45,45,40],
[37,50,45,35,0,51,35,45],
[32,38,41,36,30,0,29,38],
[32,38,35,36,46,52,0,33],
[33,33,42,41,36,43,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,35,40,45,31,40],
[43,0,37,39,41,44,36,44],
[42,44,0,35,38,38,41,43],
[46,42,46,0,44,35,43,49],
[41,40,43,37,0,43,37,44],
[36,37,43,46,38,0,36,41],
[50,45,40,38,44,45,0,44],
[41,37,38,32,37,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,55,50,54,37,48,43],
[34,0,49,34,42,31,42,36],
[26,32,0,35,38,43,39,40],
[31,47,46,0,48,45,50,45],
[27,39,43,33,0,32,37,46],
[44,50,38,36,49,0,43,55],
[33,39,42,31,44,38,0,43],
[38,45,41,36,35,26,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,50,43,44,44,48,44],
[43,0,49,38,42,49,48,46],
[31,32,0,37,31,39,35,34],
[38,43,44,0,36,45,42,37],
[37,39,50,45,0,45,43,40],
[37,32,42,36,36,0,35,39],
[33,33,46,39,38,46,0,38],
[37,35,47,44,41,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,52,60,44,59,50,40],
[33,0,39,44,38,45,41,24],
[29,42,0,59,46,42,47,43],
[21,37,22,0,17,36,35,25],
[37,43,35,64,0,57,45,37],
[22,36,39,45,24,0,40,27],
[31,40,34,46,36,41,0,27],
[41,57,38,56,44,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,28,39,35,23,36,36],
[50,0,40,47,42,36,47,41],
[53,41,0,40,42,44,45,42],
[42,34,41,0,42,34,46,44],
[46,39,39,39,0,33,47,36],
[58,45,37,47,48,0,45,41],
[45,34,36,35,34,36,0,31],
[45,40,39,37,45,40,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,41,42,42,37,43],
[39,0,37,42,46,46,42,45],
[43,44,0,42,44,48,40,44],
[40,39,39,0,44,51,37,39],
[39,35,37,37,0,46,33,33],
[39,35,33,30,35,0,43,41],
[44,39,41,44,48,38,0,47],
[38,36,37,42,48,40,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,50,38,46,41,44],
[39,0,44,47,44,42,42,38],
[39,37,0,47,37,43,41,42],
[31,34,34,0,34,36,37,34],
[43,37,44,47,0,46,50,37],
[35,39,38,45,35,0,39,35],
[40,39,40,44,31,42,0,43],
[37,43,39,47,44,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,42,51,31,50,43],
[18,0,39,29,20,28,18,20],
[20,42,0,32,22,31,20,42],
[39,52,49,0,41,40,39,41],
[30,61,59,40,0,61,39,41],
[50,53,50,41,20,0,39,52],
[31,63,61,42,42,42,0,32],
[38,61,39,40,40,29,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,37,52,38,42,38],
[35,0,46,29,47,36,45,42],
[34,35,0,38,47,34,37,34],
[44,52,43,0,55,44,48,33],
[29,34,34,26,0,30,40,30],
[43,45,47,37,51,0,45,43],
[39,36,44,33,41,36,0,35],
[43,39,47,48,51,38,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,34,48,35,44,36],
[51,0,39,46,50,43,51,45],
[49,42,0,42,47,38,45,49],
[47,35,39,0,38,29,37,29],
[33,31,34,43,0,23,34,31],
[46,38,43,52,58,0,50,46],
[37,30,36,44,47,31,0,32],
[45,36,32,52,50,35,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,37,39,31,40,45,32],
[21,0,13,20,15,30,29,22],
[44,68,0,52,45,45,45,40],
[42,61,29,0,54,46,42,47],
[50,66,36,27,0,33,43,29],
[41,51,36,35,48,0,35,48],
[36,52,36,39,38,46,0,30],
[49,59,41,34,52,33,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,40,39,35,40,37],
[43,0,40,42,44,41,39,40],
[36,41,0,41,40,37,41,38],
[41,39,40,0,43,36,38,38],
[42,37,41,38,0,43,42,35],
[46,40,44,45,38,0,40,42],
[41,42,40,43,39,41,0,36],
[44,41,43,43,46,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,26,34,42,34,32,34],
[48,0,40,44,47,42,42,33],
[55,41,0,42,39,36,40,26],
[47,37,39,0,46,46,46,42],
[39,34,42,35,0,41,35,32],
[47,39,45,35,40,0,39,36],
[49,39,41,35,46,42,0,32],
[47,48,55,39,49,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,38,37,42,37,41],
[34,0,29,32,35,32,27,36],
[36,52,0,37,43,45,30,46],
[43,49,44,0,38,36,40,47],
[44,46,38,43,0,50,41,46],
[39,49,36,45,31,0,41,43],
[44,54,51,41,40,40,0,45],
[40,45,35,34,35,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,42,22,34,39,34,29],
[46,0,36,31,30,37,41,28],
[39,45,0,42,37,44,39,38],
[59,50,39,0,49,49,39,39],
[47,51,44,32,0,47,45,46],
[42,44,37,32,34,0,37,32],
[47,40,42,42,36,44,0,41],
[52,53,43,42,35,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,44,49,45,49,47],
[38,0,35,33,53,54,49,44],
[47,46,0,32,51,50,58,49],
[37,48,49,0,44,54,54,58],
[32,28,30,37,0,42,43,40],
[36,27,31,27,39,0,46,43],
[32,32,23,27,38,35,0,40],
[34,37,32,23,41,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,51,40,37,30,44],
[41,0,46,46,41,36,25,35],
[34,35,0,38,40,40,27,31],
[30,35,43,0,30,41,27,30],
[41,40,41,51,0,49,35,36],
[44,45,41,40,32,0,31,36],
[51,56,54,54,46,50,0,40],
[37,46,50,51,45,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,46,46,34,56,37],
[22,0,23,10,12,22,22,37],
[22,58,0,44,24,46,46,34],
[35,71,37,0,37,47,59,37],
[35,69,57,44,0,22,57,35],
[47,59,35,34,59,0,47,47],
[25,59,35,22,24,34,0,25],
[44,44,47,44,46,34,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,31,33,34,37,41],
[44,0,44,36,41,42,43,45],
[43,37,0,38,38,35,39,42],
[50,45,43,0,41,37,40,47],
[48,40,43,40,0,40,38,45],
[47,39,46,44,41,0,46,48],
[44,38,42,41,43,35,0,45],
[40,36,39,34,36,33,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,51,35,39,35,32,38],
[49,0,47,40,47,44,45,47],
[30,34,0,40,39,39,34,42],
[46,41,41,0,40,38,37,42],
[42,34,42,41,0,35,36,35],
[46,37,42,43,46,0,39,50],
[49,36,47,44,45,42,0,45],
[43,34,39,39,46,31,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,42,38,31,49,38],
[43,0,54,52,50,36,51,48],
[33,27,0,29,24,19,38,35],
[39,29,52,0,38,32,41,43],
[43,31,57,43,0,35,50,40],
[50,45,62,49,46,0,56,35],
[32,30,43,40,31,25,0,37],
[43,33,46,38,41,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,51,38,39,62,51,50],
[40,0,47,43,39,47,41,36],
[30,34,0,38,19,36,33,31],
[43,38,43,0,38,54,54,31],
[42,42,62,43,0,70,51,39],
[19,34,45,27,11,0,30,32],
[30,40,48,27,30,51,0,31],
[31,45,50,50,42,49,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,52,45,37,46,35,44],
[29,0,51,42,38,34,33,40],
[29,30,0,32,20,29,32,37],
[36,39,49,0,36,41,35,35],
[44,43,61,45,0,37,45,38],
[35,47,52,40,44,0,44,42],
[46,48,49,46,36,37,0,44],
[37,41,44,46,43,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,48,48,50,49,38],
[36,0,36,35,40,42,42,36],
[37,45,0,32,42,43,44,32],
[33,46,49,0,46,52,44,41],
[33,41,39,35,0,42,34,33],
[31,39,38,29,39,0,40,29],
[32,39,37,37,47,41,0,34],
[43,45,49,40,48,52,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,56,44,39,47,39],
[43,0,37,51,52,31,59,41],
[41,44,0,44,47,41,52,26],
[25,30,37,0,33,36,38,33],
[37,29,34,48,0,35,42,37],
[42,50,40,45,46,0,51,39],
[34,22,29,43,39,30,0,31],
[42,40,55,48,44,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,47,38,45,40,47],
[42,0,42,41,40,45,38,46],
[40,39,0,44,38,48,41,49],
[34,40,37,0,37,42,39,45],
[43,41,43,44,0,47,39,53],
[36,36,33,39,34,0,37,40],
[41,43,40,42,42,44,0,45],
[34,35,32,36,28,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,46,48,40,43,36],
[37,0,36,42,49,37,29,34],
[41,45,0,42,43,40,33,46],
[35,39,39,0,32,44,37,38],
[33,32,38,49,0,38,37,41],
[41,44,41,37,43,0,39,42],
[38,52,48,44,44,42,0,52],
[45,47,35,43,40,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,42,42,46,40,52,45],
[29,0,37,33,34,38,35,38],
[39,44,0,34,45,39,41,42],
[39,48,47,0,43,43,46,43],
[35,47,36,38,0,42,46,42],
[41,43,42,38,39,0,42,44],
[29,46,40,35,35,39,0,40],
[36,43,39,38,39,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,37,34,43,40,39],
[39,0,29,27,26,34,38,36],
[44,52,0,43,42,40,45,39],
[44,54,38,0,45,46,45,40],
[47,55,39,36,0,44,43,50],
[38,47,41,35,37,0,37,38],
[41,43,36,36,38,44,0,37],
[42,45,42,41,31,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,44,48,34,41,41],
[43,0,36,33,42,36,35,39],
[45,45,0,39,52,43,44,51],
[37,48,42,0,48,42,39,42],
[33,39,29,33,0,28,30,33],
[47,45,38,39,53,0,43,45],
[40,46,37,42,51,38,0,48],
[40,42,30,39,48,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,45,51,44,39,49],
[37,0,45,57,53,54,36,43],
[49,36,0,48,46,44,39,43],
[36,24,33,0,37,26,23,29],
[30,28,35,44,0,44,34,38],
[37,27,37,55,37,0,39,29],
[42,45,42,58,47,42,0,28],
[32,38,38,52,43,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,48,50,39,46,50,43],
[32,0,41,52,35,42,52,39],
[33,40,0,48,45,44,45,45],
[31,29,33,0,29,35,39,42],
[42,46,36,52,0,39,50,48],
[35,39,37,46,42,0,45,42],
[31,29,36,42,31,36,0,35],
[38,42,36,39,33,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,40,38,27,46,34],
[47,0,43,52,38,42,55,42],
[42,38,0,44,39,30,38,37],
[41,29,37,0,30,25,40,29],
[43,43,42,51,0,35,50,37],
[54,39,51,56,46,0,59,46],
[35,26,43,41,31,22,0,31],
[47,39,44,52,44,35,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,21,40,41,30,33,34],
[50,0,30,54,33,37,50,41],
[60,51,0,47,39,39,41,37],
[41,27,34,0,30,38,33,30],
[40,48,42,51,0,42,45,39],
[51,44,42,43,39,0,44,43],
[48,31,40,48,36,37,0,27],
[47,40,44,51,42,38,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,41,40,42,45,45,52],
[25,0,27,31,36,39,39,45],
[40,54,0,34,43,40,50,51],
[41,50,47,0,41,52,40,49],
[39,45,38,40,0,45,45,46],
[36,42,41,29,36,0,37,44],
[36,42,31,41,36,44,0,47],
[29,36,30,32,35,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,35,55,46,53,52,63],
[35,0,35,46,18,44,53,54],
[46,46,0,45,37,46,52,72],
[26,35,36,0,26,26,44,45],
[35,63,44,55,0,44,53,72],
[28,37,35,55,37,0,53,53],
[29,28,29,37,28,28,0,47],
[18,27,9,36,9,28,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,53,31,58,52,54,54],
[51,0,59,36,65,44,52,45],
[28,22,0,14,28,30,29,31],
[50,45,67,0,66,52,38,53],
[23,16,53,15,0,24,30,32],
[29,37,51,29,57,0,37,37],
[27,29,52,43,51,44,0,43],
[27,36,50,28,49,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,40,43,43,42,40],
[42,0,38,40,37,42,43,42],
[41,43,0,38,45,47,41,43],
[41,41,43,0,49,46,40,44],
[38,44,36,32,0,46,42,39],
[38,39,34,35,35,0,43,32],
[39,38,40,41,39,38,0,42],
[41,39,38,37,42,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,35,47,44,37,44],
[41,0,40,41,42,32,35,48],
[45,41,0,45,42,40,38,42],
[46,40,36,0,43,40,39,47],
[34,39,39,38,0,32,34,36],
[37,49,41,41,49,0,46,46],
[44,46,43,42,47,35,0,55],
[37,33,39,34,45,35,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,33,39,38,39,35],
[43,0,41,38,40,37,43,39],
[36,40,0,35,34,34,45,35],
[48,43,46,0,38,35,46,43],
[42,41,47,43,0,42,44,40],
[43,44,47,46,39,0,51,38],
[42,38,36,35,37,30,0,32],
[46,42,46,38,41,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,55,36,32,37,39,50],
[54,0,53,52,48,39,56,64],
[26,28,0,37,37,31,29,45],
[45,29,44,0,38,30,49,45],
[49,33,44,43,0,41,40,49],
[44,42,50,51,40,0,43,50],
[42,25,52,32,41,38,0,43],
[31,17,36,36,32,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,34,44,50,36,64],
[39,0,46,33,47,54,48,56],
[36,35,0,27,37,42,29,43],
[47,48,54,0,37,48,45,56],
[37,34,44,44,0,37,39,31],
[31,27,39,33,44,0,40,38],
[45,33,52,36,42,41,0,49],
[17,25,38,25,50,43,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,47,40,47,33,41],
[40,0,38,44,37,37,29,28],
[37,43,0,53,42,49,40,29],
[34,37,28,0,36,35,30,37],
[41,44,39,45,0,40,32,39],
[34,44,32,46,41,0,27,34],
[48,52,41,51,49,54,0,34],
[40,53,52,44,42,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,47,30,47,35,31,34],
[39,0,49,38,50,36,29,34],
[34,32,0,30,35,41,26,39],
[51,43,51,0,52,48,42,34],
[34,31,46,29,0,33,26,27],
[46,45,40,33,48,0,31,32],
[50,52,55,39,55,50,0,52],
[47,47,42,47,54,49,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,43,50,42,44,44,29],
[23,0,36,36,43,22,30,22],
[38,45,0,45,51,30,46,30],
[31,45,36,0,43,37,23,30],
[39,38,30,38,0,31,31,24],
[37,59,51,44,50,0,45,44],
[37,51,35,58,50,36,0,29],
[52,59,51,51,57,37,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,58,67,39,50,59,74],
[32,0,40,25,41,17,33,65],
[23,41,0,40,39,33,32,56],
[14,56,41,0,31,47,32,56],
[42,40,42,50,0,49,43,65],
[31,64,48,34,32,0,24,55],
[22,48,49,49,38,57,0,48],
[7,16,25,25,16,26,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,55,40,43,53,51,49],
[39,0,42,40,38,52,41,47],
[26,39,0,40,54,43,41,35],
[41,41,41,0,47,47,46,39],
[38,43,27,34,0,46,40,45],
[28,29,38,34,35,0,44,33],
[30,40,40,35,41,37,0,42],
[32,34,46,42,36,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,53,58,52,62,39,47],
[20,0,46,38,31,44,40,29],
[28,35,0,46,38,41,42,32],
[23,43,35,0,43,48,42,33],
[29,50,43,38,0,43,51,41],
[19,37,40,33,38,0,44,36],
[42,41,39,39,30,37,0,31],
[34,52,49,48,40,45,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,44,44,30,39,38,37],
[49,0,47,39,45,47,45,33],
[37,34,0,42,25,43,53,43],
[37,42,39,0,32,29,41,50],
[51,36,56,49,0,48,43,47],
[42,34,38,52,33,0,34,45],
[43,36,28,40,38,47,0,43],
[44,48,38,31,34,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,34,46,45,40,42],
[47,0,43,44,44,45,42,38],
[47,38,0,38,37,42,37,40],
[47,37,43,0,44,47,34,40],
[35,37,44,37,0,44,37,38],
[36,36,39,34,37,0,31,41],
[41,39,44,47,44,50,0,50],
[39,43,41,41,43,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,49,38,47,48,51],
[44,0,34,48,40,51,48,47],
[38,47,0,49,41,48,42,48],
[32,33,32,0,36,38,41,49],
[43,41,40,45,0,50,48,54],
[34,30,33,43,31,0,32,41],
[33,33,39,40,33,49,0,46],
[30,34,33,32,27,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,33,41,45,34,35],
[47,0,47,41,47,52,40,44],
[43,34,0,37,45,47,27,42],
[48,40,44,0,46,47,44,46],
[40,34,36,35,0,38,28,39],
[36,29,34,34,43,0,33,35],
[47,41,54,37,53,48,0,47],
[46,37,39,35,42,46,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,28,38,35,44,32],
[43,0,40,29,44,37,40,31],
[47,41,0,34,43,32,44,29],
[53,52,47,0,51,48,46,38],
[43,37,38,30,0,34,37,22],
[46,44,49,33,47,0,43,45],
[37,41,37,35,44,38,0,33],
[49,50,52,43,59,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,35,43,30,49,54],
[35,0,47,34,32,37,48,42],
[44,34,0,41,26,34,41,53],
[46,47,40,0,40,36,56,50],
[38,49,55,41,0,46,48,48],
[51,44,47,45,35,0,40,48],
[32,33,40,25,33,41,0,41],
[27,39,28,31,33,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,25,26,19,39,30,23],
[57,0,47,38,41,44,43,47],
[56,34,0,36,30,46,40,43],
[55,43,45,0,29,34,41,45],
[62,40,51,52,0,51,48,56],
[42,37,35,47,30,0,36,34],
[51,38,41,40,33,45,0,37],
[58,34,38,36,25,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,32,30,46,36,29,29],
[53,0,50,40,54,56,49,48],
[49,31,0,37,50,49,45,42],
[51,41,44,0,54,49,39,29],
[35,27,31,27,0,42,35,31],
[45,25,32,32,39,0,34,28],
[52,32,36,42,46,47,0,39],
[52,33,39,52,50,53,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,27,29,30,35,39,28],
[50,0,43,40,47,40,54,42],
[54,38,0,47,45,41,52,40],
[52,41,34,0,45,44,48,31],
[51,34,36,36,0,39,48,35],
[46,41,40,37,42,0,45,39],
[42,27,29,33,33,36,0,34],
[53,39,41,50,46,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,42,35,32,40,40],
[36,0,42,43,39,35,44,41],
[36,39,0,36,40,32,37,39],
[39,38,45,0,37,31,33,38],
[46,42,41,44,0,35,43,37],
[49,46,49,50,46,0,39,37],
[41,37,44,48,38,42,0,37],
[41,40,42,43,44,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,38,44,43,38,40],
[44,0,41,43,49,39,40,42],
[41,40,0,39,48,38,35,44],
[43,38,42,0,51,43,44,41],
[37,32,33,30,0,33,31,41],
[38,42,43,38,48,0,39,42],
[43,41,46,37,50,42,0,51],
[41,39,37,40,40,39,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,43,40,30,27,29],
[47,0,30,32,45,28,38,50],
[40,51,0,37,34,39,28,37],
[38,49,44,0,39,46,42,40],
[41,36,47,42,0,38,54,44],
[51,53,42,35,43,0,44,55],
[54,43,53,39,27,37,0,37],
[52,31,44,41,37,26,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,42,38,44,43,42],
[44,0,50,41,46,38,39,35],
[34,31,0,33,34,38,36,31],
[39,40,48,0,45,40,45,37],
[43,35,47,36,0,42,39,42],
[37,43,43,41,39,0,40,38],
[38,42,45,36,42,41,0,35],
[39,46,50,44,39,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,50,39,43,38,41,48],
[49,0,41,41,43,33,57,42],
[31,40,0,38,42,54,32,48],
[42,40,43,0,51,38,33,42],
[38,38,39,30,0,30,29,40],
[43,48,27,43,51,0,33,35],
[40,24,49,48,52,48,0,40],
[33,39,33,39,41,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,30,41,51,54,56],
[39,0,47,41,39,40,43,43],
[33,34,0,29,39,35,44,43],
[51,40,52,0,43,54,46,50],
[40,42,42,38,0,61,59,58],
[30,41,46,27,20,0,40,41],
[27,38,37,35,22,41,0,50],
[25,38,38,31,23,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,41,45,42,49,35],
[34,0,37,30,37,40,32,28],
[35,44,0,38,40,41,42,33],
[40,51,43,0,40,48,42,43],
[36,44,41,41,0,37,40,33],
[39,41,40,33,44,0,47,39],
[32,49,39,39,41,34,0,37],
[46,53,48,38,48,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,38,54,43,47,37],
[39,0,51,40,51,45,41,44],
[35,30,0,34,44,39,40,30],
[43,41,47,0,40,42,51,34],
[27,30,37,41,0,39,42,33],
[38,36,42,39,42,0,49,33],
[34,40,41,30,39,32,0,29],
[44,37,51,47,48,48,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,45,39,39,43,38,43],
[26,0,23,37,32,37,25,38],
[36,58,0,48,43,45,48,51],
[42,44,33,0,27,51,39,41],
[42,49,38,54,0,57,57,57],
[38,44,36,30,24,0,51,51],
[43,56,33,42,24,30,0,44],
[38,43,30,40,24,30,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,34,41,42,33,35],
[42,0,36,37,45,45,43,41],
[48,45,0,39,50,37,40,40],
[47,44,42,0,41,51,41,35],
[40,36,31,40,0,34,35,35],
[39,36,44,30,47,0,45,36],
[48,38,41,40,46,36,0,40],
[46,40,41,46,46,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,29,26,26,37,42,42],
[43,0,36,43,43,39,42,38],
[52,45,0,45,40,43,39,46],
[55,38,36,0,42,32,42,41],
[55,38,41,39,0,38,41,35],
[44,42,38,49,43,0,47,52],
[39,39,42,39,40,34,0,44],
[39,43,35,40,46,29,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,41,45,24,37,39,36],
[52,0,50,58,40,43,54,41],
[40,31,0,51,33,36,46,45],
[36,23,30,0,35,30,48,44],
[57,41,48,46,0,44,48,35],
[44,38,45,51,37,0,48,47],
[42,27,35,33,33,33,0,41],
[45,40,36,37,46,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,46,43,35,43,44],
[31,0,36,46,41,37,40,37],
[38,45,0,42,41,43,44,40],
[35,35,39,0,38,39,41,40],
[38,40,40,43,0,30,39,36],
[46,44,38,42,51,0,49,39],
[38,41,37,40,42,32,0,34],
[37,44,41,41,45,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,29,35,29,30,46,38],
[53,0,43,39,35,37,54,50],
[52,38,0,44,37,41,54,44],
[46,42,37,0,35,39,47,46],
[52,46,44,46,0,40,44,48],
[51,44,40,42,41,0,51,45],
[35,27,27,34,37,30,0,38],
[43,31,37,35,33,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,38,49,60,60,49,49],
[10,0,29,29,51,29,39,50],
[43,52,0,71,42,62,59,31],
[32,52,10,0,32,22,49,31],
[21,30,39,49,0,49,49,30],
[21,52,19,59,32,0,50,31],
[32,42,22,32,32,31,0,31],
[32,31,50,50,51,50,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,33,40,40,31,35],
[44,0,34,37,49,38,33,50],
[49,47,0,40,50,34,36,50],
[48,44,41,0,45,48,36,51],
[41,32,31,36,0,38,42,47],
[41,43,47,33,43,0,36,43],
[50,48,45,45,39,45,0,44],
[46,31,31,30,34,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,36,45,45,46,48],
[43,0,47,29,53,47,58,46],
[45,34,0,34,32,50,45,51],
[45,52,47,0,57,36,54,44],
[36,28,49,24,0,42,52,41],
[36,34,31,45,39,0,40,47],
[35,23,36,27,29,41,0,44],
[33,35,30,37,40,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,29,38,48,28,50,41],
[37,0,30,44,42,29,38,14],
[52,51,0,49,51,43,61,39],
[43,37,32,0,35,29,39,29],
[33,39,30,46,0,36,46,25],
[53,52,38,52,45,0,55,47],
[31,43,20,42,35,26,0,25],
[40,67,42,52,56,34,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,32,65,23,34,65,49],
[32,0,24,48,33,26,57,41],
[49,57,0,48,42,33,58,32],
[16,33,33,0,31,16,42,15],
[58,48,39,50,0,49,66,41],
[47,55,48,65,32,0,57,31],
[16,24,23,39,15,24,0,39],
[32,40,49,66,40,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,47,40,50,42,43],
[37,0,41,36,38,47,38,41],
[39,40,0,44,39,46,46,41],
[34,45,37,0,43,51,39,46],
[41,43,42,38,0,47,40,39],
[31,34,35,30,34,0,36,45],
[39,43,35,42,41,45,0,37],
[38,40,40,35,42,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,41,46,36,43,46],
[38,0,38,42,46,36,35,40],
[44,43,0,41,42,38,37,47],
[40,39,40,0,39,35,39,42],
[35,35,39,42,0,40,37,36],
[45,45,43,46,41,0,36,45],
[38,46,44,42,44,45,0,48],
[35,41,34,39,45,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,49,43,43,43,47,30],
[41,0,42,38,31,44,39,43],
[32,39,0,40,31,34,44,41],
[38,43,41,0,25,43,50,26],
[38,50,50,56,0,50,49,45],
[38,37,47,38,31,0,52,45],
[34,42,37,31,32,29,0,33],
[51,38,40,55,36,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,32,27,34,29,30],
[49,0,44,55,45,49,40,47],
[44,37,0,38,37,39,38,32],
[49,26,43,0,41,28,34,29],
[54,36,44,40,0,37,36,34],
[47,32,42,53,44,0,43,40],
[52,41,43,47,45,38,0,39],
[51,34,49,52,47,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,41,40,45,47,43],
[35,0,36,31,31,36,44,37],
[44,45,0,39,37,36,44,40],
[40,50,42,0,39,41,43,49],
[41,50,44,42,0,37,46,44],
[36,45,45,40,44,0,48,45],
[34,37,37,38,35,33,0,45],
[38,44,41,32,37,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,56,44,60,48,41],
[41,0,35,52,42,43,45,31],
[35,46,0,42,45,48,41,38],
[25,29,39,0,47,46,43,31],
[37,39,36,34,0,50,44,34],
[21,38,33,35,31,0,32,23],
[33,36,40,38,37,49,0,28],
[40,50,43,50,47,58,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,39,39,41,37,40],
[43,0,45,41,45,37,42,41],
[46,36,0,43,38,38,40,38],
[42,40,38,0,40,42,38,36],
[42,36,43,41,0,37,40,36],
[40,44,43,39,44,0,37,39],
[44,39,41,43,41,44,0,36],
[41,40,43,45,45,42,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,40,42,43,49,51,32],
[50,0,34,46,39,43,56,35],
[41,47,0,44,37,51,47,36],
[39,35,37,0,37,38,57,32],
[38,42,44,44,0,57,62,43],
[32,38,30,43,24,0,45,27],
[30,25,34,24,19,36,0,23],
[49,46,45,49,38,54,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,40,50,47,44,45],
[43,0,38,48,44,48,57,48],
[45,43,0,38,53,54,51,53],
[41,33,43,0,44,45,49,42],
[31,37,28,37,0,54,39,39],
[34,33,27,36,27,0,35,36],
[37,24,30,32,42,46,0,40],
[36,33,28,39,42,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,23,11,35,35,22,47],
[46,0,24,12,47,36,11,35],
[58,57,0,47,58,59,23,47],
[70,69,34,0,58,35,46,58],
[46,34,23,23,0,46,23,24],
[46,45,22,46,35,0,23,47],
[59,70,58,35,58,58,0,47],
[34,46,34,23,57,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,44,48,40,45,47,41],
[30,0,42,40,35,42,33,34],
[37,39,0,40,36,35,42,34],
[33,41,41,0,34,42,35,33],
[41,46,45,47,0,46,51,38],
[36,39,46,39,35,0,40,38],
[34,48,39,46,30,41,0,41],
[40,47,47,48,43,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,42,35,34,41,41,39],
[31,0,37,40,28,27,32,39],
[39,44,0,45,41,43,44,42],
[46,41,36,0,32,43,39,34],
[47,53,40,49,0,47,38,53],
[40,54,38,38,34,0,41,41],
[40,49,37,42,43,40,0,42],
[42,42,39,47,28,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,40,45,52,51,73],
[30,0,37,35,43,42,45,49],
[30,44,0,27,46,37,31,60],
[41,46,54,0,32,52,38,58],
[36,38,35,49,0,53,31,70],
[29,39,44,29,28,0,45,68],
[30,36,50,43,50,36,0,50],
[8,32,21,23,11,13,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,45,42,42,39,43],
[45,0,43,35,42,36,52,47],
[41,38,0,40,40,31,39,49],
[36,46,41,0,38,34,39,47],
[39,39,41,43,0,31,37,45],
[39,45,50,47,50,0,40,49],
[42,29,42,42,44,41,0,51],
[38,34,32,34,36,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,46,53,42,42,46],
[43,0,51,51,55,42,48,39],
[47,30,0,39,46,38,38,37],
[35,30,42,0,42,33,41,40],
[28,26,35,39,0,33,46,28],
[39,39,43,48,48,0,38,36],
[39,33,43,40,35,43,0,37],
[35,42,44,41,53,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,18,34,18,16,24,41],
[73,0,35,43,41,43,49,48],
[63,46,0,67,48,31,48,55],
[47,38,14,0,38,30,46,47],
[63,40,33,43,0,41,49,49],
[65,38,50,51,40,0,32,47],
[57,32,33,35,32,49,0,41],
[40,33,26,34,32,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,41,37,36,37,43],
[39,0,42,42,39,39,36,41],
[42,39,0,46,36,38,44,44],
[40,39,35,0,40,36,33,33],
[44,42,45,41,0,38,43,47],
[45,42,43,45,43,0,38,47],
[44,45,37,48,38,43,0,47],
[38,40,37,48,34,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,46,48,43,28,46,40],
[28,0,42,32,37,25,33,24],
[35,39,0,38,38,37,49,35],
[33,49,43,0,23,34,48,43],
[38,44,43,58,0,41,54,55],
[53,56,44,47,40,0,41,45],
[35,48,32,33,27,40,0,33],
[41,57,46,38,26,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,36,33,37,30,35,42],
[52,0,38,54,46,35,29,44],
[45,43,0,46,52,37,42,45],
[48,27,35,0,42,27,36,41],
[44,35,29,39,0,38,42,50],
[51,46,44,54,43,0,40,46],
[46,52,39,45,39,41,0,49],
[39,37,36,40,31,35,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,46,41,52,49,44,46],
[53,0,39,45,53,56,44,46],
[35,42,0,43,47,43,52,38],
[40,36,38,0,53,38,45,31],
[29,28,34,28,0,30,27,28],
[32,25,38,43,51,0,40,37],
[37,37,29,36,54,41,0,42],
[35,35,43,50,53,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,35,38,50,41,45],
[45,0,43,46,40,48,46,48],
[42,38,0,40,38,44,38,38],
[46,35,41,0,42,53,46,45],
[43,41,43,39,0,46,44,50],
[31,33,37,28,35,0,38,47],
[40,35,43,35,37,43,0,50],
[36,33,43,36,31,34,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,36,39,48,45,42],
[36,0,39,35,39,47,38,47],
[43,42,0,43,48,41,41,40],
[45,46,38,0,43,47,35,46],
[42,42,33,38,0,53,41,44],
[33,34,40,34,28,0,29,34],
[36,43,40,46,40,52,0,40],
[39,34,41,35,37,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,31,47,29,39,32,28],
[58,0,44,51,44,37,40,29],
[50,37,0,53,39,32,48,37],
[34,30,28,0,26,19,28,25],
[52,37,42,55,0,46,40,44],
[42,44,49,62,35,0,41,36],
[49,41,33,53,41,40,0,29],
[53,52,44,56,37,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,36,42,39,39,35],
[43,0,38,38,42,41,44,38],
[40,43,0,37,39,46,41,38],
[45,43,44,0,45,39,44,42],
[39,39,42,36,0,40,38,38],
[42,40,35,42,41,0,39,37],
[42,37,40,37,43,42,0,39],
[46,43,43,39,43,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,43,45,38,38,49],
[38,0,39,40,45,39,41,43],
[41,42,0,46,49,49,37,52],
[38,41,35,0,43,39,43,42],
[36,36,32,38,0,34,39,40],
[43,42,32,42,47,0,37,45],
[43,40,44,38,42,44,0,47],
[32,38,29,39,41,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,34,32,34,35,35,37],
[50,0,34,33,45,41,44,41],
[47,47,0,44,40,48,46,44],
[49,48,37,0,45,47,42,42],
[47,36,41,36,0,45,45,35],
[46,40,33,34,36,0,42,36],
[46,37,35,39,36,39,0,40],
[44,40,37,39,46,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,58,50,44,37,41,36],
[41,0,53,53,34,32,39,29],
[23,28,0,33,17,28,22,22],
[31,28,48,0,30,26,21,30],
[37,47,64,51,0,38,26,30],
[44,49,53,55,43,0,42,38],
[40,42,59,60,55,39,0,43],
[45,52,59,51,51,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,37,52,41,43,42],
[31,0,37,41,40,46,44,36],
[38,44,0,38,44,45,48,41],
[44,40,43,0,49,50,47,38],
[29,41,37,32,0,43,45,37],
[40,35,36,31,38,0,43,37],
[38,37,33,34,36,38,0,30],
[39,45,40,43,44,44,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,40,28,43,49,42],
[39,0,40,44,39,52,49,51],
[38,41,0,46,38,47,45,52],
[41,37,35,0,40,50,46,42],
[53,42,43,41,0,40,39,45],
[38,29,34,31,41,0,41,48],
[32,32,36,35,42,40,0,42],
[39,30,29,39,36,33,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,46,28,41,29,23,33],
[59,0,43,27,39,30,48,37],
[35,38,0,45,51,32,35,44],
[53,54,36,0,34,30,49,40],
[40,42,30,47,0,35,47,49],
[52,51,49,51,46,0,42,30],
[58,33,46,32,34,39,0,47],
[48,44,37,41,32,51,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,34,41,40,45,32],
[46,0,31,26,42,26,43,31],
[43,50,0,35,49,34,43,33],
[47,55,46,0,45,37,51,46],
[40,39,32,36,0,49,41,36],
[41,55,47,44,32,0,46,47],
[36,38,38,30,40,35,0,30],
[49,50,48,35,45,34,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,45,43,50,49,39,45],
[32,0,30,41,42,44,38,31],
[36,51,0,43,47,53,38,44],
[38,40,38,0,48,51,39,32],
[31,39,34,33,0,43,30,30],
[32,37,28,30,38,0,32,41],
[42,43,43,42,51,49,0,32],
[36,50,37,49,51,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,37,44,42,31,39],
[37,0,33,35,41,31,34,32],
[44,48,0,40,44,43,41,31],
[44,46,41,0,43,37,40,38],
[37,40,37,38,0,39,37,31],
[39,50,38,44,42,0,37,42],
[50,47,40,41,44,44,0,34],
[42,49,50,43,50,39,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,36,46,37,42,47],
[45,0,33,39,47,38,40,46],
[40,48,0,43,43,42,42,45],
[45,42,38,0,37,39,34,40],
[35,34,38,44,0,37,43,44],
[44,43,39,42,44,0,37,52],
[39,41,39,47,38,44,0,46],
[34,35,36,41,37,29,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,44,42,45,38,43],
[42,0,46,39,39,42,43,41],
[39,35,0,41,40,42,36,37],
[37,42,40,0,35,41,43,37],
[39,42,41,46,0,49,42,43],
[36,39,39,40,32,0,41,43],
[43,38,45,38,39,40,0,38],
[38,40,44,44,38,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,50,41,54,50,53,51],
[43,0,45,51,48,49,53,38],
[31,36,0,31,38,38,42,45],
[40,30,50,0,37,36,52,46],
[27,33,43,44,0,39,42,36],
[31,32,43,45,42,0,47,38],
[28,28,39,29,39,34,0,37],
[30,43,36,35,45,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,47,37,50,35,45],
[37,0,46,47,38,45,42,33],
[30,35,0,45,33,41,43,36],
[34,34,36,0,32,29,33,32],
[44,43,48,49,0,46,37,44],
[31,36,40,52,35,0,43,35],
[46,39,38,48,44,38,0,31],
[36,48,45,49,37,46,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,30,34,46,33,27],
[45,0,41,45,33,44,32,37],
[47,40,0,44,41,44,38,29],
[51,36,37,0,38,48,32,35],
[47,48,40,43,0,53,44,41],
[35,37,37,33,28,0,33,31],
[48,49,43,49,37,48,0,37],
[54,44,52,46,40,50,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,14,52,29,26,26,26],
[43,0,43,43,43,42,41,14],
[67,38,0,53,69,38,12,38],
[29,38,28,0,43,14,26,14],
[52,38,12,38,0,38,24,38],
[55,39,43,67,43,0,27,26],
[55,40,69,55,57,54,0,54],
[55,67,43,67,43,55,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,43,39,45,39,41],
[40,0,38,52,41,44,37,50],
[50,43,0,61,39,44,48,42],
[38,29,20,0,29,44,38,34],
[42,40,42,52,0,53,40,50],
[36,37,37,37,28,0,39,37],
[42,44,33,43,41,42,0,47],
[40,31,39,47,31,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,32,43,44,41,33],
[45,0,31,37,43,39,37,41],
[48,50,0,48,40,58,38,48],
[49,44,33,0,38,52,37,39],
[38,38,41,43,0,43,41,38],
[37,42,23,29,38,0,38,30],
[40,44,43,44,40,43,0,29],
[48,40,33,42,43,51,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,39,47,42,43,43],
[41,0,37,41,39,41,45,42],
[38,44,0,42,41,40,39,39],
[42,40,39,0,42,42,38,44],
[34,42,40,39,0,37,39,41],
[39,40,41,39,44,0,38,39],
[38,36,42,43,42,43,0,38],
[38,39,42,37,40,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,27,27,27,27,27],
[54,0,28,0,28,28,28,0],
[54,53,0,26,54,54,81,26],
[54,81,55,0,28,81,81,81],
[54,53,27,53,0,81,81,53],
[54,53,27,0,0,0,53,0],
[54,53,0,0,0,28,0,0],
[54,81,55,0,28,81,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,40,19,26,41,20,48],
[63,0,43,57,34,48,43,46],
[41,38,0,46,46,40,54,39],
[62,24,35,0,39,46,33,47],
[55,47,35,42,0,62,47,39],
[40,33,41,35,19,0,41,33],
[61,38,27,48,34,40,0,38],
[33,35,42,34,42,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,19,19,43,23,42,24],
[51,0,45,39,46,30,52,39],
[62,36,0,45,49,36,56,42],
[62,42,36,0,37,42,55,49],
[38,35,32,44,0,22,54,55],
[58,51,45,39,59,0,71,51],
[39,29,25,26,27,10,0,24],
[57,42,39,32,26,30,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,54,81,81,54,54,54],
[54,0,54,81,54,27,81,81],
[27,27,0,54,54,0,27,54],
[0,0,27,0,27,27,0,0],
[0,27,27,54,0,27,27,27],
[27,54,81,54,54,0,54,54],
[27,0,54,81,54,27,0,54],
[27,0,27,81,54,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,40,49,43,45,49],
[37,0,49,39,38,43,45,46],
[32,32,0,31,30,37,37,39],
[41,42,50,0,38,44,45,46],
[32,43,51,43,0,40,43,48],
[38,38,44,37,41,0,37,44],
[36,36,44,36,38,44,0,40],
[32,35,42,35,33,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,50,51,59,43,39,47],
[32,0,49,41,50,38,43,42],
[31,32,0,31,43,38,38,38],
[30,40,50,0,43,48,43,43],
[22,31,38,38,0,25,38,40],
[38,43,43,33,56,0,42,51],
[42,38,43,38,43,39,0,43],
[34,39,43,38,41,30,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,52,44,38,44,29,45],
[43,0,37,51,58,50,49,60],
[29,44,0,43,45,37,36,44],
[37,30,38,0,51,52,44,61],
[43,23,36,30,0,46,43,45],
[37,31,44,29,35,0,35,53],
[52,32,45,37,38,46,0,61],
[36,21,37,20,36,28,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,52,38,42,44,40,43],
[41,0,57,43,48,46,43,37],
[29,24,0,36,36,36,32,31],
[43,38,45,0,51,41,40,32],
[39,33,45,30,0,39,32,35],
[37,35,45,40,42,0,33,29],
[41,38,49,41,49,48,0,44],
[38,44,50,49,46,52,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,43,40,41,45,38],
[40,0,37,35,37,36,44,38],
[46,44,0,40,45,42,47,46],
[38,46,41,0,47,42,51,40],
[41,44,36,34,0,39,51,39],
[40,45,39,39,42,0,42,37],
[36,37,34,30,30,39,0,35],
[43,43,35,41,42,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,39,36,44,35,36],
[43,0,41,46,39,46,44,39],
[46,40,0,47,48,51,42,45],
[42,35,34,0,38,43,31,33],
[45,42,33,43,0,42,42,40],
[37,35,30,38,39,0,32,35],
[46,37,39,50,39,49,0,41],
[45,42,36,48,41,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,39,54,40,54,42],
[34,0,43,34,37,31,46,36],
[34,38,0,37,44,46,43,47],
[42,47,44,0,41,41,40,44],
[27,44,37,40,0,40,38,44],
[41,50,35,40,41,0,40,37],
[27,35,38,41,43,41,0,38],
[39,45,34,37,37,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,22,25,31,42,40,30],
[51,0,37,36,50,53,48,40],
[59,44,0,41,45,47,38,49],
[56,45,40,0,61,36,49,45],
[50,31,36,20,0,41,48,36],
[39,28,34,45,40,0,45,41],
[41,33,43,32,33,36,0,41],
[51,41,32,36,45,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,41,48,49,38,47],
[36,0,45,35,43,51,44,45],
[38,36,0,33,42,48,40,40],
[40,46,48,0,45,53,43,48],
[33,38,39,36,0,49,43,44],
[32,30,33,28,32,0,33,36],
[43,37,41,38,38,48,0,47],
[34,36,41,33,37,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,27,27,13,27,40,53],
[54,0,27,54,41,54,54,67],
[54,54,0,40,27,54,54,67],
[54,27,41,0,27,41,67,53],
[68,40,54,54,0,41,54,54],
[54,27,27,40,40,0,40,40],
[41,27,27,14,27,41,0,53],
[28,14,14,28,27,41,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,44,35,32,38,42],
[37,0,48,44,34,34,32,31],
[37,33,0,40,36,32,33,37],
[37,37,41,0,39,33,35,32],
[46,47,45,42,0,43,40,49],
[49,47,49,48,38,0,38,44],
[43,49,48,46,41,43,0,38],
[39,50,44,49,32,37,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,58,46,47,34,42],
[44,0,24,53,37,45,44,41],
[47,57,0,60,53,46,49,34],
[23,28,21,0,32,31,24,33],
[35,44,28,49,0,42,41,40],
[34,36,35,50,39,0,47,36],
[47,37,32,57,40,34,0,49],
[39,40,47,48,41,45,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,36,36,38,47,35],
[41,0,41,38,43,49,49,50],
[42,40,0,39,39,46,43,39],
[45,43,42,0,40,49,48,46],
[45,38,42,41,0,55,54,53],
[43,32,35,32,26,0,41,39],
[34,32,38,33,27,40,0,40],
[46,31,42,35,28,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,42,31,34,36,30],
[47,0,39,41,41,39,39,39],
[42,42,0,39,38,39,36,41],
[39,40,42,0,36,40,36,36],
[50,40,43,45,0,43,41,36],
[47,42,42,41,38,0,43,38],
[45,42,45,45,40,38,0,40],
[51,42,40,45,45,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,63,61,40,51,30,52],
[40,0,59,70,29,50,50,71],
[18,22,0,50,29,19,28,41],
[20,11,31,0,20,30,41,32],
[41,52,52,61,0,51,39,52],
[30,31,62,51,30,0,40,61],
[51,31,53,40,42,41,0,41],
[29,10,40,49,29,20,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,35,56,44,43,37,48],
[33,0,31,48,36,38,39,32],
[46,50,0,51,46,38,43,46],
[25,33,30,0,37,35,29,32],
[37,45,35,44,0,36,42,42],
[38,43,43,46,45,0,41,45],
[44,42,38,52,39,40,0,48],
[33,49,35,49,39,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,45,36,48,54,52],
[46,0,41,57,37,44,55,51],
[46,40,0,49,32,44,53,46],
[36,24,32,0,28,33,31,38],
[45,44,49,53,0,40,46,54],
[33,37,37,48,41,0,46,54],
[27,26,28,50,35,35,0,41],
[29,30,35,43,27,27,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,58,35,55,55,46,36],
[57,0,43,44,31,56,58,43],
[23,38,0,35,31,44,58,34],
[46,37,46,0,68,55,44,32],
[26,50,50,13,0,34,37,25],
[26,25,37,26,47,0,47,11],
[35,23,23,37,44,34,0,23],
[45,38,47,49,56,70,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,48,43,53,39,51,43],
[30,0,38,35,45,37,50,40],
[33,43,0,37,47,36,47,29],
[38,46,44,0,51,43,44,31],
[28,36,34,30,0,39,42,26],
[42,44,45,38,42,0,43,25],
[30,31,34,37,39,38,0,30],
[38,41,52,50,55,56,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,45,53,45,36,40],
[37,0,36,41,45,35,37,40],
[42,45,0,49,51,45,39,44],
[36,40,32,0,49,40,42,39],
[28,36,30,32,0,27,26,36],
[36,46,36,41,54,0,39,39],
[45,44,42,39,55,42,0,43],
[41,41,37,42,45,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,55,37,46,41,57],
[36,0,39,46,35,46,44,45],
[38,42,0,48,42,45,41,39],
[26,35,33,0,30,36,32,33],
[44,46,39,51,0,48,53,48],
[35,35,36,45,33,0,37,37],
[40,37,40,49,28,44,0,43],
[24,36,42,48,33,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,33,38,59,15,37,41],
[47,0,43,32,58,25,31,34],
[48,38,0,37,49,42,33,47],
[43,49,44,0,60,33,33,47],
[22,23,32,21,0,31,34,42],
[66,56,39,48,50,0,50,59],
[44,50,48,48,47,31,0,47],
[40,47,34,34,39,22,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,32,38,38,47,31],
[45,0,41,41,47,44,49,35],
[38,40,0,36,40,43,41,44],
[49,40,45,0,34,44,49,32],
[43,34,41,47,0,37,43,34],
[43,37,38,37,44,0,50,41],
[34,32,40,32,38,31,0,29],
[50,46,37,49,47,40,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,42,59,48,49,47],
[42,0,41,24,42,39,44,38],
[39,40,0,24,42,32,39,23],
[39,57,57,0,48,51,52,45],
[22,39,39,33,0,43,45,37],
[33,42,49,30,38,0,35,34],
[32,37,42,29,36,46,0,33],
[34,43,58,36,44,47,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,65,64,33,64,49,32],
[33,0,65,31,33,64,49,32],
[16,16,0,16,49,32,33,33],
[17,50,65,0,50,81,49,32],
[48,48,32,31,0,47,32,48],
[17,17,49,0,34,0,17,32],
[32,32,48,32,49,64,0,47],
[49,49,48,49,33,49,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,39,39,34,42,34,44],
[49,0,46,43,36,48,42,45],
[42,35,0,46,38,39,32,38],
[42,38,35,0,41,37,27,44],
[47,45,43,40,0,44,30,36],
[39,33,42,44,37,0,32,46],
[47,39,49,54,51,49,0,44],
[37,36,43,37,45,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,26,35,35,27,26,33],
[55,0,49,41,40,36,34,46],
[55,32,0,37,35,41,34,43],
[46,40,44,0,35,38,31,48],
[46,41,46,46,0,41,36,52],
[54,45,40,43,40,0,42,47],
[55,47,47,50,45,39,0,53],
[48,35,38,33,29,34,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,56,47,33,56,46],
[43,0,47,45,43,34,45,28],
[39,34,0,47,45,32,37,37],
[25,36,34,0,50,30,42,28],
[34,38,36,31,0,35,40,42],
[48,47,49,51,46,0,49,35],
[25,36,44,39,41,32,0,36],
[35,53,44,53,39,46,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,55,39,45,50,56,46],
[44,0,48,40,35,32,49,48],
[26,33,0,30,30,39,32,30],
[42,41,51,0,38,44,45,51],
[36,46,51,43,0,37,43,45],
[31,49,42,37,44,0,38,48],
[25,32,49,36,38,43,0,49],
[35,33,51,30,36,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,18,42,33,52,56,32],
[35,0,33,46,46,58,51,31],
[63,48,0,46,44,53,68,38],
[39,35,35,0,46,60,51,40],
[48,35,37,35,0,37,46,46],
[29,23,28,21,44,0,48,35],
[25,30,13,30,35,33,0,29],
[49,50,43,41,35,46,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,44,58,41,46,46,46],
[50,0,58,60,52,36,62,39],
[37,23,0,43,32,31,46,28],
[23,21,38,0,27,30,37,23],
[40,29,49,54,0,36,48,40],
[35,45,50,51,45,0,47,41],
[35,19,35,44,33,34,0,35],
[35,42,53,58,41,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,43,41,43,36,45],
[40,0,51,40,43,41,45,34],
[31,30,0,36,32,39,25,38],
[38,41,45,0,38,41,39,40],
[40,38,49,43,0,43,39,47],
[38,40,42,40,38,0,36,34],
[45,36,56,42,42,45,0,34],
[36,47,43,41,34,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,45,38,47,41,45],
[40,0,38,40,32,38,38,42],
[36,43,0,46,35,43,37,47],
[36,41,35,0,36,33,29,42],
[43,49,46,45,0,40,41,40],
[34,43,38,48,41,0,39,47],
[40,43,44,52,40,42,0,52],
[36,39,34,39,41,34,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,34,33,40,42,37],
[38,0,38,38,39,35,40,37],
[43,43,0,43,43,46,42,39],
[47,43,38,0,54,44,45,44],
[48,42,38,27,0,34,38,38],
[41,46,35,37,47,0,38,38],
[39,41,39,36,43,43,0,32],
[44,44,42,37,43,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,43,44,41,33,47,48],
[29,0,42,26,28,30,33,39],
[38,39,0,43,42,34,51,44],
[37,55,38,0,37,45,45,48],
[40,53,39,44,0,37,48,42],
[48,51,47,36,44,0,44,50],
[34,48,30,36,33,37,0,42],
[33,42,37,33,39,31,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,41,45,44,37,39],
[44,0,37,47,38,44,37,42],
[45,44,0,46,39,53,44,41],
[40,34,35,0,42,43,36,38],
[36,43,42,39,0,48,39,43],
[37,37,28,38,33,0,33,37],
[44,44,37,45,42,48,0,43],
[42,39,40,43,38,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,46,49,51,37,41],
[40,0,46,46,41,32,49,39],
[38,35,0,45,41,31,47,40],
[35,35,36,0,42,40,40,24],
[32,40,40,39,0,31,45,26],
[30,49,50,41,50,0,36,41],
[44,32,34,41,36,45,0,32],
[40,42,41,57,55,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,33,32,33,39,36],
[42,0,43,37,36,32,41,41],
[41,38,0,28,31,25,36,35],
[48,44,53,0,36,40,50,43],
[49,45,50,45,0,41,46,39],
[48,49,56,41,40,0,50,44],
[42,40,45,31,35,31,0,37],
[45,40,46,38,42,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,38,41,31,36,43],
[37,0,37,38,44,39,34,45],
[47,44,0,45,54,40,41,43],
[43,43,36,0,48,35,38,47],
[40,37,27,33,0,35,32,32],
[50,42,41,46,46,0,40,45],
[45,47,40,43,49,41,0,52],
[38,36,38,34,49,36,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,40,40,43,43,44],
[38,0,33,40,43,39,38,49],
[40,48,0,45,49,45,41,46],
[41,41,36,0,42,42,39,47],
[41,38,32,39,0,36,44,42],
[38,42,36,39,45,0,42,43],
[38,43,40,42,37,39,0,53],
[37,32,35,34,39,38,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,65,68,53,37,53,45],
[36,0,52,51,51,43,37,31],
[16,29,0,38,38,37,44,32],
[13,30,43,0,53,20,36,31],
[28,30,43,28,0,22,29,31],
[44,38,44,61,59,0,51,30],
[28,44,37,45,52,30,0,39],
[36,50,49,50,50,51,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,52,44,56,34,48,43],
[34,0,35,39,40,35,33,36],
[29,46,0,43,45,41,36,38],
[37,42,38,0,47,30,37,37],
[25,41,36,34,0,31,32,22],
[47,46,40,51,50,0,46,41],
[33,48,45,44,49,35,0,31],
[38,45,43,44,59,40,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,52,48,51,43,42,49],
[45,0,43,42,39,33,32,40],
[29,38,0,35,39,40,24,39],
[33,39,46,0,39,36,28,39],
[30,42,42,42,0,32,32,32],
[38,48,41,45,49,0,39,39],
[39,49,57,53,49,42,0,49],
[32,41,42,42,49,42,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,39,51,48,49,47,46],
[28,0,37,39,21,43,27,32],
[42,44,0,49,38,44,40,49],
[30,42,32,0,33,40,30,34],
[33,60,43,48,0,53,42,46],
[32,38,37,41,28,0,25,37],
[34,54,41,51,39,56,0,33],
[35,49,32,47,35,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,51,51,45,40,54],
[38,0,39,48,40,42,45,51],
[38,42,0,45,43,44,41,42],
[30,33,36,0,40,38,28,33],
[30,41,38,41,0,47,41,41],
[36,39,37,43,34,0,35,43],
[41,36,40,53,40,46,0,57],
[27,30,39,48,40,38,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,41,41,52,41,38],
[37,0,35,39,35,46,40,38],
[32,46,0,32,39,49,43,41],
[40,42,49,0,38,51,40,40],
[40,46,42,43,0,45,50,37],
[29,35,32,30,36,0,40,34],
[40,41,38,41,31,41,0,36],
[43,43,40,41,44,47,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,51,48,57,52,56],
[41,0,41,37,54,35,59,52],
[37,40,0,43,49,35,48,53],
[30,44,38,0,34,52,34,44],
[33,27,32,47,0,51,33,36],
[24,46,46,29,30,0,42,42],
[29,22,33,47,48,39,0,57],
[25,29,28,37,45,39,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,32,36,34,39,44],
[36,0,46,34,36,22,33,43],
[41,35,0,31,44,32,34,38],
[49,47,50,0,46,33,45,45],
[45,45,37,35,0,27,41,38],
[47,59,49,48,54,0,36,49],
[42,48,47,36,40,45,0,42],
[37,38,43,36,43,32,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,44,36,40,40,40],
[39,0,37,38,37,45,43,50],
[39,44,0,34,35,39,36,43],
[37,43,47,0,43,40,46,51],
[45,44,46,38,0,50,47,54],
[41,36,42,41,31,0,41,47],
[41,38,45,35,34,40,0,41],
[41,31,38,30,27,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,31,46,47,20,27,38],
[65,0,38,57,41,42,52,61],
[50,43,0,46,41,37,42,56],
[35,24,35,0,41,45,41,47],
[34,40,40,40,0,33,39,41],
[61,39,44,36,48,0,33,67],
[54,29,39,40,42,48,0,60],
[43,20,25,34,40,14,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,43,41,39,42,37],
[40,0,39,38,36,36,41,41],
[37,42,0,40,42,41,40,36],
[38,43,41,0,40,44,46,35],
[40,45,39,41,0,34,40,45],
[42,45,40,37,47,0,42,42],
[39,40,41,35,41,39,0,45],
[44,40,45,46,36,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,38,46,52,40,36,41],
[33,0,31,35,35,30,32,46],
[43,50,0,40,38,36,42,40],
[35,46,41,0,35,40,37,43],
[29,46,43,46,0,31,36,44],
[41,51,45,41,50,0,36,45],
[45,49,39,44,45,45,0,43],
[40,35,41,38,37,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,47,44,43,49,38],
[38,0,39,44,42,35,46,35],
[33,42,0,43,44,43,47,42],
[34,37,38,0,44,46,42,36],
[37,39,37,37,0,36,41,41],
[38,46,38,35,45,0,40,37],
[32,35,34,39,40,41,0,29],
[43,46,39,45,40,44,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,34,33,37,34,41],
[43,0,41,37,38,37,37,42],
[45,40,0,43,38,44,31,44],
[47,44,38,0,43,48,45,49],
[48,43,43,38,0,42,41,48],
[44,44,37,33,39,0,35,45],
[47,44,50,36,40,46,0,46],
[40,39,37,32,33,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,35,50,50,47,31],
[45,0,37,44,52,59,52,41],
[40,44,0,31,46,41,46,28],
[46,37,50,0,56,50,59,50],
[31,29,35,25,0,44,48,37],
[31,22,40,31,37,0,47,32],
[34,29,35,22,33,34,0,31],
[50,40,53,31,44,49,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,38,39,42,43,53],
[37,0,44,45,47,46,48,47],
[37,37,0,42,48,42,41,49],
[43,36,39,0,50,47,47,46],
[42,34,33,31,0,33,38,37],
[39,35,39,34,48,0,35,37],
[38,33,40,34,43,46,0,43],
[28,34,32,35,44,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,40,65,59,60,49,44],
[48,0,37,48,36,69,55,27],
[41,44,0,53,49,71,39,44],
[16,33,28,0,48,56,44,43],
[22,45,32,33,0,49,40,32],
[21,12,10,25,32,0,17,17],
[32,26,42,37,41,64,0,25],
[37,54,37,38,49,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,38,27,42,30,38],
[41,0,40,44,41,48,46,41],
[42,41,0,41,38,40,41,33],
[43,37,40,0,39,40,40,38],
[54,40,43,42,0,49,40,44],
[39,33,41,41,32,0,42,37],
[51,35,40,41,41,39,0,34],
[43,40,48,43,37,44,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,55,55,27,27,27],
[26,0,55,81,27,53,53,53],
[26,26,0,81,53,53,26,26],
[26,0,0,0,0,0,0,0],
[26,54,28,81,0,53,26,26],
[54,28,28,81,28,0,54,54],
[54,28,55,81,55,27,0,54],
[54,28,55,81,55,27,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,20,20,41,20,20],
[61,0,20,39,41,62,42,81],
[61,61,0,39,41,62,42,81],
[61,42,42,0,21,42,42,61],
[61,40,40,60,0,81,61,81],
[40,19,19,39,0,0,40,40],
[61,39,39,39,20,41,0,39],
[61,0,0,20,0,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,35,39,35,36,40],
[39,0,49,44,38,48,30,36],
[39,32,0,30,28,41,30,35],
[46,37,51,0,44,46,34,38],
[42,43,53,37,0,50,42,44],
[46,33,40,35,31,0,29,31],
[45,51,51,47,39,52,0,40],
[41,45,46,43,37,50,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,34,37,38,41,38],
[35,0,38,39,38,41,41,45],
[37,43,0,28,38,35,37,45],
[47,42,53,0,42,35,49,53],
[44,43,43,39,0,32,44,46],
[43,40,46,46,49,0,44,51],
[40,40,44,32,37,37,0,54],
[43,36,36,28,35,30,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,32,57,39,41,57],
[33,0,32,41,34,39,17,40],
[33,49,0,25,33,16,25,25],
[49,40,56,0,49,65,50,50],
[24,47,48,32,0,40,32,32],
[42,42,65,16,41,0,42,40],
[40,64,56,31,49,39,0,40],
[24,41,56,31,49,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,33,41,32,43,29],
[44,0,53,37,43,39,49,40],
[43,28,0,29,38,42,47,31],
[48,44,52,0,52,39,57,52],
[40,38,43,29,0,36,31,37],
[49,42,39,42,45,0,54,48],
[38,32,34,24,50,27,0,36],
[52,41,50,29,44,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,33,35,42,42,29,28],
[52,0,27,59,49,30,38,39],
[48,54,0,56,49,43,32,50],
[46,22,25,0,36,26,22,32],
[39,32,32,45,0,43,32,31],
[39,51,38,55,38,0,43,33],
[52,43,49,59,49,38,0,37],
[53,42,31,49,50,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,39,30,30,32,33],
[48,0,41,51,41,40,43,49],
[53,40,0,47,42,46,39,48],
[42,30,34,0,36,34,33,39],
[51,40,39,45,0,39,44,38],
[51,41,35,47,42,0,45,38],
[49,38,42,48,37,36,0,43],
[48,32,33,42,43,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,49,51,55,43,51],
[38,0,41,37,38,41,39,48],
[44,40,0,44,40,45,37,41],
[32,44,37,0,46,50,32,52],
[30,43,41,35,0,40,35,49],
[26,40,36,31,41,0,36,46],
[38,42,44,49,46,45,0,51],
[30,33,40,29,32,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,36,44,30,50,51],
[43,0,51,51,38,45,42,50],
[45,30,0,37,30,39,49,35],
[45,30,44,0,29,32,37,43],
[37,43,51,52,0,37,43,51],
[51,36,42,49,44,0,33,41],
[31,39,32,44,38,48,0,36],
[30,31,46,38,30,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,38,43,43,41,41],
[35,0,44,44,39,37,31,38],
[39,37,0,39,39,38,34,36],
[43,37,42,0,42,33,34,38],
[38,42,42,39,0,38,35,34],
[38,44,43,48,43,0,42,42],
[40,50,47,47,46,39,0,47],
[40,43,45,43,47,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,52,45,57,46,44],
[38,0,33,35,45,58,24,34],
[42,48,0,44,46,41,44,40],
[29,46,37,0,42,40,45,36],
[36,36,35,39,0,39,35,29],
[24,23,40,41,42,0,33,40],
[35,57,37,36,46,48,0,37],
[37,47,41,45,52,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,52,35,46,47,53,53],
[35,0,43,38,40,42,39,36],
[29,38,0,38,37,36,40,42],
[46,43,43,0,44,45,44,39],
[35,41,44,37,0,39,32,50],
[34,39,45,36,42,0,38,47],
[28,42,41,37,49,43,0,46],
[28,45,39,42,31,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,50,41,49,40,50,44],
[49,0,46,47,43,40,40,41],
[31,35,0,31,44,39,52,36],
[40,34,50,0,44,42,50,50],
[32,38,37,37,0,46,51,39],
[41,41,42,39,35,0,55,37],
[31,41,29,31,30,26,0,36],
[37,40,45,31,42,44,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,70,61,61,49,52,50],
[42,0,60,42,60,59,52,40],
[11,21,0,23,43,39,52,20],
[20,39,58,0,38,49,40,40],
[20,21,38,43,0,49,52,40],
[32,22,42,32,32,0,42,50],
[29,29,29,41,29,39,0,41],
[31,41,61,41,41,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,45,48,47,40,51],
[39,0,36,46,41,36,39,44],
[39,45,0,45,45,32,42,44],
[36,35,36,0,41,39,33,39],
[33,40,36,40,0,36,34,36],
[34,45,49,42,45,0,37,43],
[41,42,39,48,47,44,0,45],
[30,37,37,42,45,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,38,54,38,48,55],
[39,0,38,31,40,29,48,46],
[32,43,0,34,47,37,44,45],
[43,50,47,0,36,43,48,49],
[27,41,34,45,0,32,42,51],
[43,52,44,38,49,0,45,51],
[33,33,37,33,39,36,0,40],
[26,35,36,32,30,30,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,46,41,42,42,49,37],
[45,0,41,37,46,36,46,36],
[35,40,0,35,40,40,49,37],
[40,44,46,0,48,40,54,45],
[39,35,41,33,0,36,46,37],
[39,45,41,41,45,0,58,39],
[32,35,32,27,35,23,0,31],
[44,45,44,36,44,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,41,44,43,44,44],
[41,0,35,43,39,42,39,43],
[35,46,0,46,39,43,39,41],
[40,38,35,0,40,42,42,46],
[37,42,42,41,0,46,37,41],
[38,39,38,39,35,0,38,39],
[37,42,42,39,44,43,0,43],
[37,38,40,35,40,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,52,39,42,69,52,53],
[42,0,39,42,29,69,55,68],
[29,42,0,29,29,69,42,55],
[42,39,52,0,29,69,66,40],
[39,52,52,52,0,81,66,66],
[12,12,12,12,0,0,25,12],
[29,26,39,15,15,56,0,40],
[28,13,26,41,15,69,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,46,46,27,56,37],
[47,0,46,37,66,56,74,66],
[35,35,0,45,54,46,46,55],
[35,44,36,0,44,36,47,39],
[35,15,27,37,0,27,55,47],
[54,25,35,45,54,0,65,74],
[25,7,35,34,26,16,0,27],
[44,15,26,42,34,7,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,56,40,36,56,42,41],
[29,0,29,35,25,50,29,20],
[25,52,0,33,34,55,32,32],
[41,46,48,0,45,53,49,33],
[45,56,47,36,0,58,39,27],
[25,31,26,28,23,0,30,20],
[39,52,49,32,42,51,0,26],
[40,61,49,48,54,61,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,30,41,33,31,37],
[38,0,45,35,42,37,39,44],
[38,36,0,33,42,45,41,41],
[51,46,48,0,50,38,51,46],
[40,39,39,31,0,31,43,40],
[48,44,36,43,50,0,51,39],
[50,42,40,30,38,30,0,40],
[44,37,40,35,41,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,47,29,38,34,41,36],
[51,0,50,36,45,37,42,43],
[34,31,0,30,40,41,29,37],
[52,45,51,0,51,39,42,38],
[43,36,41,30,0,24,37,33],
[47,44,40,42,57,0,40,36],
[40,39,52,39,44,41,0,42],
[45,38,44,43,48,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,49,37,41,43,43],
[45,0,47,43,33,32,36,49],
[37,34,0,44,27,31,35,44],
[32,38,37,0,44,34,35,47],
[44,48,54,37,0,40,44,51],
[40,49,50,47,41,0,39,51],
[38,45,46,46,37,42,0,52],
[38,32,37,34,30,30,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,34,61,43,52,43],
[19,0,26,9,36,34,43,19],
[18,55,0,26,35,26,35,18],
[47,72,55,0,44,52,52,35],
[20,45,46,37,0,45,64,47],
[38,47,55,29,36,0,39,28],
[29,38,46,29,17,42,0,9],
[38,62,63,46,34,53,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,29,26,34,36,35,32],
[58,0,45,46,50,36,55,51],
[52,36,0,40,58,43,60,42],
[55,35,41,0,48,45,50,45],
[47,31,23,33,0,40,34,29],
[45,45,38,36,41,0,51,35],
[46,26,21,31,47,30,0,27],
[49,30,39,36,52,46,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,46,39,43,39,41],
[43,0,39,34,45,39,44,47],
[38,42,0,41,39,46,39,46],
[35,47,40,0,43,47,43,45],
[42,36,42,38,0,37,35,39],
[38,42,35,34,44,0,37,43],
[42,37,42,38,46,44,0,46],
[40,34,35,36,42,38,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,43,48,45,36,48,43],
[49,0,46,40,39,33,37,41],
[38,35,0,55,34,38,45,46],
[33,41,26,0,33,34,36,35],
[36,42,47,48,0,34,41,38],
[45,48,43,47,47,0,37,45],
[33,44,36,45,40,44,0,37],
[38,40,35,46,43,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,38,48,34,32,39,25],
[54,0,57,51,38,43,50,37],
[43,24,0,47,31,29,38,28],
[33,30,34,0,25,30,33,29],
[47,43,50,56,0,36,44,37],
[49,38,52,51,45,0,47,43],
[42,31,43,48,37,34,0,40],
[56,44,53,52,44,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,37,25,29,29,33,32],
[58,0,49,38,43,47,45,39],
[44,32,0,28,40,32,44,32],
[56,43,53,0,48,37,42,41],
[52,38,41,33,0,43,37,35],
[52,34,49,44,38,0,36,35],
[48,36,37,39,44,45,0,44],
[49,42,49,40,46,46,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,36,40,41,38,33],
[48,0,41,34,33,21,36,32],
[43,40,0,38,43,30,41,36],
[45,47,43,0,36,39,43,42],
[41,48,38,45,0,42,48,40],
[40,60,51,42,39,0,54,34],
[43,45,40,38,33,27,0,37],
[48,49,45,39,41,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,42,33,38,36,39,42],
[51,0,50,35,46,48,44,49],
[39,31,0,23,39,36,32,43],
[48,46,58,0,52,40,46,49],
[43,35,42,29,0,44,37,43],
[45,33,45,41,37,0,39,44],
[42,37,49,35,44,42,0,45],
[39,32,38,32,38,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,16,49,57,42,57,41],
[48,0,41,56,57,50,42,34],
[65,40,0,65,57,43,57,50],
[32,25,16,0,34,34,25,34],
[24,24,24,47,0,24,40,17],
[39,31,38,47,57,0,48,24],
[24,39,24,56,41,33,0,24],
[40,47,31,47,64,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,47,45,40,43,40,41],
[30,0,21,41,31,41,34,34],
[34,60,0,49,53,47,44,52],
[36,40,32,0,33,38,31,34],
[41,50,28,48,0,46,48,44],
[38,40,34,43,35,0,24,52],
[41,47,37,50,33,57,0,41],
[40,47,29,47,37,29,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,39,55,48,43,46],
[38,0,32,36,37,39,33,35],
[37,49,0,40,46,45,36,39],
[42,45,41,0,43,43,38,38],
[26,44,35,38,0,39,27,39],
[33,42,36,38,42,0,32,45],
[38,48,45,43,54,49,0,44],
[35,46,42,43,42,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,20,0,21,0,60,0],
[41,0,20,20,41,41,60,41],
[61,61,0,19,40,21,40,21],
[81,61,62,0,40,42,60,41],
[60,40,41,41,0,41,60,20],
[81,40,60,39,40,0,60,41],
[21,21,41,21,21,21,0,0],
[81,40,60,40,61,40,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,43,49,42,47,37],
[41,0,43,46,48,38,41,34],
[41,38,0,46,41,39,41,40],
[38,35,35,0,42,38,41,31],
[32,33,40,39,0,36,40,32],
[39,43,42,43,45,0,42,41],
[34,40,40,40,41,39,0,31],
[44,47,41,50,49,40,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,28,40,36,35,34,29],
[41,0,35,40,41,41,46,30],
[53,46,0,47,41,35,47,30],
[41,41,34,0,35,42,42,18],
[45,40,40,46,0,46,52,41],
[46,40,46,39,35,0,47,40],
[47,35,34,39,29,34,0,23],
[52,51,51,63,40,41,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,47,46,55,38,56],
[34,0,33,44,37,42,36,49],
[35,48,0,45,52,50,46,56],
[34,37,36,0,41,28,54,38],
[35,44,29,40,0,51,45,43],
[26,39,31,53,30,0,36,46],
[43,45,35,27,36,45,0,46],
[25,32,25,43,38,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,51,47,49,40,42],
[44,0,39,54,53,52,47,47],
[39,42,0,56,43,46,48,40],
[30,27,25,0,38,37,28,27],
[34,28,38,43,0,38,35,35],
[32,29,35,44,43,0,39,38],
[41,34,33,53,46,42,0,43],
[39,34,41,54,46,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,43,46,41,49,44],
[41,0,39,35,50,38,45,31],
[39,42,0,43,49,37,46,43],
[38,46,38,0,52,39,49,46],
[35,31,32,29,0,25,33,27],
[40,43,44,42,56,0,47,39],
[32,36,35,32,48,34,0,38],
[37,50,38,35,54,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,37,42,36,38,40],
[37,0,39,31,52,36,42,43],
[43,42,0,45,38,35,39,42],
[44,50,36,0,46,44,41,42],
[39,29,43,35,0,36,37,36],
[45,45,46,37,45,0,40,39],
[43,39,42,40,44,41,0,40],
[41,38,39,39,45,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,52,37,42,49,47,46],
[29,0,35,29,31,32,26,34],
[29,46,0,33,37,31,42,28],
[44,52,48,0,50,47,43,38],
[39,50,44,31,0,44,44,39],
[32,49,50,34,37,0,51,44],
[34,55,39,38,37,30,0,29],
[35,47,53,43,42,37,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,44,43,51,45,38],
[36,0,35,39,39,46,36,39],
[41,46,0,49,49,46,41,39],
[37,42,32,0,46,45,36,39],
[38,42,32,35,0,46,35,38],
[30,35,35,36,35,0,32,32],
[36,45,40,45,46,49,0,46],
[43,42,42,42,43,49,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,31,21,28,34,29,41],
[56,0,48,35,47,46,36,45],
[50,33,0,38,44,38,23,48],
[60,46,43,0,34,52,41,61],
[53,34,37,47,0,47,40,43],
[47,35,43,29,34,0,32,44],
[52,45,58,40,41,49,0,57],
[40,36,33,20,38,37,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,41,38,44,43,36],
[40,0,48,37,38,46,35,41],
[36,33,0,44,39,40,34,37],
[40,44,37,0,36,45,37,41],
[43,43,42,45,0,45,38,39],
[37,35,41,36,36,0,30,32],
[38,46,47,44,43,51,0,40],
[45,40,44,40,42,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,50,39,53,45,47,39],
[31,0,47,38,47,48,41,48],
[31,34,0,38,41,39,41,37],
[42,43,43,0,49,32,50,48],
[28,34,40,32,0,32,35,37],
[36,33,42,49,49,0,45,39],
[34,40,40,31,46,36,0,39],
[42,33,44,33,44,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,33,37,44,37,41,36],
[46,0,35,47,40,41,38,45],
[48,46,0,49,42,37,40,43],
[44,34,32,0,45,33,41,36],
[37,41,39,36,0,42,27,38],
[44,40,44,48,39,0,37,40],
[40,43,41,40,54,44,0,40],
[45,36,38,45,43,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,42,42,33,40,39],
[45,0,40,39,43,45,40,41],
[46,41,0,47,43,44,41,40],
[39,42,34,0,42,37,40,35],
[39,38,38,39,0,28,37,40],
[48,36,37,44,53,0,38,42],
[41,41,40,41,44,43,0,44],
[42,40,41,46,41,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,28,21,26,44,38,31],
[58,0,41,34,37,46,51,39],
[53,40,0,46,45,53,44,45],
[60,47,35,0,41,52,48,39],
[55,44,36,40,0,49,44,44],
[37,35,28,29,32,0,42,24],
[43,30,37,33,37,39,0,39],
[50,42,36,42,37,57,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,54,49,46,47,38,36],
[32,0,43,32,39,43,28,30],
[27,38,0,32,46,35,27,25],
[32,49,49,0,38,39,30,41],
[35,42,35,43,0,45,31,27],
[34,38,46,42,36,0,31,33],
[43,53,54,51,50,50,0,37],
[45,51,56,40,54,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,34,47,45,39,40],
[40,0,44,40,36,44,38,36],
[39,37,0,37,40,47,34,41],
[47,41,44,0,40,44,38,38],
[34,45,41,41,0,47,43,43],
[36,37,34,37,34,0,36,41],
[42,43,47,43,38,45,0,41],
[41,45,40,43,38,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,40,30,39,40,39],
[39,0,41,44,36,39,45,44],
[40,40,0,38,34,34,41,43],
[41,37,43,0,37,44,43,45],
[51,45,47,44,0,38,41,48],
[42,42,47,37,43,0,51,50],
[41,36,40,38,40,30,0,37],
[42,37,38,36,33,31,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,42,37,50,37,41],
[37,0,45,40,39,43,41,35],
[32,36,0,35,30,42,30,37],
[39,41,46,0,41,52,41,43],
[44,42,51,40,0,48,43,35],
[31,38,39,29,33,0,34,30],
[44,40,51,40,38,47,0,38],
[40,46,44,38,46,51,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,41,44,43,44,46],
[44,0,47,34,38,44,45,48],
[41,34,0,52,44,50,48,49],
[40,47,29,0,41,39,39,44],
[37,43,37,40,0,40,42,45],
[38,37,31,42,41,0,45,40],
[37,36,33,42,39,36,0,39],
[35,33,32,37,36,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,33,37,34,35,39],
[46,0,49,39,32,38,44,38],
[42,32,0,38,36,34,44,40],
[48,42,43,0,39,40,44,40],
[44,49,45,42,0,43,51,36],
[47,43,47,41,38,0,51,43],
[46,37,37,37,30,30,0,40],
[42,43,41,41,45,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,42,45,47,41,38],
[37,0,36,38,41,35,42,42],
[39,45,0,31,49,36,39,38],
[39,43,50,0,46,49,43,43],
[36,40,32,35,0,34,27,30],
[34,46,45,32,47,0,30,39],
[40,39,42,38,54,51,0,47],
[43,39,43,38,51,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,40,52,44,35,34,43],
[50,0,34,48,46,43,43,48],
[41,47,0,40,53,28,32,45],
[29,33,41,0,55,35,36,34],
[37,35,28,26,0,25,25,34],
[46,38,53,46,56,0,28,41],
[47,38,49,45,56,53,0,33],
[38,33,36,47,47,40,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,26,46,36,42,36],
[40,0,46,38,39,44,44,32],
[35,35,0,43,30,45,33,38],
[55,43,38,0,46,47,46,46],
[35,42,51,35,0,24,33,39],
[45,37,36,34,57,0,43,39],
[39,37,48,35,48,38,0,33],
[45,49,43,35,42,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,43,39,51,43,49],
[36,0,47,32,32,38,38,40],
[39,34,0,36,21,40,43,38],
[38,49,45,0,41,49,48,49],
[42,49,60,40,0,47,48,52],
[30,43,41,32,34,0,43,37],
[38,43,38,33,33,38,0,35],
[32,41,43,32,29,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,39,41,41,33,39],
[41,0,41,46,40,38,36,35],
[38,40,0,45,44,39,40,45],
[42,35,36,0,39,38,41,45],
[40,41,37,42,0,42,35,43],
[40,43,42,43,39,0,37,38],
[48,45,41,40,46,44,0,48],
[42,46,36,36,38,43,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,71,81,63,34,43],
[27,0,61,53,56,44,34,26],
[20,20,0,40,56,39,19,19],
[10,28,41,0,55,28,19,28],
[0,25,25,26,0,27,27,27],
[18,37,42,53,54,0,33,27],
[47,47,62,62,54,48,0,28],
[38,55,62,53,54,54,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,37,42,46,45,37],
[45,0,43,42,56,39,48,42],
[42,38,0,50,45,43,39,46],
[44,39,31,0,44,49,45,40],
[39,25,36,37,0,36,36,39],
[35,42,38,32,45,0,37,37],
[36,33,42,36,45,44,0,37],
[44,39,35,41,42,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,41,39,35,25,33,44],
[53,0,43,42,44,39,42,46],
[40,38,0,41,37,42,42,49],
[42,39,40,0,31,37,37,39],
[46,37,44,50,0,42,38,40],
[56,42,39,44,39,0,39,46],
[48,39,39,44,43,42,0,50],
[37,35,32,42,41,35,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,37,37,41,40,51],
[43,0,40,36,38,42,35,49],
[42,41,0,41,37,49,44,45],
[44,45,40,0,38,46,47,53],
[44,43,44,43,0,42,38,47],
[40,39,32,35,39,0,40,45],
[41,46,37,34,43,41,0,51],
[30,32,36,28,34,36,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,44,46,45,42,48],
[43,0,45,43,51,45,38,47],
[33,36,0,34,47,47,35,42],
[37,38,47,0,48,39,44,48],
[35,30,34,33,0,33,40,35],
[36,36,34,42,48,0,34,39],
[39,43,46,37,41,47,0,41],
[33,34,39,33,46,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,46,47,61,38,35,39],
[30,0,43,32,44,28,33,45],
[35,38,0,33,50,29,33,39],
[34,49,48,0,47,47,42,49],
[20,37,31,34,0,27,25,39],
[43,53,52,34,54,0,51,52],
[46,48,48,39,56,30,0,40],
[42,36,42,32,42,29,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,40,35,35,43,31,26],
[49,0,49,42,41,51,40,27],
[41,32,0,44,35,40,32,32],
[46,39,37,0,37,33,33,35],
[46,40,46,44,0,49,47,45],
[38,30,41,48,32,0,38,31],
[50,41,49,48,34,43,0,28],
[55,54,49,46,36,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,41,39,42,50,50],
[42,0,37,40,41,43,46,41],
[43,44,0,42,39,31,44,38],
[40,41,39,0,44,28,47,34],
[42,40,42,37,0,29,46,46],
[39,38,50,53,52,0,54,54],
[31,35,37,34,35,27,0,42],
[31,40,43,47,35,27,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,21,35,48,42,36,42],
[43,0,49,36,48,38,37,44],
[60,32,0,42,39,46,42,43],
[46,45,39,0,40,47,46,40],
[33,33,42,41,0,36,40,28],
[39,43,35,34,45,0,45,37],
[45,44,39,35,41,36,0,37],
[39,37,38,41,53,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,47,45,40,39,31],
[44,0,39,47,43,39,40,42],
[39,42,0,51,52,45,46,42],
[34,34,30,0,32,31,35,36],
[36,38,29,49,0,34,43,31],
[41,42,36,50,47,0,44,46],
[42,41,35,46,38,37,0,36],
[50,39,39,45,50,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,42,42,38,42,48],
[41,0,38,42,44,44,47,43],
[44,43,0,38,55,48,51,43],
[39,39,43,0,49,34,46,41],
[39,37,26,32,0,36,38,31],
[43,37,33,47,45,0,38,43],
[39,34,30,35,43,43,0,37],
[33,38,38,40,50,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,40,34,46,49,40],
[42,0,50,40,39,49,44,41],
[39,31,0,43,38,43,40,32],
[41,41,38,0,42,46,45,39],
[47,42,43,39,0,46,37,38],
[35,32,38,35,35,0,37,36],
[32,37,41,36,44,44,0,39],
[41,40,49,42,43,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,50,35,44,46,50,51],
[29,0,39,32,36,40,39,37],
[31,42,0,41,41,41,46,47],
[46,49,40,0,44,48,52,61],
[37,45,40,37,0,43,35,44],
[35,41,40,33,38,0,34,43],
[31,42,35,29,46,47,0,48],
[30,44,34,20,37,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,39,55,38,37,37,48],
[18,0,41,64,47,22,46,42],
[42,40,0,56,47,31,38,42],
[26,17,25,0,30,31,17,9],
[43,34,34,51,0,38,25,34],
[44,59,50,50,43,0,24,28],
[44,35,43,64,56,57,0,33],
[33,39,39,72,47,53,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,35,39,35,40,39,34],
[47,0,33,43,38,40,36,39],
[46,48,0,45,37,42,43,38],
[42,38,36,0,42,34,42,36],
[46,43,44,39,0,47,42,42],
[41,41,39,47,34,0,40,38],
[42,45,38,39,39,41,0,33],
[47,42,43,45,39,43,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,38,38,45,44,45],
[48,0,37,35,41,43,43,40],
[43,44,0,46,38,39,41,53],
[43,46,35,0,32,45,42,39],
[43,40,43,49,0,47,39,49],
[36,38,42,36,34,0,38,35],
[37,38,40,39,42,43,0,37],
[36,41,28,42,32,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,40,40,35,37,37],
[41,0,43,43,41,41,36,38],
[39,38,0,40,33,30,36,35],
[41,38,41,0,36,39,32,41],
[41,40,48,45,0,46,38,43],
[46,40,51,42,35,0,37,38],
[44,45,45,49,43,44,0,40],
[44,43,46,40,38,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,42,34,48,48,58,56],
[21,0,17,28,26,34,40,46],
[39,64,0,46,57,64,52,59],
[47,53,35,0,60,61,53,60],
[33,55,24,21,0,36,40,48],
[33,47,17,20,45,0,45,40],
[23,41,29,28,41,36,0,56],
[25,35,22,21,33,41,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,49,43,48,44,48,37],
[41,0,46,40,43,49,48,39],
[32,35,0,38,41,37,40,39],
[38,41,43,0,42,48,41,37],
[33,38,40,39,0,43,40,38],
[37,32,44,33,38,0,45,34],
[33,33,41,40,41,36,0,45],
[44,42,42,44,43,47,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,40,49,54,45,37,25],
[27,0,32,35,42,37,28,31],
[41,49,0,42,54,48,44,29],
[32,46,39,0,40,39,41,31],
[27,39,27,41,0,25,29,25],
[36,44,33,42,56,0,29,48],
[44,53,37,40,52,52,0,32],
[56,50,52,50,56,33,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,43,43,40,29,37],
[38,0,35,34,33,43,30,37],
[42,46,0,38,41,36,36,43],
[38,47,43,0,41,43,36,35],
[38,48,40,40,0,45,31,36],
[41,38,45,38,36,0,40,42],
[52,51,45,45,50,41,0,36],
[44,44,38,46,45,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,37,28,40,34,38],
[52,0,25,38,44,41,41,48],
[50,56,0,44,42,37,41,50],
[44,43,37,0,38,41,37,47],
[53,37,39,43,0,40,35,46],
[41,40,44,40,41,0,36,50],
[47,40,40,44,46,45,0,45],
[43,33,31,34,35,31,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,47,37,33,39,42],
[52,0,41,50,41,43,38,44],
[56,40,0,49,49,49,49,50],
[34,31,32,0,35,31,34,39],
[44,40,32,46,0,37,38,48],
[48,38,32,50,44,0,41,56],
[42,43,32,47,43,40,0,44],
[39,37,31,42,33,25,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,40,60,44,45,47,49],
[30,0,31,45,29,37,40,39],
[41,50,0,55,39,43,45,40],
[21,36,26,0,33,28,41,33],
[37,52,42,48,0,45,43,42],
[36,44,38,53,36,0,42,42],
[34,41,36,40,38,39,0,46],
[32,42,41,48,39,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,39,40,38,37,35,42],
[29,0,26,30,26,23,28,28],
[42,55,0,43,33,45,43,47],
[41,51,38,0,29,38,42,43],
[43,55,48,52,0,40,48,48],
[44,58,36,43,41,0,37,49],
[46,53,38,39,33,44,0,44],
[39,53,34,38,33,32,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,36,38,38,40,42,46],
[34,0,32,29,32,31,43,36],
[45,49,0,44,43,43,39,55],
[43,52,37,0,36,35,34,43],
[43,49,38,45,0,46,46,50],
[41,50,38,46,35,0,46,46],
[39,38,42,47,35,35,0,45],
[35,45,26,38,31,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,44,46,36,34,39,49],
[49,0,37,54,52,42,51,56],
[37,44,0,55,39,39,39,46],
[35,27,26,0,29,26,39,35],
[45,29,42,52,0,35,44,46],
[47,39,42,55,46,0,48,50],
[42,30,42,42,37,33,0,42],
[32,25,35,46,35,31,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,37,42,41,52,32],
[42,0,33,42,40,34,51,43],
[44,48,0,47,39,49,47,42],
[44,39,34,0,43,29,49,34],
[39,41,42,38,0,31,44,33],
[40,47,32,52,50,0,49,44],
[29,30,34,32,37,32,0,32],
[49,38,39,47,48,37,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,53,40,36,32,39],
[39,0,40,47,33,30,25,43],
[40,41,0,52,26,36,23,29],
[28,34,29,0,24,20,17,18],
[41,48,55,57,0,46,40,46],
[45,51,45,61,35,0,47,39],
[49,56,58,64,41,34,0,51],
[42,38,52,63,35,42,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,47,51,44,42,38],
[39,0,45,43,46,35,34,40],
[39,36,0,39,46,35,41,41],
[34,38,42,0,52,46,38,34],
[30,35,35,29,0,27,31,30],
[37,46,46,35,54,0,35,30],
[39,47,40,43,50,46,0,35],
[43,41,40,47,51,51,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 81, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_81.csv", index=False, header=False)