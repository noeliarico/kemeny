
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,450,447,452,442,461,455,437],
[440,0,455,418,433,425,456,445],
[443,435,0,411,448,450,450,445],
[438,472,479,0,437,469,457,452],
[448,457,442,453,0,431,452,433],
[429,465,440,421,459,0,446,447],
[435,434,440,433,438,444,0,437],
[453,445,445,438,457,443,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,450,472,472,468,460,449],
[452,0,469,470,429,447,421,458],
[440,421,0,443,411,443,439,427],
[418,420,447,0,416,447,434,426],
[418,461,479,474,0,479,463,479],
[422,443,447,443,411,0,467,427],
[430,469,451,456,427,423,0,449],
[441,432,463,464,411,463,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,452,460,459,457,435,450],
[446,0,461,460,448,452,445,439],
[438,429,0,457,426,444,424,434],
[430,430,433,0,418,439,424,426],
[431,442,464,472,0,463,459,443],
[433,438,446,451,427,0,438,413],
[455,445,466,466,431,452,0,442],
[440,451,456,464,447,477,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,434,449,460,435,444,447],
[430,0,440,466,470,429,423,470],
[456,450,0,441,475,452,456,463],
[441,424,449,0,457,454,455,475],
[430,420,415,433,0,454,437,456],
[455,461,438,436,436,0,440,451],
[446,467,434,435,453,450,0,456],
[443,420,427,415,434,439,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,447,443,459,450,435,453],
[455,0,422,427,441,444,438,433],
[443,468,0,458,466,460,452,447],
[447,463,432,0,466,452,435,446],
[431,449,424,424,0,456,415,425],
[440,446,430,438,434,0,423,436],
[455,452,438,455,475,467,0,478],
[437,457,443,444,465,454,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,427,458,434,415,447,476],
[428,0,443,428,447,466,428,458],
[463,447,0,454,454,453,432,447],
[432,462,436,0,416,439,466,505],
[456,443,436,474,0,448,448,477],
[475,424,437,451,442,0,444,488],
[443,462,458,424,442,446,0,477],
[414,432,443,385,413,402,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,461,455,442,435,435,466],
[439,0,462,445,456,447,461,486],
[429,428,0,452,438,435,445,458],
[435,445,438,0,435,425,418,429],
[448,434,452,455,0,448,441,450],
[455,443,455,465,442,0,443,466],
[455,429,445,472,449,447,0,448],
[424,404,432,461,440,424,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,419,435,438,442,441,430],
[451,0,457,451,435,453,441,437],
[471,433,0,429,456,441,439,436],
[455,439,461,0,459,473,462,445],
[452,455,434,431,0,445,467,446],
[448,437,449,417,445,0,436,433],
[449,449,451,428,423,454,0,428],
[460,453,454,445,444,457,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,536,331,633,492,534,377,518],
[354,0,379,459,638,535,513,407],
[559,511,0,640,408,318,408,352],
[257,431,250,0,408,195,304,91],
[398,252,482,482,0,348,517,270],
[356,355,572,695,542,0,653,386],
[513,377,482,586,373,237,0,263],
[372,483,538,799,620,504,627,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,443,460,459,441,429,435],
[445,0,441,438,448,447,443,437],
[447,449,0,449,455,455,445,431],
[430,452,441,0,428,430,443,424],
[431,442,435,462,0,444,406,429],
[449,443,435,460,446,0,455,441],
[461,447,445,447,484,435,0,447],
[455,453,459,466,461,449,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,448,426,431,486,482,459],
[387,0,413,388,376,421,454,385],
[442,477,0,438,423,457,471,447],
[464,502,452,0,475,417,477,447],
[459,514,467,415,0,407,465,489],
[404,469,433,473,483,0,454,437],
[408,436,419,413,425,436,0,443],
[431,505,443,443,401,453,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,449,438,435,454,441,431],
[442,0,439,448,475,460,447,428],
[441,451,0,446,455,453,460,431],
[452,442,444,0,474,467,459,446],
[455,415,435,416,0,457,427,420],
[436,430,437,423,433,0,445,402],
[449,443,430,431,463,445,0,441],
[459,462,459,444,470,488,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,431,456,446,477,445,431],
[405,0,426,464,420,494,442,421],
[459,464,0,451,414,462,449,441],
[434,426,439,0,438,492,433,442],
[444,470,476,452,0,492,444,465],
[413,396,428,398,398,0,407,371],
[445,448,441,457,446,483,0,444],
[459,469,449,448,425,519,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,531,467,424,532,474,472,401],
[359,0,387,432,397,387,389,406],
[423,503,0,462,486,439,393,376],
[466,458,428,0,476,463,453,427],
[358,493,404,414,0,428,435,359],
[416,503,451,427,462,0,462,474],
[418,501,497,437,455,428,0,456],
[489,484,514,463,531,416,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,459,434,438,474,447,444],
[458,0,475,444,460,463,483,475],
[431,415,0,424,448,427,434,451],
[456,446,466,0,471,450,444,452],
[452,430,442,419,0,473,444,449],
[416,427,463,440,417,0,457,450],
[443,407,456,446,446,433,0,460],
[446,415,439,438,441,440,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,474,446,443,480,435,430],
[430,0,449,440,432,449,442,418],
[416,441,0,429,430,461,443,455],
[444,450,461,0,454,439,442,472],
[447,458,460,436,0,475,487,452],
[410,441,429,451,415,0,441,432],
[455,448,447,448,403,449,0,462],
[460,472,435,418,438,458,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,466,445,453,475,473,478],
[445,0,451,456,470,461,468,450],
[424,439,0,442,445,469,451,473],
[445,434,448,0,474,480,460,474],
[437,420,445,416,0,454,440,465],
[415,429,421,410,436,0,453,450],
[417,422,439,430,450,437,0,455],
[412,440,417,416,425,440,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,429,486,456,438,465,467],
[429,0,430,446,426,422,420,450],
[461,460,0,465,439,450,457,459],
[404,444,425,0,400,383,412,432],
[434,464,451,490,0,427,432,457],
[452,468,440,507,463,0,449,477],
[425,470,433,478,458,441,0,444],
[423,440,431,458,433,413,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,403,424,408,384,378,416],
[452,0,426,413,447,397,414,422],
[487,464,0,462,488,427,483,470],
[466,477,428,0,427,458,424,433],
[482,443,402,463,0,433,419,444],
[506,493,463,432,457,0,462,482],
[512,476,407,466,471,428,0,477],
[474,468,420,457,446,408,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,447,405,402,459,458,434],
[414,0,441,434,425,405,391,410],
[443,449,0,441,440,432,452,461],
[485,456,449,0,453,425,454,470],
[488,465,450,437,0,450,488,461],
[431,485,458,465,440,0,430,471],
[432,499,438,436,402,460,0,432],
[456,480,429,420,429,419,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,421,432,400,432,422,435],
[474,0,466,453,432,455,443,439],
[469,424,0,432,434,445,447,440],
[458,437,458,0,439,440,444,437],
[490,458,456,451,0,435,457,453],
[458,435,445,450,455,0,451,462],
[468,447,443,446,433,439,0,460],
[455,451,450,453,437,428,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,444,455,442,432,479,454],
[435,0,431,450,444,445,478,475],
[446,459,0,465,463,438,474,443],
[435,440,425,0,449,425,472,438],
[448,446,427,441,0,435,453,464],
[458,445,452,465,455,0,466,458],
[411,412,416,418,437,424,0,423],
[436,415,447,452,426,432,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,438,488,462,448,448,447],
[475,0,444,474,438,464,464,418],
[452,446,0,527,451,473,446,438],
[402,416,363,0,428,443,446,435],
[428,452,439,462,0,426,488,428],
[442,426,417,447,464,0,435,416],
[442,426,444,444,402,455,0,436],
[443,472,452,455,462,474,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,451,440,462,419,422,430],
[478,0,486,452,475,454,442,441],
[439,404,0,424,432,417,425,452],
[450,438,466,0,446,429,429,454],
[428,415,458,444,0,435,398,431],
[471,436,473,461,455,0,431,450],
[468,448,465,461,492,459,0,438],
[460,449,438,436,459,440,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,458,465,433,437,423,434],
[422,0,469,463,438,429,410,450],
[432,421,0,468,411,413,414,446],
[425,427,422,0,406,394,399,412],
[457,452,479,484,0,450,447,440],
[453,461,477,496,440,0,437,444],
[467,480,476,491,443,453,0,466],
[456,440,444,478,450,446,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,450,433,418,448,463,456],
[463,0,434,437,450,429,501,487],
[440,456,0,482,426,414,435,462],
[457,453,408,0,411,415,463,471],
[472,440,464,479,0,428,500,485],
[442,461,476,475,462,0,506,476],
[427,389,455,427,390,384,0,424],
[434,403,428,419,405,414,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,426,401,416,411,422,401],
[461,0,437,425,431,408,437,401],
[464,453,0,429,415,445,415,393],
[489,465,461,0,464,463,425,455],
[474,459,475,426,0,427,413,400],
[479,482,445,427,463,0,433,429],
[468,453,475,465,477,457,0,426],
[489,489,497,435,490,461,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,487,446,470,448,445,455],
[459,0,458,449,454,454,429,452],
[403,432,0,441,455,432,419,426],
[444,441,449,0,445,427,428,454],
[420,436,435,445,0,422,419,442],
[442,436,458,463,468,0,444,453],
[445,461,471,462,471,446,0,471],
[435,438,464,436,448,437,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,393,381,344,479,387,397],
[449,0,394,432,387,496,468,405],
[497,496,0,502,448,557,418,447],
[509,458,388,0,427,534,414,488],
[546,503,442,463,0,559,514,513],
[411,394,333,356,331,0,392,403],
[503,422,472,476,376,498,0,475],
[493,485,443,402,377,487,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,454,431,458,449,473,455],
[423,0,420,437,433,422,454,418],
[436,470,0,461,457,459,478,447],
[459,453,429,0,448,432,466,431],
[432,457,433,442,0,442,464,434],
[441,468,431,458,448,0,461,442],
[417,436,412,424,426,429,0,423],
[435,472,443,459,456,448,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,561,454,398,500,556,329],
[381,0,505,320,358,641,485,321],
[329,385,0,384,329,608,463,255],
[436,570,506,0,481,522,522,342],
[492,532,561,409,0,670,683,472],
[390,249,282,368,220,0,398,294],
[334,405,427,368,207,492,0,339],
[561,569,635,548,418,596,551,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,415,435,448,420,431,444],
[470,0,422,471,441,428,442,437],
[475,468,0,479,476,469,439,471],
[455,419,411,0,448,430,448,452],
[442,449,414,442,0,450,424,435],
[470,462,421,460,440,0,441,461],
[459,448,451,442,466,449,0,460],
[446,453,419,438,455,429,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,498,440,420,482,411,512],
[405,0,495,361,422,549,372,466],
[392,395,0,318,483,517,450,494],
[450,529,572,0,452,566,433,464],
[470,468,407,438,0,550,404,504],
[408,341,373,324,340,0,339,453],
[479,518,440,457,486,551,0,510],
[378,424,396,426,386,437,380,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,459,400,471,458,440,417],
[482,0,505,456,525,488,534,443],
[431,385,0,422,487,406,438,450],
[490,434,468,0,495,438,452,428],
[419,365,403,395,0,370,428,375],
[432,402,484,452,520,0,464,367],
[450,356,452,438,462,426,0,371],
[473,447,440,462,515,523,519,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,467,441,452,437,434,450],
[422,0,432,419,426,428,407,418],
[423,458,0,445,440,449,454,445],
[449,471,445,0,447,445,443,440],
[438,464,450,443,0,451,444,437],
[453,462,441,445,439,0,450,460],
[456,483,436,447,446,440,0,450],
[440,472,445,450,453,430,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,428,436,453,439,453,440],
[456,0,457,472,427,449,440,458],
[462,433,0,448,406,409,410,432],
[454,418,442,0,427,401,443,436],
[437,463,484,463,0,448,471,466],
[451,441,481,489,442,0,463,478],
[437,450,480,447,419,427,0,441],
[450,432,458,454,424,412,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,443,426,459,438,455,461],
[422,0,458,451,450,465,440,406],
[447,432,0,446,406,438,420,414],
[464,439,444,0,429,447,443,464],
[431,440,484,461,0,438,470,457],
[452,425,452,443,452,0,435,427],
[435,450,470,447,420,455,0,435],
[429,484,476,426,433,463,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,481,501,472,487,446,350],
[496,0,521,440,455,523,451,450],
[409,369,0,416,417,471,460,368],
[389,450,474,0,445,494,470,380],
[418,435,473,445,0,542,538,414],
[403,367,419,396,348,0,445,347],
[444,439,430,420,352,445,0,386],
[540,440,522,510,476,543,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,489,467,428,466,458,477],
[431,0,351,358,427,380,466,432],
[401,539,0,386,481,434,424,355],
[423,532,504,0,415,491,492,427],
[462,463,409,475,0,497,467,429],
[424,510,456,399,393,0,423,416],
[432,424,466,398,423,467,0,424],
[413,458,535,463,461,474,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,470,452,441,456,448,441],
[432,0,458,428,451,430,422,408],
[420,432,0,438,449,433,414,404],
[438,462,452,0,455,448,439,421],
[449,439,441,435,0,454,464,448],
[434,460,457,442,436,0,450,444],
[442,468,476,451,426,440,0,433],
[449,482,486,469,442,446,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,460,439,455,433,431,455],
[447,0,458,435,435,428,449,446],
[430,432,0,439,447,449,459,452],
[451,455,451,0,450,436,455,455],
[435,455,443,440,0,432,435,417],
[457,462,441,454,458,0,470,437],
[459,441,431,435,455,420,0,465],
[435,444,438,435,473,453,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,442,494,465,466,450,444],
[436,0,437,495,452,401,430,473],
[448,453,0,474,478,422,442,439],
[396,395,416,0,442,405,390,426],
[425,438,412,448,0,393,429,423],
[424,489,468,485,497,0,447,482],
[440,460,448,500,461,443,0,494],
[446,417,451,464,467,408,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,437,450,426,451,443,465],
[424,0,439,446,408,440,447,436],
[453,451,0,453,445,460,474,459],
[440,444,437,0,414,440,467,439],
[464,482,445,476,0,466,473,474],
[439,450,430,450,424,0,449,443],
[447,443,416,423,417,441,0,435],
[425,454,431,451,416,447,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,464,424,453,406,412,426],
[445,0,445,463,444,431,445,452],
[426,445,0,454,426,455,433,441],
[466,427,436,0,433,410,425,393],
[437,446,464,457,0,466,424,444],
[484,459,435,480,424,0,430,476],
[478,445,457,465,466,460,0,445],
[464,438,449,497,446,414,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,453,452,446,405,428,445],
[396,0,467,416,420,407,433,398],
[437,423,0,437,436,425,428,420],
[438,474,453,0,442,440,445,438],
[444,470,454,448,0,429,433,431],
[485,483,465,450,461,0,425,453],
[462,457,462,445,457,465,0,461],
[445,492,470,452,459,437,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,441,428,451,465,466],
[449,0,437,445,448,462,467,448],
[447,453,0,438,429,443,481,474],
[449,445,452,0,440,459,491,449],
[462,442,461,450,0,459,496,458],
[439,428,447,431,431,0,479,440],
[425,423,409,399,394,411,0,431],
[424,442,416,441,432,450,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,454,465,460,467,436,470],
[436,0,408,447,436,424,429,444],
[436,482,0,468,455,453,447,474],
[425,443,422,0,448,440,426,465],
[430,454,435,442,0,456,423,462],
[423,466,437,450,434,0,431,457],
[454,461,443,464,467,459,0,445],
[420,446,416,425,428,433,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,439,448,474,398,393,381],
[463,0,456,459,484,463,423,450],
[451,434,0,458,434,379,408,429],
[442,431,432,0,467,393,477,468],
[416,406,456,423,0,377,389,421],
[492,427,511,497,513,0,447,484],
[497,467,482,413,501,443,0,418],
[509,440,461,422,469,406,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,443,446,450,447,459,433],
[459,0,461,470,444,444,478,438],
[447,429,0,453,453,436,461,418],
[444,420,437,0,438,431,450,410],
[440,446,437,452,0,410,457,419],
[443,446,454,459,480,0,477,447],
[431,412,429,440,433,413,0,414],
[457,452,472,480,471,443,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,472,447,428,443,452,427],
[477,0,465,470,447,444,463,468],
[418,425,0,443,417,427,426,432],
[443,420,447,0,419,443,450,445],
[462,443,473,471,0,449,456,451],
[447,446,463,447,441,0,437,438],
[438,427,464,440,434,453,0,437],
[463,422,458,445,439,452,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,422,450,442,454,427,419],
[456,0,440,469,472,452,433,449],
[468,450,0,465,469,461,437,429],
[440,421,425,0,436,442,436,428],
[448,418,421,454,0,414,438,390],
[436,438,429,448,476,0,436,434],
[463,457,453,454,452,454,0,443],
[471,441,461,462,500,456,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,389,397,437,425,404,418],
[449,0,456,427,422,438,411,441],
[501,434,0,438,449,437,424,453],
[493,463,452,0,474,463,456,411],
[453,468,441,416,0,453,410,415],
[465,452,453,427,437,0,426,413],
[486,479,466,434,480,464,0,438],
[472,449,437,479,475,477,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,375,409,367,436,381,419,390],
[515,0,474,400,413,411,469,435],
[481,416,0,418,435,407,462,486],
[523,490,472,0,509,475,445,475],
[454,477,455,381,0,431,384,478],
[509,479,483,415,459,0,465,488],
[471,421,428,445,506,425,0,431],
[500,455,404,415,412,402,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,496,464,481,458,436,444],
[434,0,524,494,424,499,453,442],
[394,366,0,417,443,391,433,421],
[426,396,473,0,431,461,425,446],
[409,466,447,459,0,473,473,466],
[432,391,499,429,417,0,480,419],
[454,437,457,465,417,410,0,437],
[446,448,469,444,424,471,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,427,518,514,462,444,497],
[454,0,461,487,552,498,494,433],
[463,429,0,449,462,495,399,448],
[372,403,441,0,453,386,419,471],
[376,338,428,437,0,390,384,407],
[428,392,395,504,500,0,476,529],
[446,396,491,471,506,414,0,474],
[393,457,442,419,483,361,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,468,467,483,457,447,437],
[426,0,471,460,457,441,445,431],
[422,419,0,423,426,429,429,413],
[423,430,467,0,460,455,466,448],
[407,433,464,430,0,458,446,392],
[433,449,461,435,432,0,433,424],
[443,445,461,424,444,457,0,428],
[453,459,477,442,498,466,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,448,433,444,434,428,435],
[455,0,459,459,452,420,437,436],
[442,431,0,457,442,438,459,439],
[457,431,433,0,451,429,423,421],
[446,438,448,439,0,426,433,450],
[456,470,452,461,464,0,444,460],
[462,453,431,467,457,446,0,456],
[455,454,451,469,440,430,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,446,429,421,437,408,452],
[457,0,439,430,444,440,421,472],
[444,451,0,409,454,439,435,479],
[461,460,481,0,442,458,427,496],
[469,446,436,448,0,467,421,496],
[453,450,451,432,423,0,445,452],
[482,469,455,463,469,445,0,460],
[438,418,411,394,394,438,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,431,436,439,426,432,439],
[445,0,436,437,428,424,409,441],
[459,454,0,442,450,449,448,462],
[454,453,448,0,444,443,440,447],
[451,462,440,446,0,455,449,451],
[464,466,441,447,435,0,429,461],
[458,481,442,450,441,461,0,453],
[451,449,428,443,439,429,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,475,458,452,454,441,467],
[444,0,430,427,425,425,440,440],
[415,460,0,463,439,466,463,470],
[432,463,427,0,431,420,435,474],
[438,465,451,459,0,434,447,461],
[436,465,424,470,456,0,438,512],
[449,450,427,455,443,452,0,445],
[423,450,420,416,429,378,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,444,462,462,460,394,422],
[475,0,480,482,467,472,460,436],
[446,410,0,444,486,447,422,425],
[428,408,446,0,455,432,407,432],
[428,423,404,435,0,401,394,426],
[430,418,443,458,489,0,408,430],
[496,430,468,483,496,482,0,479],
[468,454,465,458,464,460,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,459,463,408,446,423,435],
[446,0,445,457,454,480,421,439],
[431,445,0,480,450,437,431,461],
[427,433,410,0,391,422,398,444],
[482,436,440,499,0,458,445,439],
[444,410,453,468,432,0,444,439],
[467,469,459,492,445,446,0,460],
[455,451,429,446,451,451,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,437,443,453,416,419,392],
[438,0,458,414,442,430,416,416],
[453,432,0,463,432,416,427,446],
[447,476,427,0,461,427,428,441],
[437,448,458,429,0,410,435,451],
[474,460,474,463,480,0,472,441],
[471,474,463,462,455,418,0,465],
[498,474,444,449,439,449,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,466,417,433,417,429,440],
[455,0,444,439,454,461,436,439],
[424,446,0,426,450,464,448,439],
[473,451,464,0,472,452,438,439],
[457,436,440,418,0,446,426,422],
[473,429,426,438,444,0,444,430],
[461,454,442,452,464,446,0,445],
[450,451,451,451,468,460,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,433,434,467,451,420,435],
[427,0,418,425,442,439,432,438],
[457,472,0,443,435,459,441,439],
[456,465,447,0,436,454,462,475],
[423,448,455,454,0,429,465,455],
[439,451,431,436,461,0,469,495],
[470,458,449,428,425,421,0,467],
[455,452,451,415,435,395,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,386,432,393,427,422,422],
[449,0,400,432,418,452,458,412],
[504,490,0,439,449,439,472,458],
[458,458,451,0,426,445,456,424],
[497,472,441,464,0,483,460,475],
[463,438,451,445,407,0,436,448],
[468,432,418,434,430,454,0,441],
[468,478,432,466,415,442,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,458,432,428,437,442,415],
[470,0,473,433,442,458,456,476],
[432,417,0,443,449,432,426,445],
[458,457,447,0,441,463,454,461],
[462,448,441,449,0,435,429,445],
[453,432,458,427,455,0,450,451],
[448,434,464,436,461,440,0,459],
[475,414,445,429,445,439,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,448,406,428,428,438,436],
[471,0,453,454,438,433,427,455],
[442,437,0,468,443,451,446,450],
[484,436,422,0,449,417,440,427],
[462,452,447,441,0,453,450,464],
[462,457,439,473,437,0,462,448],
[452,463,444,450,440,428,0,416],
[454,435,440,463,426,442,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,489,575,362,468,386,446],
[464,0,429,624,422,456,477,365],
[401,461,0,572,442,481,387,432],
[315,266,318,0,282,476,306,314],
[528,468,448,608,0,693,444,499],
[422,434,409,414,197,0,315,421],
[504,413,503,584,446,575,0,562],
[444,525,458,576,391,469,328,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,438,443,448,461,444,431],
[452,0,445,464,474,469,454,432],
[452,445,0,446,462,443,446,455],
[447,426,444,0,443,454,435,423],
[442,416,428,447,0,434,416,423],
[429,421,447,436,456,0,431,413],
[446,436,444,455,474,459,0,440],
[459,458,435,467,467,477,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,441,444,470,469,454,446],
[442,0,402,447,438,438,439,406],
[449,488,0,469,450,456,453,429],
[446,443,421,0,444,447,426,430],
[420,452,440,446,0,464,438,447],
[421,452,434,443,426,0,426,420],
[436,451,437,464,452,464,0,444],
[444,484,461,460,443,470,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,412,463,460,466,400,419],
[448,0,431,453,428,456,452,457],
[478,459,0,441,419,461,456,452],
[427,437,449,0,445,460,421,419],
[430,462,471,445,0,445,423,441],
[424,434,429,430,445,0,426,436],
[490,438,434,469,467,464,0,415],
[471,433,438,471,449,454,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,344,302,367,353,370,386,354],
[546,0,449,379,563,404,534,520],
[588,441,0,421,492,511,442,540],
[523,511,469,0,496,397,391,475],
[537,327,398,394,0,329,343,364],
[520,486,379,493,561,0,444,518],
[504,356,448,499,547,446,0,499],
[536,370,350,415,526,372,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,421,423,393,378,423,457],
[482,0,437,446,406,434,422,487],
[469,453,0,471,435,426,458,450],
[467,444,419,0,393,397,466,459],
[497,484,455,497,0,442,457,481],
[512,456,464,493,448,0,432,479],
[467,468,432,424,433,458,0,459],
[433,403,440,431,409,411,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,435,449,435,447,449,455],
[443,0,449,461,445,445,457,461],
[455,441,0,443,431,441,456,444],
[441,429,447,0,433,433,442,442],
[455,445,459,457,0,446,449,462],
[443,445,449,457,444,0,448,445],
[441,433,434,448,441,442,0,451],
[435,429,446,448,428,445,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,434,447,442,440,405,531],
[416,0,447,394,482,438,431,461],
[456,443,0,441,471,429,431,566],
[443,496,449,0,494,484,509,574],
[448,408,419,396,0,477,475,572],
[450,452,461,406,413,0,441,473],
[485,459,459,381,415,449,0,492],
[359,429,324,316,318,417,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,501,459,450,460,440,461],
[471,0,491,427,447,475,461,442],
[389,399,0,426,445,417,463,435],
[431,463,464,0,500,481,471,490],
[440,443,445,390,0,448,453,426],
[430,415,473,409,442,0,433,433],
[450,429,427,419,437,457,0,448],
[429,448,455,400,464,457,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,455,484,438,487,463,470],
[454,0,467,457,447,447,422,467],
[435,423,0,478,417,491,433,450],
[406,433,412,0,432,465,437,446],
[452,443,473,458,0,497,436,456],
[403,443,399,425,393,0,407,417],
[427,468,457,453,454,483,0,483],
[420,423,440,444,434,473,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,584,619,385,579,779,495,566],
[306,0,580,296,336,493,330,610],
[271,310,0,237,206,360,200,206],
[505,594,653,0,453,653,369,440],
[311,554,684,437,0,558,422,619],
[111,397,530,237,332,0,326,606],
[395,560,690,521,468,564,0,631],
[324,280,684,450,271,284,259,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,426,468,416,438,461,419],
[449,0,446,478,471,474,469,441],
[464,444,0,455,422,472,457,430],
[422,412,435,0,405,462,430,393],
[474,419,468,485,0,478,466,458],
[452,416,418,428,412,0,438,399],
[429,421,433,460,424,452,0,420],
[471,449,460,497,432,491,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,486,512,461,440,467,463],
[461,0,472,474,476,420,500,463],
[404,418,0,459,449,457,457,451],
[378,416,431,0,454,397,413,431],
[429,414,441,436,0,397,474,437],
[450,470,433,493,493,0,467,479],
[423,390,433,477,416,423,0,412],
[427,427,439,459,453,411,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,448,458,440,445,485,456],
[433,0,423,438,425,434,452,446],
[442,467,0,479,450,431,467,456],
[432,452,411,0,437,422,452,426],
[450,465,440,453,0,435,486,465],
[445,456,459,468,455,0,480,458],
[405,438,423,438,404,410,0,426],
[434,444,434,464,425,432,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,406,435,437,434,380,457],
[444,0,460,458,455,408,366,514],
[484,430,0,462,425,401,433,487],
[455,432,428,0,480,370,447,509],
[453,435,465,410,0,471,378,449],
[456,482,489,520,419,0,454,539],
[510,524,457,443,512,436,0,506],
[433,376,403,381,441,351,384,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,443,429,485,473,474,431],
[469,0,443,440,452,473,474,450],
[447,447,0,417,449,449,453,440],
[461,450,473,0,460,491,467,444],
[405,438,441,430,0,435,452,408],
[417,417,441,399,455,0,404,394],
[416,416,437,423,438,486,0,402],
[459,440,450,446,482,496,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,447,449,418,433,419,479],
[497,0,448,517,487,474,368,482],
[443,442,0,531,548,394,435,475],
[441,373,359,0,529,364,320,398],
[472,403,342,361,0,427,280,421],
[457,416,496,526,463,0,429,435],
[471,522,455,570,610,461,0,420],
[411,408,415,492,469,455,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,442,445,441,430,448,443],
[456,0,451,470,443,442,459,475],
[448,439,0,468,450,455,449,458],
[445,420,422,0,435,437,435,436],
[449,447,440,455,0,432,439,452],
[460,448,435,453,458,0,456,462],
[442,431,441,455,451,434,0,427],
[447,415,432,454,438,428,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,466,432,449,421,426,428],
[451,0,485,464,465,459,467,424],
[424,405,0,434,430,434,454,395],
[458,426,456,0,414,444,463,458],
[441,425,460,476,0,421,449,434],
[469,431,456,446,469,0,469,429],
[464,423,436,427,441,421,0,428],
[462,466,495,432,456,461,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,434,478,494,454,493,486],
[433,0,463,492,467,456,487,502],
[456,427,0,464,458,467,501,516],
[412,398,426,0,451,463,462,474],
[396,423,432,439,0,419,442,455],
[436,434,423,427,471,0,492,479],
[397,403,389,428,448,398,0,460],
[404,388,374,416,435,411,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,506,450,470,439,457,454,454],
[384,0,409,450,414,458,422,435],
[440,481,0,457,459,458,432,418],
[420,440,433,0,425,432,427,442],
[451,476,431,465,0,441,433,471],
[433,432,432,458,449,0,426,410],
[436,468,458,463,457,464,0,444],
[436,455,472,448,419,480,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,450,447,468,435,458,468],
[443,0,445,426,454,427,445,464],
[440,445,0,458,452,439,461,459],
[443,464,432,0,473,447,457,455],
[422,436,438,417,0,426,448,437],
[455,463,451,443,464,0,478,460],
[432,445,429,433,442,412,0,448],
[422,426,431,435,453,430,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,475,444,472,465,446,461],
[420,0,425,431,454,423,407,424],
[415,465,0,426,469,428,449,459],
[446,459,464,0,468,440,435,452],
[418,436,421,422,0,445,440,421],
[425,467,462,450,445,0,439,444],
[444,483,441,455,450,451,0,463],
[429,466,431,438,469,446,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,457,447,467,449,451,445],
[450,0,470,435,487,455,452,448],
[433,420,0,448,445,451,450,447],
[443,455,442,0,465,468,456,450],
[423,403,445,425,0,439,420,420],
[441,435,439,422,451,0,444,435],
[439,438,440,434,470,446,0,454],
[445,442,443,440,470,455,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,425,444,425,453,441,433],
[493,0,430,477,448,445,456,463],
[465,460,0,478,462,472,439,471],
[446,413,412,0,430,403,447,434],
[465,442,428,460,0,428,426,463],
[437,445,418,487,462,0,463,472],
[449,434,451,443,464,427,0,463],
[457,427,419,456,427,418,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,458,454,451,414,434,488],
[418,0,444,447,424,442,421,452],
[432,446,0,453,422,430,435,449],
[436,443,437,0,426,431,431,437],
[439,466,468,464,0,451,450,482],
[476,448,460,459,439,0,440,464],
[456,469,455,459,440,450,0,476],
[402,438,441,453,408,426,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,311,338,413,356,324,352],
[386,0,365,405,429,405,336,361],
[579,525,0,481,512,525,461,424],
[552,485,409,0,535,453,414,404],
[477,461,378,355,0,452,445,417],
[534,485,365,437,438,0,438,446],
[566,554,429,476,445,452,0,431],
[538,529,466,486,473,444,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,442,499,468,480,459,451],
[422,0,468,477,442,437,419,447],
[448,422,0,484,437,437,431,444],
[391,413,406,0,402,401,402,436],
[422,448,453,488,0,469,462,442],
[410,453,453,489,421,0,442,451],
[431,471,459,488,428,448,0,437],
[439,443,446,454,448,439,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,381,416,393,469,340,409,396],
[509,0,374,360,431,308,401,385],
[474,516,0,540,464,379,497,466],
[497,530,350,0,349,447,461,536],
[421,459,426,541,0,439,482,538],
[550,582,511,443,451,0,428,494],
[481,489,393,429,408,462,0,487],
[494,505,424,354,352,396,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,474,434,435,448,433,444],
[433,0,456,428,431,422,435,419],
[416,434,0,410,441,437,425,434],
[456,462,480,0,435,461,462,447],
[455,459,449,455,0,426,468,434],
[442,468,453,429,464,0,473,428],
[457,455,465,428,422,417,0,440],
[446,471,456,443,456,462,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,328,470,325,389,383,365,409],
[562,0,523,462,438,472,497,546],
[420,367,0,362,385,313,407,428],
[565,428,528,0,423,452,481,503],
[501,452,505,467,0,431,482,552],
[507,418,577,438,459,0,453,518],
[525,393,483,409,408,437,0,542],
[481,344,462,387,338,372,348,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,439,419,452,429,429,440],
[432,0,426,427,432,432,426,432],
[451,464,0,430,420,413,438,428],
[471,463,460,0,453,449,447,440],
[438,458,470,437,0,446,459,445],
[461,458,477,441,444,0,455,479],
[461,464,452,443,431,435,0,456],
[450,458,462,450,445,411,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,452,457,435,438,452,434],
[455,0,437,470,455,472,468,450],
[438,453,0,439,453,454,450,433],
[433,420,451,0,436,438,434,419],
[455,435,437,454,0,449,454,425],
[452,418,436,452,441,0,447,438],
[438,422,440,456,436,443,0,415],
[456,440,457,471,465,452,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,441,435,460,442,464,439],
[445,0,466,437,455,462,466,455],
[449,424,0,426,452,455,458,470],
[455,453,464,0,436,455,470,464],
[430,435,438,454,0,438,456,452],
[448,428,435,435,452,0,473,441],
[426,424,432,420,434,417,0,431],
[451,435,420,426,438,449,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,430,450,444,452,447,468],
[449,0,437,436,466,458,443,446],
[460,453,0,465,458,447,422,461],
[440,454,425,0,436,439,432,436],
[446,424,432,454,0,455,439,477],
[438,432,443,451,435,0,417,459],
[443,447,468,458,451,473,0,475],
[422,444,429,454,413,431,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,454,435,452,494,459,477],
[422,0,458,440,448,477,440,443],
[436,432,0,423,430,479,469,443],
[455,450,467,0,447,460,440,469],
[438,442,460,443,0,471,450,457],
[396,413,411,430,419,0,420,443],
[431,450,421,450,440,470,0,447],
[413,447,447,421,433,447,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,434,439,461,449,456,453],
[431,0,407,427,427,434,423,448],
[456,483,0,469,471,439,471,452],
[451,463,421,0,462,457,460,457],
[429,463,419,428,0,452,452,430],
[441,456,451,433,438,0,452,446],
[434,467,419,430,438,438,0,439],
[437,442,438,433,460,444,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,475,432,456,489,452,440],
[435,0,425,481,427,475,450,438],
[415,465,0,465,444,504,481,446],
[458,409,425,0,432,463,398,389],
[434,463,446,458,0,506,475,435],
[401,415,386,427,384,0,402,406],
[438,440,409,492,415,488,0,411],
[450,452,444,501,455,484,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,441,460,446,430,440,469],
[457,0,439,460,463,461,471,478],
[449,451,0,480,423,453,490,459],
[430,430,410,0,408,410,429,437],
[444,427,467,482,0,434,497,481],
[460,429,437,480,456,0,447,444],
[450,419,400,461,393,443,0,435],
[421,412,431,453,409,446,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,432,404,431,429,414,411],
[443,0,456,420,462,440,410,461],
[458,434,0,410,452,438,408,429],
[486,470,480,0,469,453,443,435],
[459,428,438,421,0,433,428,425],
[461,450,452,437,457,0,445,445],
[476,480,482,447,462,445,0,487],
[479,429,461,455,465,445,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,420,440,425,419,443,434],
[470,0,443,442,450,424,452,441],
[470,447,0,455,429,431,468,456],
[450,448,435,0,458,427,453,438],
[465,440,461,432,0,448,444,446],
[471,466,459,463,442,0,467,453],
[447,438,422,437,446,423,0,449],
[456,449,434,452,444,437,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,455,457,423,427,465,436],
[428,0,426,433,434,456,452,458],
[435,464,0,440,423,408,451,442],
[433,457,450,0,425,420,428,439],
[467,456,467,465,0,415,461,460],
[463,434,482,470,475,0,406,436],
[425,438,439,462,429,484,0,452],
[454,432,448,451,430,454,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,467,526,456,451,479,501],
[445,0,453,485,425,420,482,493],
[423,437,0,507,437,454,481,474],
[364,405,383,0,390,375,438,430],
[434,465,453,500,0,439,449,522],
[439,470,436,515,451,0,469,499],
[411,408,409,452,441,421,0,487],
[389,397,416,460,368,391,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,476,437,450,491,443,465],
[383,0,368,362,306,391,324,423],
[414,522,0,452,464,465,442,553],
[453,528,438,0,459,485,474,531],
[440,584,426,431,0,433,475,487],
[399,499,425,405,457,0,437,454],
[447,566,448,416,415,453,0,460],
[425,467,337,359,403,436,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,426,507,443,434,463,438],
[449,0,426,520,425,413,453,426],
[464,464,0,501,463,436,418,479],
[383,370,389,0,406,396,430,438],
[447,465,427,484,0,439,450,421],
[456,477,454,494,451,0,426,453],
[427,437,472,460,440,464,0,494],
[452,464,411,452,469,437,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,427,445,422,445,430,445],
[433,0,456,439,455,447,451,443],
[463,434,0,453,450,457,455,448],
[445,451,437,0,432,424,441,433],
[468,435,440,458,0,456,458,442],
[445,443,433,466,434,0,460,450],
[460,439,435,449,432,430,0,449],
[445,447,442,457,448,440,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,431,428,455,443,440,437],
[453,0,452,437,442,420,418,439],
[459,438,0,439,464,452,425,458],
[462,453,451,0,461,445,442,457],
[435,448,426,429,0,442,435,434],
[447,470,438,445,448,0,432,445],
[450,472,465,448,455,458,0,444],
[453,451,432,433,456,445,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,436,440,452,429,456,450],
[438,0,461,438,460,438,456,454],
[454,429,0,433,446,426,446,426],
[450,452,457,0,442,459,450,449],
[438,430,444,448,0,432,472,412],
[461,452,464,431,458,0,468,431],
[434,434,444,440,418,422,0,437],
[440,436,464,441,478,459,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,413,266,225,407,307,483],
[486,0,534,472,405,315,399,544],
[477,356,0,426,392,378,556,510],
[624,418,464,0,618,460,414,487],
[665,485,498,272,0,494,455,645],
[483,575,512,430,396,0,363,531],
[583,491,334,476,435,527,0,560],
[407,346,380,403,245,359,330,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,497,427,403,479,460,387],
[423,0,415,406,432,475,416,442],
[393,475,0,393,447,441,372,428],
[463,484,497,0,442,461,457,448],
[487,458,443,448,0,515,443,458],
[411,415,449,429,375,0,472,386],
[430,474,518,433,447,418,0,405],
[503,448,462,442,432,504,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,475,467,475,459,433,417],
[442,0,496,480,481,467,500,452],
[415,394,0,442,438,441,460,381],
[423,410,448,0,452,423,452,392],
[415,409,452,438,0,444,466,408],
[431,423,449,467,446,0,478,413],
[457,390,430,438,424,412,0,380],
[473,438,509,498,482,477,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,576,531,481,533,636,540,445],
[314,0,411,342,413,375,420,402],
[359,479,0,372,412,483,389,269],
[409,548,518,0,435,602,529,511],
[357,477,478,455,0,489,473,389],
[254,515,407,288,401,0,439,276],
[350,470,501,361,417,451,0,392],
[445,488,621,379,501,614,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,429,445,443,435,416,472],
[445,0,421,464,439,445,435,476],
[461,469,0,437,452,462,448,463],
[445,426,453,0,436,441,399,449],
[447,451,438,454,0,464,445,466],
[455,445,428,449,426,0,429,483],
[474,455,442,491,445,461,0,488],
[418,414,427,441,424,407,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,369,371,398,370,378,392,402],
[521,0,405,439,433,428,469,460],
[519,485,0,512,469,437,443,454],
[492,451,378,0,424,384,405,443],
[520,457,421,466,0,426,458,427],
[512,462,453,506,464,0,445,492],
[498,421,447,485,432,445,0,475],
[488,430,436,447,463,398,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,537,445,424,462,476,516,476],
[353,0,370,322,403,350,440,473],
[445,520,0,521,364,573,412,440],
[466,568,369,0,376,417,542,430],
[428,487,526,514,0,514,557,551],
[414,540,317,473,376,0,447,421],
[374,450,478,348,333,443,0,428],
[414,417,450,460,339,469,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,360,450,404,409,424,411],
[517,0,439,370,472,444,400,447],
[530,451,0,410,487,500,457,483],
[440,520,480,0,466,499,424,475],
[486,418,403,424,0,434,438,497],
[481,446,390,391,456,0,407,443],
[466,490,433,466,452,483,0,464],
[479,443,407,415,393,447,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,455,462,437,439,457,442],
[437,0,439,437,434,435,429,430],
[435,451,0,435,440,436,450,454],
[428,453,455,0,448,448,447,429],
[453,456,450,442,0,451,444,441],
[451,455,454,442,439,0,450,448],
[433,461,440,443,446,440,0,438],
[448,460,436,461,449,442,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,415,435,432,445,437,461],
[457,0,457,449,453,477,438,452],
[475,433,0,471,471,465,466,443],
[455,441,419,0,422,470,443,466],
[458,437,419,468,0,457,448,443],
[445,413,425,420,433,0,413,439],
[453,452,424,447,442,477,0,463],
[429,438,447,424,447,451,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,434,472,431,423,432,430],
[442,0,426,467,442,432,458,441],
[456,464,0,471,458,454,443,458],
[418,423,419,0,427,416,430,405],
[459,448,432,463,0,444,437,439],
[467,458,436,474,446,0,457,435],
[458,432,447,460,453,433,0,444],
[460,449,432,485,451,455,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,461,466,486,459,446,474],
[450,0,431,446,446,446,444,448],
[429,459,0,461,462,457,444,465],
[424,444,429,0,441,430,430,452],
[404,444,428,449,0,429,424,439],
[431,444,433,460,461,0,433,449],
[444,446,446,460,466,457,0,469],
[416,442,425,438,451,441,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,456,468,439,435,449,436],
[445,0,458,479,453,474,444,450],
[434,432,0,456,427,427,442,427],
[422,411,434,0,417,426,421,422],
[451,437,463,473,0,449,447,462],
[455,416,463,464,441,0,451,448],
[441,446,448,469,443,439,0,422],
[454,440,463,468,428,442,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,426,462,456,451,455,461],
[424,0,437,423,435,447,436,444],
[464,453,0,444,468,462,462,468],
[428,467,446,0,455,471,435,468],
[434,455,422,435,0,455,442,455],
[439,443,428,419,435,0,439,465],
[435,454,428,455,448,451,0,471],
[429,446,422,422,435,425,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,397,441,318,430,389,406],
[479,0,442,506,425,435,437,480],
[493,448,0,438,437,411,450,495],
[449,384,452,0,396,501,404,467],
[572,465,453,494,0,438,402,489],
[460,455,479,389,452,0,454,483],
[501,453,440,486,488,436,0,453],
[484,410,395,423,401,407,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,473,470,481,448,491,435],
[428,0,451,443,404,416,442,422],
[417,439,0,437,411,409,426,396],
[420,447,453,0,461,379,435,406],
[409,486,479,429,0,396,437,405],
[442,474,481,511,494,0,471,456],
[399,448,464,455,453,419,0,392],
[455,468,494,484,485,434,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,428,445,399,488,436,443],
[449,0,480,470,490,491,496,408],
[462,410,0,399,455,482,471,471],
[445,420,491,0,434,490,461,454],
[491,400,435,456,0,481,412,469],
[402,399,408,400,409,0,401,415],
[454,394,419,429,478,489,0,481],
[447,482,419,436,421,475,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,413,434,422,421,444,415],
[433,0,446,445,459,444,492,435],
[477,444,0,412,455,445,475,426],
[456,445,478,0,437,449,452,467],
[468,431,435,453,0,436,478,446],
[469,446,445,441,454,0,493,457],
[446,398,415,438,412,397,0,450],
[475,455,464,423,444,433,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,454,441,436,454,447,444],
[449,0,457,457,453,451,458,440],
[436,433,0,468,431,468,460,440],
[449,433,422,0,423,439,456,442],
[454,437,459,467,0,452,466,453],
[436,439,422,451,438,0,428,434],
[443,432,430,434,424,462,0,453],
[446,450,450,448,437,456,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,426,442,449,425,418,426],
[480,0,471,461,474,445,450,463],
[464,419,0,439,458,423,439,450],
[448,429,451,0,452,446,436,433],
[441,416,432,438,0,423,415,422],
[465,445,467,444,467,0,430,439],
[472,440,451,454,475,460,0,458],
[464,427,440,457,468,451,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,446,421,390,449,409,444],
[491,0,479,440,449,481,481,435],
[444,411,0,430,407,448,412,454],
[469,450,460,0,433,475,405,464],
[500,441,483,457,0,493,480,470],
[441,409,442,415,397,0,450,433],
[481,409,478,485,410,440,0,433],
[446,455,436,426,420,457,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,419,447,436,414,420,424],
[433,0,416,425,393,378,412,414],
[471,474,0,462,448,422,413,399],
[443,465,428,0,438,405,428,402],
[454,497,442,452,0,437,445,472],
[476,512,468,485,453,0,433,455],
[470,478,477,462,445,457,0,474],
[466,476,491,488,418,435,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,448,459,445,425,451,449],
[435,0,417,444,439,428,424,435],
[442,473,0,454,445,437,435,443],
[431,446,436,0,432,442,409,450],
[445,451,445,458,0,441,431,450],
[465,462,453,448,449,0,432,449],
[439,466,455,481,459,458,0,444],
[441,455,447,440,440,441,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,423,437,430,455,437,430],
[474,0,436,447,441,444,441,432],
[467,454,0,441,464,475,464,446],
[453,443,449,0,472,476,450,425],
[460,449,426,418,0,449,413,440],
[435,446,415,414,441,0,413,426],
[453,449,426,440,477,477,0,461],
[460,458,444,465,450,464,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,438,456,444,466,447,454],
[443,0,453,462,461,472,468,496],
[452,437,0,486,505,473,486,509],
[434,428,404,0,425,417,434,445],
[446,429,385,465,0,455,440,455],
[424,418,417,473,435,0,440,445],
[443,422,404,456,450,450,0,437],
[436,394,381,445,435,445,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,480,752,312,584,584,217],
[841,0,431,703,431,703,703,431],
[410,459,0,752,535,584,535,489],
[138,187,138,0,401,450,401,187],
[578,459,355,489,0,627,752,355],
[306,187,306,440,263,0,535,168],
[306,187,355,489,138,355,0,355],
[673,459,401,703,535,722,535,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,447,419,443,438,447,465],
[442,0,444,425,469,422,439,458],
[443,446,0,432,457,427,458,479],
[471,465,458,0,455,427,463,435],
[447,421,433,435,0,436,443,455],
[452,468,463,463,454,0,452,443],
[443,451,432,427,447,438,0,449],
[425,432,411,455,435,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,453,457,461,420,436,448],
[481,0,481,451,519,470,395,449],
[437,409,0,450,443,413,444,419],
[433,439,440,0,504,420,444,386],
[429,371,447,386,0,421,433,394],
[470,420,477,470,469,0,447,442],
[454,495,446,446,457,443,0,422],
[442,441,471,504,496,448,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,479,451,452,454,466,473],
[452,0,487,453,453,444,461,495],
[411,403,0,435,398,418,448,472],
[439,437,455,0,459,444,459,470],
[438,437,492,431,0,430,469,480],
[436,446,472,446,460,0,466,468],
[424,429,442,431,421,424,0,458],
[417,395,418,420,410,422,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,456,445,444,422,427,434],
[446,0,421,425,445,422,430,427],
[434,469,0,447,443,417,429,434],
[445,465,443,0,455,450,445,449],
[446,445,447,435,0,429,439,450],
[468,468,473,440,461,0,431,455],
[463,460,461,445,451,459,0,448],
[456,463,456,441,440,435,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,449,468,437,471,446,435],
[432,0,431,461,409,452,462,429],
[441,459,0,471,452,449,485,449],
[422,429,419,0,446,446,436,446],
[453,481,438,444,0,461,481,431],
[419,438,441,444,429,0,450,427],
[444,428,405,454,409,440,0,424],
[455,461,441,444,459,463,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,408,442,415,431,440,406],
[443,0,411,459,414,447,439,380],
[482,479,0,483,444,473,468,424],
[448,431,407,0,404,429,432,400],
[475,476,446,486,0,421,468,445],
[459,443,417,461,469,0,461,428],
[450,451,422,458,422,429,0,392],
[484,510,466,490,445,462,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,447,457,451,441,455,438],
[430,0,411,442,433,426,453,443],
[443,479,0,446,479,429,447,450],
[433,448,444,0,439,418,440,448],
[439,457,411,451,0,428,436,435],
[449,464,461,472,462,0,446,439],
[435,437,443,450,454,444,0,458],
[452,447,440,442,455,451,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,443,427,456,453,445,454],
[439,0,461,443,433,434,439,419],
[447,429,0,438,446,471,440,418],
[463,447,452,0,463,474,440,429],
[434,457,444,427,0,444,452,438],
[437,456,419,416,446,0,413,411],
[445,451,450,450,438,477,0,447],
[436,471,472,461,452,479,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,433,435,448,406,415,447],
[422,0,423,431,435,430,434,433],
[457,467,0,467,441,457,437,463],
[455,459,423,0,458,422,455,467],
[442,455,449,432,0,445,452,442],
[484,460,433,468,445,0,437,467],
[475,456,453,435,438,453,0,459],
[443,457,427,423,448,423,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,330,447,512,475,410,465],
[446,0,372,415,426,445,425,394],
[560,518,0,445,536,504,467,471],
[443,475,445,0,470,470,457,444],
[378,464,354,420,0,445,431,414],
[415,445,386,420,445,0,424,421],
[480,465,423,433,459,466,0,425],
[425,496,419,446,476,469,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,422,424,434,409,404,408],
[465,0,432,447,459,422,428,446],
[468,458,0,440,461,456,463,430],
[466,443,450,0,443,446,445,438],
[456,431,429,447,0,425,445,433],
[481,468,434,444,465,0,464,478],
[486,462,427,445,445,426,0,447],
[482,444,460,452,457,412,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,496,473,490,481,477,438],
[413,0,444,443,465,425,465,418],
[394,446,0,420,397,429,456,419],
[417,447,470,0,443,436,453,432],
[400,425,493,447,0,437,458,445],
[409,465,461,454,453,0,481,438],
[413,425,434,437,432,409,0,431],
[452,472,471,458,445,452,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,446,474,460,449,456,443],
[418,0,429,454,454,412,465,458],
[444,461,0,454,461,417,448,444],
[416,436,436,0,423,429,443,438],
[430,436,429,467,0,433,454,455],
[441,478,473,461,457,0,465,446],
[434,425,442,447,436,425,0,435],
[447,432,446,452,435,444,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,411,437,420,455,450,439],
[464,0,431,442,431,403,461,486],
[479,459,0,472,445,432,440,492],
[453,448,418,0,413,438,431,480],
[470,459,445,477,0,448,469,522],
[435,487,458,452,442,0,471,477],
[440,429,450,459,421,419,0,475],
[451,404,398,410,368,413,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,513,444,476,464,444,467,426],
[377,0,422,374,456,447,431,350],
[446,468,0,488,507,442,451,427],
[414,516,402,0,425,497,489,417],
[426,434,383,465,0,456,438,436],
[446,443,448,393,434,0,483,454],
[423,459,439,401,452,407,0,382],
[464,540,463,473,454,436,508,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,428,416,433,415,419,461],
[465,0,444,441,448,448,468,455],
[462,446,0,426,441,434,434,469],
[474,449,464,0,454,441,447,483],
[457,442,449,436,0,441,444,468],
[475,442,456,449,449,0,442,474],
[471,422,456,443,446,448,0,454],
[429,435,421,407,422,416,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,474,453,433,440,465,443],
[452,0,486,469,436,457,451,439],
[416,404,0,435,406,437,419,416],
[437,421,455,0,438,450,450,448],
[457,454,484,452,0,444,452,457],
[450,433,453,440,446,0,455,428],
[425,439,471,440,438,435,0,448],
[447,451,474,442,433,462,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,512,429,426,473,460,475],
[459,0,452,434,500,438,505,444],
[378,438,0,374,479,404,402,449],
[461,456,516,0,498,445,432,426],
[464,390,411,392,0,406,433,444],
[417,452,486,445,484,0,475,472],
[430,385,488,458,457,415,0,428],
[415,446,441,464,446,418,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,415,406,399,428,417,423],
[490,0,452,473,469,461,441,463],
[475,438,0,457,477,441,465,455],
[484,417,433,0,440,422,414,439],
[491,421,413,450,0,435,428,454],
[462,429,449,468,455,0,428,451],
[473,449,425,476,462,462,0,454],
[467,427,435,451,436,439,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,444,511,455,468,392,472],
[447,0,430,444,494,408,357,464],
[446,460,0,409,461,431,389,478],
[379,446,481,0,422,380,411,407],
[435,396,429,468,0,392,441,498],
[422,482,459,510,498,0,452,473],
[498,533,501,479,449,438,0,540],
[418,426,412,483,392,417,350,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,446,457,451,426,443,414],
[409,0,394,426,444,454,432,403],
[444,496,0,489,429,461,451,432],
[433,464,401,0,444,471,447,436],
[439,446,461,446,0,467,435,443],
[464,436,429,419,423,0,425,424],
[447,458,439,443,455,465,0,452],
[476,487,458,454,447,466,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,439,453,422,435,426,370],
[488,0,459,442,459,449,471,458],
[451,431,0,452,419,456,438,406],
[437,448,438,0,429,463,470,413],
[468,431,471,461,0,481,484,459],
[455,441,434,427,409,0,437,378],
[464,419,452,420,406,453,0,450],
[520,432,484,477,431,512,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,423,437,425,437,439,451],
[426,0,442,444,438,455,447,444],
[467,448,0,445,460,430,472,483],
[453,446,445,0,438,438,447,479],
[465,452,430,452,0,445,444,463],
[453,435,460,452,445,0,461,459],
[451,443,418,443,446,429,0,455],
[439,446,407,411,427,431,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,435,443,471,436,447,444],
[449,0,466,458,481,472,437,455],
[455,424,0,472,463,448,450,415],
[447,432,418,0,457,434,410,437],
[419,409,427,433,0,436,418,437],
[454,418,442,456,454,0,418,436],
[443,453,440,480,472,472,0,475],
[446,435,475,453,453,454,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,488,480,445,419,477,459],
[420,0,413,447,416,384,448,444],
[402,477,0,438,413,402,437,486],
[410,443,452,0,409,452,457,488],
[445,474,477,481,0,432,465,467],
[471,506,488,438,458,0,455,470],
[413,442,453,433,425,435,0,465],
[431,446,404,402,423,420,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,396,400,441,453,447,436],
[458,0,420,396,428,445,457,457],
[494,470,0,446,461,439,449,495],
[490,494,444,0,498,478,473,468],
[449,462,429,392,0,433,410,446],
[437,445,451,412,457,0,415,425],
[443,433,441,417,480,475,0,447],
[454,433,395,422,444,465,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,270,385,421,400,374,272,482],
[620,0,468,445,482,496,526,493],
[505,422,0,470,497,459,379,591],
[469,445,420,0,429,526,436,558],
[490,408,393,461,0,449,381,475],
[516,394,431,364,441,0,523,450],
[618,364,511,454,509,367,0,531],
[408,397,299,332,415,440,359,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,482,431,494,457,449,470],
[417,0,507,473,515,435,461,509],
[408,383,0,419,495,380,420,459],
[459,417,471,0,455,453,468,483],
[396,375,395,435,0,410,435,438],
[433,455,510,437,480,0,497,473],
[441,429,470,422,455,393,0,504],
[420,381,431,407,452,417,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,440,450,441,418,437,412],
[441,0,422,469,469,426,418,477],
[450,468,0,454,433,441,461,402],
[440,421,436,0,460,455,427,451],
[449,421,457,430,0,453,471,429],
[472,464,449,435,437,0,471,468],
[453,472,429,463,419,419,0,431],
[478,413,488,439,461,422,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,483,427,455,482,434,524],
[427,0,447,447,464,443,433,428],
[407,443,0,447,440,455,401,457],
[463,443,443,0,447,493,447,487],
[435,426,450,443,0,466,442,435],
[408,447,435,397,424,0,433,457],
[456,457,489,443,448,457,0,463],
[366,462,433,403,455,433,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,406,428,430,439,436,449],
[465,0,464,460,453,437,452,460],
[484,426,0,474,474,446,471,476],
[462,430,416,0,445,400,438,448],
[460,437,416,445,0,402,448,453],
[451,453,444,490,488,0,484,487],
[454,438,419,452,442,406,0,448],
[441,430,414,442,437,403,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,463,451,472,417,413,484],
[456,0,474,429,440,391,424,530],
[427,416,0,400,410,372,422,464],
[439,461,490,0,470,440,463,447],
[418,450,480,420,0,426,428,475],
[473,499,518,450,464,0,410,528],
[477,466,468,427,462,480,0,499],
[406,360,426,443,415,362,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,392,470,429,372,397,390],
[437,0,443,455,449,431,437,430],
[498,447,0,472,466,437,468,446],
[420,435,418,0,456,428,426,414],
[461,441,424,434,0,443,388,379],
[518,459,453,462,447,0,471,415],
[493,453,422,464,502,419,0,436],
[500,460,444,476,511,475,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,505,453,480,438,445,461],
[404,0,450,397,436,417,429,409],
[385,440,0,409,430,426,411,388],
[437,493,481,0,481,465,493,447],
[410,454,460,409,0,440,396,445],
[452,473,464,425,450,0,442,467],
[445,461,479,397,494,448,0,439],
[429,481,502,443,445,423,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,460,432,497,464,432,472],
[396,0,366,379,387,408,388,450],
[430,524,0,431,476,462,434,414],
[458,511,459,0,438,471,422,457],
[393,503,414,452,0,481,430,436],
[426,482,428,419,409,0,395,447],
[458,502,456,468,460,495,0,436],
[418,440,476,433,454,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,455,457,455,444,471,459],
[416,0,406,409,423,430,459,456],
[435,484,0,488,442,473,484,447],
[433,481,402,0,421,441,450,473],
[435,467,448,469,0,441,467,445],
[446,460,417,449,449,0,463,463],
[419,431,406,440,423,427,0,452],
[431,434,443,417,445,427,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,490,476,437,446,417,446],
[437,0,449,498,424,419,405,443],
[400,441,0,447,406,409,382,413],
[414,392,443,0,419,419,405,434],
[453,466,484,471,0,425,425,432],
[444,471,481,471,465,0,458,465],
[473,485,508,485,465,432,0,461],
[444,447,477,456,458,425,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,421,428,459,435,436,437],
[459,0,425,438,477,439,451,441],
[469,465,0,464,488,438,455,438],
[462,452,426,0,482,440,451,435],
[431,413,402,408,0,416,424,412],
[455,451,452,450,474,0,460,429],
[454,439,435,439,466,430,0,449],
[453,449,452,455,478,461,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,444,451,394,434,423,417],
[463,0,454,434,437,446,439,436],
[446,436,0,405,438,424,430,394],
[439,456,485,0,472,501,445,432],
[496,453,452,418,0,462,446,465],
[456,444,466,389,428,0,473,456],
[467,451,460,445,444,417,0,403],
[473,454,496,458,425,434,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,479,499,452,480,442,474],
[420,0,483,472,484,449,422,431],
[411,407,0,470,460,453,439,397],
[391,418,420,0,424,445,445,399],
[438,406,430,466,0,451,430,407],
[410,441,437,445,439,0,420,423],
[448,468,451,445,460,470,0,457],
[416,459,493,491,483,467,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,478,465,481,497,457,491],
[448,0,469,471,445,463,447,465],
[412,421,0,450,448,434,451,450],
[425,419,440,0,451,448,437,450],
[409,445,442,439,0,436,435,440],
[393,427,456,442,454,0,438,463],
[433,443,439,453,455,452,0,449],
[399,425,440,440,450,427,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,444,474,438,482,470,475],
[432,0,442,461,429,454,445,451],
[446,448,0,473,454,454,436,449],
[416,429,417,0,428,448,453,449],
[452,461,436,462,0,474,453,474],
[408,436,436,442,416,0,433,441],
[420,445,454,437,437,457,0,433],
[415,439,441,441,416,449,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,468,430,460,520,428,505],
[398,0,439,435,424,464,414,457],
[422,451,0,451,444,488,426,481],
[460,455,439,0,433,472,479,471],
[430,466,446,457,0,501,432,503],
[370,426,402,418,389,0,416,444],
[462,476,464,411,458,474,0,496],
[385,433,409,419,387,446,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,392,400,418,389,387,383],
[477,0,406,397,411,399,405,402],
[498,484,0,443,454,458,428,437],
[490,493,447,0,472,441,454,441],
[472,479,436,418,0,394,444,429],
[501,491,432,449,496,0,479,465],
[503,485,462,436,446,411,0,418],
[507,488,453,449,461,425,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,480,408,462,415,462,461],
[446,0,511,452,425,453,486,440],
[410,379,0,407,412,391,426,373],
[482,438,483,0,453,430,470,423],
[428,465,478,437,0,459,448,431],
[475,437,499,460,431,0,474,394],
[428,404,464,420,442,416,0,402],
[429,450,517,467,459,496,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,470,403,391,442,416,499],
[441,0,445,377,449,425,381,500],
[420,445,0,355,437,461,447,524],
[487,513,535,0,449,564,413,597],
[499,441,453,441,0,472,463,546],
[448,465,429,326,418,0,444,493],
[474,509,443,477,427,446,0,531],
[391,390,366,293,344,397,359,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,413,443,409,427,517,411],
[428,0,376,436,419,452,526,443],
[477,514,0,461,416,446,558,472],
[447,454,429,0,446,456,491,410],
[481,471,474,444,0,443,539,395],
[463,438,444,434,447,0,547,408],
[373,364,332,399,351,343,0,371],
[479,447,418,480,495,482,519,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,414,395,444,421,425,416],
[477,0,455,448,462,442,463,462],
[476,435,0,405,418,429,406,410],
[495,442,485,0,499,467,455,467],
[446,428,472,391,0,460,435,427],
[469,448,461,423,430,0,421,460],
[465,427,484,435,455,469,0,473],
[474,428,480,423,463,430,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,434,427,441,428,450,436],
[442,0,466,426,433,447,451,446],
[456,424,0,417,433,434,458,437],
[463,464,473,0,445,458,479,436],
[449,457,457,445,0,450,462,428],
[462,443,456,432,440,0,452,455],
[440,439,432,411,428,438,0,437],
[454,444,453,454,462,435,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,438,495,383,453,412,409],
[463,0,445,503,477,519,456,431],
[452,445,0,410,432,382,450,431],
[395,387,480,0,371,453,390,468],
[507,413,458,519,0,452,449,417],
[437,371,508,437,438,0,443,434],
[478,434,440,500,441,447,0,401],
[481,459,459,422,473,456,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,421,426,433,419,456,403],
[444,0,414,428,436,424,470,412],
[469,476,0,461,465,451,474,445],
[464,462,429,0,459,460,452,442],
[457,454,425,431,0,428,445,443],
[471,466,439,430,462,0,475,431],
[434,420,416,438,445,415,0,422],
[487,478,445,448,447,459,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,416,454,420,443,425,439],
[451,0,441,441,445,444,434,456],
[474,449,0,449,462,450,472,442],
[436,449,441,0,464,458,441,440],
[470,445,428,426,0,446,439,451],
[447,446,440,432,444,0,445,452],
[465,456,418,449,451,445,0,439],
[451,434,448,450,439,438,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,458,469,440,435,478,462],
[437,0,446,458,449,426,465,465],
[432,444,0,448,435,435,458,439],
[421,432,442,0,430,438,461,447],
[450,441,455,460,0,464,456,463],
[455,464,455,452,426,0,440,466],
[412,425,432,429,434,450,0,437],
[428,425,451,443,427,424,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,427,418,452,449,451,438],
[436,0,423,441,450,436,435,451],
[463,467,0,439,474,459,455,463],
[472,449,451,0,473,430,454,462],
[438,440,416,417,0,435,437,452],
[441,454,431,460,455,0,448,435],
[439,455,435,436,453,442,0,437],
[452,439,427,428,438,455,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,429,431,445,420,449,425],
[473,0,457,445,445,482,455,473],
[461,433,0,438,459,465,445,428],
[459,445,452,0,458,479,449,450],
[445,445,431,432,0,441,452,429],
[470,408,425,411,449,0,447,446],
[441,435,445,441,438,443,0,438],
[465,417,462,440,461,444,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,445,483,483,506,447,437],
[458,0,435,468,477,482,452,441],
[445,455,0,459,469,458,439,453],
[407,422,431,0,458,464,415,418],
[407,413,421,432,0,470,424,406],
[384,408,432,426,420,0,418,422],
[443,438,451,475,466,472,0,442],
[453,449,437,472,484,468,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,425,446,442,458,445,447],
[455,0,432,438,458,456,464,459],
[465,458,0,461,448,443,449,452],
[444,452,429,0,453,444,423,460],
[448,432,442,437,0,430,456,443],
[432,434,447,446,460,0,434,429],
[445,426,441,467,434,456,0,449],
[443,431,438,430,447,461,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,432,437,407,475,477],
[440,0,437,448,427,427,485,489],
[445,453,0,463,400,412,472,476],
[458,442,427,0,445,432,478,476],
[453,463,490,445,0,457,492,479],
[483,463,478,458,433,0,471,487],
[415,405,418,412,398,419,0,476],
[413,401,414,414,411,403,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,629,608,502,390,445,645],
[422,0,555,503,364,223,358,344],
[261,335,0,580,417,358,319,351],
[282,387,310,0,251,265,392,222],
[388,526,473,639,0,345,410,535],
[500,667,532,625,545,0,435,480],
[445,532,571,498,480,455,0,426],
[245,546,539,668,355,410,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,453,460,445,450,443,462],
[404,0,454,445,420,444,428,451],
[437,436,0,418,415,431,424,449],
[430,445,472,0,421,456,444,444],
[445,470,475,469,0,474,456,474],
[440,446,459,434,416,0,423,460],
[447,462,466,446,434,467,0,470],
[428,439,441,446,416,430,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,450,417,412,425,399,488],
[417,0,421,401,336,362,335,435],
[440,469,0,406,346,428,378,433],
[473,489,484,0,392,495,473,489],
[478,554,544,498,0,421,470,532],
[465,528,462,395,469,0,448,522],
[491,555,512,417,420,442,0,503],
[402,455,457,401,358,368,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,473,452,453,445,452,453],
[446,0,467,449,434,439,462,465],
[417,423,0,459,437,430,441,432],
[438,441,431,0,420,425,440,449],
[437,456,453,470,0,432,433,454],
[445,451,460,465,458,0,463,475],
[438,428,449,450,457,427,0,439],
[437,425,458,441,436,415,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,436,419,467,403,429,388],
[452,0,472,417,463,443,429,413],
[454,418,0,418,430,468,463,423],
[471,473,472,0,499,458,425,419],
[423,427,460,391,0,468,407,396],
[487,447,422,432,422,0,442,445],
[461,461,427,465,483,448,0,428],
[502,477,467,471,494,445,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,460,450,432,461,432,450],
[463,0,448,449,446,453,438,449],
[430,442,0,431,439,450,416,445],
[440,441,459,0,458,447,435,426],
[458,444,451,432,0,456,451,451],
[429,437,440,443,434,0,439,429],
[458,452,474,455,439,451,0,459],
[440,441,445,464,439,461,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,454,445,467,499,446,504],
[426,0,489,481,502,518,468,506],
[436,401,0,502,469,475,453,477],
[445,409,388,0,462,434,414,423],
[423,388,421,428,0,455,418,431],
[391,372,415,456,435,0,424,409],
[444,422,437,476,472,466,0,457],
[386,384,413,467,459,481,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,449,426,457,443,407,416],
[438,0,441,445,420,409,414,407],
[441,449,0,459,424,430,421,422],
[464,445,431,0,433,414,421,414],
[433,470,466,457,0,446,444,436],
[447,481,460,476,444,0,420,456],
[483,476,469,469,446,470,0,431],
[474,483,468,476,454,434,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,419,447,409,412,409,426],
[467,0,423,460,434,445,451,427],
[471,467,0,460,435,446,432,422],
[443,430,430,0,421,437,413,420],
[481,456,455,469,0,428,431,448],
[478,445,444,453,462,0,429,452],
[481,439,458,477,459,461,0,436],
[464,463,468,470,442,438,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,530,480,450,429,432,450],
[438,0,422,417,399,363,410,379],
[360,468,0,431,393,374,413,320],
[410,473,459,0,436,401,479,427],
[440,491,497,454,0,367,411,394],
[461,527,516,489,523,0,398,467],
[458,480,477,411,479,492,0,390],
[440,511,570,463,496,423,500,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,446,483,483,476,475,445],
[390,0,408,447,470,422,423,408],
[444,482,0,467,468,442,454,452],
[407,443,423,0,472,428,404,420],
[407,420,422,418,0,412,431,417],
[414,468,448,462,478,0,449,459],
[415,467,436,486,459,441,0,425],
[445,482,438,470,473,431,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,440,441,449,443,437,407],
[448,0,464,453,430,443,457,457],
[450,426,0,449,438,450,450,432],
[449,437,441,0,424,430,456,427],
[441,460,452,466,0,421,444,442],
[447,447,440,460,469,0,480,445],
[453,433,440,434,446,410,0,420],
[483,433,458,463,448,445,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,417,425,464,438,411,410],
[431,0,419,466,451,425,417,426],
[473,471,0,470,487,445,454,452],
[465,424,420,0,456,440,421,422],
[426,439,403,434,0,437,428,419],
[452,465,445,450,453,0,428,428],
[479,473,436,469,462,462,0,471],
[480,464,438,468,471,462,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,437,434,424,439,437,428],
[430,0,455,446,412,434,441,424],
[453,435,0,449,412,445,438,434],
[456,444,441,0,429,438,457,450],
[466,478,478,461,0,454,462,444],
[451,456,445,452,436,0,439,445],
[453,449,452,433,428,451,0,438],
[462,466,456,440,446,445,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,451,457,461,430,439,458],
[447,0,439,436,460,428,453,444],
[439,451,0,461,465,445,454,460],
[433,454,429,0,438,413,440,444],
[429,430,425,452,0,428,435,444],
[460,462,445,477,462,0,461,460],
[451,437,436,450,455,429,0,457],
[432,446,430,446,446,430,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,438,422,416,449,409,438],
[458,0,473,439,433,462,450,444],
[452,417,0,459,428,451,406,443],
[468,451,431,0,463,452,427,456],
[474,457,462,427,0,459,455,465],
[441,428,439,438,431,0,416,430],
[481,440,484,463,435,474,0,461],
[452,446,447,434,425,460,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,448,426,440,441,464,443],
[447,0,457,450,447,440,454,440],
[442,433,0,430,432,445,451,449],
[464,440,460,0,451,461,475,445],
[450,443,458,439,0,454,440,437],
[449,450,445,429,436,0,449,430],
[426,436,439,415,450,441,0,432],
[447,450,441,445,453,460,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,452,475,436,466,462,456],
[468,0,458,483,453,444,458,470],
[438,432,0,472,463,456,473,472],
[415,407,418,0,427,416,462,450],
[454,437,427,463,0,428,463,411],
[424,446,434,474,462,0,464,447],
[428,432,417,428,427,426,0,453],
[434,420,418,440,479,443,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,453,429,495,445,445,490],
[408,0,436,458,485,442,449,500],
[437,454,0,404,451,442,432,447],
[461,432,486,0,468,471,432,501],
[395,405,439,422,0,400,424,470],
[445,448,448,419,490,0,408,494],
[445,441,458,458,466,482,0,490],
[400,390,443,389,420,396,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,503,484,478,361,437,486],
[451,0,493,475,494,495,438,516],
[387,397,0,443,450,466,452,455],
[406,415,447,0,409,365,369,470],
[412,396,440,481,0,416,428,431],
[529,395,424,525,474,0,490,481],
[453,452,438,521,462,400,0,449],
[404,374,435,420,459,409,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,425,511,445,462,443,451],
[470,0,448,473,454,452,444,445],
[465,442,0,510,429,449,448,451],
[379,417,380,0,395,396,394,403],
[445,436,461,495,0,446,460,424],
[428,438,441,494,444,0,432,452],
[447,446,442,496,430,458,0,435],
[439,445,439,487,466,438,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,294,322,243,385,439,275,239],
[596,0,518,384,592,384,592,744],
[568,372,0,263,184,396,275,623],
[647,506,627,0,463,572,463,415],
[505,298,706,427,0,455,475,439],
[451,506,494,318,435,0,354,623],
[615,298,615,427,415,536,0,732],
[651,146,267,475,451,267,158,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,440,445,453,461,447,452],
[446,0,446,430,438,467,435,461],
[450,444,0,452,451,479,427,459],
[445,460,438,0,446,476,412,457],
[437,452,439,444,0,478,449,457],
[429,423,411,414,412,0,402,442],
[443,455,463,478,441,488,0,484],
[438,429,431,433,433,448,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,450,432,431,451,486,465],
[409,0,408,435,384,402,469,427],
[440,482,0,492,456,460,484,518],
[458,455,398,0,433,442,459,457],
[459,506,434,457,0,457,475,434],
[439,488,430,448,433,0,479,472],
[404,421,406,431,415,411,0,423],
[425,463,372,433,456,418,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,462,459,424,432,503,468],
[406,0,452,430,439,412,487,419],
[428,438,0,469,453,447,503,472],
[431,460,421,0,443,436,488,473],
[466,451,437,447,0,444,491,460],
[458,478,443,454,446,0,482,457],
[387,403,387,402,399,408,0,408],
[422,471,418,417,430,433,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,428,446,452,457,474,447],
[461,0,451,452,461,478,483,441],
[462,439,0,449,463,463,463,439],
[444,438,441,0,435,450,465,433],
[438,429,427,455,0,457,466,436],
[433,412,427,440,433,0,429,406],
[416,407,427,425,424,461,0,424],
[443,449,451,457,454,484,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,385,442,464,493,435,441],
[447,0,387,437,450,431,494,476],
[505,503,0,492,466,437,491,519],
[448,453,398,0,448,465,448,466],
[426,440,424,442,0,437,447,435],
[397,459,453,425,453,0,430,457],
[455,396,399,442,443,460,0,427],
[449,414,371,424,455,433,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,401,422,413,455,451,432],
[447,0,459,444,426,451,428,439],
[489,431,0,430,456,445,440,446],
[468,446,460,0,452,472,437,458],
[477,464,434,438,0,447,421,448],
[435,439,445,418,443,0,421,436],
[439,462,450,453,469,469,0,457],
[458,451,444,432,442,454,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,432,425,437,425,435,456],
[446,0,432,441,430,451,444,455],
[458,458,0,447,453,436,435,458],
[465,449,443,0,442,428,451,470],
[453,460,437,448,0,462,449,462],
[465,439,454,462,428,0,465,469],
[455,446,455,439,441,425,0,459],
[434,435,432,420,428,421,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,471,446,420,462,474,414],
[419,0,448,482,456,474,453,522],
[419,442,0,508,495,469,473,437],
[444,408,382,0,422,434,488,458],
[470,434,395,468,0,442,489,440],
[428,416,421,456,448,0,474,430],
[416,437,417,402,401,416,0,475],
[476,368,453,432,450,460,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,431,471,452,446,445,431],
[488,0,459,476,435,451,455,464],
[459,431,0,464,453,449,463,435],
[419,414,426,0,422,413,447,396],
[438,455,437,468,0,434,434,473],
[444,439,441,477,456,0,443,449],
[445,435,427,443,456,447,0,447],
[459,426,455,494,417,441,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,278,337,409,394,453,361,472],
[612,0,469,438,428,567,471,544],
[553,421,0,329,402,487,420,484],
[481,452,561,0,431,478,600,494],
[496,462,488,459,0,462,381,581],
[437,323,403,412,428,0,357,540],
[529,419,470,290,509,533,0,581],
[418,346,406,396,309,350,309,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,495,519,530,468,487,424],
[495,0,483,505,494,459,454,427],
[395,407,0,456,409,391,502,468],
[371,385,434,0,475,392,469,397],
[360,396,481,415,0,405,455,401],
[422,431,499,498,485,0,467,465],
[403,436,388,421,435,423,0,493],
[466,463,422,493,489,425,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,462,453,466,451,477,441],
[420,0,454,442,439,445,438,449],
[428,436,0,429,424,429,445,435],
[437,448,461,0,439,445,462,433],
[424,451,466,451,0,466,477,432],
[439,445,461,445,424,0,430,421],
[413,452,445,428,413,460,0,401],
[449,441,455,457,458,469,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,476,458,434,484,429,458],
[439,0,453,476,485,476,450,451],
[414,437,0,441,449,442,422,459],
[432,414,449,0,435,449,433,423],
[456,405,441,455,0,458,419,421],
[406,414,448,441,432,0,416,425],
[461,440,468,457,471,474,0,443],
[432,439,431,467,469,465,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,436,438,459,452,437,465],
[450,0,435,429,454,474,467,450],
[454,455,0,431,479,432,459,454],
[452,461,459,0,480,445,462,483],
[431,436,411,410,0,429,436,448],
[438,416,458,445,461,0,441,451],
[453,423,431,428,454,449,0,452],
[425,440,436,407,442,439,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,451,428,447,429,440,446],
[461,0,454,459,473,435,436,437],
[439,436,0,443,446,453,445,457],
[462,431,447,0,460,418,445,444],
[443,417,444,430,0,422,448,450],
[461,455,437,472,468,0,471,446],
[450,454,445,445,442,419,0,430],
[444,453,433,446,440,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,539,451,450,489,502,457,410],
[351,0,425,448,428,464,491,421],
[439,465,0,453,496,517,445,424],
[440,442,437,0,456,492,427,458],
[401,462,394,434,0,418,469,406],
[388,426,373,398,472,0,426,381],
[433,399,445,463,421,464,0,412],
[480,469,466,432,484,509,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,449,449,435,448,424,432],
[451,0,455,467,488,451,433,437],
[441,435,0,458,455,463,451,436],
[441,423,432,0,452,450,440,433],
[455,402,435,438,0,416,441,448],
[442,439,427,440,474,0,443,431],
[466,457,439,450,449,447,0,432],
[458,453,454,457,442,459,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,466,461,436,435,429,419],
[430,0,453,440,406,434,437,430],
[424,437,0,425,404,442,420,443],
[429,450,465,0,431,438,425,436],
[454,484,486,459,0,480,463,444],
[455,456,448,452,410,0,411,423],
[461,453,470,465,427,479,0,448],
[471,460,447,454,446,467,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,460,450,448,443,467,456],
[444,0,470,438,455,436,464,445],
[430,420,0,452,460,447,447,436],
[440,452,438,0,443,429,442,424],
[442,435,430,447,0,443,430,414],
[447,454,443,461,447,0,470,456],
[423,426,443,448,460,420,0,428],
[434,445,454,466,476,434,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,411,409,433,438,420,443],
[448,0,421,443,443,444,423,454],
[479,469,0,450,454,484,444,468],
[481,447,440,0,442,440,441,459],
[457,447,436,448,0,434,442,455],
[452,446,406,450,456,0,449,458],
[470,467,446,449,448,441,0,472],
[447,436,422,431,435,432,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,485,472,433,453,448,440],
[447,0,461,460,428,448,425,412],
[405,429,0,437,412,438,412,438],
[418,430,453,0,417,440,418,417],
[457,462,478,473,0,428,458,472],
[437,442,452,450,462,0,440,445],
[442,465,478,472,432,450,0,437],
[450,478,452,473,418,445,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,468,417,431,429,414,433],
[455,0,469,430,458,437,427,454],
[422,421,0,419,428,398,408,422],
[473,460,471,0,469,459,447,442],
[459,432,462,421,0,451,412,406],
[461,453,492,431,439,0,442,447],
[476,463,482,443,478,448,0,451],
[457,436,468,448,484,443,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,494,383,454,439,430,475],
[456,0,449,447,489,482,439,473],
[396,441,0,415,430,444,437,440],
[507,443,475,0,491,463,472,501],
[436,401,460,399,0,434,430,442],
[451,408,446,427,456,0,441,468],
[460,451,453,418,460,449,0,468],
[415,417,450,389,448,422,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,455,440,454,454,466,471],
[408,0,457,451,438,424,471,508],
[435,433,0,464,453,413,427,451],
[450,439,426,0,428,401,463,464],
[436,452,437,462,0,411,471,459],
[436,466,477,489,479,0,490,489],
[424,419,463,427,419,400,0,438],
[419,382,439,426,431,401,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,439,416,442,435,458,410],
[434,0,442,473,449,453,453,447],
[451,448,0,442,457,427,468,453],
[474,417,448,0,460,399,465,451],
[448,441,433,430,0,461,458,434],
[455,437,463,491,429,0,495,457],
[432,437,422,425,432,395,0,415],
[480,443,437,439,456,433,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,445,459,451,435,442,445],
[426,0,438,437,443,439,434,433],
[445,452,0,438,454,432,443,426],
[431,453,452,0,458,429,426,429],
[439,447,436,432,0,445,445,432],
[455,451,458,461,445,0,454,441],
[448,456,447,464,445,436,0,446],
[445,457,464,461,458,449,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,451,455,441,436,420,450],
[461,0,412,512,451,464,465,440],
[439,478,0,483,421,471,450,473],
[435,378,407,0,417,443,404,429],
[449,439,469,473,0,465,454,412],
[454,426,419,447,425,0,441,442],
[470,425,440,486,436,449,0,449],
[440,450,417,461,478,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,432,445,438,430,429,458],
[444,0,438,461,465,443,416,443],
[458,452,0,457,441,433,431,455],
[445,429,433,0,431,424,434,431],
[452,425,449,459,0,426,452,433],
[460,447,457,466,464,0,445,448],
[461,474,459,456,438,445,0,455],
[432,447,435,459,457,442,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,447,474,458,458,413,489],
[443,0,420,407,433,433,425,470],
[443,470,0,446,436,489,431,532],
[416,483,444,0,502,458,451,488],
[432,457,454,388,0,472,397,494],
[432,457,401,432,418,0,403,452],
[477,465,459,439,493,487,0,503],
[401,420,358,402,396,438,387,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,445,434,405,431,466,451],
[444,0,433,455,448,447,482,438],
[445,457,0,459,465,452,455,436],
[456,435,431,0,453,439,467,456],
[485,442,425,437,0,456,448,446],
[459,443,438,451,434,0,464,449],
[424,408,435,423,442,426,0,413],
[439,452,454,434,444,441,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,436,437,422,438,429,457],
[445,0,439,445,440,430,431,458],
[454,451,0,440,437,449,441,483],
[453,445,450,0,445,442,431,476],
[468,450,453,445,0,448,449,458],
[452,460,441,448,442,0,445,457],
[461,459,449,459,441,445,0,461],
[433,432,407,414,432,433,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,456,460,451,481,448,439],
[429,0,438,446,443,444,447,434],
[434,452,0,475,451,439,451,442],
[430,444,415,0,413,418,451,463],
[439,447,439,477,0,464,464,453],
[409,446,451,472,426,0,447,458],
[442,443,439,439,426,443,0,456],
[451,456,448,427,437,432,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,445,452,436,473,481,434],
[414,0,435,453,438,451,459,479],
[445,455,0,446,458,473,472,470],
[438,437,444,0,448,426,425,455],
[454,452,432,442,0,462,440,459],
[417,439,417,464,428,0,451,430],
[409,431,418,465,450,439,0,448],
[456,411,420,435,431,460,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,452,428,438,464,457,441],
[443,0,420,437,441,445,452,424],
[438,470,0,443,441,457,444,434],
[462,453,447,0,448,458,463,424],
[452,449,449,442,0,465,476,460],
[426,445,433,432,425,0,450,428],
[433,438,446,427,414,440,0,424],
[449,466,456,466,430,462,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,415,445,419,478,389,448],
[429,0,458,466,447,460,460,461],
[475,432,0,466,487,451,452,486],
[445,424,424,0,449,445,468,446],
[471,443,403,441,0,457,467,452],
[412,430,439,445,433,0,396,457],
[501,430,438,422,423,494,0,520],
[442,429,404,444,438,433,370,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,460,468,483,472,444,446],
[398,0,447,424,431,427,443,399],
[430,443,0,463,452,469,451,453],
[422,466,427,0,432,455,452,408],
[407,459,438,458,0,448,458,456],
[418,463,421,435,442,0,471,437],
[446,447,439,438,432,419,0,427],
[444,491,437,482,434,453,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,428,456,459,420,425,443],
[433,0,450,452,437,439,452,458],
[462,440,0,442,447,432,437,476],
[434,438,448,0,447,443,429,447],
[431,453,443,443,0,412,412,450],
[470,451,458,447,478,0,436,443],
[465,438,453,461,478,454,0,479],
[447,432,414,443,440,447,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,412,436,430,436,418,425],
[447,0,440,412,436,467,429,437],
[478,450,0,452,468,437,432,474],
[454,478,438,0,484,487,451,465],
[460,454,422,406,0,448,394,440],
[454,423,453,403,442,0,402,414],
[472,461,458,439,496,488,0,452],
[465,453,416,425,450,476,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,448,471,461,451,458,438],
[462,0,458,472,454,437,469,476],
[442,432,0,467,448,456,452,465],
[419,418,423,0,445,444,429,452],
[429,436,442,445,0,426,467,449],
[439,453,434,446,464,0,427,442],
[432,421,438,461,423,463,0,433],
[452,414,425,438,441,448,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,472,448,429,453,418,466],
[432,0,487,429,455,449,428,455],
[418,403,0,416,438,440,446,439],
[442,461,474,0,453,441,439,471],
[461,435,452,437,0,436,454,479],
[437,441,450,449,454,0,447,443],
[472,462,444,451,436,443,0,470],
[424,435,451,419,411,447,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,412,459,436,399,427,422],
[492,0,467,461,466,435,444,448],
[478,423,0,461,458,462,442,428],
[431,429,429,0,428,438,456,428],
[454,424,432,462,0,438,460,436],
[491,455,428,452,452,0,479,446],
[463,446,448,434,430,411,0,402],
[468,442,462,462,454,444,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,435,435,443,422,456,453],
[456,0,430,439,442,432,435,463],
[455,460,0,485,447,455,432,488],
[455,451,405,0,441,446,453,447],
[447,448,443,449,0,443,469,441],
[468,458,435,444,447,0,454,463],
[434,455,458,437,421,436,0,464],
[437,427,402,443,449,427,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,428,417,421,432,426,428],
[449,0,444,442,425,434,438,473],
[462,446,0,420,430,464,437,448],
[473,448,470,0,441,474,455,475],
[469,465,460,449,0,453,452,444],
[458,456,426,416,437,0,420,430],
[464,452,453,435,438,470,0,444],
[462,417,442,415,446,460,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,383,472,451,428,382,379],
[460,0,422,441,446,451,452,426],
[507,468,0,459,492,466,441,484],
[418,449,431,0,457,470,398,416],
[439,444,398,433,0,428,418,408],
[462,439,424,420,462,0,369,443],
[508,438,449,492,472,521,0,457],
[511,464,406,474,482,447,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,437,418,390,385,445,392],
[486,0,454,455,449,430,502,426],
[453,436,0,450,421,450,438,472],
[472,435,440,0,418,451,452,423],
[500,441,469,472,0,443,472,445],
[505,460,440,439,447,0,481,459],
[445,388,452,438,418,409,0,440],
[498,464,418,467,445,431,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,444,442,433,453,468,439],
[445,0,425,442,440,453,446,423],
[446,465,0,445,469,451,469,418],
[448,448,445,0,459,439,440,435],
[457,450,421,431,0,447,442,457],
[437,437,439,451,443,0,440,431],
[422,444,421,450,448,450,0,437],
[451,467,472,455,433,459,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,443,443,438,444,462,467],
[505,0,449,450,463,436,439,459],
[447,441,0,417,462,477,448,493],
[447,440,473,0,438,460,473,484],
[452,427,428,452,0,458,469,454],
[446,454,413,430,432,0,450,469],
[428,451,442,417,421,440,0,458],
[423,431,397,406,436,421,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,438,417,443,449,434,448],
[457,0,429,460,449,439,440,442],
[452,461,0,446,428,456,454,452],
[473,430,444,0,420,438,440,449],
[447,441,462,470,0,466,448,451],
[441,451,434,452,424,0,427,432],
[456,450,436,450,442,463,0,467],
[442,448,438,441,439,458,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,438,432,455,446,441,444],
[446,0,445,443,467,462,454,442],
[452,445,0,452,455,482,449,449],
[458,447,438,0,476,462,461,450],
[435,423,435,414,0,450,423,447],
[444,428,408,428,440,0,454,426],
[449,436,441,429,467,436,0,447],
[446,448,441,440,443,464,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,517,604,419,452,464,302],
[493,0,489,416,570,604,461,462],
[373,401,0,608,381,368,385,384],
[286,474,282,0,519,421,523,505],
[471,320,509,371,0,523,458,422],
[438,286,522,469,367,0,433,437],
[426,429,505,367,432,457,0,488],
[588,428,506,385,468,453,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,450,450,452,428,471,488],
[454,0,456,443,489,431,472,445],
[440,434,0,447,458,440,454,445],
[440,447,443,0,431,434,434,445],
[438,401,432,459,0,427,441,445],
[462,459,450,456,463,0,447,443],
[419,418,436,456,449,443,0,449],
[402,445,445,445,445,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,461,462,444,458,476,473],
[418,0,410,432,422,439,447,425],
[429,480,0,442,470,448,468,504],
[428,458,448,0,455,456,482,451],
[446,468,420,435,0,485,468,476],
[432,451,442,434,405,0,456,456],
[414,443,422,408,422,434,0,422],
[417,465,386,439,414,434,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,478,427,360,454,415,428],
[475,0,569,442,474,486,562,479],
[412,321,0,336,348,500,424,351],
[463,448,554,0,434,459,510,412],
[530,416,542,456,0,541,509,512],
[436,404,390,431,349,0,403,482],
[475,328,466,380,381,487,0,413],
[462,411,539,478,378,408,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,456,454,429,480,454,461],
[449,0,465,463,457,459,428,448],
[434,425,0,439,441,431,415,431],
[436,427,451,0,430,440,457,438],
[461,433,449,460,0,467,448,463],
[410,431,459,450,423,0,421,450],
[436,462,475,433,442,469,0,435],
[429,442,459,452,427,440,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,440,455,426,442,423,419],
[444,0,457,447,436,440,430,446],
[450,433,0,459,444,451,421,422],
[435,443,431,0,432,441,432,423],
[464,454,446,458,0,447,431,426],
[448,450,439,449,443,0,433,428],
[467,460,469,458,459,457,0,425],
[471,444,468,467,464,462,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,464,470,479,451,440,453],
[427,0,445,462,470,452,445,445],
[426,445,0,463,471,431,459,443],
[420,428,427,0,462,426,433,422],
[411,420,419,428,0,406,421,411],
[439,438,459,464,484,0,452,420],
[450,445,431,457,469,438,0,428],
[437,445,447,468,479,470,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,466,488,467,439,448,449],
[445,0,453,453,454,448,472,452],
[424,437,0,450,454,473,458,451],
[402,437,440,0,464,421,432,432],
[423,436,436,426,0,457,437,442],
[451,442,417,469,433,0,474,425],
[442,418,432,458,453,416,0,446],
[441,438,439,458,448,465,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,451,462,473,490,499,442],
[424,0,440,412,429,468,463,460],
[439,450,0,414,426,461,437,453],
[428,478,476,0,448,502,462,466],
[417,461,464,442,0,448,467,451],
[400,422,429,388,442,0,443,424],
[391,427,453,428,423,447,0,410],
[448,430,437,424,439,466,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,401,410,437,443,441,433],
[460,0,424,412,455,463,417,423],
[489,466,0,460,457,460,477,440],
[480,478,430,0,456,452,446,419],
[453,435,433,434,0,435,440,418],
[447,427,430,438,455,0,417,449],
[449,473,413,444,450,473,0,398],
[457,467,450,471,472,441,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,390,438,431,429,445,443],
[451,0,414,432,419,438,430,447],
[500,476,0,477,470,440,487,462],
[452,458,413,0,457,437,444,466],
[459,471,420,433,0,458,447,467],
[461,452,450,453,432,0,412,457],
[445,460,403,446,443,478,0,441],
[447,443,428,424,423,433,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,421,510,467,474,437,506],
[395,0,451,357,507,512,413,445],
[469,439,0,438,410,393,429,380],
[380,533,452,0,475,378,464,331],
[423,383,480,415,0,409,410,423],
[416,378,497,512,481,0,450,358],
[453,477,461,426,480,440,0,374],
[384,445,510,559,467,532,516,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,399,489,417,424,401,424],
[494,0,474,480,443,487,450,480],
[491,416,0,483,441,454,456,444],
[401,410,407,0,431,453,410,395],
[473,447,449,459,0,469,450,408],
[466,403,436,437,421,0,420,398],
[489,440,434,480,440,470,0,449],
[466,410,446,495,482,492,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,441,431,416,459,426,508],
[443,0,497,423,393,508,405,494],
[449,393,0,427,408,465,442,449],
[459,467,463,0,473,443,481,491],
[474,497,482,417,0,463,415,435],
[431,382,425,447,427,0,421,436],
[464,485,448,409,475,469,0,481],
[382,396,441,399,455,454,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,397,415,430,429,420,385],
[464,0,427,426,447,448,447,433],
[493,463,0,442,481,442,480,451],
[475,464,448,0,442,433,462,431],
[460,443,409,448,0,451,448,444],
[461,442,448,457,439,0,471,430],
[470,443,410,428,442,419,0,429],
[505,457,439,459,446,460,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,464,466,437,433,424,416],
[427,0,453,469,434,422,447,427],
[426,437,0,491,416,477,407,441],
[424,421,399,0,426,431,413,403],
[453,456,474,464,0,471,410,431],
[457,468,413,459,419,0,437,430],
[466,443,483,477,480,453,0,451],
[474,463,449,487,459,460,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,450,429,491,428,482,464],
[422,0,444,387,455,390,440,477],
[440,446,0,436,452,417,433,512],
[461,503,454,0,466,470,426,433],
[399,435,438,424,0,355,388,434],
[462,500,473,420,535,0,414,555],
[408,450,457,464,502,476,0,479],
[426,413,378,457,456,335,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,438,449,411,479,411,405],
[448,0,426,450,376,469,417,405],
[452,464,0,493,442,501,447,434],
[441,440,397,0,427,479,383,437],
[479,514,448,463,0,505,449,439],
[411,421,389,411,385,0,396,362],
[479,473,443,507,441,494,0,448],
[485,485,456,453,451,528,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,536,537,490,424,529,448,439],
[354,0,444,460,432,476,404,449],
[353,446,0,494,479,450,482,464],
[400,430,396,0,429,388,429,466],
[466,458,411,461,0,454,476,390],
[361,414,440,502,436,0,434,480],
[442,486,408,461,414,456,0,482],
[451,441,426,424,500,410,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,430,460,434,426,458,423],
[457,0,439,475,445,462,498,441],
[460,451,0,491,441,472,515,443],
[430,415,399,0,405,392,432,429],
[456,445,449,485,0,477,464,435],
[464,428,418,498,413,0,474,455],
[432,392,375,458,426,416,0,417],
[467,449,447,461,455,435,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,451,481,450,456,468,441],
[394,0,416,436,438,421,426,419],
[439,474,0,426,453,397,438,429],
[409,454,464,0,438,443,442,477],
[440,452,437,452,0,420,449,444],
[434,469,493,447,470,0,450,464],
[422,464,452,448,441,440,0,445],
[449,471,461,413,446,426,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,443,476,444,457,435,462],
[446,0,473,461,446,461,432,461],
[447,417,0,473,435,465,434,480],
[414,429,417,0,413,438,420,438],
[446,444,455,477,0,479,454,464],
[433,429,425,452,411,0,423,437],
[455,458,456,470,436,467,0,478],
[428,429,410,452,426,453,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,463,456,465,417,437,466],
[435,0,444,432,466,410,418,447],
[427,446,0,416,454,416,430,451],
[434,458,474,0,447,443,435,437],
[425,424,436,443,0,451,442,451],
[473,480,474,447,439,0,462,483],
[453,472,460,455,448,428,0,485],
[424,443,439,453,439,407,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,428,495,477,463,492,539],
[416,0,449,500,450,423,408,486],
[462,441,0,467,446,423,437,512],
[395,390,423,0,387,408,377,430],
[413,440,444,503,0,430,427,478],
[427,467,467,482,460,0,443,545],
[398,482,453,513,463,447,0,482],
[351,404,378,460,412,345,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,453,468,464,439,454,463],
[416,0,426,421,420,411,391,437],
[437,464,0,452,422,420,403,434],
[422,469,438,0,432,408,388,422],
[426,470,468,458,0,476,437,424],
[451,479,470,482,414,0,458,428],
[436,499,487,502,453,432,0,455],
[427,453,456,468,466,462,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,554,600,428,518,423,521],
[502,0,473,457,359,441,435,358],
[336,417,0,458,324,463,283,338],
[290,433,432,0,214,535,294,218],
[462,531,566,676,0,566,416,345],
[372,449,427,355,324,0,338,244],
[467,455,607,596,474,552,0,408],
[369,532,552,672,545,646,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,425,423,453,462,436,434],
[460,0,439,411,446,460,459,487],
[465,451,0,429,444,459,455,463],
[467,479,461,0,453,486,436,425],
[437,444,446,437,0,427,451,440],
[428,430,431,404,463,0,442,436],
[454,431,435,454,439,448,0,421],
[456,403,427,465,450,454,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,423,431,406,423,416,430],
[439,0,396,437,404,475,403,407],
[467,494,0,467,452,483,452,436],
[459,453,423,0,407,454,441,436],
[484,486,438,483,0,496,447,471],
[467,415,407,436,394,0,425,426],
[474,487,438,449,443,465,0,462],
[460,483,454,454,419,464,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,482,462,456,443,477,490],
[447,0,530,495,443,460,485,512],
[408,360,0,406,390,405,419,432],
[428,395,484,0,411,438,454,475],
[434,447,500,479,0,460,486,451],
[447,430,485,452,430,0,477,484],
[413,405,471,436,404,413,0,475],
[400,378,458,415,439,406,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,468,444,474,493,449,430],
[437,0,460,431,483,409,408,450],
[422,430,0,438,486,509,459,462],
[446,459,452,0,475,443,426,441],
[416,407,404,415,0,403,390,403],
[397,481,381,447,487,0,411,480],
[441,482,431,464,500,479,0,451],
[460,440,428,449,487,410,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,431,475,442,463,483,451],
[454,0,418,434,473,442,441,474],
[459,472,0,472,458,468,483,440],
[415,456,418,0,437,422,471,474],
[448,417,432,453,0,452,455,434],
[427,448,422,468,438,0,467,432],
[407,449,407,419,435,423,0,457],
[439,416,450,416,456,458,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,487,457,483,475,450,416],
[417,0,452,432,456,464,421,413],
[403,438,0,432,479,443,396,436],
[433,458,458,0,490,459,429,450],
[407,434,411,400,0,452,366,399],
[415,426,447,431,438,0,401,420],
[440,469,494,461,524,489,0,463],
[474,477,454,440,491,470,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,465,435,492,453,442,449],
[424,0,437,454,468,444,452,449],
[425,453,0,434,453,430,481,443],
[455,436,456,0,476,437,454,436],
[398,422,437,414,0,398,414,435],
[437,446,460,453,492,0,416,454],
[448,438,409,436,476,474,0,424],
[441,441,447,454,455,436,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,453,444,445,442,441,451],
[437,0,446,453,437,443,436,448],
[437,444,0,472,441,439,431,459],
[446,437,418,0,423,445,423,427],
[445,453,449,467,0,451,444,465],
[448,447,451,445,439,0,465,446],
[449,454,459,467,446,425,0,440],
[439,442,431,463,425,444,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,471,451,449,456,438,478],
[445,0,455,446,462,454,449,465],
[419,435,0,417,440,429,430,449],
[439,444,473,0,457,446,439,479],
[441,428,450,433,0,461,426,474],
[434,436,461,444,429,0,435,480],
[452,441,460,451,464,455,0,492],
[412,425,441,411,416,410,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,203,203,528,333,453,492],
[501,0,203,56,195,381,306,492],
[687,687,0,362,687,687,492,687],
[687,834,528,0,381,381,687,687],
[362,695,203,509,0,242,306,492],
[557,509,203,509,648,0,453,492],
[437,584,398,203,584,437,0,743],
[398,398,203,203,398,398,147,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,423,462,414,503,456,460],
[420,0,431,474,450,450,485,435],
[467,459,0,477,416,479,485,476],
[428,416,413,0,416,442,444,419],
[476,440,474,474,0,469,494,490],
[387,440,411,448,421,0,449,451],
[434,405,405,446,396,441,0,448],
[430,455,414,471,400,439,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,465,477,474,434,414,424],
[478,0,449,488,458,444,451,468],
[425,441,0,477,490,437,440,402],
[413,402,413,0,418,448,425,398],
[416,432,400,472,0,419,392,437],
[456,446,453,442,471,0,444,430],
[476,439,450,465,498,446,0,439],
[466,422,488,492,453,460,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,477,482,479,500,445,505],
[426,0,500,509,483,486,457,514],
[413,390,0,479,445,472,412,430],
[408,381,411,0,429,447,403,435],
[411,407,445,461,0,476,438,439],
[390,404,418,443,414,0,405,442],
[445,433,478,487,452,485,0,456],
[385,376,460,455,451,448,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,454,443,454,466,447,457],
[427,0,447,451,450,443,443,452],
[436,443,0,440,432,454,439,450],
[447,439,450,0,466,469,434,456],
[436,440,458,424,0,445,437,445],
[424,447,436,421,445,0,435,438],
[443,447,451,456,453,455,0,437],
[433,438,440,434,445,452,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,447,440,439,437,445,434],
[470,0,452,450,465,447,458,434],
[443,438,0,442,442,452,447,429],
[450,440,448,0,459,444,463,435],
[451,425,448,431,0,425,466,422],
[453,443,438,446,465,0,450,449],
[445,432,443,427,424,440,0,434],
[456,456,461,455,468,441,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,458,456,469,490,443,486],
[442,0,447,435,465,480,470,456],
[432,443,0,429,453,450,449,469],
[434,455,461,0,465,471,439,452],
[421,425,437,425,0,455,435,420],
[400,410,440,419,435,0,417,425],
[447,420,441,451,455,473,0,435],
[404,434,421,438,470,465,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,453,442,451,462,447,462],
[449,0,444,436,449,453,439,444],
[437,446,0,441,438,455,437,445],
[448,454,449,0,450,449,442,457],
[439,441,452,440,0,449,460,422],
[428,437,435,441,441,0,439,452],
[443,451,453,448,430,451,0,435],
[428,446,445,433,468,438,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,426,459,439,424,407,380],
[448,0,437,457,413,459,354,373],
[464,453,0,445,407,460,449,422],
[431,433,445,0,425,419,382,394],
[451,477,483,465,0,463,430,429],
[466,431,430,471,427,0,386,382],
[483,536,441,508,460,504,0,474],
[510,517,468,496,461,508,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,432,449,440,479,435,450],
[444,0,455,488,447,465,451,462],
[458,435,0,456,460,472,471,455],
[441,402,434,0,414,440,450,436],
[450,443,430,476,0,461,465,443],
[411,425,418,450,429,0,440,429],
[455,439,419,440,425,450,0,435],
[440,428,435,454,447,461,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,517,470,493,479,491,428,451],
[373,0,431,426,407,431,393,396],
[420,459,0,443,458,437,431,434],
[397,464,447,0,432,438,385,429],
[411,483,432,458,0,457,407,417],
[399,459,453,452,433,0,468,428],
[462,497,459,505,483,422,0,466],
[439,494,456,461,473,462,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,542,468,492,422,498,445,494],
[348,0,395,415,360,445,400,451],
[422,495,0,404,467,448,421,442],
[398,475,486,0,472,451,432,482],
[468,530,423,418,0,431,430,467],
[392,445,442,439,459,0,416,443],
[445,490,469,458,460,474,0,521],
[396,439,448,408,423,447,369,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,432,433,489,455,523,515],
[442,0,521,480,438,365,547,516],
[458,369,0,498,420,485,523,406],
[457,410,392,0,361,438,338,456],
[401,452,470,529,0,482,468,547],
[435,525,405,452,408,0,428,509],
[367,343,367,552,422,462,0,413],
[375,374,484,434,343,381,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,453,452,425,454,439,442],
[433,0,444,436,425,455,429,431],
[437,446,0,415,418,438,433,418],
[438,454,475,0,450,460,451,449],
[465,465,472,440,0,446,437,447],
[436,435,452,430,444,0,442,451],
[451,461,457,439,453,448,0,439],
[448,459,472,441,443,439,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,450,456,476,436,446,423],
[440,0,445,466,448,462,442,440],
[440,445,0,435,464,409,445,436],
[434,424,455,0,484,433,458,433],
[414,442,426,406,0,417,395,404],
[454,428,481,457,473,0,450,431],
[444,448,445,432,495,440,0,449],
[467,450,454,457,486,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,438,433,429,446,447,436],
[449,0,438,435,461,451,458,439],
[452,452,0,455,466,442,436,409],
[457,455,435,0,460,432,423,444],
[461,429,424,430,0,424,411,459],
[444,439,448,458,466,0,438,461],
[443,432,454,467,479,452,0,433],
[454,451,481,446,431,429,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,457,471,479,438,406,384],
[410,0,517,532,406,497,431,426],
[433,373,0,390,408,503,470,411],
[419,358,500,0,435,537,480,451],
[411,484,482,455,0,448,447,346],
[452,393,387,353,442,0,383,353],
[484,459,420,410,443,507,0,389],
[506,464,479,439,544,537,501,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,443,468,443,429,451,460],
[451,0,441,438,456,447,443,425],
[447,449,0,468,428,437,458,437],
[422,452,422,0,439,426,454,412],
[447,434,462,451,0,451,453,444],
[461,443,453,464,439,0,457,428],
[439,447,432,436,437,433,0,425],
[430,465,453,478,446,462,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,445,457,446,459,446,456],
[454,0,465,445,448,454,457,434],
[445,425,0,420,435,459,443,432],
[433,445,470,0,452,458,456,445],
[444,442,455,438,0,463,475,440],
[431,436,431,432,427,0,438,426],
[444,433,447,434,415,452,0,446],
[434,456,458,445,450,464,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,459,464,448,445,461,456],
[452,0,483,499,439,447,474,427],
[431,407,0,488,438,481,439,442],
[426,391,402,0,387,410,432,386],
[442,451,452,503,0,453,457,416],
[445,443,409,480,437,0,467,449],
[429,416,451,458,433,423,0,456],
[434,463,448,504,474,441,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,444,460,465,446,422,433],
[445,0,465,458,442,477,435,451],
[446,425,0,461,470,446,432,447],
[430,432,429,0,457,454,409,441],
[425,448,420,433,0,424,420,425],
[444,413,444,436,466,0,421,421],
[468,455,458,481,470,469,0,436],
[457,439,443,449,465,469,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,435,439,431,443,431,419],
[426,0,426,430,431,421,435,409],
[455,464,0,452,447,431,448,435],
[451,460,438,0,430,444,427,436],
[459,459,443,460,0,461,437,444],
[447,469,459,446,429,0,434,443],
[459,455,442,463,453,456,0,453],
[471,481,455,454,446,447,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,537,474,497,524,424,427],
[361,0,417,393,385,281,464,403],
[353,473,0,416,398,358,465,388],
[416,497,474,0,462,382,436,416],
[393,505,492,428,0,390,513,453],
[366,609,532,508,500,0,481,490],
[466,426,425,454,377,409,0,316],
[463,487,502,474,437,400,574,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,461,475,556,507,448,444],
[426,0,460,464,494,433,447,531],
[429,430,0,445,471,479,511,468],
[415,426,445,0,489,471,466,452],
[334,396,419,401,0,387,436,394],
[383,457,411,419,503,0,396,461],
[442,443,379,424,454,494,0,429],
[446,359,422,438,496,429,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,485,463,445,460,468,463],
[444,0,443,435,428,418,438,406],
[405,447,0,450,404,424,434,437],
[427,455,440,0,401,426,410,401],
[445,462,486,489,0,450,460,433],
[430,472,466,464,440,0,466,449],
[422,452,456,480,430,424,0,422],
[427,484,453,489,457,441,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,442,414,429,467,429,447],
[462,0,446,423,448,451,446,445],
[448,444,0,430,413,461,419,441],
[476,467,460,0,453,478,440,447],
[461,442,477,437,0,469,433,452],
[423,439,429,412,421,0,428,425],
[461,444,471,450,457,462,0,463],
[443,445,449,443,438,465,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,432,441,422,416,399,436],
[459,0,440,457,452,433,435,469],
[458,450,0,463,458,448,426,480],
[449,433,427,0,451,432,424,452],
[468,438,432,439,0,415,430,460],
[474,457,442,458,475,0,460,479],
[491,455,464,466,460,430,0,474],
[454,421,410,438,430,411,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,401,424,429,411,426,425],
[467,0,435,407,447,441,428,433],
[489,455,0,439,405,478,467,451],
[466,483,451,0,459,434,418,445],
[461,443,485,431,0,460,481,469],
[479,449,412,456,430,0,460,450],
[464,462,423,472,409,430,0,466],
[465,457,439,445,421,440,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,448,450,456,425,440,438],
[457,0,483,445,447,447,459,448],
[442,407,0,431,425,440,438,431],
[440,445,459,0,448,446,448,426],
[434,443,465,442,0,431,440,438],
[465,443,450,444,459,0,444,464],
[450,431,452,442,450,446,0,442],
[452,442,459,464,452,426,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,458,439,436,465,435,452],
[430,0,444,425,426,468,436,415],
[432,446,0,439,421,466,464,410],
[451,465,451,0,437,434,438,415],
[454,464,469,453,0,446,458,435],
[425,422,424,456,444,0,455,422],
[455,454,426,452,432,435,0,455],
[438,475,480,475,455,468,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,435,453,448,431,448,452],
[463,0,454,429,455,422,467,443],
[455,436,0,420,441,424,459,423],
[437,461,470,0,439,432,463,447],
[442,435,449,451,0,422,453,438],
[459,468,466,458,468,0,456,443],
[442,423,431,427,437,434,0,446],
[438,447,467,443,452,447,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,443,430,438,446,432,439],
[490,0,479,443,453,467,459,466],
[447,411,0,433,436,440,435,454],
[460,447,457,0,426,450,448,448],
[452,437,454,464,0,446,442,440],
[444,423,450,440,444,0,469,456],
[458,431,455,442,448,421,0,459],
[451,424,436,442,450,434,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,435,471,443,454,435,426],
[428,0,421,452,441,445,469,411],
[455,469,0,497,470,454,445,460],
[419,438,393,0,403,437,419,405],
[447,449,420,487,0,435,454,429],
[436,445,436,453,455,0,444,442],
[455,421,445,471,436,446,0,426],
[464,479,430,485,461,448,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,603,428,253,569,383,337,569],
[287,0,474,302,440,440,245,141],
[462,416,0,495,554,395,465,554],
[637,588,395,0,361,649,606,554],
[321,450,336,529,0,429,245,227],
[507,450,495,241,461,0,465,416],
[553,645,425,284,645,425,0,600],
[321,749,336,336,663,474,290,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,471,436,466,478,424,427],
[436,0,491,436,461,493,451,442],
[419,399,0,423,439,460,416,412],
[454,454,467,0,448,464,449,410],
[424,429,451,442,0,425,424,404],
[412,397,430,426,465,0,436,424],
[466,439,474,441,466,454,0,445],
[463,448,478,480,486,466,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,445,453,438,436,436,437],
[458,0,465,429,440,424,445,451],
[445,425,0,455,447,432,432,434],
[437,461,435,0,450,436,466,449],
[452,450,443,440,0,434,449,444],
[454,466,458,454,456,0,445,473],
[454,445,458,424,441,445,0,460],
[453,439,456,441,446,417,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,459,474,466,458,431,467],
[468,0,450,460,462,449,425,450],
[431,440,0,495,454,447,458,480],
[416,430,395,0,451,416,401,450],
[424,428,436,439,0,443,419,456],
[432,441,443,474,447,0,436,463],
[459,465,432,489,471,454,0,478],
[423,440,410,440,434,427,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,457,445,448,438,439,490],
[426,0,449,458,411,412,453,444],
[433,441,0,473,435,461,450,452],
[445,432,417,0,408,433,431,440],
[442,479,455,482,0,416,460,456],
[452,478,429,457,474,0,482,494],
[451,437,440,459,430,408,0,444],
[400,446,438,450,434,396,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,456,453,456,418,447,493],
[400,0,458,385,441,412,401,488],
[434,432,0,421,445,386,423,451],
[437,505,469,0,475,497,443,469],
[434,449,445,415,0,456,416,487],
[472,478,504,393,434,0,454,520],
[443,489,467,447,474,436,0,493],
[397,402,439,421,403,370,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,426,462,448,416,465,426],
[486,0,451,477,500,435,455,436],
[464,439,0,479,431,438,445,448],
[428,413,411,0,449,406,424,406],
[442,390,459,441,0,412,415,446],
[474,455,452,484,478,0,459,434],
[425,435,445,466,475,431,0,455],
[464,454,442,484,444,456,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,440,424,436,431,459,449],
[435,0,434,429,444,431,432,447],
[450,456,0,441,450,441,447,432],
[466,461,449,0,469,427,440,443],
[454,446,440,421,0,422,418,436],
[459,459,449,463,468,0,447,442],
[431,458,443,450,472,443,0,454],
[441,443,458,447,454,448,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,458,441,470,455,450,427],
[450,0,451,412,465,441,466,464],
[432,439,0,449,454,450,455,429],
[449,478,441,0,482,432,452,446],
[420,425,436,408,0,438,428,424],
[435,449,440,458,452,0,469,449],
[440,424,435,438,462,421,0,447],
[463,426,461,444,466,441,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,461,505,447,434,477,458],
[425,0,443,459,433,452,451,435],
[429,447,0,450,444,412,467,438],
[385,431,440,0,451,436,454,456],
[443,457,446,439,0,425,491,441],
[456,438,478,454,465,0,475,443],
[413,439,423,436,399,415,0,420],
[432,455,452,434,449,447,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,454,467,499,438,463,465],
[444,0,461,426,437,449,446,444],
[436,429,0,424,442,422,444,425],
[423,464,466,0,480,479,457,476],
[391,453,448,410,0,423,442,415],
[452,441,468,411,467,0,459,437],
[427,444,446,433,448,431,0,440],
[425,446,465,414,475,453,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,436,479,455,435,423,437],
[415,0,409,455,421,443,413,432],
[454,481,0,446,470,455,447,428],
[411,435,444,0,445,449,435,424],
[435,469,420,445,0,420,454,428],
[455,447,435,441,470,0,424,448],
[467,477,443,455,436,466,0,444],
[453,458,462,466,462,442,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,437,461,413,434,437,487],
[434,0,463,426,438,435,428,451],
[453,427,0,451,467,425,463,469],
[429,464,439,0,459,458,451,457],
[477,452,423,431,0,408,432,463],
[456,455,465,432,482,0,439,482],
[453,462,427,439,458,451,0,469],
[403,439,421,433,427,408,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,425,427,434,416,460,450],
[485,0,439,449,472,426,465,434],
[465,451,0,455,475,432,434,449],
[463,441,435,0,433,445,438,442],
[456,418,415,457,0,408,457,458],
[474,464,458,445,482,0,448,463],
[430,425,456,452,433,442,0,441],
[440,456,441,448,432,427,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,470,392,394,400,433,361],
[476,0,476,472,466,455,522,433],
[420,414,0,435,414,378,457,415],
[498,418,455,0,450,399,476,410],
[496,424,476,440,0,427,428,378],
[490,435,512,491,463,0,477,455],
[457,368,433,414,462,413,0,439],
[529,457,475,480,512,435,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,427,471,442,423,458,443],
[461,0,456,481,440,447,453,461],
[463,434,0,460,452,450,471,453],
[419,409,430,0,432,432,425,430],
[448,450,438,458,0,441,448,430],
[467,443,440,458,449,0,464,438],
[432,437,419,465,442,426,0,437],
[447,429,437,460,460,452,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,459,421,430,469,430,442],
[455,0,467,471,448,492,437,464],
[431,423,0,424,416,427,441,444],
[469,419,466,0,463,454,461,462],
[460,442,474,427,0,461,458,434],
[421,398,463,436,429,0,442,417],
[460,453,449,429,432,448,0,442],
[448,426,446,428,456,473,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,458,428,438,448,456,431],
[462,0,449,441,444,442,464,437],
[432,441,0,449,441,436,447,455],
[462,449,441,0,438,433,479,429],
[452,446,449,452,0,461,464,437],
[442,448,454,457,429,0,460,442],
[434,426,443,411,426,430,0,425],
[459,453,435,461,453,448,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,451,402,454,444,448,429],
[448,0,462,428,456,471,445,463],
[439,428,0,465,463,463,466,472],
[488,462,425,0,440,460,430,444],
[436,434,427,450,0,452,458,437],
[446,419,427,430,438,0,448,443],
[442,445,424,460,432,442,0,428],
[461,427,418,446,453,447,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,478,514,473,458,436,470],
[447,0,467,463,433,416,415,459],
[412,423,0,430,407,393,391,414],
[376,427,460,0,397,396,443,430],
[417,457,483,493,0,423,440,463],
[432,474,497,494,467,0,488,513],
[454,475,499,447,450,402,0,475],
[420,431,476,460,427,377,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,451,403,501,485,493,396],
[440,0,427,428,483,452,461,420],
[439,463,0,492,505,448,467,421],
[487,462,398,0,456,472,418,367],
[389,407,385,434,0,423,386,400],
[405,438,442,418,467,0,378,456],
[397,429,423,472,504,512,0,461],
[494,470,469,523,490,434,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,418,413,425,430,428],
[446,0,447,430,440,449,423,435],
[454,443,0,430,433,455,432,441],
[472,460,460,0,435,452,457,451],
[477,450,457,455,0,466,453,441],
[465,441,435,438,424,0,446,436],
[460,467,458,433,437,444,0,438],
[462,455,449,439,449,454,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,460,457,452,471,450,439],
[429,0,430,428,459,456,452,433],
[430,460,0,441,439,471,445,446],
[433,462,449,0,450,478,458,447],
[438,431,451,440,0,449,461,448],
[419,434,419,412,441,0,443,422],
[440,438,445,432,429,447,0,435],
[451,457,444,443,442,468,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,438,422,446,448,437],
[445,0,458,440,428,445,446,461],
[445,432,0,421,425,431,426,433],
[452,450,469,0,443,449,476,455],
[468,462,465,447,0,432,463,455],
[444,445,459,441,458,0,446,446],
[442,444,464,414,427,444,0,446],
[453,429,457,435,435,444,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,432,421,444,432,437,436],
[455,0,430,456,434,451,451,450],
[458,460,0,436,442,459,435,443],
[469,434,454,0,448,449,424,453],
[446,456,448,442,0,438,449,434],
[458,439,431,441,452,0,450,448],
[453,439,455,466,441,440,0,423],
[454,440,447,437,456,442,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,452,447,471,441,468,457],
[427,0,419,444,446,447,450,439],
[438,471,0,445,446,437,457,438],
[443,446,445,0,446,442,440,445],
[419,444,444,444,0,428,439,454],
[449,443,453,448,462,0,454,437],
[422,440,433,450,451,436,0,428],
[433,451,452,445,436,453,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,575,601,498,432,594,481,430],
[315,0,450,457,420,422,428,414],
[289,440,0,463,382,548,541,564],
[392,433,427,0,424,389,393,388],
[458,470,508,466,0,425,401,480],
[296,468,342,501,465,0,450,458],
[409,462,349,497,489,440,0,425],
[460,476,326,502,410,432,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,451,422,420,406,409,419],
[467,0,449,468,452,422,425,446],
[439,441,0,450,447,417,433,418],
[468,422,440,0,461,425,433,437],
[470,438,443,429,0,436,423,437],
[484,468,473,465,454,0,431,442],
[481,465,457,457,467,459,0,443],
[471,444,472,453,453,448,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,447,442,425,447,446,451],
[450,0,428,423,434,434,434,448],
[443,462,0,458,460,482,466,453],
[448,467,432,0,454,471,421,449],
[465,456,430,436,0,453,446,449],
[443,456,408,419,437,0,444,428],
[444,456,424,469,444,446,0,459],
[439,442,437,441,441,462,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,438,458,447,469,440,457],
[420,0,431,448,430,449,421,446],
[452,459,0,458,466,459,432,461],
[432,442,432,0,444,455,436,417],
[443,460,424,446,0,445,446,463],
[421,441,431,435,445,0,424,423],
[450,469,458,454,444,466,0,459],
[433,444,429,473,427,467,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,465,462,432,458,437,453],
[422,0,439,447,438,447,445,439],
[425,451,0,472,460,443,421,432],
[428,443,418,0,428,426,415,422],
[458,452,430,462,0,450,434,423],
[432,443,447,464,440,0,434,414],
[453,445,469,475,456,456,0,439],
[437,451,458,468,467,476,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,460,446,471,472,443,453],
[428,0,439,450,444,430,425,427],
[430,451,0,446,448,438,448,430],
[444,440,444,0,455,453,447,440],
[419,446,442,435,0,450,446,421],
[418,460,452,437,440,0,458,430],
[447,465,442,443,444,432,0,430],
[437,463,460,450,469,460,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,463,414,418,459,481,489],
[461,0,446,428,448,522,499,543],
[427,444,0,519,454,462,452,528],
[476,462,371,0,419,469,536,595],
[472,442,436,471,0,417,531,506],
[431,368,428,421,473,0,457,470],
[409,391,438,354,359,433,0,496],
[401,347,362,295,384,420,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,445,404,425,422,438,431],
[452,0,470,424,449,438,417,414],
[445,420,0,389,410,429,403,412],
[486,466,501,0,468,475,472,445],
[465,441,480,422,0,435,431,452],
[468,452,461,415,455,0,447,441],
[452,473,487,418,459,443,0,438],
[459,476,478,445,438,449,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,475,432,477,482,445,482],
[414,0,429,435,444,452,454,480],
[415,461,0,463,456,484,443,484],
[458,455,427,0,471,483,470,476],
[413,446,434,419,0,462,445,501],
[408,438,406,407,428,0,430,456],
[445,436,447,420,445,460,0,473],
[408,410,406,414,389,434,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,459,463,442,472,469,452],
[426,0,455,463,437,457,470,437],
[431,435,0,451,442,458,435,420],
[427,427,439,0,430,449,437,399],
[448,453,448,460,0,465,460,435],
[418,433,432,441,425,0,446,431],
[421,420,455,453,430,444,0,422],
[438,453,470,491,455,459,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,360,469,467,374,402,432],
[467,0,516,487,457,425,541,522],
[530,374,0,403,419,493,446,463],
[421,403,487,0,369,423,458,548],
[423,433,471,521,0,413,336,480],
[516,465,397,467,477,0,408,385],
[488,349,444,432,554,482,0,443],
[458,368,427,342,410,505,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,481,447,431,453,466,467],
[413,0,453,439,455,433,468,452],
[409,437,0,426,418,433,429,429],
[443,451,464,0,448,467,463,453],
[459,435,472,442,0,439,480,454],
[437,457,457,423,451,0,451,443],
[424,422,461,427,410,439,0,454],
[423,438,461,437,436,447,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,410,381,452,410,421,429],
[467,0,438,426,452,457,442,451],
[480,452,0,421,463,437,439,439],
[509,464,469,0,480,465,458,427],
[438,438,427,410,0,423,442,434],
[480,433,453,425,467,0,447,426],
[469,448,451,432,448,443,0,444],
[461,439,451,463,456,464,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,465,449,469,434,455,443],
[443,0,437,460,454,420,448,421],
[425,453,0,431,443,429,435,464],
[441,430,459,0,468,426,439,453],
[421,436,447,422,0,410,428,451],
[456,470,461,464,480,0,433,455],
[435,442,455,451,462,457,0,469],
[447,469,426,437,439,435,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,497,429,533,413,400,403],
[413,0,519,412,446,476,429,454],
[393,371,0,369,416,384,420,418],
[461,478,521,0,509,471,422,446],
[357,444,474,381,0,418,403,450],
[477,414,506,419,472,0,471,425],
[490,461,470,468,487,419,0,475],
[487,436,472,444,440,465,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,471,394,809,331,367,321],
[448,0,514,395,614,347,568,604],
[419,376,0,517,839,422,373,544],
[496,495,373,0,660,421,540,511],
[81,276,51,230,0,65,217,171],
[559,543,468,469,825,0,424,663],
[523,322,517,350,673,466,0,469],
[569,286,346,379,719,227,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,440,425,425,407,407,436],
[448,0,472,441,413,400,428,421],
[450,418,0,408,374,429,404,401],
[465,449,482,0,419,438,407,446],
[465,477,516,471,0,450,427,441],
[483,490,461,452,440,0,427,445],
[483,462,486,483,463,463,0,445],
[454,469,489,444,449,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,456,464,427,466,415,449],
[457,0,427,444,419,430,426,444],
[434,463,0,475,426,469,440,487],
[426,446,415,0,426,445,410,447],
[463,471,464,464,0,450,446,443],
[424,460,421,445,440,0,405,431],
[475,464,450,480,444,485,0,472],
[441,446,403,443,447,459,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,534,452,490,484,441],
[449,0,427,500,467,457,420,430],
[447,463,0,454,393,428,435,420],
[356,390,436,0,405,384,409,403],
[438,423,497,485,0,423,380,407],
[400,433,462,506,467,0,422,474],
[406,470,455,481,510,468,0,426],
[449,460,470,487,483,416,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,445,452,418,430,467,465],
[446,0,450,456,438,437,456,459],
[445,440,0,455,425,426,460,458],
[438,434,435,0,466,428,451,434],
[472,452,465,424,0,462,461,480],
[460,453,464,462,428,0,462,488],
[423,434,430,439,429,428,0,482],
[425,431,432,456,410,402,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,500,458,465,483,429,446],
[412,0,467,421,430,458,416,446],
[390,423,0,396,408,463,430,445],
[432,469,494,0,440,486,465,464],
[425,460,482,450,0,493,459,485],
[407,432,427,404,397,0,409,449],
[461,474,460,425,431,481,0,452],
[444,444,445,426,405,441,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,456,505,426,489,442,483],
[430,0,424,418,417,383,446,497],
[434,466,0,513,449,423,488,517],
[385,472,377,0,412,380,417,457],
[464,473,441,478,0,440,481,458],
[401,507,467,510,450,0,493,509],
[448,444,402,473,409,397,0,456],
[407,393,373,433,432,381,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,431,411,418,435,437,413],
[461,0,430,420,426,433,442,421],
[459,460,0,436,435,449,451,459],
[479,470,454,0,451,449,457,445],
[472,464,455,439,0,424,452,441],
[455,457,441,441,466,0,462,456],
[453,448,439,433,438,428,0,425],
[477,469,431,445,449,434,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,448,456,491,483,452,436],
[433,0,489,507,518,453,440,426],
[442,401,0,441,465,445,431,411],
[434,383,449,0,419,437,443,428],
[399,372,425,471,0,416,429,405],
[407,437,445,453,474,0,425,453],
[438,450,459,447,461,465,0,469],
[454,464,479,462,485,437,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,435,446,439,460,472,447],
[433,0,432,465,439,448,466,434],
[455,458,0,469,445,447,479,458],
[444,425,421,0,437,440,440,442],
[451,451,445,453,0,452,469,451],
[430,442,443,450,438,0,474,433],
[418,424,411,450,421,416,0,446],
[443,456,432,448,439,457,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,431,443,451,431,444,449],
[449,0,428,446,424,433,441,426],
[459,462,0,458,467,421,463,441],
[447,444,432,0,447,420,455,436],
[439,466,423,443,0,445,444,434],
[459,457,469,470,445,0,468,455],
[446,449,427,435,446,422,0,411],
[441,464,449,454,456,435,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,459,457,456,465,437,429],
[457,0,450,440,438,447,454,430],
[431,440,0,436,429,433,434,433],
[433,450,454,0,440,441,437,440],
[434,452,461,450,0,455,417,419],
[425,443,457,449,435,0,420,432],
[453,436,456,453,473,470,0,447],
[461,460,457,450,471,458,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,391,424,469,453,422,424],
[434,0,392,444,434,463,414,500],
[499,498,0,528,464,495,432,438],
[466,446,362,0,443,451,422,419],
[421,456,426,447,0,482,450,430],
[437,427,395,439,408,0,400,435],
[468,476,458,468,440,490,0,444],
[466,390,452,471,460,455,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,431,438,445,456,462,441],
[439,0,434,467,457,474,470,397],
[459,456,0,460,455,448,453,433],
[452,423,430,0,434,442,431,417],
[445,433,435,456,0,460,439,434],
[434,416,442,448,430,0,436,415],
[428,420,437,459,451,454,0,452],
[449,493,457,473,456,475,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,411,429,442,449,485,440],
[429,0,414,437,396,427,454,424],
[479,476,0,470,441,469,442,459],
[461,453,420,0,454,448,449,455],
[448,494,449,436,0,476,499,463],
[441,463,421,442,414,0,448,427],
[405,436,448,441,391,442,0,439],
[450,466,431,435,427,463,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,440,468,452,444,457,525],
[418,0,449,450,419,483,457,487],
[450,441,0,459,417,451,454,498],
[422,440,431,0,384,428,437,458],
[438,471,473,506,0,462,478,484],
[446,407,439,462,428,0,401,427],
[433,433,436,453,412,489,0,466],
[365,403,392,432,406,463,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,462,471,461,459,454,467],
[452,0,437,478,480,438,486,465],
[428,453,0,462,468,445,438,420],
[419,412,428,0,469,413,419,411],
[429,410,422,421,0,446,449,418],
[431,452,445,477,444,0,447,437],
[436,404,452,471,441,443,0,445],
[423,425,470,479,472,453,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,436,423,459,424,427,429],
[449,0,432,434,439,425,412,421],
[454,458,0,458,444,444,452,441],
[467,456,432,0,438,412,442,454],
[431,451,446,452,0,438,457,437],
[466,465,446,478,452,0,454,436],
[463,478,438,448,433,436,0,435],
[461,469,449,436,453,454,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,465,465,458,435,438,423],
[478,0,477,469,468,445,445,450],
[425,413,0,443,439,407,449,432],
[425,421,447,0,434,418,427,446],
[432,422,451,456,0,416,440,426],
[455,445,483,472,474,0,452,449],
[452,445,441,463,450,438,0,442],
[467,440,458,444,464,441,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,444,424,457,417,403,506],
[479,0,513,416,447,430,470,487],
[446,377,0,435,456,423,421,400],
[466,474,455,0,436,445,404,512],
[433,443,434,454,0,430,444,450],
[473,460,467,445,460,0,385,492],
[487,420,469,486,446,505,0,499],
[384,403,490,378,440,398,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,432,501,475,455,488,442],
[414,0,427,475,454,445,435,388],
[458,463,0,490,483,464,474,432],
[389,415,400,0,440,408,437,386],
[415,436,407,450,0,417,420,371],
[435,445,426,482,473,0,440,451],
[402,455,416,453,470,450,0,420],
[448,502,458,504,519,439,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,438,396,471,416,443,401],
[482,0,440,449,497,439,468,484],
[452,450,0,480,488,452,444,471],
[494,441,410,0,468,459,462,456],
[419,393,402,422,0,409,418,432],
[474,451,438,431,481,0,410,478],
[447,422,446,428,472,480,0,462],
[489,406,419,434,458,412,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,405,446,430,455,424,442],
[471,0,429,451,438,471,434,454],
[485,461,0,462,465,458,417,461],
[444,439,428,0,441,429,420,460],
[460,452,425,449,0,432,447,479],
[435,419,432,461,458,0,434,435],
[466,456,473,470,443,456,0,469],
[448,436,429,430,411,455,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,427,424,410,420,427,427],
[466,0,460,440,466,465,466,463],
[463,430,0,456,459,438,446,475],
[466,450,434,0,448,460,429,439],
[480,424,431,442,0,446,444,476],
[470,425,452,430,444,0,432,453],
[463,424,444,461,446,458,0,472],
[463,427,415,451,414,437,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,458,439,458,398,410,428],
[418,0,436,406,457,381,402,368],
[432,454,0,403,444,395,419,378],
[451,484,487,0,489,422,456,433],
[432,433,446,401,0,420,425,418],
[492,509,495,468,470,0,438,435],
[480,488,471,434,465,452,0,449],
[462,522,512,457,472,455,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,315,245,290,468,283,233,217],
[575,0,529,429,396,543,432,391],
[645,361,0,407,461,337,365,506],
[600,461,483,0,435,525,405,367],
[422,494,429,455,0,388,398,395],
[607,347,553,365,502,0,334,478],
[657,458,525,485,492,556,0,271],
[673,499,384,523,495,412,619,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,436,431,443,419,454,437],
[445,0,457,454,448,428,461,454],
[454,433,0,444,442,450,457,440],
[459,436,446,0,439,443,458,466],
[447,442,448,451,0,455,454,447],
[471,462,440,447,435,0,474,460],
[436,429,433,432,436,416,0,431],
[453,436,450,424,443,430,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,452,457,488,481,443,483],
[432,0,449,453,484,451,443,468],
[438,441,0,434,472,457,453,483],
[433,437,456,0,504,430,465,478],
[402,406,418,386,0,391,399,453],
[409,439,433,460,499,0,445,464],
[447,447,437,425,491,445,0,473],
[407,422,407,412,437,426,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,455,432,454,490,456,445],
[431,0,443,452,450,505,444,486],
[435,447,0,451,435,446,437,465],
[458,438,439,0,435,463,450,489],
[436,440,455,455,0,485,468,467],
[400,385,444,427,405,0,426,438],
[434,446,453,440,422,464,0,436],
[445,404,425,401,423,452,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,391,405,420,425,438,436],
[475,0,433,438,447,462,469,472],
[499,457,0,467,432,464,461,460],
[485,452,423,0,434,441,457,463],
[470,443,458,456,0,443,463,453],
[465,428,426,449,447,0,445,475],
[452,421,429,433,427,445,0,434],
[454,418,430,427,437,415,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,429,466,479,455,465,455],
[446,0,433,454,476,430,430,429],
[461,457,0,456,476,411,452,448],
[424,436,434,0,472,448,435,476],
[411,414,414,418,0,378,430,427],
[435,460,479,442,512,0,447,462],
[425,460,438,455,460,443,0,457],
[435,461,442,414,463,428,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,461,472,461,464,440,436],
[426,0,457,451,442,439,435,451],
[429,433,0,464,440,439,444,440],
[418,439,426,0,437,412,429,455],
[429,448,450,453,0,438,442,433],
[426,451,451,478,452,0,473,440],
[450,455,446,461,448,417,0,441],
[454,439,450,435,457,450,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,440,433,459,389,428,441],
[428,0,442,422,426,417,411,442],
[450,448,0,430,453,425,426,442],
[457,468,460,0,473,445,454,444],
[431,464,437,417,0,420,433,437],
[501,473,465,445,470,0,444,463],
[462,479,464,436,457,446,0,458],
[449,448,448,446,453,427,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,435,438,443,455,440,437],
[459,0,443,461,457,459,442,452],
[455,447,0,460,465,456,442,460],
[452,429,430,0,430,447,447,439],
[447,433,425,460,0,445,435,438],
[435,431,434,443,445,0,439,447],
[450,448,448,443,455,451,0,441],
[453,438,430,451,452,443,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,464,474,472,481,468,437],
[440,0,444,474,460,497,460,433],
[426,446,0,480,466,461,452,444],
[416,416,410,0,470,458,452,429],
[418,430,424,420,0,411,425,435],
[409,393,429,432,479,0,430,407],
[422,430,438,438,465,460,0,450],
[453,457,446,461,455,483,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,434,452,438,453,430,458],
[437,0,422,424,425,448,431,455],
[456,468,0,428,453,461,446,438],
[438,466,462,0,440,468,450,462],
[452,465,437,450,0,462,444,448],
[437,442,429,422,428,0,433,427],
[460,459,444,440,446,457,0,446],
[432,435,452,428,442,463,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,442,444,439,450,472,462],
[443,0,448,465,422,400,461,479],
[448,442,0,429,444,406,441,415],
[446,425,461,0,477,429,442,485],
[451,468,446,413,0,435,456,494],
[440,490,484,461,455,0,454,506],
[418,429,449,448,434,436,0,457],
[428,411,475,405,396,384,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,412,395,418,462,416,427],
[491,0,492,453,421,462,479,452],
[478,398,0,391,406,427,415,427],
[495,437,499,0,419,463,466,456],
[472,469,484,471,0,452,457,444],
[428,428,463,427,438,0,442,441],
[474,411,475,424,433,448,0,461],
[463,438,463,434,446,449,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,449,432,455,457,445,447],
[424,0,426,424,449,445,430,421],
[441,464,0,442,432,441,446,446],
[458,466,448,0,458,464,453,438],
[435,441,458,432,0,443,451,434],
[433,445,449,426,447,0,437,424],
[445,460,444,437,439,453,0,452],
[443,469,444,452,456,466,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,420,397,449,398,409,468],
[491,0,422,461,457,426,439,509],
[470,468,0,433,486,462,436,466],
[493,429,457,0,465,473,453,471],
[441,433,404,425,0,445,454,447],
[492,464,428,417,445,0,397,478],
[481,451,454,437,436,493,0,496],
[422,381,424,419,443,412,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,465,434,436,461,447,438],
[434,0,427,418,442,445,418,432],
[425,463,0,445,415,422,464,439],
[456,472,445,0,456,464,454,449],
[454,448,475,434,0,461,429,449],
[429,445,468,426,429,0,437,447],
[443,472,426,436,461,453,0,421],
[452,458,451,441,441,443,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,515,460,461,484,448,474],
[445,0,488,430,459,484,465,492],
[375,402,0,415,426,423,423,403],
[430,460,475,0,510,487,425,446],
[429,431,464,380,0,444,415,478],
[406,406,467,403,446,0,378,446],
[442,425,467,465,475,512,0,492],
[416,398,487,444,412,444,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,429,479,469,451,453,478],
[450,0,427,488,475,434,414,458],
[461,463,0,465,462,418,439,486],
[411,402,425,0,460,429,413,452],
[421,415,428,430,0,439,442,453],
[439,456,472,461,451,0,464,494],
[437,476,451,477,448,426,0,460],
[412,432,404,438,437,396,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,412,442,447,445,436,421],
[451,0,435,460,443,437,461,441],
[478,455,0,473,453,443,455,453],
[448,430,417,0,410,454,447,433],
[443,447,437,480,0,456,447,438],
[445,453,447,436,434,0,456,429],
[454,429,435,443,443,434,0,443],
[469,449,437,457,452,461,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,426,459,403,436,448,480],
[451,0,449,481,432,437,440,425],
[464,441,0,451,444,417,465,480],
[431,409,439,0,451,421,404,432],
[487,458,446,439,0,500,455,479],
[454,453,473,469,390,0,445,463],
[442,450,425,486,435,445,0,454],
[410,465,410,458,411,427,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,413,474,441,451,453,483],
[431,0,464,420,477,415,462,481],
[477,426,0,468,486,441,463,499],
[416,470,422,0,490,436,436,469],
[449,413,404,400,0,379,438,454],
[439,475,449,454,511,0,419,473],
[437,428,427,454,452,471,0,436],
[407,409,391,421,436,417,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,449,441,433,455,456,489],
[425,0,433,427,404,452,438,467],
[441,457,0,459,453,457,457,473],
[449,463,431,0,427,453,457,487],
[457,486,437,463,0,495,471,503],
[435,438,433,437,395,0,447,467],
[434,452,433,433,419,443,0,480],
[401,423,417,403,387,423,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,481,459,444,492,444,454],
[417,0,448,453,435,472,433,439],
[409,442,0,437,415,462,401,432],
[431,437,453,0,436,458,454,447],
[446,455,475,454,0,455,457,441],
[398,418,428,432,435,0,441,418],
[446,457,489,436,433,449,0,422],
[436,451,458,443,449,472,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,435,422,430,490,431,470],
[418,0,399,410,440,400,409,420],
[455,491,0,452,392,446,455,418],
[468,480,438,0,429,436,445,412],
[460,450,498,461,0,475,446,445],
[400,490,444,454,415,0,405,414],
[459,481,435,445,444,485,0,456],
[420,470,472,478,445,476,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,424,440,431,436,440,437],
[447,0,440,417,458,447,454,437],
[466,450,0,434,466,449,451,442],
[450,473,456,0,464,444,458,474],
[459,432,424,426,0,449,430,426],
[454,443,441,446,441,0,448,438],
[450,436,439,432,460,442,0,442],
[453,453,448,416,464,452,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,452,432,465,462,428,462],
[442,0,450,434,436,450,450,451],
[438,440,0,430,418,437,442,466],
[458,456,460,0,445,462,451,464],
[425,454,472,445,0,455,438,468],
[428,440,453,428,435,0,439,458],
[462,440,448,439,452,451,0,469],
[428,439,424,426,422,432,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,418,421,431,380,401,434],
[484,0,413,442,462,424,451,451],
[472,477,0,433,464,439,464,454],
[469,448,457,0,458,457,455,439],
[459,428,426,432,0,426,439,435],
[510,466,451,433,464,0,454,466],
[489,439,426,435,451,436,0,426],
[456,439,436,451,455,424,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,445,414,416,447,404,444],
[447,0,428,412,460,434,418,433],
[445,462,0,412,440,463,421,441],
[476,478,478,0,446,463,443,465],
[474,430,450,444,0,436,426,451],
[443,456,427,427,454,0,445,435],
[486,472,469,447,464,445,0,467],
[446,457,449,425,439,455,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,463,438,455,453,470,431],
[457,0,448,432,452,454,457,451],
[427,442,0,430,444,443,456,437],
[452,458,460,0,449,446,465,440],
[435,438,446,441,0,402,428,410],
[437,436,447,444,488,0,458,446],
[420,433,434,425,462,432,0,417],
[459,439,453,450,480,444,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,468,496,399,478,575,522],
[482,0,519,478,394,418,605,504],
[422,371,0,385,461,471,589,501],
[394,412,505,0,466,462,483,552],
[491,496,429,424,0,467,539,484],
[412,472,419,428,423,0,562,468],
[315,285,301,407,351,328,0,363],
[368,386,389,338,406,422,527,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,453,441,447,428,437,431],
[473,0,416,438,454,447,470,437],
[437,474,0,472,469,437,454,463],
[449,452,418,0,434,399,465,449],
[443,436,421,456,0,419,465,448],
[462,443,453,491,471,0,480,440],
[453,420,436,425,425,410,0,431],
[459,453,427,441,442,450,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,462,434,476,462,464,468],
[433,0,430,456,465,462,463,429],
[428,460,0,462,481,469,470,465],
[456,434,428,0,486,468,463,446],
[414,425,409,404,0,426,419,420],
[428,428,421,422,464,0,424,425],
[426,427,420,427,471,466,0,420],
[422,461,425,444,470,465,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,431,421,412,442,417,417],
[472,0,456,467,432,454,453,421],
[459,434,0,440,451,464,440,445],
[469,423,450,0,446,460,456,446],
[478,458,439,444,0,448,445,413],
[448,436,426,430,442,0,439,429],
[473,437,450,434,445,451,0,438],
[473,469,445,444,477,461,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,445,420,436,441,432,432],
[434,0,438,440,437,444,442,428],
[445,452,0,453,446,450,421,429],
[470,450,437,0,453,469,457,445],
[454,453,444,437,0,450,437,441],
[449,446,440,421,440,0,449,429],
[458,448,469,433,453,441,0,440],
[458,462,461,445,449,461,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,513,465,492,438,465,439],
[396,0,471,539,512,377,468,301],
[377,419,0,452,481,434,497,376],
[425,351,438,0,394,281,382,249],
[398,378,409,496,0,340,421,344],
[452,513,456,609,550,0,621,411],
[425,422,393,508,469,269,0,455],
[451,589,514,641,546,479,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,444,429,458,428,415,397],
[472,0,481,460,454,478,440,464],
[446,409,0,489,436,444,423,406],
[461,430,401,0,445,453,443,425],
[432,436,454,445,0,430,407,413],
[462,412,446,437,460,0,449,426],
[475,450,467,447,483,441,0,444],
[493,426,484,465,477,464,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,414,407,425,427,414,436],
[452,0,438,444,433,438,469,459],
[476,452,0,445,431,440,461,461],
[483,446,445,0,452,449,461,481],
[465,457,459,438,0,440,447,466],
[463,452,450,441,450,0,456,451],
[476,421,429,429,443,434,0,455],
[454,431,429,409,424,439,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,413,536,480,464,479,487],
[441,0,418,346,593,420,585,514],
[477,472,0,437,558,450,510,546],
[354,544,453,0,575,412,558,581],
[410,297,332,315,0,349,467,326],
[426,470,440,478,541,0,513,541],
[411,305,380,332,423,377,0,346],
[403,376,344,309,564,349,544,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,437,433,436,450,471,459],
[439,0,431,455,444,447,432,442],
[453,459,0,450,429,449,476,466],
[457,435,440,0,458,419,432,451],
[454,446,461,432,0,446,447,453],
[440,443,441,471,444,0,445,441],
[419,458,414,458,443,445,0,447],
[431,448,424,439,437,449,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,443,443,440,475,474,442],
[450,0,439,452,437,449,473,426],
[447,451,0,460,466,469,476,443],
[447,438,430,0,447,467,459,445],
[450,453,424,443,0,444,445,428],
[415,441,421,423,446,0,461,432],
[416,417,414,431,445,429,0,412],
[448,464,447,445,462,458,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,442,463,433,369,430,457],
[442,0,439,489,502,424,407,426],
[448,451,0,501,448,429,414,437],
[427,401,389,0,431,392,342,383],
[457,388,442,459,0,418,446,438],
[521,466,461,498,472,0,426,432],
[460,483,476,548,444,464,0,481],
[433,464,453,507,452,458,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,452,482,449,439,467,457],
[425,0,439,450,447,421,472,458],
[438,451,0,458,444,445,453,457],
[408,440,432,0,415,427,456,435],
[441,443,446,475,0,470,494,465],
[451,469,445,463,420,0,453,440],
[423,418,437,434,396,437,0,444],
[433,432,433,455,425,450,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,445,437,497,433,459,484],
[457,0,443,500,410,361,367,421],
[445,447,0,520,513,506,462,374],
[453,390,370,0,529,435,396,419],
[393,480,377,361,0,382,440,343],
[457,529,384,455,508,0,439,437],
[431,523,428,494,450,451,0,449],
[406,469,516,471,547,453,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,400,488,540,382,627,596],
[406,0,494,384,334,366,646,314],
[490,396,0,396,444,461,717,614],
[402,506,494,0,491,538,685,550],
[350,556,446,399,0,360,625,696],
[508,524,429,352,530,0,711,686],
[263,244,173,205,265,179,0,332],
[294,576,276,340,194,204,558,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,454,418,471,413,458,425],
[439,0,448,396,443,427,447,421],
[436,442,0,360,479,433,394,396],
[472,494,530,0,568,451,499,412],
[419,447,411,322,0,366,416,428],
[477,463,457,439,524,0,461,450],
[432,443,496,391,474,429,0,396],
[465,469,494,478,462,440,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,379,384,430,452,469,453],
[480,0,400,456,479,438,458,456],
[511,490,0,462,435,453,437,549],
[506,434,428,0,478,500,468,517],
[460,411,455,412,0,445,416,437],
[438,452,437,390,445,0,447,486],
[421,432,453,422,474,443,0,528],
[437,434,341,373,453,404,362,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,488,443,416,448,426,441],
[447,0,482,458,473,447,416,455],
[402,408,0,412,439,417,398,430],
[447,432,478,0,452,431,432,436],
[474,417,451,438,0,438,450,422],
[442,443,473,459,452,0,428,444],
[464,474,492,458,440,462,0,453],
[449,435,460,454,468,446,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,468,349,397,443,421,380],
[460,0,476,497,425,415,452,492],
[422,414,0,471,401,477,460,446],
[541,393,419,0,424,422,463,334],
[493,465,489,466,0,464,450,428],
[447,475,413,468,426,0,486,420],
[469,438,430,427,440,404,0,426],
[510,398,444,556,462,470,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,459,449,436,450,446,455],
[431,0,460,457,422,461,450,449],
[431,430,0,443,431,443,430,452],
[441,433,447,0,454,456,459,440],
[454,468,459,436,0,453,459,447],
[440,429,447,434,437,0,447,450],
[444,440,460,431,431,443,0,453],
[435,441,438,450,443,440,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,421,447,401,400,423,417],
[411,0,440,435,356,447,429,420],
[469,450,0,469,410,472,399,459],
[443,455,421,0,419,403,409,424],
[489,534,480,471,0,463,443,475],
[490,443,418,487,427,0,430,461],
[467,461,491,481,447,460,0,425],
[473,470,431,466,415,429,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,398,371,387,456,316,344],
[460,0,377,393,380,439,359,402],
[492,513,0,398,480,482,430,445],
[519,497,492,0,433,521,403,456],
[503,510,410,457,0,476,421,440],
[434,451,408,369,414,0,330,397],
[574,531,460,487,469,560,0,431],
[546,488,445,434,450,493,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,513,308,175,452,354,301,548],
[377,0,277,191,409,452,125,426],
[582,613,0,273,493,460,457,765],
[715,699,617,0,718,540,426,806],
[438,481,397,172,0,327,338,481],
[536,438,430,350,563,0,363,704],
[589,765,433,464,552,527,0,388],
[342,464,125,84,409,186,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,454,478,447,430,481,441],
[427,0,416,449,421,410,457,426],
[436,474,0,463,458,429,469,441],
[412,441,427,0,428,412,464,435],
[443,469,432,462,0,428,463,454],
[460,480,461,478,462,0,493,445],
[409,433,421,426,427,397,0,397],
[449,464,449,455,436,445,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,455,447,438,486,411,447],
[427,0,426,476,415,487,412,466],
[435,464,0,477,448,483,455,474],
[443,414,413,0,420,480,456,465],
[452,475,442,470,0,474,449,459],
[404,403,407,410,416,0,374,427],
[479,478,435,434,441,516,0,443],
[443,424,416,425,431,463,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,473,421,451,439,439,462],
[453,0,470,435,478,460,463,461],
[417,420,0,433,443,459,444,452],
[469,455,457,0,478,443,462,472],
[439,412,447,412,0,426,415,434],
[451,430,431,447,464,0,431,447],
[451,427,446,428,475,459,0,448],
[428,429,438,418,456,443,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,435,483,465,474,480,472],
[435,0,419,445,445,431,446,467],
[455,471,0,460,424,427,468,428],
[407,445,430,0,475,460,460,459],
[425,445,466,415,0,445,455,456],
[416,459,463,430,445,0,470,432],
[410,444,422,430,435,420,0,438],
[418,423,462,431,434,458,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,468,444,414,470,426,432],
[437,0,487,437,432,458,447,435],
[422,403,0,434,409,421,424,412],
[446,453,456,0,445,477,434,465],
[476,458,481,445,0,451,436,445],
[420,432,469,413,439,0,405,442],
[464,443,466,456,454,485,0,459],
[458,455,478,425,445,448,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,428,438,435,435,416],
[440,0,411,423,439,422,418,402],
[445,479,0,425,433,427,451,431],
[462,467,465,0,458,436,469,425],
[452,451,457,432,0,437,461,416],
[455,468,463,454,453,0,476,445],
[455,472,439,421,429,414,0,396],
[474,488,459,465,474,445,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,439,391,428,416,441,411],
[466,0,490,426,469,457,447,442],
[451,400,0,411,435,424,432,418],
[499,464,479,0,473,437,464,442],
[462,421,455,417,0,423,431,440],
[474,433,466,453,467,0,479,446],
[449,443,458,426,459,411,0,438],
[479,448,472,448,450,444,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,473,420,457,410,445,444],
[472,0,469,447,435,422,470,456],
[417,421,0,426,419,400,440,444],
[470,443,464,0,476,438,448,462],
[433,455,471,414,0,425,460,438],
[480,468,490,452,465,0,445,444],
[445,420,450,442,430,445,0,427],
[446,434,446,428,452,446,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,561,707,430,552,390,631],
[505,0,429,630,351,572,479,557],
[329,461,0,635,416,492,357,686],
[183,260,255,0,176,445,347,395],
[460,539,474,714,0,533,357,773],
[338,318,398,445,357,0,543,442],
[500,411,533,543,533,347,0,562],
[259,333,204,495,117,448,328,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,428,399,352,447,383,390],
[458,0,447,494,445,526,450,485],
[462,443,0,415,410,506,487,462],
[491,396,475,0,421,478,445,488],
[538,445,480,469,0,519,456,503],
[443,364,384,412,371,0,380,476],
[507,440,403,445,434,510,0,467],
[500,405,428,402,387,414,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,435,446,435,422,422,423],
[434,0,447,452,430,431,446,419],
[455,443,0,445,439,433,455,431],
[444,438,445,0,421,433,454,429],
[455,460,451,469,0,439,469,447],
[468,459,457,457,451,0,459,438],
[468,444,435,436,421,431,0,432],
[467,471,459,461,443,452,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,447,453,451,445,472,405],
[472,0,499,448,492,476,442,453],
[443,391,0,420,455,455,417,415],
[437,442,470,0,464,455,461,424],
[439,398,435,426,0,418,444,393],
[445,414,435,435,472,0,440,439],
[418,448,473,429,446,450,0,394],
[485,437,475,466,497,451,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,406,434,449,405,399,442],
[431,0,396,422,408,395,369,413],
[484,494,0,480,476,433,473,475],
[456,468,410,0,442,453,408,479],
[441,482,414,448,0,452,436,473],
[485,495,457,437,438,0,452,479],
[491,521,417,482,454,438,0,498],
[448,477,415,411,417,411,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,447,446,452,454,451,429],
[402,0,440,411,416,438,442,397],
[443,450,0,439,420,453,447,422],
[444,479,451,0,439,446,455,454],
[438,474,470,451,0,473,459,427],
[436,452,437,444,417,0,430,448],
[439,448,443,435,431,460,0,449],
[461,493,468,436,463,442,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,431,431,441,448,456,437],
[466,0,487,465,466,433,480,460],
[459,403,0,453,436,431,450,435],
[459,425,437,0,440,437,453,426],
[449,424,454,450,0,479,457,438],
[442,457,459,453,411,0,448,447],
[434,410,440,437,433,442,0,423],
[453,430,455,464,452,443,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,463,438,484,455,447,465],
[436,0,411,460,454,422,440,441],
[427,479,0,447,474,448,437,464],
[452,430,443,0,462,445,444,451],
[406,436,416,428,0,399,422,440],
[435,468,442,445,491,0,446,487],
[443,450,453,446,468,444,0,454],
[425,449,426,439,450,403,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,470,451,469,440,448,448],
[415,0,468,443,447,440,454,414],
[420,422,0,408,440,408,437,417],
[439,447,482,0,450,453,444,446],
[421,443,450,440,0,421,424,450],
[450,450,482,437,469,0,447,488],
[442,436,453,446,466,443,0,434],
[442,476,473,444,440,402,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,438,456,451,406,428,439],
[474,0,467,471,463,447,433,477],
[452,423,0,440,460,415,449,458],
[434,419,450,0,469,414,416,460],
[439,427,430,421,0,412,425,440],
[484,443,475,476,478,0,483,479],
[462,457,441,474,465,407,0,462],
[451,413,432,430,450,411,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,387,453,413,383,347,375],
[454,0,396,441,426,383,332,401],
[503,494,0,486,408,426,395,435],
[437,449,404,0,431,455,371,466],
[477,464,482,459,0,387,426,451],
[507,507,464,435,503,0,458,491],
[543,558,495,519,464,432,0,514],
[515,489,455,424,439,399,376,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,415,424,409,407,413,429],
[464,0,429,436,434,426,457,452],
[475,461,0,457,444,431,441,450],
[466,454,433,0,443,435,442,455],
[481,456,446,447,0,438,460,452],
[483,464,459,455,452,0,443,465],
[477,433,449,448,430,447,0,447],
[461,438,440,435,438,425,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,494,489,454,501,465,502],
[454,0,480,445,422,437,449,437],
[396,410,0,410,357,434,432,428],
[401,445,480,0,387,430,430,429],
[436,468,533,503,0,499,471,484],
[389,453,456,460,391,0,443,458],
[425,441,458,460,419,447,0,467],
[388,453,462,461,406,432,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,415,463,387,442,441,409],
[425,0,422,432,375,430,423,464],
[475,468,0,495,449,435,459,493],
[427,458,395,0,397,431,468,461],
[503,515,441,493,0,458,499,522],
[448,460,455,459,432,0,481,439],
[449,467,431,422,391,409,0,452],
[481,426,397,429,368,451,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,605,259,315,664,407,342,327],
[285,0,330,404,611,478,437,404],
[631,560,0,407,512,369,506,473],
[575,486,483,0,552,208,417,384],
[226,279,378,338,0,437,452,399],
[483,412,521,682,453,0,518,623],
[548,453,384,473,438,372,0,629],
[563,486,417,506,491,267,261,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,418,442,447,440,439,459],
[455,0,445,447,454,471,444,451],
[472,445,0,448,489,457,453,473],
[448,443,442,0,458,455,431,446],
[443,436,401,432,0,428,427,429],
[450,419,433,435,462,0,436,430],
[451,446,437,459,463,454,0,449],
[431,439,417,444,461,460,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,441,467,432,453,491,459],
[415,0,405,466,407,445,438,411],
[449,485,0,494,450,479,460,442],
[423,424,396,0,420,424,430,422],
[458,483,440,470,0,440,475,432],
[437,445,411,466,450,0,446,440],
[399,452,430,460,415,444,0,429],
[431,479,448,468,458,450,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,477,475,507,438,526,483],
[430,0,447,453,439,459,521,438],
[413,443,0,460,482,475,479,507],
[415,437,430,0,431,421,461,437],
[383,451,408,459,0,463,469,474],
[452,431,415,469,427,0,476,493],
[364,369,411,429,421,414,0,467],
[407,452,383,453,416,397,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,438,453,447,453,420,428],
[471,0,468,412,426,463,444,439],
[452,422,0,410,442,460,426,450],
[437,478,480,0,447,473,458,448],
[443,464,448,443,0,441,449,459],
[437,427,430,417,449,0,415,443],
[470,446,464,432,441,475,0,453],
[462,451,440,442,431,447,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,436,469,395,428,441,410],
[426,0,375,418,406,425,403,390],
[454,515,0,497,391,507,463,444],
[421,472,393,0,399,456,412,401],
[495,484,499,491,0,503,443,431],
[462,465,383,434,387,0,426,424],
[449,487,427,478,447,464,0,445],
[480,500,446,489,459,466,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,430,444,441,433,453,452],
[435,0,415,437,451,427,438,432],
[460,475,0,453,443,447,457,468],
[446,453,437,0,451,439,450,442],
[449,439,447,439,0,434,452,447],
[457,463,443,451,456,0,437,451],
[437,452,433,440,438,453,0,451],
[438,458,422,448,443,439,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,432,463,465,465,465,452],
[462,0,437,453,457,473,459,442],
[458,453,0,447,443,450,445,446],
[427,437,443,0,441,451,463,444],
[425,433,447,449,0,456,453,457],
[425,417,440,439,434,0,483,428],
[425,431,445,427,437,407,0,435],
[438,448,444,446,433,462,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,477,490,477,456,444,458],
[425,0,452,481,491,431,452,456],
[413,438,0,466,469,422,432,431],
[400,409,424,0,447,423,433,417],
[413,399,421,443,0,401,424,419],
[434,459,468,467,489,0,472,445],
[446,438,458,457,466,418,0,429],
[432,434,459,473,471,445,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,459,464,476,442,460,485],
[404,0,426,439,447,428,424,463],
[431,464,0,453,458,445,452,470],
[426,451,437,0,424,408,437,466],
[414,443,432,466,0,432,451,471],
[448,462,445,482,458,0,450,462],
[430,466,438,453,439,440,0,455],
[405,427,420,424,419,428,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,417,414,408,437,449,439],
[456,0,447,443,440,427,440,455],
[473,443,0,410,457,439,435,457],
[476,447,480,0,456,455,474,443],
[482,450,433,434,0,431,451,424],
[453,463,451,435,459,0,445,436],
[441,450,455,416,439,445,0,450],
[451,435,433,447,466,454,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,478,418,474,455,454,453],
[425,0,410,397,431,405,462,428],
[412,480,0,476,454,444,448,460],
[472,493,414,0,454,423,454,465],
[416,459,436,436,0,420,448,440],
[435,485,446,467,470,0,457,472],
[436,428,442,436,442,433,0,467],
[437,462,430,425,450,418,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,430,416,408,420,408,436],
[469,0,461,413,447,451,411,446],
[460,429,0,420,420,436,417,431],
[474,477,470,0,433,449,448,452],
[482,443,470,457,0,446,432,458],
[470,439,454,441,444,0,420,450],
[482,479,473,442,458,470,0,465],
[454,444,459,438,432,440,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,458,453,455,456,438,461],
[427,0,424,441,436,423,423,433],
[432,466,0,463,466,451,439,460],
[437,449,427,0,443,461,424,463],
[435,454,424,447,0,450,450,465],
[434,467,439,429,440,0,412,442],
[452,467,451,466,440,478,0,451],
[429,457,430,427,425,448,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,411,529,506,458,422,524],
[427,0,392,466,419,385,436,463],
[479,498,0,478,470,388,505,459],
[361,424,412,0,482,396,419,446],
[384,471,420,408,0,429,512,479],
[432,505,502,494,461,0,492,481],
[468,454,385,471,378,398,0,462],
[366,427,431,444,411,409,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,351,358,341,380,428,534,510],
[539,0,425,498,663,485,456,577],
[532,465,0,501,492,430,404,425],
[549,392,389,0,503,402,420,554],
[510,227,398,387,0,255,330,360],
[462,405,460,488,635,0,582,511],
[356,434,486,470,560,308,0,453],
[380,313,465,336,530,379,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,446,408,418,444,463,432],
[491,0,461,446,445,453,483,467],
[444,429,0,431,442,483,472,475],
[482,444,459,0,460,453,469,493],
[472,445,448,430,0,435,503,438],
[446,437,407,437,455,0,439,453],
[427,407,418,421,387,451,0,434],
[458,423,415,397,452,437,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,199,356,120,285,277,285,398],
[691,0,515,343,309,533,351,691],
[534,375,0,278,441,625,454,468],
[770,547,612,0,578,725,262,534],
[605,581,449,312,0,659,391,468],
[613,357,265,165,231,0,165,441],
[605,539,436,628,499,725,0,691],
[492,199,422,356,422,449,199,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,417,400,404,390,419,398],
[473,0,469,451,485,425,442,447],
[473,421,0,413,463,408,491,443],
[490,439,477,0,433,433,451,437],
[486,405,427,457,0,439,431,417],
[500,465,482,457,451,0,473,438],
[471,448,399,439,459,417,0,427],
[492,443,447,453,473,452,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,457,421,450,479,429,415],
[415,0,434,430,417,415,392,409],
[433,456,0,437,425,427,367,440],
[469,460,453,0,475,489,458,444],
[440,473,465,415,0,463,435,458],
[411,475,463,401,427,0,460,388],
[461,498,523,432,455,430,0,455],
[475,481,450,446,432,502,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,430,455,566,428,501,435],
[431,0,415,452,467,374,429,470],
[460,475,0,408,459,460,419,467],
[435,438,482,0,483,469,435,475],
[324,423,431,407,0,375,346,408],
[462,516,430,421,515,0,488,417],
[389,461,471,455,544,402,0,479],
[455,420,423,415,482,473,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,441,458,468,473,439,427],
[437,0,449,454,443,483,444,462],
[449,441,0,464,446,516,452,452],
[432,436,426,0,456,499,465,438],
[422,447,444,434,0,516,443,426],
[417,407,374,391,374,0,422,373],
[451,446,438,425,447,468,0,465],
[463,428,438,452,464,517,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,437,431,436,452,451,416],
[422,0,468,453,418,410,403,386],
[453,422,0,454,449,429,433,437],
[459,437,436,0,439,449,435,412],
[454,472,441,451,0,421,431,435],
[438,480,461,441,469,0,442,464],
[439,487,457,455,459,448,0,448],
[474,504,453,478,455,426,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,449,425,419,463,454,439],
[426,0,488,408,438,446,424,425],
[441,402,0,393,400,425,426,404],
[465,482,497,0,439,462,461,470],
[471,452,490,451,0,459,441,439],
[427,444,465,428,431,0,445,420],
[436,466,464,429,449,445,0,437],
[451,465,486,420,451,470,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,411,395,414,429,413,399],
[454,0,444,452,404,443,403,461],
[479,446,0,441,448,456,422,495],
[495,438,449,0,424,459,427,486],
[476,486,442,466,0,491,447,459],
[461,447,434,431,399,0,396,435],
[477,487,468,463,443,494,0,460],
[491,429,395,404,431,455,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,453,467,420,479,450,455],
[466,0,445,445,426,487,436,457],
[437,445,0,421,452,478,433,453],
[423,445,469,0,441,455,432,431],
[470,464,438,449,0,478,464,454],
[411,403,412,435,412,0,408,413],
[440,454,457,458,426,482,0,457],
[435,433,437,459,436,477,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,404,398,444,453,410,397],
[483,0,444,439,516,440,519,451],
[486,446,0,450,485,460,425,439],
[492,451,440,0,495,503,483,417],
[446,374,405,395,0,421,406,347],
[437,450,430,387,469,0,438,397],
[480,371,465,407,484,452,0,402],
[493,439,451,473,543,493,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,470,407,452,438,428,409],
[446,0,451,439,438,436,455,440],
[420,439,0,454,444,450,464,420],
[483,451,436,0,438,457,484,396],
[438,452,446,452,0,461,449,459],
[452,454,440,433,429,0,456,408],
[462,435,426,406,441,434,0,401],
[481,450,470,494,431,482,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,479,484,455,501,434,440],
[454,0,468,349,446,428,409,460],
[411,422,0,462,409,430,409,515],
[406,541,428,0,436,463,370,405],
[435,444,481,454,0,475,373,440],
[389,462,460,427,415,0,456,481],
[456,481,481,520,517,434,0,415],
[450,430,375,485,450,409,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,460,459,441,452,433,465],
[452,0,463,453,438,460,462,456],
[430,427,0,447,440,438,442,434],
[431,437,443,0,445,448,431,452],
[449,452,450,445,0,465,447,466],
[438,430,452,442,425,0,440,463],
[457,428,448,459,443,450,0,472],
[425,434,456,438,424,427,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,439,422,445,458,414,431],
[447,0,453,427,474,444,422,422],
[451,437,0,430,491,460,457,432],
[468,463,460,0,507,461,463,431],
[445,416,399,383,0,421,378,391],
[432,446,430,429,469,0,405,445],
[476,468,433,427,512,485,0,456],
[459,468,458,459,499,445,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,420,440,439,456,395,416],
[447,0,444,411,445,397,420,411],
[470,446,0,462,462,435,471,455],
[450,479,428,0,449,408,402,421],
[451,445,428,441,0,416,419,425],
[434,493,455,482,474,0,423,447],
[495,470,419,488,471,467,0,467],
[474,479,435,469,465,443,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,446,440,460,449,456,407],
[452,0,427,427,449,449,443,425],
[444,463,0,446,469,453,462,430],
[450,463,444,0,446,442,455,420],
[430,441,421,444,0,442,419,412],
[441,441,437,448,448,0,454,431],
[434,447,428,435,471,436,0,449],
[483,465,460,470,478,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,429,448,423,476,415,428],
[435,0,425,397,454,453,403,439],
[461,465,0,440,475,493,492,409],
[442,493,450,0,442,482,451,414],
[467,436,415,448,0,497,480,432],
[414,437,397,408,393,0,411,382],
[475,487,398,439,410,479,0,474],
[462,451,481,476,458,508,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,563,424,316,481,455,389,446],
[327,0,337,285,365,330,333,365],
[466,553,0,457,452,421,466,527],
[574,605,433,0,501,508,454,433],
[409,525,438,389,0,386,378,305],
[435,560,469,382,504,0,414,375],
[501,557,424,436,512,476,0,459],
[444,525,363,457,585,515,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,424,483,463,475,474,437],
[409,0,385,404,443,442,440,415],
[466,505,0,456,482,493,456,442],
[407,486,434,0,462,428,463,462],
[427,447,408,428,0,451,464,426],
[415,448,397,462,439,0,431,459],
[416,450,434,427,426,459,0,446],
[453,475,448,428,464,431,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,432,446,442,447,455,467],
[453,0,442,430,449,480,441,448],
[458,448,0,464,459,448,427,486],
[444,460,426,0,454,460,434,446],
[448,441,431,436,0,423,430,463],
[443,410,442,430,467,0,431,480],
[435,449,463,456,460,459,0,500],
[423,442,404,444,427,410,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,444,449,418,441,451,462],
[456,0,455,456,426,435,459,455],
[446,435,0,460,434,436,465,454],
[441,434,430,0,422,436,453,437],
[472,464,456,468,0,444,481,452],
[449,455,454,454,446,0,441,455],
[439,431,425,437,409,449,0,412],
[428,435,436,453,438,435,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,439,396,428,458,405,461],
[450,0,436,419,470,481,432,463],
[451,454,0,412,479,442,459,457],
[494,471,478,0,470,476,425,469],
[462,420,411,420,0,435,415,457],
[432,409,448,414,455,0,437,465],
[485,458,431,465,475,453,0,468],
[429,427,433,421,433,425,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,279,595,479,428,433,427,404],
[611,0,553,661,543,500,486,441],
[295,337,0,473,398,396,423,368],
[411,229,417,0,410,327,320,373],
[462,347,492,480,0,413,350,340],
[457,390,494,563,477,0,474,487],
[463,404,467,570,540,416,0,370],
[486,449,522,517,550,403,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,434,434,442,440,479,447],
[461,0,432,429,452,468,466,428],
[456,458,0,449,474,438,466,455],
[456,461,441,0,462,455,482,462],
[448,438,416,428,0,465,463,455],
[450,422,452,435,425,0,461,447],
[411,424,424,408,427,429,0,440],
[443,462,435,428,435,443,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,459,408,399,428,462,441],
[435,0,414,450,425,471,408,428],
[431,476,0,451,414,461,397,386],
[482,440,439,0,438,422,412,458],
[491,465,476,452,0,456,402,452],
[462,419,429,468,434,0,386,471],
[428,482,493,478,488,504,0,462],
[449,462,504,432,438,419,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,423,438,411,442,412,420],
[432,0,438,471,437,438,417,428],
[467,452,0,456,428,409,413,420],
[452,419,434,0,411,418,441,402],
[479,453,462,479,0,460,465,421],
[448,452,481,472,430,0,467,455],
[478,473,477,449,425,423,0,406],
[470,462,470,488,469,435,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,452,484,460,447,462,474],
[451,0,356,454,447,429,443,470],
[438,534,0,492,525,477,471,486],
[406,436,398,0,389,428,413,413],
[430,443,365,501,0,402,429,426],
[443,461,413,462,488,0,440,457],
[428,447,419,477,461,450,0,470],
[416,420,404,477,464,433,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,427,455,444,474,452,439],
[462,0,439,452,458,470,457,470],
[463,451,0,454,456,451,416,469],
[435,438,436,0,427,440,431,422],
[446,432,434,463,0,454,431,457],
[416,420,439,450,436,0,437,438],
[438,433,474,459,459,453,0,449],
[451,420,421,468,433,452,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,448,462,464,492,428,440],
[463,0,477,466,497,443,415,447],
[442,413,0,411,455,456,461,438],
[428,424,479,0,485,472,461,517],
[426,393,435,405,0,444,424,425],
[398,447,434,418,446,0,430,462],
[462,475,429,429,466,460,0,417],
[450,443,452,373,465,428,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,556,484,462,444,549,451,449],
[334,0,339,431,352,383,374,419],
[406,551,0,501,500,461,493,471],
[428,459,389,0,477,498,485,487],
[446,538,390,413,0,467,475,458],
[341,507,429,392,423,0,403,420],
[439,516,397,405,415,487,0,476],
[441,471,419,403,432,470,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,449,462,441,476,472,434],
[426,0,443,434,415,458,461,437],
[441,447,0,425,442,463,453,447],
[428,456,465,0,444,478,452,454],
[449,475,448,446,0,462,450,439],
[414,432,427,412,428,0,439,410],
[418,429,437,438,440,451,0,438],
[456,453,443,436,451,480,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,420,453,425,429,413,456],
[451,0,465,422,462,436,453,463],
[470,425,0,449,449,452,450,469],
[437,468,441,0,464,462,466,464],
[465,428,441,426,0,449,452,449],
[461,454,438,428,441,0,452,463],
[477,437,440,424,438,438,0,433],
[434,427,421,426,441,427,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,434,403,415,438,411,441],
[460,0,428,423,424,456,430,428],
[456,462,0,442,469,477,441,474],
[487,467,448,0,452,450,419,458],
[475,466,421,438,0,445,432,445],
[452,434,413,440,445,0,447,449],
[479,460,449,471,458,443,0,443],
[449,462,416,432,445,441,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,472,435,457,459,451,453],
[419,0,454,432,424,441,437,443],
[418,436,0,432,434,450,438,454],
[455,458,458,0,458,443,435,457],
[433,466,456,432,0,435,432,458],
[431,449,440,447,455,0,431,463],
[439,453,452,455,458,459,0,447],
[437,447,436,433,432,427,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,407,410,442,435,448,422],
[464,0,447,441,474,471,453,443],
[483,443,0,432,464,457,456,430],
[480,449,458,0,478,487,428,453],
[448,416,426,412,0,437,446,435],
[455,419,433,403,453,0,420,441],
[442,437,434,462,444,470,0,459],
[468,447,460,437,455,449,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,423,452,432,430,445,427],
[465,0,455,453,451,461,450,445],
[467,435,0,438,446,465,439,457],
[438,437,452,0,461,424,409,440],
[458,439,444,429,0,462,456,435],
[460,429,425,466,428,0,440,424],
[445,440,451,481,434,450,0,433],
[463,445,433,450,455,466,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,445,456,455,450,418,454],
[442,0,411,474,440,421,423,453],
[445,479,0,470,464,445,458,456],
[434,416,420,0,439,422,424,456],
[435,450,426,451,0,443,412,444],
[440,469,445,468,447,0,432,453],
[472,467,432,466,478,458,0,464],
[436,437,434,434,446,437,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,437,459,450,437,433,451],
[441,0,443,450,482,448,437,466],
[453,447,0,460,482,441,445,454],
[431,440,430,0,450,436,435,449],
[440,408,408,440,0,408,396,455],
[453,442,449,454,482,0,456,463],
[457,453,445,455,494,434,0,487],
[439,424,436,441,435,427,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,449,462,420,437,456,450],
[428,0,438,426,416,435,454,456],
[441,452,0,443,429,448,461,406],
[428,464,447,0,426,426,470,435],
[470,474,461,464,0,490,481,437],
[453,455,442,464,400,0,435,421],
[434,436,429,420,409,455,0,418],
[440,434,484,455,453,469,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,441,460,480,476,467,476],
[438,0,447,470,466,446,437,470],
[449,443,0,458,460,465,458,462],
[430,420,432,0,451,446,429,454],
[410,424,430,439,0,455,427,442],
[414,444,425,444,435,0,445,431],
[423,453,432,461,463,445,0,456],
[414,420,428,436,448,459,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,435,410,383,412,405,409],
[447,0,470,452,433,423,429,452],
[455,420,0,421,381,402,401,385],
[480,438,469,0,438,458,432,432],
[507,457,509,452,0,451,480,418],
[478,467,488,432,439,0,436,403],
[485,461,489,458,410,454,0,468],
[481,438,505,458,472,487,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,449,472,453,440,444,461],
[471,0,446,438,452,446,475,474],
[441,444,0,436,456,436,448,452],
[418,452,454,0,451,470,481,480],
[437,438,434,439,0,431,421,464],
[450,444,454,420,459,0,478,456],
[446,415,442,409,469,412,0,447],
[429,416,438,410,426,434,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,463,465,443,444,447,459],
[416,0,449,437,431,452,429,434],
[427,441,0,444,428,453,434,416],
[425,453,446,0,413,423,446,440],
[447,459,462,477,0,465,441,451],
[446,438,437,467,425,0,432,454],
[443,461,456,444,449,458,0,444],
[431,456,474,450,439,436,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,268,265,391,280,170,256,262],
[622,0,339,398,395,427,448,343],
[625,551,0,559,466,389,448,469],
[499,492,331,0,308,342,383,319],
[610,495,424,582,0,448,545,444],
[720,463,501,548,442,0,453,437],
[634,442,442,507,345,437,0,392],
[628,547,421,571,446,453,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,436,463,442,426,431,474],
[493,0,445,480,484,457,486,492],
[454,445,0,426,437,433,434,487],
[427,410,464,0,455,437,446,463],
[448,406,453,435,0,440,423,456],
[464,433,457,453,450,0,446,466],
[459,404,456,444,467,444,0,443],
[416,398,403,427,434,424,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,413,425,395,426,426,439],
[474,0,434,432,423,428,425,435],
[477,456,0,463,433,462,460,442],
[465,458,427,0,446,455,418,466],
[495,467,457,444,0,474,448,458],
[464,462,428,435,416,0,428,444],
[464,465,430,472,442,462,0,443],
[451,455,448,424,432,446,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,424,408,434,440,413,443],
[463,0,447,451,443,443,419,431],
[466,443,0,432,436,451,459,459],
[482,439,458,0,458,445,433,467],
[456,447,454,432,0,433,441,438],
[450,447,439,445,457,0,428,480],
[477,471,431,457,449,462,0,465],
[447,459,431,423,452,410,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,439,428,421,414,443,427],
[449,0,409,434,414,475,468,450],
[451,481,0,455,445,444,466,428],
[462,456,435,0,428,424,420,442],
[469,476,445,462,0,471,483,486],
[476,415,446,466,419,0,476,439],
[447,422,424,470,407,414,0,425],
[463,440,462,448,404,451,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,430,440,455,468,459,450],
[448,0,440,433,462,444,452,450],
[460,450,0,446,445,453,465,443],
[450,457,444,0,458,449,464,451],
[435,428,445,432,0,446,439,448],
[422,446,437,441,444,0,450,436],
[431,438,425,426,451,440,0,427],
[440,440,447,439,442,454,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,408,432,419,462,430,440],
[467,0,441,452,472,489,456,484],
[482,449,0,477,463,488,444,489],
[458,438,413,0,430,449,430,445],
[471,418,427,460,0,448,446,468],
[428,401,402,441,442,0,412,452],
[460,434,446,460,444,478,0,468],
[450,406,401,445,422,438,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,297,301,509,299,446,299,125],
[593,0,416,393,313,337,279,467],
[589,474,0,372,569,268,380,377],
[381,497,518,0,391,520,535,406],
[591,577,321,499,0,397,431,363],
[444,553,622,370,493,0,277,440],
[591,611,510,355,459,613,0,567],
[765,423,513,484,527,450,323,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,437,410,456,416,438,452],
[485,0,455,443,494,461,479,487],
[453,435,0,431,498,439,469,468],
[480,447,459,0,490,422,455,495],
[434,396,392,400,0,393,407,443],
[474,429,451,468,497,0,429,486],
[452,411,421,435,483,461,0,477],
[438,403,422,395,447,404,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,441,420,412,436,424,432],
[441,0,460,462,427,442,448,436],
[449,430,0,445,450,436,455,439],
[470,428,445,0,444,453,450,433],
[478,463,440,446,0,467,455,447],
[454,448,454,437,423,0,439,443],
[466,442,435,440,435,451,0,450],
[458,454,451,457,443,447,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,248,521,568,584,280,445,225],
[642,0,451,595,492,271,229,469],
[369,439,0,568,463,266,276,335],
[322,295,322,0,296,250,100,123],
[306,398,427,594,0,216,162,249],
[610,619,624,640,674,0,261,674],
[445,661,614,790,728,629,0,445],
[665,421,555,767,641,216,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,473,426,419,448,430,453],
[429,0,430,423,455,440,413,452],
[417,460,0,463,463,481,448,460],
[464,467,427,0,434,462,449,513],
[471,435,427,456,0,456,442,464],
[442,450,409,428,434,0,429,458],
[460,477,442,441,448,461,0,486],
[437,438,430,377,426,432,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,387,395,399,434,356,440],
[497,0,443,465,448,434,441,450],
[503,447,0,508,446,442,445,497],
[495,425,382,0,455,386,449,423],
[491,442,444,435,0,437,429,423],
[456,456,448,504,453,0,453,394],
[534,449,445,441,461,437,0,438],
[450,440,393,467,467,496,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,430,434,452,434,446,441],
[440,0,418,414,450,436,423,445],
[460,472,0,445,457,467,469,461],
[456,476,445,0,458,459,460,448],
[438,440,433,432,0,441,455,432],
[456,454,423,431,449,0,428,449],
[444,467,421,430,435,462,0,435],
[449,445,429,442,458,441,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,424,459,453,394,410,419],
[443,0,449,452,447,425,435,478],
[466,441,0,442,454,461,437,485],
[431,438,448,0,442,430,424,427],
[437,443,436,448,0,432,446,413],
[496,465,429,460,458,0,448,465],
[480,455,453,466,444,442,0,418],
[471,412,405,463,477,425,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,457,447,447,462,478,470],
[452,0,437,446,449,471,474,458],
[433,453,0,445,454,461,472,436],
[443,444,445,0,456,466,460,461],
[443,441,436,434,0,450,444,453],
[428,419,429,424,440,0,404,462],
[412,416,418,430,446,486,0,447],
[420,432,454,429,437,428,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,405,410,424,434,445,434],
[456,0,420,437,463,450,421,449],
[485,470,0,443,474,464,459,475],
[480,453,447,0,471,463,439,464],
[466,427,416,419,0,442,421,435],
[456,440,426,427,448,0,432,457],
[445,469,431,451,469,458,0,432],
[456,441,415,426,455,433,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,436,401,498,370,428,383],
[528,0,470,477,498,485,486,443],
[454,420,0,431,470,358,385,430],
[489,413,459,0,503,458,467,391],
[392,392,420,387,0,420,429,456],
[520,405,532,432,470,0,512,437],
[462,404,505,423,461,378,0,402],
[507,447,460,499,434,453,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,414,429,450,433,443,456],
[475,0,445,456,475,456,446,469],
[476,445,0,464,484,457,457,469],
[461,434,426,0,428,443,394,428],
[440,415,406,462,0,404,388,445],
[457,434,433,447,486,0,432,454],
[447,444,433,496,502,458,0,446],
[434,421,421,462,445,436,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,454,437,447,467,457,450],
[460,0,458,435,435,456,442,431],
[436,432,0,416,438,414,434,424],
[453,455,474,0,468,455,461,439],
[443,455,452,422,0,432,454,437],
[423,434,476,435,458,0,454,453],
[433,448,456,429,436,436,0,418],
[440,459,466,451,453,437,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,464,368,413,489,428,449],
[404,0,448,454,400,433,520,492],
[426,442,0,441,354,454,470,461],
[522,436,449,0,369,385,463,440],
[477,490,536,521,0,400,518,471],
[401,457,436,505,490,0,485,455],
[462,370,420,427,372,405,0,513],
[441,398,429,450,419,435,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,419,404,441,422,410,481],
[457,0,459,428,456,439,442,469],
[471,431,0,452,450,474,459,507],
[486,462,438,0,442,492,457,498],
[449,434,440,448,0,451,448,511],
[468,451,416,398,439,0,443,467],
[480,448,431,433,442,447,0,507],
[409,421,383,392,379,423,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,428,464,473,433,448,456],
[441,0,451,461,450,447,445,439],
[462,439,0,455,450,450,429,448],
[426,429,435,0,431,414,449,414],
[417,440,440,459,0,427,437,426],
[457,443,440,476,463,0,451,423],
[442,445,461,441,453,439,0,434],
[434,451,442,476,464,467,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,461,457,472,499,469,443],
[402,0,410,399,426,456,419,441],
[429,480,0,436,475,460,427,452],
[433,491,454,0,490,444,425,447],
[418,464,415,400,0,453,434,418],
[391,434,430,446,437,0,406,418],
[421,471,463,465,456,484,0,433],
[447,449,438,443,472,472,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,456,480,448,439,521,469],
[391,0,423,431,433,476,441,478],
[434,467,0,429,483,439,491,461],
[410,459,461,0,475,458,472,457],
[442,457,407,415,0,462,475,444],
[451,414,451,432,428,0,497,445],
[369,449,399,418,415,393,0,391],
[421,412,429,433,446,445,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,293,299,315,346,401,314],
[468,0,465,382,461,489,430,424],
[597,425,0,482,489,419,435,451],
[591,508,408,0,457,610,613,394],
[575,429,401,433,0,431,475,399],
[544,401,471,280,459,0,493,439],
[489,460,455,277,415,397,0,415],
[576,466,439,496,491,451,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,473,435,429,441,463,467],
[435,0,455,431,422,446,436,448],
[417,435,0,433,421,414,442,414],
[455,459,457,0,451,441,453,442],
[461,468,469,439,0,448,468,440],
[449,444,476,449,442,0,455,464],
[427,454,448,437,422,435,0,438],
[423,442,476,448,450,426,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,506,473,506,487,524,483],
[462,0,495,402,492,526,523,490],
[384,395,0,312,467,475,403,396],
[417,488,578,0,539,559,626,473],
[384,398,423,351,0,485,355,424],
[403,364,415,331,405,0,441,418],
[366,367,487,264,535,449,0,429],
[407,400,494,417,466,472,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,483,439,468,459,463,444],
[442,0,467,427,481,466,450,426],
[407,423,0,409,440,435,427,417],
[451,463,481,0,449,450,442,453],
[422,409,450,441,0,442,409,436],
[431,424,455,440,448,0,455,453],
[427,440,463,448,481,435,0,445],
[446,464,473,437,454,437,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,439,452,480,455,455,436],
[447,0,411,453,432,445,409,401],
[451,479,0,481,469,468,439,461],
[438,437,409,0,428,447,439,435],
[410,458,421,462,0,451,391,433],
[435,445,422,443,439,0,423,403],
[435,481,451,451,499,467,0,443],
[454,489,429,455,457,487,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,445,446,456,455,424,443],
[426,0,430,431,453,431,425,419],
[445,460,0,446,470,444,438,442],
[444,459,444,0,473,479,444,456],
[434,437,420,417,0,429,405,404],
[435,459,446,411,461,0,449,418],
[466,465,452,446,485,441,0,453],
[447,471,448,434,486,472,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,439,427,402,428,434,415],
[501,0,467,445,492,457,471,477],
[451,423,0,455,457,430,431,444],
[463,445,435,0,502,455,461,472],
[488,398,433,388,0,411,430,450],
[462,433,460,435,479,0,451,458],
[456,419,459,429,460,439,0,465],
[475,413,446,418,440,432,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,434,438,432,459,464,454],
[432,0,437,439,435,436,458,448],
[456,453,0,454,442,444,469,450],
[452,451,436,0,442,448,451,454],
[458,455,448,448,0,446,460,440],
[431,454,446,442,444,0,479,448],
[426,432,421,439,430,411,0,433],
[436,442,440,436,450,442,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,427,456,446,442,444,440],
[457,0,432,442,445,451,451,444],
[463,458,0,450,462,456,445,450],
[434,448,440,0,446,453,425,432],
[444,445,428,444,0,457,445,456],
[448,439,434,437,433,0,449,456],
[446,439,445,465,445,441,0,456],
[450,446,440,458,434,434,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,416,429,401,444,421,420],
[449,0,464,449,421,454,417,429],
[474,426,0,414,426,434,436,457],
[461,441,476,0,444,441,476,464],
[489,469,464,446,0,466,459,429],
[446,436,456,449,424,0,454,443],
[469,473,454,414,431,436,0,449],
[470,461,433,426,461,447,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,451,457,462,443,457,475],
[420,0,455,446,453,451,438,462],
[439,435,0,441,434,437,443,442],
[433,444,449,0,428,426,437,435],
[428,437,456,462,0,457,457,474],
[447,439,453,464,433,0,464,456],
[433,452,447,453,433,426,0,443],
[415,428,448,455,416,434,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,410,444,478,397,385,486],
[452,0,418,440,455,437,424,422],
[480,472,0,446,483,450,428,472],
[446,450,444,0,412,383,396,482],
[412,435,407,478,0,435,416,469],
[493,453,440,507,455,0,459,481],
[505,466,462,494,474,431,0,505],
[404,468,418,408,421,409,385,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,425,447,447,446,447,454],
[464,0,440,435,437,431,465,446],
[465,450,0,420,454,441,473,468],
[443,455,470,0,448,451,465,454],
[443,453,436,442,0,440,460,449],
[444,459,449,439,450,0,466,475],
[443,425,417,425,430,424,0,431],
[436,444,422,436,441,415,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,439,440,424,432,421,445],
[454,0,440,451,448,422,450,428],
[451,450,0,455,457,433,428,457],
[450,439,435,0,439,401,444,454],
[466,442,433,451,0,416,435,447],
[458,468,457,489,474,0,462,428],
[469,440,462,446,455,428,0,451],
[445,462,433,436,443,462,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,436,461,470,417,424,437],
[461,0,447,448,487,449,440,466],
[454,443,0,475,489,448,440,477],
[429,442,415,0,459,435,432,442],
[420,403,401,431,0,447,425,434],
[473,441,442,455,443,0,447,445],
[466,450,450,458,465,443,0,467],
[453,424,413,448,456,445,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,432,419,419,419,406,438],
[463,0,457,437,429,431,441,474],
[458,433,0,441,423,423,436,474],
[471,453,449,0,444,436,450,460],
[471,461,467,446,0,443,468,487],
[471,459,467,454,447,0,425,489],
[484,449,454,440,422,465,0,488],
[452,416,416,430,403,401,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,388,391,417,596,552,326],
[517,0,384,384,434,517,564,377],
[502,506,0,329,507,699,729,492],
[499,506,561,0,441,576,604,540],
[473,456,383,449,0,486,691,553],
[294,373,191,314,404,0,473,301],
[338,326,161,286,199,417,0,381],
[564,513,398,350,337,589,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,443,452,450,448,436,424],
[449,0,448,456,440,439,443,448],
[447,442,0,452,448,448,444,452],
[438,434,438,0,439,428,454,428],
[440,450,442,451,0,447,442,433],
[442,451,442,462,443,0,461,432],
[454,447,446,436,448,429,0,430],
[466,442,438,462,457,458,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,409,427,458,428,447],
[440,0,441,424,432,440,431,447],
[450,449,0,409,436,435,432,435],
[481,466,481,0,437,461,460,444],
[463,458,454,453,0,466,455,441],
[432,450,455,429,424,0,451,439],
[462,459,458,430,435,439,0,439],
[443,443,455,446,449,451,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,593,492,444,505,460,530],
[421,0,498,533,515,445,513,474],
[297,392,0,302,434,391,357,321],
[398,357,588,0,432,459,461,423],
[446,375,456,458,0,388,441,381],
[385,445,499,431,502,0,475,448],
[430,377,533,429,449,415,0,418],
[360,416,569,467,509,442,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,463,464,467,389,445,427],
[419,0,436,379,467,412,417,472],
[427,454,0,352,436,381,421,445],
[426,511,538,0,488,447,471,494],
[423,423,454,402,0,391,428,445],
[501,478,509,443,499,0,453,518],
[445,473,469,419,462,437,0,490],
[463,418,445,396,445,372,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,459,496,433,470,463,452],
[451,0,441,479,413,423,439,434],
[431,449,0,469,450,442,470,433],
[394,411,421,0,384,407,412,421],
[457,477,440,506,0,458,492,473],
[420,467,448,483,432,0,467,440],
[427,451,420,478,398,423,0,453],
[438,456,457,469,417,450,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,441,416,460,449,389,416],
[475,0,477,464,437,531,453,446],
[449,413,0,446,412,460,416,433],
[474,426,444,0,407,458,393,444],
[430,453,478,483,0,452,373,448],
[441,359,430,432,438,0,365,405],
[501,437,474,497,517,525,0,466],
[474,444,457,446,442,485,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,455,468,475,446,440,470],
[416,0,458,456,443,443,421,434],
[435,432,0,467,470,424,442,442],
[422,434,423,0,440,423,435,425],
[415,447,420,450,0,398,418,426],
[444,447,466,467,492,0,462,458],
[450,469,448,455,472,428,0,445],
[420,456,448,465,464,432,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,477,433,453,440,439,450],
[445,0,449,456,444,448,453,427],
[413,441,0,401,425,410,414,399],
[457,434,489,0,466,450,454,438],
[437,446,465,424,0,451,424,431],
[450,442,480,440,439,0,445,433],
[451,437,476,436,466,445,0,436],
[440,463,491,452,459,457,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,432,461,433,432,473,451],
[440,0,420,427,450,440,465,480],
[458,470,0,443,453,461,477,463],
[429,463,447,0,473,428,485,454],
[457,440,437,417,0,433,468,463],
[458,450,429,462,457,0,472,477],
[417,425,413,405,422,418,0,438],
[439,410,427,436,427,413,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,441,477,377,427,422,480],
[445,0,463,501,401,462,435,471],
[449,427,0,407,423,354,353,395],
[413,389,483,0,472,479,538,433],
[513,489,467,418,0,382,403,427],
[463,428,536,411,508,0,570,435],
[468,455,537,352,487,320,0,393],
[410,419,495,457,463,455,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,453,427,426,475,428,435],
[468,0,467,430,429,449,478,489],
[437,423,0,402,387,415,397,399],
[463,460,488,0,410,452,483,472],
[464,461,503,480,0,456,441,461],
[415,441,475,438,434,0,444,442],
[462,412,493,407,449,446,0,442],
[455,401,491,418,429,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,461,430,442,437,458,433],
[444,0,429,422,445,408,422,426],
[429,461,0,430,473,433,446,448],
[460,468,460,0,457,438,468,446],
[448,445,417,433,0,430,451,443],
[453,482,457,452,460,0,424,432],
[432,468,444,422,439,466,0,426],
[457,464,442,444,447,458,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,429,462,466,454,445,457],
[440,0,437,453,445,444,454,438],
[461,453,0,467,445,441,461,442],
[428,437,423,0,428,429,452,433],
[424,445,445,462,0,453,433,433],
[436,446,449,461,437,0,445,438],
[445,436,429,438,457,445,0,418],
[433,452,448,457,457,452,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,445,446,441,441,473,446],
[448,0,462,427,459,455,468,480],
[445,428,0,424,440,437,447,440],
[444,463,466,0,462,457,481,447],
[449,431,450,428,0,454,466,456],
[449,435,453,433,436,0,446,462],
[417,422,443,409,424,444,0,433],
[444,410,450,443,434,428,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,434,494,468,556,477,429],
[435,0,454,362,382,482,467,461],
[456,436,0,430,422,493,472,400],
[396,528,460,0,448,478,424,425],
[422,508,468,442,0,512,488,443],
[334,408,397,412,378,0,388,378],
[413,423,418,466,402,502,0,452],
[461,429,490,465,447,512,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,456,456,469,451,478,439],
[408,0,465,448,437,429,442,433],
[434,425,0,450,440,438,426,431],
[434,442,440,0,457,446,424,438],
[421,453,450,433,0,426,435,422],
[439,461,452,444,464,0,440,450],
[412,448,464,466,455,450,0,441],
[451,457,459,452,468,440,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,438,475,453,474,450,437],
[456,0,440,449,439,458,457,421],
[452,450,0,476,460,498,424,454],
[415,441,414,0,448,476,430,438],
[437,451,430,442,0,469,457,460],
[416,432,392,414,421,0,432,424],
[440,433,466,460,433,458,0,438],
[453,469,436,452,430,466,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,438,449,428,421,430,392],
[437,0,438,424,438,438,441,394],
[452,452,0,470,408,417,429,451],
[441,466,420,0,412,425,400,423],
[462,452,482,478,0,446,437,448],
[469,452,473,465,444,0,443,440],
[460,449,461,490,453,447,0,422],
[498,496,439,467,442,450,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,423,453,434,420,471,406],
[425,0,411,444,408,422,417,401],
[467,479,0,487,432,453,458,442],
[437,446,403,0,420,454,453,427],
[456,482,458,470,0,450,460,429],
[470,468,437,436,440,0,443,451],
[419,473,432,437,430,447,0,442],
[484,489,448,463,461,439,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,437,467,439,440,480,464],
[445,0,441,463,415,425,451,438],
[453,449,0,449,422,431,468,452],
[423,427,441,0,417,425,469,452],
[451,475,468,473,0,445,490,459],
[450,465,459,465,445,0,466,463],
[410,439,422,421,400,424,0,437],
[426,452,438,438,431,427,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,487,559,477,406,448,495],
[407,0,510,522,467,406,472,520],
[403,380,0,495,474,487,525,543],
[331,368,395,0,380,357,351,418],
[413,423,416,510,0,403,448,488],
[484,484,403,533,487,0,481,502],
[442,418,365,539,442,409,0,500],
[395,370,347,472,402,388,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,467,467,502,424,471,513],
[417,0,447,434,460,427,452,478],
[423,443,0,410,412,425,442,443],
[423,456,480,0,458,453,457,434],
[388,430,478,432,0,421,434,458],
[466,463,465,437,469,0,443,476],
[419,438,448,433,456,447,0,463],
[377,412,447,456,432,414,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,418,468,436,440,442,413],
[463,0,428,461,443,461,453,447],
[472,462,0,455,444,457,455,468],
[422,429,435,0,452,431,448,441],
[454,447,446,438,0,442,442,434],
[450,429,433,459,448,0,436,414],
[448,437,435,442,448,454,0,430],
[477,443,422,449,456,476,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,445,412,428,425,435,395],
[434,0,396,404,420,407,416,407],
[445,494,0,452,451,448,449,468],
[478,486,438,0,461,436,502,436],
[462,470,439,429,0,427,421,451],
[465,483,442,454,463,0,429,442],
[455,474,441,388,469,461,0,446],
[495,483,422,454,439,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,453,430,400,427,431,436],
[433,0,440,434,419,427,427,431],
[437,450,0,427,419,414,427,419],
[460,456,463,0,436,448,437,450],
[490,471,471,454,0,445,434,451],
[463,463,476,442,445,0,451,446],
[459,463,463,453,456,439,0,450],
[454,459,471,440,439,444,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,454,462,465,452,441,450],
[396,0,427,422,419,414,430,421],
[436,463,0,450,435,429,428,422],
[428,468,440,0,455,425,444,450],
[425,471,455,435,0,437,464,445],
[438,476,461,465,453,0,446,457],
[449,460,462,446,426,444,0,446],
[440,469,468,440,445,433,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,382,425,427,438,454,436],
[425,0,382,444,448,436,446,429],
[508,508,0,471,438,483,467,475],
[465,446,419,0,463,446,451,401],
[463,442,452,427,0,455,506,446],
[452,454,407,444,435,0,465,467],
[436,444,423,439,384,425,0,447],
[454,461,415,489,444,423,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,507,446,437,408,450,449],
[446,0,450,380,386,403,401,421],
[383,440,0,384,431,411,362,415],
[444,510,506,0,464,417,442,390],
[453,504,459,426,0,463,411,415],
[482,487,479,473,427,0,446,402],
[440,489,528,448,479,444,0,463],
[441,469,475,500,475,488,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,458,455,427,419,431,411],
[440,0,472,459,437,423,429,424],
[432,418,0,440,418,391,410,415],
[435,431,450,0,414,405,418,420],
[463,453,472,476,0,438,447,432],
[471,467,499,485,452,0,451,441],
[459,461,480,472,443,439,0,448],
[479,466,475,470,458,449,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,413,423,403,435,427,406],
[479,0,406,445,433,451,463,430],
[477,484,0,455,452,460,432,447],
[467,445,435,0,411,451,415,435],
[487,457,438,479,0,466,471,484],
[455,439,430,439,424,0,446,458],
[463,427,458,475,419,444,0,477],
[484,460,443,455,406,432,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,475,403,440,435,452,434],
[437,0,446,425,449,457,455,410],
[415,444,0,419,424,422,433,409],
[487,465,471,0,448,454,468,436],
[450,441,466,442,0,446,461,463],
[455,433,468,436,444,0,457,440],
[438,435,457,422,429,433,0,438],
[456,480,481,454,427,450,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,499,464,435,457,462,442],
[512,0,490,532,479,490,483,397],
[391,400,0,476,461,448,440,443],
[426,358,414,0,438,471,446,398],
[455,411,429,452,0,481,501,427],
[433,400,442,419,409,0,436,435],
[428,407,450,444,389,454,0,451],
[448,493,447,492,463,455,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,413,432,433,449,419,399],
[461,0,439,462,435,434,418,424],
[477,451,0,488,462,473,459,438],
[458,428,402,0,440,424,416,419],
[457,455,428,450,0,451,451,453],
[441,456,417,466,439,0,434,412],
[471,472,431,474,439,456,0,445],
[491,466,452,471,437,478,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,455,430,436,463,465,490],
[422,0,445,419,448,435,421,434],
[435,445,0,429,428,424,439,464],
[460,471,461,0,459,451,471,442],
[454,442,462,431,0,448,458,451],
[427,455,466,439,442,0,455,446],
[425,469,451,419,432,435,0,445],
[400,456,426,448,439,444,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,430,404,443,449,436,443],
[419,0,414,417,431,426,429,424],
[460,476,0,455,445,439,428,445],
[486,473,435,0,456,431,434,478],
[447,459,445,434,0,462,424,442],
[441,464,451,459,428,0,433,438],
[454,461,462,456,466,457,0,430],
[447,466,445,412,448,452,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,392,347,365,434,439,413],
[456,0,432,412,433,483,452,417],
[498,458,0,412,410,464,470,446],
[543,478,478,0,415,463,460,448],
[525,457,480,475,0,482,490,431],
[456,407,426,427,408,0,476,406],
[451,438,420,430,400,414,0,424],
[477,473,444,442,459,484,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,446,418,452,453,437,434],
[472,0,423,439,461,457,430,441],
[444,467,0,444,463,459,419,436],
[472,451,446,0,475,467,452,442],
[438,429,427,415,0,460,426,404],
[437,433,431,423,430,0,436,411],
[453,460,471,438,464,454,0,453],
[456,449,454,448,486,479,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,457,445,468,504,473,473],
[428,0,445,434,434,472,479,447],
[433,445,0,426,446,455,468,450],
[445,456,464,0,467,465,477,475],
[422,456,444,423,0,470,454,430],
[386,418,435,425,420,0,441,426],
[417,411,422,413,436,449,0,420],
[417,443,440,415,460,464,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,474,438,426,461,450,447],
[426,0,469,443,416,446,432,437],
[416,421,0,454,423,422,436,452],
[452,447,436,0,439,416,435,453],
[464,474,467,451,0,453,439,450],
[429,444,468,474,437,0,445,444],
[440,458,454,455,451,445,0,463],
[443,453,438,437,440,446,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,468,460,440,461,430,468],
[420,0,457,442,391,477,445,416],
[422,433,0,454,444,471,425,401],
[430,448,436,0,437,439,416,419],
[450,499,446,453,0,486,481,427],
[429,413,419,451,404,0,448,390],
[460,445,465,474,409,442,0,457],
[422,474,489,471,463,500,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,369,444,532,432,616,469],
[460,0,380,523,532,506,522,435],
[521,510,0,552,462,517,451,388],
[446,367,338,0,334,493,489,367],
[358,358,428,556,0,417,548,463],
[458,384,373,397,473,0,417,291],
[274,368,439,401,342,473,0,420],
[421,455,502,523,427,599,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,421,395,394,413,427,436],
[465,0,458,477,462,464,464,443],
[469,432,0,471,446,427,470,442],
[495,413,419,0,428,438,423,443],
[496,428,444,462,0,451,465,447],
[477,426,463,452,439,0,450,441],
[463,426,420,467,425,440,0,460],
[454,447,448,447,443,449,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,476,458,476,457,449,441],
[418,0,445,458,441,436,461,427],
[414,445,0,452,456,431,424,405],
[432,432,438,0,460,435,461,429],
[414,449,434,430,0,430,419,439],
[433,454,459,455,460,0,429,427],
[441,429,466,429,471,461,0,454],
[449,463,485,461,451,463,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,417,446,429,458,433,445],
[440,0,425,436,430,432,415,454],
[473,465,0,463,461,455,438,457],
[444,454,427,0,443,445,435,453],
[461,460,429,447,0,460,445,463],
[432,458,435,445,430,0,434,458],
[457,475,452,455,445,456,0,458],
[445,436,433,437,427,432,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,425,365,404,403,411,397],
[493,0,454,459,501,406,448,457],
[465,436,0,454,448,476,414,454],
[525,431,436,0,478,502,438,514],
[486,389,442,412,0,438,468,431],
[487,484,414,388,452,0,457,441],
[479,442,476,452,422,433,0,417],
[493,433,436,376,459,449,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,572,399,594,640,596,453,631],
[318,0,219,478,481,335,275,368],
[491,671,0,723,799,736,419,611],
[296,412,167,0,268,328,254,323],
[250,409,91,622,0,576,462,443],
[294,555,154,562,314,0,397,509],
[437,615,471,636,428,493,0,638],
[259,522,279,567,447,381,252,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,421,431,439,408,411,412],
[472,0,418,443,418,463,449,451],
[469,472,0,427,455,455,474,464],
[459,447,463,0,447,438,437,449],
[451,472,435,443,0,446,464,423],
[482,427,435,452,444,0,466,447],
[479,441,416,453,426,424,0,432],
[478,439,426,441,467,443,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,529,441,470,468,455,442],
[447,0,495,483,366,479,470,387],
[361,395,0,453,422,410,485,385],
[449,407,437,0,416,496,458,485],
[420,524,468,474,0,482,461,421],
[422,411,480,394,408,0,477,396],
[435,420,405,432,429,413,0,436],
[448,503,505,405,469,494,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,468,445,471,512,496,464],
[429,0,451,455,455,509,491,476],
[422,439,0,442,440,477,474,475],
[445,435,448,0,476,465,463,458],
[419,435,450,414,0,453,466,429],
[378,381,413,425,437,0,443,436],
[394,399,416,427,424,447,0,434],
[426,414,415,432,461,454,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,431,450,432,442,455,443],
[436,0,419,435,447,437,439,431],
[459,471,0,438,441,459,466,450],
[440,455,452,0,445,432,438,443],
[458,443,449,445,0,445,452,442],
[448,453,431,458,445,0,452,442],
[435,451,424,452,438,438,0,443],
[447,459,440,447,448,448,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,392,408,391,420,442,430],
[472,0,423,447,454,435,484,464],
[498,467,0,442,493,461,476,492],
[482,443,448,0,481,469,477,487],
[499,436,397,409,0,479,472,460],
[470,455,429,421,411,0,466,469],
[448,406,414,413,418,424,0,444],
[460,426,398,403,430,421,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,451,449,464,464,460,443],
[469,0,462,446,439,463,460,446],
[439,428,0,446,457,460,455,461],
[441,444,444,0,450,488,457,449],
[426,451,433,440,0,450,455,461],
[426,427,430,402,440,0,444,432],
[430,430,435,433,435,446,0,441],
[447,444,429,441,429,458,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,473,418,446,415,464,471],
[440,0,432,439,436,432,458,469],
[417,458,0,445,436,397,493,474],
[472,451,445,0,470,445,494,480],
[444,454,454,420,0,478,478,507],
[475,458,493,445,412,0,502,456],
[426,432,397,396,412,388,0,432],
[419,421,416,410,383,434,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,425,412,425,456,434,441],
[465,0,446,448,441,442,459,446],
[465,444,0,435,463,456,460,440],
[478,442,455,0,452,445,453,455],
[465,449,427,438,0,447,452,446],
[434,448,434,445,443,0,470,440],
[456,431,430,437,438,420,0,425],
[449,444,450,435,444,450,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,495,456,442,451,502,478],
[424,0,442,465,445,401,458,446],
[395,448,0,442,429,424,468,446],
[434,425,448,0,431,445,438,467],
[448,445,461,459,0,465,476,467],
[439,489,466,445,425,0,490,471],
[388,432,422,452,414,400,0,436],
[412,444,444,423,423,419,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,448,414,433,449,466,416],
[474,0,469,468,447,445,477,419],
[442,421,0,436,410,429,420,422],
[476,422,454,0,424,427,421,447],
[457,443,480,466,0,443,458,466],
[441,445,461,463,447,0,456,443],
[424,413,470,469,432,434,0,429],
[474,471,468,443,424,447,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,472,464,484,437,440,480],
[437,0,470,448,461,445,434,463],
[418,420,0,417,429,418,417,451],
[426,442,473,0,460,435,435,469],
[406,429,461,430,0,432,427,448],
[453,445,472,455,458,0,464,470],
[450,456,473,455,463,426,0,474],
[410,427,439,421,442,420,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,434,427,448,451,447,452],
[463,0,460,430,465,481,448,461],
[456,430,0,463,465,465,456,461],
[463,460,427,0,465,453,446,463],
[442,425,425,425,0,442,436,469],
[439,409,425,437,448,0,443,445],
[443,442,434,444,454,447,0,446],
[438,429,429,427,421,445,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,467,391,452,460,490,480],
[424,0,438,455,415,433,469,445],
[423,452,0,424,403,445,468,442],
[499,435,466,0,457,451,489,482],
[438,475,487,433,0,465,497,478],
[430,457,445,439,425,0,475,434],
[400,421,422,401,393,415,0,401],
[410,445,448,408,412,456,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,451,467,468,479,469,456],
[449,0,415,471,457,460,444,444],
[439,475,0,469,466,476,459,468],
[423,419,421,0,434,457,432,422],
[422,433,424,456,0,461,424,458],
[411,430,414,433,429,0,446,449],
[421,446,431,458,466,444,0,429],
[434,446,422,468,432,441,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,454,454,407,457,443,448],
[444,0,453,463,465,477,450,474],
[436,437,0,455,449,471,430,467],
[436,427,435,0,424,410,464,439],
[483,425,441,466,0,441,479,454],
[433,413,419,480,449,0,439,423],
[447,440,460,426,411,451,0,460],
[442,416,423,451,436,467,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,429,446,459,432,454,441],
[443,0,454,438,454,433,468,446],
[461,436,0,446,431,437,477,425],
[444,452,444,0,462,440,470,453],
[431,436,459,428,0,428,439,446],
[458,457,453,450,462,0,466,442],
[436,422,413,420,451,424,0,411],
[449,444,465,437,444,448,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,454,441,434,469,458,432],
[462,0,439,454,465,469,460,465],
[436,451,0,483,481,461,470,473],
[449,436,407,0,450,446,453,454],
[456,425,409,440,0,444,444,452],
[421,421,429,444,446,0,423,419],
[432,430,420,437,446,467,0,450],
[458,425,417,436,438,471,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,417,416,485,468,448,472],
[437,0,453,456,461,470,439,468],
[473,437,0,450,479,461,484,461],
[474,434,440,0,446,464,422,456],
[405,429,411,444,0,460,419,438],
[422,420,429,426,430,0,430,451],
[442,451,406,468,471,460,0,457],
[418,422,429,434,452,439,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,442,445,476,423,462,443],
[464,0,428,413,421,436,429,415],
[448,462,0,435,452,423,452,474],
[445,477,455,0,473,445,466,455],
[414,469,438,417,0,409,452,401],
[467,454,467,445,481,0,435,445],
[428,461,438,424,438,455,0,425],
[447,475,416,435,489,445,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,432,440,418,471,450,437],
[429,0,432,436,433,426,423,400],
[458,458,0,435,453,454,443,436],
[450,454,455,0,448,480,425,415],
[472,457,437,442,0,461,423,450],
[419,464,436,410,429,0,430,366],
[440,467,447,465,467,460,0,411],
[453,490,454,475,440,524,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,458,410,432,430,417,442],
[449,0,444,419,427,442,433,444],
[432,446,0,427,434,415,433,451],
[480,471,463,0,450,449,443,461],
[458,463,456,440,0,437,441,455],
[460,448,475,441,453,0,460,458],
[473,457,457,447,449,430,0,463],
[448,446,439,429,435,432,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,462,467,445,446,453,459],
[438,0,466,461,438,449,444,449],
[428,424,0,437,442,454,446,456],
[423,429,453,0,442,450,442,460],
[445,452,448,448,0,436,454,474],
[444,441,436,440,454,0,455,469],
[437,446,444,448,436,435,0,451],
[431,441,434,430,416,421,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,471,441,450,435,451,439],
[427,0,454,459,484,428,463,431],
[419,436,0,438,473,427,427,443],
[449,431,452,0,446,434,445,445],
[440,406,417,444,0,419,430,410],
[455,462,463,456,471,0,456,437],
[439,427,463,445,460,434,0,448],
[451,459,447,445,480,453,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,406,452,435,451,459,410],
[455,0,406,486,453,471,485,454],
[484,484,0,468,445,445,469,447],
[438,404,422,0,413,453,417,431],
[455,437,445,477,0,450,459,434],
[439,419,445,437,440,0,454,431],
[431,405,421,473,431,436,0,404],
[480,436,443,459,456,459,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,437,454,444,433,492,426],
[456,0,446,461,471,438,487,433],
[453,444,0,458,437,435,463,432],
[436,429,432,0,432,427,470,428],
[446,419,453,458,0,438,465,439],
[457,452,455,463,452,0,463,445],
[398,403,427,420,425,427,0,403],
[464,457,458,462,451,445,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,383,414,370,386,427,462],
[503,0,424,399,450,473,433,492],
[507,466,0,434,458,465,435,532],
[476,491,456,0,443,507,473,489],
[520,440,432,447,0,465,452,510],
[504,417,425,383,425,0,421,436],
[463,457,455,417,438,469,0,518],
[428,398,358,401,380,454,372,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,437,410,463,416,400,396],
[517,0,459,438,488,431,454,449],
[453,431,0,430,469,394,452,452],
[480,452,460,0,511,469,466,418],
[427,402,421,379,0,414,429,364],
[474,459,496,421,476,0,438,440],
[490,436,438,424,461,452,0,412],
[494,441,438,472,526,450,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,437,417,443,422,436,442],
[469,0,457,455,460,438,451,467],
[453,433,0,432,446,421,444,453],
[473,435,458,0,460,433,455,448],
[447,430,444,430,0,428,426,442],
[468,452,469,457,462,0,468,445],
[454,439,446,435,464,422,0,446],
[448,423,437,442,448,445,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,436,428,442,463,467,454],
[435,0,411,439,446,438,454,430],
[454,479,0,431,476,470,474,444],
[462,451,459,0,458,448,461,443],
[448,444,414,432,0,450,444,449],
[427,452,420,442,440,0,448,442],
[423,436,416,429,446,442,0,450],
[436,460,446,447,441,448,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,505,436,421,428,464,502],
[426,0,454,440,402,437,438,465],
[385,436,0,441,399,410,431,401],
[454,450,449,0,404,446,438,452],
[469,488,491,486,0,445,465,468],
[462,453,480,444,445,0,466,475],
[426,452,459,452,425,424,0,457],
[388,425,489,438,422,415,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,541,378,505,579,413,438,567],
[349,0,380,433,373,303,360,485],
[512,510,0,585,530,492,437,574],
[385,457,305,0,432,359,474,506],
[311,517,360,458,0,380,398,518],
[477,587,398,531,510,0,387,497],
[452,530,453,416,492,503,0,570],
[323,405,316,384,372,393,320,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,475,473,449,428,503,466],
[415,0,462,456,406,392,495,471],
[415,428,0,437,408,460,470,406],
[417,434,453,0,381,423,483,450],
[441,484,482,509,0,462,470,446],
[462,498,430,467,428,0,546,457],
[387,395,420,407,420,344,0,347],
[424,419,484,440,444,433,543,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,434,470,457,484,455,449],
[427,0,450,452,467,481,469,436],
[456,440,0,419,474,487,448,457],
[420,438,471,0,454,443,447,420],
[433,423,416,436,0,445,452,433],
[406,409,403,447,445,0,446,429],
[435,421,442,443,438,444,0,406],
[441,454,433,470,457,461,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,441,453,451,460,467,439],
[429,0,434,443,450,454,457,432],
[449,456,0,440,446,427,451,429],
[437,447,450,0,443,443,452,448],
[439,440,444,447,0,452,451,421],
[430,436,463,447,438,0,457,434],
[423,433,439,438,439,433,0,424],
[451,458,461,442,469,456,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,381,599,548,474,412,487,497],
[509,0,532,610,365,535,416,446],
[291,358,0,349,385,301,331,248],
[342,280,541,0,308,385,356,343],
[416,525,505,582,0,453,401,438],
[478,355,589,505,437,0,455,349],
[403,474,559,534,489,435,0,438],
[393,444,642,547,452,541,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,431,424,437,424,425,443],
[433,0,448,437,448,430,445,435],
[459,442,0,429,435,453,431,433],
[466,453,461,0,434,449,442,460],
[453,442,455,456,0,450,451,454],
[466,460,437,441,440,0,437,463],
[465,445,459,448,439,453,0,465],
[447,455,457,430,436,427,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,424,486,415,505,417,478],
[431,0,455,487,499,498,374,454],
[466,435,0,504,460,507,461,505],
[404,403,386,0,408,499,436,439],
[475,391,430,482,0,529,426,535],
[385,392,383,391,361,0,354,395],
[473,516,429,454,464,536,0,515],
[412,436,385,451,355,495,375,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,420,471,404,433,431,469],
[453,0,421,447,421,427,405,463],
[470,469,0,463,441,471,442,504],
[419,443,427,0,403,431,410,469],
[486,469,449,487,0,431,442,533],
[457,463,419,459,459,0,446,496],
[459,485,448,480,448,444,0,511],
[421,427,386,421,357,394,379,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,432,470,441,445,446,467],
[428,0,435,444,408,440,429,453],
[458,455,0,477,438,436,461,474],
[420,446,413,0,442,432,413,436],
[449,482,452,448,0,443,439,461],
[445,450,454,458,447,0,433,472],
[444,461,429,477,451,457,0,454],
[423,437,416,454,429,418,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,458,439,433,455,441,459],
[449,0,456,453,437,457,465,445],
[432,434,0,434,416,439,445,449],
[451,437,456,0,451,452,464,451],
[457,453,474,439,0,451,449,466],
[435,433,451,438,439,0,442,432],
[449,425,445,426,441,448,0,445],
[431,445,441,439,424,458,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,448,454,450,505,470,438],
[414,0,406,436,427,445,419,437],
[442,484,0,446,453,483,473,447],
[436,454,444,0,431,470,455,420],
[440,463,437,459,0,475,447,432],
[385,445,407,420,415,0,410,429],
[420,471,417,435,443,480,0,424],
[452,453,443,470,458,461,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,430,439,451,455,419],
[440,0,463,430,448,455,436,458],
[445,427,0,409,436,438,440,433],
[460,460,481,0,460,441,458,429],
[451,442,454,430,0,438,451,436],
[439,435,452,449,452,0,433,432],
[435,454,450,432,439,457,0,452],
[471,432,457,461,454,458,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,450,460,452,415,414,479],
[446,0,453,443,473,447,418,478],
[440,437,0,456,474,439,444,505],
[430,447,434,0,466,445,452,486],
[438,417,416,424,0,425,400,486],
[475,443,451,445,465,0,461,520],
[476,472,446,438,490,429,0,472],
[411,412,385,404,404,370,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,410,465,448,460,403,452],
[466,0,460,490,468,454,429,430],
[480,430,0,452,445,458,373,410],
[425,400,438,0,454,482,391,438],
[442,422,445,436,0,450,408,390],
[430,436,432,408,440,0,374,433],
[487,461,517,499,482,516,0,415],
[438,460,480,452,500,457,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,493,469,468,460,412,422],
[407,0,447,450,401,439,398,437],
[397,443,0,398,381,401,376,383],
[421,440,492,0,374,400,413,460],
[422,489,509,516,0,480,472,444],
[430,451,489,490,410,0,436,411],
[478,492,514,477,418,454,0,444],
[468,453,507,430,446,479,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,442,462,473,490,457,478],
[426,0,486,394,499,435,426,480],
[448,404,0,447,487,504,459,453],
[428,496,443,0,485,504,404,464],
[417,391,403,405,0,449,397,399],
[400,455,386,386,441,0,373,398],
[433,464,431,486,493,517,0,469],
[412,410,437,426,491,492,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,440,414,440,447,451,456],
[459,0,454,440,437,449,459,462],
[450,436,0,444,427,423,471,458],
[476,450,446,0,416,438,468,472],
[450,453,463,474,0,438,474,472],
[443,441,467,452,452,0,436,465],
[439,431,419,422,416,454,0,422],
[434,428,432,418,418,425,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,468,446,501,466,502,434],
[442,0,437,434,465,454,429,422],
[422,453,0,423,467,454,426,422],
[444,456,467,0,494,445,493,421],
[389,425,423,396,0,433,408,374],
[424,436,436,445,457,0,493,459],
[388,461,464,397,482,397,0,409],
[456,468,468,469,516,431,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,339,364,296,358,409,359,444],
[551,0,253,428,479,374,440,508],
[526,637,0,532,414,505,477,612],
[594,462,358,0,581,572,564,527],
[532,411,476,309,0,455,336,487],
[481,516,385,318,435,0,430,413],
[531,450,413,326,554,460,0,495],
[446,382,278,363,403,477,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,443,438,436,432,456,446],
[465,0,457,456,451,456,457,442],
[447,433,0,450,449,449,455,458],
[452,434,440,0,465,444,458,447],
[454,439,441,425,0,447,451,455],
[458,434,441,446,443,0,450,439],
[434,433,435,432,439,440,0,429],
[444,448,432,443,435,451,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,445,429,443,447,439,450],
[455,0,462,458,450,443,444,443],
[445,428,0,435,431,429,442,440],
[461,432,455,0,453,434,445,450],
[447,440,459,437,0,446,444,437],
[443,447,461,456,444,0,433,434],
[451,446,448,445,446,457,0,440],
[440,447,450,440,453,456,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,422,457,432,415,438,412],
[450,0,439,451,443,426,443,424],
[468,451,0,471,464,421,445,439],
[433,439,419,0,399,425,414,419],
[458,447,426,491,0,454,464,447],
[475,464,469,465,436,0,435,464],
[452,447,445,476,426,455,0,446],
[478,466,451,471,443,426,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,438,442,517,491,429,431],
[394,0,413,378,507,454,407,423],
[452,477,0,427,508,488,491,429],
[448,512,463,0,544,512,442,479],
[373,383,382,346,0,415,413,373],
[399,436,402,378,475,0,378,430],
[461,483,399,448,477,512,0,464],
[459,467,461,411,517,460,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,442,449,473,440,473,478],
[414,0,458,504,412,485,433,499],
[448,432,0,449,475,454,522,475],
[441,386,441,0,414,427,405,460],
[417,478,415,476,0,474,521,522],
[450,405,436,463,416,0,414,494],
[417,457,368,485,369,476,0,506],
[412,391,415,430,368,396,384,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,475,463,474,462,459,440],
[415,0,465,404,480,422,362,419],
[415,425,0,432,404,423,413,480],
[427,486,458,0,483,446,486,477],
[416,410,486,407,0,420,396,498],
[428,468,467,444,470,0,442,507],
[431,528,477,404,494,448,0,472],
[450,471,410,413,392,383,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,496,517,465,501,415,423],
[458,0,382,494,472,430,366,525],
[394,508,0,472,450,461,426,431],
[373,396,418,0,371,413,413,411],
[425,418,440,519,0,497,470,439],
[389,460,429,477,393,0,469,419],
[475,524,464,477,420,421,0,433],
[467,365,459,479,451,471,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,443,428,481,449,418,454],
[414,0,446,405,446,391,386,435],
[447,444,0,449,419,440,427,410],
[462,485,441,0,460,415,432,420],
[409,444,471,430,0,425,405,388],
[441,499,450,475,465,0,429,436],
[472,504,463,458,485,461,0,422],
[436,455,480,470,502,454,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,401,518,621,656,547,437],
[392,0,394,570,426,593,379,446],
[489,496,0,518,483,469,467,421],
[372,320,372,0,443,521,293,379],
[269,464,407,447,0,281,329,511],
[234,297,421,369,609,0,284,425],
[343,511,423,597,561,606,0,420],
[453,444,469,511,379,465,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,465,435,453,436,452,440],
[450,0,455,454,472,445,466,441],
[425,435,0,449,445,437,448,448],
[455,436,441,0,469,434,443,450],
[437,418,445,421,0,451,449,449],
[454,445,453,456,439,0,458,445],
[438,424,442,447,441,432,0,443],
[450,449,442,440,441,445,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,440,456,439,430,423,422],
[454,0,429,433,445,425,429,428],
[450,461,0,453,448,448,422,433],
[434,457,437,0,461,441,425,437],
[451,445,442,429,0,443,431,444],
[460,465,442,449,447,0,446,457],
[467,461,468,465,459,444,0,465],
[468,462,457,453,446,433,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,418,404,422,412,437,435],
[442,0,437,447,458,437,447,452],
[472,453,0,452,457,445,470,470],
[486,443,438,0,443,439,454,448],
[468,432,433,447,0,431,443,436],
[478,453,445,451,459,0,453,456],
[453,443,420,436,447,437,0,443],
[455,438,420,442,454,434,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,441,487,432,419,453,496],
[436,0,453,431,452,424,449,470],
[449,437,0,481,455,457,487,446],
[403,459,409,0,448,448,448,458],
[458,438,435,442,0,412,443,461],
[471,466,433,442,478,0,486,481],
[437,441,403,442,447,404,0,442],
[394,420,444,432,429,409,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,431,473,424,404,439,470],
[468,0,438,496,444,455,421,503],
[459,452,0,515,453,437,425,462],
[417,394,375,0,382,409,381,429],
[466,446,437,508,0,380,453,468],
[486,435,453,481,510,0,390,462],
[451,469,465,509,437,500,0,484],
[420,387,428,461,422,428,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,551,499,474,500,454,432],
[428,0,503,453,428,541,464,397],
[339,387,0,426,470,483,446,401],
[391,437,464,0,463,475,434,431],
[416,462,420,427,0,498,506,394],
[390,349,407,415,392,0,448,466],
[436,426,444,456,384,442,0,413],
[458,493,489,459,496,424,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,474,453,445,470,462,452],
[432,0,461,442,429,470,444,448],
[416,429,0,417,434,442,426,451],
[437,448,473,0,435,465,463,455],
[445,461,456,455,0,457,457,457],
[420,420,448,425,433,0,421,449],
[428,446,464,427,433,469,0,446],
[438,442,439,435,433,441,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,435,459,478,462,468,463],
[434,0,412,465,457,469,465,450],
[455,478,0,461,440,473,422,469],
[431,425,429,0,414,441,399,468],
[412,433,450,476,0,484,445,484],
[428,421,417,449,406,0,405,422],
[422,425,468,491,445,485,0,470],
[427,440,421,422,406,468,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,448,464,374,502,440,462],
[391,0,418,405,428,503,411,378],
[442,472,0,446,454,528,478,408],
[426,485,444,0,377,445,425,404],
[516,462,436,513,0,568,477,429],
[388,387,362,445,322,0,373,413],
[450,479,412,465,413,517,0,409],
[428,512,482,486,461,477,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,385,366,443,385,413,454],
[512,0,444,447,464,416,428,490],
[505,446,0,432,508,476,483,495],
[524,443,458,0,479,478,455,513],
[447,426,382,411,0,359,402,428],
[505,474,414,412,531,0,468,463],
[477,462,407,435,488,422,0,476],
[436,400,395,377,462,427,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,462,430,449,466,445,447],
[451,0,462,456,458,459,447,440],
[428,428,0,415,426,440,414,445],
[460,434,475,0,439,470,415,456],
[441,432,464,451,0,471,441,450],
[424,431,450,420,419,0,442,425],
[445,443,476,475,449,448,0,459],
[443,450,445,434,440,465,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,438,416,445,415,459,436],
[430,0,408,407,425,447,444,393],
[452,482,0,467,435,434,375,381],
[474,483,423,0,438,488,418,463],
[445,465,455,452,0,467,419,421],
[475,443,456,402,423,0,425,434],
[431,446,515,472,471,465,0,460],
[454,497,509,427,469,456,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,435,421,420,426,423,420],
[475,0,452,444,458,454,449,464],
[455,438,0,447,454,448,437,436],
[469,446,443,0,421,423,436,404],
[470,432,436,469,0,462,453,430],
[464,436,442,467,428,0,442,421],
[467,441,453,454,437,448,0,424],
[470,426,454,486,460,469,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,457,416,423,455,440,432],
[425,0,465,464,479,489,446,469],
[433,425,0,442,421,453,411,440],
[474,426,448,0,443,461,410,455],
[467,411,469,447,0,441,434,436],
[435,401,437,429,449,0,440,431],
[450,444,479,480,456,450,0,474],
[458,421,450,435,454,459,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,446,440,446,439,423,450],
[481,0,435,442,446,441,423,468],
[444,455,0,442,425,447,448,474],
[450,448,448,0,451,444,459,461],
[444,444,465,439,0,437,438,455],
[451,449,443,446,453,0,424,455],
[467,467,442,431,452,466,0,479],
[440,422,416,429,435,435,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,490,443,480,470,435,473],
[427,0,456,457,441,454,464,466],
[400,434,0,452,443,457,434,423],
[447,433,438,0,478,469,419,445],
[410,449,447,412,0,440,415,427],
[420,436,433,421,450,0,423,462],
[455,426,456,471,475,467,0,455],
[417,424,467,445,463,428,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,416,450,450,446,431,384],
[464,0,475,525,492,486,464,431],
[474,415,0,466,472,459,423,443],
[440,365,424,0,454,455,438,429],
[440,398,418,436,0,472,391,404],
[444,404,431,435,418,0,422,410],
[459,426,467,452,499,468,0,469],
[506,459,447,461,486,480,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,447,481,478,450,483,459],
[455,0,474,480,496,457,439,480],
[443,416,0,450,471,421,443,451],
[409,410,440,0,457,446,430,434],
[412,394,419,433,0,416,445,402],
[440,433,469,444,474,0,470,448],
[407,451,447,460,445,420,0,460],
[431,410,439,456,488,442,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,457,463,452,447,468,447],
[461,0,442,443,460,440,474,412],
[433,448,0,452,448,437,464,433],
[427,447,438,0,435,455,455,427],
[438,430,442,455,0,444,464,430],
[443,450,453,435,446,0,437,445],
[422,416,426,435,426,453,0,428],
[443,478,457,463,460,445,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,430,435,449,444,431,421],
[431,0,433,450,460,453,411,421],
[460,457,0,443,471,449,427,435],
[455,440,447,0,461,451,428,450],
[441,430,419,429,0,466,412,430],
[446,437,441,439,424,0,427,432],
[459,479,463,462,478,463,0,441],
[469,469,455,440,460,458,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,456,410,529,574,472,457],
[392,0,348,350,384,496,435,349],
[434,542,0,394,541,518,517,469],
[480,540,496,0,469,559,489,431],
[361,506,349,421,0,528,441,390],
[316,394,372,331,362,0,385,274],
[418,455,373,401,449,505,0,415],
[433,541,421,459,500,616,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,446,448,470,468,466,442],
[425,0,450,452,488,427,428,433],
[444,440,0,485,448,413,418,457],
[442,438,405,0,450,379,385,397],
[420,402,442,440,0,429,426,440],
[422,463,477,511,461,0,467,456],
[424,462,472,505,464,423,0,446],
[448,457,433,493,450,434,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,452,467,442,446,453,413],
[455,0,435,468,434,430,485,407],
[438,455,0,488,470,496,447,459],
[423,422,402,0,416,432,444,430],
[448,456,420,474,0,498,466,456],
[444,460,394,458,392,0,462,437],
[437,405,443,446,424,428,0,386],
[477,483,431,460,434,453,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,492,608,294,390,398,283],
[466,0,428,500,417,328,443,394],
[398,462,0,400,402,455,488,392],
[282,390,490,0,336,429,353,363],
[596,473,488,554,0,489,487,391],
[500,562,435,461,401,0,512,514],
[492,447,402,537,403,378,0,332],
[607,496,498,527,499,376,558,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,451,465,447,462,472,436],
[432,0,444,456,460,454,442,426],
[439,446,0,469,469,438,441,437],
[425,434,421,0,440,440,425,424],
[443,430,421,450,0,440,455,453],
[428,436,452,450,450,0,445,430],
[418,448,449,465,435,445,0,435],
[454,464,453,466,437,460,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,415,427,449,493,476,435],
[498,0,447,421,482,481,473,487],
[475,443,0,478,476,454,518,508],
[463,469,412,0,459,469,492,496],
[441,408,414,431,0,445,436,390],
[397,409,436,421,445,0,474,415],
[414,417,372,398,454,416,0,436],
[455,403,382,394,500,475,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,436,451,457,390,458,410],
[465,0,438,483,443,443,464,448],
[454,452,0,480,444,463,476,444],
[439,407,410,0,432,422,443,428],
[433,447,446,458,0,420,453,457],
[500,447,427,468,470,0,491,421],
[432,426,414,447,437,399,0,423],
[480,442,446,462,433,469,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,448,442,426,444,460,453],
[459,0,452,441,423,443,469,469],
[442,438,0,424,449,449,445,433],
[448,449,466,0,433,446,451,451],
[464,467,441,457,0,437,455,453],
[446,447,441,444,453,0,462,447],
[430,421,445,439,435,428,0,442],
[437,421,457,439,437,443,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,457,410,483,474,422,479],
[436,0,424,435,444,451,414,433],
[433,466,0,413,452,450,429,423],
[480,455,477,0,474,447,464,439],
[407,446,438,416,0,422,400,422],
[416,439,440,443,468,0,449,444],
[468,476,461,426,490,441,0,450],
[411,457,467,451,468,446,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,430,411,391,430,459,429],
[459,0,475,442,488,477,472,463],
[460,415,0,436,479,486,513,460],
[479,448,454,0,486,468,449,438],
[499,402,411,404,0,450,425,445],
[460,413,404,422,440,0,442,425],
[431,418,377,441,465,448,0,449],
[461,427,430,452,445,465,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,449,452,427,449,461,448],
[428,0,444,452,414,445,433,431],
[441,446,0,434,426,459,453,411],
[438,438,456,0,440,452,446,434],
[463,476,464,450,0,443,460,464],
[441,445,431,438,447,0,456,440],
[429,457,437,444,430,434,0,421],
[442,459,479,456,426,450,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,384,411,409,373,363,341],
[491,0,445,478,425,410,386,459],
[506,445,0,479,473,432,431,450],
[479,412,411,0,450,455,434,472],
[481,465,417,440,0,443,457,466],
[517,480,458,435,447,0,415,436],
[527,504,459,456,433,475,0,488],
[549,431,440,418,424,454,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,388,425,475,441,395,421],
[448,0,467,433,444,461,440,463],
[502,423,0,457,479,405,434,408],
[465,457,433,0,478,469,465,454],
[415,446,411,412,0,451,420,409],
[449,429,485,421,439,0,427,404],
[495,450,456,425,470,463,0,429],
[469,427,482,436,481,486,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,197,230,270,228,355,502,304],
[693,0,478,494,392,342,571,341],
[660,412,0,437,441,331,614,326],
[620,396,453,0,442,453,450,413],
[662,498,449,448,0,389,676,520],
[535,548,559,437,501,0,573,492],
[388,319,276,440,214,317,0,295],
[586,549,564,477,370,398,595,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,436,482,453,445,413,461],
[437,0,475,449,424,469,463,470],
[454,415,0,429,427,461,433,465],
[408,441,461,0,446,419,423,452],
[437,466,463,444,0,457,430,431],
[445,421,429,471,433,0,397,461],
[477,427,457,467,460,493,0,467],
[429,420,425,438,459,429,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,561,418,405,504,456,385,651],
[329,0,383,469,527,277,457,512],
[472,507,0,449,673,445,346,620],
[485,421,441,0,375,473,401,619],
[386,363,217,515,0,390,307,541],
[434,613,445,417,500,0,503,485],
[505,433,544,489,583,387,0,515],
[239,378,270,271,349,405,375,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,436,418,467,421,435,403],
[462,0,441,432,477,461,456,435],
[454,449,0,447,444,426,423,414],
[472,458,443,0,430,436,465,454],
[423,413,446,460,0,432,436,425],
[469,429,464,454,458,0,465,426],
[455,434,467,425,454,425,0,411],
[487,455,476,436,465,464,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,448,460,457,427,443,475],
[453,0,445,453,464,467,475,465],
[442,445,0,461,482,453,456,470],
[430,437,429,0,452,444,431,456],
[433,426,408,438,0,438,421,450],
[463,423,437,446,452,0,427,458],
[447,415,434,459,469,463,0,484],
[415,425,420,434,440,432,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,447,431,436,456,449,425],
[434,0,419,422,431,453,429,431],
[443,471,0,431,441,483,459,433],
[459,468,459,0,457,473,451,433],
[454,459,449,433,0,458,462,450],
[434,437,407,417,432,0,442,405],
[441,461,431,439,428,448,0,433],
[465,459,457,457,440,485,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,453,453,443,475,445,438],
[428,0,458,459,449,471,459,452],
[437,432,0,436,450,490,468,453],
[437,431,454,0,445,465,451,438],
[447,441,440,445,0,481,460,428],
[415,419,400,425,409,0,441,429],
[445,431,422,439,430,449,0,419],
[452,438,437,452,462,461,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,460,464,456,444,449,451],
[439,0,433,462,468,447,437,466],
[430,457,0,467,456,433,461,477],
[426,428,423,0,435,421,437,448],
[434,422,434,455,0,451,447,475],
[446,443,457,469,439,0,447,481],
[441,453,429,453,443,443,0,475],
[439,424,413,442,415,409,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,293,257,287,637,298,477,405],
[597,0,452,382,634,510,480,567],
[633,438,0,497,677,261,701,574],
[603,508,393,0,733,403,614,719],
[253,256,213,157,0,256,259,255],
[592,380,629,487,634,0,680,446],
[413,410,189,276,631,210,0,430],
[485,323,316,171,635,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,472,460,470,470,458,457],
[451,0,428,455,454,479,468,449],
[418,462,0,444,456,453,456,449],
[430,435,446,0,453,452,427,444],
[420,436,434,437,0,447,418,440],
[420,411,437,438,443,0,423,445],
[432,422,434,463,472,467,0,476],
[433,441,441,446,450,445,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,404,431,372,417,433,424],
[427,0,453,445,416,393,415,410],
[486,437,0,426,464,470,474,401],
[459,445,464,0,486,480,454,438],
[518,474,426,404,0,438,458,449],
[473,497,420,410,452,0,466,411],
[457,475,416,436,432,424,0,431],
[466,480,489,452,441,479,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,499,476,476,487,462,496],
[467,0,450,445,476,488,457,474],
[391,440,0,415,467,447,478,447],
[414,445,475,0,480,504,439,465],
[414,414,423,410,0,487,459,435],
[403,402,443,386,403,0,383,442],
[428,433,412,451,431,507,0,450],
[394,416,443,425,455,448,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,449,459,450,422,415,455],
[427,0,424,445,452,447,423,444],
[441,466,0,461,439,443,432,466],
[431,445,429,0,450,402,427,454],
[440,438,451,440,0,410,420,427],
[468,443,447,488,480,0,454,462],
[475,467,458,463,470,436,0,477],
[435,446,424,436,463,428,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,413,454,431,431,426,435],
[437,0,453,484,453,440,452,458],
[477,437,0,470,489,465,453,425],
[436,406,420,0,439,435,436,402],
[459,437,401,451,0,472,445,432],
[459,450,425,455,418,0,430,441],
[464,438,437,454,445,460,0,449],
[455,432,465,488,458,449,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,376,481,423,392,412,454,413],
[514,0,466,485,476,458,434,461],
[409,424,0,455,384,434,412,447],
[467,405,435,0,454,411,383,419],
[498,414,506,436,0,463,424,414],
[478,432,456,479,427,0,412,459],
[436,456,478,507,466,478,0,456],
[477,429,443,471,476,431,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,439,442,444,475,411,491],
[469,0,449,408,448,470,458,449],
[451,441,0,453,438,462,464,472],
[448,482,437,0,445,503,451,485],
[446,442,452,445,0,469,437,436],
[415,420,428,387,421,0,426,448],
[479,432,426,439,453,464,0,457],
[399,441,418,405,454,442,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,434,476,468,440,447,457],
[445,0,450,452,446,423,433,458],
[456,440,0,477,460,446,460,447],
[414,438,413,0,443,415,429,434],
[422,444,430,447,0,425,437,428],
[450,467,444,475,465,0,464,476],
[443,457,430,461,453,426,0,449],
[433,432,443,456,462,414,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,459,422,419,429,428,397],
[473,0,486,465,426,454,451,459],
[431,404,0,404,430,440,422,413],
[468,425,486,0,456,464,466,458],
[471,464,460,434,0,437,448,404],
[461,436,450,426,453,0,415,425],
[462,439,468,424,442,475,0,450],
[493,431,477,432,486,465,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,430,444,454,403,411,430],
[455,0,425,450,483,456,448,479],
[460,465,0,471,477,473,443,452],
[446,440,419,0,448,427,436,434],
[436,407,413,442,0,450,380,403],
[487,434,417,463,440,0,414,390],
[479,442,447,454,510,476,0,478],
[460,411,438,456,487,500,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,444,441,504,451,464,475],
[391,0,428,429,450,448,444,432],
[446,462,0,438,457,398,426,445],
[449,461,452,0,478,432,452,470],
[386,440,433,412,0,399,409,432],
[439,442,492,458,491,0,445,431],
[426,446,464,438,481,445,0,418],
[415,458,445,420,458,459,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,428,403,442,396,420,369],
[485,0,534,386,395,407,425,417],
[462,356,0,441,400,450,373,489],
[487,504,449,0,460,406,350,438],
[448,495,490,430,0,447,470,475],
[494,483,440,484,443,0,470,414],
[470,465,517,540,420,420,0,500],
[521,473,401,452,415,476,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,488,537,475,469,473,367],
[380,0,346,386,422,419,618,446],
[402,544,0,503,630,515,581,475],
[353,504,387,0,502,545,520,488],
[415,468,260,388,0,346,462,386],
[421,471,375,345,544,0,542,366],
[417,272,309,370,428,348,0,303],
[523,444,415,402,504,524,587,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,416,476,442,454,488,429],
[418,0,398,473,445,373,418,458],
[474,492,0,416,537,475,500,448],
[414,417,474,0,480,411,430,388],
[448,445,353,410,0,438,429,422],
[436,517,415,479,452,0,484,471],
[402,472,390,460,461,406,0,437],
[461,432,442,502,468,419,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,444,436,483,424,470,458],
[423,0,442,418,436,431,450,452],
[446,448,0,447,473,417,473,441],
[454,472,443,0,475,469,470,472],
[407,454,417,415,0,429,459,416],
[466,459,473,421,461,0,492,454],
[420,440,417,420,431,398,0,408],
[432,438,449,418,474,436,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,444,456,456,466,447,448],
[442,0,441,468,467,457,455,450],
[446,449,0,465,459,465,433,447],
[434,422,425,0,457,468,442,440],
[434,423,431,433,0,453,421,447],
[424,433,425,422,437,0,424,441],
[443,435,457,448,469,466,0,466],
[442,440,443,450,443,449,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,459,456,448,476,489,444],
[427,0,431,453,443,468,478,469],
[431,459,0,438,378,419,453,453],
[434,437,452,0,414,415,461,460],
[442,447,512,476,0,454,482,428],
[414,422,471,475,436,0,474,446],
[401,412,437,429,408,416,0,436],
[446,421,437,430,462,444,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,440,444,450,427,447,440],
[447,0,430,417,426,413,413,467],
[450,460,0,470,462,442,462,451],
[446,473,420,0,461,443,442,447],
[440,464,428,429,0,439,409,435],
[463,477,448,447,451,0,439,455],
[443,477,428,448,481,451,0,455],
[450,423,439,443,455,435,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,472,451,426,432,421,443],
[415,0,424,444,432,442,424,428],
[418,466,0,432,415,441,421,435],
[439,446,458,0,425,414,405,462],
[464,458,475,465,0,434,422,444],
[458,448,449,476,456,0,449,434],
[469,466,469,485,468,441,0,476],
[447,462,455,428,446,456,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,421,424,404,443,442,416],
[459,0,449,423,412,449,458,461],
[469,441,0,457,450,433,454,442],
[466,467,433,0,451,438,467,463],
[486,478,440,439,0,472,476,451],
[447,441,457,452,418,0,470,435],
[448,432,436,423,414,420,0,415],
[474,429,448,427,439,455,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,355,418,487,408,416,482],
[439,0,445,465,473,458,443,457],
[535,445,0,483,517,434,454,487],
[472,425,407,0,458,400,373,445],
[403,417,373,432,0,365,443,431],
[482,432,456,490,525,0,479,439],
[474,447,436,517,447,411,0,459],
[408,433,403,445,459,451,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,392,403,456,455,434,417],
[492,0,473,461,547,476,431,494],
[498,417,0,456,536,459,445,447],
[487,429,434,0,516,457,408,450],
[434,343,354,374,0,376,368,374],
[435,414,431,433,514,0,442,418],
[456,459,445,482,522,448,0,447],
[473,396,443,440,516,472,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,426,480,456,449,434,446],
[421,0,437,476,458,432,469,456],
[464,453,0,447,475,437,464,445],
[410,414,443,0,440,405,431,417],
[434,432,415,450,0,419,427,422],
[441,458,453,485,471,0,470,440],
[456,421,426,459,463,420,0,413],
[444,434,445,473,468,450,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,452,428,476,448,460,437],
[444,0,468,452,476,467,463,454],
[438,422,0,402,454,464,457,426],
[462,438,488,0,481,490,472,435],
[414,414,436,409,0,434,430,421],
[442,423,426,400,456,0,430,448],
[430,427,433,418,460,460,0,452],
[453,436,464,455,469,442,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,409,411,411,413,409,433],
[420,0,409,444,382,457,409,414],
[481,481,0,443,413,459,460,455],
[479,446,447,0,459,411,438,458],
[479,508,477,431,0,476,476,438],
[477,433,431,479,414,0,412,423],
[481,481,430,452,414,478,0,446],
[457,476,435,432,452,467,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,438,439,442,468,433,430],
[467,0,429,427,443,468,431,431],
[452,461,0,444,444,447,425,418],
[451,463,446,0,449,447,433,446],
[448,447,446,441,0,466,444,423],
[422,422,443,443,424,0,421,414],
[457,459,465,457,446,469,0,443],
[460,459,472,444,467,476,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,474,477,437,467,477,458],
[442,0,453,466,433,459,438,464],
[416,437,0,447,447,453,480,448],
[413,424,443,0,406,437,406,426],
[453,457,443,484,0,457,473,434],
[423,431,437,453,433,0,437,420],
[413,452,410,484,417,453,0,426],
[432,426,442,464,456,470,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,447,432,444,457,476,469],
[437,0,467,436,439,453,487,472],
[443,423,0,442,428,425,460,456],
[458,454,448,0,431,449,460,451],
[446,451,462,459,0,431,472,460],
[433,437,465,441,459,0,463,462],
[414,403,430,430,418,427,0,438],
[421,418,434,439,430,428,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,432,451,452,441,414,440],
[421,0,432,423,434,427,427,430],
[458,458,0,482,455,470,443,457],
[439,467,408,0,465,481,431,440],
[438,456,435,425,0,465,423,435],
[449,463,420,409,425,0,430,439],
[476,463,447,459,467,460,0,445],
[450,460,433,450,455,451,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,444,443,426,436,452,422],
[462,0,449,461,453,422,458,432],
[446,441,0,463,437,440,449,442],
[447,429,427,0,439,427,437,434],
[464,437,453,451,0,445,472,444],
[454,468,450,463,445,0,470,445],
[438,432,441,453,418,420,0,413],
[468,458,448,456,446,445,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,446,443,449,424,461,435],
[446,0,446,455,456,424,458,424],
[444,444,0,451,451,430,445,437],
[447,435,439,0,438,433,457,451],
[441,434,439,452,0,433,476,422],
[466,466,460,457,457,0,466,433],
[429,432,445,433,414,424,0,411],
[455,466,453,439,468,457,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,483,425,497,478,422,455],
[417,0,502,403,476,432,385,406],
[407,388,0,392,386,429,333,337],
[465,487,498,0,443,447,391,477],
[393,414,504,447,0,427,402,379],
[412,458,461,443,463,0,427,368],
[468,505,557,499,488,463,0,412],
[435,484,553,413,511,522,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,476,439,429,432,490,463],
[488,0,493,496,416,429,477,473],
[414,397,0,401,395,383,437,452],
[451,394,489,0,397,426,425,451],
[461,474,495,493,0,442,499,489],
[458,461,507,464,448,0,441,486],
[400,413,453,465,391,449,0,454],
[427,417,438,439,401,404,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,439,434,440,435,449,442],
[455,0,460,440,444,450,448,471],
[451,430,0,415,434,440,446,464],
[456,450,475,0,452,436,453,458],
[450,446,456,438,0,453,443,438],
[455,440,450,454,437,0,462,452],
[441,442,444,437,447,428,0,483],
[448,419,426,432,452,438,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,329,416,422,426,462,497],
[423,0,342,484,333,421,422,438],
[561,548,0,452,427,503,587,506],
[474,406,438,0,383,414,474,419],
[468,557,463,507,0,544,477,440],
[464,469,387,476,346,0,477,552],
[428,468,303,416,413,413,0,485],
[393,452,384,471,450,338,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,419,445,465,456,479,434],
[421,0,445,437,455,450,464,421],
[471,445,0,464,470,470,466,456],
[445,453,426,0,461,469,452,438],
[425,435,420,429,0,449,435,433],
[434,440,420,421,441,0,448,442],
[411,426,424,438,455,442,0,417],
[456,469,434,452,457,448,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,451,448,420,416,435,453],
[455,0,440,450,428,432,434,455],
[439,450,0,448,473,430,446,468],
[442,440,442,0,451,421,450,451],
[470,462,417,439,0,411,439,451],
[474,458,460,469,479,0,436,474],
[455,456,444,440,451,454,0,458],
[437,435,422,439,439,416,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,447,441,462,446,465,464],
[442,0,446,434,443,446,441,436],
[443,444,0,436,457,440,453,454],
[449,456,454,0,462,423,474,475],
[428,447,433,428,0,435,438,455],
[444,444,450,467,455,0,463,472],
[425,449,437,416,452,427,0,449],
[426,454,436,415,435,418,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,436,417,445,458,432,434],
[465,0,453,453,448,465,432,463],
[454,437,0,451,454,456,455,430],
[473,437,439,0,454,454,440,441],
[445,442,436,436,0,472,438,454],
[432,425,434,436,418,0,440,431],
[458,458,435,450,452,450,0,451],
[456,427,460,449,436,459,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,508,506,408,384,386,405,473],
[382,0,436,340,363,429,419,317],
[384,454,0,459,453,484,416,344],
[482,550,431,0,435,443,448,429],
[506,527,437,455,0,464,450,372],
[504,461,406,447,426,0,406,437],
[485,471,474,442,440,484,0,428],
[417,573,546,461,518,453,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,435,411,400,411,421,392],
[466,0,468,449,461,453,470,440],
[455,422,0,429,401,382,430,412],
[479,441,461,0,457,409,472,424],
[490,429,489,433,0,444,467,442],
[479,437,508,481,446,0,474,449],
[469,420,460,418,423,416,0,459],
[498,450,478,466,448,441,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,473,444,462,461,450,448],
[430,0,455,450,463,437,458,425],
[417,435,0,440,425,432,464,437],
[446,440,450,0,442,439,472,452],
[428,427,465,448,0,452,474,438],
[429,453,458,451,438,0,476,449],
[440,432,426,418,416,414,0,421],
[442,465,453,438,452,441,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,434,437,475,426,456,454],
[432,0,460,438,456,440,436,457],
[456,430,0,431,439,449,459,448],
[453,452,459,0,463,459,444,452],
[415,434,451,427,0,429,439,453],
[464,450,441,431,461,0,445,452],
[434,454,431,446,451,445,0,449],
[436,433,442,438,437,438,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,417,447,450,427,452,450],
[450,0,434,462,440,428,467,404],
[473,456,0,475,442,421,440,448],
[443,428,415,0,435,414,431,413],
[440,450,448,455,0,450,433,431],
[463,462,469,476,440,0,441,450],
[438,423,450,459,457,449,0,446],
[440,486,442,477,459,440,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,470,465,453,458,410,476],
[445,0,444,475,463,472,411,445],
[420,446,0,431,423,435,445,456],
[425,415,459,0,428,453,423,440],
[437,427,467,462,0,427,412,434],
[432,418,455,437,463,0,456,451],
[480,479,445,467,478,434,0,448],
[414,445,434,450,456,439,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,425,441,487,483,451,452],
[444,0,443,445,489,458,500,438],
[465,447,0,442,500,477,489,477],
[449,445,448,0,489,507,457,486],
[403,401,390,401,0,419,411,401],
[407,432,413,383,471,0,434,436],
[439,390,401,433,479,456,0,446],
[438,452,413,404,489,454,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,436,421,429,435,435,435],
[444,0,462,446,427,449,429,450],
[454,428,0,436,437,443,452,431],
[469,444,454,0,454,477,472,455],
[461,463,453,436,0,465,460,454],
[455,441,447,413,425,0,436,425],
[455,461,438,418,430,454,0,450],
[455,440,459,435,436,465,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,436,441,447,427,439,468],
[433,0,413,419,432,429,428,438],
[454,477,0,442,455,435,463,465],
[449,471,448,0,460,451,434,443],
[443,458,435,430,0,448,431,439],
[463,461,455,439,442,0,446,451],
[451,462,427,456,459,444,0,446],
[422,452,425,447,451,439,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,428,445,426,429,419,441],
[441,0,439,449,440,474,438,457],
[462,451,0,447,452,440,441,454],
[445,441,443,0,443,430,433,464],
[464,450,438,447,0,453,442,443],
[461,416,450,460,437,0,449,472],
[471,452,449,457,448,441,0,477],
[449,433,436,426,447,418,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,454,452,462,436,465,446],
[428,0,418,445,434,448,447,430],
[436,472,0,447,473,449,462,439],
[438,445,443,0,461,436,458,441],
[428,456,417,429,0,423,458,448],
[454,442,441,454,467,0,450,448],
[425,443,428,432,432,440,0,447],
[444,460,451,449,442,442,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,445,446,437,440,457,446],
[452,0,467,442,440,458,450,476],
[445,423,0,433,432,448,431,417],
[444,448,457,0,451,446,456,445],
[453,450,458,439,0,456,458,432],
[450,432,442,444,434,0,463,447],
[433,440,459,434,432,427,0,426],
[444,414,473,445,458,443,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,456,422,443,434,442,399],
[466,0,460,439,443,436,455,413],
[434,430,0,426,434,421,444,423],
[468,451,464,0,426,457,463,444],
[447,447,456,464,0,461,462,445],
[456,454,469,433,429,0,441,423],
[448,435,446,427,428,449,0,409],
[491,477,467,446,445,467,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,441,455,452,450,465,456],
[442,0,450,459,461,453,470,445],
[449,440,0,472,470,469,449,464],
[435,431,418,0,439,452,448,454],
[438,429,420,451,0,432,443,438],
[440,437,421,438,458,0,436,434],
[425,420,441,442,447,454,0,447],
[434,445,426,436,452,456,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,455,473,433,458,463,459],
[461,0,458,469,445,479,448,457],
[435,432,0,470,447,447,432,434],
[417,421,420,0,411,432,416,448],
[457,445,443,479,0,471,450,459],
[432,411,443,458,419,0,451,424],
[427,442,458,474,440,439,0,439],
[431,433,456,442,431,466,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,428,406,435,396,412,391],
[467,0,445,406,482,417,469,417],
[462,445,0,427,474,426,440,424],
[484,484,463,0,473,438,462,462],
[455,408,416,417,0,402,407,394],
[494,473,464,452,488,0,466,445],
[478,421,450,428,483,424,0,429],
[499,473,466,428,496,445,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,402,470,404,452,451,427],
[414,0,429,470,418,422,395,440],
[488,461,0,503,422,458,435,406],
[420,420,387,0,415,422,385,405],
[486,472,468,475,0,435,428,419],
[438,468,432,468,455,0,476,448],
[439,495,455,505,462,414,0,410],
[463,450,484,485,471,442,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,455,470,399,416,475,446],
[477,0,442,424,418,463,424,451],
[435,448,0,446,429,437,400,394],
[420,466,444,0,447,450,410,422],
[491,472,461,443,0,474,441,465],
[474,427,453,440,416,0,431,422],
[415,466,490,480,449,459,0,453],
[444,439,496,468,425,468,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,449,407,469,439,421,444],
[453,0,480,428,441,471,439,469],
[441,410,0,412,468,477,415,406],
[483,462,478,0,483,482,484,445],
[421,449,422,407,0,478,428,448],
[451,419,413,408,412,0,417,398],
[469,451,475,406,462,473,0,440],
[446,421,484,445,442,492,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,434,437,453,473,417,459],
[428,0,451,441,447,453,448,456],
[456,439,0,444,460,470,435,469],
[453,449,446,0,454,462,420,447],
[437,443,430,436,0,450,426,454],
[417,437,420,428,440,0,431,436],
[473,442,455,470,464,459,0,464],
[431,434,421,443,436,454,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,436,466,455,461,463,435],
[425,0,429,447,427,430,425,454],
[454,461,0,454,427,444,444,477],
[424,443,436,0,434,444,432,433],
[435,463,463,456,0,454,443,441],
[429,460,446,446,436,0,425,443],
[427,465,446,458,447,465,0,450],
[455,436,413,457,449,447,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,439,452,465,419,429,460],
[427,0,402,408,456,406,432,446],
[451,488,0,443,473,477,486,496],
[438,482,447,0,452,433,450,448],
[425,434,417,438,0,424,404,453],
[471,484,413,457,466,0,456,484],
[461,458,404,440,486,434,0,487],
[430,444,394,442,437,406,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,465,465,450,439,457,447],
[484,0,472,434,503,429,486,482],
[425,418,0,479,461,443,457,471],
[425,456,411,0,488,444,486,472],
[440,387,429,402,0,413,429,449],
[451,461,447,446,477,0,440,460],
[433,404,433,404,461,450,0,452],
[443,408,419,418,441,430,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,451,462,450,450,434,432],
[448,0,462,458,456,468,428,459],
[439,428,0,453,427,427,435,417],
[428,432,437,0,436,441,400,440],
[440,434,463,454,0,438,442,429],
[440,422,463,449,452,0,429,450],
[456,462,455,490,448,461,0,445],
[458,431,473,450,461,440,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,471,424,445,434,434,448],
[402,0,411,384,432,393,421,416],
[419,479,0,391,446,413,444,431],
[466,506,499,0,472,432,458,462],
[445,458,444,418,0,447,473,434],
[456,497,477,458,443,0,474,447],
[456,469,446,432,417,416,0,449],
[442,474,459,428,456,443,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,478,446,468,435,443,463],
[480,0,497,435,485,475,492,493],
[412,393,0,423,449,450,442,453],
[444,455,467,0,470,450,483,489],
[422,405,441,420,0,425,476,449],
[455,415,440,440,465,0,461,475],
[447,398,448,407,414,429,0,467],
[427,397,437,401,441,415,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,452,441,460,365,450,394],
[477,0,448,451,412,333,501,505],
[438,442,0,470,383,371,482,434],
[449,439,420,0,364,352,468,478],
[430,478,507,526,0,405,472,433],
[525,557,519,538,485,0,457,443],
[440,389,408,422,418,433,0,343],
[496,385,456,412,457,447,547,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,451,451,431,434,438,441],
[468,0,436,437,436,430,430,440],
[439,454,0,449,432,434,446,446],
[439,453,441,0,433,458,441,442],
[459,454,458,457,0,479,425,454],
[456,460,456,432,411,0,426,441],
[452,460,444,449,465,464,0,436],
[449,450,444,448,436,449,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,421,442,460,441,446,448],
[452,0,429,440,447,442,446,429],
[469,461,0,445,447,476,453,466],
[448,450,445,0,481,446,456,481],
[430,443,443,409,0,422,442,422],
[449,448,414,444,468,0,453,453],
[444,444,437,434,448,437,0,444],
[442,461,424,409,468,437,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,429,481,449,543,490,482],
[407,0,359,497,411,539,403,412],
[461,531,0,499,401,505,486,596],
[409,393,391,0,395,418,423,443],
[441,479,489,495,0,513,451,469],
[347,351,385,472,377,0,462,457],
[400,487,404,467,439,428,0,457],
[408,478,294,447,421,433,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,428,391,365,414,420,463],
[491,0,487,452,422,472,462,483],
[462,403,0,379,413,440,425,452],
[499,438,511,0,480,459,497,502],
[525,468,477,410,0,453,459,499],
[476,418,450,431,437,0,442,475],
[470,428,465,393,431,448,0,525],
[427,407,438,388,391,415,365,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,476,457,465,406,424,410],
[443,0,484,415,461,430,453,441],
[414,406,0,432,448,437,425,403],
[433,475,458,0,476,506,465,482],
[425,429,442,414,0,495,450,409],
[484,460,453,384,395,0,415,430],
[466,437,465,425,440,475,0,437],
[480,449,487,408,481,460,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,410,443,445,453,456,444],
[444,0,407,440,420,447,454,459],
[480,483,0,481,433,467,476,474],
[447,450,409,0,421,452,446,441],
[445,470,457,469,0,489,475,470],
[437,443,423,438,401,0,429,435],
[434,436,414,444,415,461,0,453],
[446,431,416,449,420,455,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,440,437,435,421,444,455],
[451,0,431,421,448,441,452,440],
[450,459,0,424,460,451,451,444],
[453,469,466,0,463,438,453,466],
[455,442,430,427,0,453,437,463],
[469,449,439,452,437,0,446,443],
[446,438,439,437,453,444,0,441],
[435,450,446,424,427,447,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,439,466,440,450,446,443],
[448,0,420,455,443,447,445,435],
[451,470,0,460,443,442,443,435],
[424,435,430,0,445,432,434,421],
[450,447,447,445,0,445,442,437],
[440,443,448,458,445,0,451,431],
[444,445,447,456,448,439,0,445],
[447,455,455,469,453,459,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,434,441,438,436,451,429],
[470,0,446,449,472,455,450,441],
[456,444,0,450,453,467,449,458],
[449,441,440,0,456,447,453,454],
[452,418,437,434,0,434,441,450],
[454,435,423,443,456,0,459,435],
[439,440,441,437,449,431,0,440],
[461,449,432,436,440,455,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,456,444,463,433,465,465],
[426,0,431,402,457,410,436,438],
[434,459,0,398,445,403,425,417],
[446,488,492,0,465,446,437,493],
[427,433,445,425,0,404,404,428],
[457,480,487,444,486,0,443,482],
[425,454,465,453,486,447,0,473],
[425,452,473,397,462,408,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,449,490,531,448,455,463],
[445,0,497,459,525,450,487,464],
[441,393,0,470,470,396,464,402],
[400,431,420,0,416,381,423,429],
[359,365,420,474,0,375,397,385],
[442,440,494,509,515,0,476,456],
[435,403,426,467,493,414,0,416],
[427,426,488,461,505,434,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,449,455,438,405,462,450],
[450,0,459,439,436,448,448,469],
[441,431,0,459,440,434,450,435],
[435,451,431,0,432,415,437,450],
[452,454,450,458,0,424,464,456],
[485,442,456,475,466,0,451,447],
[428,442,440,453,426,439,0,452],
[440,421,455,440,434,443,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,459,458,431,452,451],
[440,0,443,456,451,400,416,397],
[450,447,0,455,455,433,393,454],
[431,434,435,0,418,422,423,434],
[432,439,435,472,0,421,418,429],
[459,490,457,468,469,0,437,452],
[438,474,497,467,472,453,0,476],
[439,493,436,456,461,438,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,446,478,444,454,450,450],
[468,0,440,530,474,453,447,472],
[444,450,0,468,488,417,459,448],
[412,360,422,0,395,400,390,421],
[446,416,402,495,0,394,407,440],
[436,437,473,490,496,0,440,423],
[440,443,431,500,483,450,0,475],
[440,418,442,469,450,467,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,432,471,440,411,466,417],
[408,0,411,402,406,423,377,368],
[458,479,0,457,457,457,470,434],
[419,488,433,0,418,427,424,416],
[450,484,433,472,0,427,421,435],
[479,467,433,463,463,0,435,433],
[424,513,420,466,469,455,0,452],
[473,522,456,474,455,457,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,429,456,440,464,438,477],
[463,0,436,414,463,500,461,512],
[461,454,0,492,502,443,435,483],
[434,476,398,0,456,436,477,443],
[450,427,388,434,0,456,446,426],
[426,390,447,454,434,0,433,457],
[452,429,455,413,444,457,0,507],
[413,378,407,447,464,433,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,409,425,424,460,411,453],
[485,0,431,461,451,453,446,475],
[481,459,0,449,444,479,419,529],
[465,429,441,0,434,448,446,456],
[466,439,446,456,0,443,423,478],
[430,437,411,442,447,0,435,459],
[479,444,471,444,467,455,0,479],
[437,415,361,434,412,431,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,429,479,425,490,380,438],
[390,0,369,290,438,381,411,375],
[461,521,0,457,506,552,432,454],
[411,600,433,0,484,531,486,527],
[465,452,384,406,0,486,394,406],
[400,509,338,359,404,0,314,411],
[510,479,458,404,496,576,0,430],
[452,515,436,363,484,479,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,480,442,365,410,413,451],
[469,0,486,501,408,410,453,555],
[410,404,0,387,359,338,353,504],
[448,389,503,0,405,410,389,502],
[525,482,531,485,0,445,515,519],
[480,480,552,480,445,0,467,555],
[477,437,537,501,375,423,0,510],
[439,335,386,388,371,335,380,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,506,471,452,480,481,470],
[460,0,460,487,501,478,488,432],
[384,430,0,451,432,431,433,409],
[419,403,439,0,418,419,440,434],
[438,389,458,472,0,452,467,418],
[410,412,459,471,438,0,463,384],
[409,402,457,450,423,427,0,381],
[420,458,481,456,472,506,509,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,467,455,471,440,466,466],
[429,0,438,454,430,434,445,450],
[423,452,0,429,440,433,449,458],
[435,436,461,0,464,464,462,446],
[419,460,450,426,0,447,462,448],
[450,456,457,426,443,0,473,498],
[424,445,441,428,428,417,0,446],
[424,440,432,444,442,392,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,429,457,463,431,430,440],
[454,0,452,456,436,422,435,456],
[461,438,0,478,441,459,436,472],
[433,434,412,0,411,418,396,418],
[427,454,449,479,0,443,438,458],
[459,468,431,472,447,0,453,458],
[460,455,454,494,452,437,0,466],
[450,434,418,472,432,432,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,457,425,431,446,442],
[438,0,453,457,437,477,456,456],
[426,437,0,451,446,408,445,444],
[433,433,439,0,441,424,446,432],
[465,453,444,449,0,435,452,438],
[459,413,482,466,455,0,441,437],
[444,434,445,444,438,449,0,446],
[448,434,446,458,452,453,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,451,452,439,429,447,423],
[459,0,446,458,467,449,462,444],
[439,444,0,463,475,459,449,425],
[438,432,427,0,459,435,436,431],
[451,423,415,431,0,438,433,462],
[461,441,431,455,452,0,469,423],
[443,428,441,454,457,421,0,445],
[467,446,465,459,428,467,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,434,447,417,428,455,450],
[464,0,442,439,431,427,473,462],
[456,448,0,443,449,455,457,443],
[443,451,447,0,419,418,465,460],
[473,459,441,471,0,434,472,440],
[462,463,435,472,456,0,464,441],
[435,417,433,425,418,426,0,441],
[440,428,447,430,450,449,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,446,443,451,449,438,439],
[435,0,429,444,470,444,423,434],
[444,461,0,435,462,443,429,431],
[447,446,455,0,477,444,440,443],
[439,420,428,413,0,421,404,425],
[441,446,447,446,469,0,455,435],
[452,467,461,450,486,435,0,449],
[451,456,459,447,465,455,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,444,444,417,408,429,416],
[463,0,436,447,411,422,402,441],
[446,454,0,447,392,442,427,430],
[446,443,443,0,413,458,433,466],
[473,479,498,477,0,441,453,452],
[482,468,448,432,449,0,454,409],
[461,488,463,457,437,436,0,490],
[474,449,460,424,438,481,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,448,454,441,467,518,507],
[406,0,446,408,430,422,465,432],
[442,444,0,424,398,415,451,504],
[436,482,466,0,429,441,483,503],
[449,460,492,461,0,434,484,477],
[423,468,475,449,456,0,466,460],
[372,425,439,407,406,424,0,443],
[383,458,386,387,413,430,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,435,482,444,442,479,425],
[431,0,437,458,448,436,452,450],
[455,453,0,474,484,439,459,445],
[408,432,416,0,453,423,438,432],
[446,442,406,437,0,415,432,460],
[448,454,451,467,475,0,463,443],
[411,438,431,452,458,427,0,422],
[465,440,445,458,430,447,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,452,474,431,485,421,474],
[414,0,428,451,417,445,452,422],
[438,462,0,467,432,448,440,465],
[416,439,423,0,421,434,416,431],
[459,473,458,469,0,443,472,487],
[405,445,442,456,447,0,424,463],
[469,438,450,474,418,466,0,425],
[416,468,425,459,403,427,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,441,431,452,449,451,473],
[431,0,419,443,452,453,467,444],
[449,471,0,464,458,445,470,488],
[459,447,426,0,463,435,474,448],
[438,438,432,427,0,424,435,484],
[441,437,445,455,466,0,466,453],
[439,423,420,416,455,424,0,459],
[417,446,402,442,406,437,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,426,431,452,438,430,394],
[457,0,403,447,452,426,442,426],
[464,487,0,443,463,452,443,455],
[459,443,447,0,447,436,441,415],
[438,438,427,443,0,421,425,428],
[452,464,438,454,469,0,465,443],
[460,448,447,449,465,425,0,414],
[496,464,435,475,462,447,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,445,489,463,488,481,479],
[446,0,453,449,423,491,399,476],
[445,437,0,465,485,468,432,466],
[401,441,425,0,463,475,399,462],
[427,467,405,427,0,473,461,447],
[402,399,422,415,417,0,414,442],
[409,491,458,491,429,476,0,518],
[411,414,424,428,443,448,372,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,446,430,451,435,444,433],
[445,0,430,428,448,431,434,466],
[444,460,0,436,473,445,428,469],
[460,462,454,0,458,474,441,474],
[439,442,417,432,0,444,451,465],
[455,459,445,416,446,0,419,431],
[446,456,462,449,439,471,0,453],
[457,424,421,416,425,459,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,512,485,486,477,485,466,443],
[378,0,423,451,425,452,441,421],
[405,467,0,449,444,435,457,432],
[404,439,441,0,441,433,424,415],
[413,465,446,449,0,457,428,433],
[405,438,455,457,433,0,438,433],
[424,449,433,466,462,452,0,485],
[447,469,458,475,457,457,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,416,409,463,458,470,442],
[435,0,435,489,466,428,484,438],
[474,455,0,450,480,438,498,496],
[481,401,440,0,424,388,441,472],
[427,424,410,466,0,406,475,434],
[432,462,452,502,484,0,459,507],
[420,406,392,449,415,431,0,455],
[448,452,394,418,456,383,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,424,423,430,435,431,430],
[466,0,454,436,455,448,437,456],
[466,436,0,446,451,452,443,458],
[467,454,444,0,442,449,445,454],
[460,435,439,448,0,437,448,443],
[455,442,438,441,453,0,462,442],
[459,453,447,445,442,428,0,466],
[460,434,432,436,447,448,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,436,473,439,446,459,471],
[433,0,454,456,464,464,454,493],
[454,436,0,454,444,435,468,453],
[417,434,436,0,431,453,445,435],
[451,426,446,459,0,456,486,453],
[444,426,455,437,434,0,451,449],
[431,436,422,445,404,439,0,473],
[419,397,437,455,437,441,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,458,457,448,488,448,443],
[445,0,475,468,451,477,462,454],
[432,415,0,439,431,447,447,428],
[433,422,451,0,444,434,459,453],
[442,439,459,446,0,459,441,453],
[402,413,443,456,431,0,454,441],
[442,428,443,431,449,436,0,458],
[447,436,462,437,437,449,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,486,466,430,499,474,505],
[443,0,454,429,432,493,403,509],
[404,436,0,488,411,450,425,508],
[424,461,402,0,378,410,442,454],
[460,458,479,512,0,521,396,449],
[391,397,440,480,369,0,440,453],
[416,487,465,448,494,450,0,465],
[385,381,382,436,441,437,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,443,435,467,479,447,434],
[424,0,426,425,414,452,430,413],
[447,464,0,454,437,464,458,448],
[455,465,436,0,449,477,437,439],
[423,476,453,441,0,483,443,440],
[411,438,426,413,407,0,417,419],
[443,460,432,453,447,473,0,445],
[456,477,442,451,450,471,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,418,409,407,421,415,396],
[478,0,475,447,443,429,454,395],
[472,415,0,396,404,414,418,398],
[481,443,494,0,415,460,446,440],
[483,447,486,475,0,436,444,444],
[469,461,476,430,454,0,437,442],
[475,436,472,444,446,453,0,452],
[494,495,492,450,446,448,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,460,460,426,416,440,416],
[421,0,433,424,414,435,423,422],
[430,457,0,462,431,462,418,448],
[430,466,428,0,466,435,451,427],
[464,476,459,424,0,451,431,426],
[474,455,428,455,439,0,430,458],
[450,467,472,439,459,460,0,425],
[474,468,442,463,464,432,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,447,554,555,502,517,404],
[414,0,529,348,445,450,332,470],
[443,361,0,500,520,454,452,450],
[336,542,390,0,522,447,480,459],
[335,445,370,368,0,417,283,448],
[388,440,436,443,473,0,437,368],
[373,558,438,410,607,453,0,494],
[486,420,440,431,442,522,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,433,445,447,420,435,450],
[476,0,471,436,462,443,458,461],
[457,419,0,447,431,438,436,440],
[445,454,443,0,468,445,450,461],
[443,428,459,422,0,432,442,445],
[470,447,452,445,458,0,454,452],
[455,432,454,440,448,436,0,442],
[440,429,450,429,445,438,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,441,462,441,452,414,473],
[469,0,448,492,454,479,445,441],
[449,442,0,479,450,454,437,421],
[428,398,411,0,442,444,405,420],
[449,436,440,448,0,478,435,442],
[438,411,436,446,412,0,403,439],
[476,445,453,485,455,487,0,464],
[417,449,469,470,448,451,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,436,461,453,517,443,446],
[441,0,416,409,417,464,441,435],
[454,474,0,447,438,488,467,449],
[429,481,443,0,439,481,482,451],
[437,473,452,451,0,483,481,453],
[373,426,402,409,407,0,424,426],
[447,449,423,408,409,466,0,430],
[444,455,441,439,437,464,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,423,450,424,448,445,425],
[474,0,453,457,453,438,473,454],
[467,437,0,436,396,432,449,435],
[440,433,454,0,450,422,437,449],
[466,437,494,440,0,434,436,458],
[442,452,458,468,456,0,444,445],
[445,417,441,453,454,446,0,441],
[465,436,455,441,432,445,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,424,420,460,418,423,414],
[470,0,451,389,444,441,448,407],
[466,439,0,462,445,444,460,408],
[470,501,428,0,475,434,457,452],
[430,446,445,415,0,415,465,432],
[472,449,446,456,475,0,447,434],
[467,442,430,433,425,443,0,413],
[476,483,482,438,458,456,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,451,423,452,416,442,415],
[455,0,473,450,444,440,450,453],
[439,417,0,416,466,443,455,449],
[467,440,474,0,470,427,459,464],
[438,446,424,420,0,440,457,412],
[474,450,447,463,450,0,441,454],
[448,440,435,431,433,449,0,435],
[475,437,441,426,478,436,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,413,440,406,453,408,416],
[475,0,457,427,428,474,453,477],
[477,433,0,421,463,478,453,462],
[450,463,469,0,462,484,429,467],
[484,462,427,428,0,438,418,431],
[437,416,412,406,452,0,431,457],
[482,437,437,461,472,459,0,449],
[474,413,428,423,459,433,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,492,512,470,471,490,489],
[465,0,443,498,492,499,431,469],
[398,447,0,459,430,414,467,460],
[378,392,431,0,381,400,397,455],
[420,398,460,509,0,465,472,455],
[419,391,476,490,425,0,483,459],
[400,459,423,493,418,407,0,470],
[401,421,430,435,435,431,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,448,415,404,426,392,443],
[470,0,459,422,437,462,447,453],
[442,431,0,411,439,439,400,479],
[475,468,479,0,444,469,452,491],
[486,453,451,446,0,471,436,470],
[464,428,451,421,419,0,398,478],
[498,443,490,438,454,492,0,496],
[447,437,411,399,420,412,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,466,417,532,505,473,493],
[429,0,468,474,511,469,446,470],
[424,422,0,441,493,495,477,452],
[473,416,449,0,390,475,404,476],
[358,379,397,500,0,445,426,473],
[385,421,395,415,445,0,389,419],
[417,444,413,486,464,501,0,516],
[397,420,438,414,417,471,374,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,482,483,441,456,465],
[440,0,445,467,435,427,443,460],
[449,445,0,480,476,447,452,484],
[408,423,410,0,433,412,438,450],
[407,455,414,457,0,422,449,464],
[449,463,443,478,468,0,460,471],
[434,447,438,452,441,430,0,467],
[425,430,406,440,426,419,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,498,473,455,455,433,489],
[423,0,486,438,457,445,440,451],
[392,404,0,372,458,420,468,463],
[417,452,518,0,463,454,437,503],
[435,433,432,427,0,449,427,443],
[435,445,470,436,441,0,513,457],
[457,450,422,453,463,377,0,473],
[401,439,427,387,447,433,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,439,420,427,454,439,425],
[433,0,437,442,438,449,457,415],
[451,453,0,437,411,455,399,415],
[470,448,453,0,433,463,418,440],
[463,452,479,457,0,461,438,444],
[436,441,435,427,429,0,423,417],
[451,433,491,472,452,467,0,460],
[465,475,475,450,446,473,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,409,431,391,483,479,402],
[485,0,404,402,416,432,460,395],
[481,486,0,414,402,407,502,437],
[459,488,476,0,460,462,477,402],
[499,474,488,430,0,465,501,473],
[407,458,483,428,425,0,465,405],
[411,430,388,413,389,425,0,375],
[488,495,453,488,417,485,515,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,436,486,452,448,466,448],
[427,0,414,410,455,440,413,471],
[454,476,0,437,468,470,462,477],
[404,480,453,0,482,459,435,466],
[438,435,422,408,0,435,424,451],
[442,450,420,431,455,0,416,437],
[424,477,428,455,466,474,0,432],
[442,419,413,424,439,453,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,429,441,436,452,430,502],
[457,0,426,439,415,455,438,449],
[461,464,0,475,455,436,433,469],
[449,451,415,0,418,433,441,446],
[454,475,435,472,0,467,452,450],
[438,435,454,457,423,0,432,451],
[460,452,457,449,438,458,0,462],
[388,441,421,444,440,439,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,428,435,444,453,452,454],
[432,0,420,406,447,421,474,447],
[462,470,0,450,443,451,497,461],
[455,484,440,0,452,456,488,462],
[446,443,447,438,0,433,481,463],
[437,469,439,434,457,0,469,461],
[438,416,393,402,409,421,0,435],
[436,443,429,428,427,429,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,401,424,439,410,449,402],
[502,0,455,458,444,441,450,443],
[489,435,0,454,447,437,484,447],
[466,432,436,0,429,454,439,430],
[451,446,443,461,0,444,434,445],
[480,449,453,436,446,0,457,437],
[441,440,406,451,456,433,0,419],
[488,447,443,460,445,453,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,434,438,428,456,455,441],
[440,0,462,436,432,438,454,413],
[456,428,0,425,408,414,451,407],
[452,454,465,0,432,423,453,428],
[462,458,482,458,0,435,452,445],
[434,452,476,467,455,0,473,459],
[435,436,439,437,438,417,0,416],
[449,477,483,462,445,431,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,427,546,522,503,529,463],
[418,0,501,543,459,542,491,467],
[463,389,0,525,387,464,468,421],
[344,347,365,0,376,414,414,450],
[368,431,503,514,0,462,473,388],
[387,348,426,476,428,0,502,383],
[361,399,422,476,417,388,0,356],
[427,423,469,440,502,507,534,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,638,434,527,494,450,436,594],
[252,0,307,130,315,342,372,263],
[456,583,0,466,523,460,472,428],
[363,760,424,0,469,446,476,439],
[396,575,367,421,0,331,306,303],
[440,548,430,444,559,0,419,460],
[454,518,418,414,584,471,0,384],
[296,627,462,451,587,430,506,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,438,455,456,431,457,460],
[408,0,407,423,422,417,418,416],
[452,483,0,415,449,442,438,441],
[435,467,475,0,428,457,423,457],
[434,468,441,462,0,439,404,449],
[459,473,448,433,451,0,447,453],
[433,472,452,467,486,443,0,460],
[430,474,449,433,441,437,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,447,419,479,437,467,415],
[393,0,438,385,439,430,415,410],
[443,452,0,392,455,459,428,428],
[471,505,498,0,453,471,437,459],
[411,451,435,437,0,439,432,404],
[453,460,431,419,451,0,404,412],
[423,475,462,453,458,486,0,430],
[475,480,462,431,486,478,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,472,446,426,450,488,460],
[408,0,444,446,406,447,433,420],
[418,446,0,383,422,437,465,433],
[444,444,507,0,458,491,496,436],
[464,484,468,432,0,470,431,432],
[440,443,453,399,420,0,440,417],
[402,457,425,394,459,450,0,436],
[430,470,457,454,458,473,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,448,475,449,440,452,450],
[429,0,438,449,452,416,424,452],
[442,452,0,470,443,435,453,442],
[415,441,420,0,412,422,424,443],
[441,438,447,478,0,431,454,438],
[450,474,455,468,459,0,444,474],
[438,466,437,466,436,446,0,440],
[440,438,448,447,452,416,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,451,460,486,472,449,467],
[453,0,425,431,453,457,478,414],
[439,465,0,445,516,448,445,423],
[430,459,445,0,472,410,457,418],
[404,437,374,418,0,439,442,408],
[418,433,442,480,451,0,472,415],
[441,412,445,433,448,418,0,445],
[423,476,467,472,482,475,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,428,397,443,399,407,412],
[442,0,411,419,446,414,411,428],
[462,479,0,434,452,469,445,491],
[493,471,456,0,468,460,424,510],
[447,444,438,422,0,450,434,422],
[491,476,421,430,440,0,411,441],
[483,479,445,466,456,479,0,456],
[478,462,399,380,468,449,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,445,466,467,446,467,434],
[419,0,435,438,438,439,432,399],
[445,455,0,445,448,464,441,445],
[424,452,445,0,465,426,449,429],
[423,452,442,425,0,442,435,423],
[444,451,426,464,448,0,453,433],
[423,458,449,441,455,437,0,418],
[456,491,445,461,467,457,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,434,442,442,354,431,455],
[495,0,512,407,476,415,472,452],
[456,378,0,418,420,423,470,387],
[448,483,472,0,475,436,493,446],
[448,414,470,415,0,368,442,398],
[536,475,467,454,522,0,501,445],
[459,418,420,397,448,389,0,431],
[435,438,503,444,492,445,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,479,451,426,498,453,488],
[415,0,428,451,335,431,421,417],
[411,462,0,425,447,443,399,426],
[439,439,465,0,439,487,455,458],
[464,555,443,451,0,482,473,463],
[392,459,447,403,408,0,455,378],
[437,469,491,435,417,435,0,415],
[402,473,464,432,427,512,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,445,461,462,463,470,486],
[441,0,419,433,422,439,433,458],
[445,471,0,444,461,456,453,470],
[429,457,446,0,440,464,450,456],
[428,468,429,450,0,459,433,469],
[427,451,434,426,431,0,440,434],
[420,457,437,440,457,450,0,450],
[404,432,420,434,421,456,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,327,498,415,444,421,441],
[436,0,363,521,466,463,506,402],
[563,527,0,517,426,500,572,479],
[392,369,373,0,409,424,419,395],
[475,424,464,481,0,586,690,449],
[446,427,390,466,304,0,449,516],
[469,384,318,471,200,441,0,421],
[449,488,411,495,441,374,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,488,493,419,427,472,465],
[480,0,464,489,408,437,428,433],
[402,426,0,373,364,376,319,379],
[397,401,517,0,472,438,449,436],
[471,482,526,418,0,474,455,443],
[463,453,514,452,416,0,402,381],
[418,462,571,441,435,488,0,401],
[425,457,511,454,447,509,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,448,442,441,445,464,441],
[450,0,464,462,452,437,460,449],
[442,426,0,440,417,403,439,409],
[448,428,450,0,441,439,463,420],
[449,438,473,449,0,446,480,435],
[445,453,487,451,444,0,460,435],
[426,430,451,427,410,430,0,412],
[449,441,481,470,455,455,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,525,503,427,428,369,500],
[411,0,501,435,484,422,412,456],
[365,389,0,362,403,358,374,401],
[387,455,528,0,484,406,444,489],
[463,406,487,406,0,448,402,443],
[462,468,532,484,442,0,467,478],
[521,478,516,446,488,423,0,490],
[390,434,489,401,447,412,400,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,466,447,461,461,448,442],
[443,0,475,456,481,453,497,455],
[424,415,0,411,423,430,463,453],
[443,434,479,0,472,449,468,446],
[429,409,467,418,0,425,435,444],
[429,437,460,441,465,0,457,459],
[442,393,427,422,455,433,0,422],
[448,435,437,444,446,431,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,427,443,443,430,447,438],
[449,0,423,432,422,420,438,426],
[463,467,0,434,436,459,457,460],
[447,458,456,0,434,442,463,458],
[447,468,454,456,0,448,474,431],
[460,470,431,448,442,0,454,422],
[443,452,433,427,416,436,0,438],
[452,464,430,432,459,468,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,436,452,445,450,477,455],
[438,0,433,437,442,442,456,441],
[454,457,0,437,453,444,460,431],
[438,453,453,0,433,454,463,434],
[445,448,437,457,0,455,467,447],
[440,448,446,436,435,0,460,455],
[413,434,430,427,423,430,0,405],
[435,449,459,456,443,435,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,434,441,424,446,437,423],
[474,0,447,457,450,465,433,455],
[456,443,0,433,446,441,460,429],
[449,433,457,0,444,450,455,418],
[466,440,444,446,0,468,449,429],
[444,425,449,440,422,0,412,407],
[453,457,430,435,441,478,0,444],
[467,435,461,472,461,483,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,453,458,449,442,424,407],
[471,0,442,467,484,469,447,417],
[437,448,0,447,446,461,409,399],
[432,423,443,0,457,441,396,422],
[441,406,444,433,0,468,420,434],
[448,421,429,449,422,0,417,446],
[466,443,481,494,470,473,0,448],
[483,473,491,468,456,444,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,410,456,488,420,440,386],
[422,0,434,470,477,470,368,323],
[480,456,0,451,503,378,387,439],
[434,420,439,0,447,362,378,387],
[402,413,387,443,0,386,371,387],
[470,420,512,528,504,0,456,504],
[450,522,503,512,519,434,0,495],
[504,567,451,503,503,386,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,440,448,437,458,438,458],
[453,0,438,458,457,447,448,457],
[450,452,0,473,447,445,433,469],
[442,432,417,0,434,428,432,430],
[453,433,443,456,0,444,452,444],
[432,443,445,462,446,0,450,460],
[452,442,457,458,438,440,0,476],
[432,433,421,460,446,430,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,475,426,480,473,462,484],
[442,0,447,436,427,447,413,439],
[415,443,0,447,440,427,439,447],
[464,454,443,0,492,456,465,452],
[410,463,450,398,0,442,424,434],
[417,443,463,434,448,0,421,438],
[428,477,451,425,466,469,0,461],
[406,451,443,438,456,452,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,450,473,473,428,447,449],
[455,0,432,469,470,449,440,469],
[440,458,0,478,503,476,462,452],
[417,421,412,0,455,421,436,421],
[417,420,387,435,0,410,405,437],
[462,441,414,469,480,0,430,449],
[443,450,428,454,485,460,0,431],
[441,421,438,469,453,441,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,447,464,461,447,456,446],
[464,0,490,471,452,439,451,457],
[443,400,0,434,443,426,422,456],
[426,419,456,0,472,436,436,455],
[429,438,447,418,0,416,429,425],
[443,451,464,454,474,0,451,468],
[434,439,468,454,461,439,0,453],
[444,433,434,435,465,422,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,426,413,441,467,418,461],
[423,0,429,393,434,426,409,438],
[464,461,0,453,465,443,430,442],
[477,497,437,0,470,482,459,444],
[449,456,425,420,0,438,404,414],
[423,464,447,408,452,0,423,419],
[472,481,460,431,486,467,0,432],
[429,452,448,446,476,471,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,466,443,518,498,454,467],
[401,0,417,438,476,434,482,429],
[424,473,0,415,475,434,441,426],
[447,452,475,0,486,447,466,445],
[372,414,415,404,0,437,387,408],
[392,456,456,443,453,0,442,431],
[436,408,449,424,503,448,0,468],
[423,461,464,445,482,459,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,416,430,471,486,433,417],
[508,0,443,445,444,489,509,448],
[474,447,0,444,477,502,532,384],
[460,445,446,0,430,480,473,400],
[419,446,413,460,0,495,415,445],
[404,401,388,410,395,0,466,362],
[457,381,358,417,475,424,0,369],
[473,442,506,490,445,528,521,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,422,441,436,446,423,417],
[465,0,429,431,458,435,464,462],
[468,461,0,449,477,453,473,432],
[449,459,441,0,439,448,449,443],
[454,432,413,451,0,439,456,424],
[444,455,437,442,451,0,451,457],
[467,426,417,441,434,439,0,427],
[473,428,458,447,466,433,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,439,415,439,434,450,450],
[457,0,465,450,452,457,439,463],
[451,425,0,411,447,439,455,421],
[475,440,479,0,486,464,475,464],
[451,438,443,404,0,444,444,461],
[456,433,451,426,446,0,469,464],
[440,451,435,415,446,421,0,427],
[440,427,469,426,429,426,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,319,309,449,307,394,378,360],
[571,0,529,472,429,499,489,482],
[581,361,0,487,449,499,415,461],
[441,418,403,0,379,490,429,354],
[583,461,441,511,0,503,487,462],
[496,391,391,400,387,0,349,366],
[512,401,475,461,403,541,0,482],
[530,408,429,536,428,524,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,450,481,433,456,485,436],
[431,0,422,420,413,445,438,385],
[440,468,0,512,523,520,481,394],
[409,470,378,0,414,386,447,357],
[457,477,367,476,0,370,414,397],
[434,445,370,504,520,0,495,456],
[405,452,409,443,476,395,0,382],
[454,505,496,533,493,434,508,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,460,448,457,498,453,509],
[450,0,411,466,444,517,480,543],
[430,479,0,405,378,519,415,491],
[442,424,485,0,470,513,469,513],
[433,446,512,420,0,511,489,552],
[392,373,371,377,379,0,413,468],
[437,410,475,421,401,477,0,508],
[381,347,399,377,338,422,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,462,457,425,469,459,491],
[440,0,418,454,452,459,440,494],
[428,472,0,445,424,490,455,476],
[433,436,445,0,438,452,459,472],
[465,438,466,452,0,444,507,493],
[421,431,400,438,446,0,416,477],
[431,450,435,431,383,474,0,488],
[399,396,414,418,397,413,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,446,456,446,429,415,437],
[466,0,473,460,462,455,444,466],
[444,417,0,425,429,419,421,431],
[434,430,465,0,434,448,439,434],
[444,428,461,456,0,438,449,443],
[461,435,471,442,452,0,438,446],
[475,446,469,451,441,452,0,451],
[453,424,459,456,447,444,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,454,473,455,464,452,474],
[459,0,450,465,439,444,447,471],
[436,440,0,451,430,422,433,452],
[417,425,439,0,416,418,431,436],
[435,451,460,474,0,470,462,464],
[426,446,468,472,420,0,446,459],
[438,443,457,459,428,444,0,453],
[416,419,438,454,426,431,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,422,448,467,429,449,434],
[484,0,464,450,461,445,427,437],
[468,426,0,454,452,435,454,454],
[442,440,436,0,457,411,447,470],
[423,429,438,433,0,425,433,440],
[461,445,455,479,465,0,440,470],
[441,463,436,443,457,450,0,440],
[456,453,436,420,450,420,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,457,471,438,448,466,447],
[380,0,417,379,397,363,370,374],
[433,473,0,450,466,419,468,436],
[419,511,440,0,473,475,480,454],
[452,493,424,417,0,464,458,437],
[442,527,471,415,426,0,432,454],
[424,520,422,410,432,458,0,426],
[443,516,454,436,453,436,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,454,444,455,458,492,468],
[432,0,449,468,441,432,450,479],
[436,441,0,434,440,451,453,465],
[446,422,456,0,421,454,438,453],
[435,449,450,469,0,453,469,459],
[432,458,439,436,437,0,448,439],
[398,440,437,452,421,442,0,441],
[422,411,425,437,431,451,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,446,479,461,466,480,453],
[446,0,447,428,459,449,442,432],
[444,443,0,440,447,462,450,432],
[411,462,450,0,447,425,429,442],
[429,431,443,443,0,444,453,462],
[424,441,428,465,446,0,439,413],
[410,448,440,461,437,451,0,437],
[437,458,458,448,428,477,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,446,423,447,470,469,436],
[436,0,454,464,468,456,467,433],
[444,436,0,463,452,443,466,434],
[467,426,427,0,438,443,477,455],
[443,422,438,452,0,462,463,436],
[420,434,447,447,428,0,480,447],
[421,423,424,413,427,410,0,411],
[454,457,456,435,454,443,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,408,451,430,446,443,424],
[453,0,424,439,442,448,448,438],
[482,466,0,444,461,448,445,450],
[439,451,446,0,453,421,454,432],
[460,448,429,437,0,457,437,443],
[444,442,442,469,433,0,454,430],
[447,442,445,436,453,436,0,437],
[466,452,440,458,447,460,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,460,466,472,494,507,491],
[446,0,377,437,434,429,459,447],
[430,513,0,474,438,454,503,453],
[424,453,416,0,485,445,419,479],
[418,456,452,405,0,452,455,484],
[396,461,436,445,438,0,429,455],
[383,431,387,471,435,461,0,448],
[399,443,437,411,406,435,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,454,410,503,440,482,465],
[457,0,456,457,490,453,430,419],
[436,434,0,432,458,458,448,433],
[480,433,458,0,526,432,480,451],
[387,400,432,364,0,425,419,474],
[450,437,432,458,465,0,435,430],
[408,460,442,410,471,455,0,451],
[425,471,457,439,416,460,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,436,438,455,440,445,422],
[435,0,456,432,446,436,434,440],
[454,434,0,445,464,445,463,429],
[452,458,445,0,459,449,450,441],
[435,444,426,431,0,431,444,446],
[450,454,445,441,459,0,451,427],
[445,456,427,440,446,439,0,431],
[468,450,461,449,444,463,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,436,442,467,455,484,446],
[400,0,428,391,452,494,437,402],
[454,462,0,485,440,501,491,504],
[448,499,405,0,444,454,463,373],
[423,438,450,446,0,468,485,461],
[435,396,389,436,422,0,404,363],
[406,453,399,427,405,486,0,411],
[444,488,386,517,429,527,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,444,459,467,456,476,448],
[439,0,423,448,431,451,472,441],
[446,467,0,474,457,445,484,460],
[431,442,416,0,408,464,483,450],
[423,459,433,482,0,450,498,465],
[434,439,445,426,440,0,478,464],
[414,418,406,407,392,412,0,399],
[442,449,430,440,425,426,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,443,348,295,415,375,444],
[391,0,319,316,538,321,266,647],
[447,571,0,423,517,273,363,489],
[542,574,467,0,536,479,389,490],
[595,352,373,354,0,238,310,584],
[475,569,617,411,652,0,457,522],
[515,624,527,501,580,433,0,557],
[446,243,401,400,306,368,333,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,475,456,499,537,457,439],
[394,0,432,443,464,514,434,458],
[415,458,0,439,492,488,412,415],
[434,447,451,0,528,492,449,443],
[391,426,398,362,0,456,398,394],
[353,376,402,398,434,0,400,429],
[433,456,478,441,492,490,0,426],
[451,432,475,447,496,461,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,453,434,461,461,483,455],
[410,0,456,422,446,459,480,466],
[437,434,0,442,431,434,493,465],
[456,468,448,0,426,456,489,471],
[429,444,459,464,0,472,489,471],
[429,431,456,434,418,0,447,458],
[407,410,397,401,401,443,0,414],
[435,424,425,419,419,432,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,425,411,408,436,441,419],
[394,0,415,386,361,405,387,401],
[465,475,0,467,439,447,425,462],
[479,504,423,0,444,431,454,443],
[482,529,451,446,0,475,434,470],
[454,485,443,459,415,0,416,452],
[449,503,465,436,456,474,0,468],
[471,489,428,447,420,438,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,484,439,493,447,448,450],
[460,0,473,409,418,427,446,374],
[406,417,0,414,433,447,413,406],
[451,481,476,0,439,437,427,421],
[397,472,457,451,0,440,474,430],
[443,463,443,453,450,0,418,370],
[442,444,477,463,416,472,0,427],
[440,516,484,469,460,520,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,514,447,396,497,443,542],
[447,0,403,444,505,513,498,506],
[376,487,0,421,470,483,361,458],
[443,446,469,0,491,525,509,515],
[494,385,420,399,0,542,414,450],
[393,377,407,365,348,0,335,391],
[447,392,529,381,476,555,0,430],
[348,384,432,375,440,499,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,561,427,582,495,421,582,515],
[329,0,395,534,340,406,590,468],
[463,495,0,605,424,454,511,526],
[308,356,285,0,383,395,509,366],
[395,550,466,507,0,419,511,391],
[469,484,436,495,471,0,476,480],
[308,300,379,381,379,414,0,468],
[375,422,364,524,499,410,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,441,431,524,391,474,459],
[450,0,450,412,453,352,407,460],
[449,440,0,424,479,446,423,501],
[459,478,466,0,518,408,437,467],
[366,437,411,372,0,389,394,493],
[499,538,444,482,501,0,408,472],
[416,483,467,453,496,482,0,475],
[431,430,389,423,397,418,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,378,461,437,372,420,442,626],
[512,0,536,413,471,475,564,683],
[429,354,0,341,341,433,426,375],
[453,477,549,0,439,459,473,624],
[518,419,549,451,0,422,500,506],
[470,415,457,431,468,0,391,504],
[448,326,464,417,390,499,0,543],
[264,207,515,266,384,386,347,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,393,432,412,405,476,431],
[473,0,444,409,429,440,450,438],
[497,446,0,391,419,511,437,417],
[458,481,499,0,426,449,433,476],
[478,461,471,464,0,479,433,421],
[485,450,379,441,411,0,420,469],
[414,440,453,457,457,470,0,513],
[459,452,473,414,469,421,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,408,447,425,412,425,460],
[453,0,400,428,418,431,412,440],
[482,490,0,473,459,435,442,459],
[443,462,417,0,433,450,420,450],
[465,472,431,457,0,438,426,489],
[478,459,455,440,452,0,449,466],
[465,478,448,470,464,441,0,453],
[430,450,431,440,401,424,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,441,430,461,436,434,434],
[445,0,447,448,449,461,457,455],
[449,443,0,438,451,451,444,460],
[460,442,452,0,463,458,448,469],
[429,441,439,427,0,441,444,447],
[454,429,439,432,449,0,432,449],
[456,433,446,442,446,458,0,451],
[456,435,430,421,443,441,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,465,464,430,437,467,418],
[431,0,432,450,413,431,462,412],
[425,458,0,454,428,427,489,451],
[426,440,436,0,421,382,420,410],
[460,477,462,469,0,414,465,461],
[453,459,463,508,476,0,481,435],
[423,428,401,470,425,409,0,405],
[472,478,439,480,429,455,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,439,417,422,447,418,472],
[439,0,479,454,431,463,452,486],
[451,411,0,434,462,464,455,489],
[473,436,456,0,453,451,459,455],
[468,459,428,437,0,447,445,468],
[443,427,426,439,443,0,441,488],
[472,438,435,431,445,449,0,460],
[418,404,401,435,422,402,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,468,450,461,444,444,456],
[436,0,461,453,439,438,441,439],
[422,429,0,430,410,416,424,422],
[440,437,460,0,448,437,438,432],
[429,451,480,442,0,448,443,451],
[446,452,474,453,442,0,432,447],
[446,449,466,452,447,458,0,440],
[434,451,468,458,439,443,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,446,448,466,450,436,456],
[439,0,446,458,459,419,447,442],
[444,444,0,450,469,447,447,457],
[442,432,440,0,436,424,423,452],
[424,431,421,454,0,426,434,463],
[440,471,443,466,464,0,468,468],
[454,443,443,467,456,422,0,458],
[434,448,433,438,427,422,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,415,398,445,466,418,427],
[459,0,431,435,433,483,428,419],
[475,459,0,439,478,451,431,448],
[492,455,451,0,463,498,462,442],
[445,457,412,427,0,424,409,450],
[424,407,439,392,466,0,432,407],
[472,462,459,428,481,458,0,459],
[463,471,442,448,440,483,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,488,456,442,456,416,525],
[433,0,401,408,370,376,434,518],
[402,489,0,463,481,509,430,533],
[434,482,427,0,379,514,330,518],
[448,520,409,511,0,524,500,574],
[434,514,381,376,366,0,433,487],
[474,456,460,560,390,457,0,551],
[365,372,357,372,316,403,339,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,483,449,468,444,456,441],
[426,0,463,417,436,431,435,449],
[407,427,0,421,433,424,458,412],
[441,473,469,0,474,454,440,446],
[422,454,457,416,0,425,443,433],
[446,459,466,436,465,0,443,420],
[434,455,432,450,447,447,0,425],
[449,441,478,444,457,470,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,430,447,474,459,465,440],
[454,0,453,467,457,422,480,469],
[460,437,0,464,468,437,476,480],
[443,423,426,0,499,461,473,430],
[416,433,422,391,0,428,440,448],
[431,468,453,429,462,0,468,453],
[425,410,414,417,450,422,0,450],
[450,421,410,460,442,437,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,451,421,425,431,427,443],
[474,0,448,442,432,421,448,449],
[439,442,0,411,453,435,461,448],
[469,448,479,0,471,445,453,480],
[465,458,437,419,0,447,452,467],
[459,469,455,445,443,0,442,477],
[463,442,429,437,438,448,0,459],
[447,441,442,410,423,413,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,456,437,422,410,454,450],
[437,0,445,417,439,423,435,397],
[434,445,0,466,446,427,471,444],
[453,473,424,0,469,450,463,448],
[468,451,444,421,0,425,441,443],
[480,467,463,440,465,0,471,454],
[436,455,419,427,449,419,0,440],
[440,493,446,442,447,436,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,438,450,449,442,452,444],
[421,0,416,442,434,436,451,435],
[452,474,0,462,469,445,458,469],
[440,448,428,0,438,445,450,445],
[441,456,421,452,0,440,466,447],
[448,454,445,445,450,0,458,450],
[438,439,432,440,424,432,0,433],
[446,455,421,445,443,440,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,477,474,441,472,428,446],
[444,0,456,502,438,470,430,452],
[413,434,0,472,425,461,421,433],
[416,388,418,0,416,400,448,374],
[449,452,465,474,0,424,489,451],
[418,420,429,490,466,0,456,438],
[462,460,469,442,401,434,0,434],
[444,438,457,516,439,452,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,464,410,460,446,490,428],
[432,0,428,443,445,448,453,461],
[426,462,0,399,461,453,452,415],
[480,447,491,0,449,453,478,434],
[430,445,429,441,0,465,488,441],
[444,442,437,437,425,0,491,462],
[400,437,438,412,402,399,0,405],
[462,429,475,456,449,428,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,414,430,423,397,477,458],
[431,0,445,435,405,403,446,494],
[476,445,0,454,461,408,472,473],
[460,455,436,0,431,431,438,504],
[467,485,429,459,0,465,451,479],
[493,487,482,459,425,0,456,480],
[413,444,418,452,439,434,0,492],
[432,396,417,386,411,410,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,453,422,472,464,445,423],
[422,0,447,408,415,404,418,420],
[437,443,0,437,425,448,429,459],
[468,482,453,0,461,491,458,436],
[418,475,465,429,0,450,445,463],
[426,486,442,399,440,0,447,413],
[445,472,461,432,445,443,0,433],
[467,470,431,454,427,477,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,421,460,468,465,464,449],
[415,0,420,455,472,453,455,428],
[469,470,0,495,499,442,473,423],
[430,435,395,0,424,426,444,396],
[422,418,391,466,0,449,431,413],
[425,437,448,464,441,0,439,444],
[426,435,417,446,459,451,0,467],
[441,462,467,494,477,446,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,479,445,448,405,433,430],
[464,0,482,430,467,441,466,467],
[411,408,0,401,441,386,406,433],
[445,460,489,0,468,443,423,459],
[442,423,449,422,0,422,433,446],
[485,449,504,447,468,0,442,442],
[457,424,484,467,457,448,0,446],
[460,423,457,431,444,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,463,424,445,441,452,445],
[446,0,448,439,429,450,489,436],
[427,442,0,413,429,429,468,419],
[466,451,477,0,448,461,470,433],
[445,461,461,442,0,438,473,447],
[449,440,461,429,452,0,484,442],
[438,401,422,420,417,406,0,410],
[445,454,471,457,443,448,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,424,412,438,426,507,441],
[470,0,508,386,504,428,571,530],
[466,382,0,349,477,558,542,533],
[478,504,541,0,493,420,583,494],
[452,386,413,397,0,544,459,414],
[464,462,332,470,346,0,450,411],
[383,319,348,307,431,440,0,393],
[449,360,357,396,476,479,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,450,399,452,423,440,434],
[450,0,478,427,446,463,460,430],
[440,412,0,427,432,432,429,413],
[491,463,463,0,471,456,440,464],
[438,444,458,419,0,424,432,417],
[467,427,458,434,466,0,463,440],
[450,430,461,450,458,427,0,439],
[456,460,477,426,473,450,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,537,480,563,568,433,502],
[416,0,362,442,405,459,329,463],
[353,528,0,370,458,482,459,460],
[410,448,520,0,462,434,475,457],
[327,485,432,428,0,497,345,480],
[322,431,408,456,393,0,336,437],
[457,561,431,415,545,554,0,513],
[388,427,430,433,410,453,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,421,452,454,453,440,453],
[447,0,441,429,453,453,453,455],
[469,449,0,447,439,477,440,461],
[438,461,443,0,453,461,449,451],
[436,437,451,437,0,432,463,470],
[437,437,413,429,458,0,447,456],
[450,437,450,441,427,443,0,448],
[437,435,429,439,420,434,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,520,468,510,446,484,439],
[436,0,485,439,461,427,428,402],
[370,405,0,347,377,362,379,337],
[422,451,543,0,470,421,458,477],
[380,429,513,420,0,454,408,375],
[444,463,528,469,436,0,500,473],
[406,462,511,432,482,390,0,480],
[451,488,553,413,515,417,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,463,451,452,438,450,394],
[480,0,466,508,423,470,431,461],
[427,424,0,415,397,386,432,414],
[439,382,475,0,433,450,401,428],
[438,467,493,457,0,431,423,439],
[452,420,504,440,459,0,441,417],
[440,459,458,489,467,449,0,454],
[496,429,476,462,451,473,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,431,435,443,426,465,476],
[406,0,452,393,415,409,417,462],
[459,438,0,409,450,425,463,480],
[455,497,481,0,453,435,473,468],
[447,475,440,437,0,452,434,452],
[464,481,465,455,438,0,455,463],
[425,473,427,417,456,435,0,504],
[414,428,410,422,438,427,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,444,449,430,436,481,445],
[434,0,469,443,438,442,456,431],
[446,421,0,422,440,428,432,430],
[441,447,468,0,442,445,461,459],
[460,452,450,448,0,444,444,440],
[454,448,462,445,446,0,461,435],
[409,434,458,429,446,429,0,450],
[445,459,460,431,450,455,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,478,423,438,445,454,435],
[447,0,478,400,421,444,423,430],
[412,412,0,400,391,401,396,399],
[467,490,490,0,457,465,443,473],
[452,469,499,433,0,456,422,445],
[445,446,489,425,434,0,436,452],
[436,467,494,447,468,454,0,462],
[455,460,491,417,445,438,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,466,480,491,464,477,439],
[426,0,442,454,505,452,488,423],
[424,448,0,454,485,465,484,461],
[410,436,436,0,462,457,470,440],
[399,385,405,428,0,408,447,424],
[426,438,425,433,482,0,471,457],
[413,402,406,420,443,419,0,413],
[451,467,429,450,466,433,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,394,405,430,460,358,485],
[461,0,494,456,511,499,370,464],
[496,396,0,509,482,462,470,439],
[485,434,381,0,414,422,350,421],
[460,379,408,476,0,437,490,402],
[430,391,428,468,453,0,451,427],
[532,520,420,540,400,439,0,482],
[405,426,451,469,488,463,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,417,441,482,471,462,476],
[454,0,432,438,466,446,443,460],
[473,458,0,447,488,439,427,482],
[449,452,443,0,446,435,436,482],
[408,424,402,444,0,429,416,442],
[419,444,451,455,461,0,439,465],
[428,447,463,454,474,451,0,479],
[414,430,408,408,448,425,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,380,399,467,361,375,449,382],
[510,0,446,469,384,467,466,384],
[491,444,0,491,457,419,418,434],
[423,421,399,0,376,355,394,336],
[529,506,433,514,0,517,503,490],
[515,423,471,535,373,0,461,418],
[441,424,472,496,387,429,0,431],
[508,506,456,554,400,472,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,455,438,420,444,410,439],
[441,0,456,442,454,450,419,440],
[435,434,0,438,430,450,413,443],
[452,448,452,0,466,444,420,446],
[470,436,460,424,0,446,436,453],
[446,440,440,446,444,0,419,446],
[480,471,477,470,454,471,0,441],
[451,450,447,444,437,444,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,405,420,432,423,441,508],
[463,0,499,494,508,444,506,492],
[485,391,0,420,437,492,484,424],
[470,396,470,0,487,485,500,367],
[458,382,453,403,0,400,450,458],
[467,446,398,405,490,0,439,475],
[449,384,406,390,440,451,0,344],
[382,398,466,523,432,415,546,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,554,496,419,480,416,441,437],
[336,0,414,454,477,386,403,372],
[394,476,0,459,484,348,458,413],
[471,436,431,0,442,470,494,406],
[410,413,406,448,0,348,451,387],
[474,504,542,420,542,0,503,438],
[449,487,432,396,439,387,0,461],
[453,518,477,484,503,452,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,456,431,429,427,443,427],
[435,0,427,433,425,414,442,433],
[434,463,0,434,430,434,445,388],
[459,457,456,0,453,430,457,439],
[461,465,460,437,0,432,466,446],
[463,476,456,460,458,0,460,428],
[447,448,445,433,424,430,0,413],
[463,457,502,451,444,462,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,447,435,425,429,439,437],
[416,0,438,435,432,430,449,430],
[443,452,0,452,448,441,441,447],
[455,455,438,0,435,453,424,442],
[465,458,442,455,0,445,447,429],
[461,460,449,437,445,0,464,448],
[451,441,449,466,443,426,0,436],
[453,460,443,448,461,442,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,486,463,451,477,448,466],
[481,0,464,442,457,460,454,445],
[404,426,0,454,471,429,428,464],
[427,448,436,0,447,451,431,428],
[439,433,419,443,0,429,432,462],
[413,430,461,439,461,0,433,441],
[442,436,462,459,458,457,0,452],
[424,445,426,462,428,449,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,501,481,492,463,455,482,437],
[389,0,429,429,438,411,458,412],
[409,461,0,448,455,434,418,422],
[398,461,442,0,428,432,445,430],
[427,452,435,462,0,430,445,411],
[435,479,456,458,460,0,457,465],
[408,432,472,445,445,433,0,431],
[453,478,468,460,479,425,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,449,462,451,436,466,440],
[434,0,444,466,468,458,488,422],
[441,446,0,431,480,434,464,432],
[428,424,459,0,456,466,491,448],
[439,422,410,434,0,448,485,445],
[454,432,456,424,442,0,471,441],
[424,402,426,399,405,419,0,411],
[450,468,458,442,445,449,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,463,443,456,450,462,463],
[448,0,445,438,476,466,463,460],
[427,445,0,425,486,447,454,453],
[447,452,465,0,461,442,465,446],
[434,414,404,429,0,442,448,436],
[440,424,443,448,448,0,445,439],
[428,427,436,425,442,445,0,434],
[427,430,437,444,454,451,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,364,399,409,407,391,372,425],
[526,0,455,488,461,421,472,474],
[491,435,0,492,407,457,421,469],
[481,402,398,0,373,447,415,437],
[483,429,483,517,0,465,426,527],
[499,469,433,443,425,0,416,450],
[518,418,469,475,464,474,0,502],
[465,416,421,453,363,440,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,444,431,436,447,440,438],
[451,0,457,458,437,456,422,449],
[446,433,0,428,449,444,457,453],
[459,432,462,0,438,457,448,451],
[454,453,441,452,0,446,441,445],
[443,434,446,433,444,0,442,437],
[450,468,433,442,449,448,0,442],
[452,441,437,439,445,453,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,455,463,460,441,452,426],
[455,0,447,488,455,470,429,445],
[435,443,0,449,403,446,448,412],
[427,402,441,0,409,424,433,400],
[430,435,487,481,0,456,456,458],
[449,420,444,466,434,0,401,435],
[438,461,442,457,434,489,0,445],
[464,445,478,490,432,455,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,392,435,407,426,434,420],
[437,0,428,469,434,445,441,421],
[498,462,0,477,457,449,466,444],
[455,421,413,0,423,405,453,449],
[483,456,433,467,0,460,456,443],
[464,445,441,485,430,0,462,452],
[456,449,424,437,434,428,0,397],
[470,469,446,441,447,438,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,497,430,404,479,437,447],
[409,0,510,466,414,456,425,432],
[393,380,0,408,399,409,392,422],
[460,424,482,0,450,464,446,413],
[486,476,491,440,0,532,483,501],
[411,434,481,426,358,0,415,418],
[453,465,498,444,407,475,0,393],
[443,458,468,477,389,472,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,496,446,407,441,439,423,436],
[394,0,460,367,376,433,393,406],
[444,430,0,385,404,447,413,390],
[483,523,505,0,455,496,439,515],
[449,514,486,435,0,497,485,502],
[451,457,443,394,393,0,432,434],
[467,497,477,451,405,458,0,480],
[454,484,500,375,388,456,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,482,493,420,513,464,441],
[442,0,392,428,496,424,452,381],
[408,498,0,426,496,396,414,423],
[397,462,464,0,524,428,469,406],
[470,394,394,366,0,423,410,312],
[377,466,494,462,467,0,410,401],
[426,438,476,421,480,480,0,446],
[449,509,467,484,578,489,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,428,479,480,446,424,433],
[454,0,478,475,506,437,437,463],
[462,412,0,465,477,456,465,468],
[411,415,425,0,480,455,431,421],
[410,384,413,410,0,410,408,405],
[444,453,434,435,480,0,461,435],
[466,453,425,459,482,429,0,450],
[457,427,422,469,485,455,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,489,444,471,471,451,456],
[399,0,485,458,445,426,479,446],
[401,405,0,424,408,407,421,419],
[446,432,466,0,444,435,444,420],
[419,445,482,446,0,423,440,434],
[419,464,483,455,467,0,418,424],
[439,411,469,446,450,472,0,412],
[434,444,471,470,456,466,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,477,465,439,451,460,469],
[446,0,457,437,451,424,445,438],
[413,433,0,446,421,382,416,427],
[425,453,444,0,434,414,432,431],
[451,439,469,456,0,420,460,450],
[439,466,508,476,470,0,470,485],
[430,445,474,458,430,420,0,428],
[421,452,463,459,440,405,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,454,455,457,460,431,445],
[446,0,432,441,461,445,443,454],
[436,458,0,453,444,463,447,443],
[435,449,437,0,453,453,439,438],
[433,429,446,437,0,443,437,450],
[430,445,427,437,447,0,433,432],
[459,447,443,451,453,457,0,458],
[445,436,447,452,440,458,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,458,430,452,469,465,457],
[455,0,446,448,434,461,472,466],
[432,444,0,442,432,458,469,468],
[460,442,448,0,410,462,438,461],
[438,456,458,480,0,482,454,451],
[421,429,432,428,408,0,434,456],
[425,418,421,452,436,456,0,436],
[433,424,422,429,439,434,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,422,425,423,450,467,412],
[454,0,466,457,441,418,470,448],
[468,424,0,448,429,452,468,438],
[465,433,442,0,450,449,464,437],
[467,449,461,440,0,490,491,464],
[440,472,438,441,400,0,459,396],
[423,420,422,426,399,431,0,423],
[478,442,452,453,426,494,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,449,446,472,449,476,485],
[445,0,439,409,430,435,450,424],
[441,451,0,440,468,456,437,464],
[444,481,450,0,463,472,450,446],
[418,460,422,427,0,447,421,411],
[441,455,434,418,443,0,444,450],
[414,440,453,440,469,446,0,453],
[405,466,426,444,479,440,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,476,476,467,495,460,441],
[433,0,410,449,419,443,433,436],
[414,480,0,451,445,462,470,439],
[414,441,439,0,434,458,443,415],
[423,471,445,456,0,458,454,459],
[395,447,428,432,432,0,419,408],
[430,457,420,447,436,471,0,474],
[449,454,451,475,431,482,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,488,453,495,438,474,446],
[470,0,475,435,533,482,514,477],
[402,415,0,419,505,428,464,470],
[437,455,471,0,486,493,509,418],
[395,357,385,404,0,421,496,424],
[452,408,462,397,469,0,470,406],
[416,376,426,381,394,420,0,402],
[444,413,420,472,466,484,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,473,485,435,342,456,387],
[492,0,583,520,444,477,515,485],
[417,307,0,459,464,430,489,349],
[405,370,431,0,416,447,511,363],
[455,446,426,474,0,422,448,452],
[548,413,460,443,468,0,385,459],
[434,375,401,379,442,505,0,392],
[503,405,541,527,438,431,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,477,538,524,526,545,369],
[470,0,377,515,397,386,394,411],
[413,513,0,523,511,458,476,528],
[352,375,367,0,291,360,277,341],
[366,493,379,599,0,435,431,419],
[364,504,432,530,455,0,536,486],
[345,496,414,613,459,354,0,376],
[521,479,362,549,471,404,514,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,436,439,437,472,480,459],
[446,0,435,432,451,460,433,449],
[454,455,0,478,440,466,468,452],
[451,458,412,0,439,462,467,460],
[453,439,450,451,0,466,458,429],
[418,430,424,428,424,0,439,446],
[410,457,422,423,432,451,0,434],
[431,441,438,430,461,444,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,468,442,453,469,445,457],
[432,0,452,444,482,461,458,427],
[422,438,0,451,454,454,454,431],
[448,446,439,0,497,468,443,437],
[437,408,436,393,0,411,445,434],
[421,429,436,422,479,0,440,417],
[445,432,436,447,445,450,0,458],
[433,463,459,453,456,473,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,434,442,430,447,451,433],
[440,0,448,434,457,465,464,459],
[456,442,0,440,461,457,460,457],
[448,456,450,0,451,446,422,441],
[460,433,429,439,0,463,435,455],
[443,425,433,444,427,0,428,430],
[439,426,430,468,455,462,0,458],
[457,431,433,449,435,460,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,619,265,652,577,500,468,628],
[271,0,242,484,455,263,340,471],
[625,648,0,519,733,502,437,614],
[238,406,371,0,485,112,505,366],
[313,435,157,405,0,209,549,421],
[390,627,388,778,681,0,506,541],
[422,550,453,385,341,384,0,461],
[262,419,276,524,469,349,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,458,445,456,433,437,444],
[436,0,462,444,454,437,427,428],
[432,428,0,444,426,427,413,441],
[445,446,446,0,460,427,429,435],
[434,436,464,430,0,465,452,442],
[457,453,463,463,425,0,436,451],
[453,463,477,461,438,454,0,451],
[446,462,449,455,448,439,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,446,516,510,415,424,466],
[417,0,488,465,474,419,425,444],
[444,402,0,470,472,442,448,429],
[374,425,420,0,423,394,389,405],
[380,416,418,467,0,392,392,381],
[475,471,448,496,498,0,425,441],
[466,465,442,501,498,465,0,432],
[424,446,461,485,509,449,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,490,433,455,494,491,427],
[440,0,448,424,466,441,478,463],
[400,442,0,424,396,466,461,415],
[457,466,466,0,434,479,467,434],
[435,424,494,456,0,473,527,447],
[396,449,424,411,417,0,458,431],
[399,412,429,423,363,432,0,410],
[463,427,475,456,443,459,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,471,458,440,431,468,440],
[458,0,488,444,459,458,469,452],
[419,402,0,434,423,426,430,419],
[432,446,456,0,450,440,469,460],
[450,431,467,440,0,445,464,455],
[459,432,464,450,445,0,467,465],
[422,421,460,421,426,423,0,432],
[450,438,471,430,435,425,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,462,447,429,452,455,456],
[445,0,443,428,412,418,434,441],
[428,447,0,460,437,435,451,456],
[443,462,430,0,436,419,431,447],
[461,478,453,454,0,437,442,466],
[438,472,455,471,453,0,461,476],
[435,456,439,459,448,429,0,460],
[434,449,434,443,424,414,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,502,439,449,427,473,438],
[466,0,458,444,434,388,473,428],
[388,432,0,419,421,417,433,382],
[451,446,471,0,446,447,448,443],
[441,456,469,444,0,454,477,450],
[463,502,473,443,436,0,464,455],
[417,417,457,442,413,426,0,422],
[452,462,508,447,440,435,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,450,419,483,477,439,466],
[430,0,481,428,448,449,474,456],
[440,409,0,398,460,430,429,439],
[471,462,492,0,457,484,438,491],
[407,442,430,433,0,443,424,441],
[413,441,460,406,447,0,424,460],
[451,416,461,452,466,466,0,491],
[424,434,451,399,449,430,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,441,435,415,438,447,424],
[405,0,394,421,456,441,425,433],
[449,496,0,417,438,455,453,424],
[455,469,473,0,447,430,426,471],
[475,434,452,443,0,476,436,444],
[452,449,435,460,414,0,433,431],
[443,465,437,464,454,457,0,443],
[466,457,466,419,446,459,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,480,319,452,379,404,370],
[435,0,456,365,467,347,416,383],
[410,434,0,354,424,335,492,388],
[571,525,536,0,531,459,461,444],
[438,423,466,359,0,401,518,389],
[511,543,555,431,489,0,486,490],
[486,474,398,429,372,404,0,410],
[520,507,502,446,501,400,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,421,456,441,449,452,455],
[481,0,416,459,475,457,472,487],
[469,474,0,452,445,472,492,466],
[434,431,438,0,464,449,450,445],
[449,415,445,426,0,477,469,456],
[441,433,418,441,413,0,454,467],
[438,418,398,440,421,436,0,432],
[435,403,424,445,434,423,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,463,456,472,455,471,448],
[471,0,484,440,480,468,482,435],
[427,406,0,416,483,428,433,423],
[434,450,474,0,476,455,487,474],
[418,410,407,414,0,430,471,421],
[435,422,462,435,460,0,480,420],
[419,408,457,403,419,410,0,386],
[442,455,467,416,469,470,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,446,408,449,456,455,444],
[432,0,457,422,414,456,412,459],
[444,433,0,421,439,432,407,455],
[482,468,469,0,480,457,432,474],
[441,476,451,410,0,453,457,452],
[434,434,458,433,437,0,419,453],
[435,478,483,458,433,471,0,471],
[446,431,435,416,438,437,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,451,465,426,419,414,444],
[413,0,435,435,413,385,397,456],
[439,455,0,437,408,416,405,491],
[425,455,453,0,444,437,432,459],
[464,477,482,446,0,442,454,501],
[471,505,474,453,448,0,427,488],
[476,493,485,458,436,463,0,484],
[446,434,399,431,389,402,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,366,439,439,367,341,427],
[431,0,448,508,466,419,439,452],
[524,442,0,480,520,478,466,476],
[451,382,410,0,494,395,398,434],
[451,424,370,396,0,373,406,453],
[523,471,412,495,517,0,435,456],
[549,451,424,492,484,455,0,462],
[463,438,414,456,437,434,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,428,442,429,457,409,454],
[455,0,435,456,421,430,446,442],
[462,455,0,493,429,442,466,472],
[448,434,397,0,420,441,426,417],
[461,469,461,470,0,451,440,471],
[433,460,448,449,439,0,435,448],
[481,444,424,464,450,455,0,464],
[436,448,418,473,419,442,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,399,446,493,410,447,427,455],
[491,0,436,515,429,424,439,429],
[444,454,0,538,469,518,494,472],
[397,375,352,0,458,343,392,413],
[480,461,421,432,0,509,463,454],
[443,466,372,547,381,0,488,461],
[463,451,396,498,427,402,0,443],
[435,461,418,477,436,429,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,432,418,452,439,428,459],
[437,0,419,408,436,408,405,464],
[458,471,0,446,467,453,445,471],
[472,482,444,0,458,460,473,476],
[438,454,423,432,0,437,434,455],
[451,482,437,430,453,0,438,466],
[462,485,445,417,456,452,0,467],
[431,426,419,414,435,424,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,448,397,448,455,439,414],
[462,0,484,448,466,463,447,435],
[442,406,0,397,439,438,400,412],
[493,442,493,0,481,469,458,445],
[442,424,451,409,0,455,424,426],
[435,427,452,421,435,0,408,402],
[451,443,490,432,466,482,0,442],
[476,455,478,445,464,488,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,448,460,444,431,452,425],
[450,0,454,517,449,438,449,450],
[442,436,0,483,412,469,429,428],
[430,373,407,0,418,437,435,393],
[446,441,478,472,0,450,447,437],
[459,452,421,453,440,0,445,425],
[438,441,461,455,443,445,0,411],
[465,440,462,497,453,465,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,525,547,441,509,526,567,557],
[365,0,527,461,500,458,490,433],
[343,363,0,335,411,396,325,342],
[449,429,555,0,451,488,528,391],
[381,390,479,439,0,397,366,385],
[364,432,494,402,493,0,457,406],
[323,400,565,362,524,433,0,465],
[333,457,548,499,505,484,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,431,434,469,483,446,464],
[440,0,447,461,516,465,438,465],
[459,443,0,443,490,427,441,476],
[456,429,447,0,499,448,391,459],
[421,374,400,391,0,414,406,438],
[407,425,463,442,476,0,420,478],
[444,452,449,499,484,470,0,434],
[426,425,414,431,452,412,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,480,452,464,502,482,441],
[426,0,430,425,422,461,475,450],
[410,460,0,451,446,447,447,459],
[438,465,439,0,433,455,417,396],
[426,468,444,457,0,461,464,433],
[388,429,443,435,429,0,427,440],
[408,415,443,473,426,463,0,445],
[449,440,431,494,457,450,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,431,442,458,462,417,466],
[466,0,484,462,475,473,455,442],
[459,406,0,432,432,438,431,430],
[448,428,458,0,459,467,432,466],
[432,415,458,431,0,436,414,458],
[428,417,452,423,454,0,426,445],
[473,435,459,458,476,464,0,465],
[424,448,460,424,432,445,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,453,451,451,409,437,457],
[427,0,461,465,448,455,446,472],
[437,429,0,429,440,407,430,430],
[439,425,461,0,426,421,408,444],
[439,442,450,464,0,427,408,408],
[481,435,483,469,463,0,441,481],
[453,444,460,482,482,449,0,447],
[433,418,460,446,482,409,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,476,458,451,466,457,443],
[440,0,472,425,449,458,442,418],
[414,418,0,430,421,430,450,414],
[432,465,460,0,474,438,446,436],
[439,441,469,416,0,445,460,445],
[424,432,460,452,445,0,438,427],
[433,448,440,444,430,452,0,424],
[447,472,476,454,445,463,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,434,479,442,459,481,446],
[419,0,432,470,426,436,463,446],
[456,458,0,469,443,438,441,439],
[411,420,421,0,421,414,436,415],
[448,464,447,469,0,434,461,445],
[431,454,452,476,456,0,452,437],
[409,427,449,454,429,438,0,436],
[444,444,451,475,445,453,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,443,421,431,446,453,437],
[467,0,452,419,454,447,450,439],
[447,438,0,439,428,432,432,436],
[469,471,451,0,449,457,445,461],
[459,436,462,441,0,444,456,440],
[444,443,458,433,446,0,439,428],
[437,440,458,445,434,451,0,428],
[453,451,454,429,450,462,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,401,437,399,437,441,442],
[456,0,431,457,403,419,467,422],
[489,459,0,488,399,435,465,450],
[453,433,402,0,380,394,418,441],
[491,487,491,510,0,445,505,474],
[453,471,455,496,445,0,474,479],
[449,423,425,472,385,416,0,455],
[448,468,440,449,416,411,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,443,421,439,441,446,482],
[413,0,453,446,442,439,465,464],
[447,437,0,427,453,451,465,475],
[469,444,463,0,458,456,480,485],
[451,448,437,432,0,442,438,455],
[449,451,439,434,448,0,458,477],
[444,425,425,410,452,432,0,460],
[408,426,415,405,435,413,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,414,397,475,385,483,428],
[464,0,422,392,460,429,463,417],
[476,468,0,471,469,458,444,481],
[493,498,419,0,465,498,539,425],
[415,430,421,425,0,423,420,412],
[505,461,432,392,467,0,478,411],
[407,427,446,351,470,412,0,420],
[462,473,409,465,478,479,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,442,453,464,440,444,444],
[443,0,417,438,450,440,416,417],
[448,473,0,446,460,450,429,446],
[437,452,444,0,457,449,431,455],
[426,440,430,433,0,441,435,443],
[450,450,440,441,449,0,435,435],
[446,474,461,459,455,455,0,440],
[446,473,444,435,447,455,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,458,449,452,451,488,455],
[449,0,446,429,431,428,460,424],
[432,444,0,459,461,423,459,440],
[441,461,431,0,474,467,494,456],
[438,459,429,416,0,435,443,454],
[439,462,467,423,455,0,485,463],
[402,430,431,396,447,405,0,400],
[435,466,450,434,436,427,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,429,461,453,423,436,460],
[429,0,414,406,427,417,452,440],
[461,476,0,440,456,460,471,453],
[429,484,450,0,439,425,452,459],
[437,463,434,451,0,444,448,448],
[467,473,430,465,446,0,480,480],
[454,438,419,438,442,410,0,453],
[430,450,437,431,442,410,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,408,433,439,437,397,402],
[481,0,441,452,476,452,444,448],
[482,449,0,424,475,475,465,456],
[457,438,466,0,453,437,420,426],
[451,414,415,437,0,441,436,430],
[453,438,415,453,449,0,447,448],
[493,446,425,470,454,443,0,462],
[488,442,434,464,460,442,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,356,536,444,356,446,534,537],
[534,0,713,266,622,533,355,446],
[354,177,0,265,265,443,354,445],
[446,624,625,0,356,622,535,360],
[534,268,625,534,0,625,269,449],
[444,357,447,268,265,0,269,448],
[356,535,536,355,621,621,0,537],
[353,444,445,530,441,442,353,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,420,455,444,420,455,437],
[467,0,452,472,471,440,468,465],
[470,438,0,480,451,456,451,446],
[435,418,410,0,431,423,434,430],
[446,419,439,459,0,455,429,459],
[470,450,434,467,435,0,454,463],
[435,422,439,456,461,436,0,467],
[453,425,444,460,431,427,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,462,480,443,468,438,449],
[428,0,440,482,446,465,453,451],
[428,450,0,467,444,448,461,462],
[410,408,423,0,407,438,419,413],
[447,444,446,483,0,469,450,444],
[422,425,442,452,421,0,446,449],
[452,437,429,471,440,444,0,442],
[441,439,428,477,446,441,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,475,460,456,464,461,480],
[447,0,471,453,462,437,439,457],
[415,419,0,433,439,426,433,438],
[430,437,457,0,438,420,449,450],
[434,428,451,452,0,422,450,439],
[426,453,464,470,468,0,464,460],
[429,451,457,441,440,426,0,427],
[410,433,452,440,451,430,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,479,459,443,441,463,473],
[443,0,485,450,448,439,459,472],
[411,405,0,430,394,425,423,445],
[431,440,460,0,441,456,427,452],
[447,442,496,449,0,461,441,490],
[449,451,465,434,429,0,450,466],
[427,431,467,463,449,440,0,502],
[417,418,445,438,400,424,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,465,426,451,427,428,440],
[466,0,467,476,444,452,465,450],
[425,423,0,433,453,436,418,457],
[464,414,457,0,445,425,419,464],
[439,446,437,445,0,453,428,442],
[463,438,454,465,437,0,431,457],
[462,425,472,471,462,459,0,486],
[450,440,433,426,448,433,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,385,440,457,475,430,416,439],
[505,0,462,503,486,414,422,409],
[450,428,0,471,474,438,469,455],
[433,387,419,0,451,381,404,370],
[415,404,416,439,0,389,409,382],
[460,476,452,509,501,0,460,443],
[474,468,421,486,481,430,0,448],
[451,481,435,520,508,447,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,469,439,466,463,473,467],
[410,0,470,399,414,403,455,433],
[421,420,0,422,426,391,430,435],
[451,491,468,0,473,422,447,425],
[424,476,464,417,0,450,451,428],
[427,487,499,468,440,0,474,449],
[417,435,460,443,439,416,0,436],
[423,457,455,465,462,441,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,443,458,458,443,458,445],
[474,0,437,450,463,458,441,441],
[447,453,0,447,453,443,456,433],
[432,440,443,0,446,418,456,428],
[432,427,437,444,0,437,442,433],
[447,432,447,472,453,0,434,430],
[432,449,434,434,448,456,0,430],
[445,449,457,462,457,460,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,432,427,434,431,406,448],
[467,0,463,440,447,450,440,449],
[458,427,0,425,456,438,426,455],
[463,450,465,0,435,426,446,429],
[456,443,434,455,0,404,434,447],
[459,440,452,464,486,0,462,453],
[484,450,464,444,456,428,0,459],
[442,441,435,461,443,437,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,444,421,445,445,441,446],
[447,0,423,440,447,467,444,442],
[446,467,0,444,456,457,457,469],
[469,450,446,0,451,459,450,441],
[445,443,434,439,0,454,445,426],
[445,423,433,431,436,0,425,438],
[449,446,433,440,445,465,0,459],
[444,448,421,449,464,452,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,444,486,458,487,471,435],
[444,0,414,522,453,543,470,474],
[446,476,0,503,445,477,525,436],
[404,368,387,0,378,477,413,409],
[432,437,445,512,0,445,439,386],
[403,347,413,413,445,0,417,376],
[419,420,365,477,451,473,0,403],
[455,416,454,481,504,514,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,461,434,441,420,463,440],
[464,0,451,443,445,425,455,448],
[429,439,0,411,437,446,453,460],
[456,447,479,0,435,418,472,463],
[449,445,453,455,0,420,461,490],
[470,465,444,472,470,0,479,475],
[427,435,437,418,429,411,0,448],
[450,442,430,427,400,415,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,342,412,384,373,402,413,503],
[548,0,476,404,402,447,407,499],
[478,414,0,449,431,519,383,488],
[506,486,441,0,368,444,437,468],
[517,488,459,522,0,418,516,592],
[488,443,371,446,472,0,382,501],
[477,483,507,453,374,508,0,502],
[387,391,402,422,298,389,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,466,465,462,440,423,439],
[454,0,426,418,457,453,422,434],
[424,464,0,449,456,453,433,456],
[425,472,441,0,439,447,426,418],
[428,433,434,451,0,427,427,422],
[450,437,437,443,463,0,437,449],
[467,468,457,464,463,453,0,442],
[451,456,434,472,468,441,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,455,415,457,449,460,448],
[454,0,448,436,471,445,465,430],
[435,442,0,436,451,444,452,421],
[475,454,454,0,452,456,473,443],
[433,419,439,438,0,435,456,421],
[441,445,446,434,455,0,469,430],
[430,425,438,417,434,421,0,414],
[442,460,469,447,469,460,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,422,434,455,456,459,449],
[447,0,423,433,421,434,427,458],
[468,467,0,454,450,451,425,469],
[456,457,436,0,440,455,454,466],
[435,469,440,450,0,447,433,473],
[434,456,439,435,443,0,430,458],
[431,463,465,436,457,460,0,477],
[441,432,421,424,417,432,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,421,418,470,452,445,425],
[465,0,426,449,461,458,443,454],
[469,464,0,450,488,433,455,441],
[472,441,440,0,452,427,433,417],
[420,429,402,438,0,420,434,396],
[438,432,457,463,470,0,443,428],
[445,447,435,457,456,447,0,431],
[465,436,449,473,494,462,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,465,457,526,506,494,445],
[404,0,496,432,465,437,479,427],
[425,394,0,476,458,427,437,420],
[433,458,414,0,473,472,504,437],
[364,425,432,417,0,444,438,390],
[384,453,463,418,446,0,423,387],
[396,411,453,386,452,467,0,409],
[445,463,470,453,500,503,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,414,456,437,449,424,427],
[456,0,489,507,493,483,440,452],
[476,401,0,443,477,478,449,439],
[434,383,447,0,467,442,429,433],
[453,397,413,423,0,468,466,420],
[441,407,412,448,422,0,401,399],
[466,450,441,461,424,489,0,434],
[463,438,451,457,470,491,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,466,441,428,446,425,416],
[416,0,474,448,467,434,447,428],
[424,416,0,448,419,425,393,419],
[449,442,442,0,420,424,412,421],
[462,423,471,470,0,433,422,442],
[444,456,465,466,457,0,412,382],
[465,443,497,478,468,478,0,445],
[474,462,471,469,448,508,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,435,510,582,432,468,512],
[361,0,419,419,358,372,356,472],
[455,471,0,486,431,410,392,435],
[380,471,404,0,416,391,278,418],
[308,532,459,474,0,375,361,382],
[458,518,480,499,515,0,340,460],
[422,534,498,612,529,550,0,515],
[378,418,455,472,508,430,375,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,423,427,464,460,483,462],
[444,0,446,461,459,450,454,454],
[467,444,0,443,467,466,468,463],
[463,429,447,0,476,464,469,461],
[426,431,423,414,0,437,456,424],
[430,440,424,426,453,0,440,442],
[407,436,422,421,434,450,0,425],
[428,436,427,429,466,448,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,454,451,466,457,439,468],
[457,0,455,457,475,461,437,461],
[436,435,0,439,453,462,443,461],
[439,433,451,0,463,463,445,457],
[424,415,437,427,0,434,435,452],
[433,429,428,427,456,0,435,438],
[451,453,447,445,455,455,0,459],
[422,429,429,433,438,452,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,439,432,419,467,477,455],
[396,0,413,407,395,421,427,426],
[451,477,0,447,413,436,421,442],
[458,483,443,0,429,451,456,444],
[471,495,477,461,0,439,479,448],
[423,469,454,439,451,0,469,473],
[413,463,469,434,411,421,0,461],
[435,464,448,446,442,417,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,427,469,471,481,465,469],
[437,0,451,439,463,459,466,425],
[463,439,0,450,478,478,462,430],
[421,451,440,0,439,461,418,444],
[419,427,412,451,0,459,424,439],
[409,431,412,429,431,0,415,407],
[425,424,428,472,466,475,0,419],
[421,465,460,446,451,483,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,443,371,546,413,363,338],
[445,0,415,370,447,386,417,341],
[447,475,0,344,500,441,394,397],
[519,520,546,0,570,519,498,419],
[344,443,390,320,0,312,286,210],
[477,504,449,371,578,0,399,423],
[527,473,496,392,604,491,0,471],
[552,549,493,471,680,467,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,436,454,472,457,457,483],
[402,0,438,425,458,421,429,452],
[454,452,0,431,447,439,429,470],
[436,465,459,0,452,445,440,462],
[418,432,443,438,0,408,443,450],
[433,469,451,445,482,0,481,478],
[433,461,461,450,447,409,0,442],
[407,438,420,428,440,412,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,466,445,473,426,440,420],
[427,0,473,396,498,460,440,433],
[424,417,0,390,452,466,426,427],
[445,494,500,0,500,473,504,457],
[417,392,438,390,0,414,378,414],
[464,430,424,417,476,0,391,404],
[450,450,464,386,512,499,0,437],
[470,457,463,433,476,486,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,412,466,409,379,417,465],
[438,0,419,503,469,450,452,476],
[478,471,0,501,425,386,515,480],
[424,387,389,0,391,403,379,449],
[481,421,465,499,0,408,468,512],
[511,440,504,487,482,0,541,442],
[473,438,375,511,422,349,0,472],
[425,414,410,441,378,448,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,458,402,504,325,467,355],
[485,0,440,468,506,419,487,452],
[432,450,0,417,418,352,432,384],
[488,422,473,0,469,372,456,392],
[386,384,472,421,0,370,438,439],
[565,471,538,518,520,0,516,421],
[423,403,458,434,452,374,0,374],
[535,438,506,498,451,469,516,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,442,481,469,463,458,483],
[402,0,435,427,430,436,408,460],
[448,455,0,439,448,442,418,467],
[409,463,451,0,461,434,433,471],
[421,460,442,429,0,446,440,476],
[427,454,448,456,444,0,449,474],
[432,482,472,457,450,441,0,459],
[407,430,423,419,414,416,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,454,453,423,452,406,439],
[423,0,459,402,439,462,445,472],
[436,431,0,427,427,425,448,440],
[437,488,463,0,448,444,423,442],
[467,451,463,442,0,435,437,450],
[438,428,465,446,455,0,450,439],
[484,445,442,467,453,440,0,427],
[451,418,450,448,440,451,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,453,425,502,432,444,434],
[443,0,436,414,476,430,410,430],
[437,454,0,445,491,434,443,457],
[465,476,445,0,493,447,451,462],
[388,414,399,397,0,395,409,378],
[458,460,456,443,495,0,443,445],
[446,480,447,439,481,447,0,456],
[456,460,433,428,512,445,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,430,416,415,421,448,457],
[492,0,465,427,456,461,488,451],
[460,425,0,404,456,444,471,438],
[474,463,486,0,462,435,500,471],
[475,434,434,428,0,454,469,445],
[469,429,446,455,436,0,449,448],
[442,402,419,390,421,441,0,415],
[433,439,452,419,445,442,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,418,438,453,414,454,427],
[434,0,391,415,457,435,430,405],
[472,499,0,444,471,459,439,444],
[452,475,446,0,451,446,429,432],
[437,433,419,439,0,438,433,417],
[476,455,431,444,452,0,470,455],
[436,460,451,461,457,420,0,445],
[463,485,446,458,473,435,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,467,428,455,463,453,455],
[439,0,463,424,418,434,427,440],
[423,427,0,413,436,462,426,450],
[462,466,477,0,447,486,428,470],
[435,472,454,443,0,464,424,437],
[427,456,428,404,426,0,443,458],
[437,463,464,462,466,447,0,435],
[435,450,440,420,453,432,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,456,442,458,484,447,460],
[435,0,462,463,454,479,420,453],
[434,428,0,439,404,469,430,457],
[448,427,451,0,444,480,445,469],
[432,436,486,446,0,479,432,455],
[406,411,421,410,411,0,393,446],
[443,470,460,445,458,497,0,447],
[430,437,433,421,435,444,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,432,459,470,442,449],
[440,0,446,412,422,449,403,452],
[445,444,0,420,448,429,450,447],
[458,478,470,0,451,466,432,485],
[431,468,442,439,0,476,485,475],
[420,441,461,424,414,0,404,462],
[448,487,440,458,405,486,0,482],
[441,438,443,405,415,428,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,469,456,473,441,433,454],
[447,0,455,462,476,454,438,476],
[421,435,0,416,431,440,416,440],
[434,428,474,0,431,453,435,455],
[417,414,459,459,0,432,410,437],
[449,436,450,437,458,0,454,477],
[457,452,474,455,480,436,0,456],
[436,414,450,435,453,413,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,451,468,449,439,491,482],
[423,0,438,442,452,428,442,472],
[439,452,0,435,427,435,457,445],
[422,448,455,0,433,445,447,467],
[441,438,463,457,0,427,465,458],
[451,462,455,445,463,0,475,473],
[399,448,433,443,425,415,0,432],
[408,418,445,423,432,417,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,427,442,449,429,454,434],
[450,0,429,461,447,429,441,453],
[463,461,0,477,471,464,445,468],
[448,429,413,0,450,434,418,430],
[441,443,419,440,0,404,403,410],
[461,461,426,456,486,0,439,460],
[436,449,445,472,487,451,0,454],
[456,437,422,460,480,430,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,462,459,439,437,460,460],
[452,0,451,473,464,452,436,483],
[428,439,0,442,428,421,442,459],
[431,417,448,0,428,419,427,457],
[451,426,462,462,0,427,438,461],
[453,438,469,471,463,0,451,474],
[430,454,448,463,452,439,0,462],
[430,407,431,433,429,416,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,450,453,438,447,434,457],
[460,0,445,457,436,431,435,471],
[440,445,0,460,452,463,453,472],
[437,433,430,0,428,440,423,465],
[452,454,438,462,0,461,449,471],
[443,459,427,450,429,0,441,459],
[456,455,437,467,441,449,0,471],
[433,419,418,425,419,431,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,430,397,438,429,412,427],
[483,0,482,448,474,480,459,432],
[460,408,0,419,441,455,430,424],
[493,442,471,0,472,460,436,456],
[452,416,449,418,0,456,422,428],
[461,410,435,430,434,0,428,454],
[478,431,460,454,468,462,0,460],
[463,458,466,434,462,436,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,446,477,447,519,483,445],
[449,0,495,438,491,505,440,465],
[444,395,0,434,465,497,430,468],
[413,452,456,0,452,453,449,446],
[443,399,425,438,0,469,434,412],
[371,385,393,437,421,0,426,420],
[407,450,460,441,456,464,0,441],
[445,425,422,444,478,470,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,446,426,442,440,440,464],
[461,0,449,447,449,461,445,484],
[444,441,0,442,440,448,473,467],
[464,443,448,0,443,442,461,477],
[448,441,450,447,0,462,447,466],
[450,429,442,448,428,0,447,457],
[450,445,417,429,443,443,0,470],
[426,406,423,413,424,433,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,428,477,493,444,470,459],
[434,0,466,430,479,511,412,443],
[462,424,0,468,512,403,454,387],
[413,460,422,0,419,383,402,413],
[397,411,378,471,0,423,443,423],
[446,379,487,507,467,0,513,478],
[420,478,436,488,447,377,0,428],
[431,447,503,477,467,412,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,436,396,462,482,463,445],
[442,0,443,424,471,408,535,466],
[454,447,0,426,480,475,409,466],
[494,466,464,0,534,437,455,471],
[428,419,410,356,0,433,380,409],
[408,482,415,453,457,0,459,498],
[427,355,481,435,510,431,0,439],
[445,424,424,419,481,392,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,424,427,432,432,432,448],
[444,0,436,406,410,428,396,430],
[466,454,0,444,436,449,437,465],
[463,484,446,0,442,469,443,461],
[458,480,454,448,0,454,445,462],
[458,462,441,421,436,0,427,451],
[458,494,453,447,445,463,0,458],
[442,460,425,429,428,439,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,368,433,380,445,418,482],
[407,0,428,432,401,426,466,487],
[522,462,0,457,428,458,486,485],
[457,458,433,0,420,454,445,480],
[510,489,462,470,0,431,482,533],
[445,464,432,436,459,0,475,473],
[472,424,404,445,408,415,0,481],
[408,403,405,410,357,417,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,457,447,443,451,448,429],
[431,0,409,409,378,423,417,403],
[433,481,0,480,426,455,422,455],
[443,481,410,0,422,447,448,429],
[447,512,464,468,0,447,469,419],
[439,467,435,443,443,0,408,443],
[442,473,468,442,421,482,0,432],
[461,487,435,461,471,447,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,431,442,479,449,460,438],
[443,0,455,463,470,461,450,458],
[459,435,0,411,439,430,452,446],
[448,427,479,0,430,451,452,446],
[411,420,451,460,0,444,458,423],
[441,429,460,439,446,0,454,433],
[430,440,438,438,432,436,0,456],
[452,432,444,444,467,457,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,435,421,421,416,429,413],
[467,0,470,461,461,475,449,436],
[455,420,0,447,421,457,461,439],
[469,429,443,0,425,466,447,439],
[469,429,469,465,0,450,456,425],
[474,415,433,424,440,0,403,404],
[461,441,429,443,434,487,0,470],
[477,454,451,451,465,486,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,394,436,460,434,450,440],
[417,0,408,426,425,410,416,393],
[496,482,0,488,454,464,441,454],
[454,464,402,0,440,429,463,423],
[430,465,436,450,0,445,444,417],
[456,480,426,461,445,0,443,443],
[440,474,449,427,446,447,0,443],
[450,497,436,467,473,447,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,451,467,466,462,457,465],
[457,0,446,450,422,424,428,477],
[439,444,0,458,423,473,447,458],
[423,440,432,0,424,446,458,493],
[424,468,467,466,0,435,463,502],
[428,466,417,444,455,0,435,481],
[433,462,443,432,427,455,0,480],
[425,413,432,397,388,409,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,407,438,457,460,460,430],
[462,0,443,426,461,483,446,463],
[483,447,0,450,437,454,410,452],
[452,464,440,0,469,468,417,448],
[433,429,453,421,0,457,428,450],
[430,407,436,422,433,0,424,456],
[430,444,480,473,462,466,0,458],
[460,427,438,442,440,434,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,438,432,460,446,441,421],
[440,0,423,405,441,419,416,397],
[452,467,0,452,472,443,456,434],
[458,485,438,0,454,466,452,459],
[430,449,418,436,0,446,440,432],
[444,471,447,424,444,0,463,445],
[449,474,434,438,450,427,0,435],
[469,493,456,431,458,445,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,409,471,449,431,429,442],
[398,0,419,420,419,401,434,403],
[481,471,0,388,453,434,434,445],
[419,470,502,0,397,431,476,450],
[441,471,437,493,0,427,429,472],
[459,489,456,459,463,0,452,414],
[461,456,456,414,461,438,0,404],
[448,487,445,440,418,476,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,470,449,455,434,429,464],
[458,0,443,459,444,456,454,463],
[420,447,0,440,441,441,442,455],
[441,431,450,0,432,435,437,447],
[435,446,449,458,0,437,434,463],
[456,434,449,455,453,0,459,471],
[461,436,448,453,456,431,0,460],
[426,427,435,443,427,419,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,424,428,451,449,433,445],
[441,0,440,414,443,455,442,436],
[466,450,0,447,443,429,459,414],
[462,476,443,0,447,490,446,429],
[439,447,447,443,0,452,426,442],
[441,435,461,400,438,0,415,401],
[457,448,431,444,464,475,0,441],
[445,454,476,461,448,489,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,454,475,464,469,437,459],
[439,0,471,459,463,456,446,458],
[436,419,0,455,429,443,459,446],
[415,431,435,0,440,442,424,443],
[426,427,461,450,0,434,429,451],
[421,434,447,448,456,0,449,487],
[453,444,431,466,461,441,0,470],
[431,432,444,447,439,403,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,448,445,445,448,455,450],
[425,0,420,427,414,432,429,420],
[442,470,0,448,451,440,451,460],
[445,463,442,0,451,438,440,439],
[445,476,439,439,0,436,448,445],
[442,458,450,452,454,0,454,445],
[435,461,439,450,442,436,0,448],
[440,470,430,451,445,445,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,456,440,484,407,445,437],
[420,0,477,418,461,420,423,427],
[434,413,0,428,468,405,446,424],
[450,472,462,0,475,446,457,445],
[406,429,422,415,0,370,420,371],
[483,470,485,444,520,0,498,471],
[445,467,444,433,470,392,0,427],
[453,463,466,445,519,419,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,425,460,440,469,432,459],
[462,0,449,437,443,435,431,468],
[465,441,0,459,444,457,447,482],
[430,453,431,0,425,439,418,472],
[450,447,446,465,0,429,435,468],
[421,455,433,451,461,0,427,462],
[458,459,443,472,455,463,0,462],
[431,422,408,418,422,428,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,449,436,416,476,421,495],
[457,0,506,427,405,482,417,478],
[441,384,0,379,367,413,362,378],
[454,463,511,0,414,500,448,501],
[474,485,523,476,0,458,439,508],
[414,408,477,390,432,0,420,456],
[469,473,528,442,451,470,0,468],
[395,412,512,389,382,434,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,383,442,426,462,392,450,429],
[507,0,477,455,478,468,517,434],
[448,413,0,404,493,450,511,506],
[464,435,486,0,519,497,484,456],
[428,412,397,371,0,450,442,372],
[498,422,440,393,440,0,459,430],
[440,373,379,406,448,431,0,437],
[461,456,384,434,518,460,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,456,464,453,482,472,445],
[420,0,432,435,444,487,448,429],
[434,458,0,454,456,483,447,439],
[426,455,436,0,449,480,463,420],
[437,446,434,441,0,484,408,437],
[408,403,407,410,406,0,420,412],
[418,442,443,427,482,470,0,426],
[445,461,451,470,453,478,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,440,409,439,425,383,423],
[481,0,445,439,474,445,446,431],
[450,445,0,427,443,418,405,444],
[481,451,463,0,475,446,433,465],
[451,416,447,415,0,419,401,400],
[465,445,472,444,471,0,440,445],
[507,444,485,457,489,450,0,454],
[467,459,446,425,490,445,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,442,450,446,419,453,413],
[427,0,444,462,459,446,451,444],
[448,446,0,449,464,436,425,437],
[440,428,441,0,433,432,426,436],
[444,431,426,457,0,437,423,432],
[471,444,454,458,453,0,449,444],
[437,439,465,464,467,441,0,449],
[477,446,453,454,458,446,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,340,312,435,460,363,439],
[431,0,338,458,484,410,388,412],
[550,552,0,427,528,553,384,457],
[578,432,463,0,507,435,435,459],
[455,406,362,383,0,360,433,362],
[430,480,337,455,530,0,408,408],
[527,502,506,455,457,482,0,363],
[451,478,433,431,528,482,527,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,459,448,430,519,455,453],
[415,0,414,417,429,460,423,419],
[431,476,0,454,443,477,438,451],
[442,473,436,0,448,476,435,452],
[460,461,447,442,0,490,453,437],
[371,430,413,414,400,0,412,421],
[435,467,452,455,437,478,0,458],
[437,471,439,438,453,469,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,468,456,441,438,443,463],
[448,0,452,458,449,440,439,459],
[422,438,0,434,453,448,442,445],
[434,432,456,0,463,456,452,440],
[449,441,437,427,0,455,453,449],
[452,450,442,434,435,0,457,465],
[447,451,448,438,437,433,0,454],
[427,431,445,450,441,425,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,403,451,427,403,393,386],
[487,0,463,513,470,437,471,477],
[487,427,0,470,472,444,430,421],
[439,377,420,0,429,388,418,413],
[463,420,418,461,0,460,445,437],
[487,453,446,502,430,0,439,417],
[497,419,460,472,445,451,0,446],
[504,413,469,477,453,473,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,430,451,460,429,455,413],
[479,0,449,435,503,449,468,445],
[460,441,0,437,477,461,472,430],
[439,455,453,0,480,442,477,416],
[430,387,413,410,0,404,443,398],
[461,441,429,448,486,0,461,436],
[435,422,418,413,447,429,0,403],
[477,445,460,474,492,454,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,450,432,417,428,424,453],
[496,0,448,450,433,443,445,479],
[440,442,0,429,418,426,433,469],
[458,440,461,0,440,451,467,482],
[473,457,472,450,0,445,436,476],
[462,447,464,439,445,0,454,476],
[466,445,457,423,454,436,0,491],
[437,411,421,408,414,414,399,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,406,514,431,432,442,427],
[410,0,419,475,407,431,389,474],
[484,471,0,470,436,447,451,462],
[376,415,420,0,390,402,387,383],
[459,483,454,500,0,452,436,519],
[458,459,443,488,438,0,424,416],
[448,501,439,503,454,466,0,455],
[463,416,428,507,371,474,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,448,461,464,445,469,459],
[436,0,446,468,428,439,459,432],
[442,444,0,445,433,440,436,428],
[429,422,445,0,409,435,433,430],
[426,462,457,481,0,444,467,449],
[445,451,450,455,446,0,461,442],
[421,431,454,457,423,429,0,444],
[431,458,462,460,441,448,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,461,455,450,479,469,444],
[427,0,436,457,421,467,463,469],
[429,454,0,431,436,480,454,453],
[435,433,459,0,441,488,446,458],
[440,469,454,449,0,464,458,468],
[411,423,410,402,426,0,451,428],
[421,427,436,444,432,439,0,472],
[446,421,437,432,422,462,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,439,435,409,440,438,448],
[452,0,437,452,454,438,458,432],
[451,453,0,442,436,457,443,424],
[455,438,448,0,417,431,449,451],
[481,436,454,473,0,448,487,471],
[450,452,433,459,442,0,460,467],
[452,432,447,441,403,430,0,449],
[442,458,466,439,419,423,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,412,424,435,426,462,441],
[469,0,442,441,487,449,473,458],
[478,448,0,435,452,446,448,478],
[466,449,455,0,476,433,458,445],
[455,403,438,414,0,414,432,452],
[464,441,444,457,476,0,458,414],
[428,417,442,432,458,432,0,448],
[449,432,412,445,438,476,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,427,469,473,491,488,464],
[440,0,425,438,422,445,477,427],
[463,465,0,443,457,457,449,454],
[421,452,447,0,427,442,477,423],
[417,468,433,463,0,464,472,448],
[399,445,433,448,426,0,464,421],
[402,413,441,413,418,426,0,405],
[426,463,436,467,442,469,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,474,459,462,456,452,446],
[451,0,458,469,459,444,461,445],
[416,432,0,452,440,445,420,431],
[431,421,438,0,431,426,436,441],
[428,431,450,459,0,448,450,441],
[434,446,445,464,442,0,474,445],
[438,429,470,454,440,416,0,439],
[444,445,459,449,449,445,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,453,436,450,441,453,439],
[432,0,438,426,450,429,453,441],
[437,452,0,432,437,433,461,428],
[454,464,458,0,468,455,474,436],
[440,440,453,422,0,445,468,447],
[449,461,457,435,445,0,479,444],
[437,437,429,416,422,411,0,421],
[451,449,462,454,443,446,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,427,454,456,424,431,449],
[457,0,437,445,444,450,444,441],
[463,453,0,455,458,471,432,450],
[436,445,435,0,421,441,431,435],
[434,446,432,469,0,457,442,439],
[466,440,419,449,433,0,445,446],
[459,446,458,459,448,445,0,463],
[441,449,440,455,451,444,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,512,448,459,435,474,471],
[426,0,463,429,455,444,473,451],
[378,427,0,426,410,425,452,427],
[442,461,464,0,447,463,449,464],
[431,435,480,443,0,444,494,447],
[455,446,465,427,446,0,447,463],
[416,417,438,441,396,443,0,435],
[419,439,463,426,443,427,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,490,450,460,458,442,467],
[437,0,479,437,451,455,436,454],
[400,411,0,408,422,403,410,437],
[440,453,482,0,449,451,465,442],
[430,439,468,441,0,419,437,451],
[432,435,487,439,471,0,458,479],
[448,454,480,425,453,432,0,464],
[423,436,453,448,439,411,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,426,423,441,441,448,427],
[443,0,440,455,446,443,469,455],
[464,450,0,465,470,425,451,457],
[467,435,425,0,442,423,463,438],
[449,444,420,448,0,445,462,452],
[449,447,465,467,445,0,465,436],
[442,421,439,427,428,425,0,443],
[463,435,433,452,438,454,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,446,416,514,461,461,452],
[431,0,512,456,494,472,467,471],
[444,378,0,409,466,454,456,432],
[474,434,481,0,565,505,482,462],
[376,396,424,325,0,411,369,407],
[429,418,436,385,479,0,427,397],
[429,423,434,408,521,463,0,421],
[438,419,458,428,483,493,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,394,420,413,424,418,422,432],
[496,0,470,471,458,440,461,455],
[470,420,0,450,480,474,449,466],
[477,419,440,0,431,448,456,437],
[466,432,410,459,0,457,451,458],
[472,450,416,442,433,0,437,456],
[468,429,441,434,439,453,0,460],
[458,435,424,453,432,434,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,464,417,473,451,412,468],
[427,0,405,414,410,389,456,430],
[426,485,0,416,383,384,417,428],
[473,476,474,0,425,398,435,476],
[417,480,507,465,0,433,463,484],
[439,501,506,492,457,0,475,472],
[478,434,473,455,427,415,0,448],
[422,460,462,414,406,418,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,454,468,438,449,466,458],
[435,0,463,455,451,433,452,427],
[436,427,0,427,408,429,426,429],
[422,435,463,0,409,426,443,435],
[452,439,482,481,0,477,446,447],
[441,457,461,464,413,0,448,443],
[424,438,464,447,444,442,0,435],
[432,463,461,455,443,447,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,427,440,423,428,431,442],
[453,0,434,421,425,436,415,434],
[463,456,0,444,442,455,446,445],
[450,469,446,0,457,425,464,444],
[467,465,448,433,0,455,451,447],
[462,454,435,465,435,0,454,443],
[459,475,444,426,439,436,0,446],
[448,456,445,446,443,447,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,388,402,379,397,439,422,394],
[502,0,431,451,455,463,438,435],
[488,459,0,467,470,477,459,435],
[511,439,423,0,463,460,421,425],
[493,435,420,427,0,437,428,422],
[451,427,413,430,453,0,464,412],
[468,452,431,469,462,426,0,451],
[496,455,455,465,468,478,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,464,481,473,492,437,468],
[446,0,435,475,458,496,463,446],
[426,455,0,458,426,475,466,447],
[409,415,432,0,441,469,449,437],
[417,432,464,449,0,481,442,460],
[398,394,415,421,409,0,449,413],
[453,427,424,441,448,441,0,462],
[422,444,443,453,430,477,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,442,429,431,443,459,449],
[404,0,439,455,476,445,445,431],
[448,451,0,470,484,440,439,406],
[461,435,420,0,452,421,462,425],
[459,414,406,438,0,403,425,411],
[447,445,450,469,487,0,453,411],
[431,445,451,428,465,437,0,425],
[441,459,484,465,479,479,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,460,438,449,432,439,452],
[419,0,474,437,444,431,444,435],
[430,416,0,393,424,423,435,426],
[452,453,497,0,464,438,457,466],
[441,446,466,426,0,438,462,453],
[458,459,467,452,452,0,432,431],
[451,446,455,433,428,458,0,452],
[438,455,464,424,437,459,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,409,455,476,458,430,458],
[393,0,465,460,467,475,436,464],
[481,425,0,502,484,448,479,441],
[435,430,388,0,443,468,449,492],
[414,423,406,447,0,375,388,413],
[432,415,442,422,515,0,480,443],
[460,454,411,441,502,410,0,499],
[432,426,449,398,477,447,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,426,462,459,455,453,424],
[453,0,414,441,433,461,460,447],
[464,476,0,429,443,499,475,469],
[428,449,461,0,451,463,476,457],
[431,457,447,439,0,450,475,442],
[435,429,391,427,440,0,435,437],
[437,430,415,414,415,455,0,430],
[466,443,421,433,448,453,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,424,410,446,438,437,439],
[456,0,463,450,485,438,471,449],
[466,427,0,439,454,443,439,449],
[480,440,451,0,467,440,468,486],
[444,405,436,423,0,438,430,431],
[452,452,447,450,452,0,443,453],
[453,419,451,422,460,447,0,437],
[451,441,441,404,459,437,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,453,439,434,460,463,414],
[459,0,443,452,476,478,476,484],
[437,447,0,467,462,441,478,463],
[451,438,423,0,466,435,460,468],
[456,414,428,424,0,470,448,437],
[430,412,449,455,420,0,430,424],
[427,414,412,430,442,460,0,422],
[476,406,427,422,453,466,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,443,491,443,436,483,452],
[444,0,430,473,446,440,457,473],
[447,460,0,449,424,442,488,480],
[399,417,441,0,398,397,452,434],
[447,444,466,492,0,480,485,445],
[454,450,448,493,410,0,482,443],
[407,433,402,438,405,408,0,418],
[438,417,410,456,445,447,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,424,448,441,419,427,470],
[452,0,411,470,440,438,417,454],
[466,479,0,467,446,428,429,475],
[442,420,423,0,444,463,445,455],
[449,450,444,446,0,458,417,479],
[471,452,462,427,432,0,455,469],
[463,473,461,445,473,435,0,495],
[420,436,415,435,411,421,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,324,262,386,396,394,409],
[476,0,352,376,377,416,426,468],
[566,538,0,426,532,561,493,519],
[628,514,464,0,419,448,413,476],
[504,513,358,471,0,397,502,488],
[494,474,329,442,493,0,470,497],
[496,464,397,477,388,420,0,380],
[481,422,371,414,402,393,510,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,435,434,436,429,426,416],
[448,0,419,440,425,459,425,434],
[455,471,0,452,461,471,436,446],
[456,450,438,0,447,448,435,434],
[454,465,429,443,0,456,450,448],
[461,431,419,442,434,0,427,439],
[464,465,454,455,440,463,0,448],
[474,456,444,456,442,451,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,475,426,454,436,442,455],
[427,0,457,411,437,436,432,425],
[415,433,0,407,414,387,396,410],
[464,479,483,0,444,466,440,498],
[436,453,476,446,0,454,443,457],
[454,454,503,424,436,0,449,458],
[448,458,494,450,447,441,0,478],
[435,465,480,392,433,432,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,438,444,430,441,429,412],
[462,0,451,442,447,459,445,426],
[452,439,0,479,447,456,473,450],
[446,448,411,0,433,445,442,408],
[460,443,443,457,0,458,442,456],
[449,431,434,445,432,0,441,445],
[461,445,417,448,448,449,0,422],
[478,464,440,482,434,445,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,419,390,432,449,432,463],
[467,0,443,444,466,438,462,467],
[471,447,0,460,434,406,471,468],
[500,446,430,0,413,428,437,441],
[458,424,456,477,0,427,451,478],
[441,452,484,462,463,0,462,464],
[458,428,419,453,439,428,0,431],
[427,423,422,449,412,426,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,450,455,486,458,455,429],
[418,0,441,419,415,426,421,418],
[440,449,0,416,421,405,419,431],
[435,471,474,0,471,454,462,435],
[404,475,469,419,0,426,422,423],
[432,464,485,436,464,0,445,450],
[435,469,471,428,468,445,0,428],
[461,472,459,455,467,440,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,447,463,452,451,444,445],
[445,0,462,423,438,425,431,451],
[443,428,0,428,444,436,443,448],
[427,467,462,0,458,429,453,452],
[438,452,446,432,0,434,446,460],
[439,465,454,461,456,0,458,467],
[446,459,447,437,444,432,0,437],
[445,439,442,438,430,423,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,438,443,441,433,453,449],
[410,0,433,423,419,426,421,434],
[452,457,0,430,452,432,454,466],
[447,467,460,0,438,451,458,459],
[449,471,438,452,0,440,447,461],
[457,464,458,439,450,0,465,455],
[437,469,436,432,443,425,0,456],
[441,456,424,431,429,435,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,427,423,397,438,377,408],
[446,0,389,455,413,418,415,445],
[463,501,0,460,479,465,434,426],
[467,435,430,0,419,434,438,425],
[493,477,411,471,0,463,481,450],
[452,472,425,456,427,0,414,411],
[513,475,456,452,409,476,0,467],
[482,445,464,465,440,479,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,441,463,348,527,430,403],
[432,0,446,452,486,506,461,466],
[449,444,0,459,425,493,446,393],
[427,438,431,0,437,516,472,445],
[542,404,465,453,0,491,421,414],
[363,384,397,374,399,0,364,345],
[460,429,444,418,469,526,0,398],
[487,424,497,445,476,545,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,432,404,413,425,417,433],
[454,0,416,412,402,414,399,418],
[458,474,0,451,455,412,462,477],
[486,478,439,0,456,429,450,486],
[477,488,435,434,0,454,444,487],
[465,476,478,461,436,0,438,479],
[473,491,428,440,446,452,0,510],
[457,472,413,404,403,411,380,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,398,441,445,437,454,429],
[429,0,441,432,442,426,427,408],
[492,449,0,465,455,473,454,438],
[449,458,425,0,447,462,434,432],
[445,448,435,443,0,418,409,431],
[453,464,417,428,472,0,454,449],
[436,463,436,456,481,436,0,440],
[461,482,452,458,459,441,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,443,490,471,455,458,501],
[398,0,393,433,431,402,442,434],
[447,497,0,456,473,449,414,412],
[400,457,434,0,485,437,441,442],
[419,459,417,405,0,420,411,444],
[435,488,441,453,470,0,469,483],
[432,448,476,449,479,421,0,433],
[389,456,478,448,446,407,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,394,423,470,458,450,463],
[483,0,446,515,492,502,501,427],
[496,444,0,481,484,507,468,468],
[467,375,409,0,423,419,479,381],
[420,398,406,467,0,487,458,443],
[432,388,383,471,403,0,433,409],
[440,389,422,411,432,457,0,373],
[427,463,422,509,447,481,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,443,455,430,444,431,433],
[422,0,412,433,398,399,419,405],
[447,478,0,462,422,434,426,429],
[435,457,428,0,404,427,405,403],
[460,492,468,486,0,444,438,457],
[446,491,456,463,446,0,418,434],
[459,471,464,485,452,472,0,442],
[457,485,461,487,433,456,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,483,453,458,516,430,445],
[413,0,459,465,416,475,451,438],
[407,431,0,429,397,460,395,406],
[437,425,461,0,395,479,425,472],
[432,474,493,495,0,515,474,463],
[374,415,430,411,375,0,366,405],
[460,439,495,465,416,524,0,488],
[445,452,484,418,427,485,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,448,416,409,395,442,444],
[474,0,472,424,407,447,459,452],
[442,418,0,431,458,447,459,449],
[474,466,459,0,442,473,440,482],
[481,483,432,448,0,461,444,461],
[495,443,443,417,429,0,438,463],
[448,431,431,450,446,452,0,464],
[446,438,441,408,429,427,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,472,468,458,430,455,468],
[423,0,461,443,410,427,436,437],
[418,429,0,452,431,414,441,439],
[422,447,438,0,425,433,432,430],
[432,480,459,465,0,450,481,454],
[460,463,476,457,440,0,481,472],
[435,454,449,458,409,409,0,433],
[422,453,451,460,436,418,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,417,441,452,466,454,456],
[439,0,414,410,438,469,421,429],
[473,476,0,453,451,490,451,443],
[449,480,437,0,464,478,435,464],
[438,452,439,426,0,477,431,438],
[424,421,400,412,413,0,410,432],
[436,469,439,455,459,480,0,469],
[434,461,447,426,452,458,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,452,448,383,491,468,462],
[411,0,415,413,410,377,455,407],
[438,475,0,391,403,429,498,432],
[442,477,499,0,457,435,483,483],
[507,480,487,433,0,458,499,451],
[399,513,461,455,432,0,454,463],
[422,435,392,407,391,436,0,447],
[428,483,458,407,439,427,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,441,484,449,448,417,419],
[466,0,444,500,446,444,445,464],
[449,446,0,439,489,468,466,453],
[406,390,451,0,453,435,445,454],
[441,444,401,437,0,397,434,423],
[442,446,422,455,493,0,454,461],
[473,445,424,445,456,436,0,456],
[471,426,437,436,467,429,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,443,455,425,421,455,510],
[458,0,444,451,433,481,433,492],
[447,446,0,468,442,422,432,472],
[435,439,422,0,426,427,447,480],
[465,457,448,464,0,470,444,477],
[469,409,468,463,420,0,463,504],
[435,457,458,443,446,427,0,459],
[380,398,418,410,413,386,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,410,443,426,437,426,444],
[458,0,435,410,430,436,437,443],
[480,455,0,430,435,475,437,475],
[447,480,460,0,453,471,445,481],
[464,460,455,437,0,452,453,479],
[453,454,415,419,438,0,429,458],
[464,453,453,445,437,461,0,473],
[446,447,415,409,411,432,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,446,424,427,426,431,441],
[453,0,452,441,433,440,473,464],
[444,438,0,439,429,449,456,454],
[466,449,451,0,455,444,473,454],
[463,457,461,435,0,452,458,466],
[464,450,441,446,438,0,463,448],
[459,417,434,417,432,427,0,411],
[449,426,436,436,424,442,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,434,422,459,456,439,458],
[467,0,430,456,445,439,464,475],
[456,460,0,469,444,467,469,467],
[468,434,421,0,438,428,464,441],
[431,445,446,452,0,442,444,455],
[434,451,423,462,448,0,458,443],
[451,426,421,426,446,432,0,440],
[432,415,423,449,435,447,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,440,469,429,448,451,447],
[447,0,424,450,420,435,441,453],
[450,466,0,450,407,418,462,449],
[421,440,440,0,430,447,429,446],
[461,470,483,460,0,440,475,487],
[442,455,472,443,450,0,442,468],
[439,449,428,461,415,448,0,451],
[443,437,441,444,403,422,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,358,411,435,430,370,376,411],
[532,0,419,415,436,443,430,434],
[479,471,0,460,449,456,461,411],
[455,475,430,0,458,449,413,484],
[460,454,441,432,0,389,431,427],
[520,447,434,441,501,0,413,457],
[514,460,429,477,459,477,0,501],
[479,456,479,406,463,433,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,432,443,462,431,469,455],
[428,0,433,447,497,471,471,458],
[458,457,0,457,480,487,457,437],
[447,443,433,0,471,469,474,437],
[428,393,410,419,0,435,434,433],
[459,419,403,421,455,0,463,413],
[421,419,433,416,456,427,0,451],
[435,432,453,453,457,477,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,447,450,508,460,420,459],
[447,0,440,472,479,442,448,437],
[443,450,0,442,514,462,458,471],
[440,418,448,0,474,437,424,455],
[382,411,376,416,0,398,414,421],
[430,448,428,453,492,0,412,455],
[470,442,432,466,476,478,0,459],
[431,453,419,435,469,435,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,433,459,440,433,439,448],
[452,0,461,468,424,448,441,470],
[457,429,0,482,429,437,424,459],
[431,422,408,0,404,417,405,445],
[450,466,461,486,0,444,460,489],
[457,442,453,473,446,0,419,503],
[451,449,466,485,430,471,0,456],
[442,420,431,445,401,387,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,426,415,437,419,442,453],
[443,0,428,426,419,425,446,463],
[464,462,0,424,452,431,473,451],
[475,464,466,0,465,442,480,467],
[453,471,438,425,0,464,441,441],
[471,465,459,448,426,0,469,461],
[448,444,417,410,449,421,0,443],
[437,427,439,423,449,429,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,457,452,437,453,457,458],
[444,0,428,443,451,447,449,461],
[433,462,0,438,437,446,427,427],
[438,447,452,0,434,450,438,455],
[453,439,453,456,0,475,442,452],
[437,443,444,440,415,0,429,469],
[433,441,463,452,448,461,0,466],
[432,429,463,435,438,421,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,442,481,455,444,457,438],
[446,0,452,499,449,442,449,453],
[448,438,0,468,449,447,451,454],
[409,391,422,0,420,404,436,410],
[435,441,441,470,0,435,424,437],
[446,448,443,486,455,0,461,433],
[433,441,439,454,466,429,0,424],
[452,437,436,480,453,457,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,409,463,479,412,439,420],
[448,0,410,419,436,396,391,431],
[481,480,0,444,498,434,435,417],
[427,471,446,0,457,441,461,418],
[411,454,392,433,0,407,399,358],
[478,494,456,449,483,0,428,448],
[451,499,455,429,491,462,0,383],
[470,459,473,472,532,442,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,477,431,439,471,444,418],
[451,0,455,429,416,428,435,435],
[413,435,0,417,440,402,424,435],
[459,461,473,0,490,436,465,437],
[451,474,450,400,0,421,421,457],
[419,462,488,454,469,0,449,428],
[446,455,466,425,469,441,0,443],
[472,455,455,453,433,462,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,433,444,434,445,437,415],
[465,0,460,455,454,449,443,436],
[457,430,0,460,447,441,446,444],
[446,435,430,0,414,431,437,445],
[456,436,443,476,0,433,437,449],
[445,441,449,459,457,0,438,451],
[453,447,444,453,453,452,0,430],
[475,454,446,445,441,439,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,446,428,442,444,438,456],
[475,0,442,426,426,439,446,452],
[444,448,0,417,458,421,459,450],
[462,464,473,0,463,450,461,440],
[448,464,432,427,0,427,464,428],
[446,451,469,440,463,0,447,454],
[452,444,431,429,426,443,0,453],
[434,438,440,450,462,436,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,425,420,445,434,398,427],
[452,0,433,456,455,473,391,461],
[465,457,0,452,456,451,418,456],
[470,434,438,0,425,438,445,449],
[445,435,434,465,0,419,428,465],
[456,417,439,452,471,0,455,450],
[492,499,472,445,462,435,0,460],
[463,429,434,441,425,440,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,436,435,403,429,415,441],
[456,0,450,421,437,427,419,446],
[454,440,0,450,426,452,444,483],
[455,469,440,0,447,477,421,469],
[487,453,464,443,0,471,447,473],
[461,463,438,413,419,0,421,460],
[475,471,446,469,443,469,0,469],
[449,444,407,421,417,430,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,482,452,451,431,438,446],
[472,0,475,462,435,426,412,435],
[408,415,0,423,424,393,404,433],
[438,428,467,0,473,437,447,442],
[439,455,466,417,0,430,414,454],
[459,464,497,453,460,0,445,465],
[452,478,486,443,476,445,0,464],
[444,455,457,448,436,425,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,415,420,432,444,442,447],
[460,0,471,458,433,465,492,475],
[475,419,0,451,424,474,478,450],
[470,432,439,0,446,473,463,432],
[458,457,466,444,0,470,458,447],
[446,425,416,417,420,0,440,437],
[448,398,412,427,432,450,0,457],
[443,415,440,458,443,453,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,345,426,391,464,425,463],
[424,0,383,427,467,463,426,619],
[545,507,0,429,431,464,431,506],
[464,463,461,0,429,503,465,425],
[499,423,459,461,0,502,386,460],
[426,427,426,387,388,0,388,427],
[465,464,459,425,504,502,0,538],
[427,271,384,465,430,463,352,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,504,388,460,474,474,537],
[411,0,482,421,467,503,469,522],
[386,408,0,445,446,445,372,477],
[502,469,445,0,509,474,400,528],
[430,423,444,381,0,460,398,440],
[416,387,445,416,430,0,383,479],
[416,421,518,490,492,507,0,500],
[353,368,413,362,450,411,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,388,448,456,444,475,464],
[469,0,447,443,477,443,488,454],
[502,443,0,438,498,502,509,465],
[442,447,452,0,495,480,484,469],
[434,413,392,395,0,469,463,406],
[446,447,388,410,421,0,456,437],
[415,402,381,406,427,434,0,412],
[426,436,425,421,484,453,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,462,449,460,435,465,450],
[436,0,449,439,458,427,430,461],
[428,441,0,438,451,429,437,440],
[441,451,452,0,455,448,463,464],
[430,432,439,435,0,438,446,442],
[455,463,461,442,452,0,448,458],
[425,460,453,427,444,442,0,451],
[440,429,450,426,448,432,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,446,435,445,450,415,469],
[448,0,444,451,447,449,446,456],
[444,446,0,453,441,443,427,449],
[455,439,437,0,440,449,438,464],
[445,443,449,450,0,471,440,466],
[440,441,447,441,419,0,441,448],
[475,444,463,452,450,449,0,483],
[421,434,441,426,424,442,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,442,461,454,464,456,471],
[427,0,465,458,416,478,489,455],
[448,425,0,441,445,465,463,467],
[429,432,449,0,450,488,464,453],
[436,474,445,440,0,472,512,470],
[426,412,425,402,418,0,451,435],
[434,401,427,426,378,439,0,438],
[419,435,423,437,420,455,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,435,443,440,439,478,444],
[454,0,414,439,450,451,459,438],
[455,476,0,449,465,452,463,434],
[447,451,441,0,472,466,475,456],
[450,440,425,418,0,439,481,426],
[451,439,438,424,451,0,491,455],
[412,431,427,415,409,399,0,399],
[446,452,456,434,464,435,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,452,415,444,444,440,448],
[448,0,443,422,399,423,417,460],
[438,447,0,408,477,449,440,460],
[475,468,482,0,465,455,424,501],
[446,491,413,425,0,434,423,438],
[446,467,441,435,456,0,462,476],
[450,473,450,466,467,428,0,480],
[442,430,430,389,452,414,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,428,436,434,406,414,403],
[497,0,466,456,487,442,448,448],
[462,424,0,431,465,444,420,448],
[454,434,459,0,471,454,448,426],
[456,403,425,419,0,399,410,401],
[484,448,446,436,491,0,450,424],
[476,442,470,442,480,440,0,448],
[487,442,442,464,489,466,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,405,457,436,465,427,446],
[415,0,439,481,454,405,418,394],
[485,451,0,482,453,471,442,453],
[433,409,408,0,433,421,411,435],
[454,436,437,457,0,457,438,443],
[425,485,419,469,433,0,451,449],
[463,472,448,479,452,439,0,474],
[444,496,437,455,447,441,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,405,459,419,433,455,401],
[463,0,410,450,457,453,464,434],
[485,480,0,500,433,462,493,406],
[431,440,390,0,406,428,428,394],
[471,433,457,484,0,528,498,451],
[457,437,428,462,362,0,464,414],
[435,426,397,462,392,426,0,391],
[489,456,484,496,439,476,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,445,424,476,464,418,459],
[447,0,431,449,440,458,400,450],
[445,459,0,448,453,468,430,451],
[466,441,442,0,474,469,415,437],
[414,450,437,416,0,468,402,445],
[426,432,422,421,422,0,408,452],
[472,490,460,475,488,482,0,445],
[431,440,439,453,445,438,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,451,440,442,437,443,460],
[454,0,460,420,431,427,423,455],
[439,430,0,448,429,444,446,429],
[450,470,442,0,458,465,455,447],
[448,459,461,432,0,464,433,470],
[453,463,446,425,426,0,443,463],
[447,467,444,435,457,447,0,441],
[430,435,461,443,420,427,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,456,457,475,438,447,443],
[447,0,466,471,465,450,449,443],
[434,424,0,450,442,456,447,453],
[433,419,440,0,423,447,428,434],
[415,425,448,467,0,466,428,454],
[452,440,434,443,424,0,438,439],
[443,441,443,462,462,452,0,438],
[447,447,437,456,436,451,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,444,446,443,428,436,448],
[469,0,436,452,441,428,445,474],
[446,454,0,448,455,443,456,478],
[444,438,442,0,442,420,447,449],
[447,449,435,448,0,421,468,470],
[462,462,447,470,469,0,445,476],
[454,445,434,443,422,445,0,465],
[442,416,412,441,420,414,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,480,506,423,464,445,482],
[409,0,456,432,449,427,433,430],
[410,434,0,413,427,431,438,420],
[384,458,477,0,444,401,418,457],
[467,441,463,446,0,433,431,457],
[426,463,459,489,457,0,424,436],
[445,457,452,472,459,466,0,472],
[408,460,470,433,433,454,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,466,454,480,437,486,488],
[437,0,462,456,455,444,424,471],
[424,428,0,434,411,463,451,405],
[436,434,456,0,471,443,461,460],
[410,435,479,419,0,442,425,418],
[453,446,427,447,448,0,415,439],
[404,466,439,429,465,475,0,447],
[402,419,485,430,472,451,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,459,494,457,458,442,409],
[457,0,469,463,469,468,438,440],
[431,421,0,434,428,430,415,428],
[396,427,456,0,414,456,418,414],
[433,421,462,476,0,466,440,426],
[432,422,460,434,424,0,445,445],
[448,452,475,472,450,445,0,435],
[481,450,462,476,464,445,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,456,467,460,429,447],
[440,0,468,421,429,524,493,445],
[445,422,0,401,453,471,464,421],
[434,469,489,0,469,472,494,468],
[423,461,437,421,0,448,460,452],
[430,366,419,418,442,0,415,436],
[461,397,426,396,430,475,0,433],
[443,445,469,422,438,454,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,511,487,453,562,489,544],
[454,0,489,434,452,469,468,423],
[379,401,0,384,382,436,246,460],
[403,456,506,0,457,406,370,473],
[437,438,508,433,0,509,404,546],
[328,421,454,484,381,0,332,451],
[401,422,644,520,486,558,0,561],
[346,467,430,417,344,439,329,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,504,471,431,390,449,503,406],
[386,0,406,430,410,437,505,460],
[419,484,0,446,402,432,473,439],
[459,460,444,0,459,462,534,453],
[500,480,488,431,0,465,521,459],
[441,453,458,428,425,0,453,456],
[387,385,417,356,369,437,0,408],
[484,430,451,437,431,434,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,437,443,462,453,460,437],
[444,0,469,462,470,446,455,455],
[453,421,0,436,456,448,441,432],
[447,428,454,0,453,435,438,449],
[428,420,434,437,0,428,447,434],
[437,444,442,455,462,0,441,465],
[430,435,449,452,443,449,0,424],
[453,435,458,441,456,425,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,428,437,432,402,446,453],
[435,0,424,432,446,434,450,451],
[462,466,0,480,507,451,441,455],
[453,458,410,0,438,427,436,455],
[458,444,383,452,0,404,444,444],
[488,456,439,463,486,0,480,472],
[444,440,449,454,446,410,0,454],
[437,439,435,435,446,418,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,431,467,470,471,446,455],
[427,0,438,455,448,439,431,434],
[459,452,0,455,466,453,431,438],
[423,435,435,0,442,442,422,430],
[420,442,424,448,0,431,438,447],
[419,451,437,448,459,0,433,441],
[444,459,459,468,452,457,0,424],
[435,456,452,460,443,449,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,453,455,461,439,432,406],
[443,0,422,464,502,443,421,441],
[437,468,0,466,506,461,443,457],
[435,426,424,0,447,444,449,424],
[429,388,384,443,0,425,422,421],
[451,447,429,446,465,0,403,446],
[458,469,447,441,468,487,0,428],
[484,449,433,466,469,444,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,363,419,430,414,369,386],
[472,0,422,414,370,408,417,388],
[527,468,0,464,430,433,403,483],
[471,476,426,0,451,413,410,417],
[460,520,460,439,0,462,428,457],
[476,482,457,477,428,0,445,479],
[521,473,487,480,462,445,0,453],
[504,502,407,473,433,411,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,456,450,450,466,445,421],
[427,0,457,434,450,444,450,423],
[434,433,0,429,455,452,449,432],
[440,456,461,0,462,476,477,453],
[440,440,435,428,0,457,463,431],
[424,446,438,414,433,0,446,406],
[445,440,441,413,427,444,0,425],
[469,467,458,437,459,484,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,376,436,384,476,399,456],
[406,0,337,361,353,411,358,401],
[514,553,0,493,482,513,434,487],
[454,529,397,0,469,461,452,507],
[506,537,408,421,0,457,419,479],
[414,479,377,429,433,0,396,445],
[491,532,456,438,471,494,0,495],
[434,489,403,383,411,445,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,459,501,432,442,459,449],
[467,0,476,479,457,449,462,438],
[431,414,0,471,411,446,445,420],
[389,411,419,0,403,415,458,398],
[458,433,479,487,0,449,494,441],
[448,441,444,475,441,0,456,443],
[431,428,445,432,396,434,0,405],
[441,452,470,492,449,447,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,286,407,258,491,408,463,549],
[604,0,523,433,491,576,551,633],
[483,367,0,484,540,512,430,542],
[632,457,406,0,489,488,519,549],
[399,399,350,401,0,460,404,517],
[482,314,378,402,430,0,461,432],
[427,339,460,371,486,429,0,515],
[341,257,348,341,373,458,375,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,418,457,367,372,483,391],
[472,0,371,361,511,385,495,471],
[472,519,0,387,580,492,496,450],
[433,529,503,0,493,365,477,518],
[523,379,310,397,0,301,459,479],
[518,505,398,525,589,0,548,458],
[407,395,394,413,431,342,0,370],
[499,419,440,372,411,432,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,457,449,431,450,445,444],
[435,0,436,430,421,439,463,434],
[433,454,0,437,415,422,441,435],
[441,460,453,0,428,434,459,442],
[459,469,475,462,0,472,465,440],
[440,451,468,456,418,0,468,451],
[445,427,449,431,425,422,0,407],
[446,456,455,448,450,439,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,428,427,370,428,437,490],
[480,0,457,460,409,474,436,511],
[462,433,0,445,452,429,480,495],
[463,430,445,0,417,429,484,534],
[520,481,438,473,0,460,481,504],
[462,416,461,461,430,0,455,502],
[453,454,410,406,409,435,0,508],
[400,379,395,356,386,388,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,458,429,442,463,433,426],
[452,0,458,460,460,470,458,436],
[432,432,0,416,453,453,435,426],
[461,430,474,0,451,471,438,453],
[448,430,437,439,0,435,417,440],
[427,420,437,419,455,0,446,430],
[457,432,455,452,473,444,0,452],
[464,454,464,437,450,460,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,462,464,459,463,441,487],
[428,0,441,438,455,443,446,459],
[428,449,0,432,449,450,441,457],
[426,452,458,0,431,459,449,472],
[431,435,441,459,0,442,437,443],
[427,447,440,431,448,0,443,470],
[449,444,449,441,453,447,0,458],
[403,431,433,418,447,420,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,462,390,499,460,433,362],
[473,0,481,465,516,480,437,465],
[428,409,0,424,447,454,407,435],
[500,425,466,0,489,520,471,509],
[391,374,443,401,0,459,378,415],
[430,410,436,370,431,0,409,461],
[457,453,483,419,512,481,0,480],
[528,425,455,381,475,429,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,457,446,431,433,465,431],
[424,0,460,439,442,415,493,464],
[433,430,0,452,433,427,494,448],
[444,451,438,0,437,445,486,443],
[459,448,457,453,0,452,481,430],
[457,475,463,445,438,0,462,471],
[425,397,396,404,409,428,0,393],
[459,426,442,447,460,419,497,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,447,445,458,458,389,446],
[475,0,472,447,433,463,413,435],
[443,418,0,431,424,419,404,434],
[445,443,459,0,477,461,446,460],
[432,457,466,413,0,425,438,451],
[432,427,471,429,465,0,422,451],
[501,477,486,444,452,468,0,464],
[444,455,456,430,439,439,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,464,460,466,455,444,462],
[439,0,443,444,442,464,444,449],
[426,447,0,447,475,430,444,457],
[430,446,443,0,428,431,437,434],
[424,448,415,462,0,428,426,461],
[435,426,460,459,462,0,452,457],
[446,446,446,453,464,438,0,464],
[428,441,433,456,429,433,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,435,388,456,417,416,425],
[482,0,468,430,452,453,449,454],
[455,422,0,427,479,437,424,403],
[502,460,463,0,468,446,462,425],
[434,438,411,422,0,440,434,381],
[473,437,453,444,450,0,432,391],
[474,441,466,428,456,458,0,411],
[465,436,487,465,509,499,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,406,415,436,446,400,476],
[463,0,437,422,433,445,486,431],
[484,453,0,446,475,468,427,462],
[475,468,444,0,449,498,446,468],
[454,457,415,441,0,442,416,408],
[444,445,422,392,448,0,403,401],
[490,404,463,444,474,487,0,455],
[414,459,428,422,482,489,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,421,436,433,438,455,438],
[436,0,423,433,459,393,425,396],
[469,467,0,456,468,430,464,457],
[454,457,434,0,474,470,443,447],
[457,431,422,416,0,417,455,398],
[452,497,460,420,473,0,479,459],
[435,465,426,447,435,411,0,436],
[452,494,433,443,492,431,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,423,450,459,433,466,456],
[427,0,406,479,438,420,456,418],
[467,484,0,470,477,454,480,439],
[440,411,420,0,443,426,438,421],
[431,452,413,447,0,423,453,411],
[457,470,436,464,467,0,449,440],
[424,434,410,452,437,441,0,426],
[434,472,451,469,479,450,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,568,488,566,487,486,323],
[403,0,566,402,404,402,404,324],
[322,324,0,405,402,322,321,323],
[402,488,485,0,566,404,486,484],
[324,486,488,324,0,324,567,403],
[403,488,568,486,566,0,489,402],
[404,486,569,404,323,401,0,322],
[567,566,567,406,487,488,568,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,455,461,461,483,439,459],
[469,0,432,420,436,481,441,428],
[435,458,0,424,484,462,433,462],
[429,470,466,0,473,462,472,475],
[429,454,406,417,0,452,471,445],
[407,409,428,428,438,0,449,418],
[451,449,457,418,419,441,0,420],
[431,462,428,415,445,472,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,453,459,434,420,431,428],
[449,0,438,447,432,469,464,442],
[437,452,0,434,423,415,466,444],
[431,443,456,0,426,406,453,403],
[456,458,467,464,0,433,485,443],
[470,421,475,484,457,0,480,478],
[459,426,424,437,405,410,0,405],
[462,448,446,487,447,412,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,420,436,383,387,387,438],
[486,0,477,441,442,421,457,461],
[470,413,0,422,418,425,431,430],
[454,449,468,0,431,412,440,466],
[507,448,472,459,0,482,437,480],
[503,469,465,478,408,0,452,491],
[503,433,459,450,453,438,0,438],
[452,429,460,424,410,399,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,429,423,484,409,412,441],
[462,0,440,432,443,475,436,482],
[461,450,0,456,462,439,454,466],
[467,458,434,0,473,451,443,462],
[406,447,428,417,0,488,427,427],
[481,415,451,439,402,0,480,433],
[478,454,436,447,463,410,0,455],
[449,408,424,428,463,457,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,374,388,434,416,420,392],
[476,0,441,454,455,459,455,459],
[516,449,0,435,464,470,484,476],
[502,436,455,0,495,457,472,457],
[456,435,426,395,0,457,440,460],
[474,431,420,433,433,0,444,444],
[470,435,406,418,450,446,0,447],
[498,431,414,433,430,446,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,440,456,428,446,478,436],
[440,0,452,476,449,451,482,456],
[450,438,0,455,444,447,457,453],
[434,414,435,0,404,446,439,426],
[462,441,446,486,0,462,474,459],
[444,439,443,444,428,0,458,429],
[412,408,433,451,416,432,0,414],
[454,434,437,464,431,461,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,493,448,436,475,442,448,441],
[397,0,446,430,447,436,414,423],
[442,444,0,426,426,427,425,467],
[454,460,464,0,464,431,452,447],
[415,443,464,426,0,439,428,433],
[448,454,463,459,451,0,430,431],
[442,476,465,438,462,460,0,449],
[449,467,423,443,457,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,481,362,454,406,454,459],
[458,0,434,365,287,385,312,416],
[409,456,0,484,361,435,482,434],
[528,525,406,0,286,479,359,529],
[436,603,529,604,0,432,575,557],
[484,505,455,411,458,0,456,458],
[436,578,408,531,315,434,0,507],
[431,474,456,361,333,432,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,407,438,417,445,475,434],
[455,0,414,444,449,454,463,432],
[483,476,0,462,438,416,466,451],
[452,446,428,0,466,457,478,442],
[473,441,452,424,0,459,473,452],
[445,436,474,433,431,0,453,447],
[415,427,424,412,417,437,0,419],
[456,458,439,448,438,443,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,429,405,418,442,404,410],
[450,0,389,412,399,445,423,396],
[461,501,0,433,462,472,451,458],
[485,478,457,0,443,471,428,444],
[472,491,428,447,0,465,442,461],
[448,445,418,419,425,0,435,424],
[486,467,439,462,448,455,0,464],
[480,494,432,446,429,466,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,489,473,443,427,451,440],
[454,0,491,448,441,447,469,473],
[401,399,0,426,410,410,457,410],
[417,442,464,0,384,434,458,439],
[447,449,480,506,0,445,456,485],
[463,443,480,456,445,0,472,434],
[439,421,433,432,434,418,0,417],
[450,417,480,451,405,456,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,408,464,471,435,427,395],
[444,0,437,433,432,412,367,404],
[482,453,0,515,504,457,406,432],
[426,457,375,0,451,431,399,411],
[419,458,386,439,0,427,380,440],
[455,478,433,459,463,0,435,464],
[463,523,484,491,510,455,0,438],
[495,486,458,479,450,426,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,445,432,424,463,474,467],
[475,0,481,431,458,477,473,456],
[445,409,0,459,447,451,460,436],
[458,459,431,0,451,452,467,453],
[466,432,443,439,0,436,460,462],
[427,413,439,438,454,0,424,446],
[416,417,430,423,430,466,0,442],
[423,434,454,437,428,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,439,446,442,435,448,462],
[453,0,431,433,436,429,446,453],
[451,459,0,431,450,434,440,457],
[444,457,459,0,451,441,447,461],
[448,454,440,439,0,448,437,453],
[455,461,456,449,442,0,451,474],
[442,444,450,443,453,439,0,453],
[428,437,433,429,437,416,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,442,443,451,493,476,429],
[428,0,452,465,439,505,482,471],
[448,438,0,470,476,469,422,460],
[447,425,420,0,436,452,465,440],
[439,451,414,454,0,523,471,458],
[397,385,421,438,367,0,464,452],
[414,408,468,425,419,426,0,435],
[461,419,430,450,432,438,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,452,457,453,455,428,461],
[437,0,454,450,443,453,427,439],
[438,436,0,441,421,445,428,438],
[433,440,449,0,444,422,423,418],
[437,447,469,446,0,435,445,443],
[435,437,445,468,455,0,440,432],
[462,463,462,467,445,450,0,455],
[429,451,452,472,447,458,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,420,421,423,437,452,455],
[452,0,447,444,454,460,454,484],
[470,443,0,451,434,476,457,464],
[469,446,439,0,449,454,464,465],
[467,436,456,441,0,459,449,481],
[453,430,414,436,431,0,436,450],
[438,436,433,426,441,454,0,462],
[435,406,426,425,409,440,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,458,447,456,453,450,444],
[419,0,441,415,433,445,431,445],
[432,449,0,436,443,458,421,439],
[443,475,454,0,448,447,415,447],
[434,457,447,442,0,427,412,442],
[437,445,432,443,463,0,417,415],
[440,459,469,475,478,473,0,477],
[446,445,451,443,448,475,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,446,463,429,463,465,430],
[419,0,417,446,426,421,451,400],
[444,473,0,467,446,449,438,425],
[427,444,423,0,424,418,438,383],
[461,464,444,466,0,462,493,457],
[427,469,441,472,428,0,435,401],
[425,439,452,452,397,455,0,407],
[460,490,465,507,433,489,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,487,448,477,459,486,488],
[449,0,467,474,440,450,469,474],
[403,423,0,456,441,443,433,463],
[442,416,434,0,430,433,439,451],
[413,450,449,460,0,451,444,444],
[431,440,447,457,439,0,469,434],
[404,421,457,451,446,421,0,479],
[402,416,427,439,446,456,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,449,420,459,436,376,470],
[440,0,403,429,445,445,450,441],
[441,487,0,428,553,484,472,426],
[470,461,462,0,441,533,472,487],
[431,445,337,449,0,474,531,429],
[454,445,406,357,416,0,428,480],
[514,440,418,418,359,462,0,444],
[420,449,464,403,461,410,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,368,363,419,431,452,422,414],
[522,0,463,448,419,448,442,478],
[527,427,0,527,424,463,455,454],
[471,442,363,0,425,435,441,395],
[459,471,466,465,0,429,483,472],
[438,442,427,455,461,0,401,427],
[468,448,435,449,407,489,0,436],
[476,412,436,495,418,463,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,452,469,456,419,498,411],
[456,0,408,496,449,473,432,500],
[438,482,0,416,487,416,399,399],
[421,394,474,0,478,427,411,448],
[434,441,403,412,0,422,478,439],
[471,417,474,463,468,0,500,437],
[392,458,491,479,412,390,0,394],
[479,390,491,442,451,453,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,413,440,453,451,438,454],
[430,0,402,420,435,432,440,412],
[477,488,0,452,454,463,479,444],
[450,470,438,0,437,475,456,426],
[437,455,436,453,0,433,461,423],
[439,458,427,415,457,0,466,422],
[452,450,411,434,429,424,0,405],
[436,478,446,464,467,468,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,449,445,430,455,475,452],
[436,0,455,465,447,457,448,446],
[441,435,0,447,430,479,451,451],
[445,425,443,0,451,452,438,449],
[460,443,460,439,0,455,431,469],
[435,433,411,438,435,0,426,450],
[415,442,439,452,459,464,0,446],
[438,444,439,441,421,440,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,447,476,437,442,448,453],
[410,0,411,434,404,421,419,422],
[443,479,0,473,461,448,427,464],
[414,456,417,0,419,438,408,451],
[453,486,429,471,0,455,430,470],
[448,469,442,452,435,0,441,431],
[442,471,463,482,460,449,0,472],
[437,468,426,439,420,459,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,479,488,441,467,462,427],
[402,0,435,447,434,416,456,408],
[411,455,0,484,416,435,461,449],
[402,443,406,0,406,424,448,399],
[449,456,474,484,0,461,460,430],
[423,474,455,466,429,0,470,416],
[428,434,429,442,430,420,0,391],
[463,482,441,491,460,474,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,450,471,444,434,480,472],
[437,0,449,468,450,452,483,469],
[440,441,0,456,451,430,478,443],
[419,422,434,0,469,436,456,463],
[446,440,439,421,0,438,447,453],
[456,438,460,454,452,0,498,477],
[410,407,412,434,443,392,0,419],
[418,421,447,427,437,413,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,448,429,460,459,430,456],
[420,0,414,421,433,443,423,443],
[442,476,0,457,467,477,478,465],
[461,469,433,0,457,436,451,438],
[430,457,423,433,0,460,437,430],
[431,447,413,454,430,0,425,443],
[460,467,412,439,453,465,0,457],
[434,447,425,452,460,447,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,457,457,462,459,453,434],
[432,0,429,449,434,448,436,439],
[433,461,0,457,432,440,439,436],
[433,441,433,0,430,439,419,423],
[428,456,458,460,0,441,427,442],
[431,442,450,451,449,0,431,435],
[437,454,451,471,463,459,0,451],
[456,451,454,467,448,455,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,451,464,443,464,462,458],
[414,0,449,437,430,421,419,435],
[439,441,0,432,447,434,439,461],
[426,453,458,0,434,437,439,460],
[447,460,443,456,0,437,461,442],
[426,469,456,453,453,0,451,460],
[428,471,451,451,429,439,0,444],
[432,455,429,430,448,430,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,423,459,482,465,434,437],
[431,0,422,437,443,430,426,448],
[467,468,0,439,466,460,447,465],
[431,453,451,0,476,456,452,458],
[408,447,424,414,0,434,425,422],
[425,460,430,434,456,0,430,436],
[456,464,443,438,465,460,0,458],
[453,442,425,432,468,454,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,452,454,424,426,460,446],
[446,0,437,433,423,428,460,420],
[438,453,0,461,412,445,468,458],
[436,457,429,0,448,455,447,438],
[466,467,478,442,0,433,484,474],
[464,462,445,435,457,0,471,451],
[430,430,422,443,406,419,0,439],
[444,470,432,452,416,439,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,505,437,481,500,468,462],
[408,0,481,444,450,490,435,432],
[385,409,0,407,398,474,399,385],
[453,446,483,0,471,465,444,426],
[409,440,492,419,0,498,416,434],
[390,400,416,425,392,0,371,428],
[422,455,491,446,474,519,0,478],
[428,458,505,464,456,462,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,439,438,420,463,417,395],
[459,0,479,440,460,459,451,454],
[451,411,0,412,434,443,424,393],
[452,450,478,0,432,467,415,429],
[470,430,456,458,0,471,413,417],
[427,431,447,423,419,0,404,417],
[473,439,466,475,477,486,0,437],
[495,436,497,461,473,473,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,482,448,436,456,459,445],
[477,0,490,443,436,465,459,441],
[408,400,0,421,388,424,419,376],
[442,447,469,0,430,414,429,435],
[454,454,502,460,0,461,451,433],
[434,425,466,476,429,0,436,431],
[431,431,471,461,439,454,0,441],
[445,449,514,455,457,459,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,448,433,417,427,465,470],
[471,0,445,441,436,482,456,457],
[442,445,0,457,455,443,458,452],
[457,449,433,0,406,443,452,424],
[473,454,435,484,0,481,490,449],
[463,408,447,447,409,0,437,455],
[425,434,432,438,400,453,0,452],
[420,433,438,466,441,435,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,466,434,420,424,427,458],
[449,0,507,451,478,445,432,537],
[424,383,0,426,382,402,422,432],
[456,439,464,0,447,416,388,449],
[470,412,508,443,0,424,424,469],
[466,445,488,474,466,0,470,481],
[463,458,468,502,466,420,0,493],
[432,353,458,441,421,409,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,485,506,463,430,431,425],
[414,0,443,462,435,386,430,420],
[405,447,0,450,428,372,422,401],
[384,428,440,0,426,393,352,393],
[427,455,462,464,0,416,424,413],
[460,504,518,497,474,0,445,485],
[459,460,468,538,466,445,0,444],
[465,470,489,497,477,405,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,440,430,454,440,448,446],
[437,0,475,430,456,456,435,454],
[450,415,0,434,436,425,437,434],
[460,460,456,0,444,454,434,467],
[436,434,454,446,0,452,440,460],
[450,434,465,436,438,0,433,451],
[442,455,453,456,450,457,0,457],
[444,436,456,423,430,439,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,433,439,458,465,443,442],
[434,0,467,450,450,458,469,450],
[457,423,0,480,454,482,475,479],
[451,440,410,0,439,436,452,451],
[432,440,436,451,0,431,449,428],
[425,432,408,454,459,0,438,448],
[447,421,415,438,441,452,0,433],
[448,440,411,439,462,442,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,419,450,445,442,442,434],
[449,0,433,478,449,443,457,469],
[471,457,0,479,444,456,439,466],
[440,412,411,0,425,426,444,472],
[445,441,446,465,0,448,432,472],
[448,447,434,464,442,0,456,479],
[448,433,451,446,458,434,0,467],
[456,421,424,418,418,411,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,436,455,429,452,471,442],
[407,0,415,428,399,408,450,442],
[454,475,0,434,449,471,479,449],
[435,462,456,0,459,442,460,451],
[461,491,441,431,0,462,487,450],
[438,482,419,448,428,0,462,457],
[419,440,411,430,403,428,0,448],
[448,448,441,439,440,433,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,450,464,437,462,445,442],
[457,0,430,445,431,445,443,436],
[440,460,0,439,438,433,441,421],
[426,445,451,0,431,453,442,433],
[453,459,452,459,0,472,444,464],
[428,445,457,437,418,0,436,429],
[445,447,449,448,446,454,0,433],
[448,454,469,457,426,461,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,449,434,446,458,459,444],
[426,0,431,429,430,424,455,439],
[441,459,0,437,439,440,455,444],
[456,461,453,0,434,426,460,451],
[444,460,451,456,0,443,468,464],
[432,466,450,464,447,0,476,454],
[431,435,435,430,422,414,0,434],
[446,451,446,439,426,436,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,453,429,427,472,451,467],
[440,0,434,433,444,444,465,475],
[437,456,0,459,488,477,483,468],
[461,457,431,0,496,452,461,472],
[463,446,402,394,0,461,407,384],
[418,446,413,438,429,0,393,431],
[439,425,407,429,483,497,0,436],
[423,415,422,418,506,459,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,463,483,431,448,458,456],
[485,0,493,496,454,468,445,481],
[427,397,0,451,415,423,414,422],
[407,394,439,0,365,423,409,408],
[459,436,475,525,0,459,465,466],
[442,422,467,467,431,0,430,453],
[432,445,476,481,425,460,0,462],
[434,409,468,482,424,437,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,460,500,463,451,459,432],
[442,0,447,492,451,443,462,434],
[430,443,0,454,428,414,404,412],
[390,398,436,0,423,418,407,383],
[427,439,462,467,0,428,418,425],
[439,447,476,472,462,0,431,453],
[431,428,486,483,472,459,0,431],
[458,456,478,507,465,437,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,431,463,446,439,444,449],
[446,0,437,483,470,455,450,442],
[459,453,0,472,465,448,449,441],
[427,407,418,0,445,453,433,433],
[444,420,425,445,0,443,433,424],
[451,435,442,437,447,0,421,446],
[446,440,441,457,457,469,0,430],
[441,448,449,457,466,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,394,445,452,383,455,407],
[454,0,499,442,488,383,455,433],
[496,391,0,427,453,440,489,445],
[445,448,463,0,484,419,477,487],
[438,402,437,406,0,445,377,425],
[507,507,450,471,445,0,457,430],
[435,435,401,413,513,433,0,462],
[483,457,445,403,465,460,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,403,424,398,493,350,385],
[474,0,430,471,442,448,479,407],
[487,460,0,486,423,483,478,459],
[466,419,404,0,390,450,402,362],
[492,448,467,500,0,455,425,426],
[397,442,407,440,435,0,409,407],
[540,411,412,488,465,481,0,419],
[505,483,431,528,464,483,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,472,474,439,444,454,484],
[392,0,418,452,420,410,440,433],
[418,472,0,438,415,433,436,480],
[416,438,452,0,397,413,435,456],
[451,470,475,493,0,428,434,498],
[446,480,457,477,462,0,436,505],
[436,450,454,455,456,454,0,473],
[406,457,410,434,392,385,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,404,413,411,450,429,415],
[451,0,433,426,433,429,446,438],
[486,457,0,439,444,462,466,442],
[477,464,451,0,451,438,464,449],
[479,457,446,439,0,446,440,457],
[440,461,428,452,444,0,416,438],
[461,444,424,426,450,474,0,456],
[475,452,448,441,433,452,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,451,446,459,437,446,431],
[448,0,447,457,440,432,448,446],
[439,443,0,436,440,449,458,444],
[444,433,454,0,457,445,456,447],
[431,450,450,433,0,434,435,447],
[453,458,441,445,456,0,437,446],
[444,442,432,434,455,453,0,425],
[459,444,446,443,443,444,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,404,375,439,446,455,449],
[495,0,451,428,477,452,463,464],
[486,439,0,453,461,470,495,474],
[515,462,437,0,466,475,485,465],
[451,413,429,424,0,430,467,437],
[444,438,420,415,460,0,456,459],
[435,427,395,405,423,434,0,418],
[441,426,416,425,453,431,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,610,515,440,480,421,578,538],
[280,0,379,360,415,361,457,436],
[375,511,0,452,439,398,511,512],
[450,530,438,0,434,470,546,532],
[410,475,451,456,0,435,535,455],
[469,529,492,420,455,0,585,532],
[312,433,379,344,355,305,0,361],
[352,454,378,358,435,358,529,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,456,448,441,445,448,450],
[448,0,445,448,446,465,427,453],
[434,445,0,428,456,455,435,449],
[442,442,462,0,477,460,435,460],
[449,444,434,413,0,452,456,433],
[445,425,435,430,438,0,427,430],
[442,463,455,455,434,463,0,443],
[440,437,441,430,457,460,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,432,474,427,450,462,450],
[442,0,473,461,453,447,473,449],
[458,417,0,442,452,430,459,427],
[416,429,448,0,443,436,462,433],
[463,437,438,447,0,424,466,447],
[440,443,460,454,466,0,481,452],
[428,417,431,428,424,409,0,411],
[440,441,463,457,443,438,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,469,418,447,414,424,486],
[437,0,475,423,453,427,461,482],
[421,415,0,441,463,436,461,499],
[472,467,449,0,468,437,488,512],
[443,437,427,422,0,458,434,497],
[476,463,454,453,432,0,429,507],
[466,429,429,402,456,461,0,509],
[404,408,391,378,393,383,381,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,464,462,463,452,439,449],
[450,0,451,477,458,466,438,468],
[426,439,0,436,436,423,413,445],
[428,413,454,0,411,399,420,444],
[427,432,454,479,0,453,409,449],
[438,424,467,491,437,0,446,455],
[451,452,477,470,481,444,0,475],
[441,422,445,446,441,435,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,437,424,431,444,442,438],
[461,0,473,424,454,485,443,440],
[453,417,0,382,399,430,416,395],
[466,466,508,0,463,479,439,439],
[459,436,491,427,0,500,452,479],
[446,405,460,411,390,0,431,392],
[448,447,474,451,438,459,0,428],
[452,450,495,451,411,498,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,473,461,481,461,455,430],
[434,0,412,432,451,433,391,417],
[417,478,0,418,465,435,446,453],
[429,458,472,0,422,437,466,453],
[409,439,425,468,0,452,456,452],
[429,457,455,453,438,0,408,418],
[435,499,444,424,434,482,0,474],
[460,473,437,437,438,472,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,445,414,412,396,448,448],
[476,0,476,439,451,457,458,449],
[445,414,0,421,429,413,430,416],
[476,451,469,0,451,437,452,425],
[478,439,461,439,0,416,443,422],
[494,433,477,453,474,0,489,458],
[442,432,460,438,447,401,0,416],
[442,441,474,465,468,432,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,451,435,440,432,473,460],
[459,0,480,464,464,447,462,443],
[439,410,0,426,439,444,433,431],
[455,426,464,0,418,453,454,460],
[450,426,451,472,0,468,463,454],
[458,443,446,437,422,0,466,427],
[417,428,457,436,427,424,0,412],
[430,447,459,430,436,463,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,464,452,432,441,447,444],
[419,0,463,442,427,456,457,446],
[426,427,0,419,408,422,426,444],
[438,448,471,0,446,460,446,451],
[458,463,482,444,0,467,472,455],
[449,434,468,430,423,0,460,458],
[443,433,464,444,418,430,0,448],
[446,444,446,439,435,432,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,521,430,492,436,553,526,465],
[369,0,398,400,401,399,432,341],
[460,492,0,458,463,429,493,523],
[398,490,432,0,404,489,429,585],
[454,489,427,486,0,489,522,490],
[337,491,461,401,401,0,433,400],
[364,458,397,461,368,457,0,427],
[425,549,367,305,400,490,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,461,421,427,463,490,453],
[423,0,442,437,420,415,454,492],
[429,448,0,430,421,427,493,455],
[469,453,460,0,440,456,460,462],
[463,470,469,450,0,445,470,482],
[427,475,463,434,445,0,461,476],
[400,436,397,430,420,429,0,450],
[437,398,435,428,408,414,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,440,415,447,432,467,418],
[466,0,446,430,473,435,446,436],
[450,444,0,454,469,434,457,461],
[475,460,436,0,476,451,458,462],
[443,417,421,414,0,411,426,445],
[458,455,456,439,479,0,457,459],
[423,444,433,432,464,433,0,449],
[472,454,429,428,445,431,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,464,448,433,478,451,483],
[450,0,460,449,435,447,470,444],
[426,430,0,444,411,455,504,459],
[442,441,446,0,460,467,501,463],
[457,455,479,430,0,468,482,449],
[412,443,435,423,422,0,475,456],
[439,420,386,389,408,415,0,403],
[407,446,431,427,441,434,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,423,438,427,429,447,424],
[421,0,433,426,431,428,443,420],
[467,457,0,395,447,416,422,433],
[452,464,495,0,436,435,475,451],
[463,459,443,454,0,430,451,464],
[461,462,474,455,460,0,450,428],
[443,447,468,415,439,440,0,439],
[466,470,457,439,426,462,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,434,414,443,444,424,454],
[427,0,449,420,458,425,470,450],
[456,441,0,414,450,443,452,459],
[476,470,476,0,492,445,441,473],
[447,432,440,398,0,412,430,433],
[446,465,447,445,478,0,438,466],
[466,420,438,449,460,452,0,475],
[436,440,431,417,457,424,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,423,431,477,479,441,448],
[433,0,423,430,453,459,405,420],
[467,467,0,442,460,481,442,454],
[459,460,448,0,442,467,427,412],
[413,437,430,448,0,464,441,399],
[411,431,409,423,426,0,430,410],
[449,485,448,463,449,460,0,437],
[442,470,436,478,491,480,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,397,426,434,454,406,435,445],
[493,0,480,420,460,444,456,444],
[464,410,0,434,455,454,451,448],
[456,470,456,0,479,442,439,431],
[436,430,435,411,0,392,429,402],
[484,446,436,448,498,0,464,448],
[455,434,439,451,461,426,0,427],
[445,446,442,459,488,442,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,459,455,440,461,433,483],
[433,0,447,430,422,423,432,450],
[431,443,0,455,453,435,432,446],
[435,460,435,0,452,436,440,449],
[450,468,437,438,0,462,439,453],
[429,467,455,454,428,0,447,445],
[457,458,458,450,451,443,0,442],
[407,440,444,441,437,445,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,409,440,440,461,425,467],
[448,0,416,415,416,435,394,429],
[481,474,0,469,460,475,434,487],
[450,475,421,0,467,484,465,460],
[450,474,430,423,0,477,378,451],
[429,455,415,406,413,0,427,445],
[465,496,456,425,512,463,0,493],
[423,461,403,430,439,445,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,474,428,447,414,415,457],
[443,0,454,454,451,437,440,464],
[416,436,0,460,437,439,437,456],
[462,436,430,0,410,446,418,456],
[443,439,453,480,0,462,456,476],
[476,453,451,444,428,0,434,456],
[475,450,453,472,434,456,0,468],
[433,426,434,434,414,434,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,453,424,428,434,430,424],
[436,0,443,422,447,414,412,425],
[437,447,0,414,437,432,416,437],
[466,468,476,0,467,448,436,454],
[462,443,453,423,0,448,418,428],
[456,476,458,442,442,0,437,451],
[460,478,474,454,472,453,0,435],
[466,465,453,436,462,439,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,412,435,480,467,425,489],
[450,0,444,431,510,403,435,483],
[478,446,0,454,484,425,441,486],
[455,459,436,0,518,408,446,478],
[410,380,406,372,0,378,418,423],
[423,487,465,482,512,0,468,531],
[465,455,449,444,472,422,0,488],
[401,407,404,412,467,359,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,440,453,433,433,429,431],
[422,0,415,436,406,409,428,419],
[450,475,0,455,458,444,448,448],
[437,454,435,0,432,437,421,428],
[457,484,432,458,0,457,448,443],
[457,481,446,453,433,0,443,443],
[461,462,442,469,442,447,0,434],
[459,471,442,462,447,447,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,481,464,430,433,442,459],
[460,0,486,513,465,497,526,426],
[409,404,0,485,415,392,447,462],
[426,377,405,0,395,384,414,426],
[460,425,475,495,0,494,458,449],
[457,393,498,506,396,0,483,392],
[448,364,443,476,432,407,0,454],
[431,464,428,464,441,498,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,466,508,493,475,483,436],
[441,0,431,425,434,362,475,488],
[424,459,0,473,434,410,474,445],
[382,465,417,0,440,419,457,487],
[397,456,456,450,0,458,474,447],
[415,528,480,471,432,0,469,455],
[407,415,416,433,416,421,0,413],
[454,402,445,403,443,435,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,437,433,424,449,454,441],
[444,0,447,438,441,458,445,448],
[453,443,0,438,429,446,446,459],
[457,452,452,0,443,474,472,458],
[466,449,461,447,0,488,450,440],
[441,432,444,416,402,0,458,430],
[436,445,444,418,440,432,0,432],
[449,442,431,432,450,460,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,436,481,440,458,421,435],
[427,0,396,452,409,421,422,417],
[454,494,0,485,442,479,486,447],
[409,438,405,0,359,444,438,428],
[450,481,448,531,0,412,466,451],
[432,469,411,446,478,0,425,449],
[469,468,404,452,424,465,0,455],
[455,473,443,462,439,441,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,430,476,465,461,452,473],
[440,0,439,491,474,469,450,445],
[460,451,0,472,454,461,438,428],
[414,399,418,0,441,421,419,399],
[425,416,436,449,0,428,443,431],
[429,421,429,469,462,0,437,439],
[438,440,452,471,447,453,0,428],
[417,445,462,491,459,451,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,450,472,435,463,471,447],
[443,0,414,457,420,453,444,443],
[440,476,0,454,447,469,447,446],
[418,433,436,0,439,441,454,438],
[455,470,443,451,0,455,454,448],
[427,437,421,449,435,0,439,437],
[419,446,443,436,436,451,0,426],
[443,447,444,452,442,453,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,423,427,424,450,416,428],
[417,0,419,404,428,421,432,417],
[467,471,0,445,475,442,435,421],
[463,486,445,0,447,434,430,454],
[466,462,415,443,0,448,449,445],
[440,469,448,456,442,0,420,486],
[474,458,455,460,441,470,0,451],
[462,473,469,436,445,404,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,461,454,435,438,449,485],
[402,0,429,432,403,442,420,441],
[429,461,0,429,400,458,455,467],
[436,458,461,0,417,426,446,446],
[455,487,490,473,0,443,468,481],
[452,448,432,464,447,0,455,458],
[441,470,435,444,422,435,0,453],
[405,449,423,444,409,432,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,456,431,449,467,418,429],
[438,0,441,438,449,455,428,426],
[434,449,0,420,431,445,452,430],
[459,452,470,0,463,469,466,442],
[441,441,459,427,0,454,442,441],
[423,435,445,421,436,0,443,428],
[472,462,438,424,448,447,0,448],
[461,464,460,448,449,462,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,498,466,431,497,449,480],
[427,0,380,478,415,475,413,448],
[392,510,0,484,441,486,452,380],
[424,412,406,0,501,488,398,356],
[459,475,449,389,0,458,409,393],
[393,415,404,402,432,0,466,416],
[441,477,438,492,481,424,0,448],
[410,442,510,534,497,474,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,380,470,449,496,477,470],
[387,0,405,403,442,473,343,399],
[510,485,0,468,446,496,412,443],
[420,487,422,0,459,468,420,441],
[441,448,444,431,0,471,423,502],
[394,417,394,422,419,0,382,405],
[413,547,478,470,467,508,0,435],
[420,491,447,449,388,485,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,453,473,489,437,477,477],
[459,0,498,446,495,434,503,504],
[437,392,0,434,465,406,441,456],
[417,444,456,0,504,464,492,460],
[401,395,425,386,0,379,444,452],
[453,456,484,426,511,0,462,467],
[413,387,449,398,446,428,0,437],
[413,386,434,430,438,423,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,431,423,432,451,407,446],
[474,0,420,452,450,479,445,442],
[459,470,0,434,428,466,453,461],
[467,438,456,0,406,433,468,460],
[458,440,462,484,0,468,467,464],
[439,411,424,457,422,0,458,452],
[483,445,437,422,423,432,0,443],
[444,448,429,430,426,438,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,446,428,496,433,456,444],
[471,0,465,446,506,444,469,468],
[444,425,0,430,500,417,442,442],
[462,444,460,0,467,452,450,453],
[394,384,390,423,0,434,406,415],
[457,446,473,438,456,0,453,468],
[434,421,448,440,484,437,0,488],
[446,422,448,437,475,422,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,453,439,426,473,435,449],
[456,0,460,436,442,475,443,437],
[437,430,0,451,430,444,431,445],
[451,454,439,0,452,464,452,457],
[464,448,460,438,0,475,428,440],
[417,415,446,426,415,0,402,406],
[455,447,459,438,462,488,0,447],
[441,453,445,433,450,484,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,447,436,394,445,389,403],
[432,0,436,433,455,440,448,427],
[443,454,0,448,404,421,400,391],
[454,457,442,0,456,488,477,429],
[496,435,486,434,0,432,455,436],
[445,450,469,402,458,0,449,458],
[501,442,490,413,435,441,0,404],
[487,463,499,461,454,432,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,459,447,432,446,442,455],
[431,0,465,444,456,455,463,440],
[431,425,0,466,433,445,449,448],
[443,446,424,0,444,454,456,456],
[458,434,457,446,0,463,450,430],
[444,435,445,436,427,0,453,439],
[448,427,441,434,440,437,0,449],
[435,450,442,434,460,451,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,435,455,422,474,436,469],
[470,0,472,443,472,472,462,455],
[455,418,0,442,446,447,477,420],
[435,447,448,0,425,466,457,455],
[468,418,444,465,0,488,464,462],
[416,418,443,424,402,0,431,432],
[454,428,413,433,426,459,0,446],
[421,435,470,435,428,458,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,413,457,436,446,460,489],
[457,0,457,432,463,456,454,492],
[477,433,0,440,466,470,464,466],
[433,458,450,0,439,452,481,487],
[454,427,424,451,0,468,446,452],
[444,434,420,438,422,0,466,461],
[430,436,426,409,444,424,0,466],
[401,398,424,403,438,429,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,392,429,434,431,443,413,431],
[498,0,445,470,470,441,471,497],
[461,445,0,451,446,447,434,466],
[456,420,439,0,437,438,431,448],
[459,420,444,453,0,443,447,458],
[447,449,443,452,447,0,455,469],
[477,419,456,459,443,435,0,475],
[459,393,424,442,432,421,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,430,434,425,434,436,431],
[449,0,431,450,445,452,454,452],
[460,459,0,448,453,445,465,440],
[456,440,442,0,446,442,472,453],
[465,445,437,444,0,446,452,447],
[456,438,445,448,444,0,442,431],
[454,436,425,418,438,448,0,450],
[459,438,450,437,443,459,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,422,429,428,418,453,420],
[466,0,440,434,441,435,449,433],
[468,450,0,427,438,420,467,454],
[461,456,463,0,461,467,488,443],
[462,449,452,429,0,427,460,441],
[472,455,470,423,463,0,467,449],
[437,441,423,402,430,423,0,415],
[470,457,436,447,449,441,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,417,430,448,449,411,425],
[438,0,446,443,464,454,436,442],
[473,444,0,465,447,436,430,420],
[460,447,425,0,449,455,438,456],
[442,426,443,441,0,469,438,434],
[441,436,454,435,421,0,449,406],
[479,454,460,452,452,441,0,443],
[465,448,470,434,456,484,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,449,390,483,391,333,446],
[465,0,365,393,397,436,394,461],
[441,525,0,430,463,436,406,388],
[500,497,460,0,503,445,455,483],
[407,493,427,387,0,463,445,477],
[499,454,454,445,427,0,429,481],
[557,496,484,435,445,461,0,529],
[444,429,502,407,413,409,361,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,427,441,419,419,391,425],
[437,0,414,407,427,430,422,450],
[463,476,0,480,458,415,418,415],
[449,483,410,0,468,468,401,499],
[471,463,432,422,0,371,400,416],
[471,460,475,422,519,0,438,470],
[499,468,472,489,490,452,0,440],
[465,440,475,391,474,420,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,595,595,595,298,595,595,595],
[295,0,297,297,0,297,298,592],
[295,593,0,592,295,890,593,890],
[295,593,298,0,593,890,593,890],
[592,890,595,297,0,890,595,890],
[295,593,0,0,0,0,298,295],
[295,592,297,297,295,592,0,592],
[295,298,0,0,0,595,298,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,441,432,440,423,424,428],
[481,0,466,485,442,443,463,450],
[449,424,0,447,409,431,445,431],
[458,405,443,0,438,418,438,452],
[450,448,481,452,0,458,444,433],
[467,447,459,472,432,0,444,441],
[466,427,445,452,446,446,0,451],
[462,440,459,438,457,449,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,448,447,451,442,467,451],
[447,0,433,444,460,453,457,450],
[442,457,0,444,431,439,463,448],
[443,446,446,0,462,459,464,470],
[439,430,459,428,0,451,435,445],
[448,437,451,431,439,0,440,430],
[423,433,427,426,455,450,0,444],
[439,440,442,420,445,460,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,431,447,455,435,476,466],
[455,0,434,441,446,425,456,480],
[459,456,0,480,451,432,469,461],
[443,449,410,0,420,415,434,440],
[435,444,439,470,0,421,464,458],
[455,465,458,475,469,0,442,469],
[414,434,421,456,426,448,0,459],
[424,410,429,450,432,421,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,433,440,391,504,490,428],
[448,0,413,509,374,461,518,405],
[457,477,0,456,409,476,513,464],
[450,381,434,0,424,500,505,455],
[499,516,481,466,0,489,440,461],
[386,429,414,390,401,0,480,420],
[400,372,377,385,450,410,0,375],
[462,485,426,435,429,470,515,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,450,439,422,447,487,492],
[407,0,433,437,403,427,446,438],
[440,457,0,443,431,430,463,438],
[451,453,447,0,460,428,463,460],
[468,487,459,430,0,458,477,493],
[443,463,460,462,432,0,465,453],
[403,444,427,427,413,425,0,422],
[398,452,452,430,397,437,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,469,472,438,446,441,456],
[441,0,466,490,426,463,451,453],
[421,424,0,466,444,447,447,459],
[418,400,424,0,423,391,397,439],
[452,464,446,467,0,435,442,427],
[444,427,443,499,455,0,455,417],
[449,439,443,493,448,435,0,414],
[434,437,431,451,463,473,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,462,475,421,439,446,450],
[429,0,475,467,409,461,451,460],
[428,415,0,437,428,457,428,441],
[415,423,453,0,417,457,412,421],
[469,481,462,473,0,464,437,431],
[451,429,433,433,426,0,417,442],
[444,439,462,478,453,473,0,446],
[440,430,449,469,459,448,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,457,442,427,464,451,460],
[412,0,431,432,431,437,442,419],
[433,459,0,451,440,445,446,426],
[448,458,439,0,427,426,450,437],
[463,459,450,463,0,440,471,428],
[426,453,445,464,450,0,454,418],
[439,448,444,440,419,436,0,421],
[430,471,464,453,462,472,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,434,457,450,465,452,462],
[434,0,415,436,443,448,434,429],
[456,475,0,445,468,461,458,439],
[433,454,445,0,456,450,430,445],
[440,447,422,434,0,459,453,439],
[425,442,429,440,431,0,433,440],
[438,456,432,460,437,457,0,441],
[428,461,451,445,451,450,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,395,350,403,430,398,465],
[503,0,445,445,459,455,453,487],
[495,445,0,454,454,457,482,478],
[540,445,436,0,446,474,473,492],
[487,431,436,444,0,468,435,484],
[460,435,433,416,422,0,417,457],
[492,437,408,417,455,473,0,457],
[425,403,412,398,406,433,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,417,449,428,414,423,450],
[424,0,394,426,428,414,410,430],
[473,496,0,479,443,447,456,451],
[441,464,411,0,445,425,420,442],
[462,462,447,445,0,447,435,447],
[476,476,443,465,443,0,442,468],
[467,480,434,470,455,448,0,449],
[440,460,439,448,443,422,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,385,319,319,411,548,457],
[477,0,408,461,391,410,502,481],
[505,482,0,434,503,482,480,455],
[571,429,456,0,367,406,522,453],
[571,499,387,523,0,408,457,477],
[479,480,408,484,482,0,546,524],
[342,388,410,368,433,344,0,456],
[433,409,435,437,413,366,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,461,475,445,472,425,450],
[398,0,420,403,419,454,411,418],
[429,470,0,468,456,478,474,468],
[415,487,422,0,441,488,459,417],
[445,471,434,449,0,489,428,458],
[418,436,412,402,401,0,433,418],
[465,479,416,431,462,457,0,435],
[440,472,422,473,432,472,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,428,443,461,480,446,435],
[447,0,446,429,452,477,432,424],
[462,444,0,419,449,501,452,427],
[447,461,471,0,451,482,435,457],
[429,438,441,439,0,492,459,451],
[410,413,389,408,398,0,421,400],
[444,458,438,455,431,469,0,451],
[455,466,463,433,439,490,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,568,432,461,402,652,381,542],
[322,0,380,381,324,460,329,514],
[458,510,0,331,429,514,436,567],
[429,509,559,0,454,565,486,511],
[488,566,461,436,0,570,488,568],
[238,430,376,325,320,0,325,458],
[509,561,454,404,402,565,0,564],
[348,376,323,379,322,432,326,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,434,434,432,435,412,403],
[474,0,429,466,487,425,415,431],
[456,461,0,486,466,461,467,442],
[456,424,404,0,459,407,430,388],
[458,403,424,431,0,395,407,389],
[455,465,429,483,495,0,451,438],
[478,475,423,460,483,439,0,462],
[487,459,448,502,501,452,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,335,336,410,483,360,308,480],
[555,0,388,457,435,431,454,506],
[554,502,0,430,476,380,502,598],
[480,433,460,0,484,407,382,554],
[407,455,414,406,0,405,430,529],
[530,459,510,483,485,0,433,581],
[582,436,388,508,460,457,0,508],
[410,384,292,336,361,309,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,494,426,419,464,484,471],
[437,0,491,436,436,475,480,449],
[396,399,0,411,401,424,424,422],
[464,454,479,0,444,477,472,456],
[471,454,489,446,0,466,495,440],
[426,415,466,413,424,0,470,427],
[406,410,466,418,395,420,0,449],
[419,441,468,434,450,463,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,481,446,392,418,488,437],
[457,0,557,382,361,415,509,395],
[409,333,0,345,350,440,418,340],
[444,508,545,0,446,476,458,450],
[498,529,540,444,0,500,500,434],
[472,475,450,414,390,0,459,387],
[402,381,472,432,390,431,0,343],
[453,495,550,440,456,503,547,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,470,445,460,424,436,441],
[474,0,482,462,456,434,445,453],
[420,408,0,430,411,417,437,419],
[445,428,460,0,423,436,444,437],
[430,434,479,467,0,429,444,453],
[466,456,473,454,461,0,471,436],
[454,445,453,446,446,419,0,438],
[449,437,471,453,437,454,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,442,415,466,417,446,444],
[443,0,456,441,469,434,466,447],
[448,434,0,423,459,428,454,447],
[475,449,467,0,469,438,474,450],
[424,421,431,421,0,412,426,430],
[473,456,462,452,478,0,456,439],
[444,424,436,416,464,434,0,435],
[446,443,443,440,460,451,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,362,487,460,342,482,339,457],
[528,0,481,411,456,462,383,507],
[403,409,0,426,359,405,359,434],
[430,479,464,0,336,483,311,483],
[548,434,531,554,0,503,430,532],
[408,428,485,407,387,0,404,408],
[551,507,531,579,460,486,0,435],
[433,383,456,407,358,482,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,428,493,432,426,455,433],
[437,0,428,465,441,445,452,452],
[462,462,0,468,447,481,458,419],
[397,425,422,0,409,419,408,425],
[458,449,443,481,0,430,451,447],
[464,445,409,471,460,0,453,456],
[435,438,432,482,439,437,0,460],
[457,438,471,465,443,434,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,436,458,461,472,439,476],
[444,0,452,449,460,466,451,460],
[454,438,0,459,460,482,470,489],
[432,441,431,0,442,470,425,478],
[429,430,430,448,0,470,466,463],
[418,424,408,420,420,0,434,446],
[451,439,420,465,424,456,0,463],
[414,430,401,412,427,444,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,450,464,444,424,435,444],
[412,0,429,431,422,411,413,419],
[440,461,0,454,439,440,438,452],
[426,459,436,0,407,420,424,427],
[446,468,451,483,0,444,458,485],
[466,479,450,470,446,0,441,457],
[455,477,452,466,432,449,0,450],
[446,471,438,463,405,433,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,445,442,438,464,454,451],
[461,0,421,446,474,437,469,424],
[445,469,0,451,448,462,452,463],
[448,444,439,0,451,461,458,416],
[452,416,442,439,0,428,451,440],
[426,453,428,429,462,0,451,421],
[436,421,438,432,439,439,0,441],
[439,466,427,474,450,469,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,479,493,436,506,485,478],
[442,0,533,441,505,491,465,468],
[411,357,0,390,429,416,412,409],
[397,449,500,0,443,450,441,404],
[454,385,461,447,0,445,457,429],
[384,399,474,440,445,0,414,455],
[405,425,478,449,433,476,0,468],
[412,422,481,486,461,435,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,435,452,433,432,428,409],
[419,0,436,452,452,417,432,437],
[455,454,0,443,441,439,446,447],
[438,438,447,0,434,457,436,449],
[457,438,449,456,0,484,429,451],
[458,473,451,433,406,0,454,440],
[462,458,444,454,461,436,0,435],
[481,453,443,441,439,450,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,432,440,425,445,414,414],
[445,0,459,444,448,413,412,439],
[458,431,0,453,414,439,432,413],
[450,446,437,0,419,444,438,436],
[465,442,476,471,0,451,438,452],
[445,477,451,446,439,0,454,455],
[476,478,458,452,452,436,0,453],
[476,451,477,454,438,435,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,470,437,485,467,446,496],
[408,0,427,417,442,433,415,475],
[420,463,0,414,458,433,420,458],
[453,473,476,0,441,463,430,491],
[405,448,432,449,0,434,403,459],
[423,457,457,427,456,0,443,460],
[444,475,470,460,487,447,0,494],
[394,415,432,399,431,430,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,459,473,471,459,451,442],
[427,0,457,446,451,431,422,454],
[431,433,0,475,466,491,443,458],
[417,444,415,0,445,460,455,441],
[419,439,424,445,0,439,453,441],
[431,459,399,430,451,0,464,448],
[439,468,447,435,437,426,0,451],
[448,436,432,449,449,442,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,464,440,473,464,444,464],
[456,0,478,459,491,455,427,495],
[426,412,0,442,482,444,445,487],
[450,431,448,0,468,439,421,459],
[417,399,408,422,0,446,391,443],
[426,435,446,451,444,0,440,479],
[446,463,445,469,499,450,0,492],
[426,395,403,431,447,411,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,455,451,462,460,466,427],
[446,0,426,435,432,441,462,409],
[435,464,0,442,445,433,464,444],
[439,455,448,0,492,423,469,439],
[428,458,445,398,0,425,446,447],
[430,449,457,467,465,0,471,443],
[424,428,426,421,444,419,0,422],
[463,481,446,451,443,447,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,451,472,432,464,452,410],
[440,0,420,365,417,446,430,460],
[439,470,0,452,497,511,480,453],
[418,525,438,0,415,478,449,437],
[458,473,393,475,0,468,399,449],
[426,444,379,412,422,0,391,366],
[438,460,410,441,491,499,0,476],
[480,430,437,453,441,524,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,437,450,453,459,479,465],
[468,0,479,433,562,525,563,586],
[453,411,0,447,503,453,435,478],
[440,457,443,0,455,415,506,428],
[437,328,387,435,0,498,495,430],
[431,365,437,475,392,0,458,452],
[411,327,455,384,395,432,0,450],
[425,304,412,462,460,438,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,413,434,433,421,472,452],
[461,0,477,445,460,448,458,448],
[477,413,0,455,458,431,460,449],
[456,445,435,0,479,465,470,468],
[457,430,432,411,0,411,454,462],
[469,442,459,425,479,0,484,465],
[418,432,430,420,436,406,0,416],
[438,442,441,422,428,425,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,467,458,445,472,466,450],
[408,0,432,411,400,429,435,400],
[423,458,0,442,422,427,451,423],
[432,479,448,0,428,469,461,416],
[445,490,468,462,0,489,473,459],
[418,461,463,421,401,0,427,424],
[424,455,439,429,417,463,0,436],
[440,490,467,474,431,466,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,430,451,549,614,422,505],
[387,0,472,366,510,445,308,443],
[460,418,0,446,524,483,504,456],
[439,524,444,0,506,518,482,517],
[341,380,366,384,0,481,405,401],
[276,445,407,372,409,0,367,404],
[468,582,386,408,485,523,0,480],
[385,447,434,373,489,486,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,538,540,538,540,381,444,475],
[352,0,476,603,478,411,448,347],
[350,414,0,379,444,413,318,281],
[352,287,511,0,416,382,446,315],
[350,412,446,474,0,478,382,412],
[509,479,477,508,412,0,414,347],
[446,442,572,444,508,476,0,474],
[415,543,609,575,478,543,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,444,467,426,482,464,455],
[466,0,424,470,442,480,459,490],
[446,466,0,448,406,459,444,428],
[423,420,442,0,382,445,435,438],
[464,448,484,508,0,503,440,457],
[408,410,431,445,387,0,412,383],
[426,431,446,455,450,478,0,436],
[435,400,462,452,433,507,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,421,425,420,420,407,439],
[429,0,415,424,440,420,412,442],
[469,475,0,481,453,445,465,462],
[465,466,409,0,419,427,425,452],
[470,450,437,471,0,436,438,455],
[470,470,445,463,454,0,476,474],
[483,478,425,465,452,414,0,467],
[451,448,428,438,435,416,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,422,445,440,417,438,449],
[458,0,442,460,458,459,465,470],
[468,448,0,462,458,440,429,454],
[445,430,428,0,448,427,419,433],
[450,432,432,442,0,441,441,445],
[473,431,450,463,449,0,443,476],
[452,425,461,471,449,447,0,460],
[441,420,436,457,445,414,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,439,437,440,431,450,421],
[470,0,451,451,448,435,456,436],
[451,439,0,458,445,428,456,427],
[453,439,432,0,432,422,445,417],
[450,442,445,458,0,453,441,440],
[459,455,462,468,437,0,453,452],
[440,434,434,445,449,437,0,423],
[469,454,463,473,450,438,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,441,440,479,458,464,448],
[438,0,433,430,468,462,453,435],
[449,457,0,460,469,465,466,442],
[450,460,430,0,453,438,457,431],
[411,422,421,437,0,419,447,412],
[432,428,425,452,471,0,449,435],
[426,437,424,433,443,441,0,425],
[442,455,448,459,478,455,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,413,469,408,464,467,573],
[443,0,413,372,429,405,426,462],
[477,477,0,372,448,458,404,535],
[421,518,518,0,386,458,423,532],
[482,461,442,504,0,497,533,476],
[426,485,432,432,393,0,463,517],
[423,464,486,467,357,427,0,499],
[317,428,355,358,414,373,391,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,480,457,473,463,456,466],
[449,0,485,469,462,475,442,464],
[410,405,0,441,426,440,430,429],
[433,421,449,0,458,453,458,452],
[417,428,464,432,0,443,439,449],
[427,415,450,437,447,0,447,445],
[434,448,460,432,451,443,0,453],
[424,426,461,438,441,445,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,297,425,423,465,467,422],
[469,0,380,382,384,382,553,506],
[593,510,0,341,385,465,636,508],
[465,508,549,0,549,464,593,419],
[467,506,505,341,0,465,594,592],
[425,508,425,426,425,0,553,422],
[423,337,254,297,296,337,0,253],
[468,384,382,471,298,468,637,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,356,531,444,488,356,491],
[399,0,397,442,484,399,399,400],
[534,493,0,398,446,490,401,402],
[359,448,492,0,536,356,356,402],
[446,406,444,354,0,447,267,402],
[402,491,400,534,443,0,447,536],
[534,491,489,534,623,443,0,402],
[399,490,488,488,488,354,488,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,423,455,511,468,457,476],
[401,0,438,465,469,433,467,453],
[467,452,0,453,483,461,441,446],
[435,425,437,0,448,452,444,455],
[379,421,407,442,0,443,424,409],
[422,457,429,438,447,0,408,414],
[433,423,449,446,466,482,0,414],
[414,437,444,435,481,476,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,508,477,452,522,449,431],
[439,0,505,492,500,473,479,453],
[382,385,0,404,457,451,440,381],
[413,398,486,0,431,440,437,379],
[438,390,433,459,0,455,430,390],
[368,417,439,450,435,0,436,401],
[441,411,450,453,460,454,0,399],
[459,437,509,511,500,489,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,426,441,453,445,416,416],
[440,0,442,436,445,440,413,441],
[464,448,0,470,462,443,444,440],
[449,454,420,0,434,440,434,426],
[437,445,428,456,0,433,407,431],
[445,450,447,450,457,0,457,461],
[474,477,446,456,483,433,0,432],
[474,449,450,464,459,429,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,443,426,442,446,450,461],
[443,0,434,428,452,466,429,459],
[447,456,0,452,483,427,440,445],
[464,462,438,0,476,470,478,496],
[448,438,407,414,0,414,409,467],
[444,424,463,420,476,0,459,460],
[440,461,450,412,481,431,0,454],
[429,431,445,394,423,430,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,447,446,427,451,428,436],
[433,0,412,424,416,413,415,397],
[443,478,0,466,455,467,435,442],
[444,466,424,0,440,411,412,429],
[463,474,435,450,0,441,447,437],
[439,477,423,479,449,0,433,445],
[462,475,455,478,443,457,0,452],
[454,493,448,461,453,445,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,443,433,438,421,398,431],
[447,0,431,434,420,436,434,417],
[447,459,0,450,415,405,398,405],
[457,456,440,0,427,429,442,436],
[452,470,475,463,0,453,447,442],
[469,454,485,461,437,0,416,464],
[492,456,492,448,443,474,0,464],
[459,473,485,454,448,426,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,427,452,411,451,486,424],
[450,0,438,467,439,453,464,436],
[463,452,0,455,461,436,486,410],
[438,423,435,0,408,420,444,376],
[479,451,429,482,0,450,518,447],
[439,437,454,470,440,0,449,407],
[404,426,404,446,372,441,0,387],
[466,454,480,514,443,483,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,390,416,445,442,441,430],
[454,0,412,422,460,448,447,434],
[500,478,0,437,472,461,440,450],
[474,468,453,0,496,439,473,444],
[445,430,418,394,0,423,405,413],
[448,442,429,451,467,0,443,460],
[449,443,450,417,485,447,0,448],
[460,456,440,446,477,430,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,454,412,475,443,438,453],
[463,0,480,447,454,476,429,468],
[436,410,0,409,461,448,436,450],
[478,443,481,0,474,451,462,473],
[415,436,429,416,0,428,409,440],
[447,414,442,439,462,0,438,446],
[452,461,454,428,481,452,0,463],
[437,422,440,417,450,444,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,424,440,442,458,446,420],
[453,0,430,438,448,477,421,423],
[466,460,0,460,464,490,461,435],
[450,452,430,0,457,452,459,430],
[448,442,426,433,0,455,418,447],
[432,413,400,438,435,0,422,423],
[444,469,429,431,472,468,0,445],
[470,467,455,460,443,467,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,467,484,474,432,437,440],
[472,0,514,460,434,478,477,459],
[423,376,0,447,419,427,427,427],
[406,430,443,0,450,431,438,406],
[416,456,471,440,0,472,430,451],
[458,412,463,459,418,0,443,435],
[453,413,463,452,460,447,0,443],
[450,431,463,484,439,455,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,427,417,435,425,411,430],
[432,0,421,404,430,439,404,447],
[463,469,0,432,454,454,454,480],
[473,486,458,0,475,442,439,459],
[455,460,436,415,0,444,437,454],
[465,451,436,448,446,0,428,443],
[479,486,436,451,453,462,0,487],
[460,443,410,431,436,447,403,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,480,444,447,455,475,426],
[438,0,459,436,445,466,461,424],
[410,431,0,415,418,442,451,394],
[446,454,475,0,472,429,458,429],
[443,445,472,418,0,457,468,438],
[435,424,448,461,433,0,459,447],
[415,429,439,432,422,431,0,398],
[464,466,496,461,452,443,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,467,469,485,445,477,454],
[434,0,443,443,424,433,422,419],
[423,447,0,430,459,435,432,437],
[421,447,460,0,449,447,451,444],
[405,466,431,441,0,436,429,442],
[445,457,455,443,454,0,442,452],
[413,468,458,439,461,448,0,435],
[436,471,453,446,448,438,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,449,445,444,460,436,450],
[463,0,466,438,462,485,448,467],
[441,424,0,428,439,457,430,448],
[445,452,462,0,433,467,434,447],
[446,428,451,457,0,470,436,478],
[430,405,433,423,420,0,433,450],
[454,442,460,456,454,457,0,455],
[440,423,442,443,412,440,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,386,383,417,417,418,405,437],
[504,0,428,444,453,467,449,459],
[507,462,0,442,456,457,477,477],
[473,446,448,0,474,471,432,450],
[473,437,434,416,0,448,429,459],
[472,423,433,419,442,0,431,458],
[485,441,413,458,461,459,0,457],
[453,431,413,440,431,432,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,450,423,447,446,444,443],
[447,0,443,431,457,419,451,438],
[440,447,0,448,467,445,442,444],
[467,459,442,0,469,449,452,442],
[443,433,423,421,0,426,438,444],
[444,471,445,441,464,0,441,456],
[446,439,448,438,452,449,0,437],
[447,452,446,448,446,434,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,439,450,456,435,445,432],
[442,0,452,442,432,437,417,440],
[451,438,0,450,439,443,477,466],
[440,448,440,0,436,427,438,428],
[434,458,451,454,0,416,439,437],
[455,453,447,463,474,0,464,435],
[445,473,413,452,451,426,0,450],
[458,450,424,462,453,455,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,450,438,435,441,444,399],
[463,0,447,485,462,450,464,420],
[440,443,0,461,455,480,456,429],
[452,405,429,0,457,450,453,446],
[455,428,435,433,0,448,456,425],
[449,440,410,440,442,0,450,431],
[446,426,434,437,434,440,0,428],
[491,470,461,444,465,459,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,456,457,464,472,453,442],
[424,0,425,437,421,424,442,411],
[434,465,0,469,457,463,445,445],
[433,453,421,0,427,438,434,419],
[426,469,433,463,0,462,453,444],
[418,466,427,452,428,0,445,431],
[437,448,445,456,437,445,0,434],
[448,479,445,471,446,459,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,416,434,462,431,426,451],
[444,0,436,394,436,449,415,456],
[474,454,0,463,468,456,424,437],
[456,496,427,0,467,448,448,451],
[428,454,422,423,0,447,426,445],
[459,441,434,442,443,0,444,447],
[464,475,466,442,464,446,0,470],
[439,434,453,439,445,443,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,443,435,397,421,450,437],
[464,0,426,447,386,404,442,430],
[447,464,0,413,444,444,420,458],
[455,443,477,0,456,432,424,419],
[493,504,446,434,0,462,492,472],
[469,486,446,458,428,0,467,426],
[440,448,470,466,398,423,0,453],
[453,460,432,471,418,464,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,433,414,461,450,464,421],
[443,0,439,440,439,428,445,440],
[457,451,0,467,450,433,451,443],
[476,450,423,0,446,434,478,426],
[429,451,440,444,0,447,467,470],
[440,462,457,456,443,0,466,413],
[426,445,439,412,423,424,0,430],
[469,450,447,464,420,477,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,436,425,414,438,433,429],
[474,0,440,440,431,449,448,447],
[454,450,0,436,437,462,454,437],
[465,450,454,0,439,447,431,434],
[476,459,453,451,0,474,433,470],
[452,441,428,443,416,0,421,406],
[457,442,436,459,457,469,0,442],
[461,443,453,456,420,484,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,443,454,477,430,414,437],
[453,0,430,434,471,446,423,437],
[447,460,0,453,467,445,448,451],
[436,456,437,0,469,437,424,441],
[413,419,423,421,0,417,395,423],
[460,444,445,453,473,0,421,436],
[476,467,442,466,495,469,0,468],
[453,453,439,449,467,454,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,474,437,464,463,466,433],
[415,0,448,468,457,438,474,423],
[416,442,0,419,429,414,468,414],
[453,422,471,0,477,475,475,446],
[426,433,461,413,0,417,443,397],
[427,452,476,415,473,0,468,420],
[424,416,422,415,447,422,0,395],
[457,467,476,444,493,470,495,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,391,407,456,428,432,423,436],
[499,0,435,487,482,445,474,454],
[483,455,0,472,434,426,450,479],
[434,403,418,0,444,451,492,470],
[462,408,456,446,0,407,443,431],
[458,445,464,439,483,0,476,492],
[467,416,440,398,447,414,0,417],
[454,436,411,420,459,398,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,447,483,413,445,443,438],
[440,0,440,466,454,430,437,456],
[443,450,0,454,421,432,467,457],
[407,424,436,0,448,432,406,462],
[477,436,469,442,0,453,439,485],
[445,460,458,458,437,0,452,489],
[447,453,423,484,451,438,0,481],
[452,434,433,428,405,401,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,499,492,463,512,471,438,447],
[391,0,427,414,470,385,396,419],
[398,463,0,451,473,420,424,428],
[427,476,439,0,478,429,435,448],
[378,420,417,412,0,411,395,405],
[419,505,470,461,479,0,464,459],
[452,494,466,455,495,426,0,469],
[443,471,462,442,485,431,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,443,449,462,452,443,480],
[402,0,425,423,421,409,428,452],
[447,465,0,455,436,440,446,456],
[441,467,435,0,430,428,425,463],
[428,469,454,460,0,454,466,464],
[438,481,450,462,436,0,426,478],
[447,462,444,465,424,464,0,475],
[410,438,434,427,426,412,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,433,435,462,445,446,425],
[458,0,438,456,469,463,455,440],
[457,452,0,446,459,457,457,430],
[455,434,444,0,458,465,450,447],
[428,421,431,432,0,424,425,414],
[445,427,433,425,466,0,437,433],
[444,435,433,440,465,453,0,419],
[465,450,460,443,476,457,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,462,442,446,469,435,447],
[446,0,471,438,450,476,440,439],
[428,419,0,433,427,445,424,424],
[448,452,457,0,439,451,426,448],
[444,440,463,451,0,466,431,437],
[421,414,445,439,424,0,430,429],
[455,450,466,464,459,460,0,445],
[443,451,466,442,453,461,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,470,452,447,468,442,455],
[460,0,483,416,451,462,442,489],
[420,407,0,404,423,438,427,444],
[438,474,486,0,451,454,445,466],
[443,439,467,439,0,422,416,444],
[422,428,452,436,468,0,418,472],
[448,448,463,445,474,472,0,474],
[435,401,446,424,446,418,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,430,451,449,436,458,453],
[426,0,423,434,436,455,432,425],
[460,467,0,469,447,435,456,457],
[439,456,421,0,455,446,435,454],
[441,454,443,435,0,437,422,435],
[454,435,455,444,453,0,459,452],
[432,458,434,455,468,431,0,440],
[437,465,433,436,455,438,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,432,426,462,443,440,426],
[458,0,458,460,454,456,438,446],
[458,432,0,445,437,457,431,436],
[464,430,445,0,446,430,446,438],
[428,436,453,444,0,448,433,424],
[447,434,433,460,442,0,446,445],
[450,452,459,444,457,444,0,452],
[464,444,454,452,466,445,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,461,469,450,443,419,462],
[449,0,455,477,462,443,407,451],
[429,435,0,472,468,412,430,432],
[421,413,418,0,411,413,404,397],
[440,428,422,479,0,423,419,415],
[447,447,478,477,467,0,427,449],
[471,483,460,486,471,463,0,430],
[428,439,458,493,475,441,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,521,385,440,428,425,420,481],
[369,0,415,429,375,389,433,432],
[505,475,0,473,416,445,506,473],
[450,461,417,0,382,393,440,452],
[462,515,474,508,0,441,541,539],
[465,501,445,497,449,0,520,504],
[470,457,384,450,349,370,0,498],
[409,458,417,438,351,386,392,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,428,456,474,427,455,438],
[440,0,425,412,440,407,413,450],
[462,465,0,445,433,428,457,463],
[434,478,445,0,461,447,449,460],
[416,450,457,429,0,427,418,439],
[463,483,462,443,463,0,452,443],
[435,477,433,441,472,438,0,425],
[452,440,427,430,451,447,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,445,509,554,427,445,452],
[417,0,410,481,479,504,520,455],
[445,480,0,571,510,520,490,449],
[381,409,319,0,511,416,470,393],
[336,411,380,379,0,427,438,383],
[463,386,370,474,463,0,460,437],
[445,370,400,420,452,430,0,371],
[438,435,441,497,507,453,519,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,425,424,410,387,332,414],
[433,0,464,421,431,437,400,440],
[465,426,0,470,426,412,391,490],
[466,469,420,0,443,440,459,425],
[480,459,464,447,0,506,412,501],
[503,453,478,450,384,0,365,469],
[558,490,499,431,478,525,0,485],
[476,450,400,465,389,421,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,463,439,445,446,449,443],
[433,0,448,443,436,448,453,435],
[427,442,0,455,451,449,453,450],
[451,447,435,0,449,450,430,439],
[445,454,439,441,0,442,429,435],
[444,442,441,440,448,0,437,447],
[441,437,437,460,461,453,0,461],
[447,455,440,451,455,443,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,441,447,454,450,467,473],
[443,0,422,443,433,441,456,456],
[449,468,0,440,463,460,477,458],
[443,447,450,0,464,444,466,426],
[436,457,427,426,0,449,448,436],
[440,449,430,446,441,0,456,454],
[423,434,413,424,442,434,0,441],
[417,434,432,464,454,436,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,467,481,419,440,440,414],
[460,0,447,442,432,428,489,436],
[423,443,0,469,452,454,449,442],
[409,448,421,0,418,406,453,431],
[471,458,438,472,0,450,476,435],
[450,462,436,484,440,0,451,453],
[450,401,441,437,414,439,0,425],
[476,454,448,459,455,437,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,446,466,456,450,456,486],
[453,0,443,452,462,441,431,429],
[444,447,0,463,458,449,459,448],
[424,438,427,0,437,451,447,445],
[434,428,432,453,0,446,434,428],
[440,449,441,439,444,0,452,434],
[434,459,431,443,456,438,0,463],
[404,461,442,445,462,456,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,456,428,418,450,435,450],
[443,0,431,467,409,447,416,429],
[434,459,0,425,457,460,449,435],
[462,423,465,0,443,458,442,431],
[472,481,433,447,0,461,439,462],
[440,443,430,432,429,0,447,430],
[455,474,441,448,451,443,0,440],
[440,461,455,459,428,460,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,468,469,473,470,514,437],
[449,0,461,485,470,493,443,453],
[422,429,0,463,484,498,472,447],
[421,405,427,0,451,421,466,423],
[417,420,406,439,0,451,429,434],
[420,397,392,469,439,0,478,420],
[376,447,418,424,461,412,0,429],
[453,437,443,467,456,470,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,497,435,446,460,438,428],
[481,0,474,444,499,487,465,437],
[393,416,0,442,449,438,406,446],
[455,446,448,0,454,469,422,424],
[444,391,441,436,0,424,410,395],
[430,403,452,421,466,0,411,397],
[452,425,484,468,480,479,0,468],
[462,453,444,466,495,493,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,444,449,452,457,441,457],
[432,0,421,441,422,453,418,450],
[446,469,0,443,451,451,472,451],
[441,449,447,0,432,441,419,433],
[438,468,439,458,0,454,448,457],
[433,437,439,449,436,0,443,463],
[449,472,418,471,442,447,0,455],
[433,440,439,457,433,427,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,397,427,377,402,431,381],
[473,0,430,441,391,411,472,371],
[493,460,0,459,437,466,478,435],
[463,449,431,0,400,406,493,422],
[513,499,453,490,0,428,508,448],
[488,479,424,484,462,0,488,428],
[459,418,412,397,382,402,0,370],
[509,519,455,468,442,462,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,432,434,394,448,432,445],
[424,0,446,433,399,440,446,410],
[458,444,0,444,436,454,434,439],
[456,457,446,0,426,463,439,455],
[496,491,454,464,0,496,461,445],
[442,450,436,427,394,0,421,424],
[458,444,456,451,429,469,0,454],
[445,480,451,435,445,466,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,431,462,464,473,422,428],
[392,0,416,435,407,440,438,421],
[459,474,0,447,433,495,438,411],
[428,455,443,0,413,456,454,420],
[426,483,457,477,0,492,443,419],
[417,450,395,434,398,0,421,430],
[468,452,452,436,447,469,0,459],
[462,469,479,470,471,460,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,437,459,447,404,413,424],
[472,0,473,470,451,444,453,438],
[453,417,0,448,454,433,455,444],
[431,420,442,0,445,403,422,398],
[443,439,436,445,0,431,421,461],
[486,446,457,487,459,0,435,434],
[477,437,435,468,469,455,0,472],
[466,452,446,492,429,456,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,449,432,499,466,455,439],
[410,0,436,472,400,429,416,374],
[441,454,0,416,481,416,434,388],
[458,418,474,0,533,412,424,421],
[391,490,409,357,0,400,420,348],
[424,461,474,478,490,0,432,434],
[435,474,456,466,470,458,0,453],
[451,516,502,469,542,456,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,402,455,396,402,445,443,447],
[488,0,451,444,460,474,477,466],
[435,439,0,406,416,452,442,436],
[494,446,484,0,435,482,455,446],
[488,430,474,455,0,482,457,462],
[445,416,438,408,408,0,424,420],
[447,413,448,435,433,466,0,442],
[443,424,454,444,428,470,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,454,396,455,432,434,437],
[451,0,447,436,457,454,443,459],
[436,443,0,398,446,447,431,411],
[494,454,492,0,491,419,459,450],
[435,433,444,399,0,383,396,434],
[458,436,443,471,507,0,454,450],
[456,447,459,431,494,436,0,436],
[453,431,479,440,456,440,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,580,430,485,446,431,473,479],
[310,0,418,393,381,346,358,405],
[460,472,0,504,411,445,461,503],
[405,497,386,0,383,364,435,443],
[444,509,479,507,0,430,471,473],
[459,544,445,526,460,0,494,483],
[417,532,429,455,419,396,0,504],
[411,485,387,447,417,407,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,445,334,456,371,405,429],
[463,0,575,466,507,427,384,408],
[445,315,0,319,395,302,352,337],
[556,424,571,0,504,500,462,461],
[434,383,495,386,0,346,438,418],
[519,463,588,390,544,0,439,460],
[485,506,538,428,452,451,0,482],
[461,482,553,429,472,430,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,404,440,411,453,417,392],
[470,0,472,449,457,425,449,442],
[486,418,0,477,469,453,470,469],
[450,441,413,0,428,423,415,423],
[479,433,421,462,0,460,441,450],
[437,465,437,467,430,0,468,456],
[473,441,420,475,449,422,0,436],
[498,448,421,467,440,434,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,433,427,416,499,433,426],
[445,0,439,413,398,457,435,448],
[457,451,0,430,429,502,450,476],
[463,477,460,0,430,500,460,467],
[474,492,461,460,0,514,443,475],
[391,433,388,390,376,0,434,421],
[457,455,440,430,447,456,0,431],
[464,442,414,423,415,469,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,440,465,442,495,403,432],
[462,0,438,442,431,484,409,422],
[450,452,0,442,445,494,414,443],
[425,448,448,0,430,486,427,452],
[448,459,445,460,0,493,466,486],
[395,406,396,404,397,0,403,398],
[487,481,476,463,424,487,0,437],
[458,468,447,438,404,492,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,446,437,454,468,461,439],
[433,0,425,429,442,433,453,441],
[444,465,0,448,446,455,453,446],
[453,461,442,0,457,451,452,455],
[436,448,444,433,0,449,433,451],
[422,457,435,439,441,0,451,435],
[429,437,437,438,457,439,0,456],
[451,449,444,435,439,455,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,329,444,469,400,446,445,421],
[561,0,376,449,424,399,446,444],
[446,514,0,400,468,370,420,442],
[421,441,490,0,466,419,415,558],
[490,466,422,424,0,372,441,373],
[444,491,520,471,518,0,563,565],
[445,444,470,475,449,327,0,327],
[469,446,448,332,517,325,563,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,411,415,437,412,438,431,423],
[479,0,460,456,436,443,450,437],
[475,430,0,446,423,470,443,438],
[453,434,444,0,436,445,433,445],
[478,454,467,454,0,441,448,424],
[452,447,420,445,449,0,425,441],
[459,440,447,457,442,465,0,427],
[467,453,452,445,466,449,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,443,463,434,461,478],
[443,0,410,444,455,436,428,427],
[445,480,0,450,447,478,468,452],
[447,446,440,0,448,457,446,434],
[427,435,443,442,0,436,478,447],
[456,454,412,433,454,0,448,453],
[429,462,422,444,412,442,0,466],
[412,463,438,456,443,437,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,452,433,404,451,459,456],
[398,0,441,413,421,460,442,442],
[438,449,0,448,418,464,455,426],
[457,477,442,0,428,504,455,461],
[486,469,472,462,0,463,475,434],
[439,430,426,386,427,0,411,438],
[431,448,435,435,415,479,0,444],
[434,448,464,429,456,452,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,440,440,466,449,470,437],
[420,0,434,436,440,444,424,437],
[450,456,0,446,458,455,472,430],
[450,454,444,0,432,444,463,453],
[424,450,432,458,0,458,447,443],
[441,446,435,446,432,0,473,432],
[420,466,418,427,443,417,0,419],
[453,453,460,437,447,458,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,491,462,440,451,451,453],
[476,0,470,466,469,483,457,444],
[399,420,0,432,429,422,415,464],
[428,424,458,0,435,443,448,433],
[450,421,461,455,0,442,462,446],
[439,407,468,447,448,0,401,437],
[439,433,475,442,428,489,0,470],
[437,446,426,457,444,453,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,459,449,476,431,451,467],
[427,0,447,421,470,408,414,452],
[431,443,0,456,450,422,426,501],
[441,469,434,0,472,474,469,480],
[414,420,440,418,0,413,432,432],
[459,482,468,416,477,0,463,457],
[439,476,464,421,458,427,0,497],
[423,438,389,410,458,433,393,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,430,449,436,445,462,449],
[457,0,460,472,452,432,488,449],
[460,430,0,455,456,448,461,435],
[441,418,435,0,435,425,455,399],
[454,438,434,455,0,432,474,452],
[445,458,442,465,458,0,466,435],
[428,402,429,435,416,424,0,422],
[441,441,455,491,438,455,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,401,410,431,412,444,434],
[463,0,426,435,435,436,458,432],
[489,464,0,431,460,445,472,456],
[480,455,459,0,430,428,448,450],
[459,455,430,460,0,422,473,432],
[478,454,445,462,468,0,447,446],
[446,432,418,442,417,443,0,430],
[456,458,434,440,458,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,411,466,453,459,485,435],
[429,0,441,473,510,503,446,459],
[479,449,0,512,469,525,503,442],
[424,417,378,0,416,409,361,444],
[437,380,421,474,0,458,452,423],
[431,387,365,481,432,0,437,352],
[405,444,387,529,438,453,0,392],
[455,431,448,446,467,538,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,455,455,467,453,422,408],
[427,0,457,444,446,424,446,425],
[435,433,0,441,443,448,425,431],
[435,446,449,0,414,431,425,416],
[423,444,447,476,0,426,422,423],
[437,466,442,459,464,0,440,440],
[468,444,465,465,468,450,0,461],
[482,465,459,474,467,450,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,452,450,460,438,410,466],
[437,0,444,456,450,442,420,471],
[438,446,0,448,451,425,422,471],
[440,434,442,0,447,442,449,449],
[430,440,439,443,0,444,407,452],
[452,448,465,448,446,0,436,456],
[480,470,468,441,483,454,0,479],
[424,419,419,441,438,434,411,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,446,431,442,460,421,438],
[459,0,430,438,437,463,445,452],
[444,460,0,467,454,475,446,471],
[459,452,423,0,433,457,430,470],
[448,453,436,457,0,471,442,472],
[430,427,415,433,419,0,439,439],
[469,445,444,460,448,451,0,453],
[452,438,419,420,418,451,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,462,433,422,417,464,417],
[480,0,469,431,448,439,467,459],
[428,421,0,420,408,392,434,439],
[457,459,470,0,430,430,439,470],
[468,442,482,460,0,453,500,484],
[473,451,498,460,437,0,509,484],
[426,423,456,451,390,381,0,426],
[473,431,451,420,406,406,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,455,445,446,484,465,497],
[450,0,460,471,443,472,486,471],
[435,430,0,468,428,460,488,465],
[445,419,422,0,436,461,450,456],
[444,447,462,454,0,461,482,480],
[406,418,430,429,429,0,475,434],
[425,404,402,440,408,415,0,466],
[393,419,425,434,410,456,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,416,379,416,417,421,405],
[438,0,407,425,429,421,443,399],
[474,483,0,433,434,443,438,430],
[511,465,457,0,468,476,445,468],
[474,461,456,422,0,427,452,445],
[473,469,447,414,463,0,444,410],
[469,447,452,445,438,446,0,444],
[485,491,460,422,445,480,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,444,439,432,438,463,454],
[420,0,471,435,456,473,458,470],
[446,419,0,447,444,450,456,429],
[451,455,443,0,439,442,429,449],
[458,434,446,451,0,450,439,430],
[452,417,440,448,440,0,455,417],
[427,432,434,461,451,435,0,471],
[436,420,461,441,460,473,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,490,458,433,450,450,441],
[381,0,428,411,422,423,406,405],
[400,462,0,437,430,432,441,444],
[432,479,453,0,430,454,440,428],
[457,468,460,460,0,472,439,470],
[440,467,458,436,418,0,455,452],
[440,484,449,450,451,435,0,459],
[449,485,446,462,420,438,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,447,447,440,451,464,418],
[460,0,461,422,459,444,458,445],
[443,429,0,443,439,459,470,426],
[443,468,447,0,443,455,463,444],
[450,431,451,447,0,453,464,439],
[439,446,431,435,437,0,426,428],
[426,432,420,427,426,464,0,438],
[472,445,464,446,451,462,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,451,452,460,452,455,436],
[455,0,424,431,505,441,484,455],
[439,466,0,458,455,461,488,457],
[438,459,432,0,469,450,496,452],
[430,385,435,421,0,433,464,457],
[438,449,429,440,457,0,474,456],
[435,406,402,394,426,416,0,422],
[454,435,433,438,433,434,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,406,422,526,460,433,487],
[451,0,443,462,495,459,360,464],
[484,447,0,423,505,489,413,519],
[468,428,467,0,489,503,482,516],
[364,395,385,401,0,438,384,490],
[430,431,401,387,452,0,387,459],
[457,530,477,408,506,503,0,500],
[403,426,371,374,400,431,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,427,439,459,446,413,434],
[447,0,465,426,432,439,444,430],
[463,425,0,439,460,457,460,449],
[451,464,451,0,430,447,429,445],
[431,458,430,460,0,445,435,442],
[444,451,433,443,445,0,452,448],
[477,446,430,461,455,438,0,446],
[456,460,441,445,448,442,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,418,422,424,406,411,441],
[471,0,459,428,423,431,450,448],
[472,431,0,412,432,427,403,456],
[468,462,478,0,436,430,424,464],
[466,467,458,454,0,430,454,467],
[484,459,463,460,460,0,439,458],
[479,440,487,466,436,451,0,494],
[449,442,434,426,423,432,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,433,422,445,438,444,458],
[446,0,414,414,454,401,464,436],
[457,476,0,453,466,480,444,486],
[468,476,437,0,481,444,477,493],
[445,436,424,409,0,431,428,467],
[452,489,410,446,459,0,452,504],
[446,426,446,413,462,438,0,445],
[432,454,404,397,423,386,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,465,458,445,432,450,442],
[443,0,425,431,416,446,444,443],
[425,465,0,427,431,450,429,414],
[432,459,463,0,439,478,464,433],
[445,474,459,451,0,455,450,460],
[458,444,440,412,435,0,435,431],
[440,446,461,426,440,455,0,430],
[448,447,476,457,430,459,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,457,457,444,478,481,455],
[444,0,454,480,443,471,455,430],
[433,436,0,467,425,450,454,434],
[433,410,423,0,410,448,436,432],
[446,447,465,480,0,427,421,443],
[412,419,440,442,463,0,446,435],
[409,435,436,454,469,444,0,457],
[435,460,456,458,447,455,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,433,415,430,447,424,424],
[460,0,449,461,436,449,457,469],
[457,441,0,415,393,434,440,440],
[475,429,475,0,413,460,442,455],
[460,454,497,477,0,470,426,432],
[443,441,456,430,420,0,420,422],
[466,433,450,448,464,470,0,476],
[466,421,450,435,458,468,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,469,447,445,473,463,479],
[383,0,407,341,389,385,401,431],
[421,483,0,432,422,492,372,433],
[443,549,458,0,461,504,429,488],
[445,501,468,429,0,472,443,486],
[417,505,398,386,418,0,420,440],
[427,489,518,461,447,470,0,463],
[411,459,457,402,404,450,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,478,447,448,437,452,446],
[457,0,498,471,470,473,450,407],
[412,392,0,430,430,385,410,389],
[443,419,460,0,431,417,418,433],
[442,420,460,459,0,447,424,443],
[453,417,505,473,443,0,483,414],
[438,440,480,472,466,407,0,426],
[444,483,501,457,447,476,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,460,465,439,496,456,493],
[401,0,422,415,415,428,381,474],
[430,468,0,468,419,479,445,508],
[425,475,422,0,458,454,414,478],
[451,475,471,432,0,477,415,515],
[394,462,411,436,413,0,399,461],
[434,509,445,476,475,491,0,508],
[397,416,382,412,375,429,382,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,491,501,517,485,414,506,465],
[399,0,474,475,451,429,462,430],
[389,416,0,434,454,396,423,401],
[373,415,456,0,464,410,441,399],
[405,439,436,426,0,416,460,417],
[476,461,494,480,474,0,466,425],
[384,428,467,449,430,424,0,403],
[425,460,489,491,473,465,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,420,427,445,436,441,429],
[435,0,454,437,433,446,438,441],
[470,436,0,447,488,460,450,448],
[463,453,443,0,471,463,458,483],
[445,457,402,419,0,463,433,456],
[454,444,430,427,427,0,448,457],
[449,452,440,432,457,442,0,451],
[461,449,442,407,434,433,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,450,455,445,467,474,455],
[416,0,424,428,432,458,437,426],
[440,466,0,471,440,462,461,448],
[435,462,419,0,445,465,438,433],
[445,458,450,445,0,453,459,431],
[423,432,428,425,437,0,419,426],
[416,453,429,452,431,471,0,428],
[435,464,442,457,459,464,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,454,451,467,417,415,452],
[421,0,392,442,461,424,417,439],
[436,498,0,451,446,475,438,482],
[439,448,439,0,447,422,430,475],
[423,429,444,443,0,437,411,490],
[473,466,415,468,453,0,461,468],
[475,473,452,460,479,429,0,475],
[438,451,408,415,400,422,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,426,455,479,419,473,453],
[406,0,395,401,418,392,414,431],
[464,495,0,461,479,443,461,454],
[435,489,429,0,475,458,446,468],
[411,472,411,415,0,428,429,412],
[471,498,447,432,462,0,460,452],
[417,476,429,444,461,430,0,410],
[437,459,436,422,478,438,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,463,410,427,458,460,447],
[435,0,436,419,443,416,466,448],
[427,454,0,426,466,421,488,428],
[480,471,464,0,436,469,481,462],
[463,447,424,454,0,411,475,435],
[432,474,469,421,479,0,450,453],
[430,424,402,409,415,440,0,396],
[443,442,462,428,455,437,494,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,435,446,432,439,429,443],
[441,0,417,426,427,413,408,402],
[455,473,0,439,425,464,421,433],
[444,464,451,0,438,436,433,404],
[458,463,465,452,0,455,418,470],
[451,477,426,454,435,0,445,440],
[461,482,469,457,472,445,0,424],
[447,488,457,486,420,450,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,488,465,471,425,456,499],
[431,0,471,465,457,424,437,477],
[402,419,0,440,399,443,441,425],
[425,425,450,0,439,416,461,471],
[419,433,491,451,0,416,437,462],
[465,466,447,474,474,0,467,445],
[434,453,449,429,453,423,0,468],
[391,413,465,419,428,445,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,437,445,425,461,462,448],
[426,0,369,426,410,365,398,409],
[453,521,0,420,443,447,482,465],
[445,464,470,0,486,475,454,453],
[465,480,447,404,0,450,482,479],
[429,525,443,415,440,0,466,502],
[428,492,408,436,408,424,0,410],
[442,481,425,437,411,388,480,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,482,469,449,444,432,461,447],
[408,0,457,439,447,442,440,454],
[421,433,0,408,447,430,437,447],
[441,451,482,0,438,436,442,459],
[446,443,443,452,0,451,468,464],
[458,448,460,454,439,0,451,488],
[429,450,453,448,422,439,0,466],
[443,436,443,431,426,402,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,407,458,448,436,429,413],
[466,0,433,466,474,447,451,447],
[483,457,0,454,492,433,456,424],
[432,424,436,0,449,425,437,407],
[442,416,398,441,0,411,440,420],
[454,443,457,465,479,0,449,459],
[461,439,434,453,450,441,0,425],
[477,443,466,483,470,431,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,464,449,453,451,458,483],
[453,0,463,476,435,468,479,481],
[426,427,0,485,426,446,460,458],
[441,414,405,0,412,447,442,463],
[437,455,464,478,0,450,469,492],
[439,422,444,443,440,0,436,471],
[432,411,430,448,421,454,0,480],
[407,409,432,427,398,419,410,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,438,431,444,450,446,445],
[448,0,442,455,442,466,453,456],
[452,448,0,438,442,461,449,436],
[459,435,452,0,429,440,434,441],
[446,448,448,461,0,462,451,444],
[440,424,429,450,428,0,436,434],
[444,437,441,456,439,454,0,435],
[445,434,454,449,446,456,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,468,460,495,468,499,444],
[438,0,438,478,513,458,475,476],
[422,452,0,456,503,419,466,440],
[430,412,434,0,506,431,473,439],
[395,377,387,384,0,385,402,375],
[422,432,471,459,505,0,446,440],
[391,415,424,417,488,444,0,444],
[446,414,450,451,515,450,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,399,451,456,444,453,423],
[469,0,410,489,469,450,470,446],
[491,480,0,486,503,481,494,443],
[439,401,404,0,456,460,434,411],
[434,421,387,434,0,447,437,426],
[446,440,409,430,443,0,422,404],
[437,420,396,456,453,468,0,457],
[467,444,447,479,464,486,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,459,419,450,439,447,428],
[490,0,488,438,474,472,468,464],
[431,402,0,408,435,431,454,413],
[471,452,482,0,457,439,455,453],
[440,416,455,433,0,421,441,413],
[451,418,459,451,469,0,451,424],
[443,422,436,435,449,439,0,424],
[462,426,477,437,477,466,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,460,425,462,430,467,427],
[484,0,501,453,506,448,464,433],
[430,389,0,412,442,391,439,417],
[465,437,478,0,449,420,454,416],
[428,384,448,441,0,407,442,421],
[460,442,499,470,483,0,464,462],
[423,426,451,436,448,426,0,436],
[463,457,473,474,469,428,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,436,426,459,457,454,449],
[438,0,463,451,454,479,442,419],
[454,427,0,413,485,470,446,433],
[464,439,477,0,477,482,463,435],
[431,436,405,413,0,436,420,418],
[433,411,420,408,454,0,411,410],
[436,448,444,427,470,479,0,423],
[441,471,457,455,472,480,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,445,523,580,582,495,519],
[423,0,465,455,572,443,443,475],
[445,425,0,427,522,491,451,454],
[367,435,463,0,473,501,414,457],
[310,318,368,417,0,419,381,431],
[308,447,399,389,471,0,406,390],
[395,447,439,476,509,484,0,476],
[371,415,436,433,459,500,414,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,433,421,445,429,434,461],
[471,0,473,445,465,462,472,455],
[457,417,0,435,442,441,442,451],
[469,445,455,0,438,441,452,440],
[445,425,448,452,0,442,434,443],
[461,428,449,449,448,0,430,452],
[456,418,448,438,456,460,0,450],
[429,435,439,450,447,438,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,396,400,401,443,375,399],
[477,0,455,449,438,475,426,459],
[494,435,0,438,433,425,432,436],
[490,441,452,0,459,464,448,467],
[489,452,457,431,0,487,447,446],
[447,415,465,426,403,0,416,431],
[515,464,458,442,443,474,0,467],
[491,431,454,423,444,459,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,521,558,443,556,557,487,452],
[369,0,434,405,456,439,381,384],
[332,456,0,406,403,473,402,470],
[447,485,484,0,557,558,433,448],
[334,434,487,333,0,471,451,452],
[333,451,417,332,419,0,330,416],
[403,509,488,457,439,560,0,435],
[438,506,420,442,438,474,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,461,446,421,423,440,418],
[474,0,481,438,445,436,448,480],
[429,409,0,424,374,445,412,415],
[444,452,466,0,430,458,441,434],
[469,445,516,460,0,467,471,478],
[467,454,445,432,423,0,452,465],
[450,442,478,449,419,438,0,442],
[472,410,475,456,412,425,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,433,467,465,467,447,449],
[431,0,443,447,451,452,432,411],
[457,447,0,465,449,457,439,424],
[423,443,425,0,444,458,444,426],
[425,439,441,446,0,423,411,413],
[423,438,433,432,467,0,430,438],
[443,458,451,446,479,460,0,451],
[441,479,466,464,477,452,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,458,463,440,483,447,470],
[437,0,453,457,429,462,438,442],
[432,437,0,461,443,474,447,451],
[427,433,429,0,440,456,423,448],
[450,461,447,450,0,460,438,418],
[407,428,416,434,430,0,454,438],
[443,452,443,467,452,436,0,454],
[420,448,439,442,472,452,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,469,458,467,464,470],
[440,0,435,451,421,441,459,461],
[445,455,0,493,440,439,481,489],
[421,439,397,0,420,428,449,459],
[432,469,450,470,0,443,472,460],
[423,449,451,462,447,0,459,483],
[426,431,409,441,418,431,0,457],
[420,429,401,431,430,407,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,460,465,457,432,381,454],
[425,0,417,391,430,411,405,445],
[430,473,0,436,444,443,382,472],
[425,499,454,0,426,429,433,461],
[433,460,446,464,0,410,445,482],
[458,479,447,461,480,0,443,489],
[509,485,508,457,445,447,0,463],
[436,445,418,429,408,401,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,447,462,416,461,420,469],
[454,0,479,455,436,498,447,518],
[443,411,0,411,404,467,433,448],
[428,435,479,0,410,478,441,476],
[474,454,486,480,0,492,431,521],
[429,392,423,412,398,0,415,479],
[470,443,457,449,459,475,0,494],
[421,372,442,414,369,411,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,890,667,443,446,669,446],
[447,0,669,668,445,447,669,447],
[0,221,0,445,222,224,446,0],
[223,222,445,0,445,669,669,445],
[447,445,668,445,0,447,669,224],
[444,443,666,221,443,0,890,0],
[221,221,444,221,221,0,0,0],
[444,443,890,445,666,890,890,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,471,455,436,470,480,475],
[432,0,449,442,437,449,435,435],
[419,441,0,451,452,495,474,487],
[435,448,439,0,428,458,448,463],
[454,453,438,462,0,487,455,447],
[420,441,395,432,403,0,441,435],
[410,455,416,442,435,449,0,471],
[415,455,403,427,443,455,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,442,441,436,447,443,437],
[435,0,431,417,429,409,401,414],
[448,459,0,436,452,448,431,424],
[449,473,454,0,484,438,421,466],
[454,461,438,406,0,443,426,450],
[443,481,442,452,447,0,455,442],
[447,489,459,469,464,435,0,483],
[453,476,466,424,440,448,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,386,413,433,422,447,371],
[432,0,411,455,442,464,508,449],
[504,479,0,411,468,473,504,457],
[477,435,479,0,450,426,474,416],
[457,448,422,440,0,452,479,425],
[468,426,417,464,438,0,439,421],
[443,382,386,416,411,451,0,407],
[519,441,433,474,465,469,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,468,476,485,482,446,424],
[420,0,444,441,461,447,399,426],
[422,446,0,454,422,449,425,442],
[414,449,436,0,430,428,405,411],
[405,429,468,460,0,410,420,420],
[408,443,441,462,480,0,428,431],
[444,491,465,485,470,462,0,459],
[466,464,448,479,470,459,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,445,420,432,415,404,435],
[473,0,468,434,463,460,474,502],
[445,422,0,398,445,432,408,447],
[470,456,492,0,492,436,436,478],
[458,427,445,398,0,463,463,462],
[475,430,458,454,427,0,430,450],
[486,416,482,454,427,460,0,472],
[455,388,443,412,428,440,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,351,405,367,458,460,496],
[456,0,456,477,436,427,459,461],
[539,434,0,459,451,493,423,474],
[485,413,431,0,413,422,437,471],
[523,454,439,477,0,490,475,460],
[432,463,397,468,400,0,538,384],
[430,431,467,453,415,352,0,438],
[394,429,416,419,430,506,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,426,445,441,440,451,462],
[448,0,416,450,445,456,430,439],
[464,474,0,445,467,448,467,454],
[445,440,445,0,461,447,445,461],
[449,445,423,429,0,441,448,467],
[450,434,442,443,449,0,446,461],
[439,460,423,445,442,444,0,446],
[428,451,436,429,423,429,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,529,457,440,485,475,431,452],
[361,0,420,438,373,451,424,434],
[433,470,0,455,500,496,451,452],
[450,452,435,0,461,426,438,439],
[405,517,390,429,0,433,385,443],
[415,439,394,464,457,0,436,408],
[459,466,439,452,505,454,0,469],
[438,456,438,451,447,482,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,433,461,431,456,424,404],
[452,0,460,457,439,452,425,437],
[457,430,0,463,436,462,456,453],
[429,433,427,0,458,449,434,439],
[459,451,454,432,0,452,441,420],
[434,438,428,441,438,0,446,437],
[466,465,434,456,449,444,0,458],
[486,453,437,451,470,453,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,425,437,449,474,477,480],
[445,0,442,461,453,439,458,457],
[465,448,0,420,465,452,496,474],
[453,429,470,0,477,450,456,491],
[441,437,425,413,0,455,458,462],
[416,451,438,440,435,0,470,456],
[413,432,394,434,432,420,0,443],
[410,433,416,399,428,434,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,403,438,413,398,343,362,396],
[487,0,449,418,395,380,434,525],
[452,441,0,326,412,435,397,455],
[477,472,564,0,364,436,437,543],
[492,495,478,526,0,425,452,585],
[547,510,455,454,465,0,415,509],
[528,456,493,453,438,475,0,600],
[494,365,435,347,305,381,290,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,447,450,453,434,452,417],
[460,0,438,476,437,424,447,421],
[443,452,0,475,435,459,452,441],
[440,414,415,0,424,428,414,409],
[437,453,455,466,0,469,453,425],
[456,466,431,462,421,0,444,455],
[438,443,438,476,437,446,0,460],
[473,469,449,481,465,435,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,424,464,459,382,452,458],
[415,0,413,517,428,413,442,431],
[466,477,0,502,419,382,457,462],
[426,373,388,0,414,362,432,402],
[431,462,471,476,0,395,469,442],
[508,477,508,528,495,0,468,439],
[438,448,433,458,421,422,0,417],
[432,459,428,488,448,451,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,437,457,437,429,443,462],
[478,0,462,442,447,450,448,452],
[453,428,0,434,446,455,428,462],
[433,448,456,0,443,436,430,460],
[453,443,444,447,0,459,451,458],
[461,440,435,454,431,0,444,475],
[447,442,462,460,439,446,0,448],
[428,438,428,430,432,415,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,452,441,476,445,457,440],
[445,0,438,445,466,449,453,445],
[438,452,0,439,447,436,446,428],
[449,445,451,0,459,432,444,459],
[414,424,443,431,0,445,417,421],
[445,441,454,458,445,0,458,461],
[433,437,444,446,473,432,0,451],
[450,445,462,431,469,429,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,413,531,427,461,432,485],
[476,0,418,519,458,502,475,497],
[477,472,0,454,441,442,492,445],
[359,371,436,0,463,394,396,377],
[463,432,449,427,0,446,452,414],
[429,388,448,496,444,0,458,459],
[458,415,398,494,438,432,0,438],
[405,393,445,513,476,431,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,503,470,461,451,488,412],
[417,0,412,430,394,413,451,383],
[387,478,0,432,309,370,416,398],
[420,460,458,0,332,399,421,378],
[429,496,581,558,0,449,461,466],
[439,477,520,491,441,0,463,428],
[402,439,474,469,429,427,0,432],
[478,507,492,512,424,462,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,458,492,457,491,487,437],
[435,0,467,478,450,476,470,448],
[432,423,0,453,433,455,442,424],
[398,412,437,0,430,464,456,422],
[433,440,457,460,0,472,469,433],
[399,414,435,426,418,0,424,414],
[403,420,448,434,421,466,0,419],
[453,442,466,468,457,476,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,424,438,446,455,429,433],
[472,0,419,480,423,456,438,449],
[466,471,0,492,448,483,445,463],
[452,410,398,0,421,439,391,401],
[444,467,442,469,0,482,436,457],
[435,434,407,451,408,0,439,418],
[461,452,445,499,454,451,0,495],
[457,441,427,489,433,472,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,446,468,448,453,466,462],
[446,0,451,481,443,446,456,460],
[444,439,0,487,443,468,459,474],
[422,409,403,0,427,420,432,457],
[442,447,447,463,0,455,456,444],
[437,444,422,470,435,0,455,458],
[424,434,431,458,434,435,0,447],
[428,430,416,433,446,432,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,446,431,434,437,445,458],
[427,0,423,416,457,409,445,470],
[444,467,0,422,435,452,468,452],
[459,474,468,0,440,431,424,433],
[456,433,455,450,0,455,420,470],
[453,481,438,459,435,0,449,455],
[445,445,422,466,470,441,0,471],
[432,420,438,457,420,435,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,516,483,437,481,421,548],
[402,0,510,463,385,417,360,495],
[374,380,0,306,383,357,383,411],
[407,427,584,0,515,533,446,507],
[453,505,507,375,0,395,354,466],
[409,473,533,357,495,0,396,467],
[469,530,507,444,536,494,0,563],
[342,395,479,383,424,423,327,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,404,445,397,423,470,401],
[513,0,434,441,453,513,479,421],
[486,456,0,442,453,477,455,394],
[445,449,448,0,414,460,479,417],
[493,437,437,476,0,477,486,518],
[467,377,413,430,413,0,451,428],
[420,411,435,411,404,439,0,460],
[489,469,496,473,372,462,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,444,454,451,429,437,435],
[437,0,459,465,433,439,447,466],
[446,431,0,444,430,415,453,422],
[436,425,446,0,412,414,426,431],
[439,457,460,478,0,454,464,462],
[461,451,475,476,436,0,422,451],
[453,443,437,464,426,468,0,467],
[455,424,468,459,428,439,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,500,468,457,469,443,517,563],
[390,0,501,467,436,442,533,498],
[422,389,0,424,439,429,488,519],
[433,423,466,0,437,452,498,425],
[421,454,451,453,0,458,488,427],
[447,448,461,438,432,0,495,496],
[373,357,402,392,402,395,0,345],
[327,392,371,465,463,394,545,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,419,430,466,450,454,446],
[476,0,405,400,430,404,424,420],
[471,485,0,476,441,465,453,434],
[460,490,414,0,479,460,490,442],
[424,460,449,411,0,426,470,393],
[440,486,425,430,464,0,465,445],
[436,466,437,400,420,425,0,423],
[444,470,456,448,497,445,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,484,421,476,458,483,454],
[400,0,498,386,438,464,440,460],
[406,392,0,429,413,413,427,421],
[469,504,461,0,470,437,434,427],
[414,452,477,420,0,464,441,453],
[432,426,477,453,426,0,476,478],
[407,450,463,456,449,414,0,481],
[436,430,469,463,437,412,409,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,442,391,480,480,469,435],
[413,0,418,416,394,465,464,486],
[448,472,0,408,482,464,498,410],
[499,474,482,0,474,506,451,445],
[410,496,408,416,0,465,475,427],
[410,425,426,384,425,0,417,409],
[421,426,392,439,415,473,0,429],
[455,404,480,445,463,481,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,460,443,423,425,432,429],
[431,0,448,432,416,418,425,463],
[430,442,0,444,419,444,428,425],
[447,458,446,0,450,437,440,456],
[467,474,471,440,0,449,459,477],
[465,472,446,453,441,0,440,467],
[458,465,462,450,431,450,0,441],
[461,427,465,434,413,423,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,447,440,445,447,456,437],
[442,0,450,445,427,457,459,458],
[443,440,0,441,422,453,466,436],
[450,445,449,0,434,462,461,442],
[445,463,468,456,0,463,470,453],
[443,433,437,428,427,0,458,409],
[434,431,424,429,420,432,0,416],
[453,432,454,448,437,481,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,417,334,487,453,455,420],
[424,0,423,455,507,439,400,371],
[473,467,0,450,441,437,421,488],
[556,435,440,0,542,473,436,490],
[403,383,449,348,0,383,382,367],
[437,451,453,417,507,0,418,470],
[435,490,469,454,508,472,0,418],
[470,519,402,400,523,420,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,447,427,447,435,441,439],
[440,0,471,437,452,427,456,420],
[443,419,0,453,424,428,448,436],
[463,453,437,0,437,437,456,450],
[443,438,466,453,0,446,445,443],
[455,463,462,453,444,0,479,450],
[449,434,442,434,445,411,0,433],
[451,470,454,440,447,440,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,486,486,480,458,443,470],
[424,0,434,450,446,398,447,445],
[404,456,0,470,462,420,430,453],
[404,440,420,0,446,385,401,438],
[410,444,428,444,0,391,416,415],
[432,492,470,505,499,0,437,471],
[447,443,460,489,474,453,0,473],
[420,445,437,452,475,419,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,446,466,434,449,444,467],
[442,0,448,450,465,491,458,443],
[444,442,0,451,445,460,443,460],
[424,440,439,0,420,442,450,441],
[456,425,445,470,0,457,448,460],
[441,399,430,448,433,0,457,448],
[446,432,447,440,442,433,0,455],
[423,447,430,449,430,442,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,431,430,517,419,471,478],
[433,0,467,412,474,394,452,430],
[459,423,0,415,480,451,456,445],
[460,478,475,0,495,430,464,459],
[373,416,410,395,0,380,380,413],
[471,496,439,460,510,0,480,444],
[419,438,434,426,510,410,0,436],
[412,460,445,431,477,446,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,454,439,427,453,440,449],
[436,0,447,455,443,469,458,456],
[436,443,0,451,433,463,440,454],
[451,435,439,0,435,474,443,441],
[463,447,457,455,0,465,438,453],
[437,421,427,416,425,0,411,448],
[450,432,450,447,452,479,0,441],
[441,434,436,449,437,442,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,451,430,441,448,432,462],
[450,0,476,445,468,466,477,460],
[439,414,0,413,443,424,437,451],
[460,445,477,0,454,459,462,455],
[449,422,447,436,0,462,453,469],
[442,424,466,431,428,0,459,456],
[458,413,453,428,437,431,0,446],
[428,430,439,435,421,434,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,462,463,475,424,471,433],
[469,0,485,478,479,453,477,441],
[428,405,0,435,458,384,443,402],
[427,412,455,0,445,428,479,435],
[415,411,432,445,0,425,452,439],
[466,437,506,462,465,0,477,453],
[419,413,447,411,438,413,0,415],
[457,449,488,455,451,437,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,466,502,460,460,537,468],
[451,0,488,477,454,439,488,440],
[424,402,0,473,409,474,481,430],
[388,413,417,0,442,425,468,405],
[430,436,481,448,0,471,496,472],
[430,451,416,465,419,0,477,424],
[353,402,409,422,394,413,0,411],
[422,450,460,485,418,466,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,395,412,389,409,459,437,458],
[495,0,453,471,471,500,475,407],
[478,437,0,454,498,414,551,502],
[501,419,436,0,500,525,525,455],
[481,419,392,390,0,438,394,435],
[431,390,476,365,452,0,484,501],
[453,415,339,365,496,406,0,404],
[432,483,388,435,455,389,486,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,507,500,439,480,501,451],
[414,0,525,473,444,451,450,476],
[383,365,0,407,404,417,438,392],
[390,417,483,0,425,425,441,451],
[451,446,486,465,0,474,474,435],
[410,439,473,465,416,0,444,456],
[389,440,452,449,416,446,0,444],
[439,414,498,439,455,434,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,437,436,442,448,425,477],
[426,0,425,417,406,435,413,458],
[453,465,0,419,441,444,457,455],
[454,473,471,0,443,448,450,498],
[448,484,449,447,0,450,443,482],
[442,455,446,442,440,0,434,471],
[465,477,433,440,447,456,0,461],
[413,432,435,392,408,419,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,470,429,413,424,494,421,413],
[420,0,424,398,366,456,385,391],
[461,466,0,395,428,473,418,428],
[477,492,495,0,413,492,474,430],
[466,524,462,477,0,530,456,391],
[396,434,417,398,360,0,450,338],
[469,505,472,416,434,440,0,452],
[477,499,462,460,499,552,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,436,451,455,447,441,434],
[436,0,418,443,434,446,448,419],
[454,472,0,448,452,450,443,451],
[439,447,442,0,432,452,457,444],
[435,456,438,458,0,444,450,437],
[443,444,440,438,446,0,459,429],
[449,442,447,433,440,431,0,447],
[456,471,439,446,453,461,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,455,465,437,451,440,460],
[438,0,452,432,423,466,441,448],
[435,438,0,441,431,449,446,439],
[425,458,449,0,416,447,446,435],
[453,467,459,474,0,462,463,434],
[439,424,441,443,428,0,451,451],
[450,449,444,444,427,439,0,399],
[430,442,451,455,456,439,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,452,439,419,417,436,428],
[460,0,486,429,424,443,424,418],
[438,404,0,430,436,452,455,462],
[451,461,460,0,494,457,465,434],
[471,466,454,396,0,469,436,459],
[473,447,438,433,421,0,450,420],
[454,466,435,425,454,440,0,442],
[462,472,428,456,431,470,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,396,426,386,415,426,446,422],
[494,0,459,459,398,460,449,477],
[464,431,0,434,443,450,445,446],
[504,431,456,0,438,438,466,446],
[475,492,447,452,0,469,445,488],
[464,430,440,452,421,0,443,475],
[444,441,445,424,445,447,0,457],
[468,413,444,444,402,415,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,389,425,451,437,414,428,442],
[501,0,400,471,509,428,468,494],
[465,490,0,477,444,445,444,511],
[439,419,413,0,451,409,427,499],
[453,381,446,439,0,429,418,536],
[476,462,445,481,461,0,455,500],
[462,422,446,463,472,435,0,477],
[448,396,379,391,354,390,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,447,459,477,459,465,436],
[424,0,432,360,419,431,448,441],
[443,458,0,513,472,433,422,435],
[431,530,377,0,491,368,449,439],
[413,471,418,399,0,413,412,429],
[431,459,457,522,477,0,450,472],
[425,442,468,441,478,440,0,454],
[454,449,455,451,461,418,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,559,460,495,466,451,511],
[450,0,479,389,428,426,355,457],
[331,411,0,335,370,373,356,436],
[430,501,555,0,531,461,421,520],
[395,462,520,359,0,425,392,423],
[424,464,517,429,465,0,382,519],
[439,535,534,469,498,508,0,559],
[379,433,454,370,467,371,331,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,478,425,403,406,404,424],
[470,0,453,479,452,442,448,457],
[412,437,0,437,421,442,413,416],
[465,411,453,0,424,422,439,411],
[487,438,469,466,0,438,453,473],
[484,448,448,468,452,0,440,448],
[486,442,477,451,437,450,0,440],
[466,433,474,479,417,442,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,440,438,458,443,460,441],
[438,0,437,468,458,473,440,425],
[450,453,0,452,470,485,458,440],
[452,422,438,0,471,458,442,440],
[432,432,420,419,0,405,467,450],
[447,417,405,432,485,0,478,448],
[430,450,432,448,423,412,0,435],
[449,465,450,450,440,442,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,476,460,461,458,464,444],
[416,0,446,438,435,440,439,442],
[414,444,0,440,418,443,452,439],
[430,452,450,0,439,445,437,462],
[429,455,472,451,0,432,449,457],
[432,450,447,445,458,0,440,462],
[426,451,438,453,441,450,0,466],
[446,448,451,428,433,428,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,434,443,433,439,469,404],
[458,0,457,450,457,434,466,428],
[456,433,0,456,454,456,468,445],
[447,440,434,0,444,421,449,424],
[457,433,436,446,0,413,474,419],
[451,456,434,469,477,0,469,439],
[421,424,422,441,416,421,0,403],
[486,462,445,466,471,451,487,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,436,430,442,449,433,451],
[448,0,427,429,429,438,427,462],
[454,463,0,439,429,444,443,474],
[460,461,451,0,444,451,447,453],
[448,461,461,446,0,460,440,464],
[441,452,446,439,430,0,437,460],
[457,463,447,443,450,453,0,484],
[439,428,416,437,426,430,406,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,487,463,470,456,445,452,440],
[403,0,430,435,424,441,429,399],
[427,460,0,425,428,430,421,413],
[420,455,465,0,438,457,441,418],
[434,466,462,452,0,452,446,451],
[445,449,460,433,438,0,440,425],
[438,461,469,449,444,450,0,444],
[450,491,477,472,439,465,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,438,454,457,404,439,424],
[445,0,446,452,468,448,439,430],
[452,444,0,432,429,431,445,446],
[436,438,458,0,451,433,436,459],
[433,422,461,439,0,445,422,432],
[486,442,459,457,445,0,445,443],
[451,451,445,454,468,445,0,428],
[466,460,444,431,458,447,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,427,448,454,431,460,438],
[471,0,440,461,458,452,470,454],
[463,450,0,452,460,433,459,463],
[442,429,438,0,466,441,478,433],
[436,432,430,424,0,407,426,411],
[459,438,457,449,483,0,469,465],
[430,420,431,412,464,421,0,427],
[452,436,427,457,479,425,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,434,441,491,455,462,441],
[440,0,437,465,467,401,430,467],
[456,453,0,458,456,454,435,468],
[449,425,432,0,431,414,435,464],
[399,423,434,459,0,429,434,447],
[435,489,436,476,461,0,482,462],
[428,460,455,455,456,408,0,474],
[449,423,422,426,443,428,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,455,450,477,443,498,438],
[433,0,445,441,449,454,472,446],
[435,445,0,436,437,434,477,441],
[440,449,454,0,450,456,484,451],
[413,441,453,440,0,444,461,450],
[447,436,456,434,446,0,480,466],
[392,418,413,406,429,410,0,398],
[452,444,449,439,440,424,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,437,441,457,433,458,451],
[474,0,429,454,487,432,458,444],
[453,461,0,445,470,460,448,463],
[449,436,445,0,471,433,422,437],
[433,403,420,419,0,418,432,403],
[457,458,430,457,472,0,444,458],
[432,432,442,468,458,446,0,458],
[439,446,427,453,487,432,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,434,456,459,438,461,447],
[457,0,437,448,451,442,457,463],
[456,453,0,422,453,458,443,438],
[434,442,468,0,454,447,444,473],
[431,439,437,436,0,418,440,453],
[452,448,432,443,472,0,420,459],
[429,433,447,446,450,470,0,445],
[443,427,452,417,437,431,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,441,437,459,419,423,429],
[440,0,432,412,432,433,434,423],
[449,458,0,434,435,443,433,432],
[453,478,456,0,449,430,439,437],
[431,458,455,441,0,411,446,424],
[471,457,447,460,479,0,430,465],
[467,456,457,451,444,460,0,448],
[461,467,458,453,466,425,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,445,460,465,465,452],
[443,0,474,456,455,463,471,429],
[445,416,0,460,437,449,456,461],
[445,434,430,0,418,435,423,427],
[430,435,453,472,0,456,437,461],
[425,427,441,455,434,0,421,404],
[425,419,434,467,453,469,0,460],
[438,461,429,463,429,486,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,492,442,453,466,453,442],
[436,0,475,419,426,449,455,446],
[398,415,0,407,425,413,414,401],
[448,471,483,0,432,445,447,432],
[437,464,465,458,0,452,443,478],
[424,441,477,445,438,0,462,460],
[437,435,476,443,447,428,0,448],
[448,444,489,458,412,430,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,404,455,437,432,430,446],
[450,0,476,478,450,436,498,471],
[486,414,0,464,436,417,469,474],
[435,412,426,0,431,399,417,448],
[453,440,454,459,0,417,434,439],
[458,454,473,491,473,0,438,465],
[460,392,421,473,456,452,0,472],
[444,419,416,442,451,425,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,494,451,402,352,479,379],
[417,0,462,420,459,354,476,358],
[396,428,0,416,473,395,520,386],
[439,470,474,0,487,457,517,445],
[488,431,417,403,0,370,447,378],
[538,536,495,433,520,0,490,495],
[411,414,370,373,443,400,0,301],
[511,532,504,445,512,395,589,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,468,436,466,448,455,446],
[448,0,450,451,461,446,437,447],
[422,440,0,442,448,443,433,441],
[454,439,448,0,463,450,458,458],
[424,429,442,427,0,443,451,452],
[442,444,447,440,447,0,450,435],
[435,453,457,432,439,440,0,445],
[444,443,449,432,438,455,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,667,336,557,556,445,667,446],
[223,0,447,111,447,444,668,224],
[554,443,0,554,667,554,554,557],
[333,779,336,0,779,557,668,446],
[334,443,223,111,0,222,444,222],
[445,446,336,333,668,0,667,446],
[223,222,336,222,446,223,0,335],
[444,666,333,444,668,444,555,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,396,467,455,414,436,449],
[449,0,406,470,459,457,415,464],
[494,484,0,480,421,472,464,455],
[423,420,410,0,428,401,432,473],
[435,431,469,462,0,444,428,480],
[476,433,418,489,446,0,413,477],
[454,475,426,458,462,477,0,458],
[441,426,435,417,410,413,432,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,450,456,418,426,431,464],
[443,0,460,477,434,458,450,451],
[440,430,0,450,424,440,402,453],
[434,413,440,0,388,432,407,446],
[472,456,466,502,0,492,432,503],
[464,432,450,458,398,0,411,456],
[459,440,488,483,458,479,0,501],
[426,439,437,444,387,434,389,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,453,442,446,465,457,459],
[446,0,449,442,433,477,449,459],
[437,441,0,443,437,453,454,456],
[448,448,447,0,444,486,449,473],
[444,457,453,446,0,466,456,458],
[425,413,437,404,424,0,447,455],
[433,441,436,441,434,443,0,451],
[431,431,434,417,432,435,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,494,472,472,459,482,479],
[457,0,470,417,443,437,474,450],
[396,420,0,439,429,413,443,433],
[418,473,451,0,426,403,463,459],
[418,447,461,464,0,415,451,446],
[431,453,477,487,475,0,456,471],
[408,416,447,427,439,434,0,438],
[411,440,457,431,444,419,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,445,429,465,452,424,388],
[468,0,458,466,439,493,465,435],
[445,432,0,418,467,474,446,423],
[461,424,472,0,487,482,422,410],
[425,451,423,403,0,454,427,415],
[438,397,416,408,436,0,437,464],
[466,425,444,468,463,453,0,401],
[502,455,467,480,475,426,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,456,439,415,419,450,476],
[405,0,416,438,425,419,435,432],
[434,474,0,428,411,409,448,434],
[451,452,462,0,447,451,464,443],
[475,465,479,443,0,472,464,478],
[471,471,481,439,418,0,447,452],
[440,455,442,426,426,443,0,449],
[414,458,456,447,412,438,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,463,411,439,393,438,401],
[460,0,463,386,427,413,461,410],
[427,427,0,417,442,411,427,391],
[479,504,473,0,476,427,444,446],
[451,463,448,414,0,422,439,428],
[497,477,479,463,468,0,470,423],
[452,429,463,446,451,420,0,417],
[489,480,499,444,462,467,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,480,408,477,447,431,454],
[436,0,459,424,468,437,440,459],
[410,431,0,421,449,451,394,453],
[482,466,469,0,474,443,484,434],
[413,422,441,416,0,430,411,436],
[443,453,439,447,460,0,462,459],
[459,450,496,406,479,428,0,432],
[436,431,437,456,454,431,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,418,445,412,449,438,425],
[441,0,421,421,395,450,441,448],
[472,469,0,440,464,470,469,462],
[445,469,450,0,437,454,434,445],
[478,495,426,453,0,463,471,461],
[441,440,420,436,427,0,423,424],
[452,449,421,456,419,467,0,437],
[465,442,428,445,429,466,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,451,438,451,440,473,455],
[460,0,490,461,492,443,488,482],
[439,400,0,438,505,411,492,487],
[452,429,452,0,431,427,449,473],
[439,398,385,459,0,412,425,460],
[450,447,479,463,478,0,485,442],
[417,402,398,441,465,405,0,442],
[435,408,403,417,430,448,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,425,457,445,438,438,450],
[451,0,444,450,451,453,448,449],
[465,446,0,461,452,440,448,451],
[433,440,429,0,438,445,429,443],
[445,439,438,452,0,446,462,460],
[452,437,450,445,444,0,462,460],
[452,442,442,461,428,428,0,445],
[440,441,439,447,430,430,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,439,478,451,431,450,470],
[460,0,450,438,425,449,439,445],
[451,440,0,446,419,434,436,454],
[412,452,444,0,447,435,427,434],
[439,465,471,443,0,446,455,459],
[459,441,456,455,444,0,471,466],
[440,451,454,463,435,419,0,450],
[420,445,436,456,431,424,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,484,465,501,450,441,504,462],
[406,0,423,453,445,415,453,424],
[425,467,0,473,448,459,466,459],
[389,437,417,0,407,439,457,411],
[440,445,442,483,0,442,471,431],
[449,475,431,451,448,0,471,413],
[386,437,424,433,419,419,0,400],
[428,466,431,479,459,477,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,419,440,451,435,451,432],
[455,0,441,474,436,438,457,438],
[471,449,0,462,448,452,468,442],
[450,416,428,0,423,424,444,445],
[439,454,442,467,0,439,460,435],
[455,452,438,466,451,0,458,433],
[439,433,422,446,430,432,0,420],
[458,452,448,445,455,457,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,457,486,469,430,446,478],
[425,0,393,434,441,421,433,442],
[433,497,0,461,492,489,441,459],
[404,456,429,0,464,451,448,435],
[421,449,398,426,0,443,429,438],
[460,469,401,439,447,0,428,460],
[444,457,449,442,461,462,0,474],
[412,448,431,455,452,430,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,447,452,421,447,442,442],
[437,0,447,447,453,429,449,453],
[443,443,0,481,428,439,464,430],
[438,443,409,0,423,445,447,431],
[469,437,462,467,0,462,457,472],
[443,461,451,445,428,0,458,434],
[448,441,426,443,433,432,0,450],
[448,437,460,459,418,456,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,492,451,463,471,483,434],
[411,0,479,502,448,455,450,398],
[398,411,0,440,478,435,434,436],
[439,388,450,0,435,468,440,446],
[427,442,412,455,0,448,436,467],
[419,435,455,422,442,0,414,407],
[407,440,456,450,454,476,0,416],
[456,492,454,444,423,483,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,461,502,463,473,485,445],
[448,0,474,499,410,518,475,441],
[429,416,0,493,464,494,496,429],
[388,391,397,0,353,416,418,389],
[427,480,426,537,0,470,475,403],
[417,372,396,474,420,0,459,417],
[405,415,394,472,415,431,0,425],
[445,449,461,501,487,473,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,474,483,489,464,488,442],
[463,0,430,460,457,468,473,447],
[416,460,0,457,468,450,477,447],
[407,430,433,0,442,455,429,432],
[401,433,422,448,0,425,467,407],
[426,422,440,435,465,0,463,446],
[402,417,413,461,423,427,0,387],
[448,443,443,458,483,444,503,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,443,445,438,425,419,423],
[456,0,433,454,450,436,441,437],
[447,457,0,448,437,443,421,460],
[445,436,442,0,446,442,442,455],
[452,440,453,444,0,448,430,452],
[465,454,447,448,442,0,449,442],
[471,449,469,448,460,441,0,431],
[467,453,430,435,438,448,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,440,502,519,496,467,463],
[409,0,440,448,505,448,439,449],
[450,450,0,500,489,487,444,450],
[388,442,390,0,465,430,446,442],
[371,385,401,425,0,400,386,430],
[394,442,403,460,490,0,429,431],
[423,451,446,444,504,461,0,449],
[427,441,440,448,460,459,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,469,483,443,448,460,466],
[424,0,455,437,429,445,434,436],
[421,435,0,453,448,449,444,447],
[407,453,437,0,427,435,433,427],
[447,461,442,463,0,466,437,472],
[442,445,441,455,424,0,433,441],
[430,456,446,457,453,457,0,474],
[424,454,443,463,418,449,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,453,475,414,435,429,440],
[444,0,452,476,458,449,420,447],
[437,438,0,449,417,437,417,425],
[415,414,441,0,424,436,405,415],
[476,432,473,466,0,465,430,433],
[455,441,453,454,425,0,428,424],
[461,470,473,485,460,462,0,445],
[450,443,465,475,457,466,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,459,424,485,471,430,463],
[464,0,464,434,496,469,459,488],
[431,426,0,414,474,448,447,462],
[466,456,476,0,478,445,450,475],
[405,394,416,412,0,440,403,434],
[419,421,442,445,450,0,440,450],
[460,431,443,440,487,450,0,488],
[427,402,428,415,456,440,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,442,427,428,389,426,468],
[448,0,416,427,462,434,441,460],
[448,474,0,449,454,441,455,459],
[463,463,441,0,490,446,478,457],
[462,428,436,400,0,425,439,463],
[501,456,449,444,465,0,465,478],
[464,449,435,412,451,425,0,436],
[422,430,431,433,427,412,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,433,428,434,470,468,414],
[452,0,424,452,456,495,489,437],
[457,466,0,474,449,486,469,432],
[462,438,416,0,428,436,419,396],
[456,434,441,462,0,495,462,464],
[420,395,404,454,395,0,425,403],
[422,401,421,471,428,465,0,436],
[476,453,458,494,426,487,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,421,446,451,384,418,426],
[465,0,411,474,490,424,472,459],
[469,479,0,480,501,427,449,468],
[444,416,410,0,471,406,436,416],
[439,400,389,419,0,417,394,398],
[506,466,463,484,473,0,470,434],
[472,418,441,454,496,420,0,449],
[464,431,422,474,492,456,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,449,441,457,470,479,478],
[434,0,410,417,390,442,476,460],
[441,480,0,469,445,466,435,459],
[449,473,421,0,422,440,472,478],
[433,500,445,468,0,512,460,494],
[420,448,424,450,378,0,473,473],
[411,414,455,418,430,417,0,425],
[412,430,431,412,396,417,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,443,421,448,430,448,424],
[424,0,434,418,467,443,442,449],
[447,456,0,443,459,466,440,472],
[469,472,447,0,472,440,457,500],
[442,423,431,418,0,428,421,413],
[460,447,424,450,462,0,444,468],
[442,448,450,433,469,446,0,425],
[466,441,418,390,477,422,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,479,470,465,415,436,440],
[428,0,449,464,440,466,425,445],
[411,441,0,401,418,408,396,402],
[420,426,489,0,442,440,424,417],
[425,450,472,448,0,459,434,442],
[475,424,482,450,431,0,426,459],
[454,465,494,466,456,464,0,440],
[450,445,488,473,448,431,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,448,453,466,453,478,439],
[449,0,444,435,455,443,455,442],
[442,446,0,444,464,475,464,446],
[437,455,446,0,435,446,456,440],
[424,435,426,455,0,445,462,441],
[437,447,415,444,445,0,460,424],
[412,435,426,434,428,430,0,425],
[451,448,444,450,449,466,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,462,427,443,447,447,428],
[436,0,425,440,414,448,433,428],
[428,465,0,446,438,456,433,440],
[463,450,444,0,414,460,443,430],
[447,476,452,476,0,469,442,446],
[443,442,434,430,421,0,411,427],
[443,457,457,447,448,479,0,457],
[462,462,450,460,444,463,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,436,430,464,447,446,421],
[455,0,476,450,485,452,454,437],
[454,414,0,439,452,439,446,423],
[460,440,451,0,473,436,463,447],
[426,405,438,417,0,433,438,422],
[443,438,451,454,457,0,454,418],
[444,436,444,427,452,436,0,435],
[469,453,467,443,468,472,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,466,467,448,465,472,452],
[451,0,453,479,463,445,457,456],
[424,437,0,462,421,442,451,455],
[423,411,428,0,420,391,417,445],
[442,427,469,470,0,446,433,450],
[425,445,448,499,444,0,448,431],
[418,433,439,473,457,442,0,460],
[438,434,435,445,440,459,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,454,456,457,442,462,469],
[423,0,443,461,449,447,467,429],
[436,447,0,457,442,456,465,441],
[434,429,433,0,434,446,455,427],
[433,441,448,456,0,436,441,450],
[448,443,434,444,454,0,441,435],
[428,423,425,435,449,449,0,430],
[421,461,449,463,440,455,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,430,422,451,431,440,438],
[435,0,466,442,426,440,418,449],
[460,424,0,440,451,464,446,470],
[468,448,450,0,441,447,424,475],
[439,464,439,449,0,458,436,448],
[459,450,426,443,432,0,417,465],
[450,472,444,466,454,473,0,443],
[452,441,420,415,442,425,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,458,460,461,466,473,498],
[460,0,466,464,463,452,483,438],
[432,424,0,484,502,502,474,505],
[430,426,406,0,481,489,423,443],
[429,427,388,409,0,434,371,411],
[424,438,388,401,456,0,419,416],
[417,407,416,467,519,471,0,434],
[392,452,385,447,479,474,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,441,438,460,437,466,434],
[450,0,423,427,440,437,458,440],
[449,467,0,444,465,428,471,473],
[452,463,446,0,428,454,490,422],
[430,450,425,462,0,440,457,469],
[453,453,462,436,450,0,464,440],
[424,432,419,400,433,426,0,425],
[456,450,417,468,421,450,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,411,439,413,449,406,422],
[453,0,444,450,444,483,433,442],
[479,446,0,461,441,475,455,459],
[451,440,429,0,441,428,417,453],
[477,446,449,449,0,475,422,447],
[441,407,415,462,415,0,411,440],
[484,457,435,473,468,479,0,477],
[468,448,431,437,443,450,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,413,472,488,460,402,457,438],
[477,0,411,470,436,430,477,433],
[418,479,0,470,421,453,498,442],
[402,420,420,0,392,392,448,419],
[430,454,469,498,0,465,473,450],
[488,460,437,498,425,0,476,480],
[433,413,392,442,417,414,0,433],
[452,457,448,471,440,410,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,380,447,383,287,382,383,414],
[510,0,444,413,415,413,448,447],
[443,446,0,413,412,506,477,511],
[507,477,477,0,510,601,445,514],
[603,475,478,380,0,507,507,448],
[508,477,384,289,383,0,416,481],
[507,442,413,445,383,474,0,510],
[476,443,379,376,442,409,380,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,440,430,435,441,428,423],
[463,0,439,450,434,447,450,417],
[450,451,0,432,440,460,453,441],
[460,440,458,0,439,445,447,448],
[455,456,450,451,0,430,463,442],
[449,443,430,445,460,0,431,436],
[462,440,437,443,427,459,0,435],
[467,473,449,442,448,454,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,380,442,429,485,399,433,456],
[510,0,499,480,483,449,433,490],
[448,391,0,404,435,390,418,440],
[461,410,486,0,442,427,423,459],
[405,407,455,448,0,400,423,409],
[491,441,500,463,490,0,464,462],
[457,457,472,467,467,426,0,500],
[434,400,450,431,481,428,390,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,469,462,461,460,443,478,448],
[421,0,454,431,457,444,465,454],
[428,436,0,461,447,452,443,451],
[429,459,429,0,442,441,442,436],
[430,433,443,448,0,438,436,452],
[447,446,438,449,452,0,465,456],
[412,425,447,448,454,425,0,431],
[442,436,439,454,438,434,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,435,431,438,431,428,431],
[423,0,438,419,435,419,436,411],
[455,452,0,436,436,444,435,428],
[459,471,454,0,452,443,465,439],
[452,455,454,438,0,446,444,435],
[459,471,446,447,444,0,455,448],
[462,454,455,425,446,435,0,446],
[459,479,462,451,455,442,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,390,450,445,427,428,437,451],
[500,0,459,472,420,479,454,469],
[440,431,0,455,442,463,441,444],
[445,418,435,0,435,456,407,433],
[463,470,448,455,0,440,456,466],
[462,411,427,434,450,0,412,428],
[453,436,449,483,434,478,0,448],
[439,421,446,457,424,462,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,448,424,460,445,475,460],
[472,0,448,441,444,446,471,461],
[442,442,0,423,442,448,493,446],
[466,449,467,0,453,450,479,441],
[430,446,448,437,0,454,495,457],
[445,444,442,440,436,0,478,443],
[415,419,397,411,395,412,0,441],
[430,429,444,449,433,447,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,431,363,384,428,459,483],
[460,0,468,380,384,478,471,498],
[459,422,0,386,391,463,457,498],
[527,510,504,0,459,501,431,524],
[506,506,499,431,0,508,516,526],
[462,412,427,389,382,0,462,460],
[431,419,433,459,374,428,0,507],
[407,392,392,366,364,430,383,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,499,444,470,442,497,436],
[465,0,461,442,448,436,451,454],
[391,429,0,467,494,462,447,391],
[446,448,423,0,441,471,411,434],
[420,442,396,449,0,457,381,346],
[448,454,428,419,433,0,429,376],
[393,439,443,479,509,461,0,388],
[454,436,499,456,544,514,502,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,427,422,411,426,417,430],
[460,0,427,421,421,429,406,404],
[463,463,0,429,436,448,435,430],
[468,469,461,0,457,454,451,425],
[479,469,454,433,0,445,451,475],
[464,461,442,436,445,0,451,452],
[473,484,455,439,439,439,0,464],
[460,486,460,465,415,438,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,452,452,450,472,458,427],
[449,0,484,432,450,458,455,419],
[438,406,0,430,435,435,420,433],
[438,458,460,0,448,455,458,447],
[440,440,455,442,0,455,443,418],
[418,432,455,435,435,0,441,434],
[432,435,470,432,447,449,0,429],
[463,471,457,443,472,456,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,458,479,445,457,461,473],
[425,0,447,472,453,468,459,499],
[432,443,0,472,447,460,456,465],
[411,418,418,0,443,439,441,448],
[445,437,443,447,0,451,475,476],
[433,422,430,451,439,0,448,469],
[429,431,434,449,415,442,0,440],
[417,391,425,442,414,421,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,462,445,445,512,449,408],
[445,0,445,435,471,482,473,441],
[428,445,0,474,470,517,463,426],
[445,455,416,0,459,492,474,433],
[445,419,420,431,0,498,428,412],
[378,408,373,398,392,0,408,411],
[441,417,427,416,462,482,0,451],
[482,449,464,457,478,479,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,462,445,444,458,457,446],
[431,0,464,437,440,438,452,442],
[428,426,0,428,438,444,432,421],
[445,453,462,0,447,443,444,439],
[446,450,452,443,0,441,446,448],
[432,452,446,447,449,0,442,445],
[433,438,458,446,444,448,0,446],
[444,448,469,451,442,445,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,430,433,430,440,440,405],
[461,0,467,448,466,452,465,440],
[460,423,0,433,444,449,457,438],
[457,442,457,0,450,466,449,432],
[460,424,446,440,0,445,447,449],
[450,438,441,424,445,0,438,402],
[450,425,433,441,443,452,0,432],
[485,450,452,458,441,488,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,455,456,500,482,425,379],
[423,0,433,440,443,479,400,416],
[435,457,0,431,481,500,448,427],
[434,450,459,0,508,536,451,422],
[390,447,409,382,0,448,387,447],
[408,411,390,354,442,0,398,407],
[465,490,442,439,503,492,0,437],
[511,474,463,468,443,483,453,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,472,493,466,490,420,472],
[405,0,451,476,448,459,416,423],
[418,439,0,438,429,452,425,406],
[397,414,452,0,428,461,427,411],
[424,442,461,462,0,456,420,383],
[400,431,438,429,434,0,396,390],
[470,474,465,463,470,494,0,424],
[418,467,484,479,507,500,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,439,466,453,437,442,444],
[467,0,462,440,449,455,438,478],
[451,428,0,466,452,459,452,457],
[424,450,424,0,431,430,435,465],
[437,441,438,459,0,437,437,449],
[453,435,431,460,453,0,429,463],
[448,452,438,455,453,461,0,456],
[446,412,433,425,441,427,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,377,404,397,393,440,454,408],
[513,0,461,430,454,479,504,471],
[486,429,0,472,442,500,469,493],
[493,460,418,0,461,436,460,448],
[497,436,448,429,0,485,476,443],
[450,411,390,454,405,0,446,449],
[436,386,421,430,414,444,0,444],
[482,419,397,442,447,441,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,447,455,433,484,452,448],
[412,0,418,430,440,471,444,428],
[443,472,0,453,465,494,471,473],
[435,460,437,0,461,495,462,463],
[457,450,425,429,0,492,443,416],
[406,419,396,395,398,0,406,389],
[438,446,419,428,447,484,0,460],
[442,462,417,427,474,501,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,495,490,468,471,437,468,447],
[395,0,436,410,407,432,432,428],
[400,454,0,439,424,392,394,377],
[422,480,451,0,387,384,399,415],
[419,483,466,503,0,427,449,451],
[453,458,498,506,463,0,427,469],
[422,458,496,491,441,463,0,478],
[443,462,513,475,439,421,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,455,469,451,427,460,451],
[429,0,449,430,426,433,439,444],
[435,441,0,424,435,416,423,431],
[421,460,466,0,450,442,423,438],
[439,464,455,440,0,457,420,464],
[463,457,474,448,433,0,458,453],
[430,451,467,467,470,432,0,448],
[439,446,459,452,426,437,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,432,451,425,433,451,442],
[450,0,465,463,445,464,465,453],
[458,425,0,427,418,443,445,437],
[439,427,463,0,423,450,486,450],
[465,445,472,467,0,454,485,443],
[457,426,447,440,436,0,455,472],
[439,425,445,404,405,435,0,445],
[448,437,453,440,447,418,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,397,414,475,395,427,429],
[455,0,426,452,482,431,462,478],
[493,464,0,467,496,422,474,476],
[476,438,423,0,478,423,433,470],
[415,408,394,412,0,394,417,436],
[495,459,468,467,496,0,439,478],
[463,428,416,457,473,451,0,472],
[461,412,414,420,454,412,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,418,435,415,443,444,428,434],
[472,0,469,432,459,455,451,456],
[455,421,0,418,466,429,418,458],
[475,458,472,0,465,463,439,458],
[447,431,424,425,0,431,415,441],
[446,435,461,427,459,0,434,450],
[462,439,472,451,475,456,0,460],
[456,434,432,432,449,440,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,447,464,475,467,444,448],
[434,0,431,454,465,452,471,483],
[443,459,0,460,471,447,453,460],
[426,436,430,0,460,448,463,447],
[415,425,419,430,0,417,456,425],
[423,438,443,442,473,0,443,431],
[446,419,437,427,434,447,0,423],
[442,407,430,443,465,459,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,449,427,451,449,447,466],
[449,0,435,444,443,441,473,447],
[441,455,0,445,450,468,448,437],
[463,446,445,0,442,430,454,462],
[439,447,440,448,0,445,431,465],
[441,449,422,460,445,0,451,448],
[443,417,442,436,459,439,0,443],
[424,443,453,428,425,442,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,423,427,472,468,458,453],
[445,0,448,433,476,488,504,463],
[467,442,0,432,481,476,465,449],
[463,457,458,0,460,514,442,490],
[418,414,409,430,0,420,479,451],
[422,402,414,376,470,0,446,413],
[432,386,425,448,411,444,0,435],
[437,427,441,400,439,477,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,548,433,438,506,507,416],
[425,0,442,418,415,413,421,391],
[342,448,0,419,442,428,486,389],
[457,472,471,0,457,469,460,395],
[452,475,448,433,0,483,470,453],
[384,477,462,421,407,0,467,370],
[383,469,404,430,420,423,0,408],
[474,499,501,495,437,520,482,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,298,593,742,446,595,593],
[444,0,446,742,444,595,297,295],
[592,444,0,593,741,297,594,592],
[297,148,297,0,297,148,297,295],
[148,446,149,593,0,446,296,295],
[444,295,593,742,444,0,297,295],
[295,593,296,593,594,593,0,445],
[297,595,298,595,595,595,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,446,443,466,430,454,457],
[456,0,431,467,447,461,426,472],
[444,459,0,463,459,453,422,454],
[447,423,427,0,448,429,415,435],
[424,443,431,442,0,438,411,457],
[460,429,437,461,452,0,415,458],
[436,464,468,475,479,475,0,469],
[433,418,436,455,433,432,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,473,471,448,462,455,436,416],
[417,0,449,403,402,409,433,459],
[419,441,0,411,447,424,425,397],
[442,487,479,0,449,478,430,446],
[428,488,443,441,0,449,424,441],
[435,481,466,412,441,0,431,438],
[454,457,465,460,466,459,0,432],
[474,431,493,444,449,452,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,473,456,458,427,427,424],
[459,0,452,444,418,432,428,459],
[417,438,0,405,467,393,428,467],
[434,446,485,0,456,445,433,479],
[432,472,423,434,0,413,422,471],
[463,458,497,445,477,0,479,487],
[463,462,462,457,468,411,0,483],
[466,431,423,411,419,403,407,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,371,365,392,353,411,418,424],
[519,0,449,509,500,500,465,442],
[525,441,0,530,511,501,504,513],
[498,381,360,0,395,413,517,420],
[537,390,379,495,0,480,500,453],
[479,390,389,477,410,0,474,494],
[472,425,386,373,390,416,0,438],
[466,448,377,470,437,396,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,446,434,452,501,470,432],
[431,0,455,466,471,480,450,449],
[444,435,0,448,438,467,459,452],
[456,424,442,0,457,450,428,427],
[438,419,452,433,0,485,446,435],
[389,410,423,440,405,0,422,394],
[420,440,431,462,444,468,0,426],
[458,441,438,463,455,496,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,497,459,455,464,488,443,462],
[393,0,422,424,401,456,418,432],
[431,468,0,435,434,460,442,441],
[435,466,455,0,439,493,430,446],
[426,489,456,451,0,473,461,453],
[402,434,430,397,417,0,433,436],
[447,472,448,460,429,457,0,448],
[428,458,449,444,437,454,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,456,427,432,431,437,459],
[457,0,439,437,452,430,456,471],
[434,451,0,426,424,436,459,430],
[463,453,464,0,433,430,453,480],
[458,438,466,457,0,454,463,457],
[459,460,454,460,436,0,452,472],
[453,434,431,437,427,438,0,451],
[431,419,460,410,433,418,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,437,452,463,439,442,431],
[457,0,437,433,460,432,449,434],
[453,453,0,432,480,448,428,439],
[438,457,458,0,472,427,438,439],
[427,430,410,418,0,427,437,438],
[451,458,442,463,463,0,471,447],
[448,441,462,452,453,419,0,440],
[459,456,451,451,452,443,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,439,450,464,459,450,452],
[448,0,440,447,444,452,436,439],
[451,450,0,445,464,446,444,439],
[440,443,445,0,452,453,442,453],
[426,446,426,438,0,444,424,438],
[431,438,444,437,446,0,436,442],
[440,454,446,448,466,454,0,449],
[438,451,451,437,452,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,447,445,472,437,426,438],
[433,0,443,449,468,426,431,449],
[443,447,0,455,512,423,458,464],
[445,441,435,0,476,444,438,451],
[418,422,378,414,0,419,426,437],
[453,464,467,446,471,0,447,440],
[464,459,432,452,464,443,0,452],
[452,441,426,439,453,450,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,442,400,473,463,448,444],
[438,0,453,447,454,495,456,478],
[448,437,0,419,434,463,442,489],
[490,443,471,0,488,508,450,496],
[417,436,456,402,0,480,411,473],
[427,395,427,382,410,0,388,442],
[442,434,448,440,479,502,0,425],
[446,412,401,394,417,448,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,489,468,436,516,480,476,438],
[401,0,434,411,451,444,409,452],
[422,456,0,453,458,470,431,454],
[454,479,437,0,458,460,441,457],
[374,439,432,432,0,436,388,474],
[410,446,420,430,454,0,370,413],
[414,481,459,449,502,520,0,485],
[452,438,436,433,416,477,405,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,503,437,458,452,407,511,502],
[387,0,482,477,462,453,475,482],
[453,408,0,441,416,420,461,431],
[432,413,449,0,436,357,468,432],
[438,428,474,454,0,413,478,484],
[483,437,470,533,477,0,505,503],
[379,415,429,422,412,385,0,376],
[388,408,459,458,406,387,514,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,422,418,449,455,483,422],
[437,0,418,427,445,441,446,469],
[468,472,0,442,429,448,451,436],
[472,463,448,0,462,444,472,483],
[441,445,461,428,0,432,457,457],
[435,449,442,446,458,0,452,456],
[407,444,439,418,433,438,0,422],
[468,421,454,407,433,434,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,436,430,448,449,450,456],
[433,0,443,440,437,441,433,453],
[454,447,0,461,448,442,433,439],
[460,450,429,0,444,456,427,437],
[442,453,442,446,0,466,444,454],
[441,449,448,434,424,0,456,434],
[440,457,457,463,446,434,0,445],
[434,437,451,453,436,456,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,427,441,436,416,429,474],
[470,0,447,440,459,445,463,492],
[463,443,0,459,410,428,433,493],
[449,450,431,0,453,427,438,446],
[454,431,480,437,0,466,430,443],
[474,445,462,463,424,0,442,497],
[461,427,457,452,460,448,0,462],
[416,398,397,444,447,393,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,432,447,432,424,439,443],
[456,0,440,426,438,436,416,445],
[458,450,0,443,449,437,444,466],
[443,464,447,0,453,424,447,430],
[458,452,441,437,0,441,419,445],
[466,454,453,466,449,0,446,445],
[451,474,446,443,471,444,0,445],
[447,445,424,460,445,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,462,489,470,441,422,455],
[425,0,449,461,464,459,418,449],
[428,441,0,426,436,439,413,451],
[401,429,464,0,419,429,397,452],
[420,426,454,471,0,426,395,450],
[449,431,451,461,464,0,455,462],
[468,472,477,493,495,435,0,474],
[435,441,439,438,440,428,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,441,429,420,429,438,436],
[464,0,460,449,457,453,440,464],
[449,430,0,439,442,454,445,457],
[461,441,451,0,426,460,455,449],
[470,433,448,464,0,458,438,462],
[461,437,436,430,432,0,449,441],
[452,450,445,435,452,441,0,471],
[454,426,433,441,428,449,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,446,437,469,450,448,461],
[447,0,422,434,439,428,426,441],
[444,468,0,459,472,459,480,468],
[453,456,431,0,454,443,447,447],
[421,451,418,436,0,435,442,444],
[440,462,431,447,455,0,450,473],
[442,464,410,443,448,440,0,438],
[429,449,422,443,446,417,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,463,443,415,426,433,462],
[447,0,454,425,444,463,432,487],
[427,436,0,425,446,460,434,465],
[447,465,465,0,444,446,456,449],
[475,446,444,446,0,434,451,451],
[464,427,430,444,456,0,441,451],
[457,458,456,434,439,449,0,452],
[428,403,425,441,439,439,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,464,441,460,440,466,487],
[438,0,471,459,460,429,460,478],
[426,419,0,422,457,426,446,433],
[449,431,468,0,446,435,452,450],
[430,430,433,444,0,445,444,451],
[450,461,464,455,445,0,470,472],
[424,430,444,438,446,420,0,459],
[403,412,457,440,439,418,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,431,437,443,445,449,446],
[446,0,465,451,428,461,462,473],
[459,425,0,431,428,453,464,426],
[453,439,459,0,462,471,461,456],
[447,462,462,428,0,465,462,447],
[445,429,437,419,425,0,451,459],
[441,428,426,429,428,439,0,462],
[444,417,464,434,443,431,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,436,422,419,409,456,411],
[433,0,437,464,472,467,465,445],
[454,453,0,453,456,449,428,441],
[468,426,437,0,456,419,443,429],
[471,418,434,434,0,410,428,432],
[481,423,441,471,480,0,447,456],
[434,425,462,447,462,443,0,468],
[479,445,449,461,458,434,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,451,450,449,446,441,437],
[444,0,460,443,430,441,436,435],
[439,430,0,453,445,445,449,442],
[440,447,437,0,457,427,430,451],
[441,460,445,433,0,418,431,436],
[444,449,445,463,472,0,476,464],
[449,454,441,460,459,414,0,434],
[453,455,448,439,454,426,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,450,438,426,422,455,457],
[473,0,444,467,436,457,458,445],
[440,446,0,456,446,450,478,453],
[452,423,434,0,454,436,434,449],
[464,454,444,436,0,439,444,457],
[468,433,440,454,451,0,449,447],
[435,432,412,456,446,441,0,442],
[433,445,437,441,433,443,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,502,448,424,406,426,369,295],
[388,0,289,304,363,289,271,255],
[442,601,0,463,501,522,504,468],
[466,586,427,0,406,487,489,431],
[484,527,389,484,0,548,484,492],
[464,601,368,403,342,0,441,311],
[521,619,386,401,406,449,0,370],
[595,635,422,459,398,579,520,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,406,488,453,431,391,492,424],
[484,0,433,496,453,460,542,475],
[402,457,0,456,452,415,512,436],
[437,394,434,0,398,395,454,416],
[459,437,438,492,0,414,531,517],
[499,430,475,495,476,0,492,519],
[398,348,378,436,359,398,0,416],
[466,415,454,474,373,371,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,464,446,462,434,455,448],
[416,0,455,415,462,423,436,435],
[426,435,0,434,452,414,440,437],
[444,475,456,0,466,429,434,443],
[428,428,438,424,0,412,445,434],
[456,467,476,461,478,0,473,444],
[435,454,450,456,445,417,0,450],
[442,455,453,447,456,446,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,459,454,438,446,455,461],
[450,0,438,442,455,440,425,474],
[431,452,0,431,459,435,460,470],
[436,448,459,0,462,439,481,484],
[452,435,431,428,0,415,449,450],
[444,450,455,451,475,0,471,462],
[435,465,430,409,441,419,0,438],
[429,416,420,406,440,428,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,419,430,441,434,455,464],
[410,0,416,431,431,406,444,433],
[471,474,0,447,444,449,470,460],
[460,459,443,0,455,430,467,429],
[449,459,446,435,0,432,461,461],
[456,484,441,460,458,0,468,449],
[435,446,420,423,429,422,0,426],
[426,457,430,461,429,441,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,459,438,428,437,446,436],
[450,0,467,453,455,445,443,447],
[431,423,0,460,426,436,455,417],
[452,437,430,0,415,457,432,419],
[462,435,464,475,0,465,455,450],
[453,445,454,433,425,0,421,429],
[444,447,435,458,435,469,0,432],
[454,443,473,471,440,461,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,451,468,523,451,466,505],
[445,0,509,494,520,485,495,482],
[439,381,0,454,467,393,451,431],
[422,396,436,0,477,423,423,462],
[367,370,423,413,0,409,467,440],
[439,405,497,467,481,0,480,462],
[424,395,439,467,423,410,0,417],
[385,408,459,428,450,428,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,394,414,411,475,437,407],
[475,0,445,434,473,487,468,433],
[496,445,0,436,471,481,457,447],
[476,456,454,0,469,473,432,422],
[479,417,419,421,0,476,450,440],
[415,403,409,417,414,0,439,406],
[453,422,433,458,440,451,0,441],
[483,457,443,468,450,484,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,445,437,464,463,474,436],
[440,0,439,459,448,448,445,457],
[445,451,0,440,438,486,448,457],
[453,431,450,0,450,468,449,448],
[426,442,452,440,0,456,456,424],
[427,442,404,422,434,0,453,436],
[416,445,442,441,434,437,0,421],
[454,433,433,442,466,454,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,426,425,442,445,439,406],
[463,0,442,449,470,427,446,437],
[464,448,0,427,474,451,432,434],
[465,441,463,0,493,447,463,445],
[448,420,416,397,0,402,412,414],
[445,463,439,443,488,0,447,413],
[451,444,458,427,478,443,0,441],
[484,453,456,445,476,477,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,431,442,439,429,443,434],
[470,0,427,450,451,459,433,452],
[459,463,0,452,433,441,423,432],
[448,440,438,0,455,425,448,447],
[451,439,457,435,0,434,425,432],
[461,431,449,465,456,0,448,444],
[447,457,467,442,465,442,0,442],
[456,438,458,443,458,446,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,413,378,421,386,430,394],
[464,0,462,421,432,398,415,400],
[477,428,0,401,445,412,430,438],
[512,469,489,0,435,461,430,439],
[469,458,445,455,0,417,467,453],
[504,492,478,429,473,0,444,486],
[460,475,460,460,423,446,0,435],
[496,490,452,451,437,404,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,435,434,453,437,450,439],
[462,0,446,443,457,457,475,447],
[455,444,0,457,450,473,449,435],
[456,447,433,0,463,440,454,427],
[437,433,440,427,0,449,440,427],
[453,433,417,450,441,0,452,445],
[440,415,441,436,450,438,0,442],
[451,443,455,463,463,445,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,478,424,420,407,427,464],
[440,0,483,449,425,443,459,473],
[412,407,0,422,376,457,427,434],
[466,441,468,0,439,455,449,479],
[470,465,514,451,0,462,439,490],
[483,447,433,435,428,0,445,462],
[463,431,463,441,451,445,0,445],
[426,417,456,411,400,428,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,452,454,440,452,439,451],
[441,0,431,437,425,437,439,415],
[438,459,0,464,440,460,457,439],
[436,453,426,0,412,431,441,434],
[450,465,450,478,0,442,458,453],
[438,453,430,459,448,0,437,442],
[451,451,433,449,432,453,0,449],
[439,475,451,456,437,448,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,457,430,426,483,458,445],
[427,0,422,431,422,461,450,419],
[433,468,0,443,401,467,452,420],
[460,459,447,0,452,498,474,419],
[464,468,489,438,0,485,467,433],
[407,429,423,392,405,0,433,380],
[432,440,438,416,423,457,0,398],
[445,471,470,471,457,510,492,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,428,433,465,426,471,434],
[453,0,432,430,453,425,455,431],
[462,458,0,454,495,437,498,452],
[457,460,436,0,446,470,471,440],
[425,437,395,444,0,433,463,425],
[464,465,453,420,457,0,492,467],
[419,435,392,419,427,398,0,392],
[456,459,438,450,465,423,498,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,438,427,449,431,441,417],
[456,0,439,447,454,433,431,431],
[452,451,0,420,454,448,454,451],
[463,443,470,0,461,454,445,445],
[441,436,436,429,0,432,433,424],
[459,457,442,436,458,0,439,421],
[449,459,436,445,457,451,0,429],
[473,459,439,445,466,469,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,457,456,449,448,452,431],
[437,0,404,451,408,431,456,441],
[433,486,0,454,443,461,476,461],
[434,439,436,0,451,431,452,431],
[441,482,447,439,0,489,493,471],
[442,459,429,459,401,0,482,426],
[438,434,414,438,397,408,0,411],
[459,449,429,459,419,464,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,485,485,491,428,468,456,459],
[405,0,454,488,434,468,445,457],
[405,436,0,445,424,452,424,452],
[399,402,445,0,424,449,392,414],
[462,456,466,466,0,467,472,445],
[422,422,438,441,423,0,417,393],
[434,445,466,498,418,473,0,466],
[431,433,438,476,445,497,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,445,448,453,493,474,444],
[436,0,454,435,430,472,447,450],
[445,436,0,447,456,454,459,412],
[442,455,443,0,454,486,446,413],
[437,460,434,436,0,473,433,447],
[397,418,436,404,417,0,417,418],
[416,443,431,444,457,473,0,429],
[446,440,478,477,443,472,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,435,417,404,434,417,410],
[482,0,452,452,450,481,471,437],
[455,438,0,445,441,455,440,463],
[473,438,445,0,415,440,461,451],
[486,440,449,475,0,468,470,485],
[456,409,435,450,422,0,463,426],
[473,419,450,429,420,427,0,432],
[480,453,427,439,405,464,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,316,571,443,473,505,474,699],
[574,0,544,441,473,477,481,511],
[319,346,0,344,315,378,348,443],
[447,449,546,0,380,573,512,574],
[417,417,575,510,0,349,478,511],
[385,413,512,317,541,0,386,505],
[416,409,542,378,412,504,0,602],
[191,379,447,316,379,385,288,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,438,419,421,475,454,446],
[430,0,455,448,444,442,466,469],
[452,435,0,441,447,439,474,464],
[471,442,449,0,419,478,469,452],
[469,446,443,471,0,435,475,477],
[415,448,451,412,455,0,451,449],
[436,424,416,421,415,439,0,444],
[444,421,426,438,413,441,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,451,477,482,483,470,439],
[415,0,436,461,456,490,435,432],
[439,454,0,472,453,490,437,440],
[413,429,418,0,431,445,420,453],
[408,434,437,459,0,465,446,434],
[407,400,400,445,425,0,435,419],
[420,455,453,470,444,455,0,416],
[451,458,450,437,456,471,474,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,463,444,428,424,438,428],
[469,0,498,437,443,451,423,451],
[427,392,0,451,419,408,395,417],
[446,453,439,0,456,445,433,443],
[462,447,471,434,0,455,441,445],
[466,439,482,445,435,0,442,454],
[452,467,495,457,449,448,0,433],
[462,439,473,447,445,436,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,362,342,428,444,393,412],
[492,0,482,398,438,443,440,470],
[528,408,0,453,416,450,436,417],
[548,492,437,0,449,475,454,509],
[462,452,474,441,0,493,411,446],
[446,447,440,415,397,0,376,376],
[497,450,454,436,479,514,0,461],
[478,420,473,381,444,514,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,422,388,443,383,445,451],
[459,0,435,404,484,443,464,405],
[468,455,0,428,479,478,487,425],
[502,486,462,0,524,475,508,443],
[447,406,411,366,0,445,454,372],
[507,447,412,415,445,0,440,425],
[445,426,403,382,436,450,0,385],
[439,485,465,447,518,465,505,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,393,401,405,421,455,441,469],
[497,0,454,426,478,447,496,490],
[489,436,0,459,464,418,516,459],
[485,464,431,0,472,467,498,473],
[469,412,426,418,0,402,464,430],
[435,443,472,423,488,0,488,466],
[449,394,374,392,426,402,0,428],
[421,400,431,417,460,424,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,467,450,476,495,445,437],
[425,0,423,432,420,473,438,416],
[423,467,0,444,437,478,446,430],
[440,458,446,0,455,475,437,451],
[414,470,453,435,0,463,439,437],
[395,417,412,415,427,0,427,399],
[445,452,444,453,451,463,0,422],
[453,474,460,439,453,491,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,337,422,387,480,426,382,361],
[553,0,429,444,505,489,397,466],
[468,461,0,426,474,450,425,463],
[503,446,464,0,487,519,396,457],
[410,385,416,403,0,410,414,434],
[464,401,440,371,480,0,396,452],
[508,493,465,494,476,494,0,435],
[529,424,427,433,456,438,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,448,439,478,434,416,428],
[451,0,476,444,498,456,425,444],
[442,414,0,439,439,452,463,431],
[451,446,451,0,458,435,440,447],
[412,392,451,432,0,422,423,436],
[456,434,438,455,468,0,449,450],
[474,465,427,450,467,441,0,454],
[462,446,459,443,454,440,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,419,424,467,436,436,489],
[440,0,457,416,459,454,427,485],
[471,433,0,441,410,421,423,424],
[466,474,449,0,443,427,473,457],
[423,431,480,447,0,399,413,447],
[454,436,469,463,491,0,414,479],
[454,463,467,417,477,476,0,452],
[401,405,466,433,443,411,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,436,449,450,441,476,441],
[460,0,448,467,459,437,471,471],
[454,442,0,447,460,464,454,442],
[441,423,443,0,462,432,449,435],
[440,431,430,428,0,436,479,429],
[449,453,426,458,454,0,463,435],
[414,419,436,441,411,427,0,422],
[449,419,448,455,461,455,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,433,456,423,428,437,440],
[453,0,451,448,458,446,431,460],
[457,439,0,456,447,429,448,452],
[434,442,434,0,411,444,428,439],
[467,432,443,479,0,451,442,452],
[462,444,461,446,439,0,452,460],
[453,459,442,462,448,438,0,432],
[450,430,438,451,438,430,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,437,449,431,474,436,450],
[434,0,449,447,444,428,443,479],
[453,441,0,463,464,452,438,453],
[441,443,427,0,472,448,454,461],
[459,446,426,418,0,451,446,435],
[416,462,438,442,439,0,428,445],
[454,447,452,436,444,462,0,492],
[440,411,437,429,455,445,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,435,435,452,419,431,416],
[423,0,447,428,465,364,390,413],
[455,443,0,464,432,457,443,475],
[455,462,426,0,407,370,462,423],
[438,425,458,483,0,393,465,429],
[471,526,433,520,497,0,451,461],
[459,500,447,428,425,439,0,423],
[474,477,415,467,461,429,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,441,454,456,468,494,480],
[404,0,414,415,453,397,368,420],
[449,476,0,422,457,431,432,443],
[436,475,468,0,441,447,420,413],
[434,437,433,449,0,475,456,424],
[422,493,459,443,415,0,407,385],
[396,522,458,470,434,483,0,421],
[410,470,447,477,466,505,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,448,444,469,489,427,451],
[418,0,410,424,434,454,408,415],
[442,480,0,441,451,495,423,433],
[446,466,449,0,464,459,451,436],
[421,456,439,426,0,462,413,448],
[401,436,395,431,428,0,380,408],
[463,482,467,439,477,510,0,447],
[439,475,457,454,442,482,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,481,435,513,401,504,428,397],
[409,0,413,492,407,496,451,359],
[455,477,0,517,430,548,443,438],
[377,398,373,0,376,418,369,402],
[489,483,460,514,0,487,425,403],
[386,394,342,472,403,0,327,368],
[462,439,447,521,465,563,0,463],
[493,531,452,488,487,522,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,441,459,453,450,481,476],
[425,0,455,473,456,419,452,459],
[449,435,0,445,452,414,459,451],
[431,417,445,0,464,417,440,471],
[437,434,438,426,0,425,407,451],
[440,471,476,473,465,0,455,474],
[409,438,431,450,483,435,0,472],
[414,431,439,419,439,416,418,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,429,403,413,455,439,413],
[464,0,445,499,462,496,470,474],
[461,445,0,451,431,469,458,438],
[487,391,439,0,443,478,464,455],
[477,428,459,447,0,493,454,453],
[435,394,421,412,397,0,447,434],
[451,420,432,426,436,443,0,421],
[477,416,452,435,437,456,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,433,451,471,425,461,444],
[457,0,436,434,477,408,455,442],
[457,454,0,459,469,441,470,429],
[439,456,431,0,430,454,479,414],
[419,413,421,460,0,409,445,429],
[465,482,449,436,481,0,478,446],
[429,435,420,411,445,412,0,397],
[446,448,461,476,461,444,493,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,442,429,449,465,442,454],
[454,0,469,446,437,443,445,449],
[448,421,0,414,431,451,428,456],
[461,444,476,0,440,473,459,454],
[441,453,459,450,0,451,472,471],
[425,447,439,417,439,0,441,462],
[448,445,462,431,418,449,0,461],
[436,441,434,436,419,428,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,449,480,442,443,450,436],
[442,0,476,472,439,454,458,460],
[441,414,0,454,452,455,451,423],
[410,418,436,0,404,420,440,431],
[448,451,438,486,0,470,476,443],
[447,436,435,470,420,0,450,446],
[440,432,439,450,414,440,0,430],
[454,430,467,459,447,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,458,465,472,442,453,458],
[445,0,442,459,444,455,440,474],
[432,448,0,467,478,462,444,440],
[425,431,423,0,443,423,451,412],
[418,446,412,447,0,422,431,417],
[448,435,428,467,468,0,441,451],
[437,450,446,439,459,449,0,449],
[432,416,450,478,473,439,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,451,473,435,453,451,469],
[427,0,431,423,454,444,435,430],
[439,459,0,446,436,423,433,432],
[417,467,444,0,437,434,440,444],
[455,436,454,453,0,446,434,449],
[437,446,467,456,444,0,470,423],
[439,455,457,450,456,420,0,444],
[421,460,458,446,441,467,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,415,430,421,451,428,415],
[448,0,410,486,422,450,447,479],
[475,480,0,463,436,481,436,420],
[460,404,427,0,424,447,481,446],
[469,468,454,466,0,457,432,438],
[439,440,409,443,433,0,466,423],
[462,443,454,409,458,424,0,463],
[475,411,470,444,452,467,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,456,449,431,449,420,458],
[461,0,466,446,469,459,418,434],
[434,424,0,392,434,434,401,427],
[441,444,498,0,465,466,459,473],
[459,421,456,425,0,457,430,467],
[441,431,456,424,433,0,428,432],
[470,472,489,431,460,462,0,433],
[432,456,463,417,423,458,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,450,439,453,436,434,447],
[455,0,426,411,444,454,432,457],
[440,464,0,427,424,436,441,458],
[451,479,463,0,436,453,448,463],
[437,446,466,454,0,465,473,469],
[454,436,454,437,425,0,463,479],
[456,458,449,442,417,427,0,462],
[443,433,432,427,421,411,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,455,449,454,471,456,443],
[427,0,445,430,455,431,439,434],
[435,445,0,452,471,434,442,430],
[441,460,438,0,445,443,437,447],
[436,435,419,445,0,437,418,426],
[419,459,456,447,453,0,452,451],
[434,451,448,453,472,438,0,444],
[447,456,460,443,464,439,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,420,441,438,457,460,444],
[463,0,446,421,462,466,452,469],
[470,444,0,457,481,458,458,489],
[449,469,433,0,486,454,450,484],
[452,428,409,404,0,440,431,451],
[433,424,432,436,450,0,425,434],
[430,438,432,440,459,465,0,451],
[446,421,401,406,439,456,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,453,435,459,444,426,461],
[422,0,446,426,411,434,435,443],
[437,444,0,427,437,427,453,433],
[455,464,463,0,469,455,441,477],
[431,479,453,421,0,440,431,446],
[446,456,463,435,450,0,410,457],
[464,455,437,449,459,480,0,474],
[429,447,457,413,444,433,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,457,443,468,441,445,455],
[442,0,445,450,479,423,451,444],
[433,445,0,440,465,407,459,431],
[447,440,450,0,485,411,458,433],
[422,411,425,405,0,399,445,412],
[449,467,483,479,491,0,474,445],
[445,439,431,432,445,416,0,427],
[435,446,459,457,478,445,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,417,436,444,434,427,451],
[474,0,462,449,441,455,453,457],
[473,428,0,455,446,464,476,465],
[454,441,435,0,442,456,457,461],
[446,449,444,448,0,441,445,459],
[456,435,426,434,449,0,438,463],
[463,437,414,433,445,452,0,431],
[439,433,425,429,431,427,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,486,493,468,486,491,443],
[431,0,465,418,423,511,477,437],
[404,425,0,516,442,482,480,429],
[397,472,374,0,452,483,413,430],
[422,467,448,438,0,538,440,469],
[404,379,408,407,352,0,386,386],
[399,413,410,477,450,504,0,391],
[447,453,461,460,421,504,499,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,443,458,470,408,410,430],
[468,0,484,503,475,457,457,435],
[447,406,0,475,436,427,466,450],
[432,387,415,0,496,383,452,372],
[420,415,454,394,0,401,423,403],
[482,433,463,507,489,0,440,439],
[480,433,424,438,467,450,0,411],
[460,455,440,518,487,451,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,473,490,483,479,442,434],
[453,0,450,496,458,470,443,465],
[417,440,0,413,454,470,426,439],
[400,394,477,0,516,462,404,419],
[407,432,436,374,0,467,364,417],
[411,420,420,428,423,0,366,391],
[448,447,464,486,526,524,0,444],
[456,425,451,471,473,499,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,422,446,455,429,432,425],
[454,0,450,428,465,426,457,428],
[468,440,0,453,463,424,447,439],
[444,462,437,0,464,420,441,441],
[435,425,427,426,0,413,445,404],
[461,464,466,470,477,0,444,464],
[458,433,443,449,445,446,0,439],
[465,462,451,449,486,426,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,452,438,463,445,443,420],
[450,0,460,444,471,446,434,456],
[438,430,0,436,458,443,435,426],
[452,446,454,0,462,449,442,444],
[427,419,432,428,0,426,430,427],
[445,444,447,441,464,0,448,435],
[447,456,455,448,460,442,0,442],
[470,434,464,446,463,455,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,455,449,423,448,421,443],
[437,0,424,437,458,393,392,397],
[435,466,0,441,466,402,459,466],
[441,453,449,0,481,459,435,415],
[467,432,424,409,0,399,471,395],
[442,497,488,431,491,0,417,446],
[469,498,431,455,419,473,0,414],
[447,493,424,475,495,444,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,427,450,443,448,450,449],
[445,0,444,443,462,455,430,474],
[463,446,0,436,437,449,449,452],
[440,447,454,0,444,449,442,466],
[447,428,453,446,0,453,460,456],
[442,435,441,441,437,0,427,436],
[440,460,441,448,430,463,0,467],
[441,416,438,424,434,454,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,405,394,430,414,398,421],
[469,0,424,424,450,435,431,459],
[485,466,0,460,477,466,456,443],
[496,466,430,0,448,458,448,462],
[460,440,413,442,0,439,429,428],
[476,455,424,432,451,0,408,456],
[492,459,434,442,461,482,0,495],
[469,431,447,428,462,434,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,446,454,482,438,502,394],
[445,0,398,436,470,482,453,389],
[444,492,0,440,582,487,446,445],
[436,454,450,0,460,418,459,443],
[408,420,308,430,0,433,432,412],
[452,408,403,472,457,0,449,395],
[388,437,444,431,458,441,0,438],
[496,501,445,447,478,495,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,479,429,461,450,470,493],
[449,0,456,432,417,451,461,456],
[411,434,0,419,397,416,441,449],
[461,458,471,0,435,428,453,462],
[429,473,493,455,0,450,465,464],
[440,439,474,462,440,0,443,481],
[420,429,449,437,425,447,0,449],
[397,434,441,428,426,409,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,444,454,438,434,459,457],
[465,0,458,470,442,453,473,459],
[446,432,0,469,438,450,457,465],
[436,420,421,0,409,428,439,424],
[452,448,452,481,0,441,453,464],
[456,437,440,462,449,0,452,472],
[431,417,433,451,437,438,0,455],
[433,431,425,466,426,418,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,507,488,513,501,443,524,543],
[383,0,428,488,476,463,503,455],
[402,462,0,502,495,436,579,399],
[377,402,388,0,492,455,516,546],
[389,414,395,398,0,428,523,498],
[447,427,454,435,462,0,545,482],
[366,387,311,374,367,345,0,362],
[347,435,491,344,392,408,528,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,531,463,504,540,455,511,413],
[359,0,361,399,471,432,429,363],
[427,529,0,451,542,484,484,396],
[386,491,439,0,533,429,428,380],
[350,419,348,357,0,409,390,387],
[435,458,406,461,481,0,453,456],
[379,461,406,462,500,437,0,406],
[477,527,494,510,503,434,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,451,484,444,417,417,452],
[461,0,495,441,455,404,417,432],
[439,395,0,401,416,451,437,411],
[406,449,489,0,398,445,399,433],
[446,435,474,492,0,438,439,453],
[473,486,439,445,452,0,457,448],
[473,473,453,491,451,433,0,451],
[438,458,479,457,437,442,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,376,401,402,407,423,413,369],
[514,0,466,464,476,449,460,429],
[489,424,0,430,442,425,467,458],
[488,426,460,0,450,407,440,452],
[483,414,448,440,0,382,422,454],
[467,441,465,483,508,0,439,474],
[477,430,423,450,468,451,0,428],
[521,461,432,438,436,416,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,433,435,445,447,437,449],
[466,0,472,445,468,455,448,461],
[457,418,0,457,482,466,443,445],
[455,445,433,0,467,471,442,442],
[445,422,408,423,0,420,452,422],
[443,435,424,419,470,0,434,437],
[453,442,447,448,438,456,0,446],
[441,429,445,448,468,453,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,475,411,465,450,426,454],
[462,0,496,409,450,423,460,445],
[415,394,0,412,420,408,415,442],
[479,481,478,0,475,452,444,463],
[425,440,470,415,0,442,419,474],
[440,467,482,438,448,0,443,466],
[464,430,475,446,471,447,0,463],
[436,445,448,427,416,424,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,444,437,437,445,433,420],
[450,0,447,443,433,470,457,436],
[446,443,0,445,478,462,442,441],
[453,447,445,0,458,469,463,447],
[453,457,412,432,0,449,437,427],
[445,420,428,421,441,0,448,404],
[457,433,448,427,453,442,0,440],
[470,454,449,443,463,486,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,507,508,571,508,571,443],
[445,0,445,573,317,445,446,381],
[383,445,0,573,446,381,510,509],
[382,317,317,0,507,253,508,443],
[319,573,444,383,0,317,444,320],
[382,445,509,637,573,0,508,571],
[319,444,380,382,446,382,0,383],
[447,509,381,447,570,319,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,409,471,442,428,498,498,502],
[481,0,525,452,458,485,514,423],
[419,365,0,424,394,432,422,431],
[448,438,466,0,452,488,485,403],
[462,432,496,438,0,513,502,413],
[392,405,458,402,377,0,480,415],
[392,376,468,405,388,410,0,378],
[388,467,459,487,477,475,512,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,415,399,452,387,429,408,398],
[475,0,440,471,450,458,437,463],
[491,450,0,453,439,436,483,451],
[438,419,437,0,412,435,421,435],
[503,440,451,478,0,484,479,458],
[461,432,454,455,406,0,454,443],
[482,453,407,469,411,436,0,432],
[492,427,439,455,432,447,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,419,440,431,420,462,444],
[444,0,423,449,463,451,475,440],
[471,467,0,446,458,439,471,444],
[450,441,444,0,451,451,471,429],
[459,427,432,439,0,430,446,451],
[470,439,451,439,460,0,459,456],
[428,415,419,419,444,431,0,435],
[446,450,446,461,439,434,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,429,375,439,435,458,417],
[460,0,443,447,423,441,436,480],
[461,447,0,432,426,473,477,436],
[515,443,458,0,457,453,489,473],
[451,467,464,433,0,476,512,490],
[455,449,417,437,414,0,458,461],
[432,454,413,401,378,432,0,457],
[473,410,454,417,400,429,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,427,459,415,427,439,468,449],
[463,0,466,454,447,444,464,484],
[431,424,0,419,421,465,461,436],
[475,436,471,0,444,472,437,465],
[463,443,469,446,0,457,450,430],
[451,446,425,418,433,0,418,484],
[422,426,429,453,440,472,0,434],
[441,406,454,425,460,406,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,442,452,448,429,433,461],
[448,0,428,470,438,429,440,450],
[448,462,0,454,465,449,440,480],
[438,420,436,0,420,409,432,464],
[442,452,425,470,0,438,418,477],
[461,461,441,481,452,0,452,478],
[457,450,450,458,472,438,0,419],
[429,440,410,426,413,412,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,592,424,423,468,383,468,383],
[298,0,169,210,299,213,383,214],
[466,721,0,551,428,469,682,342],
[467,680,339,0,471,383,471,259],
[422,591,462,419,0,381,470,383],
[507,677,421,507,509,0,596,469],
[422,507,208,419,420,294,0,254],
[507,676,548,631,507,421,636,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,438,439,481,480,483,434],
[485,0,453,420,471,433,465,452],
[452,437,0,448,515,438,483,431],
[451,470,442,0,509,418,493,468],
[409,419,375,381,0,364,449,412],
[410,457,452,472,526,0,501,423],
[407,425,407,397,441,389,0,399],
[456,438,459,422,478,467,491,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,451,454,440,424,420,466],
[435,0,457,441,427,410,439,426],
[439,433,0,438,439,427,424,435],
[436,449,452,0,434,419,415,440],
[450,463,451,456,0,447,445,450],
[466,480,463,471,443,0,476,464],
[470,451,466,475,445,414,0,450],
[424,464,455,450,440,426,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,454,421,435,433,421,444],
[434,0,446,463,441,425,450,412],
[436,444,0,441,423,428,434,456],
[469,427,449,0,424,437,438,435],
[455,449,467,466,0,431,471,445],
[457,465,462,453,459,0,437,449],
[469,440,456,452,419,453,0,470],
[446,478,434,455,445,441,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,483,453,449,481,461,444,483],
[407,0,420,390,403,397,412,436],
[437,470,0,425,460,446,457,470],
[441,500,465,0,504,449,469,483],
[409,487,430,386,0,410,436,458],
[429,493,444,441,480,0,449,488],
[446,478,433,421,454,441,0,443],
[407,454,420,407,432,402,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,444,436,444,504,443,434],
[438,0,493,440,443,486,473,459],
[446,397,0,437,459,474,449,417],
[454,450,453,0,483,461,435,471],
[446,447,431,407,0,432,410,419],
[386,404,416,429,458,0,410,445],
[447,417,441,455,480,480,0,448],
[456,431,473,419,471,445,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,451,435,437,409,452,422],
[443,0,439,440,445,446,441,434],
[439,451,0,446,430,453,443,437],
[455,450,444,0,485,449,430,439],
[453,445,460,405,0,429,430,432],
[481,444,437,441,461,0,463,457],
[438,449,447,460,460,427,0,442],
[468,456,453,451,458,433,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,467,433,442,452,480,441],
[425,0,456,439,426,440,449,426],
[423,434,0,441,416,405,442,398],
[457,451,449,0,437,443,448,437],
[448,464,474,453,0,458,476,445],
[438,450,485,447,432,0,470,447],
[410,441,448,442,414,420,0,422],
[449,464,492,453,445,443,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,473,443,478,453,451,449],
[433,0,487,458,480,453,461,458],
[417,403,0,453,464,427,393,416],
[447,432,437,0,441,425,419,457],
[412,410,426,449,0,433,403,415],
[437,437,463,465,457,0,458,439],
[439,429,497,471,487,432,0,474],
[441,432,474,433,475,451,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,456,461,446,463,429,450],
[457,0,427,441,439,453,443,454],
[434,463,0,451,453,462,421,451],
[429,449,439,0,460,486,448,438],
[444,451,437,430,0,458,426,446],
[427,437,428,404,432,0,423,434],
[461,447,469,442,464,467,0,463],
[440,436,439,452,444,456,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,439,447,442,438,445,424],
[462,0,435,463,448,437,435,432],
[451,455,0,461,452,450,452,441],
[443,427,429,0,436,434,453,433],
[448,442,438,454,0,440,444,430],
[452,453,440,456,450,0,457,454],
[445,455,438,437,446,433,0,422],
[466,458,449,457,460,436,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,474,456,508,508,490,447,440],
[416,0,415,421,444,470,392,464],
[434,475,0,465,470,470,464,476],
[382,469,425,0,434,463,403,423],
[382,446,420,456,0,415,406,464],
[400,420,420,427,475,0,418,416],
[443,498,426,487,484,472,0,449],
[450,426,414,467,426,474,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,464,486,444,450,463,460],
[429,0,461,456,433,460,419,417],
[426,429,0,446,426,446,435,420],
[404,434,444,0,441,436,431,427],
[446,457,464,449,0,475,456,445],
[440,430,444,454,415,0,427,428],
[427,471,455,459,434,463,0,440],
[430,473,470,463,445,462,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,470,449,448,430,452,406],
[467,0,469,431,459,431,467,442],
[420,421,0,432,447,423,446,422],
[441,459,458,0,459,437,445,457],
[442,431,443,431,0,470,456,407],
[460,459,467,453,420,0,437,458],
[438,423,444,445,434,453,0,401],
[484,448,468,433,483,432,489,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,406,436,440,420,438,444],
[471,0,437,450,479,497,455,523],
[484,453,0,494,441,477,471,472],
[454,440,396,0,403,410,460,412],
[450,411,449,487,0,429,494,478],
[470,393,413,480,461,0,433,475],
[452,435,419,430,396,457,0,445],
[446,367,418,478,412,415,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,445,465,454,445,434,438],
[445,0,444,461,452,435,433,446],
[445,446,0,464,452,446,445,434],
[425,429,426,0,448,432,401,427],
[436,438,438,442,0,444,430,435],
[445,455,444,458,446,0,404,448],
[456,457,445,489,460,486,0,465],
[452,444,456,463,455,442,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,444,474,477,459,479,470],
[422,0,451,449,429,425,481,459],
[446,439,0,454,455,435,452,451],
[416,441,436,0,441,449,452,439],
[413,461,435,449,0,449,443,432],
[431,465,455,441,441,0,464,443],
[411,409,438,438,447,426,0,417],
[420,431,439,451,458,447,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,344,370,389,349,476,458,475],
[546,0,419,477,494,439,471,494],
[520,471,0,477,439,399,448,566],
[501,413,413,0,438,469,484,550],
[541,396,451,452,0,453,537,544],
[414,451,491,421,437,0,527,421],
[432,419,442,406,353,363,0,459],
[415,396,324,340,346,469,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,485,460,454,447,422,443],
[452,0,460,458,459,497,437,458],
[405,430,0,425,395,427,403,415],
[430,432,465,0,443,460,482,463],
[436,431,495,447,0,472,435,471],
[443,393,463,430,418,0,426,424],
[468,453,487,408,455,464,0,434],
[447,432,475,427,419,466,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,437,463,451,523,480,476],
[431,0,484,424,439,471,463,474],
[453,406,0,468,429,391,418,356],
[427,466,422,0,428,419,446,374],
[439,451,461,462,0,457,412,477],
[367,419,499,471,433,0,425,454],
[410,427,472,444,478,465,0,453],
[414,416,534,516,413,436,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,426,432,446,467,447],
[443,0,431,437,412,434,451,465],
[445,459,0,440,448,443,462,466],
[464,453,450,0,445,448,472,463],
[458,478,442,445,0,427,450,471],
[444,456,447,442,463,0,458,451],
[423,439,428,418,440,432,0,447],
[443,425,424,427,419,439,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,438,417,441,435,430,432],
[442,0,428,430,427,442,446,445],
[452,462,0,439,443,471,438,442],
[473,460,451,0,468,466,440,449],
[449,463,447,422,0,459,428,439],
[455,448,419,424,431,0,422,436],
[460,444,452,450,462,468,0,430],
[458,445,448,441,451,454,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,463,456,421,407,438,476],
[444,0,404,462,450,416,448,441],
[427,486,0,482,402,420,443,483],
[434,428,408,0,382,397,402,439],
[469,440,488,508,0,446,460,464],
[483,474,470,493,444,0,468,481],
[452,442,447,488,430,422,0,494],
[414,449,407,451,426,409,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,450,434,413,461,436,481],
[424,0,455,398,450,436,407,438],
[440,435,0,427,404,457,450,447],
[456,492,463,0,458,435,412,455],
[477,440,486,432,0,471,439,487],
[429,454,433,455,419,0,411,455],
[454,483,440,478,451,479,0,467],
[409,452,443,435,403,435,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,370,431,408,361,433,426,431],
[520,0,481,468,434,455,486,475],
[459,409,0,424,428,440,460,454],
[482,422,466,0,453,428,462,455],
[529,456,462,437,0,470,457,498],
[457,435,450,462,420,0,469,456],
[464,404,430,428,433,421,0,454],
[459,415,436,435,392,434,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,438,499,496,440,420,478],
[424,0,453,423,445,429,428,448],
[452,437,0,443,510,430,453,438],
[391,467,447,0,481,447,487,441],
[394,445,380,409,0,377,432,402],
[450,461,460,443,513,0,422,430],
[470,462,437,403,458,468,0,415],
[412,442,452,449,488,460,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,416,429,424,438,411,461],
[431,0,445,440,446,446,439,463],
[474,445,0,456,430,461,423,465],
[461,450,434,0,435,421,414,450],
[466,444,460,455,0,468,449,492],
[452,444,429,469,422,0,442,465],
[479,451,467,476,441,448,0,459],
[429,427,425,440,398,425,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,490,453,442,466,437,457,413],
[400,0,435,414,442,423,414,415],
[437,455,0,447,471,417,446,447],
[448,476,443,0,448,447,469,498],
[424,448,419,442,0,442,433,427],
[453,467,473,443,448,0,440,421],
[433,476,444,421,457,450,0,434],
[477,475,443,392,463,469,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,447,433,460,450,442,452],
[449,0,426,455,472,450,455,441],
[443,464,0,449,494,483,468,459],
[457,435,441,0,483,459,457,454],
[430,418,396,407,0,441,432,407],
[440,440,407,431,449,0,435,430],
[448,435,422,433,458,455,0,433],
[438,449,431,436,483,460,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,498,478,519,548,438,468,513],
[392,0,408,461,459,448,467,524],
[412,482,0,547,571,398,501,475],
[371,429,343,0,435,462,438,467],
[342,431,319,455,0,384,358,472],
[452,442,492,428,506,0,508,447],
[422,423,389,452,532,382,0,462],
[377,366,415,423,418,443,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,423,435,444,468,422,415],
[453,0,450,460,423,446,465,461],
[467,440,0,484,449,487,456,477],
[455,430,406,0,407,440,426,443],
[446,467,441,483,0,483,458,464],
[422,444,403,450,407,0,425,421],
[468,425,434,464,432,465,0,441],
[475,429,413,447,426,469,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,456,436,442,423,445,414],
[471,0,471,467,451,462,455,431],
[434,419,0,433,433,452,448,407],
[454,423,457,0,424,440,451,414],
[448,439,457,466,0,430,444,424],
[467,428,438,450,460,0,435,432],
[445,435,442,439,446,455,0,446],
[476,459,483,476,466,458,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,464,415,450,519,370,431],
[443,0,315,434,482,483,348,412],
[426,575,0,468,502,556,462,467],
[475,456,422,0,422,500,458,426],
[440,408,388,468,0,441,405,509],
[371,407,334,390,449,0,409,432],
[520,542,428,432,485,481,0,509],
[459,478,423,464,381,458,381,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,430,425,414,396,430,422],
[454,0,492,437,455,443,471,438],
[460,398,0,425,431,427,454,443],
[465,453,465,0,457,456,462,422],
[476,435,459,433,0,447,482,458],
[494,447,463,434,443,0,447,450],
[460,419,436,428,408,443,0,425],
[468,452,447,468,432,440,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,532,446,356,535,356,356,623],
[358,0,536,447,447,447,447,444],
[444,354,0,358,624,532,356,533],
[534,443,532,0,801,622,533,533],
[355,443,266,89,0,354,269,533],
[534,443,358,268,536,0,358,356],
[534,443,534,357,621,532,0,622],
[267,446,357,357,357,534,268,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,467,471,445,428,431,442],
[419,0,424,448,425,409,419,422],
[423,466,0,388,419,438,445,413],
[419,442,502,0,415,483,413,434],
[445,465,471,475,0,447,447,490],
[462,481,452,407,443,0,433,428],
[459,471,445,477,443,457,0,445],
[448,468,477,456,400,462,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,494,456,467,441,461,469],
[446,0,494,441,463,450,466,509],
[396,396,0,431,420,401,459,431],
[434,449,459,0,443,414,464,464],
[423,427,470,447,0,440,450,449],
[449,440,489,476,450,0,463,465],
[429,424,431,426,440,427,0,450],
[421,381,459,426,441,425,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,490,447,439,442,471,463],
[436,0,498,445,433,436,472,442],
[400,392,0,410,421,398,437,442],
[443,445,480,0,484,447,453,481],
[451,457,469,406,0,438,469,456],
[448,454,492,443,452,0,470,466],
[419,418,453,437,421,420,0,432],
[427,448,448,409,434,424,458,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,473,457,447,466,434,449],
[486,0,511,444,421,453,429,458],
[417,379,0,425,403,470,409,425],
[433,446,465,0,425,506,461,458],
[443,469,487,465,0,493,442,477],
[424,437,420,384,397,0,395,375],
[456,461,481,429,448,495,0,417],
[441,432,465,432,413,515,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,435,445,437,440,433,436],
[438,0,418,427,432,430,420,428],
[455,472,0,460,435,445,434,437],
[445,463,430,0,450,459,445,439],
[453,458,455,440,0,438,435,453],
[450,460,445,431,452,0,420,434],
[457,470,456,445,455,470,0,430],
[454,462,453,451,437,456,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,427,491,455,465,459,445],
[441,0,448,459,439,426,435,439],
[463,442,0,456,430,463,451,443],
[399,431,434,0,441,433,434,430],
[435,451,460,449,0,435,439,455],
[425,464,427,457,455,0,448,456],
[431,455,439,456,451,442,0,451],
[445,451,447,460,435,434,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,439,492,486,480,450,464],
[459,0,455,491,499,454,438,455],
[451,435,0,496,498,466,464,466],
[398,399,394,0,450,433,434,427],
[404,391,392,440,0,432,442,440],
[410,436,424,457,458,0,415,430],
[440,452,426,456,448,475,0,442],
[426,435,424,463,450,460,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,435,494,468,456,498,435],
[456,0,477,506,503,422,513,462],
[455,413,0,488,460,421,502,451],
[396,384,402,0,435,353,442,379],
[422,387,430,455,0,380,465,403],
[434,468,469,537,510,0,462,461],
[392,377,388,448,425,428,0,438],
[455,428,439,511,487,429,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,443,461,443,481,431,457],
[404,0,424,404,426,408,420,401],
[447,466,0,437,435,448,477,443],
[429,486,453,0,432,473,449,459],
[447,464,455,458,0,470,434,440],
[409,482,442,417,420,0,430,418],
[459,470,413,441,456,460,0,444],
[433,489,447,431,450,472,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,446,445,437,434,419,432],
[480,0,468,449,441,461,445,454],
[444,422,0,434,422,454,434,426],
[445,441,456,0,462,451,432,449],
[453,449,468,428,0,453,414,440],
[456,429,436,439,437,0,432,410],
[471,445,456,458,476,458,0,443],
[458,436,464,441,450,480,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,590,652,536,445,532,562,473],
[300,0,475,507,418,447,476,296],
[238,415,0,475,327,474,475,295],
[354,383,415,0,267,385,384,324],
[445,472,563,623,0,623,532,381],
[358,443,416,505,267,0,416,236],
[328,414,415,506,358,474,0,324],
[417,594,595,566,509,654,566,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,443,430,448,452,448,425],
[446,0,425,441,454,439,453,417],
[447,465,0,461,440,464,446,449],
[460,449,429,0,461,456,462,428],
[442,436,450,429,0,434,464,425],
[438,451,426,434,456,0,446,434],
[442,437,444,428,426,444,0,429],
[465,473,441,462,465,456,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,441,435,451,446,472,462],
[433,0,450,452,447,450,443,430],
[449,440,0,450,462,453,443,478],
[455,438,440,0,466,457,470,462],
[439,443,428,424,0,418,433,425],
[444,440,437,433,472,0,424,454],
[418,447,447,420,457,466,0,426],
[428,460,412,428,465,436,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,442,444,428,451,440,469],
[430,0,451,448,463,474,460,442],
[448,439,0,445,440,467,435,442],
[446,442,445,0,448,468,445,449],
[462,427,450,442,0,475,455,447],
[439,416,423,422,415,0,436,446],
[450,430,455,445,435,454,0,450],
[421,448,448,441,443,444,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,509,499,453,447,481,405],
[438,0,516,482,407,431,456,435],
[381,374,0,449,388,395,409,408],
[391,408,441,0,392,351,426,396],
[437,483,502,498,0,423,521,430],
[443,459,495,539,467,0,443,459],
[409,434,481,464,369,447,0,424],
[485,455,482,494,460,431,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,441,445,457,444,444,431],
[431,0,444,438,438,437,434,414],
[449,446,0,452,447,438,440,429],
[445,452,438,0,452,436,434,437],
[433,452,443,438,0,446,441,441],
[446,453,452,454,444,0,432,455],
[446,456,450,456,449,458,0,439],
[459,476,461,453,449,435,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,459,443,440,483,463,477],
[434,0,448,432,446,483,458,474],
[431,442,0,429,439,450,437,439],
[447,458,461,0,428,474,442,474],
[450,444,451,462,0,481,468,477],
[407,407,440,416,409,0,430,429],
[427,432,453,448,422,460,0,450],
[413,416,451,416,413,461,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,373,408,557,482,445,410,480],
[517,0,406,631,481,552,445,368],
[482,484,0,557,479,516,483,407],
[333,259,333,0,332,442,446,332],
[408,409,411,558,0,445,411,295],
[445,338,374,448,445,0,336,329],
[480,445,407,444,479,554,0,477],
[410,522,483,558,595,561,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,456,487,463,462,454,437],
[450,0,473,474,444,453,453,455],
[434,417,0,438,408,417,451,441],
[403,416,452,0,415,436,440,442],
[427,446,482,475,0,441,461,453],
[428,437,473,454,449,0,459,451],
[436,437,439,450,429,431,0,464],
[453,435,449,448,437,439,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,449,421,424,434,437,453],
[455,0,450,432,441,446,452,464],
[441,440,0,440,439,454,436,467],
[469,458,450,0,443,459,464,466],
[466,449,451,447,0,443,449,472],
[456,444,436,431,447,0,437,468],
[453,438,454,426,441,453,0,467],
[437,426,423,424,418,422,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,466,467,442,438,449,433],
[414,0,425,431,420,427,405,422],
[424,465,0,435,429,446,447,409],
[423,459,455,0,467,438,435,406],
[448,470,461,423,0,434,424,428],
[452,463,444,452,456,0,450,445],
[441,485,443,455,466,440,0,425],
[457,468,481,484,462,445,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,443,469,468,459,470,448],
[443,0,449,479,442,454,469,442],
[447,441,0,464,470,476,451,457],
[421,411,426,0,428,443,430,431],
[422,448,420,462,0,466,444,437],
[431,436,414,447,424,0,442,431],
[420,421,439,460,446,448,0,441],
[442,448,433,459,453,459,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,469,491,441,428,437,489],
[459,0,450,470,491,437,439,489],
[421,440,0,455,463,406,445,500],
[399,420,435,0,436,416,438,474],
[449,399,427,454,0,419,443,481],
[462,453,484,474,471,0,432,478],
[453,451,445,452,447,458,0,457],
[401,401,390,416,409,412,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,436,457,447,451,470,458],
[447,0,425,453,451,466,429,454],
[454,465,0,456,426,440,451,456],
[433,437,434,0,415,453,434,445],
[443,439,464,475,0,466,457,474],
[439,424,450,437,424,0,430,448],
[420,461,439,456,433,460,0,470],
[432,436,434,445,416,442,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,472,460,435,457,467,443],
[425,0,445,451,413,454,418,424],
[418,445,0,410,454,435,439,441],
[430,439,480,0,448,461,439,447],
[455,477,436,442,0,447,426,448],
[433,436,455,429,443,0,441,426],
[423,472,451,451,464,449,0,433],
[447,466,449,443,442,464,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,417,429,395,441,432,446],
[437,0,424,408,406,422,419,432],
[473,466,0,459,437,453,459,471],
[461,482,431,0,437,478,452,470],
[495,484,453,453,0,473,438,445],
[449,468,437,412,417,0,445,423],
[458,471,431,438,452,445,0,473],
[444,458,419,420,445,467,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,393,446,430,477,469,533],
[402,0,395,405,380,422,397,459],
[497,495,0,436,460,503,473,493],
[444,485,454,0,499,469,476,467],
[460,510,430,391,0,453,406,456],
[413,468,387,421,437,0,475,476],
[421,493,417,414,484,415,0,455],
[357,431,397,423,434,414,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,418,397,448,476,464,485],
[452,0,474,469,444,482,465,498],
[472,416,0,437,416,462,456,442],
[493,421,453,0,431,488,454,489],
[442,446,474,459,0,455,455,474],
[414,408,428,402,435,0,446,453],
[426,425,434,436,435,444,0,442],
[405,392,448,401,416,437,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,451,437,456,442,458,445],
[452,0,456,443,447,469,464,452],
[439,434,0,427,458,440,453,448],
[453,447,463,0,441,458,476,455],
[434,443,432,449,0,459,451,441],
[448,421,450,432,431,0,433,433],
[432,426,437,414,439,457,0,421],
[445,438,442,435,449,457,469,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,474,455,448,449,450,445],
[446,0,469,457,466,467,438,469],
[416,421,0,404,435,423,398,416],
[435,433,486,0,443,443,430,454],
[442,424,455,447,0,435,447,432],
[441,423,467,447,455,0,446,440],
[440,452,492,460,443,444,0,440],
[445,421,474,436,458,450,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,429,426,456,449,459,413],
[442,0,457,446,473,410,434,430],
[461,433,0,422,483,435,464,418],
[464,444,468,0,475,432,456,426],
[434,417,407,415,0,400,411,394],
[441,480,455,458,490,0,467,448],
[431,456,426,434,479,423,0,441],
[477,460,472,464,496,442,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,437,469,459,473,473,434],
[434,0,467,470,465,444,476,430],
[453,423,0,440,458,490,453,457],
[421,420,450,0,455,428,451,412],
[431,425,432,435,0,436,468,410],
[417,446,400,462,454,0,464,436],
[417,414,437,439,422,426,0,376],
[456,460,433,478,480,454,514,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,476,443,463,416,410,420],
[450,0,458,408,461,425,435,399],
[414,432,0,430,452,422,422,417],
[447,482,460,0,479,450,448,444],
[427,429,438,411,0,427,403,373],
[474,465,468,440,463,0,438,424],
[480,455,468,442,487,452,0,454],
[470,491,473,446,517,466,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,451,445,443,420,429,440],
[440,0,443,437,438,421,430,436],
[439,447,0,474,433,434,449,435],
[445,453,416,0,445,445,437,450],
[447,452,457,445,0,411,466,444],
[470,469,456,445,479,0,440,467],
[461,460,441,453,424,450,0,441],
[450,454,455,440,446,423,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,431,439,447,432,451,428],
[438,0,429,415,430,433,419,430],
[459,461,0,446,447,438,459,427],
[451,475,444,0,429,437,479,426],
[443,460,443,461,0,440,433,455],
[458,457,452,453,450,0,434,453],
[439,471,431,411,457,456,0,440],
[462,460,463,464,435,437,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,473,440,435,451,474,446],
[423,0,455,409,414,431,403,388],
[417,435,0,409,371,421,401,402],
[450,481,481,0,445,453,445,439],
[455,476,519,445,0,459,424,430],
[439,459,469,437,431,0,419,458],
[416,487,489,445,466,471,0,456],
[444,502,488,451,460,432,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,433,417,423,432,458,417],
[439,0,441,407,445,424,465,443],
[457,449,0,387,439,399,434,420],
[473,483,503,0,453,454,478,431],
[467,445,451,437,0,449,464,402],
[458,466,491,436,441,0,449,460],
[432,425,456,412,426,441,0,425],
[473,447,470,459,488,430,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,479,436,455,475,440,467,431],
[411,0,433,406,467,418,427,454],
[454,457,0,448,466,438,438,482],
[435,484,442,0,469,453,446,459],
[415,423,424,421,0,410,402,421],
[450,472,452,437,480,0,452,445],
[423,463,452,444,488,438,0,467],
[459,436,408,431,469,445,423,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,480,492,438,447,410,428],
[448,0,445,441,404,432,443,419],
[410,445,0,447,400,392,450,386],
[398,449,443,0,420,408,432,395],
[452,486,490,470,0,426,426,460],
[443,458,498,482,464,0,446,446],
[480,447,440,458,464,444,0,430],
[462,471,504,495,430,444,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,463,463,456,465,448,439],
[434,0,449,450,463,456,436,433],
[427,441,0,465,456,443,435,415],
[427,440,425,0,478,457,450,443],
[434,427,434,412,0,449,438,445],
[425,434,447,433,441,0,448,432],
[442,454,455,440,452,442,0,444],
[451,457,475,447,445,458,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,418,413,421,443,437,448],
[466,0,434,424,441,484,399,438],
[472,456,0,444,410,467,446,471],
[477,466,446,0,455,453,436,474],
[469,449,480,435,0,470,436,481],
[447,406,423,437,420,0,427,457],
[453,491,444,454,454,463,0,473],
[442,452,419,416,409,433,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,430,472,428,456,448,476],
[428,0,433,466,433,407,419,455],
[460,457,0,478,429,466,467,482],
[418,424,412,0,412,434,406,421],
[462,457,461,478,0,443,479,474],
[434,483,424,456,447,0,460,443],
[442,471,423,484,411,430,0,436],
[414,435,408,469,416,447,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,480,453,423,461,467,463,445],
[410,0,443,407,424,446,435,414],
[437,447,0,461,440,464,482,442],
[467,483,429,0,476,471,510,458],
[429,466,450,414,0,456,472,453],
[423,444,426,419,434,0,456,418],
[427,455,408,380,418,434,0,438],
[445,476,448,432,437,472,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,486,448,502,453,430,430,474],
[404,0,458,459,434,409,449,458],
[442,432,0,510,418,389,456,423],
[388,431,380,0,401,368,433,394],
[437,456,472,489,0,454,468,462],
[460,481,501,522,436,0,492,482],
[460,441,434,457,422,398,0,436],
[416,432,467,496,428,408,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,439,453,438,438,431,429],
[455,0,445,464,428,449,444,458],
[451,445,0,462,456,452,457,456],
[437,426,428,0,421,444,427,427],
[452,462,434,469,0,454,451,446],
[452,441,438,446,436,0,436,438],
[459,446,433,463,439,454,0,452],
[461,432,434,463,444,452,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,447,439,448,448,453,433],
[443,0,434,425,445,452,423,443],
[443,456,0,434,431,446,415,440],
[451,465,456,0,476,468,445,465],
[442,445,459,414,0,436,423,425],
[442,438,444,422,454,0,418,426],
[437,467,475,445,467,472,0,462],
[457,447,450,425,465,464,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,445,445,445,0,0,0],
[890,0,445,445,445,445,445,445],
[445,445,0,890,890,445,445,445],
[445,445,0,0,445,445,445,445],
[445,445,0,445,0,0,445,445],
[890,445,445,445,890,0,890,890],
[890,445,445,445,445,0,0,445],
[890,445,445,445,445,0,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,490,435,473,481,426,465],
[431,0,435,465,464,482,413,423],
[400,455,0,445,456,442,423,434],
[455,425,445,0,458,469,444,485],
[417,426,434,432,0,456,373,406],
[409,408,448,421,434,0,400,421],
[464,477,467,446,517,490,0,431],
[425,467,456,405,484,469,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,448,448,472,494,407,472],
[451,0,470,429,472,476,447,412],
[442,420,0,403,465,449,429,443],
[442,461,487,0,494,419,501,442],
[418,418,425,396,0,420,430,441],
[396,414,441,471,470,0,433,414],
[483,443,461,389,460,457,0,448],
[418,478,447,448,449,476,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,469,472,446,464,412,444],
[445,0,451,463,455,447,419,442],
[421,439,0,461,428,428,405,455],
[418,427,429,0,436,426,397,426],
[444,435,462,454,0,421,434,425],
[426,443,462,464,469,0,440,458],
[478,471,485,493,456,450,0,444],
[446,448,435,464,465,432,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,444,433,438,440,427,432],
[441,0,442,430,442,455,441,441],
[446,448,0,435,440,445,439,427],
[457,460,455,0,452,438,446,442],
[452,448,450,438,0,424,431,426],
[450,435,445,452,466,0,442,428],
[463,449,451,444,459,448,0,445],
[458,449,463,448,464,462,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,379,435,413,446,376,430],
[469,0,403,438,402,445,451,451],
[511,487,0,520,490,467,436,458],
[455,452,370,0,442,449,387,433],
[477,488,400,448,0,470,414,475],
[444,445,423,441,420,0,412,457],
[514,439,454,503,476,478,0,455],
[460,439,432,457,415,433,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,432,461,431,430,429,468],
[465,0,435,457,438,422,418,424],
[458,455,0,439,460,434,449,453],
[429,433,451,0,445,430,453,421],
[459,452,430,445,0,441,446,458],
[460,468,456,460,449,0,433,443],
[461,472,441,437,444,457,0,468],
[422,466,437,469,432,447,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,418,427,444,443,418,434],
[446,0,375,411,457,424,423,430],
[472,515,0,482,467,466,443,454],
[463,479,408,0,459,435,431,429],
[446,433,423,431,0,451,442,440],
[447,466,424,455,439,0,453,424],
[472,467,447,459,448,437,0,443],
[456,460,436,461,450,466,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,422,418,436,442,439,428],
[464,0,418,455,439,443,433,444],
[468,472,0,456,438,495,447,458],
[472,435,434,0,416,478,442,445],
[454,451,452,474,0,482,444,462],
[448,447,395,412,408,0,428,460],
[451,457,443,448,446,462,0,447],
[462,446,432,445,428,430,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,516,449,467,457,391,462,452],
[374,0,399,388,435,369,414,382],
[441,491,0,450,483,431,413,462],
[423,502,440,0,492,435,459,455],
[433,455,407,398,0,406,392,469],
[499,521,459,455,484,0,435,491],
[428,476,477,431,498,455,0,513],
[438,508,428,435,421,399,377,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,464,460,492,467,458,440,474],
[426,0,421,492,444,435,431,443],
[430,469,0,473,424,437,406,455],
[398,398,417,0,380,392,407,398],
[423,446,466,510,0,442,446,435],
[432,455,453,498,448,0,430,461],
[450,459,484,483,444,460,0,452],
[416,447,435,492,455,429,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,455,424,436,455,428,443],
[446,0,452,434,452,464,439,444],
[435,438,0,423,456,463,424,428],
[466,456,467,0,457,480,435,441],
[454,438,434,433,0,467,456,452],
[435,426,427,410,423,0,409,435],
[462,451,466,455,434,481,0,448],
[447,446,462,449,438,455,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,382,403,397,419,481,433,444],
[508,0,447,466,439,522,461,480],
[487,443,0,473,430,471,439,478],
[493,424,417,0,436,476,429,480],
[471,451,460,454,0,478,442,511],
[409,368,419,414,412,0,414,449],
[457,429,451,461,448,476,0,473],
[446,410,412,410,379,441,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,425,415,424,395,443,429],
[468,0,463,415,419,429,431,432],
[465,427,0,447,444,439,437,411],
[475,475,443,0,451,418,444,438],
[466,471,446,439,0,450,453,456],
[495,461,451,472,440,0,472,461],
[447,459,453,446,437,418,0,460],
[461,458,479,452,434,429,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,426,422,425,423,430,396],
[435,0,421,419,421,398,442,409],
[464,469,0,424,422,446,460,465],
[468,471,466,0,476,445,482,423],
[465,469,468,414,0,475,489,442],
[467,492,444,445,415,0,431,421],
[460,448,430,408,401,459,0,414],
[494,481,425,467,448,469,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,429,434,439,442,429,442],
[456,0,436,457,462,448,450,465],
[461,454,0,429,454,454,434,448],
[456,433,461,0,452,429,440,439],
[451,428,436,438,0,437,430,439],
[448,442,436,461,453,0,427,456],
[461,440,456,450,460,463,0,477],
[448,425,442,451,451,434,413,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,441,429,472,428,453,454],
[412,0,429,423,434,437,418,433],
[449,461,0,430,445,428,454,457],
[461,467,460,0,437,445,441,472],
[418,456,445,453,0,405,440,435],
[462,453,462,445,485,0,482,438],
[437,472,436,449,450,408,0,460],
[436,457,433,418,455,452,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,469,438,463,467,465,468],
[445,0,437,454,480,452,456,471],
[421,453,0,468,479,452,444,445],
[452,436,422,0,484,481,435,452],
[427,410,411,406,0,441,412,434],
[423,438,438,409,449,0,434,462],
[425,434,446,455,478,456,0,478],
[422,419,445,438,456,428,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,417,333,399,442,441,413],
[450,0,461,419,506,513,551,460],
[473,429,0,363,534,558,452,441],
[557,471,527,0,507,532,429,460],
[491,384,356,383,0,489,425,401],
[448,377,332,358,401,0,430,438],
[449,339,438,461,465,460,0,478],
[477,430,449,430,489,452,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,423,438,449,413,417,420],
[460,0,427,445,436,476,433,453],
[467,463,0,462,450,459,428,449],
[452,445,428,0,451,458,419,452],
[441,454,440,439,0,420,441,420],
[477,414,431,432,470,0,438,445],
[473,457,462,471,449,452,0,434],
[470,437,441,438,470,445,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,398,481,459,506,439,477,531],
[492,0,480,461,483,470,517,436],
[409,410,0,411,496,475,479,427],
[431,429,479,0,511,459,475,473],
[384,407,394,379,0,411,471,464],
[451,420,415,431,479,0,446,471],
[413,373,411,415,419,444,0,400],
[359,454,463,417,426,419,490,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,433,400,459,425,460,437],
[464,0,450,396,458,418,441,439],
[457,440,0,435,483,406,386,397],
[490,494,455,0,499,454,418,451],
[431,432,407,391,0,357,380,390],
[465,472,484,436,533,0,469,489],
[430,449,504,472,510,421,0,506],
[453,451,493,439,500,401,384,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,477,484,442,472,461,453],
[452,0,422,476,456,476,432,461],
[413,468,0,465,443,461,439,453],
[406,414,425,0,423,451,432,435],
[448,434,447,467,0,458,460,467],
[418,414,429,439,432,0,422,423],
[429,458,451,458,430,468,0,444],
[437,429,437,455,423,467,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,489,426,526,548,513,438],
[452,0,428,453,526,479,520,486],
[401,462,0,424,440,477,508,475],
[464,437,466,0,490,475,486,442],
[364,364,450,400,0,487,486,425],
[342,411,413,415,403,0,388,417],
[377,370,382,404,404,502,0,340],
[452,404,415,448,465,473,550,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,471,449,440,447,439,425],
[438,0,480,471,435,439,452,437],
[419,410,0,440,417,412,428,386],
[441,419,450,0,435,407,444,429],
[450,455,473,455,0,446,448,441],
[443,451,478,483,444,0,477,449],
[451,438,462,446,442,413,0,414],
[465,453,504,461,449,441,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,480,509,445,486,470,432],
[434,0,435,428,400,423,471,454],
[410,455,0,496,436,471,500,435],
[381,462,394,0,392,445,481,449],
[445,490,454,498,0,480,493,462],
[404,467,419,445,410,0,455,436],
[420,419,390,409,397,435,0,445],
[458,436,455,441,428,454,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,438,427,385,432,431,425],
[474,0,437,458,454,454,474,454],
[452,453,0,452,422,452,448,429],
[463,432,438,0,422,446,469,416],
[505,436,468,468,0,496,464,450],
[458,436,438,444,394,0,441,440],
[459,416,442,421,426,449,0,423],
[465,436,461,474,440,450,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,441,428,449,452,450,443],
[441,0,436,435,429,437,429,431],
[449,454,0,462,430,469,453,449],
[462,455,428,0,428,445,440,445],
[441,461,460,462,0,443,443,433],
[438,453,421,445,447,0,431,421],
[440,461,437,450,447,459,0,443],
[447,459,441,445,457,469,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,470,440,473,468,443,460],
[436,0,453,447,460,456,459,442],
[420,437,0,428,451,410,435,426],
[450,443,462,0,470,474,434,449],
[417,430,439,420,0,435,431,439],
[422,434,480,416,455,0,437,453],
[447,431,455,456,459,453,0,448],
[430,448,464,441,451,437,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,427,438,422,460,494,509],
[459,0,444,489,428,406,464,483],
[463,446,0,460,377,391,455,452],
[452,401,430,0,418,404,443,451],
[468,462,513,472,0,402,489,498],
[430,484,499,486,488,0,476,522],
[396,426,435,447,401,414,0,449],
[381,407,438,439,392,368,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,432,438,418,436,438,410],
[452,0,447,447,423,455,453,430],
[458,443,0,431,418,436,420,442],
[452,443,459,0,402,465,433,431],
[472,467,472,488,0,457,445,465],
[454,435,454,425,433,0,430,428],
[452,437,470,457,445,460,0,470],
[480,460,448,459,425,462,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,454,456,434,448,459,430],
[447,0,443,463,438,447,474,446],
[436,447,0,458,443,445,469,446],
[434,427,432,0,435,436,445,416],
[456,452,447,455,0,445,466,447],
[442,443,445,454,445,0,458,422],
[431,416,421,445,424,432,0,406],
[460,444,444,474,443,468,484,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,433,410,430,444,436,448],
[456,0,438,450,453,470,455,485],
[457,452,0,436,440,445,464,483],
[480,440,454,0,451,485,446,476],
[460,437,450,439,0,478,470,483],
[446,420,445,405,412,0,433,467],
[454,435,426,444,420,457,0,468],
[442,405,407,414,407,423,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,420,425,420,433,433,431],
[445,0,406,432,408,448,427,453],
[470,484,0,450,422,465,487,469],
[465,458,440,0,450,458,476,452],
[470,482,468,440,0,470,484,466],
[457,442,425,432,420,0,454,440],
[457,463,403,414,406,436,0,439],
[459,437,421,438,424,450,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,461,519,446,429,410,425],
[453,0,489,515,425,499,487,453],
[429,401,0,510,395,471,420,467],
[371,375,380,0,384,407,427,372],
[444,465,495,506,0,441,432,498],
[461,391,419,483,449,0,419,432],
[480,403,470,463,458,471,0,462],
[465,437,423,518,392,458,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,428,441,440,447,410,441],
[450,0,431,437,450,460,437,444],
[462,459,0,441,478,495,460,460],
[449,453,449,0,455,480,444,445],
[450,440,412,435,0,462,453,442],
[443,430,395,410,428,0,424,419],
[480,453,430,446,437,466,0,453],
[449,446,430,445,448,471,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,455,429,453,439,469,428],
[435,0,430,418,447,447,445,423],
[435,460,0,465,489,468,458,451],
[461,472,425,0,483,459,468,453],
[437,443,401,407,0,421,425,420],
[451,443,422,431,469,0,458,433],
[421,445,432,422,465,432,0,419],
[462,467,439,437,470,457,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,476,487,467,455,454,439],
[441,0,457,406,467,416,408,457],
[414,433,0,424,432,399,428,428],
[403,484,466,0,471,429,430,444],
[423,423,458,419,0,404,424,423],
[435,474,491,461,486,0,432,452],
[436,482,462,460,466,458,0,433],
[451,433,462,446,467,438,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,475,464,464,437,434,446],
[449,0,452,443,426,400,413,429],
[415,438,0,456,431,420,440,410],
[426,447,434,0,431,410,413,434],
[426,464,459,459,0,406,423,456],
[453,490,470,480,484,0,466,436],
[456,477,450,477,467,424,0,442],
[444,461,480,456,434,454,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,416,430,436,437,438,433],
[464,0,439,446,457,436,464,430],
[474,451,0,453,443,447,460,454],
[460,444,437,0,433,439,448,437],
[454,433,447,457,0,444,446,453],
[453,454,443,451,446,0,435,429],
[452,426,430,442,444,455,0,412],
[457,460,436,453,437,461,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,386,429,433,473,437,456,460],
[504,0,437,476,472,441,505,468],
[461,453,0,473,572,480,520,410],
[457,414,417,0,519,413,531,427],
[417,418,318,371,0,359,431,341],
[453,449,410,477,531,0,520,435],
[434,385,370,359,459,370,0,386],
[430,422,480,463,549,455,504,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,469,449,453,460,485,444],
[431,0,465,414,464,448,437,448],
[421,425,0,429,455,433,439,435],
[441,476,461,0,450,500,449,494],
[437,426,435,440,0,432,461,436],
[430,442,457,390,458,0,462,433],
[405,453,451,441,429,428,0,451],
[446,442,455,396,454,457,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,410,479,396,406,473,440,512],
[480,0,532,509,407,501,498,546],
[411,358,0,374,322,393,422,433],
[494,381,516,0,478,466,533,472],
[484,483,568,412,0,454,497,465],
[417,389,497,424,436,0,389,504],
[450,392,468,357,393,501,0,453],
[378,344,457,418,425,386,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,427,463,416,425,419,432],
[461,0,436,448,462,412,448,443],
[463,454,0,459,460,417,452,443],
[427,442,431,0,448,381,408,407],
[474,428,430,442,0,430,441,444],
[465,478,473,509,460,0,480,440],
[471,442,438,482,449,410,0,445],
[458,447,447,483,446,450,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,477,451,451,425,457,480,469],
[413,0,471,460,423,438,478,486],
[439,419,0,423,403,431,463,446],
[439,430,467,0,455,454,448,449],
[465,467,487,435,0,483,458,475],
[433,452,459,436,407,0,454,467],
[410,412,427,442,432,436,0,444],
[421,404,444,441,415,423,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,419,435,419,423,440,425],
[459,0,456,464,440,465,466,451],
[471,434,0,481,447,464,455,463],
[455,426,409,0,422,433,436,423],
[471,450,443,468,0,442,451,448],
[467,425,426,457,448,0,452,454],
[450,424,435,454,439,438,0,427],
[465,439,427,467,442,436,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,420,417,413,434,449,427],
[458,0,457,431,435,457,435,432],
[470,433,0,437,443,445,460,448],
[473,459,453,0,426,423,461,439],
[477,455,447,464,0,450,462,435],
[456,433,445,467,440,0,450,409],
[441,455,430,429,428,440,0,415],
[463,458,442,451,455,481,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,417,390,475,392,425,384],
[446,0,384,422,458,416,425,422],
[473,506,0,430,477,459,476,477],
[500,468,460,0,487,414,463,461],
[415,432,413,403,0,406,385,431],
[498,474,431,476,484,0,437,425],
[465,465,414,427,505,453,0,450],
[506,468,413,429,459,465,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,435,420,392,418,436,442,430],
[455,0,456,411,433,464,467,455],
[470,434,0,448,471,467,449,445],
[498,479,442,0,477,493,472,453],
[472,457,419,413,0,468,438,436],
[454,426,423,397,422,0,444,441],
[448,423,441,418,452,446,0,411],
[460,435,445,437,454,449,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,453,444,417,437,427,437],
[447,0,439,424,433,448,422,426],
[437,451,0,464,459,448,434,444],
[446,466,426,0,453,445,435,425],
[473,457,431,437,0,466,434,448],
[453,442,442,445,424,0,426,420],
[463,468,456,455,456,464,0,441],
[453,464,446,465,442,470,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,401,429,420,438,433,446,414],
[489,0,469,456,478,449,469,445],
[461,421,0,414,418,420,456,426],
[470,434,476,0,440,439,473,475],
[452,412,472,450,0,441,446,445],
[457,441,470,451,449,0,471,455],
[444,421,434,417,444,419,0,418],
[476,445,464,415,445,435,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,431,413,420,444,437,436],
[461,0,455,438,442,469,458,456],
[459,435,0,440,436,469,448,429],
[477,452,450,0,449,444,461,427],
[470,448,454,441,0,477,472,451],
[446,421,421,446,413,0,459,451],
[453,432,442,429,418,431,0,412],
[454,434,461,463,439,439,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,467,442,454,460,447,445],
[448,0,450,440,454,447,442,438],
[423,440,0,438,459,434,422,452],
[448,450,452,0,469,456,450,441],
[436,436,431,421,0,434,420,419],
[430,443,456,434,456,0,432,451],
[443,448,468,440,470,458,0,444],
[445,452,438,449,471,439,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,464,466,478,485,423,468],
[432,0,413,434,454,455,447,423],
[426,477,0,458,468,463,437,457],
[424,456,432,0,410,464,406,437],
[412,436,422,480,0,437,408,401],
[405,435,427,426,453,0,387,452],
[467,443,453,484,482,503,0,464],
[422,467,433,453,489,438,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,365,417,456,423,363,436],
[478,0,417,431,448,455,406,463],
[525,473,0,461,507,465,434,500],
[473,459,429,0,448,476,407,426],
[434,442,383,442,0,447,447,460],
[467,435,425,414,443,0,436,426],
[527,484,456,483,443,454,0,495],
[454,427,390,464,430,464,395,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,0,0,445,0,445,445],
[445,0,445,445,445,445,445,890],
[890,445,0,890,890,445,445,445],
[890,445,0,0,445,0,445,445],
[445,445,0,445,0,0,445,445],
[890,445,445,890,890,0,890,445],
[445,445,445,445,445,0,0,445],
[445,0,445,445,445,445,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,494,494,439,538,454,452],
[436,0,448,416,482,480,469,432],
[396,442,0,470,455,451,445,441],
[396,474,420,0,469,431,470,450],
[451,408,435,421,0,435,417,408],
[352,410,439,459,455,0,455,446],
[436,421,445,420,473,435,0,383],
[438,458,449,440,482,444,507,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,425,440,462,423,420,428],
[457,0,441,457,461,438,448,421],
[465,449,0,458,472,451,436,440],
[450,433,432,0,456,418,431,433],
[428,429,418,434,0,426,427,428],
[467,452,439,472,464,0,437,456],
[470,442,454,459,463,453,0,443],
[462,469,450,457,462,434,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,433,447,427,450,431,451],
[438,0,459,439,426,458,455,449],
[457,431,0,446,441,436,441,448],
[443,451,444,0,445,444,450,465],
[463,464,449,445,0,453,455,472],
[440,432,454,446,437,0,451,448],
[459,435,449,440,435,439,0,449],
[439,441,442,425,418,442,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,427,410,407,416,427,414],
[466,0,436,452,446,444,455,427],
[463,454,0,419,436,443,448,447],
[480,438,471,0,467,476,463,445],
[483,444,454,423,0,455,444,418],
[474,446,447,414,435,0,441,398],
[463,435,442,427,446,449,0,435],
[476,463,443,445,472,492,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,417,404,430,420,438,429],
[444,0,458,437,458,421,425,433],
[473,432,0,447,463,454,439,442],
[486,453,443,0,489,475,467,469],
[460,432,427,401,0,422,408,403],
[470,469,436,415,468,0,428,439],
[452,465,451,423,482,462,0,411],
[461,457,448,421,487,451,479,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,436,477,463,458,467,452,454],
[454,0,427,432,442,432,429,445],
[413,463,0,446,455,436,434,442],
[427,458,444,0,440,451,424,443],
[432,448,435,450,0,436,440,438],
[423,458,454,439,454,0,438,435],
[438,461,456,466,450,452,0,452],
[436,445,448,447,452,455,438,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,463,446,461,462,462,436],
[430,0,434,421,424,459,430,437],
[427,456,0,432,462,465,427,417],
[444,469,458,0,482,470,438,448],
[429,466,428,408,0,432,447,438],
[428,431,425,420,458,0,442,422],
[428,460,463,452,443,448,0,459],
[454,453,473,442,452,468,431,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,414,417,422,413,428,412],
[448,0,428,426,429,416,439,415],
[476,462,0,448,438,446,441,419],
[473,464,442,0,443,450,451,453],
[468,461,452,447,0,455,449,443],
[477,474,444,440,435,0,459,435],
[462,451,449,439,441,431,0,431],
[478,475,471,437,447,455,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,451,450,449,458,449,436],
[428,0,440,426,442,420,446,439],
[439,450,0,446,461,466,473,433],
[440,464,444,0,444,457,451,484],
[441,448,429,446,0,442,438,441],
[432,470,424,433,448,0,442,447],
[441,444,417,439,452,448,0,436],
[454,451,457,406,449,443,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,477,450,457,440,443,448],
[432,0,481,468,462,446,462,495],
[413,409,0,393,442,420,404,416],
[440,422,497,0,466,447,431,451],
[433,428,448,424,0,432,436,449],
[450,444,470,443,458,0,450,447],
[447,428,486,459,454,440,0,486],
[442,395,474,439,441,443,404,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,442,452,469,456,443,459],
[439,0,468,460,448,441,441,459],
[448,422,0,453,449,442,424,438],
[438,430,437,0,453,442,459,437],
[421,442,441,437,0,436,430,430],
[434,449,448,448,454,0,452,467],
[447,449,466,431,460,438,0,448],
[431,431,452,453,460,423,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,510,416,432,421,462,436,481],
[380,0,403,408,391,418,438,435],
[474,487,0,413,420,430,448,478],
[458,482,477,0,406,473,466,478],
[469,499,470,484,0,489,441,505],
[428,472,460,417,401,0,427,497],
[454,452,442,424,449,463,0,447],
[409,455,412,412,385,393,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,438,458,450,455,448,463],
[436,0,453,445,471,448,444,470],
[452,437,0,460,462,433,464,462],
[432,445,430,0,448,437,442,460],
[440,419,428,442,0,457,443,444],
[435,442,457,453,433,0,429,455],
[442,446,426,448,447,461,0,440],
[427,420,428,430,446,435,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,448,467,471,457,432,478],
[440,0,480,500,466,465,460,479],
[442,410,0,494,450,456,455,478],
[423,390,396,0,452,419,410,424],
[419,424,440,438,0,448,445,446],
[433,425,434,471,442,0,445,460],
[458,430,435,480,445,445,0,454],
[412,411,412,466,444,430,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,445,438,461,423,437,430],
[443,0,439,423,473,441,466,450],
[445,451,0,466,472,444,467,441],
[452,467,424,0,471,453,468,468],
[429,417,418,419,0,409,423,412],
[467,449,446,437,481,0,463,457],
[453,424,423,422,467,427,0,433],
[460,440,449,422,478,433,457,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,485,471,502,451,446,465],
[451,0,427,449,472,453,448,432],
[405,463,0,451,471,443,481,462],
[419,441,439,0,472,454,436,458],
[388,418,419,418,0,421,444,394],
[439,437,447,436,469,0,480,405],
[444,442,409,454,446,410,0,431],
[425,458,428,432,496,485,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,403,454,407,441,446,427],
[444,0,417,443,426,443,481,488],
[487,473,0,456,452,439,463,458],
[436,447,434,0,426,442,426,398],
[483,464,438,464,0,432,439,441],
[449,447,451,448,458,0,477,417],
[444,409,427,464,451,413,0,414],
[463,402,432,492,449,473,476,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,453,428,414,437,462,510],
[466,0,469,453,443,444,475,507],
[437,421,0,415,425,450,482,505],
[462,437,475,0,445,469,478,507],
[476,447,465,445,0,459,463,508],
[453,446,440,421,431,0,436,481],
[428,415,408,412,427,454,0,494],
[380,383,385,383,382,409,396,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,338,436,501,367,422,468,403],
[552,0,485,441,460,565,455,478],
[454,405,0,440,420,502,442,412],
[389,449,450,0,386,553,420,382],
[523,430,470,504,0,469,452,467],
[468,325,388,337,421,0,426,390],
[422,435,448,470,438,464,0,379],
[487,412,478,508,423,500,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,445,445,437,427,422,436],
[438,0,449,472,438,437,424,422],
[445,441,0,443,412,412,438,428],
[445,418,447,0,408,439,423,418],
[453,452,478,482,0,463,440,470],
[463,453,478,451,427,0,463,438],
[468,466,452,467,450,427,0,460],
[454,468,462,472,420,452,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,372,404,387,420,417,426,445],
[518,0,428,465,491,432,474,423],
[486,462,0,483,499,424,512,377],
[503,425,407,0,517,422,466,397],
[470,399,391,373,0,445,428,406],
[473,458,466,468,445,0,504,405],
[464,416,378,424,462,386,0,413],
[445,467,513,493,484,485,477,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,465,459,431,450,449,439,463],
[425,0,434,436,410,439,418,444],
[431,456,0,443,439,430,422,426],
[459,454,447,0,429,434,419,446],
[440,480,451,461,0,447,433,450],
[441,451,460,456,443,0,449,458],
[451,472,468,471,457,441,0,475],
[427,446,464,444,440,432,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,451,428,471,451,435,436],
[450,0,454,431,479,476,447,459],
[439,436,0,451,482,438,438,446],
[462,459,439,0,475,462,442,465],
[419,411,408,415,0,436,380,410],
[439,414,452,428,454,0,422,443],
[455,443,452,448,510,468,0,464],
[454,431,444,425,480,447,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,404,421,415,451,438,436,423],
[486,0,458,436,434,478,459,462],
[469,432,0,394,436,423,414,465],
[475,454,496,0,484,426,432,460],
[439,456,454,406,0,418,459,468],
[452,412,467,464,472,0,444,475],
[454,431,476,458,431,446,0,466],
[467,428,425,430,422,415,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,421,415,441,398,406,453],
[433,0,449,431,448,460,459,473],
[469,441,0,440,438,450,440,470],
[475,459,450,0,466,463,435,464],
[449,442,452,424,0,445,431,454],
[492,430,440,427,445,0,441,452],
[484,431,450,455,459,449,0,475],
[437,417,420,426,436,438,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,509,503,488,460,431,494,477],
[381,0,427,390,385,423,367,437],
[387,463,0,368,454,397,416,416],
[402,500,522,0,428,455,476,420],
[430,505,436,462,0,430,418,468],
[459,467,493,435,460,0,442,492],
[396,523,474,414,472,448,0,492],
[413,453,474,470,422,398,398,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,411,436,459,425,403,480],
[490,0,475,449,440,472,456,495],
[479,415,0,448,382,395,404,476],
[454,441,442,0,445,412,410,504],
[431,450,508,445,0,437,437,461],
[465,418,495,478,453,0,423,497],
[487,434,486,480,453,467,0,482],
[410,395,414,386,429,393,408,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,462,453,455,426,447,454,449],
[428,0,427,434,412,429,443,446],
[437,463,0,450,422,437,473,442],
[435,456,440,0,448,443,478,434],
[464,478,468,442,0,468,473,474],
[443,461,453,447,422,0,471,472],
[436,447,417,412,417,419,0,451],
[441,444,448,456,416,418,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,427,410,427,378,391,427],
[402,0,442,415,392,406,418,368],
[463,448,0,455,447,423,421,446],
[480,475,435,0,422,426,448,434],
[463,498,443,468,0,468,447,409],
[512,484,467,464,422,0,484,468],
[499,472,469,442,443,406,0,439],
[463,522,444,456,481,422,451,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,453,437,449,444,469,438],
[439,0,453,430,451,443,490,429],
[437,437,0,448,451,464,483,438],
[453,460,442,0,451,436,497,460],
[441,439,439,439,0,439,487,415],
[446,447,426,454,451,0,499,426],
[421,400,407,393,403,391,0,394],
[452,461,452,430,475,464,496,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,458,461,455,424,455,430],
[448,0,441,452,447,427,443,430],
[432,449,0,465,445,446,433,452],
[429,438,425,0,429,404,426,448],
[435,443,445,461,0,418,430,412],
[466,463,444,486,472,0,453,430],
[435,447,457,464,460,437,0,462],
[460,460,438,442,478,460,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,475,457,444,447,432,449],
[430,0,455,453,440,434,429,450],
[415,435,0,447,443,437,418,451],
[433,437,443,0,443,407,411,422],
[446,450,447,447,0,443,433,434],
[443,456,453,483,447,0,449,461],
[458,461,472,479,457,441,0,441],
[441,440,439,468,456,429,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,399,439,443,437,415,425],
[453,0,456,488,446,403,482,432],
[491,434,0,502,439,440,448,478],
[451,402,388,0,385,503,459,459],
[447,444,451,505,0,438,420,450],
[453,487,450,387,452,0,484,416],
[475,408,442,431,470,406,0,444],
[465,458,412,431,440,474,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,426,401,417,449,436,425],
[468,0,459,437,452,486,480,462],
[464,431,0,423,433,457,463,432],
[489,453,467,0,452,481,472,443],
[473,438,457,438,0,445,467,452],
[441,404,433,409,445,0,434,436],
[454,410,427,418,423,456,0,445],
[465,428,458,447,438,454,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,420,435,439,412,422,448],
[474,0,465,471,463,430,456,454],
[470,425,0,440,457,451,449,450],
[455,419,450,0,501,454,437,479],
[451,427,433,389,0,429,400,432],
[478,460,439,436,461,0,454,481],
[468,434,441,453,490,436,0,470],
[442,436,440,411,458,409,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,475,487,488,423,471,473],
[444,0,490,507,473,472,468,514],
[415,400,0,493,460,438,460,464],
[403,383,397,0,444,415,458,441],
[402,417,430,446,0,444,427,488],
[467,418,452,475,446,0,465,488],
[419,422,430,432,463,425,0,460],
[417,376,426,449,402,402,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,505,453,430,466,476,433,443],
[385,0,444,415,423,446,399,442],
[437,446,0,445,420,450,424,426],
[460,475,445,0,427,443,449,466],
[424,467,470,463,0,469,449,455],
[414,444,440,447,421,0,418,426],
[457,491,466,441,441,472,0,447],
[447,448,464,424,435,464,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,435,446,441,447,437,442],
[453,0,448,433,411,445,440,446],
[455,442,0,424,429,448,437,448],
[444,457,466,0,450,451,464,457],
[449,479,461,440,0,460,452,460],
[443,445,442,439,430,0,427,432],
[453,450,453,426,438,463,0,446],
[448,444,442,433,430,458,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,447,424,449,427,425,419],
[436,0,457,425,456,414,451,420],
[443,433,0,436,447,423,430,417],
[466,465,454,0,472,446,449,442],
[441,434,443,418,0,425,415,419],
[463,476,467,444,465,0,446,448],
[465,439,460,441,475,444,0,422],
[471,470,473,448,471,442,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,442,467,429,419,431,441],
[439,0,442,449,416,430,432,427],
[448,448,0,443,427,440,419,446],
[423,441,447,0,431,442,433,439],
[461,474,463,459,0,442,467,447],
[471,460,450,448,448,0,442,460],
[459,458,471,457,423,448,0,455],
[449,463,444,451,443,430,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,386,437,435,424,445,444],
[471,0,422,431,424,429,405,381],
[504,468,0,467,465,450,424,446],
[453,459,423,0,463,442,443,419],
[455,466,425,427,0,454,408,438],
[466,461,440,448,436,0,413,414],
[445,485,466,447,482,477,0,475],
[446,509,444,471,452,476,415,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,464,450,453,424,415,425],
[440,0,455,419,458,440,438,433],
[426,435,0,404,456,447,420,424],
[440,471,486,0,453,415,396,446],
[437,432,434,437,0,423,426,411],
[466,450,443,475,467,0,435,431],
[475,452,470,494,464,455,0,434],
[465,457,466,444,479,459,456,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,434,479,455,432,482,454,438],
[456,0,484,436,445,449,441,428],
[411,406,0,444,393,429,427,411],
[435,454,446,0,425,444,414,410],
[458,445,497,465,0,459,449,436],
[408,441,461,446,431,0,416,441],
[436,449,463,476,441,474,0,447],
[452,462,479,480,454,449,443,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,411,437,455,492,474,418],
[459,0,460,449,458,469,495,421],
[479,430,0,436,469,475,489,417],
[453,441,454,0,521,510,518,504],
[435,432,421,369,0,454,467,401],
[398,421,415,380,436,0,439,423],
[416,395,401,372,423,451,0,326],
[472,469,473,386,489,467,564,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,434,430,451,440,447,453],
[466,0,441,442,468,443,463,447],
[456,449,0,441,468,460,455,478],
[460,448,449,0,465,442,444,457],
[439,422,422,425,0,425,442,448],
[450,447,430,448,465,0,455,463],
[443,427,435,446,448,435,0,456],
[437,443,412,433,442,427,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,486,488,403,427,426,482],
[432,0,458,451,460,393,411,494],
[404,432,0,447,376,452,389,450],
[402,439,443,0,422,360,383,418],
[487,430,514,468,0,426,442,524],
[463,497,438,530,464,0,487,467],
[464,479,501,507,448,403,0,524],
[408,396,440,472,366,423,366,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,457,467,445,453,462,466,452],
[433,0,445,432,455,450,464,447],
[423,445,0,428,424,459,453,428],
[445,458,462,0,449,464,468,473],
[437,435,466,441,0,472,462,452],
[428,440,431,426,418,0,444,445],
[424,426,437,422,428,446,0,423],
[438,443,462,417,438,445,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,440,448,429,420,446,467],
[462,0,468,447,449,438,450,455],
[450,422,0,475,440,457,486,461],
[442,443,415,0,455,458,456,454],
[461,441,450,435,0,456,468,447],
[470,452,433,432,434,0,477,488],
[444,440,404,434,422,413,0,417],
[423,435,429,436,443,402,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,435,437,402,425,420,446],
[503,0,442,483,460,470,476,485],
[455,448,0,456,457,496,439,452],
[453,407,434,0,424,402,424,444],
[488,430,433,466,0,481,447,468],
[465,420,394,488,409,0,426,435],
[470,414,451,466,443,464,0,448],
[444,405,438,446,422,455,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,470,479,466,492,467,452],
[450,0,453,456,482,467,415,424],
[420,437,0,454,429,458,415,442],
[411,434,436,0,432,446,422,422],
[424,408,461,458,0,484,428,438],
[398,423,432,444,406,0,406,448],
[423,475,475,468,462,484,0,429],
[438,466,448,468,452,442,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,408,459,445,474,478,494,490],
[482,0,463,457,475,474,430,437],
[431,427,0,437,477,460,420,440],
[445,433,453,0,463,448,464,441],
[416,415,413,427,0,450,433,432],
[412,416,430,442,440,0,456,440],
[396,460,470,426,457,434,0,427],
[400,453,450,449,458,450,463,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,416,419,426,410,391,398,428],
[474,0,415,460,467,428,439,433],
[471,475,0,436,439,434,437,435],
[464,430,454,0,431,417,426,445],
[480,423,451,459,0,420,421,438],
[499,462,456,473,470,0,463,445],
[492,451,453,464,469,427,0,449],
[462,457,455,445,452,445,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,455,455,441,439,482,455],
[432,0,449,457,471,449,475,431],
[435,441,0,456,452,444,455,440],
[435,433,434,0,453,430,445,454],
[449,419,438,437,0,447,451,429],
[451,441,446,460,443,0,497,484],
[408,415,435,445,439,393,0,422],
[435,459,450,436,461,406,468,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,444,438,422,439,449,438,437],
[446,0,408,440,439,460,434,437],
[452,482,0,462,452,481,452,437],
[468,450,428,0,444,459,453,452],
[451,451,438,446,0,434,462,431],
[441,430,409,431,456,0,451,437],
[452,456,438,437,428,439,0,418],
[453,453,453,438,459,453,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,438,458,443,429,432,450,435],
[452,0,440,447,422,484,439,420],
[432,450,0,429,426,438,463,411],
[447,443,461,0,409,439,451,447],
[461,468,464,481,0,454,469,437],
[458,406,452,451,436,0,462,419],
[440,451,427,439,421,428,0,428],
[455,470,479,443,453,471,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,492,491,451,450,471,510,439],
[398,0,428,456,460,393,452,416],
[399,462,0,436,433,390,477,462],
[439,434,454,0,414,400,456,450],
[440,430,457,476,0,406,436,444],
[419,497,500,490,484,0,490,477],
[380,438,413,434,454,400,0,420],
[451,474,428,440,446,413,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,485,463,429,456,449,459],
[438,0,497,461,436,454,429,447],
[405,393,0,412,398,396,376,414],
[427,429,478,0,425,423,436,446],
[461,454,492,465,0,443,446,461],
[434,436,494,467,447,0,425,454],
[441,461,514,454,444,465,0,462],
[431,443,476,444,429,436,428,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,433,488,454,440,449,470,447],
[457,0,493,485,470,439,482,494],
[402,397,0,413,434,398,435,427],
[436,405,477,0,455,424,474,443],
[450,420,456,435,0,417,445,426],
[441,451,492,466,473,0,492,447],
[420,408,455,416,445,398,0,428],
[443,396,463,447,464,443,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,423,451,428,463,431,456],
[418,0,398,415,431,403,417,407],
[467,492,0,470,444,458,432,440],
[439,475,420,0,453,450,447,467],
[462,459,446,437,0,467,432,465],
[427,487,432,440,423,0,435,426],
[459,473,458,443,458,455,0,470],
[434,483,450,423,425,464,420,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,412,446,440,422,442,439,411],
[478,0,454,454,449,450,454,440],
[444,436,0,439,464,435,454,442],
[450,436,451,0,439,436,469,443],
[468,441,426,451,0,447,451,433],
[448,440,455,454,443,0,448,449],
[451,436,436,421,439,442,0,418],
[479,450,448,447,457,441,472,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,431,440,462,459,413,425],
[461,0,448,479,456,432,436,445],
[459,442,0,425,440,431,412,438],
[450,411,465,0,451,494,425,414],
[428,434,450,439,0,446,442,416],
[431,458,459,396,444,0,427,410],
[477,454,478,465,448,463,0,444],
[465,445,452,476,474,480,446,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,432,439,448,432,466,447],
[434,0,469,453,468,468,450,445],
[458,421,0,441,451,462,459,446],
[451,437,449,0,447,447,437,451],
[442,422,439,443,0,434,440,437],
[458,422,428,443,456,0,451,436],
[424,440,431,453,450,439,0,435],
[443,445,444,439,453,454,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,421,445,483,457,512,465,465],
[469,0,504,444,514,479,535,511],
[445,386,0,438,466,471,401,421],
[407,446,452,0,493,480,476,500],
[433,376,424,397,0,424,394,415],
[378,411,419,410,466,0,486,433],
[425,355,489,414,496,404,0,405],
[425,379,469,390,475,457,485,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,461,451,429,448,448,424,504],
[429,0,519,488,514,541,506,455],
[439,371,0,479,473,443,393,438],
[461,402,411,0,420,453,440,387],
[442,376,417,470,0,460,420,483],
[442,349,447,437,430,0,459,422],
[466,384,497,450,470,431,0,461],
[386,435,452,503,407,468,429,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,437,434,423,458,428,434],
[470,0,472,453,453,449,462,432],
[453,418,0,469,421,461,466,450],
[456,437,421,0,452,447,452,435],
[467,437,469,438,0,480,475,450],
[432,441,429,443,410,0,453,443],
[462,428,424,438,415,437,0,436],
[456,458,440,455,440,447,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,478,507,520,415,479,466,526],
[412,0,483,437,460,435,493,482],
[383,407,0,451,405,434,460,456],
[370,453,439,0,432,447,442,417],
[475,430,485,458,0,436,439,522],
[411,455,456,443,454,0,495,462],
[424,397,430,448,451,395,0,415],
[364,408,434,473,368,428,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,424,435,413,420,386,423,385],
[466,0,466,464,475,448,459,445],
[455,424,0,401,438,435,434,419],
[477,426,489,0,445,439,448,451],
[470,415,452,445,0,441,462,410],
[504,442,455,451,449,0,467,435],
[467,431,456,442,428,423,0,409],
[505,445,471,439,480,455,481,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,465,448,486,454,448,458],
[464,0,446,464,475,462,439,462],
[425,444,0,454,454,474,438,424],
[442,426,436,0,447,437,440,443],
[404,415,436,443,0,447,442,444],
[436,428,416,453,443,0,435,457],
[442,451,452,450,448,455,0,478],
[432,428,466,447,446,433,412,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,488,450,456,447,448,458,437],
[402,0,438,429,419,415,416,421],
[440,452,0,463,454,428,408,432],
[434,461,427,0,455,438,422,433],
[443,471,436,435,0,433,410,414],
[442,475,462,452,457,0,439,452],
[432,474,482,468,480,451,0,464],
[453,469,458,457,476,438,426,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,471,452,473,442,448,433,458],
[419,0,435,449,431,445,428,440],
[438,455,0,447,436,436,451,468],
[417,441,443,0,432,429,447,444],
[448,459,454,458,0,458,457,434],
[442,445,454,461,432,0,478,447],
[457,462,439,443,433,412,0,431],
[432,450,422,446,456,443,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,452,425,440,471,434,420],
[461,0,467,456,452,466,460,443],
[438,423,0,413,439,457,400,418],
[465,434,477,0,472,476,451,435],
[450,438,451,418,0,457,423,430],
[419,424,433,414,433,0,416,416],
[456,430,490,439,467,474,0,446],
[470,447,472,455,460,474,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,420,441,439,441,432,444,440],
[470,0,438,448,442,454,456,429],
[449,452,0,435,446,434,446,445],
[451,442,455,0,448,436,448,465],
[449,448,444,442,0,429,450,449],
[458,436,456,454,461,0,457,448],
[446,434,444,442,440,433,0,443],
[450,461,445,425,441,442,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,443,435,427,447,425,453],
[450,0,440,437,440,467,418,440],
[447,450,0,443,467,451,448,455],
[455,453,447,0,443,454,460,451],
[463,450,423,447,0,426,432,442],
[443,423,439,436,464,0,452,454],
[465,472,442,430,458,438,0,449],
[437,450,435,439,448,436,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,521,424,476,476,446,477,494],
[369,0,480,430,418,413,417,455],
[466,410,0,466,453,464,465,486],
[414,460,424,0,423,429,432,424],
[414,472,437,467,0,428,454,435],
[444,477,426,461,462,0,408,439],
[413,473,425,458,436,482,0,425],
[396,435,404,466,455,451,465,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,475,490,469,440,438,493],
[438,0,468,449,450,449,431,479],
[415,422,0,398,441,409,433,437],
[400,441,492,0,456,415,435,485],
[421,440,449,434,0,401,423,459],
[450,441,481,475,489,0,477,514],
[452,459,457,455,467,413,0,502],
[397,411,453,405,431,376,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,459,477,393,436,431,405],
[459,0,466,504,441,439,426,428],
[431,424,0,472,410,422,414,410],
[413,386,418,0,391,374,385,379],
[497,449,480,499,0,463,436,459],
[454,451,468,516,427,0,433,442],
[459,464,476,505,454,457,0,436],
[485,462,480,511,431,448,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,448,439,467,448,459,507,467],
[442,0,467,487,427,477,481,493],
[451,423,0,459,452,450,472,461],
[423,403,431,0,425,412,412,457],
[442,463,438,465,0,464,544,505],
[431,413,440,478,426,0,415,450],
[383,409,418,478,346,475,0,412],
[423,397,429,433,385,440,478,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,414,442,390,410,406,410,425],
[476,0,485,478,464,454,437,455],
[448,405,0,436,430,418,407,428],
[500,412,454,0,436,456,405,448],
[480,426,460,454,0,450,430,440],
[484,436,472,434,440,0,435,462],
[480,453,483,485,460,455,0,436],
[465,435,462,442,450,428,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,436,461,477,462,461,449],
[424,0,440,429,479,416,428,418],
[454,450,0,447,482,428,443,435],
[429,461,443,0,469,450,429,428],
[413,411,408,421,0,417,433,416],
[428,474,462,440,473,0,449,454],
[429,462,447,461,457,441,0,449],
[441,472,455,462,474,436,441,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,453,436,439,440,444,461],
[438,0,455,442,421,437,426,442],
[437,435,0,431,446,439,439,446],
[454,448,459,0,438,442,445,444],
[451,469,444,452,0,452,438,456],
[450,453,451,448,438,0,440,450],
[446,464,451,445,452,450,0,453],
[429,448,444,446,434,440,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,449,441,461,432,445,450],
[434,0,441,425,441,430,425,430],
[441,449,0,433,461,440,434,437],
[449,465,457,0,470,436,429,468],
[429,449,429,420,0,441,437,431],
[458,460,450,454,449,0,444,444],
[445,465,456,461,453,446,0,431],
[440,460,453,422,459,446,459,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,454,431,430,421,424,389],
[453,0,468,447,434,452,483,413],
[436,422,0,435,446,437,409,381],
[459,443,455,0,470,474,441,445],
[460,456,444,420,0,446,413,396],
[469,438,453,416,444,0,436,436],
[466,407,481,449,477,454,0,441],
[501,477,509,445,494,454,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,441,433,440,429,433,413,444],
[449,0,428,429,490,462,445,444],
[457,462,0,444,471,460,426,456],
[450,461,446,0,452,440,457,456],
[461,400,419,438,0,436,424,410],
[457,428,430,450,454,0,459,475],
[477,445,464,433,466,431,0,451],
[446,446,434,434,480,415,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,430,344,392,430,501,351,361],
[460,0,489,517,439,515,433,426],
[546,401,0,435,441,487,427,423],
[498,373,455,0,453,459,417,379],
[460,451,449,437,0,490,465,380],
[389,375,403,431,400,0,393,377],
[539,457,463,473,425,497,0,504],
[529,464,467,511,510,513,386,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,428,479,453,455,429,453,460],
[462,0,462,487,461,445,446,462],
[411,428,0,429,395,416,410,442],
[437,403,461,0,436,437,433,463],
[435,429,495,454,0,429,409,452],
[461,445,474,453,461,0,453,463],
[437,444,480,457,481,437,0,471],
[430,428,448,427,438,427,419,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,449,431,442,445,444,450,449],
[441,0,464,445,434,462,464,434],
[459,426,0,438,438,456,458,438],
[448,445,452,0,442,447,434,439],
[445,456,452,448,0,468,453,430],
[446,428,434,443,422,0,427,431],
[440,426,432,456,437,463,0,417],
[441,456,452,451,460,459,473,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,453,417,456,434,442,462],
[439,0,438,386,436,420,443,437],
[437,452,0,402,447,466,450,439],
[473,504,488,0,434,475,454,496],
[434,454,443,456,0,448,445,463],
[456,470,424,415,442,0,436,454],
[448,447,440,436,445,454,0,465],
[428,453,451,394,427,436,425,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,435,420,412,435,413,434],
[439,0,443,428,422,427,428,428],
[455,447,0,436,447,461,427,451],
[470,462,454,0,431,445,451,476],
[478,468,443,459,0,467,464,454],
[455,463,429,445,423,0,429,439],
[477,462,463,439,426,461,0,450],
[456,462,439,414,436,451,440,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,463,432,456,442,481,460],
[435,0,436,446,450,428,454,411],
[427,454,0,429,460,449,469,433],
[458,444,461,0,461,461,466,477],
[434,440,430,429,0,443,458,457],
[448,462,441,429,447,0,466,447],
[409,436,421,424,432,424,0,442],
[430,479,457,413,433,443,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,443,456,443,471,452,440,437],
[447,0,465,434,454,456,467,437],
[434,425,0,447,441,439,443,413],
[447,456,443,0,459,436,440,430],
[419,436,449,431,0,449,428,429],
[438,434,451,454,441,0,437,417],
[450,423,447,450,462,453,0,451],
[453,453,477,460,461,473,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,431,447,450,449,454,456],
[430,0,433,438,445,445,446,446],
[459,457,0,437,469,424,454,446],
[443,452,453,0,471,433,459,468],
[440,445,421,419,0,432,425,456],
[441,445,466,457,458,0,469,465],
[436,444,436,431,465,421,0,448],
[434,444,444,422,434,425,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,429,420,424,406,445,449],
[461,0,432,448,431,440,476,451],
[461,458,0,463,428,453,486,429],
[470,442,427,0,478,435,470,453],
[466,459,462,412,0,439,473,462],
[484,450,437,455,451,0,472,459],
[445,414,404,420,417,418,0,436],
[441,439,461,437,428,431,454,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,444,454,444,466,442,437],
[445,0,450,463,452,461,450,458],
[446,440,0,447,436,469,428,436],
[436,427,443,0,452,446,435,433],
[446,438,454,438,0,438,448,423],
[424,429,421,444,452,0,428,418],
[448,440,462,455,442,462,0,453],
[453,432,454,457,467,472,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,417,371,407,509,385,501,431],
[473,0,488,420,488,425,481,431],
[519,402,0,462,553,505,544,405],
[483,470,428,0,552,511,528,536],
[381,402,337,338,0,385,486,329],
[505,465,385,379,505,0,507,464],
[389,409,346,362,404,383,0,379],
[459,459,485,354,561,426,511,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,362,475,422,417,477,379],
[465,0,492,507,492,389,431,469],
[528,398,0,490,455,369,513,412],
[415,383,400,0,401,334,418,416],
[468,398,435,489,0,433,450,474],
[473,501,521,556,457,0,497,440],
[413,459,377,472,440,393,0,373],
[511,421,478,474,416,450,517,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,474,475,442,481,432,446],
[436,0,473,476,462,479,446,455],
[416,417,0,453,452,455,438,420],
[415,414,437,0,449,442,394,419],
[448,428,438,441,0,475,437,453],
[409,411,435,448,415,0,425,396],
[458,444,452,496,453,465,0,457],
[444,435,470,471,437,494,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,460,435,452,444,451,438,435],
[430,0,459,428,431,432,457,441],
[455,431,0,445,455,445,465,439],
[438,462,445,0,425,448,445,445],
[446,459,435,465,0,454,447,448],
[439,458,445,442,436,0,431,435],
[452,433,425,445,443,459,0,430],
[455,449,451,445,442,455,460,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,463,504,447,444,507,487],
[444,0,471,456,457,488,523,519],
[427,419,0,475,460,454,525,495],
[386,434,415,0,423,423,469,459],
[443,433,430,467,0,439,490,466],
[446,402,436,467,451,0,483,477],
[383,367,365,421,400,407,0,441],
[403,371,395,431,424,413,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,419,453,432,453,432,473,463],
[471,0,509,472,401,462,474,485],
[437,381,0,436,421,421,438,465],
[458,418,454,0,419,446,447,434],
[437,489,469,471,0,459,439,508],
[458,428,469,444,431,0,439,465],
[417,416,452,443,451,451,0,473],
[427,405,425,456,382,425,417,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,464,444,467,467,472,481],
[440,0,444,453,440,468,481,469],
[426,446,0,435,459,432,448,455],
[446,437,455,0,450,446,442,446],
[423,450,431,440,0,432,435,443],
[423,422,458,444,458,0,451,433],
[418,409,442,448,455,439,0,445],
[409,421,435,444,447,457,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,462,461,447,451,434,465],
[467,0,461,460,442,445,435,476],
[428,429,0,463,428,448,433,450],
[429,430,427,0,441,418,412,432],
[443,448,462,449,0,429,452,459],
[439,445,442,472,461,0,451,443],
[456,455,457,478,438,439,0,466],
[425,414,440,458,431,447,424,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,431,427,466,425,453,425],
[427,0,427,419,464,427,416,443],
[459,463,0,440,474,458,443,446],
[463,471,450,0,466,421,438,447],
[424,426,416,424,0,410,417,433],
[465,463,432,469,480,0,460,446],
[437,474,447,452,473,430,0,463],
[465,447,444,443,457,444,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,442,457,461,488,454,443],
[423,0,456,444,450,491,473,460],
[448,434,0,448,478,457,448,441],
[433,446,442,0,447,477,469,428],
[429,440,412,443,0,439,431,411],
[402,399,433,413,451,0,436,437],
[436,417,442,421,459,454,0,407],
[447,430,449,462,479,453,483,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,400,355,352,395,345,391,367],
[490,0,457,410,464,469,407,441],
[535,433,0,489,486,474,517,446],
[538,480,401,0,483,456,456,483],
[495,426,404,407,0,361,445,455],
[545,421,416,434,529,0,489,498],
[499,483,373,434,445,401,0,488],
[523,449,444,407,435,392,402,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,440,426,436,424,439,416,466],
[450,0,426,445,430,436,420,479],
[464,464,0,455,468,442,455,465],
[454,445,435,0,439,439,437,472],
[466,460,422,451,0,453,434,474],
[451,454,448,451,437,0,436,470],
[474,470,435,453,456,454,0,502],
[424,411,425,418,416,420,388,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,439,449,416,414,461,420,412],
[451,0,444,426,442,476,441,440],
[441,446,0,444,446,465,439,451],
[474,464,446,0,444,460,463,435],
[476,448,444,446,0,475,446,450],
[429,414,425,430,415,0,421,412],
[470,449,451,427,444,469,0,426],
[478,450,439,455,440,478,464,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,494,502,422,497,500,468,444],
[396,0,443,396,400,401,393,449],
[388,447,0,477,452,415,399,473],
[468,494,413,0,421,482,406,406],
[393,490,438,469,0,425,443,429],
[390,489,475,408,465,0,471,473],
[422,497,491,484,447,419,0,493],
[446,441,417,484,461,417,397,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,476,384,442,455,434,419,448],
[414,0,456,491,470,388,474,459],
[506,434,0,446,416,437,489,463],
[448,399,444,0,367,391,413,417],
[435,420,474,523,0,436,431,451],
[456,502,453,499,454,0,440,429],
[471,416,401,477,459,450,0,489],
[442,431,427,473,439,461,401,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,439,371,362,403,452,399],
[453,0,448,397,412,428,419,392],
[451,442,0,431,435,453,424,376],
[519,493,459,0,433,469,439,457],
[528,478,455,457,0,478,458,443],
[487,462,437,421,412,0,435,425],
[438,471,466,451,432,455,0,415],
[491,498,514,433,447,465,475,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,453,430,435,455,422,438,436],
[437,0,427,413,469,446,417,420],
[460,463,0,452,498,447,434,446],
[455,477,438,0,482,430,454,438],
[435,421,392,408,0,407,412,406],
[468,444,443,460,483,0,457,436],
[452,473,456,436,478,433,0,420],
[454,470,444,452,484,454,470,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,426,431,404,461,421,429,445],
[464,0,435,420,459,437,423,439],
[459,455,0,427,456,424,442,443],
[486,470,463,0,465,449,427,463],
[429,431,434,425,0,416,421,422],
[469,453,466,441,474,0,453,465],
[461,467,448,463,469,437,0,441],
[445,451,447,427,468,425,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,441,431,452,427,488,450],
[448,0,413,447,454,443,478,472],
[449,477,0,459,471,445,474,446],
[459,443,431,0,452,443,480,450],
[438,436,419,438,0,417,462,437],
[463,447,445,447,473,0,485,453],
[402,412,416,410,428,405,0,419],
[440,418,444,440,453,437,471,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,361,443,415,477,442,325,386],
[529,0,411,504,594,412,382,500],
[447,479,0,475,538,500,361,413],
[475,386,415,0,536,473,300,416],
[413,296,352,354,0,324,326,385],
[448,478,390,417,566,0,328,473],
[565,508,529,590,564,562,0,443],
[504,390,477,474,505,417,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,482,440,458,491,443,505],
[435,0,485,411,449,478,454,462],
[408,405,0,414,412,425,413,460],
[450,479,476,0,438,517,440,503],
[432,441,478,452,0,463,452,452],
[399,412,465,373,427,0,429,418],
[447,436,477,450,438,461,0,469],
[385,428,430,387,438,472,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,454,457,433,455,463,449,472],
[436,0,430,431,454,432,431,454],
[433,460,0,453,454,448,448,457],
[457,459,437,0,459,438,441,450],
[435,436,436,431,0,436,438,433],
[427,458,442,452,454,0,431,459],
[441,459,442,449,452,459,0,448],
[418,436,433,440,457,431,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,456,489,462,449,451,441,423],
[434,0,477,457,445,455,462,449],
[401,413,0,469,418,455,429,419],
[428,433,421,0,372,443,448,396],
[441,445,472,518,0,459,455,467],
[439,435,435,447,431,0,429,436],
[449,428,461,442,435,461,0,454],
[467,441,471,494,423,454,436,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,452,466,427,487,405,476,478],
[438,0,456,415,489,407,441,435],
[424,434,0,456,504,450,442,451],
[463,475,434,0,458,462,464,441],
[403,401,386,432,0,377,423,418],
[485,483,440,428,513,0,459,465],
[414,449,448,426,467,431,0,469],
[412,455,439,449,472,425,421,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,407,428,413,434,391,398,435],
[483,0,477,452,466,431,428,452],
[462,413,0,433,462,430,439,453],
[477,438,457,0,443,455,436,464],
[456,424,428,447,0,422,418,456],
[499,459,460,435,468,0,447,469],
[492,462,451,454,472,443,0,496],
[455,438,437,426,434,421,394,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,445,223,667,445,0,222,445],
[445,0,445,668,222,0,222,667],
[667,445,0,890,445,445,445,222],
[223,222,0,0,222,0,222,222],
[445,668,445,668,0,0,222,445],
[890,890,445,890,890,0,667,667],
[668,668,445,668,668,223,0,445],
[445,223,668,668,445,223,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,458,462,438,462,435,450],
[440,0,435,453,440,460,471,445],
[432,455,0,439,441,442,447,436],
[428,437,451,0,445,448,439,428],
[452,450,449,445,0,449,446,456],
[428,430,448,442,441,0,430,440],
[455,419,443,451,444,460,0,446],
[440,445,454,462,434,450,444,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,387,482,528,483,479,417,456],
[503,0,434,552,407,435,501,454],
[408,456,0,534,361,468,426,473],
[362,338,356,0,360,386,385,407],
[407,483,529,530,0,541,465,577],
[411,455,422,504,349,0,436,504],
[473,389,464,505,425,454,0,423],
[434,436,417,483,313,386,467,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,426,413,469,394,469,427],
[415,0,401,416,425,357,408,411],
[464,489,0,475,509,418,425,448],
[477,474,415,0,395,387,401,416],
[421,465,381,495,0,373,420,408],
[496,533,472,503,517,0,434,491],
[421,482,465,489,470,456,0,451],
[463,479,442,474,482,399,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,431,423,460,441,405,439,423],
[459,0,449,493,473,439,454,458],
[467,441,0,479,457,451,440,464],
[430,397,411,0,426,405,426,401],
[449,417,433,464,0,427,448,425],
[485,451,439,485,463,0,449,441],
[451,436,450,464,442,441,0,440],
[467,432,426,489,465,449,450,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,449,438,447,449,445,458],
[435,0,432,437,429,426,442,448],
[441,458,0,435,417,447,440,457],
[452,453,455,0,444,445,429,457],
[443,461,473,446,0,453,457,466],
[441,464,443,445,437,0,448,460],
[445,448,450,461,433,442,0,460],
[432,442,433,433,424,430,430,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,446,449,467,450,485,455,436],
[444,0,470,486,460,452,466,448],
[441,420,0,435,422,469,458,427],
[423,404,455,0,423,443,458,403],
[440,430,468,467,0,475,462,442],
[405,438,421,447,415,0,418,413],
[435,424,432,432,428,472,0,429],
[454,442,463,487,448,477,461,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,472,479,451,448,415,461,479],
[418,0,380,381,444,350,395,439],
[411,510,0,407,483,436,447,477],
[439,509,483,0,512,520,488,548],
[442,446,407,378,0,402,443,419],
[475,540,454,370,488,0,454,452],
[429,495,443,402,447,436,0,456],
[411,451,413,342,471,438,434,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,429,443,442,429,429,465,424],
[461,0,440,438,428,454,457,452],
[447,450,0,446,456,446,464,443],
[448,452,444,0,425,444,488,433],
[461,462,434,465,0,440,470,449],
[461,436,444,446,450,0,468,433],
[425,433,426,402,420,422,0,438],
[466,438,447,457,441,457,452,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,467,441,444,440,456,431,441],
[423,0,450,462,428,448,424,416],
[449,440,0,462,461,467,457,429],
[446,428,428,0,449,422,431,431],
[450,462,429,441,0,451,445,463],
[434,442,423,468,439,0,425,429],
[459,466,433,459,445,465,0,468],
[449,474,461,459,427,461,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,442,447,445,432,439,412,427],
[448,0,462,454,447,431,464,452],
[443,428,0,402,427,412,408,415],
[445,436,488,0,430,434,411,423],
[458,443,463,460,0,425,413,436],
[451,459,478,456,465,0,442,465],
[478,426,482,479,477,448,0,457],
[463,438,475,467,454,425,433,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,405,440,426,453,432,440,466],
[485,0,482,476,445,490,491,479],
[450,408,0,438,441,439,436,425],
[464,414,452,0,433,471,455,422],
[437,445,449,457,0,463,490,476],
[458,400,451,419,427,0,465,434],
[450,399,454,435,400,425,0,442],
[424,411,465,468,414,456,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,437,456,442,447,446,458,457],
[453,0,471,443,437,447,456,445],
[434,419,0,416,420,435,437,425],
[448,447,474,0,438,470,456,444],
[443,453,470,452,0,450,449,464],
[444,443,455,420,440,0,458,442],
[432,434,453,434,441,432,0,435],
[433,445,465,446,426,448,455,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,451,456,466,423,440,437,446],
[439,0,449,438,422,433,444,448],
[434,441,0,432,428,425,448,441],
[424,452,458,0,435,432,445,440],
[467,468,462,455,0,453,442,448],
[450,457,465,458,437,0,429,428],
[453,446,442,445,448,461,0,455],
[444,442,449,450,442,462,435,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,423,489,439,483,475,475,453],
[467,0,447,454,482,459,411,433],
[401,443,0,437,453,452,447,465],
[451,436,453,0,472,441,435,459],
[407,408,437,418,0,456,408,443],
[415,431,438,449,434,0,434,460],
[415,479,443,455,482,456,0,463],
[437,457,425,431,447,430,427,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,425,421,442,447,434,405,428],
[465,0,422,470,483,455,454,456],
[469,468,0,484,469,454,442,439],
[448,420,406,0,446,447,413,420],
[443,407,421,444,0,422,429,418],
[456,435,436,443,468,0,429,418],
[485,436,448,477,461,461,0,451],
[462,434,451,470,472,472,439,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,468,481,438,485,449,475,478],
[422,0,440,405,449,425,432,457],
[409,450,0,451,432,463,398,458],
[452,485,439,0,472,427,438,457],
[405,441,458,418,0,461,408,442],
[441,465,427,463,429,0,458,488],
[415,458,492,452,482,432,0,474],
[412,433,432,433,448,402,416,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,463,444,442,414,453,418,447],
[427,0,398,427,404,421,411,435],
[446,492,0,487,444,456,456,465],
[448,463,403,0,427,443,429,425],
[476,486,446,463,0,447,444,460],
[437,469,434,447,443,0,432,446],
[472,479,434,461,446,458,0,442],
[443,455,425,465,430,444,448,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,422,442,443,421,454,442,451],
[468,0,457,470,452,474,432,437],
[448,433,0,434,448,451,450,443],
[447,420,456,0,440,459,420,439],
[469,438,442,450,0,464,448,447],
[436,416,439,431,426,0,447,440],
[448,458,440,470,442,443,0,443],
[439,453,447,451,443,450,447,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,455,442,433,443,451,407,442],
[435,0,411,449,489,460,421,459],
[448,479,0,479,455,488,447,441],
[457,441,411,0,405,442,447,420],
[447,401,435,485,0,438,431,414],
[439,430,402,448,452,0,440,413],
[483,469,443,443,459,450,0,441],
[448,431,449,470,476,477,449,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,432,423,424,415,417,430,429],
[458,0,445,448,441,411,438,422],
[467,445,0,457,463,456,457,471],
[466,442,433,0,441,432,431,449],
[475,449,427,449,0,461,499,455],
[473,479,434,458,429,0,423,421],
[460,452,433,459,391,467,0,428],
[461,468,419,441,435,469,462,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,475,468,444,446,465,475,488],
[415,0,439,415,405,435,410,450],
[422,451,0,436,407,438,452,465],
[446,475,454,0,415,401,451,464],
[444,485,483,475,0,483,462,464],
[425,455,452,489,407,0,450,458],
[415,480,438,439,428,440,0,445],
[402,440,425,426,426,432,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,447,475,442,459,446,468,456],
[443,0,429,424,434,435,440,439],
[415,461,0,432,438,432,460,474],
[448,466,458,0,436,436,440,456],
[431,456,452,454,0,445,468,453],
[444,455,458,454,445,0,455,439],
[422,450,430,450,422,435,0,424],
[434,451,416,434,437,451,466,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,450,464,462,426,458,447,444],
[440,0,452,454,427,463,436,443],
[426,438,0,446,423,450,452,427],
[428,436,444,0,435,436,448,444],
[464,463,467,455,0,462,446,437],
[432,427,440,454,428,0,456,416],
[443,454,438,442,444,434,0,445],
[446,447,463,446,453,474,445,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,459,464,448,463,435,456,461],
[431,0,447,442,422,416,437,450],
[426,443,0,425,442,417,421,441],
[442,448,465,0,461,462,471,462],
[427,468,448,429,0,429,446,453],
[455,474,473,428,461,0,458,474],
[434,453,469,419,444,432,0,468],
[429,440,449,428,437,416,422,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,466,473,470,429,446,465,454],
[424,0,416,434,443,445,433,435],
[417,474,0,452,466,452,455,434],
[420,456,438,0,411,450,454,429],
[461,447,424,479,0,443,454,441],
[444,445,438,440,447,0,443,428],
[425,457,435,436,436,447,0,453],
[436,455,456,461,449,462,437,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,458,446,454,443,451,456,442],
[432,0,452,437,446,468,443,454],
[444,438,0,447,454,443,425,440],
[436,453,443,0,455,452,441,446],
[447,444,436,435,0,458,464,455],
[439,422,447,438,432,0,428,451],
[434,447,465,449,426,462,0,448],
[448,436,450,444,435,439,442,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 890, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_890.csv", index=False, header=False)