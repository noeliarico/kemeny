
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,70,70,62,76,56,74,71],
[60,0,62,56,66,49,60,71],
[60,68,0,65,80,71,68,67],
[68,74,65,0,78,64,73,80],
[54,64,50,52,0,55,63,70],
[74,81,59,66,75,0,75,78],
[56,70,62,57,67,55,0,69],
[59,59,63,50,60,52,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,64,72,57,69,57],
[65,0,67,65,69,62,62,67],
[63,63,0,62,70,59,59,64],
[66,65,68,0,68,64,65,59],
[58,61,60,62,0,59,60,59],
[73,68,71,66,71,0,65,64],
[61,68,71,65,70,65,0,64],
[73,63,66,71,71,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,70,68,77,62,65],
[73,0,59,60,55,57,51,56],
[62,71,0,64,62,62,57,46],
[60,70,66,0,71,63,53,47],
[62,75,68,59,0,60,60,55],
[53,73,68,67,70,0,48,45],
[68,79,73,77,70,82,0,55],
[65,74,84,83,75,85,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,73,78,71,63,75],
[64,0,75,61,82,55,57,66],
[66,55,0,61,76,59,60,64],
[57,69,69,0,71,58,63,64],
[52,48,54,59,0,59,58,54],
[59,75,71,72,71,0,63,69],
[67,73,70,67,72,67,0,61],
[55,64,66,66,76,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,50,61,59,52,77],
[69,0,63,74,73,69,69,79],
[72,67,0,61,73,67,67,68],
[80,56,69,0,71,70,65,73],
[69,57,57,59,0,61,63,61],
[71,61,63,60,69,0,63,70],
[78,61,63,65,67,67,0,69],
[53,51,62,57,69,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,76,71,46,66,72],
[73,0,43,70,52,43,61,48],
[66,87,0,81,54,66,50,54],
[54,60,49,0,54,53,82,77],
[59,78,76,76,0,69,66,72],
[84,87,64,77,61,0,86,90],
[64,69,80,48,64,44,0,88],
[58,82,76,53,58,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,45,73,83,74,84],
[62,0,46,57,41,56,65,69],
[67,84,0,50,54,70,76,84],
[85,73,80,0,66,61,81,80],
[57,89,76,64,0,63,78,90],
[47,74,60,69,67,0,66,82],
[56,65,54,49,52,64,0,52],
[46,61,46,50,40,48,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,78,59,57,66,62],
[65,0,69,71,61,67,67,75],
[53,61,0,71,59,64,68,59],
[52,59,59,0,56,53,59,58],
[71,69,71,74,0,69,65,76],
[73,63,66,77,61,0,67,70],
[64,63,62,71,65,63,0,73],
[68,55,71,72,54,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,69,63,64,72,70,61],
[74,0,71,68,62,70,62,57],
[61,59,0,65,54,71,57,57],
[67,62,65,0,67,67,71,53],
[66,68,76,63,0,76,66,62],
[58,60,59,63,54,0,55,61],
[60,68,73,59,64,75,0,65],
[69,73,73,77,68,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,61,67,65,58,56,57],
[77,0,71,71,65,66,72,62],
[69,59,0,69,67,52,56,66],
[63,59,61,0,61,59,50,53],
[65,65,63,69,0,59,59,60],
[72,64,78,71,71,0,68,66],
[74,58,74,80,71,62,0,66],
[73,68,64,77,70,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,65,62,61,63,62],
[71,0,70,65,63,68,67,62],
[60,60,0,66,50,53,60,63],
[65,65,64,0,51,63,60,62],
[68,67,80,79,0,70,67,65],
[69,62,77,67,60,0,64,64],
[67,63,70,70,63,66,0,65],
[68,68,67,68,65,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,62,59,59,48,66,57],
[60,0,57,57,63,53,58,59],
[68,73,0,65,70,60,56,67],
[71,73,65,0,72,63,66,52],
[71,67,60,58,0,65,61,53],
[82,77,70,67,65,0,76,65],
[64,72,74,64,69,54,0,67],
[73,71,63,78,77,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,61,58,71,58,67],
[72,0,64,70,70,64,66,64],
[66,66,0,66,59,75,65,67],
[69,60,64,0,59,64,62,64],
[72,60,71,71,0,69,70,66],
[59,66,55,66,61,0,64,65],
[72,64,65,68,60,66,0,69],
[63,66,63,66,64,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,64,66,66,58,59],
[70,0,66,68,72,71,73,55],
[57,64,0,60,66,63,63,59],
[66,62,70,0,65,74,66,57],
[64,58,64,65,0,74,63,59],
[64,59,67,56,56,0,62,54],
[72,57,67,64,67,68,0,65],
[71,75,71,73,71,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,59,47,62,50,66,52],
[67,0,78,43,60,56,76,56],
[71,52,0,54,65,53,72,49],
[83,87,76,0,60,66,78,69],
[68,70,65,70,0,57,67,81],
[80,74,77,64,73,0,79,63],
[64,54,58,52,63,51,0,48],
[78,74,81,61,49,67,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,65,70,66,66,69],
[69,0,59,62,64,65,66,64],
[65,71,0,68,74,68,75,67],
[65,68,62,0,65,73,66,64],
[60,66,56,65,0,65,63,61],
[64,65,62,57,65,0,64,58],
[64,64,55,64,67,66,0,64],
[61,66,63,66,69,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,57,61,73,67,63,63],
[77,0,61,67,68,66,73,62],
[73,69,0,76,72,61,71,68],
[69,63,54,0,61,59,60,61],
[57,62,58,69,0,75,64,60],
[63,64,69,71,55,0,60,61],
[67,57,59,70,66,70,0,72],
[67,68,62,69,70,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,69,51,61,67,49],
[62,0,73,51,50,62,64,71],
[69,57,0,47,59,67,63,58],
[61,79,83,0,64,68,78,73],
[79,80,71,66,0,69,81,65],
[69,68,63,62,61,0,71,67],
[63,66,67,52,49,59,0,53],
[81,59,72,57,65,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,57,55,85,94,92],
[73,0,93,87,91,45,122,128],
[73,37,0,37,41,43,41,41],
[73,43,93,0,19,49,122,69],
[75,39,89,111,0,45,122,77],
[45,85,87,81,85,0,85,85],
[36,8,89,8,8,45,0,45],
[38,2,89,61,53,45,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,52,60,64,60,73],
[72,0,73,65,73,70,67,84],
[61,57,0,51,64,61,56,66],
[78,65,79,0,69,71,73,84],
[70,57,66,61,0,68,59,76],
[66,60,69,59,62,0,64,83],
[70,63,74,57,71,66,0,74],
[57,46,64,46,54,47,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,43,70,50,59,56,98],
[62,0,72,49,50,73,69,72],
[87,58,0,63,73,64,76,95],
[60,81,67,0,69,65,65,94],
[80,80,57,61,0,75,56,83],
[71,57,66,65,55,0,66,64],
[74,61,54,65,74,64,0,66],
[32,58,35,36,47,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,75,64,72,74,72],
[66,0,62,73,67,68,72,75],
[60,68,0,78,63,76,75,73],
[55,57,52,0,47,62,72,71],
[66,63,67,83,0,74,82,71],
[58,62,54,68,56,0,75,62],
[56,58,55,58,48,55,0,56],
[58,55,57,59,59,68,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,73,73,62,74,69,72],
[52,0,57,53,58,53,59,64],
[57,73,0,62,62,62,67,79],
[57,77,68,0,68,61,71,60],
[68,72,68,62,0,57,64,66],
[56,77,68,69,73,0,63,68],
[61,71,63,59,66,67,0,68],
[58,66,51,70,64,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,60,66,56,63,58],
[74,0,73,62,69,64,69,64],
[65,57,0,56,63,56,59,62],
[70,68,74,0,61,70,66,70],
[64,61,67,69,0,59,69,64],
[74,66,74,60,71,0,70,65],
[67,61,71,64,61,60,0,64],
[72,66,68,60,66,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,54,51,51,51,0,44],
[47,0,3,59,47,28,0,34],
[76,127,0,111,92,80,76,63],
[79,71,19,0,48,83,16,51],
[79,83,38,82,0,70,31,35],
[79,102,50,47,60,0,16,50],
[130,130,54,114,99,114,0,86],
[86,96,67,79,95,80,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,61,63,64,73,58],
[65,0,77,61,68,57,82,69],
[69,53,0,52,63,59,70,66],
[69,69,78,0,62,66,74,67],
[67,62,67,68,0,56,76,62],
[66,73,71,64,74,0,73,65],
[57,48,60,56,54,57,0,57],
[72,61,64,63,68,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,70,66,64,62,65],
[60,0,61,63,56,60,65,65],
[63,69,0,67,66,66,69,64],
[60,67,63,0,57,56,54,54],
[64,74,64,73,0,61,69,65],
[66,70,64,74,69,0,70,67],
[68,65,61,76,61,60,0,71],
[65,65,66,76,65,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,58,53,100,40,39,38],
[71,0,54,54,95,56,65,36],
[72,76,0,71,101,60,56,51],
[77,76,59,0,79,43,65,53],
[30,35,29,51,0,31,38,22],
[90,74,70,87,99,0,56,81],
[91,65,74,65,92,74,0,51],
[92,94,79,77,108,49,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,76,66,74,62,65],
[71,0,63,66,75,68,61,67],
[65,67,0,64,70,70,73,61],
[54,64,66,0,64,73,64,64],
[64,55,60,66,0,70,70,60],
[56,62,60,57,60,0,60,56],
[68,69,57,66,60,70,0,61],
[65,63,69,66,70,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,130,130,86,130,53,53,86],
[0,0,108,53,53,53,31,64],
[0,22,0,53,22,53,22,55],
[44,77,77,0,44,44,44,77],
[0,77,108,86,0,31,0,33],
[77,77,77,86,99,0,0,33],
[77,99,108,86,130,130,0,33],
[44,66,75,53,97,97,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,67,64,82,56,55,59],
[78,0,76,79,75,75,55,71],
[63,54,0,51,60,57,66,50],
[66,51,79,0,59,71,46,63],
[48,55,70,71,0,61,62,72],
[74,55,73,59,69,0,75,71],
[75,75,64,84,68,55,0,66],
[71,59,80,67,58,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,62,52,56,62,58,68],
[81,0,71,55,74,75,55,77],
[68,59,0,47,69,65,55,59],
[78,75,83,0,64,76,74,83],
[74,56,61,66,0,66,61,76],
[68,55,65,54,64,0,50,73],
[72,75,75,56,69,80,0,79],
[62,53,71,47,54,57,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,81,69,62,79,71,62],
[36,0,73,54,42,44,46,59],
[49,57,0,44,34,46,46,47],
[61,76,86,0,66,71,81,42],
[68,88,96,64,0,75,72,65],
[51,86,84,59,55,0,72,58],
[59,84,84,49,58,58,0,49],
[68,71,83,88,65,72,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,63,44,55,63,60],
[77,0,73,76,64,53,63,70],
[79,57,0,61,59,71,61,79],
[67,54,69,0,53,62,50,63],
[86,66,71,77,0,58,68,76],
[75,77,59,68,72,0,78,80],
[67,67,69,80,62,52,0,77],
[70,60,51,67,54,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,76,75,62,72,91,49],
[81,0,101,70,39,56,70,90],
[54,29,0,56,38,34,56,36],
[55,60,74,0,68,82,79,60],
[68,91,92,62,0,61,74,76],
[58,74,96,48,69,0,76,49],
[39,60,74,51,56,54,0,38],
[81,40,94,70,54,81,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,89,69,63,63,62],
[64,0,50,62,60,51,56,68],
[67,80,0,63,55,60,61,53],
[41,68,67,0,46,54,44,67],
[61,70,75,84,0,70,85,74],
[67,79,70,76,60,0,59,71],
[67,74,69,86,45,71,0,74],
[68,62,77,63,56,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,63,77,74,68,72,68],
[54,0,58,70,73,67,72,65],
[67,72,0,64,69,76,62,65],
[53,60,66,0,65,62,58,63],
[56,57,61,65,0,56,64,60],
[62,63,54,68,74,0,66,61],
[58,58,68,72,66,64,0,59],
[62,65,65,67,70,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,75,67,65,72,61,72],
[48,0,59,47,42,54,51,54],
[55,71,0,68,58,69,62,57],
[63,83,62,0,67,66,69,61],
[65,88,72,63,0,65,76,65],
[58,76,61,64,65,0,64,59],
[69,79,68,61,54,66,0,59],
[58,76,73,69,65,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,90,117,72,43,29,32],
[56,0,88,88,85,85,56,88],
[40,42,0,85,85,56,56,26],
[13,42,45,0,85,56,42,45],
[58,45,45,45,0,58,13,45],
[87,45,74,74,72,0,42,45],
[101,74,74,88,117,88,0,58],
[98,42,104,85,85,85,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,61,71,68,65,65],
[65,0,69,56,70,56,60,64],
[66,61,0,61,59,62,58,61],
[69,74,69,0,74,59,71,73],
[59,60,71,56,0,60,56,69],
[62,74,68,71,70,0,71,74],
[65,70,72,59,74,59,0,71],
[65,66,69,57,61,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,54,57,58,52,62],
[69,0,68,57,61,67,54,65],
[64,62,0,63,69,67,52,57],
[76,73,67,0,72,69,64,72],
[73,69,61,58,0,73,62,70],
[72,63,63,61,57,0,58,61],
[78,76,78,66,68,72,0,65],
[68,65,73,58,60,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,51,52,54,79,60,65],
[67,0,64,51,61,75,62,61],
[79,66,0,56,57,74,67,71],
[78,79,74,0,69,95,59,75],
[76,69,73,61,0,73,70,79],
[51,55,56,35,57,0,55,65],
[70,68,63,71,60,75,0,74],
[65,69,59,55,51,65,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,65,59,50,60,67],
[62,0,65,63,60,60,61,68],
[66,65,0,68,61,62,64,65],
[65,67,62,0,65,63,59,65],
[71,70,69,65,0,59,69,69],
[80,70,68,67,71,0,64,74],
[70,69,66,71,61,66,0,70],
[63,62,65,65,61,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,58,66,61,60,59],
[75,0,61,65,62,57,59,59],
[71,69,0,60,64,61,56,61],
[72,65,70,0,61,61,53,58],
[64,68,66,69,0,66,68,60],
[69,73,69,69,64,0,58,62],
[70,71,74,77,62,72,0,67],
[71,71,69,72,70,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,61,84,62,69,71,68],
[52,0,67,67,64,63,57,63],
[69,63,0,81,60,74,64,60],
[46,63,49,0,48,63,53,55],
[68,66,70,82,0,72,64,70],
[61,67,56,67,58,0,63,60],
[59,73,66,77,66,67,0,63],
[62,67,70,75,60,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,64,87,76,71,57,81],
[40,0,56,56,48,67,49,77],
[66,74,0,88,66,82,57,52],
[43,74,42,0,53,60,35,63],
[54,82,64,77,0,64,44,65],
[59,63,48,70,66,0,48,69],
[73,81,73,95,86,82,0,41],
[49,53,78,67,65,61,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,69,75,66,68,62],
[77,0,73,69,76,69,65,68],
[64,57,0,67,75,67,65,62],
[61,61,63,0,68,64,72,65],
[55,54,55,62,0,65,67,55],
[64,61,63,66,65,0,72,61],
[62,65,65,58,63,58,0,58],
[68,62,68,65,75,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,66,67,64,55,66],
[68,0,72,59,70,64,64,65],
[60,58,0,52,54,59,58,69],
[64,71,78,0,66,65,67,71],
[63,60,76,64,0,64,66,73],
[66,66,71,65,66,0,56,74],
[75,66,72,63,64,74,0,70],
[64,65,61,59,57,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,38,59,53,54,54,28],
[66,0,36,65,61,66,58,23],
[92,94,0,68,44,72,57,31],
[71,65,62,0,50,72,66,46],
[77,69,86,80,0,84,49,69],
[76,64,58,58,46,0,47,24],
[76,72,73,64,81,83,0,59],
[102,107,99,84,61,106,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,54,72,76,54,69,53],
[32,0,68,101,76,83,101,82],
[76,62,0,119,72,87,62,97],
[58,29,11,0,73,58,7,7],
[54,54,58,57,0,76,54,28],
[76,47,43,72,54,0,47,50],
[61,29,68,123,76,83,0,64],
[77,48,33,123,102,80,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,76,66,68,51,86,59],
[58,0,87,69,65,70,76,68],
[54,43,0,48,40,43,62,37],
[64,61,82,0,66,61,76,62],
[62,65,90,64,0,64,72,54],
[79,60,87,69,66,0,75,58],
[44,54,68,54,58,55,0,41],
[71,62,93,68,76,72,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,80,65,71,55,61,65],
[60,0,93,49,67,62,69,36],
[50,37,0,35,54,47,45,36],
[65,81,95,0,72,68,83,65],
[59,63,76,58,0,38,53,51],
[75,68,83,62,92,0,60,57],
[69,61,85,47,77,70,0,47],
[65,94,94,65,79,73,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,71,63,69,68,65,64],
[72,0,73,64,78,78,69,69],
[59,57,0,58,53,64,55,63],
[67,66,72,0,66,72,64,65],
[61,52,77,64,0,73,67,62],
[62,52,66,58,57,0,57,55],
[65,61,75,66,63,73,0,72],
[66,61,67,65,68,75,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,63,70,71,63,71],
[73,0,57,68,63,67,58,62],
[71,73,0,61,81,72,66,72],
[67,62,69,0,77,70,58,64],
[60,67,49,53,0,52,53,52],
[59,63,58,60,78,0,62,64],
[67,72,64,72,77,68,0,68],
[59,68,58,66,78,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,75,74,76,81,70],
[65,0,74,70,59,69,82,73],
[59,56,0,67,54,72,64,76],
[55,60,63,0,57,68,63,64],
[56,71,76,73,0,72,80,77],
[54,61,58,62,58,0,64,73],
[49,48,66,67,50,66,0,70],
[60,57,54,66,53,57,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,50,62,63,63,66],
[65,0,70,62,56,64,70,58],
[62,60,0,64,65,69,68,68],
[80,68,66,0,63,83,72,64],
[68,74,65,67,0,70,74,62],
[67,66,61,47,60,0,67,58],
[67,60,62,58,56,63,0,59],
[64,72,62,66,68,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,64,59,57,69,63],
[62,0,66,65,67,68,68,61],
[64,64,0,57,63,59,58,64],
[66,65,73,0,67,71,77,69],
[71,63,67,63,0,66,65,62],
[73,62,71,59,64,0,71,69],
[61,62,72,53,65,59,0,65],
[67,69,66,61,68,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,77,63,69,67,75,66],
[67,0,53,61,54,58,58,64],
[53,77,0,70,59,62,61,66],
[67,69,60,0,66,64,61,65],
[61,76,71,64,0,66,54,75],
[63,72,68,66,64,0,71,68],
[55,72,69,69,76,59,0,69],
[64,66,64,65,55,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,50,65,72,49,60,56],
[60,0,71,74,59,68,41,61],
[80,59,0,90,89,89,60,88],
[65,56,40,0,58,49,69,63],
[58,71,41,72,0,47,59,52],
[81,62,41,81,83,0,52,76],
[70,89,70,61,71,78,0,72],
[74,69,42,67,78,54,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,68,53,71,64,50],
[71,0,64,83,57,83,68,57],
[70,66,0,72,65,81,66,62],
[62,47,58,0,45,55,55,43],
[77,73,65,85,0,76,72,65],
[59,47,49,75,54,0,76,49],
[66,62,64,75,58,54,0,59],
[80,73,68,87,65,81,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,67,57,60,65,61],
[67,0,61,68,55,59,58,59],
[77,69,0,78,58,73,59,64],
[63,62,52,0,61,63,55,58],
[73,75,72,69,0,65,60,75],
[70,71,57,67,65,0,70,65],
[65,72,71,75,70,60,0,71],
[69,71,66,72,55,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,65,51,62,61,60],
[61,0,70,61,59,62,60,64],
[61,60,0,65,56,54,61,53],
[65,69,65,0,57,63,58,57],
[79,71,74,73,0,66,60,65],
[68,68,76,67,64,0,72,55],
[69,70,69,72,70,58,0,60],
[70,66,77,73,65,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,53,74,62,47,63,59],
[64,0,64,70,65,59,63,48],
[77,66,0,73,57,63,66,62],
[56,60,57,0,63,54,65,55],
[68,65,73,67,0,68,73,65],
[83,71,67,76,62,0,70,67],
[67,67,64,65,57,60,0,59],
[71,82,68,75,65,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,61,65,61,68,62],
[66,0,61,54,62,64,66,56],
[67,69,0,58,60,73,67,67],
[69,76,72,0,75,78,79,61],
[65,68,70,55,0,63,69,62],
[69,66,57,52,67,0,59,54],
[62,64,63,51,61,71,0,60],
[68,74,63,69,68,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,78,65,51,71,62],
[55,0,73,78,81,65,75,83],
[51,57,0,72,69,63,76,61],
[52,52,58,0,49,56,57,65],
[65,49,61,81,0,64,90,63],
[79,65,67,74,66,0,62,80],
[59,55,54,73,40,68,0,62],
[68,47,69,65,67,50,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,65,57,65,66,63],
[64,0,68,68,70,69,77,69],
[62,62,0,69,63,70,70,61],
[65,62,61,0,53,67,72,66],
[73,60,67,77,0,64,77,66],
[65,61,60,63,66,0,68,58],
[64,53,60,58,53,62,0,58],
[67,61,69,64,64,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,62,68,65,61,53],
[65,0,71,61,59,48,64,48],
[57,59,0,54,60,59,69,53],
[68,69,76,0,57,53,74,61],
[62,71,70,73,0,69,77,61],
[65,82,71,77,61,0,75,62],
[69,66,61,56,53,55,0,65],
[77,82,77,69,69,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,74,40,76,71,49,59],
[93,0,87,79,91,71,57,58],
[56,43,0,32,47,38,38,41],
[90,51,98,0,98,67,68,54],
[54,39,83,32,0,34,57,35],
[59,59,92,63,96,0,69,82],
[81,73,92,62,73,61,0,64],
[71,72,89,76,95,48,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,54,60,56,50,61,47],
[75,0,76,69,70,71,67,65],
[76,54,0,60,58,48,59,61],
[70,61,70,0,64,62,62,58],
[74,60,72,66,0,57,71,58],
[80,59,82,68,73,0,68,68],
[69,63,71,68,59,62,0,73],
[83,65,69,72,72,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,58,66,72,67,66,64],
[57,0,59,59,66,59,59,60],
[72,71,0,68,65,70,73,67],
[64,71,62,0,73,70,76,66],
[58,64,65,57,0,65,63,62],
[63,71,60,60,65,0,67,66],
[64,71,57,54,67,63,0,56],
[66,70,63,64,68,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,55,64,58,64,45],
[72,0,64,64,82,61,70,70],
[72,66,0,67,73,59,58,78],
[75,66,63,0,65,60,63,64],
[66,48,57,65,0,63,66,60],
[72,69,71,70,67,0,76,62],
[66,60,72,67,64,54,0,59],
[85,60,52,66,70,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,75,80,70,73,68],
[61,0,66,81,64,65,68,65],
[72,64,0,69,70,69,67,63],
[55,49,61,0,67,62,68,66],
[50,66,60,63,0,61,63,58],
[60,65,61,68,69,0,70,58],
[57,62,63,62,67,60,0,58],
[62,65,67,64,72,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,56,56,44,46,58],
[65,0,59,63,65,55,55,59],
[75,71,0,66,73,63,66,77],
[74,67,64,0,62,66,61,72],
[74,65,57,68,0,64,67,63],
[86,75,67,64,66,0,61,77],
[84,75,64,69,63,69,0,79],
[72,71,53,58,67,53,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,85,95,81,56,76,34],
[71,0,78,62,71,57,86,78],
[45,52,0,71,85,47,49,34],
[35,68,59,0,84,58,78,48],
[49,59,45,46,0,37,44,41],
[74,73,83,72,93,0,35,42],
[54,44,81,52,86,95,0,78],
[96,52,96,82,89,88,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,73,73,77,66,67],
[61,0,66,71,67,67,57,64],
[75,64,0,60,70,69,64,65],
[57,59,70,0,66,68,57,56],
[57,63,60,64,0,69,58,61],
[53,63,61,62,61,0,56,57],
[64,73,66,73,72,74,0,69],
[63,66,65,74,69,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,62,73,58,77,64],
[71,0,79,62,78,57,75,69],
[60,51,0,49,75,65,76,61],
[68,68,81,0,71,47,79,78],
[57,52,55,59,0,49,69,70],
[72,73,65,83,81,0,88,75],
[53,55,54,51,61,42,0,55],
[66,61,69,52,60,55,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,51,64,77,70,67,48],
[91,0,59,73,94,85,87,85],
[79,71,0,80,90,102,82,65],
[66,57,50,0,80,80,87,70],
[53,36,40,50,0,46,68,51],
[60,45,28,50,84,0,63,65],
[63,43,48,43,62,67,0,49],
[82,45,65,60,79,65,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,73,87,55,58,77,67],
[72,0,85,92,69,74,84,64],
[57,45,0,65,56,60,69,63],
[43,38,65,0,50,44,62,45],
[75,61,74,80,0,64,75,66],
[72,56,70,86,66,0,75,68],
[53,46,61,68,55,55,0,58],
[63,66,67,85,64,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,65,66,67,64,72],
[62,0,55,57,64,57,61,71],
[64,75,0,60,68,73,67,81],
[65,73,70,0,71,72,66,69],
[64,66,62,59,0,71,59,68],
[63,73,57,58,59,0,65,69],
[66,69,63,64,71,65,0,70],
[58,59,49,61,62,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,67,73,57,54,65],
[65,0,75,69,72,67,73,63],
[75,55,0,58,67,60,53,55],
[63,61,72,0,69,55,64,53],
[57,58,63,61,0,54,51,55],
[73,63,70,75,76,0,52,56],
[76,57,77,66,79,78,0,62],
[65,67,75,77,75,74,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,63,70,70,58,68],
[68,0,67,65,59,79,65,66],
[60,63,0,65,56,70,66,66],
[67,65,65,0,63,75,66,66],
[60,71,74,67,0,78,59,71],
[60,51,60,55,52,0,56,58],
[72,65,64,64,71,74,0,72],
[62,64,64,64,59,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,46,49,62,57,62],
[70,0,71,65,57,75,66,72],
[71,59,0,60,69,73,68,72],
[84,65,70,0,72,70,71,74],
[81,73,61,58,0,75,75,76],
[68,55,57,60,55,0,62,56],
[73,64,62,59,55,68,0,63],
[68,58,58,56,54,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,60,74,54,54,70],
[62,0,62,62,73,57,62,65],
[70,68,0,68,80,64,67,73],
[70,68,62,0,85,62,66,69],
[56,57,50,45,0,45,46,46],
[76,73,66,68,85,0,58,73],
[76,68,63,64,84,72,0,72],
[60,65,57,61,84,57,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,61,62,55,62,60],
[68,0,74,59,68,66,67,59],
[71,56,0,60,66,57,64,55],
[69,71,70,0,66,59,68,73],
[68,62,64,64,0,56,68,65],
[75,64,73,71,74,0,73,68],
[68,63,66,62,62,57,0,62],
[70,71,75,57,65,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,44,56,65,75,54],
[70,0,66,51,56,57,78,62],
[63,64,0,53,56,63,71,44],
[86,79,77,0,36,68,89,77],
[74,74,74,94,0,73,92,60],
[65,73,67,62,57,0,74,58],
[55,52,59,41,38,56,0,51],
[76,68,86,53,70,72,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,63,71,59,67,61],
[73,0,66,70,75,67,70,64],
[63,64,0,69,72,62,67,60],
[67,60,61,0,70,56,67,65],
[59,55,58,60,0,57,71,60],
[71,63,68,74,73,0,69,67],
[63,60,63,63,59,61,0,60],
[69,66,70,65,70,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,50,45,61,72,82],
[68,0,53,44,58,68,66,73],
[69,77,0,64,70,77,70,82],
[80,86,66,0,63,86,77,79],
[85,72,60,67,0,59,66,63],
[69,62,53,44,71,0,61,76],
[58,64,60,53,64,69,0,88],
[48,57,48,51,67,54,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,65,60,60,60,53],
[69,0,73,70,74,67,65,59],
[65,57,0,56,65,56,51,51],
[65,60,74,0,70,66,59,52],
[70,56,65,60,0,60,62,59],
[70,63,74,64,70,0,61,61],
[70,65,79,71,68,69,0,65],
[77,71,79,78,71,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,67,62,56,58,67],
[60,0,70,62,57,63,52,60],
[70,60,0,73,61,61,55,66],
[63,68,57,0,61,54,57,63],
[68,73,69,69,0,75,60,73],
[74,67,69,76,55,0,68,68],
[72,78,75,73,70,62,0,75],
[63,70,64,67,57,62,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,61,62,64,68,67],
[62,0,64,58,58,60,62,55],
[60,66,0,63,67,63,64,60],
[69,72,67,0,70,67,71,63],
[68,72,63,60,0,69,73,61],
[66,70,67,63,61,0,67,60],
[62,68,66,59,57,63,0,60],
[63,75,70,67,69,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,63,64,70,65,68,71],
[58,0,65,58,74,62,66,69],
[67,65,0,63,76,78,72,67],
[66,72,67,0,72,73,71,57],
[60,56,54,58,0,54,61,58],
[65,68,52,57,76,0,62,56],
[62,64,58,59,69,68,0,64],
[59,61,63,73,72,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,68,60,62,67,73],
[69,0,90,82,65,75,73,74],
[58,40,0,61,49,50,56,66],
[62,48,69,0,64,63,57,66],
[70,65,81,66,0,67,73,73],
[68,55,80,67,63,0,68,69],
[63,57,74,73,57,62,0,70],
[57,56,64,64,57,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,74,74,54,74,62],
[64,0,66,67,71,72,62,71],
[65,64,0,68,76,65,62,69],
[56,63,62,0,67,56,61,59],
[56,59,54,63,0,63,60,65],
[76,58,65,74,67,0,71,76],
[56,68,68,69,70,59,0,71],
[68,59,61,71,65,54,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,65,65,77,65,61],
[56,0,68,57,72,76,66,74],
[59,62,0,56,62,61,67,61],
[65,73,74,0,54,68,70,77],
[65,58,68,76,0,79,65,58],
[53,54,69,62,51,0,62,56],
[65,64,63,60,65,68,0,53],
[69,56,69,53,72,74,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,53,86,65,46,71],
[71,0,61,65,80,72,61,54],
[70,69,0,58,83,83,68,76],
[77,65,72,0,89,68,70,62],
[44,50,47,41,0,62,61,56],
[65,58,47,62,68,0,56,58],
[84,69,62,60,69,74,0,62],
[59,76,54,68,74,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,69,73,74,62,71],
[72,0,64,66,89,77,74,74],
[75,66,0,54,78,62,63,73],
[61,64,76,0,70,74,60,61],
[57,41,52,60,0,50,45,58],
[56,53,68,56,80,0,62,65],
[68,56,67,70,85,68,0,68],
[59,56,57,69,72,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,53,66,62,42,70,35],
[102,0,71,82,91,64,82,71],
[77,59,0,62,73,61,99,51],
[64,48,68,0,42,37,57,35],
[68,39,57,88,0,68,39,39],
[88,66,69,93,62,0,77,62],
[60,48,31,73,91,53,0,62],
[95,59,79,95,91,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,77,74,64,70,67,66],
[57,0,61,65,48,69,58,59],
[53,69,0,60,60,60,54,62],
[56,65,70,0,58,65,63,54],
[66,82,70,72,0,82,67,64],
[60,61,70,65,48,0,62,59],
[63,72,76,67,63,68,0,57],
[64,71,68,76,66,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,57,48,63,49,56,67],
[85,0,59,49,50,57,79,76],
[73,71,0,69,83,66,61,81],
[82,81,61,0,71,55,64,71],
[67,80,47,59,0,54,55,67],
[81,73,64,75,76,0,66,83],
[74,51,69,66,75,64,0,71],
[63,54,49,59,63,47,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,71,80,68,62,79,77],
[47,0,72,56,68,39,55,47],
[59,58,0,75,63,57,63,67],
[50,74,55,0,55,58,67,60],
[62,62,67,75,0,53,78,52],
[68,91,73,72,77,0,77,65],
[51,75,67,63,52,53,0,62],
[53,83,63,70,78,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,71,70,53,70,60],
[67,0,64,71,77,69,69,64],
[72,66,0,70,70,65,69,75],
[59,59,60,0,67,60,64,58],
[60,53,60,63,0,59,57,58],
[77,61,65,70,71,0,72,65],
[60,61,61,66,73,58,0,57],
[70,66,55,72,72,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,60,73,71,60,64],
[52,0,55,57,69,71,62,51],
[65,75,0,63,67,69,58,65],
[70,73,67,0,74,70,68,61],
[57,61,63,56,0,71,51,56],
[59,59,61,60,59,0,52,51],
[70,68,72,62,79,78,0,54],
[66,79,65,69,74,79,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,71,68,70,68,72],
[71,0,71,77,69,65,76,71],
[64,59,0,66,62,64,66,75],
[59,53,64,0,55,68,65,71],
[62,61,68,75,0,75,70,66],
[60,65,66,62,55,0,73,70],
[62,54,64,65,60,57,0,62],
[58,59,55,59,64,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,67,69,62,54,74,60],
[76,0,83,79,69,46,83,84],
[63,47,0,71,71,68,88,62],
[61,51,59,0,42,42,59,86],
[68,61,59,88,0,46,75,74],
[76,84,62,88,84,0,85,84],
[56,47,42,71,55,45,0,75],
[70,46,68,44,56,46,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,50,61,78,44,55],
[72,0,61,73,58,45,71,59],
[69,69,0,51,79,84,69,64],
[80,57,79,0,59,73,78,58],
[69,72,51,71,0,68,86,60],
[52,85,46,57,62,0,50,76],
[86,59,61,52,44,80,0,58],
[75,71,66,72,70,54,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,52,58,53,63,57,59],
[69,0,63,61,64,55,70,64],
[78,67,0,61,63,60,80,76],
[72,69,69,0,52,69,78,61],
[77,66,67,78,0,60,84,79],
[67,75,70,61,70,0,72,67],
[73,60,50,52,46,58,0,57],
[71,66,54,69,51,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,63,62,66,52,61],
[70,0,73,71,72,68,62,65],
[72,57,0,49,61,58,67,65],
[67,59,81,0,73,63,61,59],
[68,58,69,57,0,62,53,53],
[64,62,72,67,68,0,57,55],
[78,68,63,69,77,73,0,66],
[69,65,65,71,77,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,61,61,70,69,56],
[71,0,75,55,47,65,62,58],
[64,55,0,53,77,60,60,57],
[69,75,77,0,70,76,65,70],
[69,83,53,60,0,80,67,79],
[60,65,70,54,50,0,63,66],
[61,68,70,65,63,67,0,67],
[74,72,73,60,51,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,74,67,70,67,82],
[58,0,53,56,37,48,65,81],
[65,77,0,70,62,66,69,85],
[56,74,60,0,68,70,70,68],
[63,93,68,62,0,60,66,77],
[60,82,64,60,70,0,76,67],
[63,65,61,60,64,54,0,66],
[48,49,45,62,53,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,96,74,59,104,71,78],
[59,0,76,77,62,84,63,61],
[34,54,0,14,67,59,35,64],
[56,53,116,0,90,109,80,88],
[71,68,63,40,0,59,53,53],
[26,46,71,21,71,0,26,52],
[59,67,95,50,77,104,0,72],
[52,69,66,42,77,78,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,67,67,56,42,56],
[71,0,64,71,66,69,54,66],
[70,66,0,63,68,68,65,63],
[63,59,67,0,63,62,57,60],
[63,64,62,67,0,59,58,52],
[74,61,62,68,71,0,59,60],
[88,76,65,73,72,71,0,53],
[74,64,67,70,78,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,59,59,62,71,58],
[67,0,59,55,45,67,70,61],
[68,71,0,73,49,62,73,65],
[71,75,57,0,67,62,82,51],
[71,85,81,63,0,78,93,65],
[68,63,68,68,52,0,70,57],
[59,60,57,48,37,60,0,52],
[72,69,65,79,65,73,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,64,63,64,69,67],
[74,0,65,63,58,70,70,71],
[73,65,0,72,68,74,68,76],
[66,67,58,0,69,60,70,71],
[67,72,62,61,0,66,69,67],
[66,60,56,70,64,0,70,71],
[61,60,62,60,61,60,0,64],
[63,59,54,59,63,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,91,77,74,67,79,65],
[56,0,83,70,64,70,70,49],
[39,47,0,37,34,63,59,42],
[53,60,93,0,50,64,76,75],
[56,66,96,80,0,84,79,72],
[63,60,67,66,46,0,81,58],
[51,60,71,54,51,49,0,80],
[65,81,88,55,58,72,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,61,62,54,44,62,50],
[79,0,62,72,68,53,66,66],
[69,68,0,70,71,65,72,70],
[68,58,60,0,58,62,65,55],
[76,62,59,72,0,53,62,64],
[86,77,65,68,77,0,70,79],
[68,64,58,65,68,60,0,77],
[80,64,60,75,66,51,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,52,61,64,58,66],
[72,0,72,64,70,72,64,67],
[74,58,0,53,63,66,61,68],
[78,66,77,0,72,65,70,73],
[69,60,67,58,0,70,56,72],
[66,58,64,65,60,0,59,66],
[72,66,69,60,74,71,0,72],
[64,63,62,57,58,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,73,72,67,54,65],
[66,0,64,60,66,70,53,65],
[63,66,0,53,58,66,55,69],
[57,70,77,0,70,65,67,65],
[58,64,72,60,0,66,63,70],
[63,60,64,65,64,0,54,66],
[76,77,75,63,67,76,0,65],
[65,65,61,65,60,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,64,60,50,67,57,64],
[82,0,54,67,70,82,74,76],
[66,76,0,76,74,73,67,64],
[70,63,54,0,64,75,67,56],
[80,60,56,66,0,54,65,74],
[63,48,57,55,76,0,57,65],
[73,56,63,63,65,73,0,58],
[66,54,66,74,56,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,55,80,68,66,84],
[72,0,64,64,80,73,67,86],
[76,66,0,59,80,72,76,84],
[75,66,71,0,71,65,64,89],
[50,50,50,59,0,65,43,86],
[62,57,58,65,65,0,54,77],
[64,63,54,66,87,76,0,97],
[46,44,46,41,44,53,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,81,73,77,80,79,62],
[50,0,63,63,62,68,72,78],
[49,67,0,55,60,86,79,50],
[57,67,75,0,86,92,73,76],
[53,68,70,44,0,89,58,74],
[50,62,44,38,41,0,68,69],
[51,58,51,57,72,62,0,40],
[68,52,80,54,56,61,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,69,63,76,69,69,71],
[51,0,62,64,73,56,61,57],
[61,68,0,61,73,57,65,58],
[67,66,69,0,79,71,69,64],
[54,57,57,51,0,56,52,63],
[61,74,73,59,74,0,63,64],
[61,69,65,61,78,67,0,63],
[59,73,72,66,67,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,53,60,59,50,56],
[65,0,57,59,57,50,59,54],
[69,73,0,60,74,76,56,70],
[77,71,70,0,80,71,58,63],
[70,73,56,50,0,55,65,75],
[71,80,54,59,75,0,65,68],
[80,71,74,72,65,65,0,69],
[74,76,60,67,55,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,77,93,55,73,80,80],
[51,0,77,96,81,54,85,87],
[53,53,0,87,51,64,77,48],
[37,34,43,0,42,60,46,44],
[75,49,79,88,0,71,75,70],
[57,76,66,70,59,0,71,55],
[50,45,53,84,55,59,0,60],
[50,43,82,86,60,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,68,69,63,68,64],
[63,0,67,64,67,66,66,68],
[67,63,0,65,65,69,68,71],
[62,66,65,0,66,64,69,71],
[61,63,65,64,0,55,66,66],
[67,64,61,66,75,0,71,72],
[62,64,62,61,64,59,0,69],
[66,62,59,59,64,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,64,72,97,59,70,72],
[49,0,58,49,66,73,47,48],
[66,72,0,55,73,66,57,84],
[58,81,75,0,79,82,68,82],
[33,64,57,51,0,70,54,60],
[71,57,64,48,60,0,61,59],
[60,83,73,62,76,69,0,72],
[58,82,46,48,70,71,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,60,73,60,74,63],
[64,0,71,57,75,71,72,64],
[64,59,0,66,68,75,72,73],
[70,73,64,0,74,77,85,65],
[57,55,62,56,0,65,67,58],
[70,59,55,53,65,0,77,64],
[56,58,58,45,63,53,0,59],
[67,66,57,65,72,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,56,48,70,75,73,66],
[60,0,71,67,72,75,78,70],
[74,59,0,63,75,76,74,66],
[82,63,67,0,79,75,73,65],
[60,58,55,51,0,60,65,51],
[55,55,54,55,70,0,64,45],
[57,52,56,57,65,66,0,56],
[64,60,64,65,79,85,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,44,61,63,57,68,85],
[57,0,27,49,58,38,43,60],
[86,103,0,86,60,77,73,113],
[69,81,44,0,77,67,64,90],
[67,72,70,53,0,76,62,78],
[73,92,53,63,54,0,68,83],
[62,87,57,66,68,62,0,80],
[45,70,17,40,52,47,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,65,73,62,69,64],
[70,0,78,61,68,69,81,67],
[62,52,0,61,63,70,73,68],
[65,69,69,0,68,60,79,61],
[57,62,67,62,0,52,67,62],
[68,61,60,70,78,0,75,72],
[61,49,57,51,63,55,0,57],
[66,63,62,69,68,58,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,63,60,51,69,62,65],
[52,0,46,46,55,57,64,50],
[67,84,0,65,66,82,75,65],
[70,84,65,0,64,73,72,77],
[79,75,64,66,0,85,73,65],
[61,73,48,57,45,0,59,57],
[68,66,55,58,57,71,0,56],
[65,80,65,53,65,73,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,54,59,53,56,71,62],
[62,0,64,56,66,85,69,59],
[76,66,0,72,56,70,76,62],
[71,74,58,0,53,74,75,74],
[77,64,74,77,0,76,80,74],
[74,45,60,56,54,0,75,67],
[59,61,54,55,50,55,0,71],
[68,71,68,56,56,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,72,58,72,67,67],
[65,0,64,70,64,74,65,68],
[66,66,0,68,70,83,60,75],
[58,60,62,0,68,66,68,65],
[72,66,60,62,0,67,52,69],
[58,56,47,64,63,0,55,55],
[63,65,70,62,78,75,0,75],
[63,62,55,65,61,75,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,56,74,64,74,60,71],
[59,0,63,73,57,70,60,55],
[74,67,0,80,63,60,56,65],
[56,57,50,0,63,55,51,57],
[66,73,67,67,0,69,55,64],
[56,60,70,75,61,0,61,54],
[70,70,74,79,75,69,0,65],
[59,75,65,73,66,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,68,72,74,73,50],
[57,0,68,66,62,68,66,59],
[65,62,0,57,61,69,72,68],
[62,64,73,0,70,72,78,55],
[58,68,69,60,0,74,56,66],
[56,62,61,58,56,0,53,58],
[57,64,58,52,74,77,0,59],
[80,71,62,75,64,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,45,88,80,69,80,67],
[63,0,49,89,49,59,73,39],
[85,81,0,106,84,82,84,64],
[42,41,24,0,32,51,46,34],
[50,81,46,98,0,92,84,40],
[61,71,48,79,38,0,68,37],
[50,57,46,84,46,62,0,45],
[63,91,66,96,90,93,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,45,64,52,82,60],
[69,0,64,55,65,62,73,72],
[69,66,0,55,59,68,77,70],
[85,75,75,0,64,62,72,78],
[66,65,71,66,0,68,73,72],
[78,68,62,68,62,0,70,73],
[48,57,53,58,57,60,0,52],
[70,58,60,52,58,57,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,72,70,61,63,61,65],
[78,0,61,85,65,68,65,68],
[58,69,0,63,59,63,57,58],
[60,45,67,0,57,56,39,52],
[69,65,71,73,0,66,54,63],
[67,62,67,74,64,0,61,59],
[69,65,73,91,76,69,0,68],
[65,62,72,78,67,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,54,76,74,62,65],
[64,0,70,69,70,74,77,78],
[60,60,0,63,68,66,68,76],
[76,61,67,0,68,76,64,81],
[54,60,62,62,0,66,67,73],
[56,56,64,54,64,0,61,63],
[68,53,62,66,63,69,0,62],
[65,52,54,49,57,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,68,61,59,62,75],
[72,0,54,56,49,66,44,71],
[64,76,0,70,90,67,90,58],
[62,74,60,0,61,74,76,77],
[69,81,40,69,0,54,58,61],
[71,64,63,56,76,0,67,50],
[68,86,40,54,72,63,0,44],
[55,59,72,53,69,80,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,40,70,44,36,15],
[61,0,94,79,109,105,75,43],
[61,36,0,43,80,62,28,43],
[90,51,87,0,90,90,78,28],
[60,21,50,40,0,47,7,22],
[86,25,68,40,83,0,25,25],
[94,55,102,52,123,105,0,69],
[115,87,87,102,108,105,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,59,65,57,70,58],
[68,0,60,54,68,69,52,64],
[59,70,0,58,61,64,64,64],
[71,76,72,0,77,60,66,66],
[65,62,69,53,0,77,71,60],
[73,61,66,70,53,0,56,75],
[60,78,66,64,59,74,0,71],
[72,66,66,64,70,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,66,73,75,69,67],
[70,0,75,59,72,78,73,64],
[67,55,0,60,65,68,62,58],
[64,71,70,0,67,78,69,65],
[57,58,65,63,0,66,59,58],
[55,52,62,52,64,0,52,56],
[61,57,68,61,71,78,0,65],
[63,66,72,65,72,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,54,54,59,63,61,60],
[73,0,51,53,65,76,67,56],
[76,79,0,61,68,92,88,72],
[76,77,69,0,61,78,76,77],
[71,65,62,69,0,71,71,77],
[67,54,38,52,59,0,60,66],
[69,63,42,54,59,70,0,58],
[70,74,58,53,53,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,58,71,72,82,64],
[62,0,61,63,59,75,66,61],
[58,69,0,73,71,81,75,65],
[72,67,57,0,73,65,73,58],
[59,71,59,57,0,73,62,70],
[58,55,49,65,57,0,61,51],
[48,64,55,57,68,69,0,43],
[66,69,65,72,60,79,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,56,58,68,72,67,58],
[72,0,71,58,73,71,72,61],
[74,59,0,60,69,68,72,67],
[72,72,70,0,75,68,70,65],
[62,57,61,55,0,64,57,62],
[58,59,62,62,66,0,71,61],
[63,58,58,60,73,59,0,59],
[72,69,63,65,68,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,65,71,57,66,51,71],
[76,0,61,55,67,69,68,79],
[65,69,0,52,67,73,59,64],
[59,75,78,0,65,89,67,74],
[73,63,63,65,0,74,60,69],
[64,61,57,41,56,0,55,77],
[79,62,71,63,70,75,0,57],
[59,51,66,56,61,53,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,60,63,70,74,69],
[57,0,59,55,51,63,71,58],
[59,71,0,61,62,71,68,65],
[70,75,69,0,65,76,77,78],
[67,79,68,65,0,76,82,80],
[60,67,59,54,54,0,65,60],
[56,59,62,53,48,65,0,61],
[61,72,65,52,50,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,78,64,67,69,54],
[72,0,66,79,64,72,70,64],
[72,64,0,77,69,65,74,62],
[52,51,53,0,51,54,60,51],
[66,66,61,79,0,73,69,66],
[63,58,65,76,57,0,71,57],
[61,60,56,70,61,59,0,49],
[76,66,68,79,64,73,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,57,51,61,54,55,50],
[72,0,66,57,62,64,62,62],
[73,64,0,49,62,63,61,58],
[79,73,81,0,68,62,74,69],
[69,68,68,62,0,68,61,61],
[76,66,67,68,62,0,64,68],
[75,68,69,56,69,66,0,65],
[80,68,72,61,69,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,75,74,67,71,52,69],
[56,0,57,44,48,64,53,47],
[55,73,0,67,55,70,54,58],
[56,86,63,0,66,68,65,70],
[63,82,75,64,0,69,55,59],
[59,66,60,62,61,0,47,60],
[78,77,76,65,75,83,0,63],
[61,83,72,60,71,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,74,76,65,69,64],
[64,0,67,71,73,66,67,66],
[61,63,0,78,73,71,66,67],
[56,59,52,0,60,62,58,52],
[54,57,57,70,0,65,54,54],
[65,64,59,68,65,0,65,57],
[61,63,64,72,76,65,0,64],
[66,64,63,78,76,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,66,64,60,53,62],
[62,0,63,70,54,59,58,58],
[69,67,0,65,62,62,60,63],
[64,60,65,0,62,62,56,64],
[66,76,68,68,0,71,66,64],
[70,71,68,68,59,0,63,68],
[77,72,70,74,64,67,0,67],
[68,72,67,66,66,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,77,66,50,66,68,73],
[74,0,73,53,69,67,72,78],
[53,57,0,52,50,63,68,57],
[64,77,78,0,62,83,68,85],
[80,61,80,68,0,75,78,76],
[64,63,67,47,55,0,55,60],
[62,58,62,62,52,75,0,58],
[57,52,73,45,54,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,62,63,57,63,68],
[65,0,61,61,71,56,64,67],
[58,69,0,68,69,65,64,72],
[68,69,62,0,70,61,64,66],
[67,59,61,60,0,55,57,63],
[73,74,65,69,75,0,70,77],
[67,66,66,66,73,60,0,74],
[62,63,58,64,67,53,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,87,69,66,66,71,64],
[55,0,69,60,61,65,78,59],
[43,61,0,60,65,58,60,46],
[61,70,70,0,65,67,60,62],
[64,69,65,65,0,56,76,66],
[64,65,72,63,74,0,69,57],
[59,52,70,70,54,61,0,57],
[66,71,84,68,64,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,62,76,64,73,54,50],
[48,0,56,51,67,61,58,62],
[68,74,0,64,68,76,66,76],
[54,79,66,0,66,71,64,58],
[66,63,62,64,0,62,62,49],
[57,69,54,59,68,0,78,68],
[76,72,64,66,68,52,0,72],
[80,68,54,72,81,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,50,66,62,52,45,46],
[90,0,68,71,93,66,60,71],
[80,62,0,72,87,81,67,62],
[64,59,58,0,65,62,66,62],
[68,37,43,65,0,64,56,43],
[78,64,49,68,66,0,57,58],
[85,70,63,64,74,73,0,64],
[84,59,68,68,87,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,58,74,73,52,63],
[64,0,73,54,55,64,63,59],
[57,57,0,48,62,70,54,50],
[72,76,82,0,68,63,69,59],
[56,75,68,62,0,70,60,58],
[57,66,60,67,60,0,54,68],
[78,67,76,61,70,76,0,71],
[67,71,80,71,72,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,64,75,79,72,53,90],
[32,0,33,54,52,75,33,68],
[66,97,0,64,81,77,70,94],
[55,76,66,0,94,63,35,70],
[51,78,49,36,0,57,34,74],
[58,55,53,67,73,0,55,70],
[77,97,60,95,96,75,0,75],
[40,62,36,60,56,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,49,55,51,47,58,44],
[87,0,60,68,64,51,72,56],
[81,70,0,60,81,48,66,69],
[75,62,70,0,75,66,74,70],
[79,66,49,55,0,59,51,47],
[83,79,82,64,71,0,77,71],
[72,58,64,56,79,53,0,67],
[86,74,61,60,83,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,77,76,74,73,69],
[66,0,65,72,71,58,73,64],
[58,65,0,75,67,61,68,73],
[53,58,55,0,64,61,56,59],
[54,59,63,66,0,61,61,73],
[56,72,69,69,69,0,76,68],
[57,57,62,74,69,54,0,69],
[61,66,57,71,57,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,73,73,64,70,65],
[62,0,68,73,74,65,69,69],
[61,62,0,66,62,59,68,62],
[57,57,64,0,71,59,66,58],
[57,56,68,59,0,60,65,63],
[66,65,71,71,70,0,72,61],
[60,61,62,64,65,58,0,63],
[65,61,68,72,67,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,67,47,70,60,66,45],
[38,0,62,55,65,60,37,42],
[63,68,0,71,62,69,50,50],
[83,75,59,0,75,67,65,53],
[60,65,68,55,0,58,51,46],
[70,70,61,63,72,0,47,53],
[64,93,80,65,79,83,0,67],
[85,88,80,77,84,77,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,64,64,68,57,66],
[71,0,60,77,75,71,69,68],
[64,70,0,67,66,68,67,70],
[66,53,63,0,73,66,63,81],
[66,55,64,57,0,59,60,62],
[62,59,62,64,71,0,61,67],
[73,61,63,67,70,69,0,66],
[64,62,60,49,68,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,60,58,61,64,71],
[65,0,71,70,80,73,72,73],
[61,59,0,62,65,64,64,64],
[70,60,68,0,62,71,73,70],
[72,50,65,68,0,60,61,72],
[69,57,66,59,70,0,74,75],
[66,58,66,57,69,56,0,71],
[59,57,66,60,58,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,82,63,73,70,59,63],
[75,0,80,74,74,81,72,65],
[48,50,0,64,54,60,45,56],
[67,56,66,0,60,66,50,60],
[57,56,76,70,0,67,55,60],
[60,49,70,64,63,0,47,50],
[71,58,85,80,75,83,0,64],
[67,65,74,70,70,80,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,71,82,37,80,69],
[56,0,24,64,78,54,54,30],
[60,106,0,83,89,72,73,71],
[59,66,47,0,75,58,77,47],
[48,52,41,55,0,11,84,29],
[93,76,58,72,119,0,73,53],
[50,76,57,53,46,57,0,45],
[61,100,59,83,101,77,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,55,62,54,58,62],
[65,0,65,63,63,72,57,61],
[66,65,0,67,58,68,70,58],
[75,67,63,0,67,73,75,64],
[68,67,72,63,0,66,65,66],
[76,58,62,57,64,0,67,62],
[72,73,60,55,65,63,0,61],
[68,69,72,66,64,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,55,49,56,69,58,63],
[60,0,59,54,75,71,56,55],
[75,71,0,70,55,75,67,69],
[81,76,60,0,79,75,67,57],
[74,55,75,51,0,75,59,56],
[61,59,55,55,55,0,50,50],
[72,74,63,63,71,80,0,71],
[67,75,61,73,74,80,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,76,62,78,76,67],
[64,0,59,61,39,65,61,79],
[64,71,0,56,43,39,64,52],
[54,69,74,0,58,57,68,79],
[68,91,87,72,0,44,88,64],
[52,65,91,73,86,0,71,97],
[54,69,66,62,42,59,0,87],
[63,51,78,51,66,33,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,78,68,86,80,79,59],
[44,0,99,75,84,93,101,74],
[52,31,0,62,40,31,47,82],
[62,55,68,0,61,57,68,36],
[44,46,90,69,0,74,57,69],
[50,37,99,73,56,0,42,70],
[51,29,83,62,73,88,0,70],
[71,56,48,94,61,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,59,66,59,71,61],
[60,0,70,69,54,61,64,63],
[62,60,0,55,63,60,69,55],
[71,61,75,0,63,58,69,62],
[64,76,67,67,0,62,69,66],
[71,69,70,72,68,0,79,64],
[59,66,61,61,61,51,0,54],
[69,67,75,68,64,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,61,63,66,62,59],
[65,0,57,67,62,69,68,56],
[60,73,0,64,72,63,57,65],
[69,63,66,0,71,73,63,58],
[67,68,58,59,0,76,61,64],
[64,61,67,57,54,0,59,60],
[68,62,73,67,69,71,0,69],
[71,74,65,72,66,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,116,82,96,34,77,116,116],
[14,0,43,57,34,43,77,43],
[48,87,0,14,34,77,34,34],
[34,73,116,0,34,77,73,73],
[96,96,96,96,0,57,96,96],
[53,87,53,53,73,0,73,53],
[14,53,96,57,34,57,0,57],
[14,87,96,57,34,77,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,72,57,84,69,63],
[68,0,62,62,58,81,71,70],
[79,68,0,76,65,77,75,72],
[58,68,54,0,53,68,64,65],
[73,72,65,77,0,82,82,69],
[46,49,53,62,48,0,62,56],
[61,59,55,66,48,68,0,62],
[67,60,58,65,61,74,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,71,69,79,68,76,63],
[54,0,57,56,52,59,63,56],
[59,73,0,65,67,68,74,61],
[61,74,65,0,73,68,76,75],
[51,78,63,57,0,69,70,56],
[62,71,62,62,61,0,70,69],
[54,67,56,54,60,60,0,58],
[67,74,69,55,74,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,64,63,64,67,66,70],
[75,0,77,65,67,60,69,79],
[66,53,0,65,68,57,74,77],
[67,65,65,0,69,61,63,69],
[66,63,62,61,0,65,65,69],
[63,70,73,69,65,0,70,74],
[64,61,56,67,65,60,0,65],
[60,51,53,61,61,56,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,71,65,62,71,74],
[64,0,61,62,63,53,58,68],
[57,69,0,69,59,58,60,68],
[59,68,61,0,64,64,55,63],
[65,67,71,66,0,57,65,61],
[68,77,72,66,73,0,62,66],
[59,72,70,75,65,68,0,64],
[56,62,62,67,69,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,70,62,70,68,51],
[67,0,57,63,70,62,68,71],
[64,73,0,71,74,80,70,70],
[60,67,59,0,62,67,58,59],
[68,60,56,68,0,63,69,66],
[60,68,50,63,67,0,66,63],
[62,62,60,72,61,64,0,63],
[79,59,60,71,64,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,106,81,40,29,83],
[72,0,70,95,84,63,48,85],
[64,60,0,77,85,75,67,101],
[24,35,53,0,77,36,32,57],
[49,46,45,53,0,38,34,65],
[90,67,55,94,92,0,66,96],
[101,82,63,98,96,64,0,98],
[47,45,29,73,65,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,73,62,64,70,67,60],
[56,0,62,58,51,64,60,65],
[57,68,0,65,60,60,65,61],
[68,72,65,0,67,68,65,69],
[66,79,70,63,0,71,70,71],
[60,66,70,62,59,0,65,60],
[63,70,65,65,60,65,0,64],
[70,65,69,61,59,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,51,63,73,50,52,56],
[87,0,65,77,53,43,52,80],
[79,65,0,76,84,79,79,86],
[67,53,54,0,69,64,69,84],
[57,77,46,61,0,53,47,72],
[80,87,51,66,77,0,48,96],
[78,78,51,61,83,82,0,86],
[74,50,44,46,58,34,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,75,69,69,79,61,77],
[76,0,62,69,67,53,35,60],
[55,68,0,90,55,76,41,77],
[61,61,40,0,53,52,48,57],
[61,63,75,77,0,86,66,70],
[51,77,54,78,44,0,41,52],
[69,95,89,82,64,89,0,83],
[53,70,53,73,60,78,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,47,58,80,66,71,60],
[76,0,75,65,83,75,68,74],
[83,55,0,57,72,63,72,62],
[72,65,73,0,76,69,63,74],
[50,47,58,54,0,61,56,49],
[64,55,67,61,69,0,67,66],
[59,62,58,67,74,63,0,73],
[70,56,68,56,81,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,64,67,69,65,70],
[65,0,76,71,71,67,69,74],
[70,54,0,59,66,69,66,72],
[66,59,71,0,63,71,68,72],
[63,59,64,67,0,63,60,66],
[61,63,61,59,67,0,61,71],
[65,61,64,62,70,69,0,66],
[60,56,58,58,64,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,91,56,60,59,64,69],
[77,0,71,62,55,53,72,80],
[39,59,0,55,47,43,60,70],
[74,68,75,0,77,65,62,89],
[70,75,83,53,0,65,67,82],
[71,77,87,65,65,0,67,82],
[66,58,70,68,63,63,0,78],
[61,50,60,41,48,48,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,73,61,60,66,60,72],
[53,0,58,58,71,54,53,54],
[57,72,0,75,61,50,57,64],
[69,72,55,0,60,70,65,56],
[70,59,69,70,0,63,54,61],
[64,76,80,60,67,0,63,56],
[70,77,73,65,76,67,0,60],
[58,76,66,74,69,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,52,81,64,73,63],
[60,0,77,68,87,71,68,78],
[55,53,0,42,64,55,56,62],
[78,62,88,0,72,66,75,72],
[49,43,66,58,0,55,34,75],
[66,59,75,64,75,0,58,82],
[57,62,74,55,96,72,0,85],
[67,52,68,58,55,48,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,81,65,81,65,65,0],
[49,0,78,3,78,3,114,0],
[49,52,0,3,68,52,114,49],
[65,127,127,0,127,49,127,49],
[49,52,62,3,0,52,114,49],
[65,127,78,81,78,0,127,65],
[65,16,16,3,16,3,0,0],
[130,130,81,81,81,65,130,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,65,70,63,65,66],
[68,0,72,68,73,68,65,68],
[69,58,0,63,72,63,56,61],
[65,62,67,0,66,62,59,66],
[60,57,58,64,0,62,57,58],
[67,62,67,68,68,0,65,68],
[65,65,74,71,73,65,0,68],
[64,62,69,64,72,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,79,63,68,56,69,72],
[74,0,85,71,69,64,61,73],
[51,45,0,52,61,70,57,57],
[67,59,78,0,70,55,68,71],
[62,61,69,60,0,70,68,60],
[74,66,60,75,60,0,61,60],
[61,69,73,62,62,69,0,71],
[58,57,73,59,70,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,58,60,63,53,58],
[71,0,68,72,72,69,73,60],
[60,62,0,66,77,68,68,67],
[72,58,64,0,68,62,65,66],
[70,58,53,62,0,62,71,58],
[67,61,62,68,68,0,66,58],
[77,57,62,65,59,64,0,55],
[72,70,63,64,72,72,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,88,64,60,70,56,66],
[62,0,81,66,69,86,62,62],
[42,49,0,41,49,63,38,47],
[66,64,89,0,62,59,66,63],
[70,61,81,68,0,70,64,61],
[60,44,67,71,60,0,45,56],
[74,68,92,64,66,85,0,69],
[64,68,83,67,69,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,72,59,63,62,65],
[61,0,63,63,61,60,71,59],
[59,67,0,63,63,65,67,62],
[58,67,67,0,64,56,69,62],
[71,69,67,66,0,70,71,63],
[67,70,65,74,60,0,72,67],
[68,59,63,61,59,58,0,66],
[65,71,68,68,67,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,72,73,70,66,65],
[67,0,70,71,58,62,67,78],
[64,60,0,75,61,71,66,74],
[58,59,55,0,61,66,59,62],
[57,72,69,69,0,62,70,62],
[60,68,59,64,68,0,67,67],
[64,63,64,71,60,63,0,70],
[65,52,56,68,68,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,72,64,77,69,63],
[61,0,71,64,65,74,65,65],
[62,59,0,60,53,64,61,51],
[58,66,70,0,63,62,65,61],
[66,65,77,67,0,75,74,64],
[53,56,66,68,55,0,67,61],
[61,65,69,65,56,63,0,57],
[67,65,79,69,66,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,76,64,59,62,64,65],
[70,0,75,63,63,69,66,71],
[54,55,0,59,59,60,54,64],
[66,67,71,0,63,62,60,66],
[71,67,71,67,0,69,64,68],
[68,61,70,68,61,0,64,69],
[66,64,76,70,66,66,0,69],
[65,59,66,64,62,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,62,65,67,65,69],
[73,0,63,65,67,74,72,72],
[66,67,0,60,68,69,73,67],
[68,65,70,0,66,76,67,69],
[65,63,62,64,0,64,63,63],
[63,56,61,54,66,0,72,70],
[65,58,57,63,67,58,0,64],
[61,58,63,61,67,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,47,81,55,57,51],
[67,0,67,57,68,89,65,63],
[58,63,0,48,62,73,50,45],
[83,73,82,0,75,83,51,59],
[49,62,68,55,0,54,44,46],
[75,41,57,47,76,0,47,55],
[73,65,80,79,86,83,0,66],
[79,67,85,71,84,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,75,70,73,66,68],
[70,0,66,81,72,72,63,67],
[60,64,0,58,72,61,61,57],
[55,49,72,0,66,54,55,60],
[60,58,58,64,0,63,61,63],
[57,58,69,76,67,0,58,61],
[64,67,69,75,69,72,0,68],
[62,63,73,70,67,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,71,69,72,76,69],
[67,0,66,69,73,65,74,68],
[61,64,0,67,71,75,72,76],
[59,61,63,0,67,69,67,73],
[61,57,59,63,0,66,61,68],
[58,65,55,61,64,0,70,67],
[54,56,58,63,69,60,0,69],
[61,62,54,57,62,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,61,57,67,58,65],
[69,0,68,66,63,71,65,65],
[73,62,0,71,60,75,55,66],
[69,64,59,0,66,71,64,58],
[73,67,70,64,0,66,63,68],
[63,59,55,59,64,0,62,59],
[72,65,75,66,67,68,0,66],
[65,65,64,72,62,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,70,68,72,70,57,69],
[74,0,69,72,78,62,59,59],
[60,61,0,67,67,66,67,63],
[62,58,63,0,74,78,60,64],
[58,52,63,56,0,56,52,54],
[60,68,64,52,74,0,61,72],
[73,71,63,70,78,69,0,68],
[61,71,67,66,76,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,69,80,58,70,62],
[63,0,71,81,83,69,72,72],
[69,59,0,64,78,75,74,57],
[61,49,66,0,59,56,68,55],
[50,47,52,71,0,54,70,58],
[72,61,55,74,76,0,65,52],
[60,58,56,62,60,65,0,49],
[68,58,73,75,72,78,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,69,53,78,78,84],
[60,0,61,84,65,72,57,76],
[72,69,0,62,49,76,62,91],
[61,46,68,0,56,66,58,76],
[77,65,81,74,0,98,78,80],
[52,58,54,64,32,0,51,71],
[52,73,68,72,52,79,0,81],
[46,54,39,54,50,59,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,57,66,67,61,67],
[64,0,67,59,62,70,65,68],
[59,63,0,51,64,69,62,65],
[73,71,79,0,70,77,62,73],
[64,68,66,60,0,67,65,64],
[63,60,61,53,63,0,52,66],
[69,65,68,68,65,78,0,76],
[63,62,65,57,66,64,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,63,63,72,66,63],
[76,0,78,62,81,66,70,67],
[64,52,0,57,60,63,61,55],
[67,68,73,0,73,63,68,65],
[67,49,70,57,0,64,74,60],
[58,64,67,67,66,0,70,57],
[64,60,69,62,56,60,0,66],
[67,63,75,65,70,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,67,63,66,66,75,74],
[75,0,69,73,68,65,71,83],
[63,61,0,54,68,49,74,76],
[67,57,76,0,66,53,70,69],
[64,62,62,64,0,47,56,67],
[64,65,81,77,83,0,73,71],
[55,59,56,60,74,57,0,64],
[56,47,54,61,63,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,61,61,45,64,66],
[64,0,60,60,60,56,60,64],
[74,70,0,69,74,62,70,69],
[69,70,61,0,61,69,67,67],
[69,70,56,69,0,67,66,62],
[85,74,68,61,63,0,72,62],
[66,70,60,63,64,58,0,57],
[64,66,61,63,68,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,54,62,65,45,66,75],
[77,0,54,57,49,65,63,50],
[76,76,0,65,59,54,72,67],
[68,73,65,0,66,58,63,75],
[65,81,71,64,0,59,70,76],
[85,65,76,72,71,0,78,78],
[64,67,58,67,60,52,0,68],
[55,80,63,55,54,52,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,58,69,57,55,56,59],
[76,0,70,71,70,65,62,68],
[72,60,0,67,60,56,60,67],
[61,59,63,0,66,62,59,64],
[73,60,70,64,0,54,62,76],
[75,65,74,68,76,0,67,67],
[74,68,70,71,68,63,0,63],
[71,62,63,66,54,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,57,62,51,62,56],
[66,0,56,58,50,60,50,67],
[70,74,0,63,58,58,61,61],
[73,72,67,0,64,64,78,71],
[68,80,72,66,0,65,66,60],
[79,70,72,66,65,0,74,62],
[68,80,69,52,64,56,0,64],
[74,63,69,59,70,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,90,104,112,95,126,57],
[55,0,95,60,83,94,109,65],
[40,35,0,47,41,62,68,52],
[26,70,83,0,52,83,96,57],
[18,47,89,78,0,68,95,45],
[35,36,68,47,62,0,64,45],
[4,21,62,34,35,66,0,4],
[73,65,78,73,85,85,126,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,60,50,55,64,49],
[67,0,68,66,56,61,61,61],
[68,62,0,64,57,56,64,49],
[70,64,66,0,64,66,66,56],
[80,74,73,66,0,70,71,63],
[75,69,74,64,60,0,66,67],
[66,69,66,64,59,64,0,61],
[81,69,81,74,67,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,60,63,62,69,56],
[71,0,63,61,64,58,69,62],
[71,67,0,56,71,56,66,65],
[70,69,74,0,68,66,70,65],
[67,66,59,62,0,60,67,66],
[68,72,74,64,70,0,75,71],
[61,61,64,60,63,55,0,63],
[74,68,65,65,64,59,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,74,64,63,67,71],
[63,0,68,71,59,62,68,63],
[66,62,0,65,63,66,62,58],
[56,59,65,0,56,56,64,52],
[66,71,67,74,0,62,63,70],
[67,68,64,74,68,0,68,64],
[63,62,68,66,67,62,0,54],
[59,67,72,78,60,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,61,76,61,75,77,75],
[52,0,58,65,57,69,66,67],
[69,72,0,73,65,81,69,76],
[54,65,57,0,55,63,54,68],
[69,73,65,75,0,71,70,71],
[55,61,49,67,59,0,60,78],
[53,64,61,76,60,70,0,78],
[55,63,54,62,59,52,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,64,79,91,46,66],
[77,0,64,71,59,51,39,52],
[79,66,0,85,79,53,66,66],
[66,59,45,0,54,53,54,46],
[51,71,51,76,0,25,38,58],
[39,79,77,77,105,0,57,51],
[84,91,64,76,92,73,0,46],
[64,78,64,84,72,79,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,71,63,75,63,82,74],
[44,0,60,45,46,44,64,50],
[59,70,0,60,69,54,78,69],
[67,85,70,0,67,65,85,71],
[55,84,61,63,0,62,76,69],
[67,86,76,65,68,0,84,72],
[48,66,52,45,54,46,0,50],
[56,80,61,59,61,58,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,77,72,70,62,73],
[66,0,64,67,65,75,65,72],
[72,66,0,69,64,69,61,71],
[53,63,61,0,51,61,49,63],
[58,65,66,79,0,68,61,73],
[60,55,61,69,62,0,59,68],
[68,65,69,81,69,71,0,70],
[57,58,59,67,57,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,78,65,68,68,61,73],
[61,0,70,57,62,64,61,64],
[52,60,0,61,48,57,52,58],
[65,73,69,0,65,61,63,68],
[62,68,82,65,0,69,68,69],
[62,66,73,69,61,0,60,71],
[69,69,78,67,62,70,0,64],
[57,66,72,62,61,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,75,66,66,65,79,77],
[48,0,67,59,63,50,60,68],
[55,63,0,49,66,52,48,71],
[64,71,81,0,71,61,56,84],
[64,67,64,59,0,54,51,73],
[65,80,78,69,76,0,71,82],
[51,70,82,74,79,59,0,81],
[53,62,59,46,57,48,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,35,65,51,41,68,72],
[51,0,72,72,69,59,79,65],
[95,58,0,71,62,55,87,52],
[65,58,59,0,50,48,66,57],
[79,61,68,80,0,56,100,54],
[89,71,75,82,74,0,75,55],
[62,51,43,64,30,55,0,48],
[58,65,78,73,76,75,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,79,74,73,71,71],
[63,0,74,76,64,58,67,63],
[65,56,0,64,67,59,59,58],
[51,54,66,0,58,61,59,52],
[56,66,63,72,0,61,57,58],
[57,72,71,69,69,0,63,61],
[59,63,71,71,73,67,0,68],
[59,67,72,78,72,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,71,63,68,71,69],
[61,0,55,76,65,70,66,63],
[68,75,0,72,61,58,66,56],
[59,54,58,0,58,48,65,57],
[67,65,69,72,0,66,66,64],
[62,60,72,82,64,0,66,62],
[59,64,64,65,64,64,0,55],
[61,67,74,73,66,68,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,49,58,56,61,47,64],
[78,0,65,55,65,66,52,75],
[81,65,0,68,71,82,68,79],
[72,75,62,0,66,69,67,69],
[74,65,59,64,0,69,55,69],
[69,64,48,61,61,0,54,71],
[83,78,62,63,75,76,0,81],
[66,55,51,61,61,59,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,52,79,22,50,79,23],
[57,0,0,57,0,27,57,30],
[78,130,0,101,70,48,101,52],
[51,73,29,0,22,0,57,30],
[108,130,60,108,0,108,108,81],
[80,103,82,130,22,0,130,81],
[51,73,29,73,22,0,0,21],
[107,100,78,100,49,49,109,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,86,54,59,75,71],
[62,0,76,70,59,55,54,67],
[62,54,0,81,47,65,42,75],
[44,60,49,0,48,50,36,74],
[76,71,83,82,0,65,81,87],
[71,75,65,80,65,0,59,59],
[55,76,88,94,49,71,0,75],
[59,63,55,56,43,71,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,61,67,68,61,55],
[69,0,50,80,73,67,54,57],
[71,80,0,76,85,61,73,76],
[69,50,54,0,80,66,63,59],
[63,57,45,50,0,56,56,56],
[62,63,69,64,74,0,62,68],
[69,76,57,67,74,68,0,63],
[75,73,54,71,74,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,77,72,65,88,52],
[59,0,63,70,67,67,77,70],
[63,67,0,52,72,74,63,57],
[53,60,78,0,86,80,59,74],
[58,63,58,44,0,58,55,56],
[65,63,56,50,72,0,67,49],
[42,53,67,71,75,63,0,53],
[78,60,73,56,74,81,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,61,52,61,64,59],
[72,0,61,75,69,77,68,76],
[78,69,0,75,67,78,64,79],
[69,55,55,0,61,71,67,67],
[78,61,63,69,0,73,66,63],
[69,53,52,59,57,0,55,63],
[66,62,66,63,64,75,0,68],
[71,54,51,63,67,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,61,57,58,55,76],
[71,0,73,69,71,72,63,88],
[73,57,0,63,73,69,66,85],
[69,61,67,0,56,69,54,85],
[73,59,57,74,0,70,66,85],
[72,58,61,61,60,0,50,73],
[75,67,64,76,64,80,0,102],
[54,42,45,45,45,57,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,63,62,72,67,78],
[68,0,66,61,62,65,59,74],
[66,64,0,66,61,67,60,75],
[67,69,64,0,63,61,59,68],
[68,68,69,67,0,63,68,69],
[58,65,63,69,67,0,71,77],
[63,71,70,71,62,59,0,72],
[52,56,55,62,61,53,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,50,75,71,58,62],
[75,0,90,72,88,80,77,62],
[71,40,0,43,81,78,71,73],
[80,58,87,0,96,67,72,75],
[55,42,49,34,0,43,43,43],
[59,50,52,63,87,0,66,66],
[72,53,59,58,87,64,0,74],
[68,68,57,55,87,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,50,67,49,60,51,48],
[79,0,63,74,62,68,62,66],
[80,67,0,73,63,78,69,67],
[63,56,57,0,56,66,57,51],
[81,68,67,74,0,64,65,67],
[70,62,52,64,66,0,63,60],
[79,68,61,73,65,67,0,71],
[82,64,63,79,63,70,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,91,65,83,79,68,77,73],
[39,0,52,56,47,42,64,51],
[65,78,0,86,83,61,86,64],
[47,74,44,0,69,43,67,46],
[51,83,47,61,0,53,72,52],
[62,88,69,87,77,0,84,80],
[53,66,44,63,58,46,0,55],
[57,79,66,84,78,50,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,66,55,82,69,62],
[61,0,66,68,65,69,68,53],
[68,64,0,61,70,76,82,60],
[64,62,69,0,65,66,62,57],
[75,65,60,65,0,68,69,67],
[48,61,54,64,62,0,62,53],
[61,62,48,68,61,68,0,57],
[68,77,70,73,63,77,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,66,69,59,55,65],
[73,0,75,71,73,62,62,73],
[73,55,0,68,68,67,68,72],
[64,59,62,0,70,60,61,70],
[61,57,62,60,0,43,51,66],
[71,68,63,70,87,0,64,85],
[75,68,62,69,79,66,0,74],
[65,57,58,60,64,45,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,55,62,48,61,59,59],
[68,0,59,66,53,68,57,56],
[75,71,0,69,70,67,68,51],
[68,64,61,0,45,61,67,57],
[82,77,60,85,0,71,74,66],
[69,62,63,69,59,0,56,49],
[71,73,62,63,56,74,0,57],
[71,74,79,73,64,81,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,60,95,29,31,53,49],
[81,0,78,61,71,50,60,84],
[70,52,0,35,26,59,59,84],
[35,69,95,0,64,35,88,84],
[101,59,104,66,0,44,94,93],
[99,80,71,95,86,0,53,77],
[77,70,71,42,36,77,0,84],
[81,46,46,46,37,53,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,79,65,78,59,94,71],
[94,0,79,85,94,59,94,91],
[51,51,0,51,91,77,80,33],
[65,45,79,0,65,61,92,73],
[52,36,39,65,0,79,92,49],
[71,71,53,69,51,0,76,84],
[36,36,50,38,38,54,0,34],
[59,39,97,57,81,46,96,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,65,62,61,52,71],
[66,0,76,64,79,74,72,86],
[61,54,0,64,44,61,61,74],
[65,66,66,0,73,64,70,66],
[68,51,86,57,0,63,56,63],
[69,56,69,66,67,0,60,64],
[78,58,69,60,74,70,0,72],
[59,44,56,64,67,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,75,73,63,66,64,62],
[68,0,76,68,71,61,61,66],
[55,54,0,61,65,58,61,57],
[57,62,69,0,63,65,60,60],
[67,59,65,67,0,59,69,58],
[64,69,72,65,71,0,60,61],
[66,69,69,70,61,70,0,57],
[68,64,73,70,72,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,61,71,68,66,61],
[63,0,65,65,63,59,63,64],
[63,65,0,54,59,63,59,59],
[69,65,76,0,63,72,65,70],
[59,67,71,67,0,66,69,64],
[62,71,67,58,64,0,67,60],
[64,67,71,65,61,63,0,59],
[69,66,71,60,66,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,79,54,61,67,65],
[57,0,55,63,32,56,51,53],
[64,75,0,85,68,59,57,55],
[51,67,45,0,65,42,49,65],
[76,98,62,65,0,64,74,73],
[69,74,71,88,66,0,49,67],
[63,79,73,81,56,81,0,62],
[65,77,75,65,57,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,20,57,30,43,44,68],
[85,0,43,65,45,44,30,59],
[110,87,0,86,82,63,57,85],
[73,65,44,0,63,60,78,75],
[100,85,48,67,0,64,38,92],
[87,86,67,70,66,0,61,75],
[86,100,73,52,92,69,0,90],
[62,71,45,55,38,55,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,68,62,58,58,58,57],
[77,0,77,64,68,66,65,67],
[62,53,0,61,54,51,56,58],
[68,66,69,0,55,60,71,65],
[72,62,76,75,0,65,64,74],
[72,64,79,70,65,0,73,63],
[72,65,74,59,66,57,0,62],
[73,63,72,65,56,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,53,62,61,45,65],
[68,0,65,51,64,63,50,71],
[76,65,0,58,66,68,63,66],
[77,79,72,0,70,80,60,80],
[68,66,64,60,0,73,56,65],
[69,67,62,50,57,0,65,65],
[85,80,67,70,74,65,0,67],
[65,59,64,50,65,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,59,64,61,56,63],
[74,0,62,60,70,61,59,54],
[71,68,0,72,73,71,60,70],
[71,70,58,0,61,63,68,68],
[66,60,57,69,0,67,62,62],
[69,69,59,67,63,0,56,55],
[74,71,70,62,68,74,0,74],
[67,76,60,62,68,75,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,68,78,76,75,67],
[58,0,68,64,74,69,68,58],
[65,62,0,72,75,79,65,65],
[62,66,58,0,77,77,75,61],
[52,56,55,53,0,69,69,49],
[54,61,51,53,61,0,62,48],
[55,62,65,55,61,68,0,58],
[63,72,65,69,81,82,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,70,65,72,66,77],
[55,0,70,61,56,60,59,63],
[58,60,0,57,59,66,64,63],
[60,69,73,0,61,70,69,65],
[65,74,71,69,0,61,74,65],
[58,70,64,60,69,0,61,74],
[64,71,66,61,56,69,0,68],
[53,67,67,65,65,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,67,62,66,50,68],
[56,0,57,63,60,58,63,67],
[63,73,0,62,61,64,57,76],
[63,67,68,0,60,65,68,65],
[68,70,69,70,0,65,69,67],
[64,72,66,65,65,0,67,69],
[80,67,73,62,61,63,0,74],
[62,63,54,65,63,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,76,62,60,57,69,61],
[68,0,59,62,73,64,74,57],
[54,71,0,72,68,59,65,67],
[68,68,58,0,56,68,75,55],
[70,57,62,74,0,66,73,75],
[73,66,71,62,64,0,63,53],
[61,56,65,55,57,67,0,61],
[69,73,63,75,55,77,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,71,66,64,64,58],
[65,0,64,79,73,67,69,69],
[67,66,0,77,75,69,69,63],
[59,51,53,0,56,52,62,53],
[64,57,55,74,0,60,60,62],
[66,63,61,78,70,0,70,60],
[66,61,61,68,70,60,0,60],
[72,61,67,77,68,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,58,65,63,73,62],
[65,0,60,67,58,61,73,64],
[60,70,0,63,57,66,66,56],
[72,63,67,0,68,66,73,64],
[65,72,73,62,0,61,71,56],
[67,69,64,64,69,0,74,67],
[57,57,64,57,59,56,0,57],
[68,66,74,66,74,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,88,103,68,70,53,75],
[73,0,80,63,63,64,68,91],
[42,50,0,68,68,62,73,68],
[27,67,62,0,89,90,40,78],
[62,67,62,41,0,62,55,62],
[60,66,68,40,68,0,62,89],
[77,62,57,90,75,68,0,57],
[55,39,62,52,68,41,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,63,66,73,68,67],
[65,0,70,62,67,63,64,73],
[61,60,0,58,61,65,64,62],
[67,68,72,0,63,69,72,71],
[64,63,69,67,0,69,72,75],
[57,67,65,61,61,0,72,70],
[62,66,66,58,58,58,0,66],
[63,57,68,59,55,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,62,63,50,59,68],
[57,0,81,72,69,64,65,69],
[70,49,0,45,45,55,45,65],
[68,58,85,0,58,64,62,75],
[67,61,85,72,0,64,60,81],
[80,66,75,66,66,0,61,76],
[71,65,85,68,70,69,0,66],
[62,61,65,55,49,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,55,62,47,43,60,67],
[58,0,71,64,47,52,61,65],
[75,59,0,59,68,46,85,64],
[68,66,71,0,71,68,57,68],
[83,83,62,59,0,74,80,60],
[87,78,84,62,56,0,70,84],
[70,69,45,73,50,60,0,54],
[63,65,66,62,70,46,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,70,81,59,62,74],
[62,0,53,67,66,58,67,55],
[65,77,0,75,74,62,70,71],
[60,63,55,0,77,56,59,72],
[49,64,56,53,0,50,66,61],
[71,72,68,74,80,0,74,65],
[68,63,60,71,64,56,0,65],
[56,75,59,58,69,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,54,60,57,56,63],
[65,0,57,56,57,51,57,64],
[76,73,0,77,66,70,64,75],
[76,74,53,0,71,69,72,66],
[70,73,64,59,0,64,60,67],
[73,79,60,61,66,0,59,72],
[74,73,66,58,70,71,0,74],
[67,66,55,64,63,58,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,65,70,69,77,67],
[70,0,68,71,72,72,72,59],
[57,62,0,65,67,65,72,57],
[65,59,65,0,60,59,65,53],
[60,58,63,70,0,63,67,59],
[61,58,65,71,67,0,72,62],
[53,58,58,65,63,58,0,52],
[63,71,73,77,71,68,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,62,57,62,55,55],
[62,0,72,76,63,67,60,60],
[69,58,0,59,58,64,59,62],
[68,54,71,0,56,61,55,55],
[73,67,72,74,0,70,68,62],
[68,63,66,69,60,0,62,56],
[75,70,71,75,62,68,0,68],
[75,70,68,75,68,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,78,77,76,50,71],
[65,0,68,81,83,75,68,58],
[69,62,0,74,100,79,67,49],
[52,49,56,0,73,81,53,39],
[53,47,30,57,0,79,12,43],
[54,55,51,49,51,0,23,27],
[80,62,63,77,118,107,0,53],
[59,72,81,91,87,103,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,60,63,75,86,64,63],
[75,0,75,62,75,94,74,82],
[70,55,0,46,42,83,64,55],
[67,68,84,0,57,85,72,69],
[55,55,88,73,0,75,66,83],
[44,36,47,45,55,0,52,52],
[66,56,66,58,64,78,0,47],
[67,48,75,61,47,78,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,75,73,67,58,64,63],
[71,0,76,73,62,72,70,62],
[55,54,0,68,50,67,58,50],
[57,57,62,0,52,55,49,56],
[63,68,80,78,0,66,69,72],
[72,58,63,75,64,0,68,51],
[66,60,72,81,61,62,0,55],
[67,68,80,74,58,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,76,68,60,50,79,78],
[87,0,93,78,71,65,83,101],
[54,37,0,66,57,41,67,72],
[62,52,64,0,41,47,61,71],
[70,59,73,89,0,59,89,93],
[80,65,89,83,71,0,99,86],
[51,47,63,69,41,31,0,72],
[52,29,58,59,37,44,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,69,74,65,69,67],
[65,0,67,70,75,67,64,61],
[69,63,0,75,72,76,72,64],
[61,60,55,0,70,61,57,64],
[56,55,58,60,0,57,65,57],
[65,63,54,69,73,0,63,65],
[61,66,58,73,65,67,0,72],
[63,69,66,66,73,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,56,65,69,61,58],
[74,0,64,64,64,76,66,68],
[66,66,0,72,68,65,62,70],
[74,66,58,0,71,64,62,64],
[65,66,62,59,0,65,58,65],
[61,54,65,66,65,0,60,62],
[69,64,68,68,72,70,0,71],
[72,62,60,66,65,68,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,58,59,68,57,57,57],
[71,0,65,67,80,74,64,65],
[72,65,0,78,83,89,82,74],
[71,63,52,0,72,78,75,57],
[62,50,47,58,0,69,60,57],
[73,56,41,52,61,0,40,48],
[73,66,48,55,70,90,0,48],
[73,65,56,73,73,82,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,58,58,63,55,78],
[65,0,77,78,70,81,72,73],
[62,53,0,47,60,63,44,51],
[72,52,83,0,58,73,51,76],
[72,60,70,72,0,82,81,66],
[67,49,67,57,48,0,60,55],
[75,58,86,79,49,70,0,56],
[52,57,79,54,64,75,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,50,57,68,53,68],
[72,0,59,46,58,45,57,90],
[69,71,0,52,68,51,59,71],
[80,84,78,0,74,71,62,82],
[73,72,62,56,0,61,65,68],
[62,85,79,59,69,0,69,97],
[77,73,71,68,65,61,0,74],
[62,40,59,48,62,33,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,130,34,70,14,70,110],
[60,0,96,34,70,55,34,74],
[0,34,0,34,70,14,34,33],
[96,96,96,0,56,91,70,110],
[60,60,60,74,0,55,55,74],
[116,75,116,39,75,0,89,96],
[60,96,96,60,75,41,0,60],
[20,56,97,20,56,34,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,66,63,74,67,69],
[61,0,65,62,62,70,61,63],
[68,65,0,67,74,67,64,73],
[64,68,63,0,64,63,64,67],
[67,68,56,66,0,67,65,67],
[56,60,63,67,63,0,55,69],
[63,69,66,66,65,75,0,65],
[61,67,57,63,63,61,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,63,66,70,63,65],
[66,0,68,63,69,64,62,64],
[70,62,0,62,79,66,65,68],
[67,67,68,0,77,60,73,68],
[64,61,51,53,0,58,57,53],
[60,66,64,70,72,0,66,64],
[67,68,65,57,73,64,0,68],
[65,66,62,62,77,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,46,48,62,57,58],
[67,0,62,57,64,76,56,58],
[73,68,0,64,61,73,59,67],
[84,73,66,0,72,76,60,66],
[82,66,69,58,0,82,66,74],
[68,54,57,54,48,0,58,59],
[73,74,71,70,64,72,0,73],
[72,72,63,64,56,71,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,47,55,55,56,63,89],
[55,0,48,60,53,66,67,89],
[83,82,0,60,58,65,70,84],
[75,70,70,0,64,71,66,70],
[75,77,72,66,0,52,78,80],
[74,64,65,59,78,0,69,79],
[67,63,60,64,52,61,0,61],
[41,41,46,60,50,51,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,64,67,59,69,57],
[59,0,57,65,63,64,61,55],
[59,73,0,64,63,66,69,60],
[66,65,66,0,65,66,67,60],
[63,67,67,65,0,64,67,59],
[71,66,64,64,66,0,68,59],
[61,69,61,63,63,62,0,68],
[73,75,70,70,71,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,63,60,62,57,68,49],
[72,0,71,76,72,65,67,62],
[67,59,0,64,58,63,77,53],
[70,54,66,0,59,59,73,61],
[68,58,72,71,0,68,67,59],
[73,65,67,71,62,0,72,67],
[62,63,53,57,63,58,0,55],
[81,68,77,69,71,63,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,70,64,74,63,68],
[56,0,61,58,63,65,55,61],
[58,69,0,65,64,67,60,73],
[60,72,65,0,50,58,56,67],
[66,67,66,80,0,67,72,64],
[56,65,63,72,63,0,61,79],
[67,75,70,74,58,69,0,68],
[62,69,57,63,66,51,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,66,58,78,59,58,61],
[56,0,65,74,66,54,57,56],
[64,65,0,61,73,69,65,63],
[72,56,69,0,80,67,62,66],
[52,64,57,50,0,54,54,47],
[71,76,61,63,76,0,66,58],
[72,73,65,68,76,64,0,60],
[69,74,67,64,83,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,72,82,72,65,54],
[59,0,77,63,73,61,63,68],
[57,53,0,64,68,49,54,57],
[58,67,66,0,80,57,61,72],
[48,57,62,50,0,53,56,45],
[58,69,81,73,77,0,74,70],
[65,67,76,69,74,56,0,74],
[76,62,73,58,85,60,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,66,76,64,76,57],
[58,0,59,53,80,54,62,66],
[63,71,0,55,74,51,83,64],
[64,77,75,0,81,75,68,72],
[54,50,56,49,0,42,46,63],
[66,76,79,55,88,0,60,79],
[54,68,47,62,84,70,0,63],
[73,64,66,58,67,51,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,78,73,65,74,67],
[60,0,65,70,63,61,62,68],
[63,65,0,63,61,55,63,67],
[52,60,67,0,53,63,69,62],
[57,67,69,77,0,64,69,62],
[65,69,75,67,66,0,75,64],
[56,68,67,61,61,55,0,68],
[63,62,63,68,68,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,72,72,64,68,69,67],
[51,0,68,66,58,63,57,63],
[58,62,0,69,59,56,63,62],
[58,64,61,0,64,62,72,59],
[66,72,71,66,0,58,62,64],
[62,67,74,68,72,0,65,70],
[61,73,67,58,68,65,0,63],
[63,67,68,71,66,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,61,78,72,70,76,86],
[36,0,38,55,71,53,79,49],
[69,92,0,78,68,54,72,78],
[52,75,52,0,88,79,69,67],
[58,59,62,42,0,55,63,70],
[60,77,76,51,75,0,70,77],
[54,51,58,61,67,60,0,62],
[44,81,52,63,60,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,55,49,56,48,68],
[76,0,62,61,64,70,71,68],
[77,68,0,71,61,67,68,65],
[75,69,59,0,66,65,77,69],
[81,66,69,64,0,80,71,70],
[74,60,63,65,50,0,71,66],
[82,59,62,53,59,59,0,59],
[62,62,65,61,60,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,48,57,49,75,51,57],
[65,0,40,60,56,65,48,59],
[82,90,0,65,74,77,66,65],
[73,70,65,0,71,75,50,68],
[81,74,56,59,0,70,51,66],
[55,65,53,55,60,0,54,56],
[79,82,64,80,79,76,0,78],
[73,71,65,62,64,74,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,56,66,73,61,62],
[67,0,69,65,63,71,64,72],
[57,61,0,61,62,65,61,56],
[74,65,69,0,57,69,68,72],
[64,67,68,73,0,69,69,67],
[57,59,65,61,61,0,69,60],
[69,66,69,62,61,61,0,62],
[68,58,74,58,63,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,71,76,38,42,58],
[59,0,72,65,73,76,71,50],
[61,58,0,62,56,54,57,46],
[59,65,68,0,75,45,48,74],
[54,57,74,55,0,55,57,48],
[92,54,76,85,75,0,68,65],
[88,59,73,82,73,62,0,82],
[72,80,84,56,82,65,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,54,47,38,44,61,56],
[83,0,69,63,82,80,79,61],
[76,61,0,56,75,61,69,69],
[83,67,74,0,80,76,72,57],
[92,48,55,50,0,45,54,42],
[86,50,69,54,85,0,61,59],
[69,51,61,58,76,69,0,56],
[74,69,61,73,88,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,62,83,60,62,58],
[62,0,54,63,68,48,53,76],
[66,76,0,77,58,60,57,80],
[68,67,53,0,54,49,35,61],
[47,62,72,76,0,36,67,78],
[70,82,70,81,94,0,61,81],
[68,77,73,95,63,69,0,75],
[72,54,50,69,52,49,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,73,65,76,78,70],
[61,0,61,62,68,66,56,66],
[63,69,0,69,77,70,63,66],
[57,68,61,0,71,64,69,70],
[65,62,53,59,0,63,66,70],
[54,64,60,66,67,0,54,62],
[52,74,67,61,64,76,0,67],
[60,64,64,60,60,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,66,57,57,54,55],
[64,0,77,73,63,65,61,72],
[70,53,0,72,63,58,61,61],
[64,57,58,0,53,55,63,53],
[73,67,67,77,0,66,60,57],
[73,65,72,75,64,0,59,67],
[76,69,69,67,70,71,0,61],
[75,58,69,77,73,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,54,69,63,68,49],
[55,0,58,71,75,67,66,56],
[53,72,0,69,86,73,66,51],
[76,59,61,0,69,85,54,71],
[61,55,44,61,0,80,85,56],
[67,63,57,45,50,0,56,38],
[62,64,64,76,45,74,0,58],
[81,74,79,59,74,92,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,69,69,65,53,64],
[60,0,53,64,63,56,43,69],
[70,77,0,72,69,68,64,64],
[61,66,58,0,60,48,45,61],
[61,67,61,70,0,72,63,67],
[65,74,62,82,58,0,65,67],
[77,87,66,85,67,65,0,71],
[66,61,66,69,63,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,53,79,67,66,58],
[70,0,71,81,97,78,63,72],
[74,59,0,53,96,68,53,71],
[77,49,77,0,97,71,54,53],
[51,33,34,33,0,33,60,39],
[63,52,62,59,97,0,46,70],
[64,67,77,76,70,84,0,57],
[72,58,59,77,91,60,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,77,65,58,83,74,47],
[73,0,83,59,52,76,80,70],
[53,47,0,48,43,53,49,39],
[65,71,82,0,63,72,70,53],
[72,78,87,67,0,89,73,63],
[47,54,77,58,41,0,62,56],
[56,50,81,60,57,68,0,61],
[83,60,91,77,67,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,64,63,63,69,61],
[64,0,58,58,59,63,61,57],
[61,72,0,62,65,59,66,62],
[66,72,68,0,62,64,67,67],
[67,71,65,68,0,65,62,62],
[67,67,71,66,65,0,72,63],
[61,69,64,63,68,58,0,57],
[69,73,68,63,68,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,66,61,63,63,64],
[63,0,67,61,55,62,58,66],
[59,63,0,60,67,71,64,67],
[64,69,70,0,62,64,51,69],
[69,75,63,68,0,75,76,68],
[67,68,59,66,55,0,59,71],
[67,72,66,79,54,71,0,67],
[66,64,63,61,62,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,57,53,72,66,64],
[65,0,60,63,64,61,75,66],
[66,70,0,61,66,66,75,66],
[73,67,69,0,69,70,75,65],
[77,66,64,61,0,69,72,65],
[58,69,64,60,61,0,71,65],
[64,55,55,55,58,59,0,55],
[66,64,64,65,65,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,66,62,63,68,65],
[63,0,67,62,62,69,70,62],
[65,63,0,64,61,71,65,65],
[64,68,66,0,63,66,64,68],
[68,68,69,67,0,69,61,65],
[67,61,59,64,61,0,70,63],
[62,60,65,66,69,60,0,66],
[65,68,65,62,65,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,64,79,79,73,91],
[51,0,37,55,60,74,55,89],
[66,93,0,70,75,82,56,95],
[66,75,60,0,69,98,73,81],
[51,70,55,61,0,65,55,64],
[51,56,48,32,65,0,49,71],
[57,75,74,57,75,81,0,80],
[39,41,35,49,66,59,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,74,77,73,59,68],
[57,0,45,62,67,60,58,41],
[64,85,0,85,87,73,68,51],
[56,68,45,0,56,58,57,46],
[53,63,43,74,0,62,48,37],
[57,70,57,72,68,0,54,62],
[71,72,62,73,82,76,0,53],
[62,89,79,84,93,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,60,50,62,63,73],
[68,0,57,64,53,66,67,62],
[79,73,0,73,65,64,72,71],
[70,66,57,0,58,60,70,65],
[80,77,65,72,0,70,75,65],
[68,64,66,70,60,0,65,69],
[67,63,58,60,55,65,0,68],
[57,68,59,65,65,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,71,74,68,66,54],
[57,0,61,68,68,75,65,72],
[68,69,0,61,65,66,88,59],
[59,62,69,0,78,82,76,52],
[56,62,65,52,0,75,65,43],
[62,55,64,48,55,0,49,52],
[64,65,42,54,65,81,0,53],
[76,58,71,78,87,78,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,70,67,63,72,70],
[68,0,68,63,65,62,58,70],
[67,62,0,69,60,52,61,71],
[60,67,61,0,71,66,65,71],
[63,65,70,59,0,68,65,77],
[67,68,78,64,62,0,67,90],
[58,72,69,65,65,63,0,73],
[60,60,59,59,53,40,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,85,104,82,65,108,80],
[45,0,87,93,103,54,110,61],
[45,43,0,77,67,78,71,43],
[26,37,53,0,48,49,63,22],
[48,27,63,82,0,67,69,48],
[65,76,52,81,63,0,97,76],
[22,20,59,67,61,33,0,51],
[50,69,87,108,82,54,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,54,57,45,55,53],
[72,0,72,47,73,56,77,71],
[61,58,0,63,57,56,61,51],
[76,83,67,0,65,68,84,59],
[73,57,73,65,0,49,66,59],
[85,74,74,62,81,0,65,57],
[75,53,69,46,64,65,0,53],
[77,59,79,71,71,73,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,77,82,63,74,84,75],
[59,0,67,72,68,68,73,72],
[53,63,0,63,65,61,62,61],
[48,58,67,0,57,66,73,69],
[67,62,65,73,0,70,69,72],
[56,62,69,64,60,0,67,72],
[46,57,68,57,61,63,0,68],
[55,58,69,61,58,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,60,54,65,63,63],
[63,0,85,62,66,63,65,70],
[50,45,0,60,54,47,61,49],
[70,68,70,0,52,69,63,72],
[76,64,76,78,0,71,70,70],
[65,67,83,61,59,0,61,60],
[67,65,69,67,60,69,0,58],
[67,60,81,58,60,70,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,65,61,62,59,56],
[66,0,57,70,56,60,68,58],
[71,73,0,75,66,69,70,58],
[65,60,55,0,58,66,61,67],
[69,74,64,72,0,72,70,61],
[68,70,61,64,58,0,60,58],
[71,62,60,69,60,70,0,66],
[74,72,72,63,69,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,61,67,65,71,61],
[60,0,64,65,57,68,65,64],
[62,66,0,69,64,60,67,65],
[69,65,61,0,60,62,68,54],
[63,73,66,70,0,74,72,67],
[65,62,70,68,56,0,72,67],
[59,65,63,62,58,58,0,57],
[69,66,65,76,63,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,57,61,56,73,71,66],
[58,0,69,74,48,61,54,61],
[73,61,0,57,59,73,56,56],
[69,56,73,0,50,67,38,64],
[74,82,71,80,0,78,63,65],
[57,69,57,63,52,0,39,70],
[59,76,74,92,67,91,0,75],
[64,69,74,66,65,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,55,61,49,51,55],
[69,0,65,49,79,66,67,64],
[66,65,0,57,82,58,63,64],
[75,81,73,0,81,69,65,80],
[69,51,48,49,0,51,44,53],
[81,64,72,61,79,0,55,61],
[79,63,67,65,86,75,0,77],
[75,66,66,50,77,69,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,43,58,50,55,58,39],
[69,0,68,74,70,59,76,73],
[87,62,0,68,75,75,80,61],
[72,56,62,0,56,74,87,60],
[80,60,55,74,0,72,82,61],
[75,71,55,56,58,0,65,57],
[72,54,50,43,48,65,0,53],
[91,57,69,70,69,73,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,130,63,114,114,130,63,114],
[0,0,63,51,0,63,0,114],
[67,67,0,51,51,67,16,67],
[16,79,79,0,63,79,79,130],
[16,130,79,67,0,79,16,130],
[0,67,63,51,51,0,0,114],
[67,130,114,51,114,130,0,114],
[16,16,63,0,0,16,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,57,62,49,48,51,64],
[79,0,71,75,64,67,64,70],
[73,59,0,65,63,48,64,54],
[68,55,65,0,48,47,61,51],
[81,66,67,82,0,63,60,73],
[82,63,82,83,67,0,74,77],
[79,66,66,69,70,56,0,70],
[66,60,76,79,57,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,51,64,70,58,58],
[73,0,67,62,69,72,79,71],
[65,63,0,62,57,64,56,69],
[79,68,68,0,74,76,81,63],
[66,61,73,56,0,67,72,58],
[60,58,66,54,63,0,59,47],
[72,51,74,49,58,71,0,47],
[72,59,61,67,72,83,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,71,68,66,66,73],
[65,0,61,70,74,56,67,75],
[66,69,0,84,69,62,66,73],
[59,60,46,0,61,55,60,71],
[62,56,61,69,0,59,64,71],
[64,74,68,75,71,0,71,80],
[64,63,64,70,66,59,0,67],
[57,55,57,59,59,50,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,53,62,61,76,67],
[74,0,67,60,66,67,72,76],
[73,63,0,64,61,61,69,69],
[77,70,66,0,65,73,73,75],
[68,64,69,65,0,65,71,69],
[69,63,69,57,65,0,67,67],
[54,58,61,57,59,63,0,65],
[63,54,61,55,61,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,66,67,56,54,67,56],
[81,0,78,69,61,86,63,68],
[64,52,0,77,43,76,59,45],
[63,61,53,0,35,61,53,62],
[74,69,87,95,0,81,84,64],
[76,44,54,69,49,0,57,51],
[63,67,71,77,46,73,0,70],
[74,62,85,68,66,79,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,65,66,68,64,63],
[57,0,75,76,53,68,65,63],
[60,55,0,59,61,61,54,54],
[65,54,71,0,67,73,65,68],
[64,77,69,63,0,72,69,75],
[62,62,69,57,58,0,58,59],
[66,65,76,65,61,72,0,64],
[67,67,76,62,55,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,60,61,66,67,74],
[74,0,73,70,60,78,58,63],
[64,57,0,47,66,67,62,73],
[70,60,83,0,82,72,65,74],
[69,70,64,48,0,60,74,75],
[64,52,63,58,70,0,50,74],
[63,72,68,65,56,80,0,75],
[56,67,57,56,55,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,50,65,70,64,59,52],
[78,0,61,53,67,85,61,53],
[80,69,0,72,70,82,67,60],
[65,77,58,0,84,69,64,66],
[60,63,60,46,0,61,47,60],
[66,45,48,61,69,0,41,52],
[71,69,63,66,83,89,0,64],
[78,77,70,64,70,78,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,52,57,44,47,51],
[94,0,72,63,75,62,77,78],
[81,58,0,61,68,65,69,70],
[78,67,69,0,82,65,76,67],
[73,55,62,48,0,44,47,51],
[86,68,65,65,86,0,67,66],
[83,53,61,54,83,63,0,62],
[79,52,60,63,79,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,62,48,56,71,62],
[86,0,64,76,80,41,85,63],
[79,66,0,62,68,56,76,71],
[68,54,68,0,61,69,66,47],
[82,50,62,69,0,45,62,67],
[74,89,74,61,85,0,81,79],
[59,45,54,64,68,49,0,56],
[68,67,59,83,63,51,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,33,47,67,47,39,48],
[63,0,30,47,53,45,31,63],
[97,100,0,72,91,55,74,73],
[83,83,58,0,73,43,41,70],
[63,77,39,57,0,61,38,62],
[83,85,75,87,69,0,64,81],
[91,99,56,89,92,66,0,73],
[82,67,57,60,68,49,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,72,67,77,66,65],
[60,0,59,74,70,65,66,64],
[66,71,0,72,79,72,66,61],
[58,56,58,0,69,55,61,63],
[63,60,51,61,0,55,58,66],
[53,65,58,75,75,0,62,63],
[64,64,64,69,72,68,0,72],
[65,66,69,67,64,67,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,62,66,56,58,65,55],
[48,0,64,46,65,59,39,53],
[68,66,0,63,71,57,55,73],
[64,84,67,0,45,76,61,66],
[74,65,59,85,0,58,63,45],
[72,71,73,54,72,0,41,67],
[65,91,75,69,67,89,0,60],
[75,77,57,64,85,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,61,67,79,78,65],
[61,0,58,63,64,66,58,57],
[62,72,0,60,66,60,62,65],
[69,67,70,0,71,75,68,62],
[63,66,64,59,0,69,61,53],
[51,64,70,55,61,0,54,48],
[52,72,68,62,69,76,0,60],
[65,73,65,68,77,82,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,56,58,65,61,61],
[67,0,57,50,49,56,56,54],
[63,73,0,56,52,69,63,65],
[74,80,74,0,67,63,71,73],
[72,81,78,63,0,74,60,70],
[65,74,61,67,56,0,61,69],
[69,74,67,59,70,69,0,64],
[69,76,65,57,60,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,72,62,59,61,54],
[63,0,62,64,57,68,65,62],
[74,68,0,71,67,64,69,69],
[58,66,59,0,57,57,62,55],
[68,73,63,73,0,65,69,62],
[71,62,66,73,65,0,75,63],
[69,65,61,68,61,55,0,60],
[76,68,61,75,68,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,44,67,59,45,47,73],
[57,0,66,62,61,47,48,62],
[86,64,0,67,42,63,73,59],
[63,68,63,0,70,59,59,74],
[71,69,88,60,0,73,56,49],
[85,83,67,71,57,0,64,63],
[83,82,57,71,74,66,0,57],
[57,68,71,56,81,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,73,66,88,32,24,80],
[60,0,79,63,95,25,31,81],
[57,51,0,56,70,44,19,79],
[64,67,74,0,76,63,74,68],
[42,35,60,54,0,28,47,91],
[98,105,86,67,102,0,65,106],
[106,99,111,56,83,65,0,73],
[50,49,51,62,39,24,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,62,67,71,73,68,72],
[56,0,54,61,60,60,59,66],
[68,76,0,64,56,57,66,71],
[63,69,66,0,67,70,64,68],
[59,70,74,63,0,68,65,76],
[57,70,73,60,62,0,66,66],
[62,71,64,66,65,64,0,59],
[58,64,59,62,54,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,73,62,62,75,77],
[66,0,74,79,67,65,79,78],
[60,56,0,77,68,55,77,73],
[57,51,53,0,62,56,78,65],
[68,63,62,68,0,68,77,68],
[68,65,75,74,62,0,72,73],
[55,51,53,52,53,58,0,55],
[53,52,57,65,62,57,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,60,70,54,63,62],
[73,0,65,67,68,64,72,65],
[71,65,0,61,65,52,56,70],
[70,63,69,0,66,68,70,68],
[60,62,65,64,0,58,54,55],
[76,66,78,62,72,0,82,69],
[67,58,74,60,76,48,0,57],
[68,65,60,62,75,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,63,61,63,68,63],
[73,0,70,78,63,82,78,73],
[71,60,0,72,73,73,65,74],
[67,52,58,0,62,73,61,69],
[69,67,57,68,0,65,71,66],
[67,48,57,57,65,0,71,66],
[62,52,65,69,59,59,0,64],
[67,57,56,61,64,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,47,58,49,51,63],
[68,0,63,63,62,68,66,61],
[71,67,0,68,72,70,65,68],
[83,67,62,0,63,69,62,75],
[72,68,58,67,0,64,63,76],
[81,62,60,61,66,0,66,73],
[79,64,65,68,67,64,0,68],
[67,69,62,55,54,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,57,60,57,63,70],
[69,0,69,58,64,67,62,79],
[71,61,0,54,55,58,63,81],
[73,72,76,0,71,57,60,88],
[70,66,75,59,0,63,67,82],
[73,63,72,73,67,0,66,80],
[67,68,67,70,63,64,0,79],
[60,51,49,42,48,50,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,67,79,69,70,66],
[59,0,69,68,72,68,71,59],
[66,61,0,67,76,68,72,57],
[63,62,63,0,72,67,68,54],
[51,58,54,58,0,49,59,48],
[61,62,62,63,81,0,72,62],
[60,59,58,62,71,58,0,54],
[64,71,73,76,82,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,66,64,68,86,94],
[59,0,52,65,60,55,77,66],
[71,78,0,64,58,65,82,87],
[64,65,66,0,59,54,80,75],
[66,70,72,71,0,63,82,75],
[62,75,65,76,67,0,83,87],
[44,53,48,50,48,47,0,61],
[36,64,43,55,55,43,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,96,89,79,65,87,78],
[76,0,70,86,77,53,54,67],
[34,60,0,82,50,53,84,81],
[41,44,48,0,51,46,56,75],
[51,53,80,79,0,48,76,90],
[65,77,77,84,82,0,67,72],
[43,76,46,74,54,63,0,62],
[52,63,49,55,40,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,58,67,58,55,54],
[66,0,66,65,74,66,64,59],
[59,64,0,66,73,68,61,69],
[72,65,64,0,71,69,70,64],
[63,56,57,59,0,57,57,63],
[72,64,62,61,73,0,59,58],
[75,66,69,60,73,71,0,65],
[76,71,61,66,67,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,81,78,76,71,58,88],
[45,0,66,66,65,55,76,62],
[49,64,0,73,56,64,59,77],
[52,64,57,0,63,60,50,56],
[54,65,74,67,0,64,63,79],
[59,75,66,70,66,0,69,76],
[72,54,71,80,67,61,0,71],
[42,68,53,74,51,54,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,50,48,44,56,51,70],
[92,0,88,83,52,80,77,84],
[80,42,0,61,67,72,65,61],
[82,47,69,0,66,75,65,74],
[86,78,63,64,0,64,69,70],
[74,50,58,55,66,0,64,77],
[79,53,65,65,61,66,0,66],
[60,46,69,56,60,53,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,49,59,60,57,49,57],
[72,0,61,70,66,70,62,66],
[81,69,0,68,76,70,65,75],
[71,60,62,0,64,70,56,66],
[70,64,54,66,0,65,60,69],
[73,60,60,60,65,0,57,58],
[81,68,65,74,70,73,0,66],
[73,64,55,64,61,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,69,66,64,65,67],
[64,0,65,79,53,61,57,65],
[64,65,0,72,64,62,62,67],
[61,51,58,0,53,63,42,52],
[64,77,66,77,0,71,68,59],
[66,69,68,67,59,0,61,59],
[65,73,68,88,62,69,0,75],
[63,65,63,78,71,71,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,63,54,60,50,66],
[65,0,66,57,60,56,52,68],
[71,64,0,62,65,62,61,67],
[67,73,68,0,73,69,54,79],
[76,70,65,57,0,54,47,59],
[70,74,68,61,76,0,68,64],
[80,78,69,76,83,62,0,79],
[64,62,63,51,71,66,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,72,76,77,70,70],
[72,0,74,62,64,82,61,66],
[63,56,0,55,58,69,62,57],
[58,68,75,0,72,77,61,64],
[54,66,72,58,0,64,62,65],
[53,48,61,53,66,0,52,56],
[60,69,68,69,68,78,0,68],
[60,64,73,66,65,74,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,62,60,49,57,57],
[75,0,82,67,63,57,64,74],
[62,48,0,65,56,56,49,55],
[68,63,65,0,65,56,61,63],
[70,67,74,65,0,66,59,68],
[81,73,74,74,64,0,71,67],
[73,66,81,69,71,59,0,72],
[73,56,75,67,62,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,79,65,71,65,88,75],
[60,0,79,73,68,67,94,75],
[51,51,0,59,61,54,69,55],
[65,57,71,0,74,57,75,67],
[59,62,69,56,0,59,71,77],
[65,63,76,73,71,0,75,79],
[42,36,61,55,59,55,0,59],
[55,55,75,63,53,51,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,65,70,58,60,55],
[66,0,58,64,70,61,69,66],
[70,72,0,62,64,67,68,63],
[65,66,68,0,72,67,60,59],
[60,60,66,58,0,58,52,61],
[72,69,63,63,72,0,67,66],
[70,61,62,70,78,63,0,65],
[75,64,67,71,69,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,72,56,64,66,58],
[68,0,67,62,60,60,63,62],
[60,63,0,62,49,49,62,48],
[58,68,68,0,60,63,63,57],
[74,70,81,70,0,64,75,66],
[66,70,81,67,66,0,78,61],
[64,67,68,67,55,52,0,56],
[72,68,82,73,64,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,58,64,65,61,69],
[57,0,64,60,58,64,63,72],
[71,66,0,59,67,70,78,67],
[72,70,71,0,66,63,72,74],
[66,72,63,64,0,57,75,71],
[65,66,60,67,73,0,72,72],
[69,67,52,58,55,58,0,58],
[61,58,63,56,59,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,66,68,68,76,68],
[67,0,66,68,65,69,69,75],
[60,64,0,53,65,59,56,60],
[64,62,77,0,64,70,66,72],
[62,65,65,66,0,74,65,77],
[62,61,71,60,56,0,64,64],
[54,61,74,64,65,66,0,64],
[62,55,70,58,53,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,52,50,66,62,67,66],
[60,0,84,68,57,56,61,95],
[78,46,0,79,70,72,49,65],
[80,62,51,0,70,67,60,63],
[64,73,60,60,0,76,75,60],
[68,74,58,63,54,0,64,59],
[63,69,81,70,55,66,0,80],
[64,35,65,67,70,71,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,60,61,72,65,74],
[58,0,60,60,47,64,59,56],
[61,70,0,65,52,64,62,68],
[70,70,65,0,66,76,59,78],
[69,83,78,64,0,86,70,81],
[58,66,66,54,44,0,63,65],
[65,71,68,71,60,67,0,77],
[56,74,62,52,49,65,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,51,49,51,72,59,55],
[68,0,45,53,53,60,73,70],
[79,85,0,84,66,92,63,90],
[81,77,46,0,69,70,67,79],
[79,77,64,61,0,80,77,78],
[58,70,38,60,50,0,62,68],
[71,57,67,63,53,68,0,62],
[75,60,40,51,52,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,77,70,71,70,66],
[65,0,58,65,65,59,67,63],
[58,72,0,75,73,65,64,59],
[53,65,55,0,66,62,61,56],
[60,65,57,64,0,64,70,66],
[59,71,65,68,66,0,71,69],
[60,63,66,69,60,59,0,69],
[64,67,71,74,64,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,99,33,80,97,64,47],
[83,0,66,83,83,97,50,95],
[31,64,0,64,64,128,81,45],
[97,47,66,0,97,66,64,95],
[50,47,66,33,0,97,64,64],
[33,33,2,64,33,0,31,31],
[66,80,49,66,66,99,0,80],
[83,35,85,35,66,99,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,63,67,67,66,64],
[55,0,63,61,59,68,61,59],
[57,67,0,62,65,66,66,61],
[67,69,68,0,62,61,66,65],
[63,71,65,68,0,64,62,60],
[63,62,64,69,66,0,73,69],
[64,69,64,64,68,57,0,68],
[66,71,69,65,70,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,58,59,64,58,61,65],
[51,0,54,66,55,39,48,54],
[72,76,0,64,70,46,62,56],
[71,64,66,0,63,43,60,56],
[66,75,60,67,0,48,62,51],
[72,91,84,87,82,0,65,69],
[69,82,68,70,68,65,0,59],
[65,76,74,74,79,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,56,58,66,58,56],
[68,0,57,64,67,70,66,53],
[76,73,0,68,79,73,75,61],
[74,66,62,0,70,64,66,67],
[72,63,51,60,0,62,74,63],
[64,60,57,66,68,0,65,63],
[72,64,55,64,56,65,0,57],
[74,77,69,63,67,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,48,66,73,33,54,79],
[75,0,30,79,85,63,60,75],
[82,100,0,65,95,73,74,80],
[64,51,65,0,70,62,73,60],
[57,45,35,60,0,52,44,70],
[97,67,57,68,78,0,54,91],
[76,70,56,57,86,76,0,71],
[51,55,50,70,60,39,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,59,62,72,63,68],
[67,0,64,63,61,68,60,68],
[64,66,0,63,77,70,68,69],
[71,67,67,0,73,65,64,69],
[68,69,53,57,0,68,68,60],
[58,62,60,65,62,0,68,62],
[67,70,62,66,62,62,0,68],
[62,62,61,61,70,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,58,60,55,66,59,59],
[85,0,74,66,63,74,73,72],
[72,56,0,59,62,71,64,71],
[70,64,71,0,64,69,68,71],
[75,67,68,66,0,74,68,65],
[64,56,59,61,56,0,60,54],
[71,57,66,62,62,70,0,66],
[71,58,59,59,65,76,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,69,72,66,66,65],
[61,0,61,66,69,71,52,60],
[67,69,0,74,71,72,64,65],
[61,64,56,0,63,65,55,66],
[58,61,59,67,0,77,56,63],
[64,59,58,65,53,0,49,59],
[64,78,66,75,74,81,0,62],
[65,70,65,64,67,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,67,56,65,47,55],
[63,0,58,81,57,58,72,48],
[66,72,0,78,60,77,69,65],
[63,49,52,0,44,51,48,57],
[74,73,70,86,0,74,57,66],
[65,72,53,79,56,0,66,80],
[83,58,61,82,73,64,0,66],
[75,82,65,73,64,50,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,73,77,81,51,60,89],
[59,0,64,82,86,65,69,77],
[57,66,0,82,77,60,58,77],
[53,48,48,0,74,48,62,77],
[49,44,53,56,0,37,61,64],
[79,65,70,82,93,0,83,85],
[70,61,72,68,69,47,0,81],
[41,53,53,53,66,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,58,63,62,75,58],
[69,0,67,63,59,62,64,51],
[65,63,0,63,63,56,70,58],
[72,67,67,0,80,71,67,55],
[67,71,67,50,0,59,69,60],
[68,68,74,59,71,0,72,67],
[55,66,60,63,61,58,0,57],
[72,79,72,75,70,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,74,67,74,62,72],
[63,0,72,75,49,63,64,74],
[50,58,0,67,39,57,66,58],
[56,55,63,0,49,39,57,54],
[63,81,91,81,0,77,94,68],
[56,67,73,91,53,0,71,67],
[68,66,64,73,36,59,0,64],
[58,56,72,76,62,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,55,62,59,76,57,55],
[55,0,48,49,58,54,48,33],
[75,82,0,68,64,64,64,64],
[68,81,62,0,46,58,73,40],
[71,72,66,84,0,51,58,65],
[54,76,66,72,79,0,65,58],
[73,82,66,57,72,65,0,57],
[75,97,66,90,65,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,61,61,58,70,57],
[74,0,72,65,72,63,74,67],
[66,58,0,59,63,56,65,59],
[69,65,71,0,65,66,70,64],
[69,58,67,65,0,51,74,63],
[72,67,74,64,79,0,75,68],
[60,56,65,60,56,55,0,59],
[73,63,71,66,67,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,84,60,67,75,77,75],
[54,0,65,50,52,61,54,62],
[46,65,0,67,55,55,68,62],
[70,80,63,0,66,56,64,72],
[63,78,75,64,0,55,75,79],
[55,69,75,74,75,0,88,76],
[53,76,62,66,55,42,0,63],
[55,68,68,58,51,54,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,58,58,62,56,66],
[67,0,61,51,68,60,69,59],
[68,69,0,66,61,60,72,59],
[72,79,64,0,65,63,70,65],
[72,62,69,65,0,63,69,59],
[68,70,70,67,67,0,68,64],
[74,61,58,60,61,62,0,62],
[64,71,71,65,71,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,60,63,63,60,83,68],
[48,0,47,61,52,49,61,60],
[70,83,0,64,63,56,88,68],
[67,69,66,0,61,67,76,77],
[67,78,67,69,0,65,77,72],
[70,81,74,63,65,0,79,66],
[47,69,42,54,53,51,0,58],
[62,70,62,53,58,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,73,65,69,73,72],
[62,0,59,66,63,65,60,65],
[63,71,0,78,68,79,69,76],
[57,64,52,0,64,60,63,56],
[65,67,62,66,0,68,63,63],
[61,65,51,70,62,0,69,64],
[57,70,61,67,67,61,0,68],
[58,65,54,74,67,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,103,69,59,81,96,89,95],
[27,0,41,39,43,59,68,63],
[61,89,0,74,92,89,97,88],
[71,91,56,0,83,82,85,96],
[49,87,38,47,0,81,79,69],
[34,71,41,48,49,0,68,62],
[41,62,33,45,51,62,0,53],
[35,67,42,34,61,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,76,61,68,79,78,59],
[73,0,61,88,57,82,78,59],
[54,69,0,59,58,76,67,51],
[69,42,71,0,59,73,74,69],
[62,73,72,71,0,72,65,66],
[51,48,54,57,58,0,55,57],
[52,52,63,56,65,75,0,43],
[71,71,79,61,64,73,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,81,71,70,60,71,55],
[53,0,71,63,69,53,60,61],
[49,59,0,65,54,47,56,57],
[59,67,65,0,68,59,58,57],
[60,61,76,62,0,68,77,70],
[70,77,83,71,62,0,74,63],
[59,70,74,72,53,56,0,52],
[75,69,73,73,60,67,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,74,65,59,64,73,63],
[58,0,60,55,56,65,53,61],
[56,70,0,59,66,60,55,63],
[65,75,71,0,78,60,73,67],
[71,74,64,52,0,59,61,63],
[66,65,70,70,71,0,67,64],
[57,77,75,57,69,63,0,67],
[67,69,67,63,67,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,77,65,79,77,83],
[58,0,56,50,63,73,59,65],
[69,74,0,66,62,84,73,68],
[53,80,64,0,63,80,67,65],
[65,67,68,67,0,80,77,57],
[51,57,46,50,50,0,54,59],
[53,71,57,63,53,76,0,74],
[47,65,62,65,73,71,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,62,62,60,60,63],
[70,0,64,62,65,64,67,67],
[61,66,0,58,58,66,61,68],
[68,68,72,0,65,66,60,68],
[68,65,72,65,0,62,58,69],
[70,66,64,64,68,0,59,63],
[70,63,69,70,72,71,0,72],
[67,63,62,62,61,67,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,76,65,79,74,66,80],
[66,0,68,73,73,72,64,83],
[54,62,0,60,64,46,47,67],
[65,57,70,0,71,55,65,67],
[51,57,66,59,0,54,52,70],
[56,58,84,75,76,0,70,71],
[64,66,83,65,78,60,0,65],
[50,47,63,63,60,59,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,66,59,61,63,58],
[63,0,68,74,63,74,75,64],
[64,62,0,60,54,62,60,58],
[64,56,70,0,62,61,62,55],
[71,67,76,68,0,70,69,64],
[69,56,68,69,60,0,69,68],
[67,55,70,68,61,61,0,62],
[72,66,72,75,66,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,65,64,65,73,60],
[74,0,66,74,65,74,80,69],
[69,64,0,75,68,73,78,62],
[65,56,55,0,61,66,71,64],
[66,65,62,69,0,73,73,55],
[65,56,57,64,57,0,67,61],
[57,50,52,59,57,63,0,55],
[70,61,68,66,75,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,115,58,115,58,97,115,97],
[15,0,40,97,0,57,97,57],
[72,90,0,112,33,57,112,72],
[15,33,18,0,33,57,75,57],
[72,130,97,97,0,57,97,57],
[33,73,73,73,73,0,73,90],
[15,33,18,55,33,57,0,72],
[33,73,58,73,73,40,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,112,85,107,130,58,59,23],
[18,0,49,44,58,67,58,9],
[45,81,0,111,85,53,85,36],
[23,86,19,0,63,58,59,23],
[0,72,45,67,0,14,54,23],
[72,63,77,72,116,0,103,67],
[71,72,45,71,76,27,0,49],
[107,121,94,107,107,63,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,75,90,72,81,57,74],
[44,0,65,57,47,62,56,64],
[55,65,0,46,58,65,47,58],
[40,73,84,0,55,48,61,49],
[58,83,72,75,0,84,58,72],
[49,68,65,82,46,0,67,60],
[73,74,83,69,72,63,0,59],
[56,66,72,81,58,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,85,85,85,130,38,85],
[45,0,0,85,0,92,45,0],
[45,130,0,130,92,92,45,92],
[45,45,0,0,0,45,45,0],
[45,130,38,130,0,92,83,85],
[0,38,38,85,38,0,38,38],
[92,85,85,85,47,92,0,85],
[45,130,38,130,45,92,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,106,55,49,69,86,73,44],
[24,0,72,29,46,40,69,53],
[75,58,0,54,56,66,53,54],
[81,101,76,0,59,68,59,72],
[61,84,74,71,0,72,81,82],
[44,90,64,62,58,0,85,56],
[57,61,77,71,49,45,0,60],
[86,77,76,58,48,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,62,65,66,67,69],
[60,0,61,58,70,68,64,71],
[62,69,0,59,63,56,69,58],
[68,72,71,0,75,60,70,71],
[65,60,67,55,0,67,64,60],
[64,62,74,70,63,0,72,63],
[63,66,61,60,66,58,0,52],
[61,59,72,59,70,67,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,55,61,53,64,83],
[64,0,59,64,43,66,59,69],
[72,71,0,68,69,58,72,84],
[75,66,62,0,47,62,60,70],
[69,87,61,83,0,75,72,81],
[77,64,72,68,55,0,69,80],
[66,71,58,70,58,61,0,69],
[47,61,46,60,49,50,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,60,69,61,68,61],
[52,0,66,65,70,61,64,63],
[65,64,0,62,69,68,62,69],
[70,65,68,0,61,67,64,64],
[61,60,61,69,0,66,59,62],
[69,69,62,63,64,0,69,62],
[62,66,68,66,71,61,0,67],
[69,67,61,66,68,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,58,58,73,67,63,70],
[58,0,60,56,63,63,57,60],
[72,70,0,65,75,72,66,67],
[72,74,65,0,84,69,67,76],
[57,67,55,46,0,61,53,59],
[63,67,58,61,69,0,65,64],
[67,73,64,63,77,65,0,62],
[60,70,63,54,71,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,66,54,65,63,51,61],
[83,0,71,54,69,74,62,72],
[64,59,0,82,65,66,58,65],
[76,76,48,0,76,80,66,56],
[65,61,65,54,0,77,60,64],
[67,56,64,50,53,0,59,67],
[79,68,72,64,70,71,0,72],
[69,58,65,74,66,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,65,66,77,67,79,60],
[42,0,52,46,66,64,48,60],
[65,78,0,64,77,74,70,80],
[64,84,66,0,66,61,72,70],
[53,64,53,64,0,59,71,58],
[63,66,56,69,71,0,75,62],
[51,82,60,58,59,55,0,66],
[70,70,50,60,72,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,64,63,60,62,60],
[70,0,70,65,70,69,60,66],
[60,60,0,61,63,60,60,58],
[66,65,69,0,65,65,71,63],
[67,60,67,65,0,64,64,62],
[70,61,70,65,66,0,67,63],
[68,70,70,59,66,63,0,64],
[70,64,72,67,68,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,63,65,63,64,60],
[67,0,61,67,65,78,67,59],
[70,69,0,69,65,76,65,61],
[67,63,61,0,64,67,58,64],
[65,65,65,66,0,69,67,66],
[67,52,54,63,61,0,64,59],
[66,63,65,72,63,66,0,64],
[70,71,69,66,64,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,85,37,67,37,63,33],
[54,0,51,24,43,40,57,49],
[45,79,0,45,42,42,49,32],
[93,106,85,0,77,65,91,88],
[63,87,88,53,0,56,71,55],
[93,90,88,65,74,0,96,78],
[67,73,81,39,59,34,0,41],
[97,81,98,42,75,52,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,53,58,49,66,52],
[77,0,68,66,63,59,72,49],
[68,62,0,77,58,47,82,52],
[77,64,53,0,58,45,75,55],
[72,67,72,72,0,54,87,68],
[81,71,83,85,76,0,81,58],
[64,58,48,55,43,49,0,42],
[78,81,78,75,62,72,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,57,56,72,56,64],
[67,0,50,67,67,64,66,85],
[69,80,0,42,80,77,65,75],
[73,63,88,0,89,73,75,87],
[74,63,50,41,0,52,54,60],
[58,66,53,57,78,0,59,79],
[74,64,65,55,76,71,0,70],
[66,45,55,43,70,51,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,70,57,60,60,61],
[64,0,72,71,59,74,68,74],
[59,58,0,60,54,55,50,59],
[60,59,70,0,54,71,53,67],
[73,71,76,76,0,75,61,76],
[70,56,75,59,55,0,57,59],
[70,62,80,77,69,73,0,64],
[69,56,71,63,54,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,57,58,66,58,56],
[70,0,71,61,64,61,67,59],
[63,59,0,58,62,59,56,55],
[73,69,72,0,81,71,57,69],
[72,66,68,49,0,61,50,69],
[64,69,71,59,69,0,58,69],
[72,63,74,73,80,72,0,72],
[74,71,75,61,61,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,61,51,56,64,49],
[74,0,84,70,59,67,86,68],
[67,46,0,60,52,50,66,59],
[69,60,70,0,51,67,74,63],
[79,71,78,79,0,78,94,61],
[74,63,80,63,52,0,80,71],
[66,44,64,56,36,50,0,47],
[81,62,71,67,69,59,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,51,49,55,54,55],
[70,0,53,60,57,57,53,57],
[66,77,0,61,64,62,65,59],
[79,70,69,0,67,76,68,59],
[81,73,66,63,0,76,71,70],
[75,73,68,54,54,0,54,55],
[76,77,65,62,59,76,0,60],
[75,73,71,71,60,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,80,80,81,78,55],
[62,0,71,70,67,70,67,66],
[56,59,0,74,62,62,62,57],
[50,60,56,0,60,56,57,48],
[50,63,68,70,0,65,61,51],
[49,60,68,74,65,0,66,49],
[52,63,68,73,69,64,0,50],
[75,64,73,82,79,81,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,78,80,72,59,62],
[72,0,71,69,76,66,65,60],
[65,59,0,64,76,86,68,70],
[52,61,66,0,74,70,52,65],
[50,54,54,56,0,68,44,60],
[58,64,44,60,62,0,58,60],
[71,65,62,78,86,72,0,66],
[68,70,60,65,70,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,82,74,75,71,66,84],
[71,0,87,88,88,77,65,82],
[48,43,0,81,58,59,66,79],
[56,42,49,0,67,50,57,50],
[55,42,72,63,0,67,60,84],
[59,53,71,80,63,0,61,75],
[64,65,64,73,70,69,0,61],
[46,48,51,80,46,55,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,56,48,68,61,57,64],
[66,0,63,59,60,67,52,58],
[74,67,0,61,67,60,60,59],
[82,71,69,0,66,73,62,63],
[62,70,63,64,0,72,55,53],
[69,63,70,57,58,0,54,65],
[73,78,70,68,75,76,0,64],
[66,72,71,67,77,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,69,86,77,68,75],
[72,0,68,59,82,94,66,84],
[61,62,0,64,69,82,58,77],
[61,71,66,0,66,86,54,58],
[44,48,61,64,0,68,57,62],
[53,36,48,44,62,0,41,52],
[62,64,72,76,73,89,0,85],
[55,46,53,72,68,78,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,79,73,80,75,70],
[61,0,50,66,68,61,62,62],
[65,80,0,72,69,61,68,70],
[51,64,58,0,74,67,72,59],
[57,62,61,56,0,59,64,51],
[50,69,69,63,71,0,71,67],
[55,68,62,58,66,59,0,59],
[60,68,60,71,79,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,85,62,71,65,75,69],
[67,0,72,62,65,65,66,64],
[45,58,0,61,58,50,52,56],
[68,68,69,0,68,66,73,64],
[59,65,72,62,0,59,64,67],
[65,65,80,64,71,0,75,67],
[55,64,78,57,66,55,0,67],
[61,66,74,66,63,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,61,67,68,37,59],
[62,0,56,54,60,56,56,80],
[67,74,0,54,59,58,64,75],
[69,76,76,0,53,65,68,76],
[63,70,71,77,0,62,62,75],
[62,74,72,65,68,0,51,71],
[93,74,66,62,68,79,0,69],
[71,50,55,54,55,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,74,66,77,61,69,73],
[70,0,72,64,72,75,69,65],
[56,58,0,66,69,65,64,62],
[64,66,64,0,66,68,65,68],
[53,58,61,64,0,63,55,60],
[69,55,65,62,67,0,69,66],
[61,61,66,65,75,61,0,70],
[57,65,68,62,70,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,130,65,0,65,65,130],
[65,0,130,65,65,65,130,130],
[0,0,0,0,0,0,0,0],
[65,65,130,0,0,65,65,65],
[130,65,130,130,0,65,130,130],
[65,65,130,65,65,0,130,130],
[65,0,130,65,0,0,0,65],
[0,0,130,65,0,0,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,65,72,59,61,79],
[56,0,59,62,68,57,69,68],
[58,71,0,61,72,60,65,68],
[65,68,69,0,63,65,71,68],
[58,62,58,67,0,58,67,64],
[71,73,70,65,72,0,72,79],
[69,61,65,59,63,58,0,63],
[51,62,62,62,66,51,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,73,57,67,75,81],
[69,0,57,59,64,71,71,84],
[66,73,0,68,62,69,67,74],
[57,71,62,0,68,54,59,76],
[73,66,68,62,0,74,87,80],
[63,59,61,76,56,0,66,68],
[55,59,63,71,43,64,0,70],
[49,46,56,54,50,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,93,92,58,94,95],
[57,0,24,89,72,66,93,73],
[71,106,0,86,107,70,89,63],
[37,41,44,0,78,36,64,39],
[38,58,23,52,0,23,48,53],
[72,64,60,94,107,0,86,79],
[36,37,41,66,82,44,0,48],
[35,57,67,91,77,51,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,68,75,53,64,69],
[63,0,67,70,72,58,63,71],
[60,63,0,70,70,59,58,62],
[62,60,60,0,62,67,63,64],
[55,58,60,68,0,50,57,63],
[77,72,71,63,80,0,79,66],
[66,67,72,67,73,51,0,68],
[61,59,68,66,67,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,65,65,66,70,67],
[69,0,72,75,73,60,73,68],
[59,58,0,67,68,57,73,47],
[65,55,63,0,53,63,71,52],
[65,57,62,77,0,63,66,60],
[64,70,73,67,67,0,71,68],
[60,57,57,59,64,59,0,63],
[63,62,83,78,70,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,63,62,62,69,59],
[55,0,83,60,64,70,79,57],
[53,47,0,60,64,65,72,61],
[67,70,70,0,73,67,55,67],
[68,66,66,57,0,59,67,53],
[68,60,65,63,71,0,62,67],
[61,51,58,75,63,68,0,60],
[71,73,69,63,77,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,56,63,53,61,59,48],
[79,0,69,77,65,64,63,69],
[74,61,0,71,62,58,61,55],
[67,53,59,0,55,56,61,62],
[77,65,68,75,0,70,73,71],
[69,66,72,74,60,0,59,67],
[71,67,69,69,57,71,0,58],
[82,61,75,68,59,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,80,74,76,64,84,65],
[58,0,72,68,77,58,74,58],
[50,58,0,67,75,60,65,39],
[56,62,63,0,77,60,57,48],
[54,53,55,53,0,51,55,51],
[66,72,70,70,79,0,87,63],
[46,56,65,73,75,43,0,43],
[65,72,91,82,79,67,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,64,74,51,47,60,67],
[75,0,90,91,76,63,72,68],
[66,40,0,43,63,53,46,48],
[56,39,87,0,76,42,60,62],
[79,54,67,54,0,78,78,71],
[83,67,77,88,52,0,49,93],
[70,58,84,70,52,81,0,77],
[63,62,82,68,59,37,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,68,54,76,81,75],
[64,0,72,76,60,73,57,52],
[64,58,0,67,64,71,58,45],
[62,54,63,0,55,67,62,52],
[76,70,66,75,0,73,69,56],
[54,57,59,63,57,0,76,44],
[49,73,72,68,61,54,0,54],
[55,78,85,78,74,86,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,66,60,54,67,65],
[69,0,61,65,67,58,59,64],
[71,69,0,68,66,60,65,62],
[64,65,62,0,53,63,66,61],
[70,63,64,77,0,66,75,73],
[76,72,70,67,64,0,71,74],
[63,71,65,64,55,59,0,63],
[65,66,68,69,57,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,64,57,57,56,62],
[70,0,63,68,55,56,64,59],
[69,67,0,71,71,71,69,59],
[66,62,59,0,54,70,66,48],
[73,75,59,76,0,72,77,83],
[73,74,59,60,58,0,63,68],
[74,66,61,64,53,67,0,65],
[68,71,71,82,47,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,68,74,65,65,70],
[61,0,60,75,78,54,77,66],
[67,70,0,75,94,64,79,79],
[62,55,55,0,75,66,57,61],
[56,52,36,55,0,53,59,56],
[65,76,66,64,77,0,63,67],
[65,53,51,73,71,67,0,68],
[60,64,51,69,74,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,76,74,74,70,65],
[60,0,58,64,67,64,64,50],
[62,72,0,70,81,79,75,63],
[54,66,60,0,75,65,61,62],
[56,63,49,55,0,62,65,55],
[56,66,51,65,68,0,63,56],
[60,66,55,69,65,67,0,60],
[65,80,67,68,75,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,61,51,70,57,47],
[72,0,71,67,66,70,65,59],
[69,59,0,69,51,68,56,53],
[69,63,61,0,69,67,60,67],
[79,64,79,61,0,71,72,67],
[60,60,62,63,59,0,60,47],
[73,65,74,70,58,70,0,59],
[83,71,77,63,63,83,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,80,69,50,62,35,47],
[73,0,54,109,110,107,72,61],
[50,76,0,78,76,71,72,61],
[61,21,52,0,47,34,7,61],
[80,20,54,83,0,81,46,68],
[68,23,59,96,49,0,72,84],
[95,58,58,123,84,58,0,74],
[83,69,69,69,62,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,81,60,70,53,64,68],
[65,0,74,75,67,59,67,71],
[49,56,0,54,66,56,52,61],
[70,55,76,0,66,61,56,67],
[60,63,64,64,0,58,61,66],
[77,71,74,69,72,0,64,75],
[66,63,78,74,69,66,0,63],
[62,59,69,63,64,55,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,66,54,60,57,57],
[69,0,63,67,72,60,60,60],
[68,67,0,73,72,67,69,65],
[64,63,57,0,57,51,61,57],
[76,58,58,73,0,67,56,68],
[70,70,63,79,63,0,66,64],
[73,70,61,69,74,64,0,70],
[73,70,65,73,62,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,55,49,65,55,55,67],
[81,0,57,55,75,65,67,69],
[75,73,0,66,65,54,68,63],
[81,75,64,0,76,63,64,74],
[65,55,65,54,0,66,66,61],
[75,65,76,67,64,0,67,62],
[75,63,62,66,64,63,0,61],
[63,61,67,56,69,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,66,57,68,77,51,67],
[55,0,68,61,58,67,61,58],
[64,62,0,70,58,52,53,56],
[73,69,60,0,69,60,51,58],
[62,72,72,61,0,65,65,47],
[53,63,78,70,65,0,55,61],
[79,69,77,79,65,75,0,59],
[63,72,74,72,83,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,68,62,72,64,62],
[66,0,68,59,61,71,57,50],
[57,62,0,66,65,71,60,57],
[62,71,64,0,69,75,67,56],
[68,69,65,61,0,75,62,69],
[58,59,59,55,55,0,53,50],
[66,73,70,63,68,77,0,61],
[68,80,73,74,61,80,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,73,74,60,63,70],
[60,0,57,65,66,57,53,66],
[63,73,0,70,76,65,68,70],
[57,65,60,0,64,57,59,62],
[56,64,54,66,0,52,51,55],
[70,73,65,73,78,0,68,68],
[67,77,62,71,79,62,0,74],
[60,64,60,68,75,62,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,54,55,79,77,79],
[76,0,78,68,63,82,86,78],
[71,52,0,59,72,72,80,72],
[76,62,71,0,60,76,91,77],
[75,67,58,70,0,80,78,73],
[51,48,58,54,50,0,54,60],
[53,44,50,39,52,76,0,61],
[51,52,58,53,57,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,84,61,73,65,75,63],
[60,0,69,53,58,57,70,49],
[46,61,0,47,62,62,65,60],
[69,77,83,0,75,64,85,73],
[57,72,68,55,0,63,73,53],
[65,73,68,66,67,0,78,65],
[55,60,65,45,57,52,0,55],
[67,81,70,57,77,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,62,68,69,58,69],
[69,0,68,67,66,63,65,71],
[64,62,0,67,62,64,68,71],
[68,63,63,0,63,64,58,64],
[62,64,68,67,0,68,59,67],
[61,67,66,66,62,0,60,71],
[72,65,62,72,71,70,0,80],
[61,59,59,66,63,59,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,53,53,56,66,59,54],
[78,0,62,71,67,76,64,71],
[77,68,0,76,67,73,71,63],
[77,59,54,0,56,65,63,60],
[74,63,63,74,0,69,68,70],
[64,54,57,65,61,0,63,63],
[71,66,59,67,62,67,0,64],
[76,59,67,70,60,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,55,56,62,39,73,75],
[48,0,49,58,38,55,60,67],
[75,81,0,57,72,60,58,79],
[74,72,73,0,68,59,63,102],
[68,92,58,62,0,48,62,74],
[91,75,70,71,82,0,63,71],
[57,70,72,67,68,67,0,64],
[55,63,51,28,56,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,81,60,68,72,89,77],
[73,0,45,79,42,58,81,65],
[49,85,0,43,47,29,65,63],
[70,51,87,0,54,50,81,64],
[62,88,83,76,0,54,66,80],
[58,72,101,80,76,0,87,89],
[41,49,65,49,64,43,0,54],
[53,65,67,66,50,41,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,70,67,74,69,68],
[66,0,59,65,53,67,77,63],
[56,71,0,65,57,69,58,59],
[60,65,65,0,60,70,60,62],
[63,77,73,70,0,70,73,70],
[56,63,61,60,60,0,67,72],
[61,53,72,70,57,63,0,67],
[62,67,71,68,60,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,56,84,58,73,70,59],
[63,0,51,77,70,64,59,69],
[74,79,0,81,67,68,81,62],
[46,53,49,0,58,60,51,50],
[72,60,63,72,0,69,67,52],
[57,66,62,70,61,0,62,58],
[60,71,49,79,63,68,0,60],
[71,61,68,80,78,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,76,71,56,74,76,62],
[73,0,65,69,51,61,74,55],
[54,65,0,74,63,65,75,59],
[59,61,56,0,64,63,71,71],
[74,79,67,66,0,47,73,67],
[56,69,65,67,83,0,78,68],
[54,56,55,59,57,52,0,68],
[68,75,71,59,63,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,91,72,80,75,67,82],
[72,0,70,79,80,65,63,64],
[39,60,0,59,68,64,53,53],
[58,51,71,0,76,60,56,55],
[50,50,62,54,0,55,46,65],
[55,65,66,70,75,0,45,66],
[63,67,77,74,84,85,0,77],
[48,66,77,75,65,64,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,46,55,63,62,61,60],
[59,0,59,68,62,61,66,61],
[84,71,0,70,67,63,65,69],
[75,62,60,0,63,68,71,65],
[67,68,63,67,0,68,81,70],
[68,69,67,62,62,0,64,65],
[69,64,65,59,49,66,0,62],
[70,69,61,65,60,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,90,49,72,63,71,73,86],
[40,0,62,68,43,66,63,66],
[81,68,0,79,77,73,64,80],
[58,62,51,0,58,75,51,80],
[67,87,53,72,0,79,75,94],
[59,64,57,55,51,0,61,62],
[57,67,66,79,55,69,0,59],
[44,64,50,50,36,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,56,66,64,57,56,57],
[65,0,65,79,62,63,63,65],
[74,65,0,82,76,69,70,65],
[64,51,48,0,56,54,56,57],
[66,68,54,74,0,60,59,57],
[73,67,61,76,70,0,66,74],
[74,67,60,74,71,64,0,71],
[73,65,65,73,73,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,79,72,68,71,67],
[57,0,60,61,70,59,69,58],
[70,70,0,82,78,64,74,78],
[51,69,48,0,68,55,62,60],
[58,60,52,62,0,50,68,61],
[62,71,66,75,80,0,81,69],
[59,61,56,68,62,49,0,60],
[63,72,52,70,69,61,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,68,71,67,71,65],
[61,0,61,61,65,57,70,60],
[69,69,0,63,75,58,76,67],
[62,69,67,0,69,59,64,66],
[59,65,55,61,0,55,65,61],
[63,73,72,71,75,0,86,74],
[59,60,54,66,65,44,0,63],
[65,70,63,64,69,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,64,77,74,70,89],
[56,0,63,59,68,71,60,78],
[66,67,0,60,63,66,70,67],
[66,71,70,0,62,87,79,81],
[53,62,67,68,0,74,73,78],
[56,59,64,43,56,0,65,68],
[60,70,60,51,57,65,0,88],
[41,52,63,49,52,62,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,54,65,68,67,70,73],
[60,0,56,52,55,69,71,66],
[76,74,0,64,66,62,70,68],
[65,78,66,0,58,68,78,68],
[62,75,64,72,0,70,74,69],
[63,61,68,62,60,0,67,72],
[60,59,60,52,56,63,0,69],
[57,64,62,62,61,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,57,75,66,62,61,71],
[74,0,66,71,65,67,66,76],
[73,64,0,82,66,73,67,74],
[55,59,48,0,59,59,59,68],
[64,65,64,71,0,66,63,74],
[68,63,57,71,64,0,64,78],
[69,64,63,71,67,66,0,73],
[59,54,56,62,56,52,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,66,69,61,59,70],
[68,0,70,62,61,63,59,65],
[65,60,0,66,60,72,74,65],
[64,68,64,0,69,68,59,60],
[61,69,70,61,0,56,65,64],
[69,67,58,62,74,0,65,69],
[71,71,56,71,65,65,0,76],
[60,65,65,70,66,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,62,59,52,65,50],
[71,0,64,72,67,67,72,64],
[65,66,0,64,59,67,69,62],
[68,58,66,0,57,60,62,62],
[71,63,71,73,0,64,70,66],
[78,63,63,70,66,0,64,61],
[65,58,61,68,60,66,0,66],
[80,66,68,68,64,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,65,54,40,67,81],
[63,0,71,73,58,48,40,82],
[71,59,0,65,66,54,47,86],
[65,57,65,0,55,55,56,55],
[76,72,64,75,0,68,72,69],
[90,82,76,75,62,0,81,68],
[63,90,83,74,58,49,0,75],
[49,48,44,75,61,62,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,70,71,65,62,61],
[71,0,67,67,75,67,70,62],
[65,63,0,69,68,73,71,71],
[60,63,61,0,67,67,66,62],
[59,55,62,63,0,66,62,63],
[65,63,57,63,64,0,62,59],
[68,60,59,64,68,68,0,69],
[69,68,59,68,67,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,52,78,57,72,53],
[62,0,60,56,78,67,66,62],
[64,70,0,69,72,68,74,60],
[78,74,61,0,78,58,72,69],
[52,52,58,52,0,54,66,54],
[73,63,62,72,76,0,69,68],
[58,64,56,58,64,61,0,61],
[77,68,70,61,76,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,59,78,72,65,76],
[69,0,72,49,79,65,66,76],
[60,58,0,56,70,67,70,65],
[71,81,74,0,72,67,60,79],
[52,51,60,58,0,54,55,74],
[58,65,63,63,76,0,65,71],
[65,64,60,70,75,65,0,76],
[54,54,65,51,56,59,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,62,66,65,59,65],
[56,0,62,53,66,65,61,70],
[63,68,0,65,68,67,66,74],
[68,77,65,0,73,66,75,75],
[64,64,62,57,0,57,62,66],
[65,65,63,64,73,0,67,74],
[71,69,64,55,68,63,0,64],
[65,60,56,55,64,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,63,56,54,57,64],
[65,0,60,61,54,62,56,44],
[73,70,0,57,55,73,70,67],
[67,69,73,0,54,73,65,66],
[74,76,75,76,0,63,71,68],
[76,68,57,57,67,0,61,56],
[73,74,60,65,59,69,0,67],
[66,86,63,64,62,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,57,56,55,58,68],
[68,0,81,70,71,61,69,85],
[57,49,0,65,56,62,50,74],
[73,60,65,0,64,48,58,75],
[74,59,74,66,0,60,67,74],
[75,69,68,82,70,0,63,74],
[72,61,80,72,63,67,0,84],
[62,45,56,55,56,56,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,55,57,59,56,37,51],
[66,0,65,62,44,63,62,62],
[75,65,0,73,55,44,59,51],
[73,68,57,0,63,64,65,52],
[71,86,75,67,0,57,83,71],
[74,67,86,66,73,0,55,69],
[93,68,71,65,47,75,0,67],
[79,68,79,78,59,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,76,69,68,62,72],
[64,0,62,76,56,61,63,74],
[64,68,0,75,60,65,64,67],
[54,54,55,0,55,61,57,66],
[61,74,70,75,0,75,67,67],
[62,69,65,69,55,0,63,76],
[68,67,66,73,63,67,0,70],
[58,56,63,64,63,54,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,101,93,52,60,94],
[62,0,57,82,82,65,69,99],
[64,73,0,98,65,82,63,93],
[29,48,32,0,83,36,35,36],
[37,48,65,47,0,64,44,64],
[78,65,48,94,66,0,69,81],
[70,61,67,95,86,61,0,87],
[36,31,37,94,66,49,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,36,39,57,60,60,52],
[69,0,57,72,87,70,79,100],
[94,73,0,80,76,60,94,87],
[91,58,50,0,89,65,79,80],
[73,43,54,41,0,55,83,76],
[70,60,70,65,75,0,76,76],
[70,51,36,51,47,54,0,56],
[78,30,43,50,54,54,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,60,61,73,65,74],
[70,0,66,61,64,73,69,69],
[69,64,0,68,82,80,65,73],
[70,69,62,0,74,73,69,67],
[69,66,48,56,0,72,53,68],
[57,57,50,57,58,0,51,57],
[65,61,65,61,77,79,0,72],
[56,61,57,63,62,73,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,63,72,59,71,56],
[68,0,58,77,80,68,62,42],
[64,72,0,93,84,59,81,70],
[67,53,37,0,73,45,51,53],
[58,50,46,57,0,60,54,50],
[71,62,71,85,70,0,77,49],
[59,68,49,79,76,53,0,65],
[74,88,60,77,80,81,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,71,63,68,91,75],
[62,0,64,71,54,67,69,63],
[67,66,0,61,75,52,85,61],
[59,59,69,0,56,60,74,66],
[67,76,55,74,0,66,81,65],
[62,63,78,70,64,0,85,67],
[39,61,45,56,49,45,0,58],
[55,67,69,64,65,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,66,69,74,62,67],
[57,0,76,73,75,76,73,73],
[64,54,0,67,69,70,66,75],
[64,57,63,0,68,74,75,70],
[61,55,61,62,0,68,66,67],
[56,54,60,56,62,0,56,72],
[68,57,64,55,64,74,0,73],
[63,57,55,60,63,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,79,70,73,73,76,76],
[66,0,70,69,70,62,67,75],
[51,60,0,58,58,66,59,58],
[60,61,72,0,63,63,68,60],
[57,60,72,67,0,69,64,63],
[57,68,64,67,61,0,62,58],
[54,63,71,62,66,68,0,68],
[54,55,72,70,67,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,59,62,64,64,67],
[57,0,59,59,60,55,56,59],
[64,71,0,66,62,65,73,71],
[71,71,64,0,65,68,63,63],
[68,70,68,65,0,69,64,63],
[66,75,65,62,61,0,65,57],
[66,74,57,67,66,65,0,65],
[63,71,59,67,67,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,50,53,52,65,59,68],
[74,0,66,66,59,76,67,70],
[80,64,0,80,67,76,67,71],
[77,64,50,0,57,70,73,65],
[78,71,63,73,0,72,76,71],
[65,54,54,60,58,0,64,60],
[71,63,63,57,54,66,0,59],
[62,60,59,65,59,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,73,74,80,69,57],
[59,0,67,68,66,59,65,71],
[59,63,0,60,69,71,57,63],
[57,62,70,0,77,62,67,68],
[56,64,61,53,0,58,63,67],
[50,71,59,68,72,0,72,53],
[61,65,73,63,67,58,0,55],
[73,59,67,62,63,77,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,67,71,67,68,59],
[67,0,61,66,64,72,74,67],
[72,69,0,64,70,71,79,60],
[63,64,66,0,70,68,79,65],
[59,66,60,60,0,67,68,65],
[63,58,59,62,63,0,65,63],
[62,56,51,51,62,65,0,55],
[71,63,70,65,65,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,90,18,73,87,42,76],
[72,0,90,48,80,62,48,62],
[40,40,0,40,40,45,17,102],
[112,82,90,0,120,103,65,93],
[57,50,90,10,0,48,34,72],
[43,68,85,27,82,0,42,71],
[88,82,113,65,96,88,0,85],
[54,68,28,37,58,59,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,76,64,65,66,64],
[62,0,63,88,73,67,76,67],
[73,67,0,82,58,84,78,60],
[54,42,48,0,54,57,54,54],
[66,57,72,76,0,71,69,62],
[65,63,46,73,59,0,68,62],
[64,54,52,76,61,62,0,61],
[66,63,70,76,68,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,55,95,77,82,50,61],
[62,0,65,67,43,73,83,66],
[75,65,0,79,38,88,57,71],
[35,63,51,0,47,78,45,71],
[53,87,92,83,0,78,60,43],
[48,57,42,52,52,0,48,44],
[80,47,73,85,70,82,0,62],
[69,64,59,59,87,86,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,56,65,70,68,74,75],
[52,0,62,62,66,53,62,67],
[74,68,0,69,75,65,75,68],
[65,68,61,0,61,67,68,72],
[60,64,55,69,0,50,67,60],
[62,77,65,63,80,0,75,72],
[56,68,55,62,63,55,0,60],
[55,63,62,58,70,58,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,70,69,61,65,61],
[73,0,69,76,70,65,63,65],
[64,61,0,71,62,59,56,55],
[60,54,59,0,65,57,57,54],
[61,60,68,65,0,57,59,52],
[69,65,71,73,73,0,63,56],
[65,67,74,73,71,67,0,62],
[69,65,75,76,78,74,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,64,53,70,58,53],
[70,0,64,69,68,77,70,61],
[68,66,0,63,62,74,59,56],
[66,61,67,0,64,76,63,64],
[77,62,68,66,0,76,69,68],
[60,53,56,54,54,0,54,60],
[72,60,71,67,61,76,0,69],
[77,69,74,66,62,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,55,49,55,62,51],
[65,0,73,73,63,60,57,67],
[59,57,0,64,69,67,55,50],
[75,57,66,0,64,60,70,53],
[81,67,61,66,0,55,58,59],
[75,70,63,70,75,0,60,58],
[68,73,75,60,72,70,0,48],
[79,63,80,77,71,72,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,61,48,61,61,64],
[76,0,73,75,74,72,63,87],
[75,57,0,67,56,63,57,83],
[69,55,63,0,64,64,59,75],
[82,56,74,66,0,77,72,69],
[69,58,67,66,53,0,69,71],
[69,67,73,71,58,61,0,80],
[66,43,47,55,61,59,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,75,69,61,66,71],
[66,0,67,76,63,75,66,72],
[69,63,0,75,60,57,67,77],
[55,54,55,0,58,61,58,63],
[61,67,70,72,0,65,69,69],
[69,55,73,69,65,0,69,75],
[64,64,63,72,61,61,0,76],
[59,58,53,67,61,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,69,78,67,75,64],
[64,0,63,70,74,63,62,54],
[58,67,0,74,67,65,72,55],
[61,60,56,0,73,68,65,58],
[52,56,63,57,0,57,60,56],
[63,67,65,62,73,0,66,63],
[55,68,58,65,70,64,0,67],
[66,76,75,72,74,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,63,63,72,76,72],
[64,0,72,67,70,70,73,67],
[60,58,0,65,61,72,66,70],
[67,63,65,0,60,62,67,67],
[67,60,69,70,0,63,67,61],
[58,60,58,68,67,0,68,69],
[54,57,64,63,63,62,0,61],
[58,63,60,63,69,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,78,67,73,69,63,63],
[65,0,66,71,70,67,65,72],
[52,64,0,65,65,71,59,59],
[63,59,65,0,64,64,61,59],
[57,60,65,66,0,70,56,66],
[61,63,59,66,60,0,55,68],
[67,65,71,69,74,75,0,69],
[67,58,71,71,64,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,73,64,60,62,62,62],
[69,0,79,64,72,65,73,71],
[57,51,0,61,60,62,66,64],
[66,66,69,0,67,65,69,57],
[70,58,70,63,0,67,64,64],
[68,65,68,65,63,0,70,74],
[68,57,64,61,66,60,0,62],
[68,59,66,73,66,56,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,59,47,21,42,53,57],
[75,0,71,63,38,55,60,60],
[71,59,0,68,68,76,53,68],
[83,67,62,0,47,70,50,43],
[109,92,62,83,0,78,71,85],
[88,75,54,60,52,0,65,68],
[77,70,77,80,59,65,0,66],
[73,70,62,87,45,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,60,63,69,73,59,71],
[61,0,53,64,71,66,56,66],
[70,77,0,70,78,78,65,76],
[67,66,60,0,68,72,67,62],
[61,59,52,62,0,68,58,67],
[57,64,52,58,62,0,55,62],
[71,74,65,63,72,75,0,70],
[59,64,54,68,63,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,57,45,52,55,84,62],
[50,0,57,68,42,61,67,42],
[73,73,0,67,58,66,81,52],
[85,62,63,0,45,56,66,69],
[78,88,72,85,0,62,86,83],
[75,69,64,74,68,0,91,58],
[46,63,49,64,44,39,0,48],
[68,88,78,61,47,72,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,69,67,80,69,55],
[60,0,68,74,57,66,61,48],
[59,62,0,73,67,64,64,58],
[61,56,57,0,62,62,74,53],
[63,73,63,68,0,65,69,56],
[50,64,66,68,65,0,67,55],
[61,69,66,56,61,63,0,71],
[75,82,72,77,74,75,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,57,50,72,62,63,65],
[55,0,49,48,58,56,53,54],
[73,81,0,65,75,72,70,66],
[80,82,65,0,87,75,75,72],
[58,72,55,43,0,64,53,59],
[68,74,58,55,66,0,61,68],
[67,77,60,55,77,69,0,65],
[65,76,64,58,71,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,67,72,70,61,65,60],
[60,0,57,65,64,61,68,63],
[63,73,0,74,66,67,68,75],
[58,65,56,0,63,60,64,63],
[60,66,64,67,0,67,68,64],
[69,69,63,70,63,0,70,60],
[65,62,62,66,62,60,0,56],
[70,67,55,67,66,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,74,64,73,62,68,69],
[53,0,68,64,69,62,65,61],
[56,62,0,57,64,66,60,61],
[66,66,73,0,64,65,62,72],
[57,61,66,66,0,57,63,66],
[68,68,64,65,73,0,62,71],
[62,65,70,68,67,68,0,59],
[61,69,69,58,64,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,91,64,61,60,74],
[54,0,43,69,56,48,60,40],
[56,87,0,74,70,75,72,62],
[39,61,56,0,59,48,57,44],
[66,74,60,71,0,73,70,81],
[69,82,55,82,57,0,67,62],
[70,70,58,73,60,63,0,49],
[56,90,68,86,49,68,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,77,56,59,87,60,71],
[52,0,74,77,60,71,82,69],
[53,56,0,52,63,66,50,61],
[74,53,78,0,67,88,72,77],
[71,70,67,63,0,72,59,56],
[43,59,64,42,58,0,50,54],
[70,48,80,58,71,80,0,79],
[59,61,69,53,74,76,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,76,67,59,64,62],
[63,0,59,64,59,61,55,60],
[65,71,0,68,68,67,64,69],
[54,66,62,0,62,60,61,65],
[63,71,62,68,0,57,68,68],
[71,69,63,70,73,0,71,73],
[66,75,66,69,62,59,0,69],
[68,70,61,65,62,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,66,54,52,64,55,81],
[45,0,51,33,61,36,60,45],
[64,79,0,30,53,70,63,61],
[76,97,100,0,54,99,68,60],
[78,69,77,76,0,72,60,58],
[66,94,60,31,58,0,52,53],
[75,70,67,62,70,78,0,77],
[49,85,69,70,72,77,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,54,55,60,63,62,66],
[60,0,66,58,56,67,74,54],
[76,64,0,65,65,69,72,70],
[75,72,65,0,65,63,69,64],
[70,74,65,65,0,82,70,72],
[67,63,61,67,48,0,60,53],
[68,56,58,61,60,70,0,64],
[64,76,60,66,58,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,61,57,77,68,73,75],
[44,0,62,48,70,58,52,46],
[69,68,0,61,73,72,70,61],
[73,82,69,0,76,68,71,60],
[53,60,57,54,0,58,62,53],
[62,72,58,62,72,0,62,55],
[57,78,60,59,68,68,0,64],
[55,84,69,70,77,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,72,70,67,68,61],
[55,0,66,60,65,53,52,58],
[57,64,0,64,62,52,51,61],
[58,70,66,0,61,51,56,60],
[60,65,68,69,0,57,57,63],
[63,77,78,79,73,0,65,67],
[62,78,79,74,73,65,0,63],
[69,72,69,70,67,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,59,65,65,84,76],
[63,0,77,55,74,56,61,80],
[68,53,0,56,62,57,75,78],
[71,75,74,0,68,64,84,70],
[65,56,68,62,0,49,72,65],
[65,74,73,66,81,0,74,87],
[46,69,55,46,58,56,0,72],
[54,50,52,60,65,43,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,62,51,54,43,50],
[71,0,65,69,48,66,51,50],
[57,65,0,72,58,54,47,58],
[68,61,58,0,59,70,54,56],
[79,82,72,71,0,67,62,68],
[76,64,76,60,63,0,72,49],
[87,79,83,76,68,58,0,57],
[80,80,72,74,62,81,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,79,61,65,60,63],
[64,0,66,62,48,60,46,55],
[59,64,0,69,60,56,52,71],
[51,68,61,0,60,56,60,58],
[69,82,70,70,0,67,67,60],
[65,70,74,74,63,0,60,54],
[70,84,78,70,63,70,0,67],
[67,75,59,72,70,76,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,94,54,82,66,49,94,61],
[36,0,66,58,40,27,75,60],
[76,64,0,89,40,47,65,72],
[48,72,41,0,48,49,44,49],
[64,90,90,82,0,77,70,75],
[81,103,83,81,53,0,91,75],
[36,55,65,86,60,39,0,67],
[69,70,58,81,55,55,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,63,96,72,91,53,67],
[60,0,55,87,81,69,63,71],
[67,75,0,79,65,45,74,56],
[34,43,51,0,62,45,64,68],
[58,49,65,68,0,62,44,68],
[39,61,85,85,68,0,65,84],
[77,67,56,66,86,65,0,74],
[63,59,74,62,62,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,82,69,62,67,76,83],
[65,0,76,49,92,73,83,106],
[48,54,0,50,51,53,65,57],
[61,81,80,0,89,69,100,103],
[68,38,79,41,0,65,72,73],
[63,57,77,61,65,0,91,87],
[54,47,65,30,58,39,0,57],
[47,24,73,27,57,43,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,71,66,68,70,68],
[71,0,65,61,59,72,64,70],
[63,65,0,77,53,63,69,73],
[59,69,53,0,51,70,65,64],
[64,71,77,79,0,79,76,82],
[62,58,67,60,51,0,68,73],
[60,66,61,65,54,62,0,67],
[62,60,57,66,48,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,71,58,72,79,81],
[55,0,60,66,58,74,76,70],
[59,70,0,67,74,67,74,78],
[59,64,63,0,55,63,71,70],
[72,72,56,75,0,68,80,79],
[58,56,63,67,62,0,76,77],
[51,54,56,59,50,54,0,61],
[49,60,52,60,51,53,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,70,80,67,64,81],
[60,0,69,70,65,62,68,73],
[56,61,0,57,57,66,70,61],
[60,60,73,0,68,60,71,64],
[50,65,73,62,0,62,72,64],
[63,68,64,70,68,0,66,63],
[66,62,60,59,58,64,0,74],
[49,57,69,66,66,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,70,59,61,68,58],
[61,0,62,65,56,57,64,55],
[64,68,0,66,62,67,71,69],
[60,65,64,0,54,59,77,55],
[71,74,68,76,0,65,72,62],
[69,73,63,71,65,0,71,66],
[62,66,59,53,58,59,0,58],
[72,75,61,75,68,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,64,64,65,65,70],
[62,0,78,68,72,66,69,72],
[57,52,0,67,55,54,68,62],
[66,62,63,0,59,69,66,66],
[66,58,75,71,0,65,70,67],
[65,64,76,61,65,0,59,70],
[65,61,62,64,60,71,0,62],
[60,58,68,64,63,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,64,60,62,73,62],
[64,0,65,59,57,58,69,64],
[63,65,0,56,63,73,70,65],
[66,71,74,0,76,66,77,64],
[70,73,67,54,0,66,69,63],
[68,72,57,64,64,0,67,68],
[57,61,60,53,61,63,0,58],
[68,66,65,66,67,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,86,67,76,78,80],
[65,0,71,82,75,50,79,84],
[53,59,0,81,59,63,73,64],
[44,48,49,0,52,40,54,50],
[63,55,71,78,0,42,67,76],
[54,80,67,90,88,0,86,69],
[52,51,57,76,63,44,0,54],
[50,46,66,80,54,61,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,82,82,59,67,59,59],
[77,0,62,81,70,57,75,62],
[48,68,0,82,71,74,57,51],
[48,49,48,0,50,82,62,39],
[71,60,59,80,0,94,65,77],
[63,73,56,48,36,0,44,42],
[71,55,73,68,65,86,0,60],
[71,68,79,91,53,88,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,64,55,61,57,53],
[64,0,62,61,54,66,70,53],
[72,68,0,66,82,67,62,66],
[66,69,64,0,63,68,55,70],
[75,76,48,67,0,69,58,66],
[69,64,63,62,61,0,55,48],
[73,60,68,75,72,75,0,63],
[77,77,64,60,64,82,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,63,65,64,63,65],
[64,0,76,64,61,62,68,78],
[61,54,0,52,57,57,59,66],
[67,66,78,0,63,64,67,82],
[65,69,73,67,0,61,68,64],
[66,68,73,66,69,0,63,67],
[67,62,71,63,62,67,0,62],
[65,52,64,48,66,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,67,66,65,69,60],
[65,0,63,59,57,68,63,61],
[72,67,0,69,70,68,77,64],
[63,71,61,0,66,51,67,59],
[64,73,60,64,0,53,71,56],
[65,62,62,79,77,0,74,66],
[61,67,53,63,59,56,0,54],
[70,69,66,71,74,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,66,58,61,60,61],
[62,0,63,60,57,61,66,59],
[55,67,0,63,56,64,69,62],
[64,70,67,0,63,64,67,62],
[72,73,74,67,0,75,67,64],
[69,69,66,66,55,0,69,70],
[70,64,61,63,63,61,0,63],
[69,71,68,68,66,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,54,49,53,47,55],
[65,0,61,62,54,64,46,59],
[73,69,0,63,65,63,67,67],
[76,68,67,0,57,65,62,71],
[81,76,65,73,0,76,59,70],
[77,66,67,65,54,0,64,63],
[83,84,63,68,71,66,0,73],
[75,71,63,59,60,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,82,76,65,63,76],
[64,0,70,67,64,59,67,74],
[54,60,0,63,62,51,65,61],
[48,63,67,0,53,50,65,54],
[54,66,68,77,0,56,62,68],
[65,71,79,80,74,0,73,64],
[67,63,65,65,68,57,0,73],
[54,56,69,76,62,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,68,67,71,65,58],
[60,0,58,60,60,55,59,54],
[70,72,0,66,66,66,64,72],
[62,70,64,0,61,69,63,57],
[63,70,64,69,0,73,66,67],
[59,75,64,61,57,0,63,64],
[65,71,66,67,64,67,0,67],
[72,76,58,73,63,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,55,54,64,69,64,66],
[62,0,68,55,60,70,55,70],
[75,62,0,79,62,62,62,69],
[76,75,51,0,68,57,77,71],
[66,70,68,62,0,75,67,75],
[61,60,68,73,55,0,61,75],
[66,75,68,53,63,69,0,71],
[64,60,61,59,55,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,82,66,64,77,67,66],
[68,0,58,64,67,54,45,63],
[48,72,0,64,64,65,51,52],
[64,66,66,0,63,51,75,51],
[66,63,66,67,0,59,54,65],
[53,76,65,79,71,0,62,51],
[63,85,79,55,76,68,0,57],
[64,67,78,79,65,79,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,67,60,68,67,68],
[61,0,67,61,53,63,59,61],
[61,63,0,60,54,68,58,60],
[63,69,70,0,66,66,69,64],
[70,77,76,64,0,84,75,71],
[62,67,62,64,46,0,63,71],
[63,71,72,61,55,67,0,67],
[62,69,70,66,59,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,58,64,60,78,58,76],
[64,0,58,65,56,69,63,73],
[72,72,0,71,62,69,60,81],
[66,65,59,0,68,77,64,70],
[70,74,68,62,0,69,66,66],
[52,61,61,53,61,0,67,73],
[72,67,70,66,64,63,0,83],
[54,57,49,60,64,57,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,67,91,73,57,52],
[61,0,62,48,65,70,63,44],
[63,68,0,80,93,68,65,80],
[63,82,50,0,77,60,68,50],
[39,65,37,53,0,62,38,56],
[57,60,62,70,68,0,69,68],
[73,67,65,62,92,61,0,64],
[78,86,50,80,74,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,62,70,66,70,63],
[65,0,65,59,70,58,63,58],
[64,65,0,70,73,69,66,62],
[68,71,60,0,68,68,72,67],
[60,60,57,62,0,57,64,61],
[64,72,61,62,73,0,67,68],
[60,67,64,58,66,63,0,64],
[67,72,68,63,69,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,61,74,70,71,69,60],
[50,0,46,57,48,53,52,47],
[69,84,0,74,75,70,64,63],
[56,73,56,0,64,57,55,55],
[60,82,55,66,0,71,69,64],
[59,77,60,73,59,0,55,65],
[61,78,66,75,61,75,0,76],
[70,83,67,75,66,65,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,59,74,72,67,71],
[61,0,57,62,68,74,61,61],
[66,73,0,60,67,70,59,57],
[71,68,70,0,65,80,66,56],
[56,62,63,65,0,77,63,62],
[58,56,60,50,53,0,59,49],
[63,69,71,64,67,71,0,60],
[59,69,73,74,68,81,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,83,72,80,55,100],
[73,0,104,71,91,54,55,109],
[68,26,0,41,75,71,55,117],
[47,59,89,0,75,71,73,117],
[58,39,55,55,0,47,61,99],
[50,76,59,59,83,0,48,82],
[75,75,75,57,69,82,0,94],
[30,21,13,13,31,48,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,59,53,61,28,42,86],
[44,0,71,54,54,40,54,79],
[71,59,0,38,86,62,53,87],
[77,76,92,0,61,79,42,104],
[69,76,44,69,0,46,59,118],
[102,90,68,51,84,0,79,129],
[88,76,77,88,71,51,0,116],
[44,51,43,26,12,1,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,68,68,63,67,63],
[69,0,63,70,66,60,69,62],
[59,67,0,72,72,60,71,63],
[62,60,58,0,69,65,66,67],
[62,64,58,61,0,52,61,68],
[67,70,70,65,78,0,67,68],
[63,61,59,64,69,63,0,66],
[67,68,67,63,62,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,63,58,67,56,55],
[74,0,47,57,64,55,46,52],
[72,83,0,74,74,73,62,70],
[67,73,56,0,72,73,49,64],
[72,66,56,58,0,57,57,59],
[63,75,57,57,73,0,66,58],
[74,84,68,81,73,64,0,69],
[75,78,60,66,71,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,63,103,106,80,36,58],
[41,0,58,86,77,83,44,60],
[67,72,0,102,90,78,70,61],
[27,44,28,0,75,38,42,47],
[24,53,40,55,0,40,32,56],
[50,47,52,92,90,0,41,68],
[94,86,60,88,98,89,0,59],
[72,70,69,83,74,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,65,66,72,67,62],
[62,0,61,65,61,71,62,54],
[63,69,0,62,68,71,67,66],
[65,65,68,0,67,63,59,65],
[64,69,62,63,0,75,66,63],
[58,59,59,67,55,0,61,50],
[63,68,63,71,64,69,0,57],
[68,76,64,65,67,80,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,54,72,78,62,35,78],
[102,0,96,106,106,82,63,96],
[76,34,0,56,62,73,44,44],
[58,24,74,0,69,53,24,24],
[52,24,68,61,0,86,38,57],
[68,48,57,77,44,0,20,58],
[95,67,86,106,92,110,0,53],
[52,34,86,106,73,72,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,93,69,80,99,92,63],
[46,0,36,34,41,32,55,30],
[37,94,0,48,63,58,73,52],
[61,96,82,0,87,79,76,82],
[50,89,67,43,0,66,75,58],
[31,98,72,51,64,0,71,53],
[38,75,57,54,55,59,0,57],
[67,100,78,48,72,77,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,84,73,55,81,81,77],
[50,0,48,27,36,48,40,49],
[46,82,0,48,43,61,71,53],
[57,103,82,0,53,73,73,73],
[75,94,87,77,0,97,65,82],
[49,82,69,57,33,0,58,49],
[49,90,59,57,65,72,0,54],
[53,81,77,57,48,81,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,69,81,75,63,71],
[61,0,54,62,70,70,64,69],
[68,76,0,64,77,65,65,71],
[61,68,66,0,76,71,69,75],
[49,60,53,54,0,59,55,65],
[55,60,65,59,71,0,56,69],
[67,66,65,61,75,74,0,67],
[59,61,59,55,65,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,36,72,53,58,44],
[58,0,91,65,108,52,71,60],
[55,39,0,66,93,51,72,58],
[94,65,64,0,82,74,81,54],
[58,22,37,48,0,39,38,61],
[77,78,79,56,91,0,54,65],
[72,59,58,49,92,76,0,75],
[86,70,72,76,69,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,76,72,75,62,62,70],
[58,0,67,60,78,62,54,74],
[54,63,0,64,75,55,58,66],
[58,70,66,0,74,65,68,66],
[55,52,55,56,0,50,48,72],
[68,68,75,65,80,0,62,73],
[68,76,72,62,82,68,0,74],
[60,56,64,64,58,57,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,85,65,73,66,67,74],
[49,0,68,62,68,51,57,64],
[45,62,0,67,64,56,63,66],
[65,68,63,0,66,62,59,66],
[57,62,66,64,0,57,59,71],
[64,79,74,68,73,0,69,68],
[63,73,67,71,71,61,0,70],
[56,66,64,64,59,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,68,71,70,67,56],
[56,0,52,56,68,59,48,58],
[65,78,0,64,71,65,71,59],
[62,74,66,0,68,68,66,58],
[59,62,59,62,0,53,65,67],
[60,71,65,62,77,0,60,65],
[63,82,59,64,65,70,0,53],
[74,72,71,72,63,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,58,71,64,56,43],
[75,0,59,60,79,56,70,58],
[73,71,0,63,82,65,56,61],
[72,70,67,0,86,63,74,67],
[59,51,48,44,0,50,51,50],
[66,74,65,67,80,0,64,58],
[74,60,74,56,79,66,0,59],
[87,72,69,63,80,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,58,63,57,62,62],
[67,0,63,60,56,60,66,54],
[69,67,0,68,69,67,69,65],
[72,70,62,0,66,65,59,60],
[67,74,61,64,0,65,56,65],
[73,70,63,65,65,0,61,62],
[68,64,61,71,74,69,0,60],
[68,76,65,70,65,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,66,72,79,81,61],
[62,0,62,59,63,67,65,63],
[61,68,0,61,65,69,77,67],
[64,71,69,0,72,65,74,67],
[58,67,65,58,0,62,72,59],
[51,63,61,65,68,0,68,60],
[49,65,53,56,58,62,0,61],
[69,67,63,63,71,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,50,67,71,67,51],
[59,0,63,63,78,65,65,66],
[65,67,0,66,74,73,66,64],
[80,67,64,0,75,78,71,67],
[63,52,56,55,0,64,56,48],
[59,65,57,52,66,0,59,64],
[63,65,64,59,74,71,0,64],
[79,64,66,63,82,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,54,62,53,49,56,61],
[70,0,68,69,70,62,59,73],
[76,62,0,72,68,66,62,66],
[68,61,58,0,64,60,57,71],
[77,60,62,66,0,60,58,73],
[81,68,64,70,70,0,70,74],
[74,71,68,73,72,60,0,67],
[69,57,64,59,57,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,61,64,79,65,73],
[62,0,74,59,67,75,66,80],
[60,56,0,61,57,64,75,80],
[69,71,69,0,74,63,59,73],
[66,63,73,56,0,66,67,72],
[51,55,66,67,64,0,65,71],
[65,64,55,71,63,65,0,82],
[57,50,50,57,58,59,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,54,47,62,59,45],
[67,0,70,61,48,75,59,51],
[66,60,0,46,34,74,62,53],
[76,69,84,0,63,62,65,72],
[83,82,96,67,0,88,73,52],
[68,55,56,68,42,0,57,44],
[71,71,68,65,57,73,0,54],
[85,79,77,58,78,86,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,60,71,83,52,71,87],
[76,0,75,56,67,55,57,60],
[70,55,0,52,69,34,52,62],
[59,74,78,0,85,68,66,74],
[47,63,61,45,0,46,70,56],
[78,75,96,62,84,0,72,98],
[59,73,78,64,60,58,0,65],
[43,70,68,56,74,32,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,77,67,70,64,70,63],
[70,0,71,53,65,64,65,66],
[53,59,0,56,68,70,64,54],
[63,77,74,0,84,82,80,72],
[60,65,62,46,0,68,67,62],
[66,66,60,48,62,0,67,66],
[60,65,66,50,63,63,0,65],
[67,64,76,58,68,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,59,75,73,68,66,68],
[51,0,51,62,56,48,69,68],
[71,79,0,77,56,70,75,73],
[55,68,53,0,61,61,64,53],
[57,74,74,69,0,61,69,61],
[62,82,60,69,69,0,70,74],
[64,61,55,66,61,60,0,68],
[62,62,57,77,69,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,65,69,72,74,68],
[63,0,61,69,54,60,60,58],
[58,69,0,68,57,51,71,62],
[65,61,62,0,55,58,66,53],
[61,76,73,75,0,62,84,75],
[58,70,79,72,68,0,73,77],
[56,70,59,64,46,57,0,67],
[62,72,68,77,55,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,67,80,70,67,60],
[65,0,77,70,90,68,73,78],
[72,53,0,73,75,65,73,62],
[63,60,57,0,78,63,53,49],
[50,40,55,52,0,58,54,57],
[60,62,65,67,72,0,56,60],
[63,57,57,77,76,74,0,62],
[70,52,68,81,73,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,78,77,74,62,63,54],
[62,0,77,60,57,68,58,60],
[52,53,0,50,63,66,49,58],
[53,70,80,0,63,74,51,59],
[56,73,67,67,0,78,59,71],
[68,62,64,56,52,0,57,62],
[67,72,81,79,71,73,0,60],
[76,70,72,71,59,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,47,57,52,49,53,59],
[64,0,51,66,60,53,47,58],
[83,79,0,67,65,70,66,74],
[73,64,63,0,58,50,65,68],
[78,70,65,72,0,64,72,69],
[81,77,60,80,66,0,66,75],
[77,83,64,65,58,64,0,62],
[71,72,56,62,61,55,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,69,85,89,81,62,93],
[51,0,39,73,55,58,47,54],
[61,91,0,76,74,65,64,87],
[45,57,54,0,78,70,79,91],
[41,75,56,52,0,63,63,60],
[49,72,65,60,67,0,81,81],
[68,83,66,51,67,49,0,69],
[37,76,43,39,70,49,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,48,59,43,44,34,29],
[85,0,83,77,62,87,60,63],
[82,47,0,72,47,58,41,54],
[71,53,58,0,52,49,51,59],
[87,68,83,78,0,75,62,62],
[86,43,72,81,55,0,51,68],
[96,70,89,79,68,79,0,60],
[101,67,76,71,68,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,38,63,89,39,48,73],
[60,0,81,81,112,84,73,83],
[92,49,0,49,79,60,75,93],
[67,49,81,0,99,50,77,88],
[41,18,51,31,0,29,41,90],
[91,46,70,80,101,0,84,90],
[82,57,55,53,89,46,0,57],
[57,47,37,42,40,40,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,57,68,68,74,72],
[67,0,55,62,71,65,59,63],
[63,75,0,73,66,60,70,75],
[73,68,57,0,74,65,74,63],
[62,59,64,56,0,68,67,68],
[62,65,70,65,62,0,77,67],
[56,71,60,56,63,53,0,64],
[58,67,55,67,62,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,59,61,60,66,57],
[70,0,69,62,63,66,70,59],
[70,61,0,62,70,67,75,65],
[71,68,68,0,58,67,71,53],
[69,67,60,72,0,68,69,62],
[70,64,63,63,62,0,71,55],
[64,60,55,59,61,59,0,54],
[73,71,65,77,68,75,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,69,75,70,78,62],
[63,0,72,71,69,69,77,62],
[57,58,0,68,70,67,63,54],
[61,59,62,0,77,67,69,68],
[55,61,60,53,0,57,60,47],
[60,61,63,63,73,0,77,66],
[52,53,67,61,70,53,0,51],
[68,68,76,62,83,64,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,60,63,62,67,66],
[71,0,68,62,60,65,70,65],
[70,62,0,58,58,61,77,64],
[70,68,72,0,66,65,76,60],
[67,70,72,64,0,68,75,73],
[68,65,69,65,62,0,74,73],
[63,60,53,54,55,56,0,66],
[64,65,66,70,57,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,66,71,67,62,61],
[65,0,70,68,66,62,62,70],
[67,60,0,64,74,62,59,65],
[64,62,66,0,65,54,56,62],
[59,64,56,65,0,58,65,65],
[63,68,68,76,72,0,70,67],
[68,68,71,74,65,60,0,69],
[69,60,65,68,65,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,6,65,75,61,65],
[65,0,29,34,29,65,28,97],
[65,101,0,42,65,74,33,69],
[124,96,88,0,87,69,55,101],
[65,101,65,43,0,42,92,69],
[55,65,56,61,88,0,55,60],
[69,102,97,75,38,75,0,101],
[65,33,61,29,61,70,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,69,76,66,59,63],
[67,0,69,75,68,70,61,57],
[66,61,0,79,65,59,72,59],
[61,55,51,0,55,49,56,56],
[54,62,65,75,0,52,69,57],
[64,60,71,81,78,0,81,69],
[71,69,58,74,61,49,0,64],
[67,73,71,74,73,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,66,66,64,59,65,70],
[54,0,52,62,60,46,62,66],
[64,78,0,65,72,75,65,76],
[64,68,65,0,59,56,62,64],
[66,70,58,71,0,69,69,68],
[71,84,55,74,61,0,75,69],
[65,68,65,68,61,55,0,71],
[60,64,54,66,62,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,70,73,70,64,71],
[58,0,63,63,61,65,62,55],
[64,67,0,68,66,76,65,65],
[60,67,62,0,69,73,68,62],
[57,69,64,61,0,71,60,63],
[60,65,54,57,59,0,56,56],
[66,68,65,62,70,74,0,59],
[59,75,65,68,67,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,95,88,87,54,49,30],
[35,0,48,73,72,40,67,23],
[35,82,0,73,72,54,67,23],
[42,57,57,0,74,79,74,25],
[43,58,58,56,0,22,60,48],
[76,90,76,51,108,0,92,43],
[81,63,63,56,70,38,0,81],
[100,107,107,105,82,87,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,64,66,75,72,64],
[56,0,58,52,56,68,57,69],
[65,72,0,73,75,69,72,71],
[66,78,57,0,69,77,70,67],
[64,74,55,61,0,71,71,69],
[55,62,61,53,59,0,63,66],
[58,73,58,60,59,67,0,72],
[66,61,59,63,61,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,59,58,57,49,53,65],
[83,0,64,73,68,63,71,66],
[71,66,0,74,59,58,49,62],
[72,57,56,0,51,59,56,57],
[73,62,71,79,0,65,60,61],
[81,67,72,71,65,0,77,72],
[77,59,81,74,70,53,0,59],
[65,64,68,73,69,58,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,59,44,48,48,44,49],
[89,0,74,69,88,91,76,62],
[71,56,0,53,74,50,61,57],
[86,61,77,0,71,81,73,72],
[82,42,56,59,0,67,59,52],
[82,39,80,49,63,0,67,47],
[86,54,69,57,71,63,0,62],
[81,68,73,58,78,83,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,65,67,63,59,61],
[62,0,68,68,70,72,63,61],
[71,62,0,57,64,63,57,58],
[65,62,73,0,66,68,61,62],
[63,60,66,64,0,65,51,56],
[67,58,67,62,65,0,66,63],
[71,67,73,69,79,64,0,66],
[69,69,72,68,74,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,84,71,67,64,77,63],
[53,0,80,76,70,73,84,64],
[46,50,0,57,62,54,67,44],
[59,54,73,0,64,60,67,63],
[63,60,68,66,0,59,69,45],
[66,57,76,70,71,0,75,67],
[53,46,63,63,61,55,0,49],
[67,66,86,67,85,63,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,75,58,69,57,61],
[64,0,42,68,65,69,56,57],
[73,88,0,77,58,74,71,75],
[55,62,53,0,61,63,59,71],
[72,65,72,69,0,79,67,74],
[61,61,56,67,51,0,73,72],
[73,74,59,71,63,57,0,62],
[69,73,55,59,56,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,65,63,68,70,72,70],
[80,0,64,67,72,66,61,53],
[65,66,0,66,62,77,74,66],
[67,63,64,0,74,66,66,56],
[62,58,68,56,0,69,66,57],
[60,64,53,64,61,0,58,44],
[58,69,56,64,64,72,0,61],
[60,77,64,74,73,86,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,58,60,63,57,66],
[61,0,67,69,58,63,58,62],
[74,63,0,69,60,61,66,75],
[72,61,61,0,57,70,62,64],
[70,72,70,73,0,68,64,76],
[67,67,69,60,62,0,67,67],
[73,72,64,68,66,63,0,69],
[64,68,55,66,54,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,53,59,61,62,52,58],
[71,0,58,73,65,67,66,57],
[77,72,0,74,69,71,64,71],
[71,57,56,0,64,65,66,48],
[69,65,61,66,0,64,63,58],
[68,63,59,65,66,0,60,61],
[78,64,66,64,67,70,0,57],
[72,73,59,82,72,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,70,67,66,69,74],
[62,0,60,64,60,53,62,58],
[68,70,0,77,72,61,71,65],
[60,66,53,0,55,56,66,65],
[63,70,58,75,0,63,70,71],
[64,77,69,74,67,0,71,70],
[61,68,59,64,60,59,0,71],
[56,72,65,65,59,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,70,81,58,65,76,61],
[77,0,77,81,71,76,88,63],
[60,53,0,77,58,62,66,52],
[49,49,53,0,50,51,57,43],
[72,59,72,80,0,70,74,65],
[65,54,68,79,60,0,65,56],
[54,42,64,73,56,65,0,56],
[69,67,78,87,65,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,65,65,72,66,58],
[71,0,71,69,72,64,75,71],
[64,59,0,63,59,61,60,51],
[65,61,67,0,59,69,59,55],
[65,58,71,71,0,67,64,51],
[58,66,69,61,63,0,57,62],
[64,55,70,71,66,73,0,65],
[72,59,79,75,79,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,63,58,53,68,62,60],
[77,0,77,65,65,77,68,65],
[67,53,0,64,57,62,59,62],
[72,65,66,0,58,70,67,67],
[77,65,73,72,0,77,67,74],
[62,53,68,60,53,0,62,61],
[68,62,71,63,63,68,0,65],
[70,65,68,63,56,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,74,74,71,56,65,77],
[58,0,61,69,66,63,59,65],
[56,69,0,75,77,69,66,71],
[56,61,55,0,66,65,54,56],
[59,64,53,64,0,60,43,69],
[74,67,61,65,70,0,66,63],
[65,71,64,76,87,64,0,79],
[53,65,59,74,61,67,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,64,62,69,63,65,65],
[59,0,64,61,61,70,61,62],
[66,66,0,66,74,71,69,61],
[68,69,64,0,71,74,68,68],
[61,69,56,59,0,71,67,72],
[67,60,59,56,59,0,62,56],
[65,69,61,62,63,68,0,61],
[65,68,69,62,58,74,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,53,66,55,69,50,64],
[73,0,54,63,66,81,68,77],
[77,76,0,75,60,73,70,76],
[64,67,55,0,60,73,61,78],
[75,64,70,70,0,73,65,82],
[61,49,57,57,57,0,49,66],
[80,62,60,69,65,81,0,83],
[66,53,54,52,48,64,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,51,58,60,54,58,62],
[73,0,62,64,59,68,64,71],
[79,68,0,69,74,69,64,59],
[72,66,61,0,71,67,65,54],
[70,71,56,59,0,63,58,65],
[76,62,61,63,67,0,60,65],
[72,66,66,65,72,70,0,69],
[68,59,71,76,65,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,63,71,66,76,66],
[53,0,70,68,62,71,60,56],
[60,60,0,63,71,74,74,57],
[67,62,67,0,69,57,64,58],
[59,68,59,61,0,49,63,58],
[64,59,56,73,81,0,66,57],
[54,70,56,66,67,64,0,61],
[64,74,73,72,72,73,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,70,60,62,69,72,71],
[72,0,75,67,61,73,68,73],
[60,55,0,42,46,60,55,53],
[70,63,88,0,64,74,76,73],
[68,69,84,66,0,69,65,56],
[61,57,70,56,61,0,61,59],
[58,62,75,54,65,69,0,56],
[59,57,77,57,74,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,67,70,64,77,76],
[65,0,69,69,70,61,69,72],
[70,61,0,74,61,71,75,76],
[63,61,56,0,59,58,78,70],
[60,60,69,71,0,62,71,79],
[66,69,59,72,68,0,70,84],
[53,61,55,52,59,60,0,68],
[54,58,54,60,51,46,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,68,60,61,46,60],
[88,0,79,81,70,83,65,84],
[81,51,0,84,76,76,64,72],
[62,49,46,0,52,59,47,67],
[70,60,54,78,0,72,61,63],
[69,47,54,71,58,0,69,62],
[84,65,66,83,69,61,0,63],
[70,46,58,63,67,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,63,63,57,60,66],
[70,0,64,73,69,74,74,74],
[73,66,0,79,64,73,71,76],
[67,57,51,0,57,66,73,66],
[67,61,66,73,0,72,66,69],
[73,56,57,64,58,0,67,63],
[70,56,59,57,64,63,0,70],
[64,56,54,64,61,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,65,90,77,67,56,76],
[48,0,41,69,70,57,58,53],
[65,89,0,79,82,57,49,59],
[40,61,51,0,59,49,59,36],
[53,60,48,71,0,54,54,43],
[63,73,73,81,76,0,68,47],
[74,72,81,71,76,62,0,59],
[54,77,71,94,87,83,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,70,87,56,70,67],
[51,0,74,66,60,47,53,46],
[66,56,0,68,70,67,61,56],
[60,64,62,0,47,61,42,47],
[43,70,60,83,0,61,70,66],
[74,83,63,69,69,0,57,60],
[60,77,69,88,60,73,0,54],
[63,84,74,83,64,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,71,58,52,61,60],
[66,0,77,85,77,55,65,68],
[60,53,0,58,52,42,46,60],
[59,45,72,0,57,47,67,50],
[72,53,78,73,0,49,59,66],
[78,75,88,83,81,0,65,73],
[69,65,84,63,71,65,0,67],
[70,62,70,80,64,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,59,65,57,61,66],
[75,0,66,66,63,71,68,66],
[68,64,0,62,73,72,68,68],
[71,64,68,0,71,64,72,58],
[65,67,57,59,0,63,62,63],
[73,59,58,66,67,0,71,71],
[69,62,62,58,68,59,0,67],
[64,64,62,72,67,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,81,79,61,78,74,68],
[52,0,67,72,58,65,68,49],
[49,63,0,65,58,66,58,58],
[51,58,65,0,47,69,68,53],
[69,72,72,83,0,77,73,58],
[52,65,64,61,53,0,57,53],
[56,62,72,62,57,73,0,52],
[62,81,72,77,72,77,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,77,67,65,53,86,54],
[57,0,56,73,48,56,60,68],
[53,74,0,67,41,64,69,52],
[63,57,63,0,53,44,72,68],
[65,82,89,77,0,86,75,77],
[77,74,66,86,44,0,67,67],
[44,70,61,58,55,63,0,59],
[76,62,78,62,53,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,86,80,77,78,65,75],
[32,0,49,56,55,42,61,51],
[44,81,0,64,54,29,41,61],
[50,74,66,0,53,57,65,44],
[53,75,76,77,0,83,61,78],
[52,88,101,73,47,0,49,64],
[65,69,89,65,69,81,0,53],
[55,79,69,86,52,66,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,56,60,56,60,61],
[70,0,65,63,64,60,62,65],
[68,65,0,49,71,67,59,66],
[74,67,81,0,72,62,73,67],
[70,66,59,58,0,67,65,68],
[74,70,63,68,63,0,63,67],
[70,68,71,57,65,67,0,64],
[69,65,64,63,62,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,61,70,61,63,78,67],
[60,0,65,65,66,68,62,47],
[69,65,0,60,83,72,65,67],
[60,65,70,0,57,69,69,52],
[69,64,47,73,0,67,69,60],
[67,62,58,61,63,0,73,58],
[52,68,65,61,61,57,0,61],
[63,83,63,78,70,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,45,74,66,64,53,51],
[59,0,48,94,45,81,51,59],
[85,82,0,65,62,86,72,62],
[56,36,65,0,48,55,64,57],
[64,85,68,82,0,85,84,71],
[66,49,44,75,45,0,37,50],
[77,79,58,66,46,93,0,43],
[79,71,68,73,59,80,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,60,66,49,47,48],
[63,0,36,49,67,50,60,48],
[71,94,0,60,75,68,75,77],
[70,81,70,0,81,48,69,74],
[64,63,55,49,0,45,55,54],
[81,80,62,82,85,0,75,95],
[83,70,55,61,75,55,0,57],
[82,82,53,56,76,35,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,71,69,60,53,55,62],
[78,0,90,62,84,72,73,84],
[59,40,0,43,67,48,69,62],
[61,68,87,0,76,61,61,72],
[70,46,63,54,0,50,62,64],
[77,58,82,69,80,0,64,76],
[75,57,61,69,68,66,0,87],
[68,46,68,58,66,54,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,61,58,61,54,57],
[73,0,85,64,86,63,70,75],
[67,45,0,58,72,56,68,62],
[69,66,72,0,74,66,80,62],
[72,44,58,56,0,59,59,62],
[69,67,74,64,71,0,68,77],
[76,60,62,50,71,62,0,65],
[73,55,68,68,68,53,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,68,68,71,81,75],
[65,0,77,76,78,80,85,86],
[57,53,0,66,55,55,56,81],
[62,54,64,0,65,59,74,78],
[62,52,75,65,0,62,70,62],
[59,50,75,71,68,0,65,77],
[49,45,74,56,60,65,0,65],
[55,44,49,52,68,53,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,63,72,64,52,63],
[67,0,55,53,83,71,61,71],
[63,75,0,66,72,75,66,69],
[67,77,64,0,81,62,67,60],
[58,47,58,49,0,56,53,59],
[66,59,55,68,74,0,61,58],
[78,69,64,63,77,69,0,58],
[67,59,61,70,71,72,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,75,75,77,130,130,75],
[77,0,75,75,77,130,130,22],
[55,55,0,75,77,55,55,0],
[55,55,55,0,77,55,55,0],
[53,53,53,53,0,53,53,53],
[0,0,75,75,77,0,55,22],
[0,0,75,75,77,75,0,22],
[55,108,130,130,77,108,108,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,63,67,67,73,76],
[63,0,69,65,70,64,65,60],
[63,61,0,58,61,64,68,68],
[67,65,72,0,70,74,69,68],
[63,60,69,60,0,75,64,60],
[63,66,66,56,55,0,60,59],
[57,65,62,61,66,70,0,57],
[54,70,62,62,70,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,91,70,85,60,96,63],
[58,0,91,72,56,51,106,75],
[39,39,0,56,64,52,65,50],
[60,58,74,0,52,46,82,43],
[45,74,66,78,0,62,91,62],
[70,79,78,84,68,0,89,62],
[34,24,65,48,39,41,0,48],
[67,55,80,87,68,68,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,55,45,57,47,79,47],
[83,0,81,68,50,69,76,73],
[75,49,0,73,66,46,73,46],
[85,62,57,0,75,67,95,63],
[73,80,64,55,0,73,77,45],
[83,61,84,63,57,0,69,52],
[51,54,57,35,53,61,0,59],
[83,57,84,67,85,78,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,60,63,82,61,71,53],
[54,0,55,68,72,70,69,63],
[70,75,0,80,72,76,80,65],
[67,62,50,0,70,60,64,57],
[48,58,58,60,0,56,62,49],
[69,60,54,70,74,0,70,61],
[59,61,50,66,68,60,0,49],
[77,67,65,73,81,69,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,75,71,56,70,63],
[60,0,63,72,67,64,70,65],
[72,67,0,74,73,69,75,63],
[55,58,56,0,62,54,65,52],
[59,63,57,68,0,68,68,53],
[74,66,61,76,62,0,75,60],
[60,60,55,65,62,55,0,55],
[67,65,67,78,77,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,61,73,68,67,60,72],
[52,0,44,58,58,53,51,59],
[69,86,0,70,74,60,62,73],
[57,72,60,0,54,73,62,52],
[62,72,56,76,0,74,55,66],
[63,77,70,57,56,0,59,63],
[70,79,68,68,75,71,0,63],
[58,71,57,78,64,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,75,72,53,68,73],
[56,0,54,68,56,56,70,66],
[63,76,0,70,71,57,53,65],
[55,62,60,0,59,53,55,73],
[58,74,59,71,0,55,52,63],
[77,74,73,77,75,0,63,64],
[62,60,77,75,78,67,0,74],
[57,64,65,57,67,66,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,27,103,80,80,80],
[50,0,51,27,103,24,24,53],
[50,79,0,27,79,0,79,79],
[103,103,103,0,103,53,103,103],
[27,27,51,27,0,27,27,27],
[50,106,130,77,103,0,79,106],
[50,106,51,27,103,51,0,106],
[50,77,51,27,103,24,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,45,68,55,55,34],
[66,0,59,53,69,55,63,40],
[64,71,0,43,72,64,67,54],
[85,77,87,0,88,61,68,72],
[62,61,58,42,0,47,61,36],
[75,75,66,69,83,0,55,59],
[75,67,63,62,69,75,0,57],
[96,90,76,58,94,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,60,67,67,60,65],
[57,0,61,52,50,59,58,61],
[71,69,0,60,60,60,64,60],
[70,78,70,0,68,63,71,64],
[63,80,70,62,0,71,75,71],
[63,71,70,67,59,0,66,60],
[70,72,66,59,55,64,0,60],
[65,69,70,66,59,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,73,68,70,58,76],
[68,0,85,86,70,85,56,84],
[56,45,0,70,67,60,59,63],
[57,44,60,0,59,59,51,58],
[62,60,63,71,0,58,55,57],
[60,45,70,71,72,0,66,66],
[72,74,71,79,75,64,0,71],
[54,46,67,72,73,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,59,60,64,69,57,78],
[45,0,63,64,53,61,52,69],
[71,67,0,45,74,53,47,68],
[70,66,85,0,72,74,53,75],
[66,77,56,58,0,58,68,71],
[61,69,77,56,72,0,61,69],
[73,78,83,77,62,69,0,76],
[52,61,62,55,59,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,61,69,60,62,70],
[64,0,66,67,68,61,62,69],
[66,64,0,63,69,60,74,70],
[69,63,67,0,75,68,69,68],
[61,62,61,55,0,53,64,69],
[70,69,70,62,77,0,73,79],
[68,68,56,61,66,57,0,69],
[60,61,60,62,61,51,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,59,65,69,60,52],
[71,0,57,51,53,65,64,59],
[66,73,0,52,56,56,55,59],
[71,79,78,0,70,65,61,70],
[65,77,74,60,0,76,70,70],
[61,65,74,65,54,0,61,64],
[70,66,75,69,60,69,0,63],
[78,71,71,60,60,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,63,55,54,54,54,61],
[75,0,71,62,62,79,66,83],
[67,59,0,46,45,71,52,68],
[75,68,84,0,64,78,81,75],
[76,68,85,66,0,83,64,77],
[76,51,59,52,47,0,58,64],
[76,64,78,49,66,72,0,60],
[69,47,62,55,53,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,52,50,67,63,65,72],
[61,0,54,60,54,61,65,65],
[78,76,0,68,66,53,76,74],
[80,70,62,0,63,69,71,78],
[63,76,64,67,0,64,76,74],
[67,69,77,61,66,0,73,62],
[65,65,54,59,54,57,0,59],
[58,65,56,52,56,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,58,62,59,67,63],
[71,0,63,57,67,65,76,65],
[69,67,0,65,62,60,66,72],
[72,73,65,0,70,71,69,73],
[68,63,68,60,0,66,63,73],
[71,65,70,59,64,0,70,74],
[63,54,64,61,67,60,0,63],
[67,65,58,57,57,56,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,78,59,71,73,61,59],
[67,0,80,71,62,84,64,63],
[52,50,0,60,58,65,51,58],
[71,59,70,0,65,72,63,64],
[59,68,72,65,0,75,73,67],
[57,46,65,58,55,0,62,57],
[69,66,79,67,57,68,0,66],
[71,67,72,66,63,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,62,65,71,68,63],
[65,0,55,49,39,58,52,66],
[71,75,0,87,73,61,39,86],
[68,81,43,0,57,53,49,65],
[65,91,57,73,0,61,61,76],
[59,72,69,77,69,0,55,55],
[62,78,91,81,69,75,0,83],
[67,64,44,65,54,75,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,62,70,74,67,83],
[61,0,74,66,64,49,65,84],
[60,56,0,65,52,54,58,81],
[68,64,65,0,62,54,77,79],
[60,66,78,68,0,67,71,77],
[56,81,76,76,63,0,74,83],
[63,65,72,53,59,56,0,75],
[47,46,49,51,53,47,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,58,59,71,64,69,78],
[54,0,59,63,63,73,56,81],
[72,71,0,61,81,71,47,81],
[71,67,69,0,66,65,59,74],
[59,67,49,64,0,59,52,63],
[66,57,59,65,71,0,66,77],
[61,74,83,71,78,64,0,80],
[52,49,49,56,67,53,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,66,54,63,50,50],
[73,0,61,67,63,56,65,62],
[70,69,0,72,53,66,61,54],
[64,63,58,0,59,61,68,59],
[76,67,77,71,0,67,60,75],
[67,74,64,69,63,0,71,62],
[80,65,69,62,70,59,0,65],
[80,68,76,71,55,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,61,63,62,65,56],
[61,0,54,50,58,63,56,49],
[66,76,0,65,60,60,69,63],
[69,80,65,0,70,71,68,63],
[67,72,70,60,0,64,64,63],
[68,67,70,59,66,0,61,60],
[65,74,61,62,66,69,0,66],
[74,81,67,67,67,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,47,44,54,53,58,56],
[78,0,75,59,65,59,74,57],
[83,55,0,66,68,60,71,59],
[86,71,64,0,68,54,73,64],
[76,65,62,62,0,60,72,66],
[77,71,70,76,70,0,66,55],
[72,56,59,57,58,64,0,55],
[74,73,71,66,64,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,85,58,88,75,78,96],
[42,0,76,58,65,75,81,57],
[45,54,0,83,53,52,65,73],
[72,72,47,0,80,58,61,76],
[42,65,77,50,0,58,61,76],
[55,55,78,72,72,0,93,84],
[52,49,65,69,69,37,0,73],
[34,73,57,54,54,46,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,54,58,57,62,63],
[71,0,67,69,72,58,67,56],
[68,63,0,62,71,58,61,58],
[76,61,68,0,74,60,65,61],
[72,58,59,56,0,58,60,58],
[73,72,72,70,72,0,70,55],
[68,63,69,65,70,60,0,66],
[67,74,72,69,72,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,76,62,67,73,70],
[60,0,59,71,57,62,62,59],
[60,71,0,70,63,58,66,52],
[54,59,60,0,51,48,59,51],
[68,73,67,79,0,60,67,64],
[63,68,72,82,70,0,78,75],
[57,68,64,71,63,52,0,60],
[60,71,78,79,66,55,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,67,62,70,73,70],
[63,0,70,74,66,63,77,75],
[62,60,0,70,66,73,70,63],
[63,56,60,0,53,70,69,69],
[68,64,64,77,0,67,77,61],
[60,67,57,60,63,0,73,59],
[57,53,60,61,53,57,0,54],
[60,55,67,61,69,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,61,65,62,65,51],
[75,0,65,71,72,67,67,68],
[69,65,0,67,64,61,69,63],
[69,59,63,0,63,68,72,63],
[65,58,66,67,0,67,58,55],
[68,63,69,62,63,0,63,62],
[65,63,61,58,72,67,0,54],
[79,62,67,67,75,68,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,77,62,70,68,67,68],
[66,0,62,58,67,67,65,64],
[53,68,0,62,64,59,69,67],
[68,72,68,0,60,60,69,66],
[60,63,66,70,0,64,71,67],
[62,63,71,70,66,0,65,58],
[63,65,61,61,59,65,0,64],
[62,66,63,64,63,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,58,65,59,59,66],
[70,0,58,56,67,68,61,65],
[71,72,0,63,71,72,60,72],
[72,74,67,0,64,67,73,65],
[65,63,59,66,0,64,64,65],
[71,62,58,63,66,0,62,68],
[71,69,70,57,66,68,0,67],
[64,65,58,65,65,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,58,59,58,60,66,58],
[63,0,58,62,68,57,59,66],
[72,72,0,62,72,55,64,62],
[71,68,68,0,63,65,69,63],
[72,62,58,67,0,58,61,71],
[70,73,75,65,72,0,67,62],
[64,71,66,61,69,63,0,62],
[72,64,68,67,59,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,39,34,59,31,11,33],
[101,0,75,34,75,83,74,64],
[91,55,0,34,54,60,16,67],
[96,96,96,0,80,83,55,93],
[71,55,76,50,0,60,27,80],
[99,47,70,47,70,0,68,70],
[119,56,114,75,103,62,0,103],
[97,66,63,37,50,60,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,62,50,67,68,59],
[69,0,69,74,63,78,76,64],
[65,61,0,68,65,72,77,65],
[68,56,62,0,60,74,69,67],
[80,67,65,70,0,72,78,55],
[63,52,58,56,58,0,64,49],
[62,54,53,61,52,66,0,56],
[71,66,65,63,75,81,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,61,51,73,61,47],
[65,0,50,70,70,66,70,67],
[72,80,0,79,62,53,71,68],
[69,60,51,0,69,46,57,68],
[79,60,68,61,0,76,61,67],
[57,64,77,84,54,0,65,55],
[69,60,59,73,69,65,0,72],
[83,63,62,62,63,75,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,71,54,72,64,74,69],
[69,0,65,66,71,67,76,52],
[59,65,0,62,66,66,67,64],
[76,64,68,0,69,62,62,60],
[58,59,64,61,0,61,61,62],
[66,63,64,68,69,0,59,51],
[56,54,63,68,69,71,0,57],
[61,78,66,70,68,79,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,77,48,74,70,84,77],
[50,0,76,36,62,70,70,60],
[53,54,0,66,66,66,57,70],
[82,94,64,0,47,63,71,53],
[56,68,64,83,0,70,68,64],
[60,60,64,67,60,0,79,60],
[46,60,73,59,62,51,0,76],
[53,70,60,77,66,70,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,57,54,62,99,82,57],
[78,0,74,64,69,74,77,59],
[73,56,0,90,62,101,80,57],
[76,66,40,0,63,91,74,54],
[68,61,68,67,0,112,80,83],
[31,56,29,39,18,0,23,57],
[48,53,50,56,50,107,0,58],
[73,71,73,76,47,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,66,74,71,65,60],
[62,0,76,65,70,70,61,54],
[61,54,0,54,63,63,61,51],
[64,65,76,0,68,67,65,66],
[56,60,67,62,0,66,57,60],
[59,60,67,63,64,0,70,63],
[65,69,69,65,73,60,0,62],
[70,76,79,64,70,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,86,93,84,72,67,74],
[84,0,89,97,70,64,75,89],
[44,41,0,60,85,49,30,74],
[37,33,70,0,53,49,33,58],
[46,60,45,77,0,37,57,40],
[58,66,81,81,93,0,77,94],
[63,55,100,97,73,53,0,67],
[56,41,56,72,90,36,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,83,74,62,50,59],
[65,0,80,79,73,69,60,60],
[62,50,0,64,77,60,54,51],
[47,51,66,0,62,50,58,49],
[56,57,53,68,0,71,70,52],
[68,61,70,80,59,0,53,55],
[80,70,76,72,60,77,0,66],
[71,70,79,81,78,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,72,42,68,75,66],
[65,0,74,89,69,78,65,73],
[58,56,0,59,55,54,55,70],
[58,41,71,0,67,61,82,79],
[88,61,75,63,0,83,62,90],
[62,52,76,69,47,0,53,75],
[55,65,75,48,68,77,0,70],
[64,57,60,51,40,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,56,67,59,61,60],
[69,0,60,60,75,57,58,61],
[67,70,0,65,67,66,64,70],
[74,70,65,0,70,72,72,73],
[63,55,63,60,0,54,60,60],
[71,73,64,58,76,0,63,64],
[69,72,66,58,70,67,0,66],
[70,69,60,57,70,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,71,52,72,76,53,64],
[70,0,75,87,81,86,59,77],
[59,55,0,62,55,66,51,77],
[78,43,68,0,62,62,44,55],
[58,49,75,68,0,72,50,71],
[54,44,64,68,58,0,43,61],
[77,71,79,86,80,87,0,64],
[66,53,53,75,59,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,60,58,69,58,53],
[64,0,69,56,45,62,55,59],
[54,61,0,51,57,62,60,53],
[70,74,79,0,69,71,72,61],
[72,85,73,61,0,77,65,69],
[61,68,68,59,53,0,69,55],
[72,75,70,58,65,61,0,64],
[77,71,77,69,61,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,65,63,58,56,62],
[62,0,67,63,66,64,65,61],
[68,63,0,58,58,54,57,58],
[65,67,72,0,71,66,70,65],
[67,64,72,59,0,58,63,56],
[72,66,76,64,72,0,65,67],
[74,65,73,60,67,65,0,63],
[68,69,72,65,74,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,71,61,74,74,71,81],
[51,0,69,54,67,65,68,86],
[59,61,0,43,73,68,70,88],
[69,76,87,0,76,57,61,84],
[56,63,57,54,0,73,43,72],
[56,65,62,73,57,0,56,63],
[59,62,60,69,87,74,0,78],
[49,44,42,46,58,67,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,63,71,58,61,61,81],
[52,0,43,62,59,59,62,64],
[67,87,0,80,59,71,62,75],
[59,68,50,0,63,78,77,82],
[72,71,71,67,0,84,62,82],
[69,71,59,52,46,0,58,90],
[69,68,68,53,68,72,0,68],
[49,66,55,48,48,40,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,70,61,74,63,80,66],
[44,0,67,54,63,65,75,56],
[60,63,0,69,68,66,89,71],
[69,76,61,0,84,75,94,54],
[56,67,62,46,0,69,70,54],
[67,65,64,55,61,0,75,60],
[50,55,41,36,60,55,0,50],
[64,74,59,76,76,70,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,70,46,51,58,62,57],
[94,0,72,78,72,67,81,63],
[60,58,0,42,53,65,56,50],
[84,52,88,0,63,57,76,64],
[79,58,77,67,0,74,95,52],
[72,63,65,73,56,0,75,68],
[68,49,74,54,35,55,0,43],
[73,67,80,66,78,62,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,55,70,67,76,69,70],
[52,0,49,64,56,59,60,64],
[75,81,0,64,63,68,71,71],
[60,66,66,0,57,68,68,67],
[63,74,67,73,0,70,71,74],
[54,71,62,62,60,0,69,65],
[61,70,59,62,59,61,0,69],
[60,66,59,63,56,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,57,60,70,59,60,62],
[60,0,62,64,59,63,62,58],
[73,68,0,63,76,55,64,69],
[70,66,67,0,70,58,57,61],
[60,71,54,60,0,58,64,60],
[71,67,75,72,72,0,61,59],
[70,68,66,73,66,69,0,58],
[68,72,61,69,70,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,73,78,70,60,62,66],
[73,0,78,88,67,65,69,74],
[57,52,0,63,61,53,52,58],
[52,42,67,0,55,51,46,60],
[60,63,69,75,0,65,54,65],
[70,65,77,79,65,0,66,65],
[68,61,78,84,76,64,0,70],
[64,56,72,70,65,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,69,60,60,55,52],
[73,0,66,58,78,56,60,59],
[70,64,0,76,66,71,63,71],
[61,72,54,0,76,64,55,52],
[70,52,64,54,0,57,50,59],
[70,74,59,66,73,0,57,58],
[75,70,67,75,80,73,0,64],
[78,71,59,78,71,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,69,66,73,71,71],
[66,0,68,68,67,62,70,72],
[60,62,0,73,73,68,78,69],
[61,62,57,0,67,59,66,73],
[64,63,57,63,0,65,70,73],
[57,68,62,71,65,0,64,75],
[59,60,52,64,60,66,0,61],
[59,58,61,57,57,55,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,62,68,65,69,69],
[67,0,79,63,74,68,79,70],
[57,51,0,49,59,50,66,56],
[68,67,81,0,71,66,63,62],
[62,56,71,59,0,51,65,72],
[65,62,80,64,79,0,72,67],
[61,51,64,67,65,58,0,66],
[61,60,74,68,58,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,56,54,70,68,65,81],
[52,0,56,48,54,43,66,68],
[74,74,0,68,70,62,78,80],
[76,82,62,0,73,69,72,77],
[60,76,60,57,0,56,59,65],
[62,87,68,61,74,0,75,73],
[65,64,52,58,71,55,0,62],
[49,62,50,53,65,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,96,91,59,45,70,96,67],
[34,0,76,75,40,100,75,80],
[39,54,0,40,38,52,48,64],
[71,55,90,0,86,90,91,91],
[85,90,92,44,0,86,92,68],
[60,30,78,40,44,0,71,67],
[34,55,82,39,38,59,0,46],
[63,50,66,39,62,63,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,90,64,60,57,50,55],
[64,0,72,62,67,62,54,63],
[40,58,0,77,59,62,38,51],
[66,68,53,0,51,39,64,44],
[70,63,71,79,0,50,66,57],
[73,68,68,91,80,0,75,52],
[80,76,92,66,64,55,0,71],
[75,67,79,86,73,78,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,51,62,59,52,54,63],
[78,0,54,65,65,53,58,63],
[79,76,0,88,76,55,72,65],
[68,65,42,0,78,68,57,51],
[71,65,54,52,0,53,44,52],
[78,77,75,62,77,0,60,68],
[76,72,58,73,86,70,0,67],
[67,67,65,79,78,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,53,63,58,72,76,68],
[72,0,55,66,69,74,71,72],
[77,75,0,80,65,72,78,81],
[67,64,50,0,53,86,74,55],
[72,61,65,77,0,83,74,76],
[58,56,58,44,47,0,59,63],
[54,59,52,56,56,71,0,49],
[62,58,49,75,54,67,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,62,54,50,54,58,55],
[83,0,79,64,58,51,76,56],
[68,51,0,61,57,58,63,54],
[76,66,69,0,66,65,68,61],
[80,72,73,64,0,70,72,64],
[76,79,72,65,60,0,68,71],
[72,54,67,62,58,62,0,59],
[75,74,76,69,66,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,63,64,65,74,68,54],
[67,0,73,59,70,66,73,65],
[67,57,0,45,71,59,71,49],
[66,71,85,0,64,80,77,64],
[65,60,59,66,0,63,55,47],
[56,64,71,50,67,0,62,46],
[62,57,59,53,75,68,0,61],
[76,65,81,66,83,84,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,78,61,73,83,84,66],
[66,0,73,61,68,58,83,70],
[52,57,0,70,70,60,76,70],
[69,69,60,0,68,76,79,74],
[57,62,60,62,0,63,75,57],
[47,72,70,54,67,0,72,67],
[46,47,54,51,55,58,0,70],
[64,60,60,56,73,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,61,71,63,64,71],
[64,0,61,49,64,71,68,65],
[73,69,0,65,62,65,66,67],
[69,81,65,0,61,69,79,61],
[59,66,68,69,0,82,73,55],
[67,59,65,61,48,0,72,52],
[66,62,64,51,57,58,0,52],
[59,65,63,69,75,78,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,52,67,82,63,100,63],
[63,0,58,36,62,55,69,71],
[78,72,0,64,65,67,76,54],
[63,94,66,0,72,80,88,76],
[48,68,65,58,0,63,100,64],
[67,75,63,50,67,0,52,59],
[30,61,54,42,30,78,0,32],
[67,59,76,54,66,71,98,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,83,63,61,72,57,58],
[57,0,76,57,61,63,55,62],
[47,54,0,47,54,61,47,51],
[67,73,83,0,65,79,59,75],
[69,69,76,65,0,78,67,72],
[58,67,69,51,52,0,58,55],
[73,75,83,71,63,72,0,71],
[72,68,79,55,58,75,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,71,68,38,62,47,44],
[106,0,91,66,70,93,49,61],
[59,39,0,67,48,59,68,77],
[62,64,63,0,57,67,96,79],
[92,60,82,73,0,75,55,60],
[68,37,71,63,55,0,59,53],
[83,81,62,34,75,71,0,81],
[86,69,53,51,70,77,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,77,60,65,74,74,55],
[68,0,71,55,67,66,64,68],
[53,59,0,53,68,65,61,58],
[70,75,77,0,62,77,76,69],
[65,63,62,68,0,70,69,63],
[56,64,65,53,60,0,56,64],
[56,66,69,54,61,74,0,62],
[75,62,72,61,67,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,68,67,54,60,77,66],
[78,0,72,74,67,68,64,66],
[62,58,0,65,58,61,64,73],
[63,56,65,0,60,61,56,80],
[76,63,72,70,0,57,72,73],
[70,62,69,69,73,0,55,64],
[53,66,66,74,58,75,0,71],
[64,64,57,50,57,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,84,70,70,80,79],
[58,0,77,85,78,84,77,80],
[65,53,0,82,64,68,69,71],
[46,45,48,0,58,55,56,55],
[60,52,66,72,0,71,48,84],
[60,46,62,75,59,0,76,62],
[50,53,61,74,82,54,0,69],
[51,50,59,75,46,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,47,41,49,83,58,59],
[75,0,56,63,50,63,58,50],
[83,74,0,41,46,74,49,61],
[89,67,89,0,64,74,49,61],
[81,80,84,66,0,83,49,74],
[47,67,56,56,47,0,74,0],
[72,72,81,81,81,56,0,47],
[71,80,69,69,56,130,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,60,67,84,59,67,77],
[53,0,61,55,65,55,63,65],
[70,69,0,57,66,60,63,69],
[63,75,73,0,82,66,73,78],
[46,65,64,48,0,64,52,63],
[71,75,70,64,66,0,73,79],
[63,67,67,57,78,57,0,70],
[53,65,61,52,67,51,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,63,61,60,75,68,81],
[41,0,34,48,50,52,51,55],
[67,96,0,57,70,77,77,77],
[69,82,73,0,63,72,76,76],
[70,80,60,67,0,67,66,66],
[55,78,53,58,63,0,65,63],
[62,79,53,54,64,65,0,70],
[49,75,53,54,64,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,69,58,66,59,61],
[70,0,62,62,68,65,63,55],
[65,68,0,68,70,72,69,74],
[61,68,62,0,65,61,62,60],
[72,62,60,65,0,65,73,67],
[64,65,58,69,65,0,65,65],
[71,67,61,68,57,65,0,64],
[69,75,56,70,63,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,65,56,37,58,59,49],
[44,0,80,64,39,66,50,86],
[65,50,0,71,47,71,77,71],
[74,66,59,0,58,96,90,71],
[93,91,83,72,0,84,57,85],
[72,64,59,34,46,0,51,27],
[71,80,53,40,73,79,0,65],
[81,44,59,59,45,103,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,54,48,70,37,59,57],
[74,0,85,59,41,64,73,89],
[76,45,0,57,47,39,63,67],
[82,71,73,0,67,68,54,57],
[60,89,83,63,0,74,73,77],
[93,66,91,62,56,0,66,65],
[71,57,67,76,57,64,0,94],
[73,41,63,73,53,65,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,86,69,77,69,78,65],
[61,0,91,66,71,48,76,58],
[44,39,0,45,72,41,54,42],
[61,64,85,0,81,59,61,57],
[53,59,58,49,0,46,56,65],
[61,82,89,71,84,0,74,67],
[52,54,76,69,74,56,0,68],
[65,72,88,73,65,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,62,64,56,63,72],
[68,0,67,67,66,64,59,69],
[73,63,0,66,64,64,65,69],
[68,63,64,0,58,63,62,73],
[66,64,66,72,0,71,62,72],
[74,66,66,67,59,0,65,72],
[67,71,65,68,68,65,0,75],
[58,61,61,57,58,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,74,76,77,56,70],
[55,0,54,75,62,60,56,67],
[62,76,0,84,68,72,69,71],
[56,55,46,0,57,46,58,47],
[54,68,62,73,0,66,63,56],
[53,70,58,84,64,0,64,72],
[74,74,61,72,67,66,0,65],
[60,63,59,83,74,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,58,80,51,57,78,57],
[51,0,61,66,55,59,57,54],
[72,69,0,67,57,57,70,75],
[50,64,63,0,67,59,63,65],
[79,75,73,63,0,68,75,74],
[73,71,73,71,62,0,71,66],
[52,73,60,67,55,59,0,56],
[73,76,55,65,56,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,0,20,55,0,55],
[55,0,110,0,20,0,0,0],
[55,20,0,0,20,0,0,0],
[130,130,130,0,75,55,75,75],
[110,110,110,55,0,55,55,55],
[75,130,130,75,75,0,75,20],
[130,130,130,55,75,55,0,75],
[75,130,130,55,75,110,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,67,59,67,65,58,63],
[73,0,76,64,67,67,68,72],
[63,54,0,63,68,65,66,70],
[71,66,67,0,65,65,65,66],
[63,63,62,65,0,68,61,72],
[65,63,65,65,62,0,54,70],
[72,62,64,65,69,76,0,65],
[67,58,60,64,58,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,67,69,54,62,61],
[69,0,63,65,70,74,61,69],
[66,67,0,58,66,65,62,59],
[63,65,72,0,69,65,63,63],
[61,60,64,61,0,72,63,63],
[76,56,65,65,58,0,66,60],
[68,69,68,67,67,64,0,64],
[69,61,71,67,67,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,61,62,57,61,59],
[64,0,65,64,55,55,55,70],
[60,65,0,54,57,59,62,59],
[69,66,76,0,71,63,64,62],
[68,75,73,59,0,69,68,68],
[73,75,71,67,61,0,67,71],
[69,75,68,66,62,63,0,67],
[71,60,71,68,62,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,66,68,80,70,74,65],
[56,0,64,60,66,65,68,65],
[64,66,0,59,65,60,60,68],
[62,70,71,0,72,72,69,63],
[50,64,65,58,0,64,67,61],
[60,65,70,58,66,0,66,61],
[56,62,70,61,63,64,0,62],
[65,65,62,67,69,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,78,63,71,70,71,62],
[64,0,78,71,74,71,71,64],
[52,52,0,53,55,59,45,62],
[67,59,77,0,68,62,73,65],
[59,56,75,62,0,55,61,58],
[60,59,71,68,75,0,66,62],
[59,59,85,57,69,64,0,62],
[68,66,68,65,72,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,65,63,67,71,70],
[66,0,68,58,64,73,66,66],
[70,62,0,62,66,70,74,68],
[65,72,68,0,67,73,74,68],
[67,66,64,63,0,70,72,68],
[63,57,60,57,60,0,63,65],
[59,64,56,56,58,67,0,59],
[60,64,62,62,62,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,76,90,42,52,83],
[65,0,90,71,52,40,65,112],
[65,40,0,56,36,33,48,79],
[54,59,74,0,41,21,42,89],
[40,78,94,89,0,71,71,102],
[88,90,97,109,59,0,101,107],
[78,65,82,88,59,29,0,80],
[47,18,51,41,28,23,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,64,99,87,72,71],
[68,0,82,57,93,73,90,83],
[71,48,0,57,110,83,88,76],
[66,73,73,0,96,44,84,64],
[31,37,20,34,0,42,29,33],
[43,57,47,86,88,0,78,59],
[58,40,42,46,101,52,0,78],
[59,47,54,66,97,71,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,75,73,68,70,61],
[66,0,65,67,71,65,71,61],
[61,65,0,72,72,67,69,63],
[55,63,58,0,59,59,64,52],
[57,59,58,71,0,59,65,54],
[62,65,63,71,71,0,77,66],
[60,59,61,66,65,53,0,54],
[69,69,67,78,76,64,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,69,65,67,56,66],
[63,0,56,58,68,59,49,58],
[64,74,0,69,66,76,58,78],
[61,72,61,0,65,66,46,58],
[65,62,64,65,0,67,70,75],
[63,71,54,64,63,0,66,74],
[74,81,72,84,60,64,0,86],
[64,72,52,72,55,56,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,73,68,69,66,65,68],
[57,0,61,58,59,64,63,57],
[57,69,0,60,67,65,68,73],
[62,72,70,0,72,68,71,70],
[61,71,63,58,0,66,69,61],
[64,66,65,62,64,0,76,60],
[65,67,62,59,61,54,0,60],
[62,73,57,60,69,70,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,70,74,77,68,77],
[69,0,59,65,75,61,65,70],
[68,71,0,59,71,58,71,82],
[60,65,71,0,65,61,64,85],
[56,55,59,65,0,57,56,62],
[53,69,72,69,73,0,64,74],
[62,65,59,66,74,66,0,71],
[53,60,48,45,68,56,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,64,65,55,56,59],
[61,0,64,51,58,61,55,61],
[64,66,0,61,60,57,49,55],
[66,79,69,0,62,58,59,62],
[65,72,70,68,0,60,63,58],
[75,69,73,72,70,0,68,65],
[74,75,81,71,67,62,0,72],
[71,69,75,68,72,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,52,65,58,64,68,60],
[67,0,65,71,68,71,62,64],
[78,65,0,73,70,63,70,67],
[65,59,57,0,70,71,58,64],
[72,62,60,60,0,69,65,67],
[66,59,67,59,61,0,61,57],
[62,68,60,72,65,69,0,63],
[70,66,63,66,63,73,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,74,85,76,68,70],
[62,0,65,74,73,80,71,73],
[70,65,0,70,70,82,70,70],
[56,56,60,0,63,80,69,71],
[45,57,60,67,0,83,65,62],
[54,50,48,50,47,0,48,60],
[62,59,60,61,65,82,0,66],
[60,57,60,59,68,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,66,62,68,70,75],
[57,0,68,63,60,55,70,59],
[63,62,0,67,64,66,67,60],
[64,67,63,0,63,67,66,59],
[68,70,66,67,0,68,76,63],
[62,75,64,63,62,0,69,54],
[60,60,63,64,54,61,0,64],
[55,71,70,71,67,76,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,60,62,58,57,69,62],
[51,0,48,62,61,57,72,45],
[70,82,0,72,74,62,85,57],
[68,68,58,0,68,67,77,63],
[72,69,56,62,0,63,79,68],
[73,73,68,63,67,0,83,71],
[61,58,45,53,51,47,0,60],
[68,85,73,67,62,59,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,64,66,69,70,62],
[65,0,63,62,70,69,68,63],
[72,67,0,63,68,78,74,60],
[66,68,67,0,71,74,79,64],
[64,60,62,59,0,69,63,66],
[61,61,52,56,61,0,62,59],
[60,62,56,51,67,68,0,60],
[68,67,70,66,64,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,56,62,59,61,54],
[76,0,64,58,62,68,83,68],
[77,66,0,64,73,82,84,75],
[74,72,66,0,65,70,96,67],
[68,68,57,65,0,67,73,62],
[71,62,48,60,63,0,64,44],
[69,47,46,34,57,66,0,56],
[76,62,55,63,68,86,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,103,35,75,51,37,70],
[69,0,87,77,50,69,66,88],
[27,43,0,43,32,51,24,86],
[95,53,87,0,74,82,77,101],
[55,80,98,56,0,59,26,67],
[79,61,79,48,71,0,50,61],
[93,64,106,53,104,80,0,80],
[60,42,44,29,63,69,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,69,68,67,68,66,58],
[51,0,65,65,57,55,61,59],
[61,65,0,67,57,64,58,60],
[62,65,63,0,63,67,62,61],
[63,73,73,67,0,69,73,68],
[62,75,66,63,61,0,67,68],
[64,69,72,68,57,63,0,62],
[72,71,70,69,62,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,65,54,84,65,52,56],
[76,0,77,55,78,59,60,70],
[65,53,0,41,75,58,62,46],
[76,75,89,0,90,68,63,75],
[46,52,55,40,0,47,49,36],
[65,71,72,62,83,0,55,68],
[78,70,68,67,81,75,0,44],
[74,60,84,55,94,62,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,102,58,68,72,81,110,86],
[28,0,30,39,10,60,54,73],
[72,100,0,80,98,56,109,93],
[62,91,50,0,48,69,88,72],
[58,120,32,82,0,67,99,97],
[49,70,74,61,63,0,74,75],
[20,76,21,42,31,56,0,76],
[44,57,37,58,33,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,82,65,72,70,72],
[63,0,71,82,71,72,62,73],
[57,59,0,81,62,64,63,64],
[48,48,49,0,49,51,49,54],
[65,59,68,81,0,64,63,68],
[58,58,66,79,66,0,62,69],
[60,68,67,81,67,68,0,68],
[58,57,66,76,62,61,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,64,64,66,74,41],
[62,0,64,57,73,57,47,51],
[64,66,0,49,60,52,59,66],
[66,73,81,0,72,65,77,57],
[66,57,70,58,0,66,59,69],
[64,73,78,65,64,0,55,53],
[56,83,71,53,71,75,0,43],
[89,79,64,73,61,77,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,59,63,62,62,62],
[73,0,60,60,76,68,66,68],
[70,70,0,78,65,66,56,75],
[71,70,52,0,69,66,68,77],
[67,54,65,61,0,65,61,70],
[68,62,64,64,65,0,60,70],
[68,64,74,62,69,70,0,79],
[68,62,55,53,60,60,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,61,56,76,55,43,52],
[68,0,69,57,81,81,64,60],
[69,61,0,62,76,73,59,50],
[74,73,68,0,85,65,71,70],
[54,49,54,45,0,51,43,47],
[75,49,57,65,79,0,68,62],
[87,66,71,59,87,62,0,65],
[78,70,80,60,83,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,2,13,29,10,37,28,30],
[128,0,45,54,60,61,64,67],
[117,85,0,90,70,72,64,89],
[101,76,40,0,76,63,64,89],
[120,70,60,54,0,60,64,55],
[93,69,58,67,70,0,39,40],
[102,66,66,66,66,91,0,55],
[100,63,41,41,75,90,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,64,66,80,85,76],
[58,0,59,63,57,60,69,69],
[62,71,0,67,72,77,70,83],
[66,67,63,0,71,73,73,70],
[64,73,58,59,0,62,72,64],
[50,70,53,57,68,0,72,55],
[45,61,60,57,58,58,0,75],
[54,61,47,60,66,75,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,75,67,63,60,64,71],
[51,0,49,63,57,57,59,68],
[55,81,0,77,69,82,77,69],
[63,67,53,0,63,64,56,69],
[67,73,61,67,0,60,73,69],
[70,73,48,66,70,0,70,65],
[66,71,53,74,57,60,0,56],
[59,62,61,61,61,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,72,69,60,73,61],
[55,0,65,76,52,60,61,48],
[61,65,0,72,70,57,62,66],
[58,54,58,0,64,58,45,42],
[61,78,60,66,0,52,59,58],
[70,70,73,72,78,0,59,65],
[57,69,68,85,71,71,0,71],
[69,82,64,88,72,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,57,62,70,67,68],
[68,0,60,68,61,75,74,68],
[76,70,0,72,68,70,73,63],
[73,62,58,0,67,65,62,74],
[68,69,62,63,0,68,82,62],
[60,55,60,65,62,0,59,68],
[63,56,57,68,48,71,0,62],
[62,62,67,56,68,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,85,73,50,70,72,82],
[57,0,71,63,67,62,56,73],
[45,59,0,37,58,37,65,59],
[57,67,93,0,57,59,68,71],
[80,63,72,73,0,65,63,90],
[60,68,93,71,65,0,76,87],
[58,74,65,62,67,54,0,69],
[48,57,71,59,40,43,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,63,72,68,69,70],
[66,0,62,56,69,65,73,67],
[64,68,0,71,75,68,72,65],
[67,74,59,0,61,68,73,73],
[58,61,55,69,0,62,63,58],
[62,65,62,62,68,0,63,64],
[61,57,58,57,67,67,0,48],
[60,63,65,57,72,66,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,54,68,62,59,58,65],
[62,0,63,67,58,65,61,69],
[76,67,0,71,65,77,63,71],
[62,63,59,0,59,71,59,68],
[68,72,65,71,0,77,65,75],
[71,65,53,59,53,0,53,69],
[72,69,67,71,65,77,0,73],
[65,61,59,62,55,61,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,73,68,71,80,63,63],
[52,0,60,64,64,65,61,63],
[57,70,0,57,65,68,58,53],
[62,66,73,0,75,60,74,58],
[59,66,65,55,0,62,59,63],
[50,65,62,70,68,0,60,45],
[67,69,72,56,71,70,0,71],
[67,67,77,72,67,85,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,70,64,69,58,73],
[58,0,66,59,54,58,55,60],
[60,64,0,64,61,62,65,74],
[60,71,66,0,52,66,55,69],
[66,76,69,78,0,70,65,72],
[61,72,68,64,60,0,59,67],
[72,75,65,75,65,71,0,66],
[57,70,56,61,58,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,60,72,70,65,64],
[63,0,58,56,56,85,54,44],
[51,72,0,63,61,75,65,60],
[70,74,67,0,56,84,63,53],
[58,74,69,74,0,69,72,48],
[60,45,55,46,61,0,55,51],
[65,76,65,67,58,75,0,71],
[66,86,70,77,82,79,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,65,67,64,64,59],
[65,0,58,63,67,58,62,65],
[65,72,0,71,73,69,69,67],
[65,67,59,0,66,57,62,66],
[63,63,57,64,0,57,70,69],
[66,72,61,73,73,0,76,69],
[66,68,61,68,60,54,0,61],
[71,65,63,64,61,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,68,74,68,67,58,75],
[51,0,64,53,56,62,51,64],
[62,66,0,58,60,66,54,69],
[56,77,72,0,64,68,61,85],
[62,74,70,66,0,68,61,76],
[63,68,64,62,62,0,66,73],
[72,79,76,69,69,64,0,84],
[55,66,61,45,54,57,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,31,42,20,37,31,59],
[110,0,68,79,22,37,68,79],
[99,62,0,42,62,79,73,79],
[88,51,88,0,51,57,88,110],
[110,108,68,79,0,57,88,110],
[93,93,51,73,73,0,53,110],
[99,62,57,42,42,77,0,99],
[71,51,51,20,20,20,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,57,71,59,52,68],
[63,0,63,62,66,61,58,71],
[67,67,0,52,75,68,56,69],
[73,68,78,0,76,71,53,72],
[59,64,55,54,0,64,54,64],
[71,69,62,59,66,0,72,75],
[78,72,74,77,76,58,0,70],
[62,59,61,58,66,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,64,78,69,68,72],
[61,0,77,63,68,73,70,60],
[54,53,0,60,65,61,59,60],
[66,67,70,0,79,70,71,63],
[52,62,65,51,0,64,61,58],
[61,57,69,60,66,0,63,60],
[62,60,71,59,69,67,0,65],
[58,70,70,67,72,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,62,68,65,68,55],
[70,0,66,72,65,71,68,65],
[73,64,0,66,64,66,68,59],
[68,58,64,0,69,59,65,61],
[62,65,66,61,0,73,65,58],
[65,59,64,71,57,0,57,50],
[62,62,62,65,65,73,0,53],
[75,65,71,69,72,80,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,82,78,78,68,65,70],
[67,0,72,68,55,73,64,72],
[48,58,0,75,64,64,40,73],
[52,62,55,0,69,57,70,54],
[52,75,66,61,0,62,59,59],
[62,57,66,73,68,0,58,65],
[65,66,90,60,71,72,0,81],
[60,58,57,76,71,65,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,54,54,84,91,66,68],
[74,0,86,28,69,107,46,83],
[76,44,0,42,80,93,32,92],
[76,102,88,0,110,101,64,94],
[46,61,50,20,0,83,42,79],
[39,23,37,29,47,0,19,61],
[64,84,98,66,88,111,0,92],
[62,47,38,36,51,69,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,58,53,55,53,60,55],
[78,0,64,68,73,65,72,72],
[72,66,0,69,65,72,69,67],
[77,62,61,0,65,62,64,63],
[75,57,65,65,0,61,70,67],
[77,65,58,68,69,0,69,64],
[70,58,61,66,60,61,0,67],
[75,58,63,67,63,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,84,74,78,60,66,68],
[64,0,75,57,79,59,64,68],
[46,55,0,61,75,66,58,65],
[56,73,69,0,76,73,64,62],
[52,51,55,54,0,68,57,46],
[70,71,64,57,62,0,66,56],
[64,66,72,66,73,64,0,60],
[62,62,65,68,84,74,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,59,59,54,56,51],
[57,0,60,55,58,62,53,57],
[63,70,0,53,55,54,57,59],
[71,75,77,0,68,70,60,61],
[71,72,75,62,0,65,61,65],
[76,68,76,60,65,0,67,64],
[74,77,73,70,69,63,0,71],
[79,73,71,69,65,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,56,60,62,55,63],
[71,0,68,57,60,72,64,75],
[74,62,0,48,55,64,60,57],
[74,73,82,0,64,68,63,72],
[70,70,75,66,0,81,71,64],
[68,58,66,62,49,0,53,66],
[75,66,70,67,59,77,0,66],
[67,55,73,58,66,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,59,61,64,63,56],
[69,0,66,66,60,62,64,63],
[62,64,0,61,59,61,60,65],
[71,64,69,0,60,66,60,59],
[69,70,71,70,0,74,71,63],
[66,68,69,64,56,0,68,67],
[67,66,70,70,59,62,0,64],
[74,67,65,71,67,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,88,64,63,66,76,69],
[54,0,81,59,71,65,78,65],
[42,49,0,66,58,55,64,53],
[66,71,64,0,65,58,70,61],
[67,59,72,65,0,55,77,66],
[64,65,75,72,75,0,64,69],
[54,52,66,60,53,66,0,62],
[61,65,77,69,64,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,74,59,64,72,56],
[57,0,58,67,65,64,70,63],
[70,72,0,71,63,71,71,67],
[56,63,59,0,55,54,70,65],
[71,65,67,75,0,65,65,58],
[66,66,59,76,65,0,72,65],
[58,60,59,60,65,58,0,51],
[74,67,63,65,72,65,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,67,58,86,69,90],
[62,0,65,69,50,50,72,70],
[57,65,0,46,47,63,57,81],
[63,61,84,0,57,59,56,61],
[72,80,83,73,0,59,80,88],
[44,80,67,71,71,0,60,88],
[61,58,73,74,50,70,0,87],
[40,60,49,69,42,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,64,62,70,70,65],
[63,0,79,69,64,66,73,72],
[62,51,0,60,54,56,57,62],
[66,61,70,0,59,61,72,68],
[68,66,76,71,0,65,77,75],
[60,64,74,69,65,0,70,65],
[60,57,73,58,53,60,0,61],
[65,58,68,62,55,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,69,64,63,75,64],
[60,0,66,61,62,76,61,64],
[58,64,0,67,62,60,75,63],
[61,69,63,0,68,68,59,77],
[66,68,68,62,0,62,71,71],
[67,54,70,62,68,0,70,61],
[55,69,55,71,59,60,0,65],
[66,66,67,53,59,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,63,63,58,57,59,73],
[76,0,70,70,60,65,62,69],
[67,60,0,67,54,57,60,69],
[67,60,63,0,57,61,60,64],
[72,70,76,73,0,64,74,66],
[73,65,73,69,66,0,69,66],
[71,68,70,70,56,61,0,68],
[57,61,61,66,64,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,78,63,72,64,70,62],
[57,0,68,55,65,58,67,62],
[52,62,0,58,53,53,66,61],
[67,75,72,0,66,69,69,65],
[58,65,77,64,0,59,65,66],
[66,72,77,61,71,0,72,67],
[60,63,64,61,65,58,0,65],
[68,68,69,65,64,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,62,64,59,63,59,55],
[78,0,73,68,72,66,69,59],
[68,57,0,59,56,58,65,64],
[66,62,71,0,62,61,64,61],
[71,58,74,68,0,70,69,53],
[67,64,72,69,60,0,73,65],
[71,61,65,66,61,57,0,55],
[75,71,66,69,77,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,59,55,69,59,71],
[67,0,66,55,54,66,78,75],
[70,64,0,75,53,68,65,56],
[71,75,55,0,57,72,65,61],
[75,76,77,73,0,60,71,77],
[61,64,62,58,70,0,71,61],
[71,52,65,65,59,59,0,78],
[59,55,74,69,53,69,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,71,64,70,70,66],
[62,0,70,63,63,70,73,59],
[60,60,0,60,64,64,54,62],
[59,67,70,0,66,69,66,60],
[66,67,66,64,0,68,76,59],
[60,60,66,61,62,0,69,60],
[60,57,76,64,54,61,0,63],
[64,71,68,70,71,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,65,61,77,68,73,82],
[52,0,59,62,65,69,63,75],
[65,71,0,65,64,70,59,77],
[69,68,65,0,87,69,54,67],
[53,65,66,43,0,66,58,75],
[62,61,60,61,64,0,57,72],
[57,67,71,76,72,73,0,72],
[48,55,53,63,55,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,57,60,61,75,63,56],
[82,0,52,64,57,77,77,82],
[73,78,0,62,77,88,83,77],
[70,66,68,0,88,89,62,85],
[69,73,53,42,0,81,63,68],
[55,53,42,41,49,0,51,71],
[67,53,47,68,67,79,0,71],
[74,48,53,45,62,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,48,22,21,51,30,20],
[97,0,53,59,73,89,48,59],
[82,77,0,71,78,70,59,69],
[108,71,59,0,92,80,83,68],
[109,57,52,38,0,52,57,59],
[79,41,60,50,78,0,57,65],
[100,82,71,47,73,73,0,57],
[110,71,61,62,71,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,60,65,56,60,54,53],
[66,0,61,69,60,61,64,57],
[70,69,0,69,66,59,66,57],
[65,61,61,0,59,52,57,49],
[74,70,64,71,0,68,62,69],
[70,69,71,78,62,0,69,67],
[76,66,64,73,68,61,0,72],
[77,73,73,81,61,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,62,76,65,61,62],
[69,0,76,65,71,68,60,56],
[63,54,0,62,60,56,52,53],
[68,65,68,0,70,67,69,60],
[54,59,70,60,0,54,57,61],
[65,62,74,63,76,0,66,60],
[69,70,78,61,73,64,0,74],
[68,74,77,70,69,70,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,65,62,64,58,59],
[64,0,63,68,64,59,61,65],
[69,67,0,82,63,65,67,72],
[65,62,48,0,60,58,64,60],
[68,66,67,70,0,62,63,62],
[66,71,65,72,68,0,74,75],
[72,69,63,66,67,56,0,64],
[71,65,58,70,68,55,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,66,53,60,53,65],
[67,0,56,59,58,54,54,69],
[57,74,0,58,75,70,61,78],
[64,71,72,0,62,70,70,77],
[77,72,55,68,0,69,57,80],
[70,76,60,60,61,0,70,68],
[77,76,69,60,73,60,0,79],
[65,61,52,53,50,62,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,55,68,68,54,62,58],
[63,0,62,59,64,65,72,65],
[75,68,0,66,71,56,59,68],
[62,71,64,0,68,60,62,69],
[62,66,59,62,0,53,70,59],
[76,65,74,70,77,0,69,61],
[68,58,71,68,60,61,0,58],
[72,65,62,61,71,69,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,62,50,58,56,60,54],
[79,0,82,77,61,78,68,67],
[68,48,0,77,56,55,58,56],
[80,53,53,0,55,71,60,56],
[72,69,74,75,0,78,59,67],
[74,52,75,59,52,0,55,64],
[70,62,72,70,71,75,0,62],
[76,63,74,74,63,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,63,65,64,74,66],
[66,0,66,57,64,57,71,66],
[68,64,0,64,71,65,66,64],
[67,73,66,0,67,64,75,74],
[65,66,59,63,0,51,71,71],
[66,73,65,66,79,0,76,69],
[56,59,64,55,59,54,0,59],
[64,64,66,56,59,61,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,63,78,56,68,68],
[63,0,59,46,63,58,77,57],
[60,71,0,63,60,69,67,61],
[67,84,67,0,77,71,77,61],
[52,67,70,53,0,65,72,55],
[74,72,61,59,65,0,64,55],
[62,53,63,53,58,66,0,62],
[62,73,69,69,75,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,66,86,65,69,64],
[58,0,44,50,62,61,59,50],
[63,86,0,54,86,58,75,59],
[64,80,76,0,81,68,65,84],
[44,68,44,49,0,50,70,55],
[65,69,72,62,80,0,79,58],
[61,71,55,65,60,51,0,62],
[66,80,71,46,75,72,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,65,74,65,60,56],
[67,0,70,69,68,73,67,57],
[58,60,0,57,68,66,52,54],
[65,61,73,0,68,71,60,57],
[56,62,62,62,0,58,56,55],
[65,57,64,59,72,0,57,58],
[70,63,78,70,74,73,0,66],
[74,73,76,73,75,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,45,60,60,61,61,61],
[68,0,59,61,67,78,59,61],
[85,71,0,69,61,75,70,78],
[70,69,61,0,67,86,68,67],
[70,63,69,63,0,76,65,69],
[69,52,55,44,54,0,44,56],
[69,71,60,62,65,86,0,80],
[69,69,52,63,61,74,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,50,62,65,71,55],
[73,0,54,66,57,65,70,54],
[78,76,0,60,74,71,77,73],
[80,64,70,0,59,61,72,61],
[68,73,56,71,0,74,67,62],
[65,65,59,69,56,0,71,64],
[59,60,53,58,63,59,0,57],
[75,76,57,69,68,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,57,54,53,57,67,45],
[43,0,58,66,64,54,62,76],
[73,72,0,63,63,73,87,54],
[76,64,67,0,76,53,67,74],
[77,66,67,54,0,64,78,63],
[73,76,57,77,66,0,79,81],
[63,68,43,63,52,51,0,52],
[85,54,76,56,67,49,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,59,55,52,80,49],
[73,0,62,61,70,56,76,62],
[75,68,0,72,70,63,80,66],
[71,69,58,0,68,57,73,64],
[75,60,60,62,0,65,81,60],
[78,74,67,73,65,0,90,70],
[50,54,50,57,49,40,0,42],
[81,68,64,66,70,60,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,74,74,74,74,33,74],
[56,0,0,74,74,0,56,41],
[56,130,0,130,130,130,56,97],
[56,56,0,0,97,56,56,56],
[56,56,0,33,0,0,56,0],
[56,130,0,74,130,0,56,41],
[97,74,74,74,74,74,0,41],
[56,89,33,74,130,89,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,79,64,58,70,70,68],
[71,0,79,70,59,47,64,59],
[51,51,0,62,48,49,60,40],
[66,60,68,0,63,62,70,58],
[72,71,82,67,0,56,68,67],
[60,83,81,68,74,0,67,63],
[60,66,70,60,62,63,0,61],
[62,71,90,72,63,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,66,60,64,70,59],
[66,0,63,54,56,63,63,60],
[68,67,0,63,66,69,60,65],
[64,76,67,0,69,76,73,73],
[70,74,64,61,0,71,68,61],
[66,67,61,54,59,0,61,57],
[60,67,70,57,62,69,0,65],
[71,70,65,57,69,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,68,68,67,58,73,69],
[67,0,60,62,59,63,70,63],
[62,70,0,63,65,60,67,74],
[62,68,67,0,62,68,72,67],
[63,71,65,68,0,60,69,69],
[72,67,70,62,70,0,65,69],
[57,60,63,58,61,65,0,71],
[61,67,56,63,61,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,69,60,62,67,68],
[58,0,60,67,61,59,61,67],
[69,70,0,75,69,72,55,78],
[61,63,55,0,56,65,60,62],
[70,69,61,74,0,72,65,64],
[68,71,58,65,58,0,59,68],
[63,69,75,70,65,71,0,67],
[62,63,52,68,66,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,63,63,68,73,54],
[70,0,71,59,65,74,74,71],
[64,59,0,70,64,67,65,56],
[67,71,60,0,73,76,72,69],
[67,65,66,57,0,67,74,57],
[62,56,63,54,63,0,63,61],
[57,56,65,58,56,67,0,59],
[76,59,74,61,73,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,50,62,59,56,61],
[75,0,63,60,72,64,64,60],
[68,67,0,59,74,64,65,62],
[80,70,71,0,72,64,63,72],
[68,58,56,58,0,62,61,54],
[71,66,66,66,68,0,62,61],
[74,66,65,67,69,68,0,63],
[69,70,68,58,76,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,53,70,70,53,65,67],
[72,0,66,65,75,67,75,60],
[77,64,0,74,87,65,62,74],
[60,65,56,0,73,56,59,59],
[60,55,43,57,0,53,60,54],
[77,63,65,74,77,0,70,69],
[65,55,68,71,70,60,0,58],
[63,70,56,71,76,61,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,61,76,65,66,61],
[69,0,65,64,76,68,78,62],
[68,65,0,71,79,68,72,64],
[69,66,59,0,69,61,70,65],
[54,54,51,61,0,51,62,50],
[65,62,62,69,79,0,80,64],
[64,52,58,60,68,50,0,60],
[69,68,66,65,80,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,99,56,61,74,49,53,77],
[31,0,47,53,63,47,55,69],
[74,83,0,67,72,38,69,100],
[69,77,63,0,91,65,65,83],
[56,67,58,39,0,54,49,77],
[81,83,92,65,76,0,76,92],
[77,75,61,65,81,54,0,83],
[53,61,30,47,53,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,80,54,72,84,81],
[57,0,65,58,49,60,80,64],
[60,65,0,61,52,74,75,71],
[50,72,69,0,59,61,65,62],
[76,81,78,71,0,64,85,75],
[58,70,56,69,66,0,75,63],
[46,50,55,65,45,55,0,57],
[49,66,59,68,55,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,64,63,72,70,59],
[69,0,65,71,71,70,68,67],
[62,65,0,70,69,68,74,71],
[66,59,60,0,66,70,68,69],
[67,59,61,64,0,68,69,65],
[58,60,62,60,62,0,67,63],
[60,62,56,62,61,63,0,66],
[71,63,59,61,65,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,46,67,80,65,57],
[62,0,56,46,59,62,47,52],
[68,74,0,50,50,54,51,64],
[84,84,80,0,73,86,68,57],
[63,71,80,57,0,57,52,53],
[50,68,76,44,73,0,62,68],
[65,83,79,62,78,68,0,70],
[73,78,66,73,77,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,77,65,65,67,64],
[64,0,84,69,64,67,70,69],
[56,46,0,58,60,68,59,50],
[53,61,72,0,54,62,66,57],
[65,66,70,76,0,69,65,57],
[65,63,62,68,61,0,59,67],
[63,60,71,64,65,71,0,61],
[66,61,80,73,73,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,75,73,65,62,80,53],
[70,0,57,66,46,59,72,60],
[55,73,0,63,42,54,80,41],
[57,64,67,0,52,59,80,60],
[65,84,88,78,0,77,85,76],
[68,71,76,71,53,0,83,65],
[50,58,50,50,45,47,0,57],
[77,70,89,70,54,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,70,68,60,71,69],
[61,0,65,62,68,65,84,60],
[67,65,0,60,70,66,86,66],
[60,68,70,0,66,72,82,61],
[62,62,60,64,0,59,77,69],
[70,65,64,58,71,0,69,58],
[59,46,44,48,53,61,0,50],
[61,70,64,69,61,72,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,41,62,54,38,65,42],
[64,0,44,73,58,48,64,47],
[89,86,0,81,72,57,88,73],
[68,57,49,0,48,41,56,46],
[76,72,58,82,0,65,58,64],
[92,82,73,89,65,0,91,64],
[65,66,42,74,72,39,0,54],
[88,83,57,84,66,66,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,105,90,48,40,94,61,105],
[25,0,54,54,25,77,38,54],
[40,76,0,69,65,69,40,40],
[82,76,61,0,38,94,95,82],
[90,105,65,92,0,69,90,90],
[36,53,61,36,61,0,34,72],
[69,92,90,35,40,96,0,69],
[25,76,90,48,40,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,69,73,59,92,75,75],
[52,0,65,73,66,66,59,68],
[61,65,0,67,55,64,64,61],
[57,57,63,0,49,62,67,58],
[71,64,75,81,0,65,78,60],
[38,64,66,68,65,0,58,56],
[55,71,66,63,52,72,0,63],
[55,62,69,72,70,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,59,61,62,64,63],
[71,0,70,64,67,70,73,71],
[65,60,0,58,66,65,57,64],
[71,66,72,0,76,74,72,62],
[69,63,64,54,0,73,70,62],
[68,60,65,56,57,0,64,64],
[66,57,73,58,60,66,0,61],
[67,59,66,68,68,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,71,53,68,67,64],
[70,0,67,64,68,69,76,66],
[71,63,0,68,65,71,74,66],
[59,66,62,0,53,67,54,58],
[77,62,65,77,0,75,75,72],
[62,61,59,63,55,0,61,66],
[63,54,56,76,55,69,0,57],
[66,64,64,72,58,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,73,67,59,70,64,62],
[54,0,69,79,60,67,57,56],
[57,61,0,66,45,59,54,53],
[63,51,64,0,52,64,50,60],
[71,70,85,78,0,78,62,75],
[60,63,71,66,52,0,57,65],
[66,73,76,80,68,73,0,64],
[68,74,77,70,55,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,81,67,71,65,79,67],
[55,0,63,60,53,42,66,53],
[49,67,0,67,55,70,65,54],
[63,70,63,0,77,61,71,58],
[59,77,75,53,0,62,64,65],
[65,88,60,69,68,0,77,54],
[51,64,65,59,66,53,0,52],
[63,77,76,72,65,76,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,60,61,72,39,76,52],
[62,0,60,68,63,51,66,53],
[70,70,0,59,62,56,65,67],
[69,62,71,0,72,69,66,69],
[58,67,68,58,0,56,63,63],
[91,79,74,61,74,0,80,72],
[54,64,65,64,67,50,0,48],
[78,77,63,61,67,58,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,66,59,57,50,53],
[59,0,66,65,64,60,53,54],
[64,64,0,70,65,63,65,54],
[64,65,60,0,59,56,57,57],
[71,66,65,71,0,65,57,61],
[73,70,67,74,65,0,58,62],
[80,77,65,73,73,72,0,68],
[77,76,76,73,69,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,46,58,63,55,62],
[74,0,66,57,74,74,60,67],
[70,64,0,64,67,71,59,67],
[84,73,66,0,62,73,66,71],
[72,56,63,68,0,70,54,70],
[67,56,59,57,60,0,57,62],
[75,70,71,64,76,73,0,77],
[68,63,63,59,60,68,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,58,53,65,68,62],
[64,0,57,60,56,62,59,67],
[74,73,0,74,65,62,70,72],
[72,70,56,0,60,67,69,76],
[77,74,65,70,0,71,64,68],
[65,68,68,63,59,0,58,59],
[62,71,60,61,66,72,0,62],
[68,63,58,54,62,71,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,77,59,47,58,57,62],
[75,0,74,67,62,67,59,59],
[53,56,0,55,47,65,67,50],
[71,63,75,0,58,68,75,72],
[83,68,83,72,0,68,73,60],
[72,63,65,62,62,0,63,39],
[73,71,63,55,57,67,0,56],
[68,71,80,58,70,91,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,62,68,67,61,60],
[74,0,64,73,72,69,69,69],
[69,66,0,64,69,73,75,72],
[68,57,66,0,60,66,66,68],
[62,58,61,70,0,64,57,64],
[63,61,57,64,66,0,67,68],
[69,61,55,64,73,63,0,60],
[70,61,58,62,66,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,58,18,8,18,34,34],
[114,0,92,44,84,46,72,98],
[72,38,0,68,58,48,48,64],
[112,86,62,0,98,78,62,112],
[122,46,72,32,0,64,56,74],
[112,84,82,52,66,0,82,66],
[96,58,82,68,74,48,0,88],
[96,32,66,18,56,64,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,65,67,61,63,65],
[59,0,72,67,64,66,67,65],
[62,58,0,53,59,63,61,61],
[65,63,77,0,62,70,70,69],
[63,66,71,68,0,69,69,61],
[69,64,67,60,61,0,70,58],
[67,63,69,60,61,60,0,61],
[65,65,69,61,69,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,59,72,86,65,56],
[64,0,79,63,71,80,84,71],
[59,51,0,72,53,44,49,49],
[71,67,58,0,75,67,71,48],
[58,59,77,55,0,70,81,61],
[44,50,86,63,60,0,80,55],
[65,46,81,59,49,50,0,47],
[74,59,81,82,69,75,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,70,58,79,47,61,54],
[43,0,58,46,65,37,40,38],
[60,72,0,42,65,31,48,55],
[72,84,88,0,84,67,78,48],
[51,65,65,46,0,43,47,26],
[83,93,99,63,87,0,66,81],
[69,90,82,52,83,64,0,67],
[76,92,75,82,104,49,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,58,66,56,57,63],
[75,0,81,67,63,72,62,67],
[62,49,0,55,48,56,56,59],
[72,63,75,0,59,67,65,72],
[64,67,82,71,0,68,66,72],
[74,58,74,63,62,0,67,70],
[73,68,74,65,64,63,0,68],
[67,63,71,58,58,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,64,66,62,60,63],
[72,0,74,74,65,69,70,72],
[65,56,0,72,64,63,65,64],
[66,56,58,0,58,53,61,61],
[64,65,66,72,0,65,58,64],
[68,61,67,77,65,0,66,75],
[70,60,65,69,72,64,0,68],
[67,58,66,69,66,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,63,70,84,39,51],
[73,0,97,100,49,77,54,51],
[73,33,0,55,73,33,51,73],
[67,30,75,0,46,32,57,45],
[60,81,57,84,0,59,60,75],
[46,53,97,98,71,0,74,51],
[91,76,79,73,70,56,0,45],
[79,79,57,85,55,79,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,63,70,71,74,64],
[66,0,66,66,65,70,70,59],
[65,64,0,62,63,61,61,71],
[67,64,68,0,76,74,73,68],
[60,65,67,54,0,64,62,58],
[59,60,69,56,66,0,66,60],
[56,60,69,57,68,64,0,57],
[66,71,59,62,72,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,84,67,69,84,64,70],
[75,0,79,34,64,93,72,64],
[46,51,0,51,62,83,64,62],
[63,96,79,0,80,83,82,69],
[61,66,68,50,0,95,63,84],
[46,37,47,47,35,0,44,53],
[66,58,66,48,67,86,0,65],
[60,66,68,61,46,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,84,76,80,64,77,73],
[69,0,63,57,69,49,64,59],
[46,67,0,61,77,61,79,65],
[54,73,69,0,85,70,65,65],
[50,61,53,45,0,54,70,53],
[66,81,69,60,76,0,80,57],
[53,66,51,65,60,50,0,52],
[57,71,65,65,77,73,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,65,68,63,64,67],
[61,0,59,59,66,61,66,69],
[68,71,0,62,67,61,63,74],
[65,71,68,0,69,65,72,71],
[62,64,63,61,0,56,57,70],
[67,69,69,65,74,0,60,75],
[66,64,67,58,73,70,0,71],
[63,61,56,59,60,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,58,58,56,46,52,27],
[68,0,59,51,88,78,74,53],
[72,71,0,57,80,73,68,76],
[72,79,73,0,77,66,70,44],
[74,42,50,53,0,65,70,37],
[84,52,57,64,65,0,79,45],
[78,56,62,60,60,51,0,54],
[103,77,54,86,93,85,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,67,78,63,74,66],
[63,0,70,70,71,70,69,67],
[57,60,0,64,69,64,65,60],
[63,60,66,0,71,61,72,63],
[52,59,61,59,0,53,65,61],
[67,60,66,69,77,0,75,72],
[56,61,65,58,65,55,0,62],
[64,63,70,67,69,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,60,57,34,47,62,70],
[81,0,81,92,73,64,85,85],
[70,49,0,74,44,72,64,68],
[73,38,56,0,53,68,73,73],
[96,57,86,77,0,75,95,86],
[83,66,58,62,55,0,81,75],
[68,45,66,57,35,49,0,76],
[60,45,62,57,44,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,59,69,70,66,58],
[69,0,62,64,65,65,68,60],
[65,68,0,63,64,69,63,62],
[71,66,67,0,73,74,66,65],
[61,65,66,57,0,66,63,58],
[60,65,61,56,64,0,68,57],
[64,62,67,64,67,62,0,52],
[72,70,68,65,72,73,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,57,75,75,68,90],
[68,0,62,57,71,64,50,65],
[62,68,0,75,58,68,64,68],
[73,73,55,0,69,53,55,73],
[55,59,72,61,0,65,51,67],
[55,66,62,77,65,0,56,72],
[62,80,66,75,79,74,0,92],
[40,65,62,57,63,58,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,54,69,62,68,54],
[72,0,65,62,68,72,79,56],
[69,65,0,56,68,71,77,58],
[76,68,74,0,70,72,79,65],
[61,62,62,60,0,68,67,56],
[68,58,59,58,62,0,68,54],
[62,51,53,51,63,62,0,60],
[76,74,72,65,74,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,53,65,68,58,54],
[63,0,60,62,77,68,69,53],
[61,70,0,47,73,63,68,51],
[77,68,83,0,77,62,82,65],
[65,53,57,53,0,57,69,47],
[62,62,67,68,73,0,70,54],
[72,61,62,48,61,60,0,42],
[76,77,79,65,83,76,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,70,73,66,76,71],
[69,0,58,76,58,70,71,68],
[72,72,0,74,63,72,78,75],
[60,54,56,0,50,63,66,66],
[57,72,67,80,0,78,85,76],
[64,60,58,67,52,0,63,73],
[54,59,52,64,45,67,0,69],
[59,62,55,64,54,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,70,71,68,64,75,76],
[54,0,54,61,59,47,56,63],
[60,76,0,66,60,65,64,58],
[59,69,64,0,68,65,69,62],
[62,71,70,62,0,66,66,66],
[66,83,65,65,64,0,72,57],
[55,74,66,61,64,58,0,67],
[54,67,72,68,64,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,70,67,67,60,70],
[69,0,65,72,65,56,65,69],
[70,65,0,65,68,69,59,70],
[60,58,65,0,68,65,66,68],
[63,65,62,62,0,63,55,62],
[63,74,61,65,67,0,62,76],
[70,65,71,64,75,68,0,78],
[60,61,60,62,68,54,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,54,58,50,80,78,67],
[64,0,48,49,51,56,69,63],
[76,82,0,64,61,67,83,76],
[72,81,66,0,55,68,84,62],
[80,79,69,75,0,74,89,64],
[50,74,63,62,56,0,65,59],
[52,61,47,46,41,65,0,60],
[63,67,54,68,66,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,72,52,66,74,51],
[62,0,73,82,68,71,76,73],
[67,57,0,61,51,65,68,56],
[58,48,69,0,52,56,57,54],
[78,62,79,78,0,72,72,70],
[64,59,65,74,58,0,62,55],
[56,54,62,73,58,68,0,57],
[79,57,74,76,60,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,81,60,36,74,49,50],
[51,0,38,60,46,51,34,77],
[49,92,0,39,17,51,71,39],
[70,70,91,0,70,72,53,33],
[94,84,113,60,0,45,85,33],
[56,79,79,58,85,0,54,60],
[81,96,59,77,45,76,0,50],
[80,53,91,97,97,70,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,62,60,58,57,60,62],
[66,0,60,71,62,59,72,61],
[68,70,0,60,52,61,53,61],
[70,59,70,0,59,57,59,64],
[72,68,78,71,0,72,76,60],
[73,71,69,73,58,0,71,71],
[70,58,77,71,54,59,0,66],
[68,69,69,66,70,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,76,70,71,53,68],
[65,0,74,74,68,72,63,65],
[57,56,0,68,54,64,60,54],
[54,56,62,0,65,67,63,67],
[60,62,76,65,0,67,63,70],
[59,58,66,63,63,0,67,60],
[77,67,70,67,67,63,0,57],
[62,65,76,63,60,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,66,76,75,61,75,69],
[52,0,63,65,67,64,55,70],
[64,67,0,65,54,61,63,60],
[54,65,65,0,75,66,62,44],
[55,63,76,55,0,52,51,61],
[69,66,69,64,78,0,60,68],
[55,75,67,68,79,70,0,62],
[61,60,70,86,69,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,67,64,64,61,68],
[62,0,59,68,64,62,58,64],
[66,71,0,64,70,68,72,64],
[63,62,66,0,58,60,57,60],
[66,66,60,72,0,65,57,66],
[66,68,62,70,65,0,60,60],
[69,72,58,73,73,70,0,63],
[62,66,66,70,64,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,72,66,67,58,68],
[65,0,68,67,60,71,58,56],
[76,62,0,77,73,77,68,77],
[58,63,53,0,55,59,49,61],
[64,70,57,75,0,71,56,66],
[63,59,53,71,59,0,61,65],
[72,72,62,81,74,69,0,67],
[62,74,53,69,64,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,79,63,65,69,63,53],
[69,0,82,78,80,49,69,65],
[51,48,0,49,33,27,45,40],
[67,52,81,0,53,44,68,42],
[65,50,97,77,0,74,53,60],
[61,81,103,86,56,0,69,68],
[67,61,85,62,77,61,0,79],
[77,65,90,88,70,62,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,65,66,85,73,91],
[77,0,62,50,61,64,55,64],
[64,68,0,69,38,51,69,70],
[65,80,61,0,63,73,85,92],
[64,69,92,67,0,74,71,91],
[45,66,79,57,56,0,67,53],
[57,75,61,45,59,63,0,72],
[39,66,60,38,39,77,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,68,85,76,62,63,49],
[79,0,75,82,80,74,79,65],
[62,55,0,86,72,52,63,49],
[45,48,44,0,65,50,51,49],
[54,50,58,65,0,58,69,52],
[68,56,78,80,72,0,67,59],
[67,51,67,79,61,63,0,40],
[81,65,81,81,78,71,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,61,60,63,66,62],
[58,0,55,62,68,63,66,58],
[69,75,0,74,65,69,64,71],
[69,68,56,0,65,66,74,60],
[70,62,65,65,0,67,74,71],
[67,67,61,64,63,0,73,71],
[64,64,66,56,56,57,0,61],
[68,72,59,70,59,59,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,73,70,72,69,71],
[60,0,63,63,65,72,62,62],
[66,67,0,68,67,72,65,69],
[57,67,62,0,62,72,63,64],
[60,65,63,68,0,72,61,65],
[58,58,58,58,58,0,59,62],
[61,68,65,67,69,71,0,61],
[59,68,61,66,65,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,93,71,99,81,64,85],
[48,0,84,73,99,91,56,72],
[37,46,0,66,114,46,64,78],
[59,57,64,0,99,57,70,105],
[31,31,16,31,0,32,33,79],
[49,39,84,73,98,0,46,84],
[66,74,66,60,97,84,0,114],
[45,58,52,25,51,46,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,64,57,62,58,66],
[61,0,61,52,66,58,63,77],
[73,69,0,66,63,86,70,67],
[66,78,64,0,71,74,74,73],
[73,64,67,59,0,71,64,75],
[68,72,44,56,59,0,55,61],
[72,67,60,56,66,75,0,72],
[64,53,63,57,55,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,63,76,64,67,73,60],
[53,0,62,70,59,62,66,60],
[67,68,0,69,55,69,67,60],
[54,60,61,0,60,59,57,56],
[66,71,75,70,0,63,73,74],
[63,68,61,71,67,0,59,64],
[57,64,63,73,57,71,0,62],
[70,70,70,74,56,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,102,106,89,33,35,79,34],
[28,0,38,37,53,37,63,38],
[24,92,0,61,41,25,79,42],
[41,93,69,0,74,26,26,75],
[97,77,89,56,0,44,64,36],
[95,93,105,104,86,0,62,87],
[51,67,51,104,66,68,0,67],
[96,92,88,55,94,43,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,60,65,64,73,68,67],
[64,0,70,65,67,76,69,70],
[70,60,0,64,61,64,62,63],
[65,65,66,0,63,71,60,60],
[66,63,69,67,0,71,63,69],
[57,54,66,59,59,0,57,59],
[62,61,68,70,67,73,0,64],
[63,60,67,70,61,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,65,62,63,62,56,60],
[80,0,64,85,75,68,76,71],
[65,66,0,71,75,60,67,65],
[68,45,59,0,67,56,61,69],
[67,55,55,63,0,62,60,67],
[68,62,70,74,68,0,75,66],
[74,54,63,69,70,55,0,66],
[70,59,65,61,63,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,70,65,63,57,57],
[60,0,61,62,70,57,55,63],
[62,69,0,79,61,65,65,66],
[60,68,51,0,60,62,64,63],
[65,60,69,70,0,53,59,55],
[67,73,65,68,77,0,65,62],
[73,75,65,66,71,65,0,70],
[73,67,64,67,75,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,50,65,63,54,59,56],
[75,0,70,67,74,64,63,72],
[80,60,0,68,77,67,65,78],
[65,63,62,0,66,62,59,67],
[67,56,53,64,0,53,58,61],
[76,66,63,68,77,0,66,75],
[71,67,65,71,72,64,0,74],
[74,58,52,63,69,55,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,62,67,61,64,55],
[67,0,65,67,76,63,58,54],
[70,65,0,75,70,63,58,65],
[68,63,55,0,66,59,62,71],
[63,54,60,64,0,63,65,48],
[69,67,67,71,67,0,67,60],
[66,72,72,68,65,63,0,59],
[75,76,65,59,82,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,61,60,57,52,60],
[67,0,66,65,64,56,66,67],
[77,64,0,65,73,67,68,69],
[69,65,65,0,66,61,63,70],
[70,66,57,64,0,60,62,66],
[73,74,63,69,70,0,70,69],
[78,64,62,67,68,60,0,66],
[70,63,61,60,64,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,77,79,87,69,68,70],
[71,0,72,73,71,74,74,63],
[53,58,0,59,61,59,67,57],
[51,57,71,0,70,59,66,68],
[43,59,69,60,0,61,67,61],
[61,56,71,71,69,0,64,65],
[62,56,63,64,63,66,0,68],
[60,67,73,62,69,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,77,67,74,66,54],
[72,0,65,79,67,86,73,74],
[71,65,0,78,74,87,82,71],
[53,51,52,0,62,65,60,50],
[63,63,56,68,0,77,68,65],
[56,44,43,65,53,0,56,52],
[64,57,48,70,62,74,0,59],
[76,56,59,80,65,78,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,66,69,57,61,66],
[64,0,68,70,63,66,66,63],
[68,62,0,70,75,60,64,67],
[64,60,60,0,62,64,62,51],
[61,67,55,68,0,56,69,61],
[73,64,70,66,74,0,75,59],
[69,64,66,68,61,55,0,57],
[64,67,63,79,69,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,79,64,64,59,59,64],
[60,0,89,84,99,82,74,46],
[51,41,0,70,67,68,43,35],
[66,46,60,0,91,74,37,63],
[66,31,63,39,0,62,43,47],
[71,48,62,56,68,0,63,65],
[71,56,87,93,87,67,0,58],
[66,84,95,67,83,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,90,53,71,65,62],
[54,0,69,87,52,68,63,61],
[65,61,0,93,78,60,70,54],
[40,43,37,0,50,63,49,49],
[77,78,52,80,0,80,67,71],
[59,62,70,67,50,0,75,61],
[65,67,60,81,63,55,0,64],
[68,69,76,81,59,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,57,60,62,62,60],
[66,0,69,61,59,62,65,71],
[67,61,0,65,69,59,64,64],
[73,69,65,0,70,66,59,70],
[70,71,61,60,0,58,56,59],
[68,68,71,64,72,0,56,63],
[68,65,66,71,74,74,0,67],
[70,59,66,60,71,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,63,63,57,70,59],
[61,0,64,64,58,62,58,55],
[67,66,0,55,68,68,72,61],
[67,66,75,0,62,60,69,62],
[67,72,62,68,0,53,72,65],
[73,68,62,70,77,0,65,69],
[60,72,58,61,58,65,0,55],
[71,75,69,68,65,61,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,73,69,62,74,80,68],
[46,0,55,52,51,46,50,52],
[57,75,0,68,62,63,56,62],
[61,78,62,0,61,64,67,68],
[68,79,68,69,0,78,67,60],
[56,84,67,66,52,0,66,63],
[50,80,74,63,63,64,0,68],
[62,78,68,62,70,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,62,65,58,66,68],
[60,0,82,56,56,73,65,79],
[53,48,0,49,49,53,55,65],
[68,74,81,0,64,58,74,93],
[65,74,81,66,0,54,69,82],
[72,57,77,72,76,0,67,83],
[64,65,75,56,61,63,0,79],
[62,51,65,37,48,47,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,68,61,68,54,65],
[76,0,65,79,71,75,67,73],
[69,65,0,78,67,71,66,65],
[62,51,52,0,63,66,49,60],
[69,59,63,67,0,67,65,68],
[62,55,59,64,63,0,59,51],
[76,63,64,81,65,71,0,80],
[65,57,65,70,62,79,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,65,73,64,69,63],
[67,0,50,50,59,53,63,66],
[66,80,0,59,69,67,76,77],
[65,80,71,0,79,69,69,64],
[57,71,61,51,0,61,65,63],
[66,77,63,61,69,0,55,67],
[61,67,54,61,65,75,0,78],
[67,64,53,66,67,63,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,75,72,68,70,63,64],
[57,0,60,71,66,64,58,62],
[55,70,0,78,73,69,74,56],
[58,59,52,0,63,66,62,54],
[62,64,57,67,0,56,62,57],
[60,66,61,64,74,0,59,63],
[67,72,56,68,68,71,0,72],
[66,68,74,76,73,67,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,71,78,54,61,55,72],
[74,0,78,74,66,66,68,59],
[59,52,0,71,56,74,55,59],
[52,56,59,0,51,59,51,61],
[76,64,74,79,0,67,67,71],
[69,64,56,71,63,0,70,66],
[75,62,75,79,63,60,0,67],
[58,71,71,69,59,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,63,56,61,62,62],
[71,0,61,57,52,56,53,61],
[79,69,0,68,82,69,63,78],
[67,73,62,0,75,49,39,59],
[74,78,48,55,0,52,49,70],
[69,74,61,81,78,0,76,86],
[68,77,67,91,81,54,0,87],
[68,69,52,71,60,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,84,74,69,78,80,74],
[75,0,80,84,80,93,64,86],
[46,50,0,51,59,72,56,63],
[56,46,79,0,65,80,62,73],
[61,50,71,65,0,67,59,57],
[52,37,58,50,63,0,64,48],
[50,66,74,68,71,66,0,72],
[56,44,67,57,73,82,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,69,64,71,62,74],
[59,0,63,54,68,66,62,61],
[68,67,0,62,66,72,65,72],
[61,76,68,0,69,74,73,74],
[66,62,64,61,0,70,65,74],
[59,64,58,56,60,0,61,60],
[68,68,65,57,65,69,0,67],
[56,69,58,56,56,70,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,55,66,59,59,65],
[62,0,67,54,63,55,52,64],
[68,63,0,57,72,63,65,73],
[75,76,73,0,69,61,68,70],
[64,67,58,61,0,65,65,66],
[71,75,67,69,65,0,71,68],
[71,78,65,62,65,59,0,64],
[65,66,57,60,64,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,73,70,60,71,60,71],
[51,0,67,58,56,68,62,69],
[57,63,0,62,60,70,57,71],
[60,72,68,0,65,72,64,81],
[70,74,70,65,0,68,71,81],
[59,62,60,58,62,0,55,78],
[70,68,73,66,59,75,0,86],
[59,61,59,49,49,52,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,83,63,64,82,89],
[62,0,60,44,63,70,82,56],
[63,70,0,49,69,42,73,56],
[47,86,81,0,85,65,72,80],
[67,67,61,45,0,83,60,64],
[66,60,88,65,47,0,69,57],
[48,48,57,58,70,61,0,54],
[41,74,74,50,66,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,58,56,63,49,77,54],
[52,0,68,55,57,58,60,65],
[72,62,0,66,60,61,78,59],
[74,75,64,0,62,54,64,57],
[67,73,70,68,0,67,81,62],
[81,72,69,76,63,0,70,67],
[53,70,52,66,49,60,0,50],
[76,65,71,73,68,63,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,68,72,80,73,74,64],
[51,0,64,66,72,56,63,64],
[62,66,0,62,79,64,70,61],
[58,64,68,0,87,52,72,70],
[50,58,51,43,0,39,57,47],
[57,74,66,78,91,0,71,69],
[56,67,60,58,73,59,0,61],
[66,66,69,60,83,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,67,50,75,69,110],
[55,0,102,70,91,88,84,102],
[55,28,0,23,88,53,56,76],
[63,60,107,0,69,68,96,98],
[80,39,42,61,0,61,54,78],
[55,42,77,62,69,0,70,99],
[61,46,74,34,76,60,0,92],
[20,28,54,32,52,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,71,74,72,62,78,67],
[75,0,75,62,59,57,60,64],
[59,55,0,79,71,69,66,73],
[56,68,51,0,63,55,55,65],
[58,71,59,67,0,70,63,77],
[68,73,61,75,60,0,68,73],
[52,70,64,75,67,62,0,59],
[63,66,57,65,53,57,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,70,49,55,53,68,62],
[81,0,74,38,47,66,67,62],
[60,56,0,44,36,47,73,80],
[81,92,86,0,63,63,66,69],
[75,83,94,67,0,56,83,83],
[77,64,83,67,74,0,89,84],
[62,63,57,64,47,41,0,74],
[68,68,50,61,47,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,72,61,62,68,67,76],
[60,0,65,62,65,64,62,72],
[58,65,0,57,61,75,65,76],
[69,68,73,0,72,64,73,76],
[68,65,69,58,0,64,59,77],
[62,66,55,66,66,0,68,81],
[63,68,65,57,71,62,0,69],
[54,58,54,54,53,49,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,62,58,60,60,52,76],
[76,0,74,76,73,62,68,69],
[68,56,0,63,64,50,49,60],
[72,54,67,0,63,62,56,74],
[70,57,66,67,0,52,56,72],
[70,68,80,68,78,0,58,75],
[78,62,81,74,74,72,0,87],
[54,61,70,56,58,55,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,73,69,60,71,72,68],
[56,0,62,66,59,61,61,56],
[57,68,0,58,57,64,61,49],
[61,64,72,0,52,71,61,60],
[70,71,73,78,0,70,68,50],
[59,69,66,59,60,0,72,60],
[58,69,69,69,62,58,0,53],
[62,74,81,70,80,70,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,65,82,52,68,57],
[67,0,57,58,79,44,62,64],
[65,73,0,58,79,60,64,56],
[65,72,72,0,85,63,69,57],
[48,51,51,45,0,59,53,44],
[78,86,70,67,71,0,69,65],
[62,68,66,61,77,61,0,54],
[73,66,74,73,86,65,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,63,64,67,67,66],
[64,0,64,62,63,75,59,69],
[57,66,0,55,62,67,61,60],
[67,68,75,0,65,63,69,61],
[66,67,68,65,0,72,61,71],
[63,55,63,67,58,0,60,65],
[63,71,69,61,69,70,0,65],
[64,61,70,69,59,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,62,63,60,67,71],
[65,0,73,66,64,59,67,72],
[61,57,0,60,60,54,62,65],
[68,64,70,0,65,70,72,66],
[67,66,70,65,0,60,67,72],
[70,71,76,60,70,0,72,75],
[63,63,68,58,63,58,0,65],
[59,58,65,64,58,55,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,73,79,64,71,61],
[59,0,61,69,74,63,61,69],
[71,69,0,65,81,70,67,62],
[57,61,65,0,69,63,64,72],
[51,56,49,61,0,65,50,57],
[66,67,60,67,65,0,61,63],
[59,69,63,66,80,69,0,74],
[69,61,68,58,73,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,71,68,71,53,66],
[66,0,72,75,74,77,65,73],
[66,58,0,76,63,72,59,66],
[59,55,54,0,65,63,65,68],
[62,56,67,65,0,67,53,67],
[59,53,58,67,63,0,59,65],
[77,65,71,65,77,71,0,77],
[64,57,64,62,63,65,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,75,67,71,68,68],
[65,0,69,76,70,77,72,71],
[62,61,0,68,67,60,51,62],
[55,54,62,0,59,64,58,57],
[63,60,63,71,0,65,58,62],
[59,53,70,66,65,0,60,65],
[62,58,79,72,72,70,0,69],
[62,59,68,73,68,65,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,70,66,66,81,61,59],
[78,0,66,81,62,74,73,69],
[60,64,0,59,65,72,62,62],
[64,49,71,0,51,68,56,53],
[64,68,65,79,0,78,69,70],
[49,56,58,62,52,0,59,58],
[69,57,68,74,61,71,0,64],
[71,61,68,77,60,72,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,47,70,77,30,97,73],
[51,0,67,38,81,34,48,33],
[83,63,0,38,85,68,54,33],
[60,92,92,0,105,43,74,52],
[53,49,45,25,0,29,71,33],
[100,96,62,87,101,0,100,85],
[33,82,76,56,59,30,0,43],
[57,97,97,78,97,45,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,89,58,69,63,58,49],
[53,0,64,52,54,67,64,42],
[41,66,0,47,53,48,48,50],
[72,78,83,0,77,75,82,65],
[61,76,77,53,0,60,63,55],
[67,63,82,55,70,0,66,53],
[72,66,82,48,67,64,0,53],
[81,88,80,65,75,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,64,64,65,79,60,70],
[73,0,71,75,69,79,65,74],
[66,59,0,68,60,70,56,61],
[66,55,62,0,66,70,56,64],
[65,61,70,64,0,67,62,64],
[51,51,60,60,63,0,58,64],
[70,65,74,74,68,72,0,69],
[60,56,69,66,66,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,53,83,69,70,57,58],
[68,0,63,81,75,69,68,69],
[77,67,0,78,63,69,62,54],
[47,49,52,0,62,56,44,49],
[61,55,67,68,0,56,58,45],
[60,61,61,74,74,0,62,59],
[73,62,68,86,72,68,0,60],
[72,61,76,81,85,71,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,57,70,67,63,63],
[63,0,52,56,62,67,60,57],
[65,78,0,64,77,76,68,67],
[73,74,66,0,65,67,61,66],
[60,68,53,65,0,68,49,56],
[63,63,54,63,62,0,58,53],
[67,70,62,69,81,72,0,64],
[67,73,63,64,74,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,65,78,63,64,62],
[59,0,68,65,69,66,64,70],
[60,62,0,59,72,74,66,61],
[65,65,71,0,72,61,66,70],
[52,61,58,58,0,61,63,57],
[67,64,56,69,69,0,74,56],
[66,66,64,64,67,56,0,64],
[68,60,69,60,73,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,57,76,66,61,83,81],
[75,0,79,69,68,58,78,77],
[73,51,0,65,52,67,95,67],
[54,61,65,0,58,55,78,71],
[64,62,78,72,0,84,86,85],
[69,72,63,75,46,0,82,71],
[47,52,35,52,44,48,0,54],
[49,53,63,59,45,59,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,71,66,65,61,67,65],
[52,0,54,57,43,49,53,54],
[59,76,0,62,61,58,59,67],
[64,73,68,0,60,71,67,61],
[65,87,69,70,0,68,62,70],
[69,81,72,59,62,0,65,67],
[63,77,71,63,68,65,0,70],
[65,76,63,69,60,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,64,70,66,58,77],
[62,0,76,63,65,52,64,74],
[60,54,0,72,55,68,47,60],
[66,67,58,0,64,68,69,70],
[60,65,75,66,0,61,62,55],
[64,78,62,62,69,0,68,57],
[72,66,83,61,68,62,0,75],
[53,56,70,60,75,73,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,65,50,66,63,66],
[70,0,46,66,59,64,63,76],
[74,84,0,83,63,83,83,86],
[65,64,47,0,61,63,58,69],
[80,71,67,69,0,71,64,75],
[64,66,47,67,59,0,57,64],
[67,67,47,72,66,73,0,80],
[64,54,44,61,55,66,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,46,56,49,59,61],
[62,0,60,38,35,50,50,37],
[69,70,0,63,48,64,63,67],
[84,92,67,0,54,69,74,82],
[74,95,82,76,0,72,65,71],
[81,80,66,61,58,0,64,69],
[71,80,67,56,65,66,0,71],
[69,93,63,48,59,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,66,64,57,76,70],
[62,0,61,66,65,63,53,61],
[63,69,0,70,83,76,73,68],
[64,64,60,0,63,67,60,63],
[66,65,47,67,0,58,62,63],
[73,67,54,63,72,0,66,63],
[54,77,57,70,68,64,0,69],
[60,69,62,67,67,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,85,81,54,60,56,55],
[74,0,75,104,80,66,48,49],
[45,55,0,77,68,83,46,50],
[49,26,53,0,64,52,46,49],
[76,50,62,66,0,68,90,80],
[70,64,47,78,62,0,71,73],
[74,82,84,84,40,59,0,35],
[75,81,80,81,50,57,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,59,68,56,62,71],
[66,0,61,56,67,48,60,61],
[59,69,0,60,62,60,64,68],
[71,74,70,0,76,70,58,76],
[62,63,68,54,0,52,57,53],
[74,82,70,60,78,0,70,75],
[68,70,66,72,73,60,0,76],
[59,69,62,54,77,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,66,60,72,71,70],
[62,0,66,66,67,63,68,75],
[66,64,0,72,55,62,70,68],
[64,64,58,0,66,58,64,56],
[70,63,75,64,0,68,69,72],
[58,67,68,72,62,0,72,74],
[59,62,60,66,61,58,0,64],
[60,55,62,74,58,56,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,72,68,72,80,73],
[65,0,55,64,59,66,59,50],
[76,75,0,78,65,79,65,64],
[58,66,52,0,55,62,48,56],
[62,71,65,75,0,67,60,63],
[58,64,51,68,63,0,74,65],
[50,71,65,82,70,56,0,71],
[57,80,66,74,67,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,56,68,61,50,59,55],
[76,0,63,65,62,63,62,64],
[74,67,0,74,65,70,76,63],
[62,65,56,0,62,61,60,61],
[69,68,65,68,0,54,80,56],
[80,67,60,69,76,0,72,68],
[71,68,54,70,50,58,0,62],
[75,66,67,69,74,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,56,68,66,66,66],
[61,0,64,58,71,64,62,67],
[69,66,0,57,76,65,63,71],
[74,72,73,0,73,70,69,64],
[62,59,54,57,0,72,53,63],
[64,66,65,60,58,0,64,64],
[64,68,67,61,77,66,0,68],
[64,63,59,66,67,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,83,59,58,64,57,62],
[61,0,74,67,49,68,73,68],
[47,56,0,52,46,45,42,51],
[71,63,78,0,59,57,70,75],
[72,81,84,71,0,62,80,64],
[66,62,85,73,68,0,78,41],
[73,57,88,60,50,52,0,54],
[68,62,79,55,66,89,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,95,82,72,76,66],
[71,0,71,80,74,68,69,62],
[64,59,0,84,65,77,68,60],
[35,50,46,0,40,57,50,35],
[48,56,65,90,0,64,74,60],
[58,62,53,73,66,0,68,64],
[54,61,62,80,56,62,0,67],
[64,68,70,95,70,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,75,86,76,76,68,63],
[44,0,43,62,55,61,67,51],
[55,87,0,84,79,82,72,76],
[44,68,46,0,73,64,52,61],
[54,75,51,57,0,65,49,53],
[54,69,48,66,65,0,58,63],
[62,63,58,78,81,72,0,69],
[67,79,54,69,77,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,56,54,61,63,55,55],
[67,0,66,62,58,59,58,59],
[74,64,0,67,67,62,67,67],
[76,68,63,0,68,59,70,55],
[69,72,63,62,0,69,65,51],
[67,71,68,71,61,0,60,60],
[75,72,63,60,65,70,0,56],
[75,71,63,75,79,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,62,61,72,80,67],
[57,0,52,67,67,72,69,63],
[67,78,0,61,61,65,81,63],
[68,63,69,0,66,71,78,69],
[69,63,69,64,0,68,76,57],
[58,58,65,59,62,0,78,57],
[50,61,49,52,54,52,0,56],
[63,67,67,61,73,73,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,80,65,77,82,67],
[59,0,67,67,72,83,73,77],
[65,63,0,68,55,67,74,67],
[50,63,62,0,55,71,72,67],
[65,58,75,75,0,65,71,69],
[53,47,63,59,65,0,74,66],
[48,57,56,58,59,56,0,63],
[63,53,63,63,61,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,50,49,70,63,73,43],
[57,0,69,40,65,52,49,52],
[80,61,0,58,62,68,62,49],
[81,90,72,0,79,87,60,75],
[60,65,68,51,0,82,48,56],
[67,78,62,43,48,0,62,39],
[57,81,68,70,82,68,0,52],
[87,78,81,55,74,91,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,67,47,49,62,49,56],
[96,0,64,70,76,83,77,69],
[63,66,0,62,48,74,56,62],
[83,60,68,0,79,83,68,73],
[81,54,82,51,0,77,55,68],
[68,47,56,47,53,0,47,47],
[81,53,74,62,75,83,0,50],
[74,61,68,57,62,83,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,70,71,72,69,68],
[65,0,76,78,81,75,76,65],
[60,54,0,60,68,71,68,62],
[60,52,70,0,70,68,65,51],
[59,49,62,60,0,65,63,60],
[58,55,59,62,65,0,65,60],
[61,54,62,65,67,65,0,61],
[62,65,68,79,70,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,86,53,64,66,79],
[71,0,52,81,74,70,68,82],
[70,78,0,76,56,67,75,72],
[44,49,54,0,45,58,63,76],
[77,56,74,85,0,71,66,74],
[66,60,63,72,59,0,61,74],
[64,62,55,67,64,69,0,87],
[51,48,58,54,56,56,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,67,59,58,58,57],
[73,0,57,68,71,66,72,56],
[69,73,0,67,63,65,75,64],
[63,62,63,0,63,58,70,53],
[71,59,67,67,0,72,69,62],
[72,64,65,72,58,0,67,57],
[72,58,55,60,61,63,0,65],
[73,74,66,77,68,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,58,68,53,55,61],
[69,0,55,63,69,63,69,69],
[71,75,0,67,67,64,67,67],
[72,67,63,0,74,65,70,73],
[62,61,63,56,0,59,60,61],
[77,67,66,65,71,0,71,68],
[75,61,63,60,70,59,0,70],
[69,61,63,57,69,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,67,75,74,77,59],
[69,0,67,62,64,72,66,60],
[64,63,0,60,67,71,64,61],
[63,68,70,0,70,77,79,75],
[55,66,63,60,0,75,72,77],
[56,58,59,53,55,0,70,61],
[53,64,66,51,58,60,0,49],
[71,70,69,55,53,69,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,67,62,62,76,51,61],
[81,0,78,53,66,80,68,83],
[63,52,0,41,58,61,62,63],
[68,77,89,0,72,76,65,66],
[68,64,72,58,0,77,54,63],
[54,50,69,54,53,0,41,57],
[79,62,68,65,76,89,0,66],
[69,47,67,64,67,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,48,50,54,57,55],
[94,0,39,52,68,76,49,74],
[91,91,0,79,89,81,64,85],
[82,78,51,0,66,58,38,73],
[80,62,41,64,0,65,59,77],
[76,54,49,72,65,0,66,60],
[73,81,66,92,71,64,0,77],
[75,56,45,57,53,70,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,62,70,65,54,67],
[62,0,75,66,62,64,58,69],
[69,55,0,62,64,71,57,66],
[68,64,68,0,60,58,57,70],
[60,68,66,70,0,61,70,71],
[65,66,59,72,69,0,56,65],
[76,72,73,73,60,74,0,75],
[63,61,64,60,59,65,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,72,65,74,76,62],
[60,0,59,69,66,70,60,60],
[65,71,0,75,63,82,73,61],
[58,61,55,0,54,68,58,53],
[65,64,67,76,0,76,67,65],
[56,60,48,62,54,0,60,45],
[54,70,57,72,63,70,0,59],
[68,70,69,77,65,85,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,57,38,58,45,46],
[64,0,67,51,62,40,42,53],
[74,63,0,76,55,54,49,75],
[73,79,54,0,43,67,49,47],
[92,68,75,87,0,61,53,68],
[72,90,76,63,69,0,61,64],
[85,88,81,81,77,69,0,59],
[84,77,55,83,62,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,55,60,66,67,59],
[68,0,70,60,65,67,64,62],
[70,60,0,57,64,66,63,65],
[75,70,73,0,74,72,74,65],
[70,65,66,56,0,70,71,72],
[64,63,64,58,60,0,58,59],
[63,66,67,56,59,72,0,70],
[71,68,65,65,58,71,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,73,66,65,61,58],
[62,0,68,62,56,55,58,68],
[67,62,0,65,57,59,53,66],
[57,68,65,0,55,54,64,60],
[64,74,73,75,0,68,62,67],
[65,75,71,76,62,0,68,80],
[69,72,77,66,68,62,0,66],
[72,62,64,70,63,50,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,48,68,66,68,69,61],
[54,0,59,64,53,63,65,57],
[82,71,0,71,57,66,67,74],
[62,66,59,0,47,79,63,64],
[64,77,73,83,0,77,68,76],
[62,67,64,51,53,0,51,61],
[61,65,63,67,62,79,0,66],
[69,73,56,66,54,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,53,77,58,75,65,74],
[69,0,59,84,71,76,66,74],
[77,71,0,86,65,78,76,71],
[53,46,44,0,57,54,46,48],
[72,59,65,73,0,62,65,66],
[55,54,52,76,68,0,49,65],
[65,64,54,84,65,81,0,65],
[56,56,59,82,64,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,56,60,49,40,54,55],
[47,0,50,39,42,42,35,58],
[74,80,0,59,61,56,66,51],
[70,91,71,0,55,70,61,45],
[81,88,69,75,0,66,53,73],
[90,88,74,60,64,0,68,82],
[76,95,64,69,77,62,0,52],
[75,72,79,85,57,48,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,52,52,53,57,63],
[75,0,82,65,68,55,41,72],
[69,48,0,52,40,48,44,48],
[78,65,78,0,64,69,42,74],
[78,62,90,66,0,58,50,71],
[77,75,82,61,72,0,69,76],
[73,89,86,88,80,61,0,55],
[67,58,82,56,59,54,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,88,74,63,54,76,72],
[69,0,83,72,61,70,63,79],
[42,47,0,53,46,48,51,49],
[56,58,77,0,58,55,61,72],
[67,69,84,72,0,73,75,62],
[76,60,82,75,57,0,77,61],
[54,67,79,69,55,53,0,77],
[58,51,81,58,68,69,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,62,63,59,55,60],
[68,0,71,71,74,69,69,60],
[73,59,0,63,60,53,60,55],
[68,59,67,0,69,58,59,59],
[67,56,70,61,0,64,54,56],
[71,61,77,72,66,0,67,68],
[75,61,70,71,76,63,0,62],
[70,70,75,71,74,62,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,87,66,81,58,64,76,82],
[43,0,59,53,40,53,52,75],
[64,71,0,56,63,57,56,79],
[49,77,74,0,63,72,67,81],
[72,90,67,67,0,60,77,85],
[66,77,73,58,70,0,64,84],
[54,78,74,63,53,66,0,74],
[48,55,51,49,45,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,67,66,67,65,63],
[66,0,64,62,70,66,61,63],
[67,66,0,56,68,70,59,66],
[63,68,74,0,65,62,75,71],
[64,60,62,65,0,60,64,63],
[63,64,60,68,70,0,66,68],
[65,69,71,55,66,64,0,73],
[67,67,64,59,67,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,75,59,99,68,65],
[57,0,58,58,53,59,61,58],
[70,72,0,78,77,100,65,71],
[55,72,52,0,40,82,52,41],
[71,77,53,90,0,89,77,76],
[31,71,30,48,41,0,46,61],
[62,69,65,78,53,84,0,63],
[65,72,59,89,54,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,67,72,61,59,56,76],
[62,0,80,66,69,70,69,66],
[63,50,0,88,62,72,69,59],
[58,64,42,0,60,65,47,58],
[69,61,68,70,0,72,75,68],
[71,60,58,65,58,0,61,57],
[74,61,61,83,55,69,0,62],
[54,64,71,72,62,73,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,40,54,57,43,43,48],
[76,0,67,79,48,49,63,54],
[90,63,0,76,68,67,65,63],
[76,51,54,0,46,44,55,49],
[73,82,62,84,0,71,60,62],
[87,81,63,86,59,0,56,58],
[87,67,65,75,70,74,0,82],
[82,76,67,81,68,72,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,81,70,59,57,61,51],
[75,0,80,74,60,62,67,63],
[49,50,0,56,55,50,46,51],
[60,56,74,0,60,53,62,53],
[71,70,75,70,0,67,69,63],
[73,68,80,77,63,0,79,67],
[69,63,84,68,61,51,0,61],
[79,67,79,77,67,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,75,60,61,55,62,71],
[71,0,59,66,56,60,68,49],
[55,71,0,61,59,58,61,46],
[70,64,69,0,73,75,67,76],
[69,74,71,57,0,65,69,77],
[75,70,72,55,65,0,68,64],
[68,62,69,63,61,62,0,55],
[59,81,84,54,53,66,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,85,39,27,54,27,91],
[55,0,70,49,67,64,67,109],
[45,60,0,45,54,60,60,109],
[91,81,85,0,103,54,82,109],
[103,63,76,27,0,63,82,109],
[76,66,70,76,67,0,55,94],
[103,63,70,48,48,75,0,91],
[39,21,21,21,21,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,68,62,57,62,63,74],
[74,0,69,59,63,67,68,75],
[62,61,0,55,55,54,63,64],
[68,71,75,0,64,65,75,80],
[73,67,75,66,0,65,73,78],
[68,63,76,65,65,0,75,81],
[67,62,67,55,57,55,0,73],
[56,55,66,50,52,49,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,55,76,66,56,63],
[72,0,67,63,70,64,58,66],
[69,63,0,59,72,64,55,63],
[75,67,71,0,77,72,67,63],
[54,60,58,53,0,56,56,58],
[64,66,66,58,74,0,70,66],
[74,72,75,63,74,60,0,62],
[67,64,67,67,72,64,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,74,91,65,68,80,64],
[53,0,70,70,59,51,69,53],
[56,60,0,66,75,59,82,67],
[39,60,64,0,61,54,63,48],
[65,71,55,69,0,59,74,61],
[62,79,71,76,71,0,79,57],
[50,61,48,67,56,51,0,45],
[66,77,63,82,69,73,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,66,84,67,58,73,59],
[76,0,70,76,71,64,72,67],
[64,60,0,79,75,69,68,68],
[46,54,51,0,69,49,59,55],
[63,59,55,61,0,53,65,64],
[72,66,61,81,77,0,67,70],
[57,58,62,71,65,63,0,63],
[71,63,62,75,66,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,66,60,59,67,67],
[71,0,64,75,73,71,78,73],
[65,66,0,75,73,65,71,63],
[64,55,55,0,62,61,58,62],
[70,57,57,68,0,62,70,69],
[71,59,65,69,68,0,80,72],
[63,52,59,72,60,50,0,58],
[63,57,67,68,61,58,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,61,67,65,67,75,63],
[56,0,51,62,54,64,60,60],
[69,79,0,76,65,75,76,73],
[63,68,54,0,57,59,70,54],
[65,76,65,73,0,72,73,67],
[63,66,55,71,58,0,72,58],
[55,70,54,60,57,58,0,61],
[67,70,57,76,63,72,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,59,56,59,58,60],
[70,0,67,72,59,67,70,72],
[70,63,0,58,59,61,64,63],
[71,58,72,0,62,70,68,67],
[74,71,71,68,0,66,70,63],
[71,63,69,60,64,0,68,66],
[72,60,66,62,60,62,0,69],
[70,58,67,63,67,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,60,59,65,61,62],
[69,0,62,71,67,76,74,70],
[69,68,0,73,63,82,65,66],
[70,59,57,0,60,67,61,64],
[71,63,67,70,0,74,63,64],
[65,54,48,63,56,0,59,53],
[69,56,65,69,67,71,0,64],
[68,60,64,66,66,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,69,75,64,82,73],
[70,0,64,77,77,75,76,75],
[63,66,0,76,66,66,76,73],
[61,53,54,0,65,57,67,59],
[55,53,64,65,0,57,63,67],
[66,55,64,73,73,0,74,69],
[48,54,54,63,67,56,0,66],
[57,55,57,71,63,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,59,65,61,65,69],
[71,0,60,66,76,82,77,65],
[73,70,0,61,73,61,77,80],
[71,64,69,0,68,68,76,69],
[65,54,57,62,0,67,68,71],
[69,48,69,62,63,0,65,67],
[65,53,53,54,62,65,0,64],
[61,65,50,61,59,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,68,69,64,67,62],
[59,0,68,65,68,66,62,68],
[62,62,0,58,63,64,64,63],
[62,65,72,0,72,56,61,60],
[61,62,67,58,0,59,69,66],
[66,64,66,74,71,0,74,65],
[63,68,66,69,61,56,0,67],
[68,62,67,70,64,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,55,57,66,66,61],
[67,0,67,50,63,64,60,56],
[64,63,0,51,58,63,51,52],
[75,80,79,0,76,79,66,63],
[73,67,72,54,0,73,66,66],
[64,66,67,51,57,0,61,64],
[64,70,79,64,64,69,0,67],
[69,74,78,67,64,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,60,65,63,55,78],
[74,0,63,68,67,73,74,88],
[70,67,0,68,65,82,69,83],
[70,62,62,0,69,68,52,66],
[65,63,65,61,0,73,58,69],
[67,57,48,62,57,0,62,70],
[75,56,61,78,72,68,0,83],
[52,42,47,64,61,60,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,63,59,60,48,52,61],
[75,0,73,84,81,83,61,70],
[67,57,0,66,68,67,55,70],
[71,46,64,0,65,60,67,51],
[70,49,62,65,0,62,52,62],
[82,47,63,70,68,0,63,69],
[78,69,75,63,78,67,0,78],
[69,60,60,79,68,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,46,92,82,96,70,92],
[46,0,18,96,54,124,70,96],
[84,112,0,112,56,130,76,98],
[38,34,18,0,60,96,70,92],
[48,76,74,70,0,74,70,70],
[34,6,0,34,56,0,56,34],
[60,60,54,60,60,74,0,74],
[38,34,32,38,60,96,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,75,85,59,87,80,69],
[57,0,60,69,55,60,65,58],
[55,70,0,60,57,77,70,62],
[45,61,70,0,46,73,56,61],
[71,75,73,84,0,74,68,50],
[43,70,53,57,56,0,65,44],
[50,65,60,74,62,65,0,52],
[61,72,68,69,80,86,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,63,56,71,59,71,77],
[76,0,58,77,77,86,81,75],
[67,72,0,47,59,71,54,81],
[74,53,83,0,72,88,66,90],
[59,53,71,58,0,73,52,86],
[71,44,59,42,57,0,61,90],
[59,49,76,64,78,69,0,90],
[53,55,49,40,44,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,63,76,64,53,50],
[73,0,69,65,88,75,55,79],
[75,61,0,57,65,53,80,72],
[67,65,73,0,84,52,65,61],
[54,42,65,46,0,50,61,52],
[66,55,77,78,80,0,74,66],
[77,75,50,65,69,56,0,59],
[80,51,58,69,78,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,61,71,62,69,63],
[74,0,68,66,76,62,70,68],
[65,62,0,61,66,56,68,66],
[69,64,69,0,73,68,77,67],
[59,54,64,57,0,56,62,61],
[68,68,74,62,74,0,69,67],
[61,60,62,53,68,61,0,54],
[67,62,64,63,69,63,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,59,62,68,70,79,68],
[59,0,59,59,58,62,66,59],
[71,71,0,64,64,72,68,57],
[68,71,66,0,63,74,76,69],
[62,72,66,67,0,67,75,60],
[60,68,58,56,63,0,57,46],
[51,64,62,54,55,73,0,53],
[62,71,73,61,70,84,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,0,130,65,0,0],
[65,0,130,65,130,65,65,0],
[65,0,0,0,65,65,0,0],
[130,65,130,0,130,65,0,65],
[0,0,65,0,0,0,0,0],
[65,65,65,65,130,0,0,65],
[130,65,130,130,130,130,0,65],
[130,130,130,65,130,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,76,59,79,55,80,63],
[78,0,85,70,88,77,64,80],
[54,45,0,48,44,60,53,48],
[71,60,82,0,56,64,63,92],
[51,42,86,74,0,62,56,71],
[75,53,70,66,68,0,64,81],
[50,66,77,67,74,66,0,83],
[67,50,82,38,59,49,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,61,67,63,71,61],
[68,0,73,61,77,58,71,64],
[64,57,0,54,68,55,67,62],
[69,69,76,0,79,66,61,63],
[63,53,62,51,0,58,61,65],
[67,72,75,64,72,0,69,64],
[59,59,63,69,69,61,0,65],
[69,66,68,67,65,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,67,67,67,59,85],
[60,0,68,90,78,55,81,77],
[70,62,0,76,65,50,77,74],
[63,40,54,0,73,51,57,59],
[63,52,65,57,0,54,71,72],
[63,75,80,79,76,0,85,82],
[71,49,53,73,59,45,0,57],
[45,53,56,71,58,48,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,59,54,58,55,66],
[71,0,71,67,68,60,60,66],
[69,59,0,65,60,63,60,65],
[71,63,65,0,64,73,66,74],
[76,62,70,66,0,68,64,74],
[72,70,67,57,62,0,58,64],
[75,70,70,64,66,72,0,77],
[64,64,65,56,56,66,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,53,54,54,58,49,63],
[71,0,54,58,83,54,54,52],
[77,76,0,59,72,65,53,62],
[76,72,71,0,72,61,66,61],
[76,47,58,58,0,53,44,58],
[72,76,65,69,77,0,52,62],
[81,76,77,64,86,78,0,89],
[67,78,68,69,72,68,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,56,50,66,56,57,69],
[75,0,65,66,69,70,72,76],
[74,65,0,75,76,69,75,83],
[80,64,55,0,74,73,68,73],
[64,61,54,56,0,62,60,63],
[74,60,61,57,68,0,69,72],
[73,58,55,62,70,61,0,74],
[61,54,47,57,67,58,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,63,74,70,63,73],
[56,0,57,62,67,63,63,61],
[62,73,0,62,77,73,57,81],
[67,68,68,0,75,66,62,63],
[56,63,53,55,0,65,53,65],
[60,67,57,64,65,0,70,69],
[67,67,73,68,77,60,0,78],
[57,69,49,67,65,61,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,62,71,73,65,71],
[65,0,60,76,77,75,73,67],
[60,70,0,64,79,68,72,71],
[68,54,66,0,70,62,68,64],
[59,53,51,60,0,60,56,65],
[57,55,62,68,70,0,74,67],
[65,57,58,62,74,56,0,64],
[59,63,59,66,65,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,88,69,66,72,67,58],
[49,0,73,77,68,69,56,49],
[42,57,0,54,53,59,48,50],
[61,53,76,0,58,60,50,47],
[64,62,77,72,0,56,52,71],
[58,61,71,70,74,0,65,56],
[63,74,82,80,78,65,0,69],
[72,81,80,83,59,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,62,68,72,61,67],
[61,0,57,45,52,77,55,57],
[73,73,0,70,62,81,63,77],
[68,85,60,0,68,81,67,71],
[62,78,68,62,0,85,70,79],
[58,53,49,49,45,0,67,61],
[69,75,67,63,60,63,0,74],
[63,73,53,59,51,69,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,61,56,62,59,54,59],
[81,0,75,78,75,65,75,71],
[69,55,0,65,62,61,61,60],
[74,52,65,0,61,58,59,60],
[68,55,68,69,0,61,64,61],
[71,65,69,72,69,0,64,67],
[76,55,69,71,66,66,0,60],
[71,59,70,70,69,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,71,74,73,77,64],
[64,0,59,59,65,64,68,60],
[67,71,0,66,68,68,64,68],
[59,71,64,0,71,67,72,66],
[56,65,62,59,0,66,65,58],
[57,66,62,63,64,0,68,60],
[53,62,66,58,65,62,0,57],
[66,70,62,64,72,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,73,78,71,77,64,66],
[66,0,66,79,65,77,61,68],
[57,64,0,62,63,74,58,60],
[52,51,68,0,60,68,57,61],
[59,65,67,70,0,78,62,68],
[53,53,56,62,52,0,56,47],
[66,69,72,73,68,74,0,59],
[64,62,70,69,62,83,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,47,43,47,53,66],
[76,0,62,54,47,56,64,68],
[76,68,0,65,58,53,55,67],
[83,76,65,0,65,66,71,74],
[87,83,72,65,0,55,73,78],
[83,74,77,64,75,0,67,83],
[77,66,75,59,57,63,0,73],
[64,62,63,56,52,47,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,93,62,74,70,81],
[61,0,60,88,68,73,87,90],
[68,70,0,94,60,80,84,100],
[37,42,36,0,54,60,52,98],
[68,62,70,76,0,85,106,93],
[56,57,50,70,45,0,66,92],
[60,43,46,78,24,64,0,88],
[49,40,30,32,37,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,79,77,78,63,72],
[69,0,69,74,83,90,67,65],
[60,61,0,59,64,88,66,47],
[51,56,71,0,65,79,67,55],
[53,47,66,65,0,70,59,50],
[52,40,42,51,60,0,57,56],
[67,63,64,63,71,73,0,55],
[58,65,83,75,80,74,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,53,46,50,49,55,70],
[79,0,72,65,87,65,63,71],
[77,58,0,56,62,70,64,86],
[84,65,74,0,70,73,86,85],
[80,43,68,60,0,59,73,78],
[81,65,60,57,71,0,63,80],
[75,67,66,44,57,67,0,80],
[60,59,44,45,52,50,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,48,57,75,75,86],
[63,0,54,43,50,51,50,65],
[68,76,0,65,74,66,58,83],
[82,87,65,0,70,68,61,77],
[73,80,56,60,0,63,59,87],
[55,79,64,62,67,0,43,90],
[55,80,72,69,71,87,0,101],
[44,65,47,53,43,40,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,63,69,60,63,73],
[59,0,62,58,71,57,74,61],
[63,68,0,74,81,58,59,71],
[67,72,56,0,73,54,59,65],
[61,59,49,57,0,42,56,62],
[70,73,72,76,88,0,69,64],
[67,56,71,71,74,61,0,61],
[57,69,59,65,68,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,88,88,68,82,77,53],
[41,0,50,54,52,56,45,47],
[42,80,0,67,67,59,62,51],
[42,76,63,0,48,63,74,42],
[62,78,63,82,0,69,80,69],
[48,74,71,67,61,0,65,56],
[53,85,68,56,50,65,0,55],
[77,83,79,88,61,74,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,71,73,94,77,80],
[65,0,71,75,74,97,69,79],
[53,59,0,67,60,76,71,57],
[59,55,63,0,57,85,67,71],
[57,56,70,73,0,89,63,70],
[36,33,54,45,41,0,44,51],
[53,61,59,63,67,86,0,66],
[50,51,73,59,60,79,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,69,73,55,67,55,58],
[82,0,84,84,60,73,65,76],
[61,46,0,76,47,62,58,67],
[57,46,54,0,52,66,49,64],
[75,70,83,78,0,65,67,75],
[63,57,68,64,65,0,62,67],
[75,65,72,81,63,68,0,68],
[72,54,63,66,55,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,55,82,52,58,73],
[67,0,67,65,81,62,72,73],
[72,63,0,56,84,50,51,65],
[75,65,74,0,89,67,67,62],
[48,49,46,41,0,47,53,53],
[78,68,80,63,83,0,73,74],
[72,58,79,63,77,57,0,60],
[57,57,65,68,77,56,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,70,60,66,61,55],
[67,0,58,71,60,68,61,59],
[70,72,0,73,61,71,61,65],
[60,59,57,0,66,67,65,57],
[70,70,69,64,0,65,55,59],
[64,62,59,63,65,0,65,65],
[69,69,69,65,75,65,0,59],
[75,71,65,73,71,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,62,62,69,61,73,63],
[61,0,70,72,66,62,67,73],
[68,60,0,67,62,69,64,70],
[68,58,63,0,58,54,65,70],
[61,64,68,72,0,60,64,71],
[69,68,61,76,70,0,74,69],
[57,63,66,65,66,56,0,61],
[67,57,60,60,59,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,74,64,72,48,67,69],
[74,0,80,83,79,66,64,79],
[56,50,0,57,53,50,48,62],
[66,47,73,0,67,59,55,65],
[58,51,77,63,0,51,61,75],
[82,64,80,71,79,0,70,82],
[63,66,82,75,69,60,0,68],
[61,51,68,65,55,48,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,72,66,62,76,63],
[65,0,65,76,66,74,64,57],
[73,65,0,58,63,82,78,71],
[58,54,72,0,69,70,57,67],
[64,64,67,61,0,80,69,50],
[68,56,48,60,50,0,69,60],
[54,66,52,73,61,61,0,61],
[67,73,59,63,80,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,56,69,63,55,69],
[67,0,67,65,70,59,67,67],
[72,63,0,62,84,60,59,72],
[74,65,68,0,74,66,60,75],
[61,60,46,56,0,64,52,66],
[67,71,70,64,66,0,60,71],
[75,63,71,70,78,70,0,71],
[61,63,58,55,64,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,71,62,70,71,58],
[73,0,64,74,70,72,61,59],
[64,66,0,75,67,68,68,66],
[59,56,55,0,63,64,56,63],
[68,60,63,67,0,72,63,63],
[60,58,62,66,58,0,55,58],
[59,69,62,74,67,75,0,63],
[72,71,64,67,67,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,65,68,67,61,64,71],
[56,0,67,69,77,71,69,66],
[65,63,0,75,75,70,78,63],
[62,61,55,0,65,64,71,59],
[63,53,55,65,0,78,64,60],
[69,59,60,66,52,0,67,56],
[66,61,52,59,66,63,0,57],
[59,64,67,71,70,74,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,76,61,55,69,82,66],
[60,0,70,55,64,58,82,64],
[54,60,0,53,52,63,68,67],
[69,75,77,0,67,61,80,76],
[75,66,78,63,0,73,82,72],
[61,72,67,69,57,0,86,66],
[48,48,62,50,48,44,0,57],
[64,66,63,54,58,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,62,69,61,73,63],
[61,0,70,66,62,61,66,64],
[69,60,0,62,62,53,73,59],
[68,64,68,0,58,60,68,58],
[61,68,68,72,0,70,72,68],
[69,69,77,70,60,0,71,66],
[57,64,57,62,58,59,0,55],
[67,66,71,72,62,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,67,68,83,65,56,72],
[51,0,75,44,52,31,54,48],
[63,55,0,50,67,55,32,51],
[62,86,80,0,82,70,82,71],
[47,78,63,48,0,46,44,72],
[65,99,75,60,84,0,55,66],
[74,76,98,48,86,75,0,84],
[58,82,79,59,58,64,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,59,60,59,61,66],
[69,0,66,69,70,68,70,62],
[63,64,0,64,57,65,62,69],
[71,61,66,0,59,70,73,79],
[70,60,73,71,0,60,65,70],
[71,62,65,60,70,0,65,66],
[69,60,68,57,65,65,0,67],
[64,68,61,51,60,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,71,69,69,57,67],
[61,0,63,62,62,69,56,63],
[56,67,0,57,67,65,52,75],
[59,68,73,0,71,76,68,87],
[61,68,63,59,0,65,59,71],
[61,61,65,54,65,0,56,72],
[73,74,78,62,71,74,0,75],
[63,67,55,43,59,58,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,56,35,44,46,54],
[84,0,57,82,78,86,83,80],
[92,73,0,74,80,94,104,56],
[74,48,56,0,70,65,79,53],
[95,52,50,60,0,74,56,77],
[86,44,36,65,56,0,63,52],
[84,47,26,51,74,67,0,60],
[76,50,74,77,53,78,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,65,71,85,79,71],
[64,0,79,61,76,92,75,63],
[61,51,0,58,74,65,65,53],
[65,69,72,0,78,82,72,73],
[59,54,56,52,0,75,69,67],
[45,38,65,48,55,0,49,55],
[51,55,65,58,61,81,0,58],
[59,67,77,57,63,75,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,66,65,81,81,62],
[66,0,70,67,70,62,79,76],
[64,60,0,73,67,63,68,60],
[64,63,57,0,69,62,68,65],
[65,60,63,61,0,62,58,66],
[49,68,67,68,68,0,63,70],
[49,51,62,62,72,67,0,64],
[68,54,70,65,64,60,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,62,66,61,60,66],
[73,0,70,64,65,68,62,68],
[65,60,0,64,65,67,61,62],
[68,66,66,0,65,64,66,67],
[64,65,65,65,0,66,63,66],
[69,62,63,66,64,0,63,62],
[70,68,69,64,67,67,0,64],
[64,62,68,63,64,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,42,54,61,48,38,50],
[51,0,45,51,78,61,36,56],
[88,85,0,70,77,72,57,69],
[76,79,60,0,65,63,56,78],
[69,52,53,65,0,48,51,55],
[82,69,58,67,82,0,63,73],
[92,94,73,74,79,67,0,60],
[80,74,61,52,75,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,70,61,66,70,70,61],
[57,0,64,62,65,64,66,60],
[60,66,0,64,70,64,63,60],
[69,68,66,0,66,70,64,64],
[64,65,60,64,0,65,60,58],
[60,66,66,60,65,0,56,58],
[60,64,67,66,70,74,0,68],
[69,70,70,66,72,72,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,51,56,60,60,60,56],
[72,0,58,61,60,60,63,55],
[79,72,0,68,73,68,65,65],
[74,69,62,0,64,62,57,62],
[70,70,57,66,0,58,64,69],
[70,70,62,68,72,0,65,65],
[70,67,65,73,66,65,0,58],
[74,75,65,68,61,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,61,75,73,62,74],
[66,0,65,66,78,76,61,73],
[62,65,0,53,63,65,65,66],
[69,64,77,0,69,75,66,70],
[55,52,67,61,0,66,54,70],
[57,54,65,55,64,0,57,56],
[68,69,65,64,76,73,0,72],
[56,57,64,60,60,74,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,69,67,76,69,70],
[61,0,57,65,60,75,73,63],
[72,73,0,73,60,75,73,74],
[61,65,57,0,63,73,66,81],
[63,70,70,67,0,74,77,68],
[54,55,55,57,56,0,65,61],
[61,57,57,64,53,65,0,65],
[60,67,56,49,62,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,72,72,46,62,48],
[72,0,74,80,74,53,72,61],
[61,56,0,75,71,54,78,50],
[58,50,55,0,62,41,59,48],
[58,56,59,68,0,52,65,50],
[84,77,76,89,78,0,71,65],
[68,58,52,71,65,59,0,45],
[82,69,80,82,80,65,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,83,67,69,80,66,55],
[61,0,65,59,72,66,84,56],
[47,65,0,71,60,60,62,47],
[63,71,59,0,70,64,66,61],
[61,58,70,60,0,62,76,66],
[50,64,70,66,68,0,60,55],
[64,46,68,64,54,70,0,47],
[75,74,83,69,64,75,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,57,67,54,69,71,67],
[72,0,67,74,65,64,68,65],
[73,63,0,75,62,65,58,59],
[63,56,55,0,65,56,59,61],
[76,65,68,65,0,64,66,66],
[61,66,65,74,66,0,78,63],
[59,62,72,71,64,52,0,56],
[63,65,71,69,64,67,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,75,67,65,57,56,75],
[64,0,66,57,103,75,74,71],
[55,64,0,57,94,56,74,53],
[63,73,73,0,66,75,37,63],
[65,27,36,64,0,56,56,35],
[73,55,74,55,74,0,55,63],
[74,56,56,93,74,75,0,64],
[55,59,77,67,95,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,72,56,75,72,61,68],
[57,0,58,48,65,54,51,58],
[58,72,0,57,64,58,64,70],
[74,82,73,0,82,68,65,79],
[55,65,66,48,0,67,44,60],
[58,76,72,62,63,0,63,66],
[69,79,66,65,86,67,0,77],
[62,72,60,51,70,64,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,70,68,67,65,67],
[69,0,63,71,73,64,69,64],
[69,67,0,71,72,61,65,67],
[60,59,59,0,65,58,60,58],
[62,57,58,65,0,53,58,57],
[63,66,69,72,77,0,68,63],
[65,61,65,70,72,62,0,63],
[63,66,63,72,73,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,55,64,76,70,69],
[61,0,67,65,64,72,70,60],
[57,63,0,56,59,58,61,57],
[75,65,74,0,66,66,77,69],
[66,66,71,64,0,66,69,54],
[54,58,72,64,64,0,64,60],
[60,60,69,53,61,66,0,54],
[61,70,73,61,76,70,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,75,66,77,60,61,72],
[54,0,60,64,66,62,55,56],
[55,70,0,59,64,65,59,57],
[64,66,71,0,73,66,65,68],
[53,64,66,57,0,64,57,64],
[70,68,65,64,66,0,67,68],
[69,75,71,65,73,63,0,68],
[58,74,73,62,66,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,58,68,67,59,66,59],
[58,0,49,69,57,59,56,59],
[72,81,0,80,70,61,68,71],
[62,61,50,0,64,55,51,55],
[63,73,60,66,0,59,66,58],
[71,71,69,75,71,0,71,64],
[64,74,62,79,64,59,0,62],
[71,71,59,75,72,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,67,71,59,69,89],
[63,0,79,61,63,71,73,53],
[68,51,0,62,67,76,72,77],
[63,69,68,0,57,73,71,67],
[59,67,63,73,0,74,60,64],
[71,59,54,57,56,0,72,70],
[61,57,58,59,70,58,0,73],
[41,77,53,63,66,60,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,75,60,81,73,52,61],
[52,0,56,51,67,59,48,52],
[55,74,0,55,59,70,53,62],
[70,79,75,0,73,73,52,59],
[49,63,71,57,0,51,31,52],
[57,71,60,57,79,0,66,58],
[78,82,77,78,99,64,0,77],
[69,78,68,71,78,72,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,70,64,67,70,66,63],
[51,0,55,57,62,59,62,51],
[60,75,0,65,63,66,63,65],
[66,73,65,0,68,66,68,64],
[63,68,67,62,0,67,64,55],
[60,71,64,64,63,0,67,62],
[64,68,67,62,66,63,0,59],
[67,79,65,66,75,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,70,68,62,68,68],
[68,0,80,76,71,64,66,70],
[62,50,0,66,68,61,60,57],
[60,54,64,0,68,63,67,65],
[62,59,62,62,0,61,58,52],
[68,66,69,67,69,0,54,61],
[62,64,70,63,72,76,0,72],
[62,60,73,65,78,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,63,55,51,53,56,52],
[85,0,75,70,79,73,73,62],
[67,55,0,55,52,62,52,51],
[75,60,75,0,75,67,62,62],
[79,51,78,55,0,58,61,64],
[77,57,68,63,72,0,61,53],
[74,57,78,68,69,69,0,65],
[78,68,79,68,66,77,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,68,69,63,66,75],
[62,0,65,67,69,61,67,68],
[56,65,0,65,63,71,66,70],
[62,63,65,0,68,64,68,66],
[61,61,67,62,0,65,68,63],
[67,69,59,66,65,0,68,61],
[64,63,64,62,62,62,0,65],
[55,62,60,64,67,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,57,65,51,71,49,68],
[86,0,77,62,68,72,69,79],
[73,53,0,58,50,56,62,74],
[65,68,72,0,68,73,69,70],
[79,62,80,62,0,70,61,66],
[59,58,74,57,60,0,42,71],
[81,61,68,61,69,88,0,67],
[62,51,56,60,64,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,72,65,63,73,71,67],
[50,0,52,54,54,42,54,48],
[58,78,0,55,54,56,60,57],
[65,76,75,0,72,63,62,67],
[67,76,76,58,0,58,63,62],
[57,88,74,67,72,0,69,65],
[59,76,70,68,67,61,0,58],
[63,82,73,63,68,65,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,68,64,62,69,72],
[60,0,58,68,55,63,59,66],
[62,72,0,63,67,66,74,81],
[62,62,67,0,57,60,57,76],
[66,75,63,73,0,67,69,82],
[68,67,64,70,63,0,68,67],
[61,71,56,73,61,62,0,72],
[58,64,49,54,48,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,63,56,71,66,48],
[60,0,46,68,58,50,58,43],
[71,84,0,71,51,62,68,62],
[67,62,59,0,58,50,64,43],
[74,72,79,72,0,48,64,62],
[59,80,68,80,82,0,81,70],
[64,72,62,66,66,49,0,49],
[82,87,68,87,68,60,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,65,64,74,70,66],
[68,0,67,64,72,78,62,74],
[67,63,0,80,78,73,73,69],
[65,66,50,0,69,70,60,59],
[66,58,52,61,0,64,50,61],
[56,52,57,60,66,0,55,55],
[60,68,57,70,80,75,0,68],
[64,56,61,71,69,75,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,59,45,73,66,64],
[74,0,54,46,53,71,70,67],
[68,76,0,51,75,66,66,57],
[71,84,79,0,70,64,83,65],
[85,77,55,60,0,76,86,56],
[57,59,64,66,54,0,76,74],
[64,60,64,47,44,54,0,52],
[66,63,73,65,74,56,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,58,59,57,60,53,54],
[76,0,73,67,71,71,62,67],
[72,57,0,60,67,56,65,51],
[71,63,70,0,67,64,69,63],
[73,59,63,63,0,69,65,60],
[70,59,74,66,61,0,72,54],
[77,68,65,61,65,58,0,57],
[76,63,79,67,70,76,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,56,57,67,61,59,53],
[69,0,60,61,62,70,63,66],
[74,70,0,65,69,74,69,63],
[73,69,65,0,73,71,65,62],
[63,68,61,57,0,71,67,58],
[69,60,56,59,59,0,61,58],
[71,67,61,65,63,69,0,65],
[77,64,67,68,72,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,71,38,39,42,58],
[88,0,65,74,56,54,63,75],
[89,65,0,78,67,65,85,74],
[59,56,52,0,57,52,63,69],
[92,74,63,73,0,65,54,92],
[91,76,65,78,65,0,76,83],
[88,67,45,67,76,54,0,75],
[72,55,56,61,38,47,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,57,75,68,70,63],
[70,0,62,59,72,67,53,55],
[64,68,0,65,76,78,60,68],
[73,71,65,0,78,75,69,71],
[55,58,54,52,0,58,61,50],
[62,63,52,55,72,0,52,47],
[60,77,70,61,69,78,0,58],
[67,75,62,59,80,83,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,85,76,69,75,78,64],
[60,0,84,77,75,62,86,63],
[45,46,0,77,76,67,68,57],
[54,53,53,0,65,38,73,58],
[61,55,54,65,0,54,88,54],
[55,68,63,92,76,0,83,80],
[52,44,62,57,42,47,0,44],
[66,67,73,72,76,50,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,65,65,57,77,65],
[79,0,78,69,67,63,82,69],
[70,52,0,68,75,54,74,49],
[65,61,62,0,70,68,75,66],
[65,63,55,60,0,62,65,59],
[73,67,76,62,68,0,71,61],
[53,48,56,55,65,59,0,31],
[65,61,81,64,71,69,99,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,46,73,51,53,60,80],
[48,0,41,74,55,54,54,62],
[84,89,0,71,69,61,88,65],
[57,56,59,0,62,66,61,73],
[79,75,61,68,0,60,80,65],
[77,76,69,64,70,0,81,75],
[70,76,42,69,50,49,0,64],
[50,68,65,57,65,55,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,80,65,64,66,57,70],
[60,0,76,70,56,59,65,57],
[50,54,0,64,40,58,48,60],
[65,60,66,0,65,56,61,62],
[66,74,90,65,0,61,65,68],
[64,71,72,74,69,0,69,66],
[73,65,82,69,65,61,0,73],
[60,73,70,68,62,64,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,78,61,82,76,75,81],
[65,0,51,52,64,60,65,67],
[52,79,0,55,70,57,69,67],
[69,78,75,0,83,62,82,85],
[48,66,60,47,0,53,64,63],
[54,70,73,68,77,0,79,73],
[55,65,61,48,66,51,0,57],
[49,63,63,45,67,57,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,73,64,59,68,66,65],
[63,0,66,66,61,61,69,69],
[57,64,0,55,62,62,58,65],
[66,64,75,0,66,69,68,76],
[71,69,68,64,0,72,69,73],
[62,69,68,61,58,0,65,65],
[64,61,72,62,61,65,0,64],
[65,61,65,54,57,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,49,66,65,68,64,67],
[79,0,67,79,75,79,65,71],
[81,63,0,67,74,78,67,70],
[64,51,63,0,63,73,66,76],
[65,55,56,67,0,62,56,67],
[62,51,52,57,68,0,58,63],
[66,65,63,64,74,72,0,74],
[63,59,60,54,63,67,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,63,59,45,62,62],
[75,0,73,64,64,71,77,65],
[62,57,0,62,60,59,57,54],
[67,66,68,0,56,62,59,56],
[71,66,70,74,0,60,65,62],
[85,59,71,68,70,0,65,63],
[68,53,73,71,65,65,0,67],
[68,65,76,74,68,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,68,58,49,61,56],
[65,0,56,72,73,65,61,69],
[72,74,0,79,72,63,61,73],
[62,58,51,0,58,46,60,54],
[72,57,58,72,0,65,61,57],
[81,65,67,84,65,0,78,74],
[69,69,69,70,69,52,0,74],
[74,61,57,76,73,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,74,68,81,57,68,49],
[86,0,92,74,104,76,94,61],
[56,38,0,55,72,50,38,45],
[62,56,75,0,72,48,71,60],
[49,26,58,58,0,39,53,43],
[73,54,80,82,91,0,77,79],
[62,36,92,59,77,53,0,58],
[81,69,85,70,87,51,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,69,61,59,86,77,60],
[61,0,78,63,52,96,86,62],
[61,52,0,69,78,77,78,69],
[69,67,61,0,69,87,86,71],
[71,78,52,61,0,96,78,69],
[44,34,53,43,34,0,53,60],
[53,44,52,44,52,77,0,44],
[70,68,61,59,61,70,86,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,63,65,71,64,68,72],
[52,0,51,58,61,54,56,74],
[67,79,0,64,66,66,79,83],
[65,72,66,0,65,66,71,78],
[59,69,64,65,0,63,71,71],
[66,76,64,64,67,0,64,79],
[62,74,51,59,59,66,0,76],
[58,56,47,52,59,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,77,58,72,79,71,75],
[72,0,64,71,53,64,66,73],
[53,66,0,48,64,75,66,59],
[72,59,82,0,73,71,65,68],
[58,77,66,57,0,56,67,67],
[51,66,55,59,74,0,68,65],
[59,64,64,65,63,62,0,68],
[55,57,71,62,63,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,64,65,71,71,69,58],
[67,0,56,75,72,73,64,69],
[66,74,0,78,80,72,48,62],
[65,55,52,0,61,62,46,54],
[59,58,50,69,0,64,40,54],
[59,57,58,68,66,0,37,51],
[61,66,82,84,90,93,0,67],
[72,61,68,76,76,79,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,64,67,58,65,58,71],
[54,0,67,58,44,57,54,67],
[66,63,0,61,48,53,63,67],
[63,72,69,0,56,66,55,63],
[72,86,82,74,0,64,72,81],
[65,73,77,64,66,0,68,72],
[72,76,67,75,58,62,0,79],
[59,63,63,67,49,58,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,63,67,63,69,66],
[60,0,67,59,56,57,67,59],
[66,63,0,69,64,70,74,64],
[67,71,61,0,66,68,75,65],
[63,74,66,64,0,66,77,66],
[67,73,60,62,64,0,75,68],
[61,63,56,55,53,55,0,54],
[64,71,66,65,64,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,48,54,54,77,49,55],
[84,0,50,41,47,63,56,81],
[82,80,0,66,59,70,82,68],
[76,89,64,0,75,98,76,88],
[76,83,71,55,0,84,62,69],
[53,67,60,32,46,0,53,47],
[81,74,48,54,68,77,0,66],
[75,49,62,42,61,83,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,54,64,72,69,54],
[63,0,81,58,69,76,67,61],
[50,49,0,62,43,70,52,59],
[76,72,68,0,65,73,61,63],
[66,61,87,65,0,76,64,70],
[58,54,60,57,54,0,58,57],
[61,63,78,69,66,72,0,70],
[76,69,71,67,60,73,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,61,66,68,61,67,65],
[56,0,56,60,64,57,70,60],
[69,74,0,62,69,58,71,67],
[64,70,68,0,74,67,72,68],
[62,66,61,56,0,63,67,62],
[69,73,72,63,67,0,75,63],
[63,60,59,58,63,55,0,62],
[65,70,63,62,68,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,68,49,64,56,73,67],
[70,0,74,59,66,64,85,80],
[62,56,0,68,59,58,78,82],
[81,71,62,0,83,67,69,84],
[66,64,71,47,0,64,78,72],
[74,66,72,63,66,0,84,80],
[57,45,52,61,52,46,0,66],
[63,50,48,46,58,50,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,56,81,63,64,64,74],
[83,0,71,63,66,72,90,71],
[74,59,0,71,43,61,63,66],
[49,67,59,0,47,52,54,56],
[67,64,87,83,0,67,72,77],
[66,58,69,78,63,0,59,83],
[66,40,67,76,58,71,0,70],
[56,59,64,74,53,47,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,70,66,62,65,55,64],
[58,0,52,65,60,54,53,55],
[60,78,0,71,74,55,51,61],
[64,65,59,0,62,49,45,45],
[68,70,56,68,0,62,53,54],
[65,76,75,81,68,0,62,71],
[75,77,79,85,77,68,0,59],
[66,75,69,85,76,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,62,64,69,63,71],
[56,0,67,58,64,61,62,58],
[66,63,0,59,64,67,66,65],
[68,72,71,0,59,61,67,68],
[66,66,66,71,0,58,69,64],
[61,69,63,69,72,0,58,53],
[67,68,64,63,61,72,0,64],
[59,72,65,62,66,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,53,42,55,68,54,64],
[67,0,48,52,58,78,60,49],
[77,82,0,77,58,83,77,74],
[88,78,53,0,70,88,70,78],
[75,72,72,60,0,72,70,70],
[62,52,47,42,58,0,44,54],
[76,70,53,60,60,86,0,70],
[66,81,56,52,60,76,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,71,70,73,79,64],
[61,0,74,79,64,73,82,72],
[58,56,0,78,69,72,84,75],
[59,51,52,0,48,54,69,65],
[60,66,61,82,0,78,86,82],
[57,57,58,76,52,0,78,61],
[51,48,46,61,44,52,0,53],
[66,58,55,65,48,69,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,61,55,62,57,62],
[64,0,51,54,61,56,58,62],
[62,79,0,59,62,64,68,63],
[69,76,71,0,65,67,66,64],
[75,69,68,65,0,65,72,63],
[68,74,66,63,65,0,67,71],
[73,72,62,64,58,63,0,62],
[68,68,67,66,67,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,75,69,62,68,66],
[65,0,53,57,53,62,45,50],
[57,77,0,59,62,71,63,71],
[55,73,71,0,57,62,53,71],
[61,77,68,73,0,65,58,76],
[68,68,59,68,65,0,60,74],
[62,85,67,77,72,70,0,76],
[64,80,59,59,54,56,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,85,77,71,81,62,69],
[61,0,76,65,66,62,45,51],
[45,54,0,58,54,57,41,62],
[53,65,72,0,65,47,50,70],
[59,64,76,65,0,65,69,66],
[49,68,73,83,65,0,48,83],
[68,85,89,80,61,82,0,73],
[61,79,68,60,64,47,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,58,64,61,59,62,59],
[59,0,67,60,82,55,78,67],
[72,63,0,79,78,66,70,70],
[66,70,51,0,69,61,63,66],
[69,48,52,61,0,51,57,70],
[71,75,64,69,79,0,80,73],
[68,52,60,67,73,50,0,59],
[71,63,60,64,60,57,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,66,79,53,80,93,78],
[37,0,49,64,50,79,91,52],
[64,81,0,27,65,80,81,52],
[51,66,103,0,66,66,91,39],
[77,80,65,64,0,92,80,65],
[50,51,50,64,38,0,80,52],
[37,39,49,39,50,50,0,52],
[52,78,78,91,65,78,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,46,59,59,49,57,62],
[61,0,57,73,62,49,69,47],
[84,73,0,80,63,60,72,61],
[71,57,50,0,57,49,66,69],
[71,68,67,73,0,66,78,63],
[81,81,70,81,64,0,78,66],
[73,61,58,64,52,52,0,64],
[68,83,69,61,67,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,76,71,67,70,51,74],
[71,0,63,78,69,78,67,81],
[54,67,0,67,49,76,57,71],
[59,52,63,0,55,70,63,68],
[63,61,81,75,0,74,66,80],
[60,52,54,60,56,0,59,80],
[79,63,73,67,64,71,0,80],
[56,49,59,62,50,50,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,53,67,63,50,52,47],
[62,0,69,68,75,38,48,69],
[77,61,0,75,82,66,68,77],
[63,62,55,0,75,51,57,73],
[67,55,48,55,0,34,65,63],
[80,92,64,79,96,0,79,93],
[78,82,62,73,65,51,0,65],
[83,61,53,57,67,37,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,76,64,71,60,70],
[61,0,59,66,74,74,64,59],
[65,71,0,69,63,69,71,64],
[54,64,61,0,60,60,70,53],
[66,56,67,70,0,62,66,54],
[59,56,61,70,68,0,59,47],
[70,66,59,60,64,71,0,62],
[60,71,66,77,76,83,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,45,70,78,73,72,63],
[66,0,46,60,52,77,53,45],
[85,84,0,106,85,79,86,62],
[60,70,24,0,71,65,55,62],
[52,78,45,59,0,65,45,64],
[57,53,51,65,65,0,58,51],
[58,77,44,75,85,72,0,76],
[67,85,68,68,66,79,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,58,60,60,65,62,58],
[77,0,70,54,77,70,66,76],
[72,60,0,67,78,75,80,75],
[70,76,63,0,65,65,63,66],
[70,53,52,65,0,64,68,54],
[65,60,55,65,66,0,64,71],
[68,64,50,67,62,66,0,70],
[72,54,55,64,76,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,95,93,77,76,95,57,74],
[35,0,55,37,37,72,37,54],
[37,75,0,38,37,56,56,37],
[53,93,92,0,75,74,73,72],
[54,93,93,55,0,73,54,35],
[35,58,74,56,57,0,37,37],
[73,93,74,57,76,93,0,73],
[56,76,93,58,95,93,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,56,68,57,52,69],
[69,0,74,60,75,84,69,77],
[66,56,0,77,82,69,73,77],
[74,70,53,0,58,71,60,60],
[62,55,48,72,0,67,54,73],
[73,46,61,59,63,0,61,70],
[78,61,57,70,76,69,0,75],
[61,53,53,70,57,60,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,72,79,66,59,76],
[67,0,71,65,76,62,64,65],
[64,59,0,66,55,59,67,65],
[58,65,64,0,69,54,65,64],
[51,54,75,61,0,55,52,65],
[64,68,71,76,75,0,62,77],
[71,66,63,65,78,68,0,76],
[54,65,65,66,65,53,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,64,55,67,71,60],
[70,0,68,66,67,77,62,67],
[65,62,0,73,74,77,67,76],
[66,64,57,0,67,68,70,57],
[75,63,56,63,0,72,59,57],
[63,53,53,62,58,0,63,53],
[59,68,63,60,71,67,0,62],
[70,63,54,73,73,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,57,58,62,59,54,45],
[80,0,65,65,64,61,65,52],
[73,65,0,62,67,64,57,57],
[72,65,68,0,61,57,62,64],
[68,66,63,69,0,65,61,68],
[71,69,66,73,65,0,65,64],
[76,65,73,68,69,65,0,62],
[85,78,73,66,62,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,66,64,65,61,68,52],
[77,0,84,66,77,72,76,60],
[64,46,0,62,55,69,71,55],
[66,64,68,0,64,72,83,67],
[65,53,75,66,0,67,73,53],
[69,58,61,58,63,0,64,63],
[62,54,59,47,57,66,0,55],
[78,70,75,63,77,67,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,65,65,74,67,75],
[71,0,66,64,74,76,76,76],
[74,64,0,69,72,85,75,78],
[65,66,61,0,73,60,65,72],
[65,56,58,57,0,72,62,72],
[56,54,45,70,58,0,67,72],
[63,54,55,65,68,63,0,72],
[55,54,52,58,58,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,73,88,59,73,73],
[57,0,87,59,75,45,46,59],
[56,43,0,43,57,30,59,59],
[57,71,87,0,73,45,59,59],
[42,55,73,57,0,30,58,58],
[71,85,100,85,100,0,57,86],
[57,84,71,71,72,73,0,86],
[57,71,71,71,72,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,66,73,70,65,79],
[63,0,71,64,67,65,68,73],
[54,59,0,62,63,69,49,69],
[64,66,68,0,74,70,62,73],
[57,63,67,56,0,62,66,70],
[60,65,61,60,68,0,65,68],
[65,62,81,68,64,65,0,81],
[51,57,61,57,60,62,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,74,71,28,47,15],
[74,0,72,44,87,43,47,31],
[74,58,0,87,86,28,60,73],
[56,86,43,0,101,56,58,30],
[59,43,44,29,0,59,16,31],
[102,87,102,74,71,0,74,61],
[83,83,70,72,114,56,0,72],
[115,99,57,100,99,69,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,61,75,66,75,77,73],
[52,0,58,62,59,55,65,63],
[69,72,0,80,62,66,66,79],
[55,68,50,0,58,63,68,61],
[64,71,68,72,0,44,83,72],
[55,75,64,67,86,0,82,78],
[53,65,64,62,47,48,0,72],
[57,67,51,69,58,52,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,85,65,76,83,77,95],
[54,0,54,25,61,55,75,63],
[45,76,0,55,32,57,72,68],
[65,105,75,0,69,67,80,83],
[54,69,98,61,0,75,75,74],
[47,75,73,63,55,0,65,80],
[53,55,58,50,55,65,0,83],
[35,67,62,47,56,50,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,65,57,72,68,71],
[69,0,58,54,62,55,71,66],
[71,72,0,67,64,59,69,72],
[65,76,63,0,73,58,75,72],
[73,68,66,57,0,60,72,59],
[58,75,71,72,70,0,83,68],
[62,59,61,55,58,47,0,70],
[59,64,58,58,71,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,64,73,66,54,56],
[60,0,58,61,65,61,65,62],
[71,72,0,63,61,64,52,54],
[66,69,67,0,61,65,59,55],
[57,65,69,69,0,61,49,70],
[64,69,66,65,69,0,70,66],
[76,65,78,71,81,60,0,61],
[74,68,76,75,60,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,65,63,60,61,63,62],
[75,0,71,68,63,70,74,76],
[65,59,0,70,64,65,67,67],
[67,62,60,0,65,63,73,71],
[70,67,66,65,0,65,74,66],
[69,60,65,67,65,0,66,69],
[67,56,63,57,56,64,0,67],
[68,54,63,59,64,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,68,66,56,62,62,55],
[69,0,66,61,63,69,67,66],
[62,64,0,68,64,64,67,63],
[64,69,62,0,68,69,77,69],
[74,67,66,62,0,71,76,65],
[68,61,66,61,59,0,70,60],
[68,63,63,53,54,60,0,62],
[75,64,67,61,65,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,67,59,70,73,77,60],
[68,0,60,72,65,66,75,59],
[63,70,0,67,67,67,71,68],
[71,58,63,0,75,76,80,58],
[60,65,63,55,0,75,82,61],
[57,64,63,54,55,0,75,60],
[53,55,59,50,48,55,0,35],
[70,71,62,72,69,70,95,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,69,69,63,63,73],
[58,0,57,54,52,53,57,57],
[68,73,0,60,56,55,59,72],
[61,76,70,0,73,62,67,79],
[61,78,74,57,0,66,70,72],
[67,77,75,68,64,0,64,78],
[67,73,71,63,60,66,0,76],
[57,73,58,51,58,52,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,72,66,68,83,76],
[65,0,66,74,66,68,76,71],
[59,64,0,71,67,65,78,61],
[58,56,59,0,55,65,70,72],
[64,64,63,75,0,69,70,73],
[62,62,65,65,61,0,77,77],
[47,54,52,60,60,53,0,67],
[54,59,69,58,57,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,73,71,74,76,73],
[65,0,63,70,65,72,77,69],
[55,67,0,75,67,70,75,71],
[57,60,55,0,65,62,65,61],
[59,65,63,65,0,69,71,69],
[56,58,60,68,61,0,65,70],
[54,53,55,65,59,65,0,66],
[57,61,59,69,61,60,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,68,77,56,70,77,73],
[58,0,59,70,66,63,75,72],
[62,71,0,71,67,78,66,69],
[53,60,59,0,59,61,69,67],
[74,64,63,71,0,61,73,75],
[60,67,52,69,69,0,62,62],
[53,55,64,61,57,68,0,63],
[57,58,61,63,55,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,65,65,65,65,65,0],
[130,0,65,130,65,130,65,130],
[65,65,0,65,65,65,65,65],
[65,0,65,0,0,65,65,0],
[65,65,65,130,0,130,65,65],
[65,0,65,65,0,0,65,0],
[65,65,65,65,65,65,0,65],
[130,0,65,130,65,130,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,71,68,63,65,71,70],
[74,0,63,68,61,60,64,70],
[59,67,0,69,66,67,61,67],
[62,62,61,0,53,50,61,61],
[67,69,64,77,0,66,74,74],
[65,70,63,80,64,0,68,73],
[59,66,69,69,56,62,0,66],
[60,60,63,69,56,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,83,67,72,61,59,63],
[61,0,65,61,61,66,50,64],
[47,65,0,61,50,44,60,63],
[63,69,69,0,64,58,58,62],
[58,69,80,66,0,59,59,67],
[69,64,86,72,71,0,65,68],
[71,80,70,72,71,65,0,76],
[67,66,67,68,63,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,66,64,65,67,91],
[66,0,71,64,62,80,65,80],
[69,59,0,69,67,79,71,84],
[64,66,61,0,61,67,58,79],
[66,68,63,69,0,83,72,88],
[65,50,51,63,47,0,60,63],
[63,65,59,72,58,70,0,77],
[39,50,46,51,42,67,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,53,67,54,52,63],
[68,0,65,58,65,59,62,64],
[70,65,0,52,58,57,59,65],
[77,72,78,0,71,65,65,68],
[63,65,72,59,0,59,61,66],
[76,71,73,65,71,0,58,74],
[78,68,71,65,69,72,0,70],
[67,66,65,62,64,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,58,64,64,57,69],
[71,0,72,56,63,72,58,72],
[63,58,0,58,66,73,54,67],
[72,74,72,0,69,83,65,78],
[66,67,64,61,0,80,60,72],
[66,58,57,47,50,0,48,67],
[73,72,76,65,70,82,0,73],
[61,58,63,52,58,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,70,57,71,66,61],
[62,0,73,61,63,67,53,68],
[60,57,0,49,58,65,56,48],
[60,69,81,0,60,74,76,64],
[73,67,72,70,0,71,67,63],
[59,63,65,56,59,0,63,53],
[64,77,74,54,63,67,0,60],
[69,62,82,66,67,77,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,76,61,77,69,58],
[72,0,66,78,64,71,71,62],
[72,64,0,59,67,70,81,57],
[54,52,71,0,56,78,55,67],
[69,66,63,74,0,81,61,51],
[53,59,60,52,49,0,45,58],
[61,59,49,75,69,85,0,55],
[72,68,73,63,79,72,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,56,58,62,59,51],
[77,0,76,76,54,76,62,58],
[68,54,0,63,64,73,65,60],
[74,54,67,0,57,70,60,59],
[72,76,66,73,0,66,58,59],
[68,54,57,60,64,0,58,55],
[71,68,65,70,72,72,0,71],
[79,72,70,71,71,75,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,68,78,67,67,60],
[69,0,67,65,73,68,79,68],
[58,63,0,54,62,60,61,50],
[62,65,76,0,75,76,75,64],
[52,57,68,55,0,54,58,44],
[63,62,70,54,76,0,70,64],
[63,51,69,55,72,60,0,51],
[70,62,80,66,86,66,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,47,45,54,43,44,45],
[74,0,62,59,65,61,55,56],
[83,68,0,67,65,74,56,58],
[85,71,63,0,75,65,58,57],
[76,65,65,55,0,68,64,56],
[87,69,56,65,62,0,67,67],
[86,75,74,72,66,63,0,62],
[85,74,72,73,74,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,33,33,96,33,33,33],
[97,0,99,96,97,130,67,65],
[97,31,0,31,97,97,0,0],
[97,34,99,0,97,99,34,33],
[34,33,33,33,0,67,33,33],
[97,0,33,31,63,0,0,0],
[97,63,130,96,97,130,0,65],
[97,65,130,97,97,130,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,68,73,72,72,72,65],
[56,0,69,64,60,68,65,58],
[62,61,0,67,63,64,63,56],
[57,66,63,0,59,68,62,62],
[58,70,67,71,0,71,67,60],
[58,62,66,62,59,0,62,61],
[58,65,67,68,63,68,0,63],
[65,72,74,68,70,69,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,86,65,64,63,85,107],
[45,0,65,45,66,45,64,66],
[44,65,0,68,64,87,85,65],
[65,85,62,0,64,84,85,62],
[66,64,66,66,0,87,66,87],
[67,85,43,46,43,0,87,65],
[45,66,45,45,64,43,0,66],
[23,64,65,68,43,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,76,75,76,57,68,70],
[75,0,86,69,84,66,62,86],
[54,44,0,65,68,41,47,62],
[55,61,65,0,76,55,68,73],
[54,46,62,54,0,35,69,71],
[73,64,89,75,95,0,70,82],
[62,68,83,62,61,60,0,73],
[60,44,68,57,59,48,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,64,58,70,56,58],
[70,0,65,62,57,64,55,54],
[71,65,0,70,60,67,57,59],
[66,68,60,0,60,65,58,66],
[72,73,70,70,0,77,68,64],
[60,66,63,65,53,0,59,66],
[74,75,73,72,62,71,0,72],
[72,76,71,64,66,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,64,74,67,63,73],
[62,0,63,68,72,59,68,80],
[71,67,0,65,66,66,52,71],
[66,62,65,0,82,63,64,70],
[56,58,64,48,0,56,53,56],
[63,71,64,67,74,0,68,74],
[67,62,78,66,77,62,0,66],
[57,50,59,60,74,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,65,68,69,78,58],
[58,0,72,62,68,59,74,65],
[66,58,0,65,60,59,74,61],
[65,68,65,0,65,62,76,64],
[62,62,70,65,0,56,64,56],
[61,71,71,68,74,0,81,65],
[52,56,56,54,66,49,0,57],
[72,65,69,66,74,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,32,81,81,79,64,99],
[32,0,15,48,48,47,65,48],
[98,115,0,99,99,64,66,99],
[49,82,31,0,50,47,33,83],
[49,82,31,80,0,46,64,80],
[51,83,66,83,84,0,49,67],
[66,65,64,97,66,81,0,97],
[31,82,31,47,50,63,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,60,62,67,60,68],
[65,0,68,71,62,69,66,63],
[58,62,0,65,63,63,56,62],
[70,59,65,0,57,60,63,59],
[68,68,67,73,0,76,67,63],
[63,61,67,70,54,0,66,57],
[70,64,74,67,63,64,0,60],
[62,67,68,71,67,73,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,50,45,69,52,36,50],
[78,0,58,68,75,72,70,74],
[80,72,0,54,76,63,61,61],
[85,62,76,0,70,85,62,72],
[61,55,54,60,0,58,49,51],
[78,58,67,45,72,0,58,65],
[94,60,69,68,81,72,0,71],
[80,56,69,58,79,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,80,67,73,66,65,77],
[60,0,70,62,68,59,52,70],
[50,60,0,49,69,50,61,74],
[63,68,81,0,71,62,66,81],
[57,62,61,59,0,53,63,66],
[64,71,80,68,77,0,81,80],
[65,78,69,64,67,49,0,75],
[53,60,56,49,64,50,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,81,61,73,71,64,60],
[59,0,70,71,51,57,42,62],
[49,60,0,53,61,58,45,63],
[69,59,77,0,50,72,48,55],
[57,79,69,80,0,61,78,69],
[59,73,72,58,69,0,63,69],
[66,88,85,82,52,67,0,79],
[70,68,67,75,61,61,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,52,65,64,57,57],
[70,0,73,69,65,61,73,68],
[69,57,0,67,68,73,65,65],
[78,61,63,0,74,67,67,58],
[65,65,62,56,0,64,51,63],
[66,69,57,63,66,0,65,65],
[73,57,65,63,79,65,0,59],
[73,62,65,72,67,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,62,67,68,60,68,70],
[57,0,67,66,58,60,59,59],
[68,63,0,66,75,68,70,66],
[63,64,64,0,62,67,67,69],
[62,72,55,68,0,59,68,60],
[70,70,62,63,71,0,75,66],
[62,71,60,63,62,55,0,66],
[60,71,64,61,70,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,64,67,68,64,68],
[56,0,73,62,52,61,58,60],
[58,57,0,56,63,61,56,70],
[66,68,74,0,70,67,53,67],
[63,78,67,60,0,67,70,63],
[62,69,69,63,63,0,69,67],
[66,72,74,77,60,61,0,67],
[62,70,60,63,67,63,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,58,66,71,59,60,68],
[71,0,71,75,74,66,65,80],
[72,59,0,61,68,70,58,77],
[64,55,69,0,73,64,63,67],
[59,56,62,57,0,63,60,56],
[71,64,60,66,67,0,59,65],
[70,65,72,67,70,71,0,64],
[62,50,53,63,74,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,53,67,65,64,64,52],
[84,0,74,69,65,76,80,54],
[77,56,0,74,63,71,84,75],
[63,61,56,0,64,61,79,58],
[65,65,67,66,0,59,81,62],
[66,54,59,69,71,0,69,58],
[66,50,46,51,49,61,0,48],
[78,76,55,72,68,72,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,64,65,42,65,108,65],
[63,0,43,21,21,66,87,44],
[66,87,0,65,65,108,108,87],
[65,109,65,0,43,86,66,65],
[88,109,65,87,0,130,130,109],
[65,64,22,44,0,0,43,23],
[22,43,22,64,0,87,0,43],
[65,86,43,65,21,107,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,54,51,56,59,50,62],
[80,0,66,64,64,63,67,69],
[76,64,0,68,69,56,64,76],
[79,66,62,0,68,63,66,68],
[74,66,61,62,0,61,58,75],
[71,67,74,67,69,0,64,71],
[80,63,66,64,72,66,0,75],
[68,61,54,62,55,59,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,62,76,59,64,67,67],
[74,0,62,82,70,73,71,54],
[68,68,0,72,56,65,70,53],
[54,48,58,0,49,65,52,59],
[71,60,74,81,0,82,86,59],
[66,57,65,65,48,0,68,63],
[63,59,60,78,44,62,0,57],
[63,76,77,71,71,67,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,63,85,74,88,71],
[61,0,80,58,71,69,75,53],
[60,50,0,62,72,63,76,60],
[67,72,68,0,77,67,70,58],
[45,59,58,53,0,53,67,53],
[56,61,67,63,77,0,67,66],
[42,55,54,60,63,63,0,58],
[59,77,70,72,77,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,56,52,53,52,59,51],
[81,0,87,72,65,75,83,78],
[74,43,0,55,70,62,67,64],
[78,58,75,0,60,64,79,79],
[77,65,60,70,0,56,76,79],
[78,55,68,66,74,0,74,67],
[71,47,63,51,54,56,0,72],
[79,52,66,51,51,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,64,65,58,71,63],
[61,0,68,60,66,49,80,65],
[62,62,0,63,64,59,67,74],
[66,70,67,0,68,61,75,78],
[65,64,66,62,0,68,61,62],
[72,81,71,69,62,0,75,70],
[59,50,63,55,69,55,0,60],
[67,65,56,52,68,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,80,70,83,74,63],
[66,0,54,65,66,77,66,63],
[64,76,0,82,68,73,85,66],
[50,65,48,0,52,63,60,58],
[60,64,62,78,0,71,72,54],
[47,53,57,67,59,0,52,60],
[56,64,45,70,58,78,0,57],
[67,67,64,72,76,70,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,88,67,88,65,44,65],
[44,0,87,66,87,44,22,66],
[42,43,0,87,64,43,44,65],
[63,64,43,0,64,43,43,64],
[42,43,66,66,0,43,43,64],
[65,86,87,87,87,0,86,65],
[86,108,86,87,87,44,0,88],
[65,64,65,66,66,65,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,67,58,68,60,82],
[62,0,70,70,53,78,68,74],
[58,60,0,59,59,69,64,70],
[63,60,71,0,54,70,59,69],
[72,77,71,76,0,73,65,87],
[62,52,61,60,57,0,60,70],
[70,62,66,71,65,70,0,71],
[48,56,60,61,43,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,53,78,78,57,64,68],
[56,0,54,55,71,53,64,45],
[77,76,0,65,72,60,72,57],
[52,75,65,0,69,62,71,54],
[52,59,58,61,0,54,48,62],
[73,77,70,68,76,0,65,55],
[66,66,58,59,82,65,0,56],
[62,85,73,76,68,75,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,64,71,62,74,74],
[70,0,65,68,85,75,81,75],
[63,65,0,54,66,65,65,65],
[66,62,76,0,66,61,83,82],
[59,45,64,64,0,68,67,70],
[68,55,65,69,62,0,70,70],
[56,49,65,47,63,60,0,58],
[56,55,65,48,60,60,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,55,86,66,52,77,62],
[63,0,57,71,81,58,83,62],
[75,73,0,81,81,62,87,68],
[44,59,49,0,74,47,56,50],
[64,49,49,56,0,65,54,53],
[78,72,68,83,65,0,75,70],
[53,47,43,74,76,55,0,55],
[68,68,62,80,77,60,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,74,67,66,66,66,58],
[65,0,68,66,56,60,70,63],
[56,62,0,64,57,58,66,61],
[63,64,66,0,59,69,68,60],
[64,74,73,71,0,64,80,67],
[64,70,72,61,66,0,73,65],
[64,60,64,62,50,57,0,67],
[72,67,69,70,63,65,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,50,71,61,63,62,56],
[58,0,39,60,53,45,52,50],
[80,91,0,85,69,69,70,64],
[59,70,45,0,55,57,48,67],
[69,77,61,75,0,56,70,61],
[67,85,61,73,74,0,60,69],
[68,78,60,82,60,70,0,66],
[74,80,66,63,69,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,63,86,75,71,59],
[55,0,57,47,60,69,64,52],
[59,73,0,37,72,67,67,65],
[67,83,93,0,79,75,79,63],
[44,70,58,51,0,58,46,44],
[55,61,63,55,72,0,70,56],
[59,66,63,51,84,60,0,71],
[71,78,65,67,86,74,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,78,85,80,61,80,80],
[65,0,64,81,58,61,77,78],
[52,66,0,74,73,59,77,75],
[45,49,56,0,53,51,64,65],
[50,72,57,77,0,68,67,70],
[69,69,71,79,62,0,75,79],
[50,53,53,66,63,55,0,64],
[50,52,55,65,60,51,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,61,61,64,58,52,73],
[77,0,77,79,82,64,74,84],
[69,53,0,75,82,55,62,70],
[69,51,55,0,45,54,60,78],
[66,48,48,85,0,55,59,72],
[72,66,75,76,75,0,60,73],
[78,56,68,70,71,70,0,80],
[57,46,60,52,58,57,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,65,57,56,46,60,54],
[82,0,67,69,56,60,55,65],
[65,63,0,64,63,60,58,57],
[73,61,66,0,64,52,51,70],
[74,74,67,66,0,50,46,53],
[84,70,70,78,80,0,72,55],
[70,75,72,79,84,58,0,67],
[76,65,73,60,77,75,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,81,69,69,63,62,62],
[61,0,73,69,64,60,61,55],
[49,57,0,54,50,56,56,57],
[61,61,76,0,62,68,54,64],
[61,66,80,68,0,70,71,73],
[67,70,74,62,60,0,66,64],
[68,69,74,76,59,64,0,64],
[68,75,73,66,57,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,72,72,65,74,77],
[65,0,76,71,77,63,72,77],
[58,54,0,59,61,57,71,68],
[58,59,71,0,68,52,65,71],
[58,53,69,62,0,49,63,69],
[65,67,73,78,81,0,79,79],
[56,58,59,65,67,51,0,76],
[53,53,62,59,61,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,55,51,61,66,68,51],
[71,0,65,57,64,67,70,57],
[75,65,0,64,57,69,67,64],
[79,73,66,0,62,73,72,65],
[69,66,73,68,0,75,73,53],
[64,63,61,57,55,0,68,53],
[62,60,63,58,57,62,0,54],
[79,73,66,65,77,77,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,51,52,56,48,50,39],
[66,0,71,62,59,70,60,58],
[79,59,0,61,71,71,65,75],
[78,68,69,0,72,65,48,54],
[74,71,59,58,0,60,56,60],
[82,60,59,65,70,0,68,68],
[80,70,65,82,74,62,0,77],
[91,72,55,76,70,62,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,130,130,0,0,65,130],
[65,0,65,130,65,65,0,65],
[0,65,0,130,0,0,65,65],
[0,0,0,0,0,0,0,0],
[130,65,130,130,0,65,65,130],
[130,65,130,130,65,0,65,130],
[65,130,65,130,65,65,0,65],
[0,65,65,130,0,0,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,74,61,70,54,51,63],
[50,0,58,51,67,68,60,71],
[56,72,0,57,53,47,63,75],
[69,79,73,0,69,52,65,76],
[60,63,77,61,0,41,50,65],
[76,62,83,78,89,0,71,82],
[79,70,67,65,80,59,0,89],
[67,59,55,54,65,48,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,96,87,78,87,58],
[65,0,55,68,69,67,70,73],
[58,75,0,79,50,71,75,58],
[34,62,51,0,56,60,60,45],
[43,61,80,74,0,76,89,61],
[52,63,59,70,54,0,62,50],
[43,60,55,70,41,68,0,45],
[72,57,72,85,69,80,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,57,55,61,55,83,69],
[59,0,44,54,61,47,62,57],
[73,86,0,65,75,80,86,83],
[75,76,65,0,67,73,88,79],
[69,69,55,63,0,59,78,70],
[75,83,50,57,71,0,76,78],
[47,68,44,42,52,54,0,53],
[61,73,47,51,60,52,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,57,60,57,68,52],
[60,0,73,54,66,66,80,62],
[70,57,0,71,63,59,71,65],
[73,76,59,0,61,67,78,68],
[70,64,67,69,0,72,70,68],
[73,64,71,63,58,0,74,46],
[62,50,59,52,60,56,0,53],
[78,68,65,62,62,84,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,86,64,66,66,76,56],
[74,0,58,45,54,38,48,56],
[44,72,0,53,64,28,55,46],
[66,85,77,0,56,39,65,57],
[64,76,66,74,0,37,77,66],
[64,92,102,91,93,0,74,76],
[54,82,75,65,53,56,0,66],
[74,74,84,73,64,54,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,66,65,67,60,56],
[63,0,73,58,59,57,62,57],
[56,57,0,54,48,48,56,47],
[64,72,76,0,60,65,57,64],
[65,71,82,70,0,63,76,66],
[63,73,82,65,67,0,72,66],
[70,68,74,73,54,58,0,63],
[74,73,83,66,64,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,58,62,56,61,59],
[69,0,58,56,63,68,62,66],
[68,72,0,65,62,62,64,64],
[72,74,65,0,67,66,64,64],
[68,67,68,63,0,72,63,64],
[74,62,68,64,58,0,66,66],
[69,68,66,66,67,64,0,71],
[71,64,66,66,66,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,58,60,66,59,69,65],
[79,0,52,68,69,60,58,56],
[72,78,0,82,79,64,67,51],
[70,62,48,0,71,56,46,55],
[64,61,51,59,0,67,58,53],
[71,70,66,74,63,0,52,63],
[61,72,63,84,72,78,0,71],
[65,74,79,75,77,67,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,70,62,64,76,67,63],
[52,0,65,58,54,63,61,49],
[60,65,0,55,66,68,64,61],
[68,72,75,0,78,80,75,61],
[66,76,64,52,0,81,66,65],
[54,67,62,50,49,0,58,52],
[63,69,66,55,64,72,0,69],
[67,81,69,69,65,78,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,67,57,52,45,54,54],
[71,0,78,60,67,53,57,59],
[63,52,0,52,54,61,51,55],
[73,70,78,0,90,68,61,68],
[78,63,76,40,0,61,50,62],
[85,77,69,62,69,0,65,66],
[76,73,79,69,80,65,0,75],
[76,71,75,62,68,64,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,59,70,68,59,60,57],
[73,0,65,72,69,72,66,66],
[71,65,0,69,61,60,64,53],
[60,58,61,0,55,62,54,54],
[62,61,69,75,0,59,62,64],
[71,58,70,68,71,0,62,66],
[70,64,66,76,68,68,0,61],
[73,64,77,76,66,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,58,70,61,61,71],
[70,0,74,60,64,59,63,68],
[66,56,0,53,65,58,68,65],
[72,70,77,0,66,65,67,69],
[60,66,65,64,0,56,64,63],
[69,71,72,65,74,0,65,62],
[69,67,62,63,66,65,0,66],
[59,62,65,61,67,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,62,60,66,62,58],
[63,0,60,62,54,56,66,58],
[65,70,0,70,56,73,62,65],
[68,68,60,0,54,69,69,63],
[70,76,74,76,0,70,65,63],
[64,74,57,61,60,0,73,71],
[68,64,68,61,65,57,0,56],
[72,72,65,67,67,59,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,58,61,56,52,54],
[61,0,46,53,67,67,67,57],
[74,84,0,67,68,64,63,64],
[72,77,63,0,64,60,70,66],
[69,63,62,66,0,65,69,63],
[74,63,66,70,65,0,67,65],
[78,63,67,60,61,63,0,65],
[76,73,66,64,67,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,35,63,55,44,61],
[89,0,71,57,76,96,71,79],
[82,59,0,66,70,86,63,80],
[95,73,64,0,74,95,69,78],
[67,54,60,56,0,88,66,79],
[75,34,44,35,42,0,53,64],
[86,59,67,61,64,77,0,82],
[69,51,50,52,51,66,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,53,77,55,59,58,61],
[82,0,65,82,69,61,67,72],
[77,65,0,82,66,67,58,65],
[53,48,48,0,49,58,50,61],
[75,61,64,81,0,59,70,72],
[71,69,63,72,71,0,47,69],
[72,63,72,80,60,83,0,71],
[69,58,65,69,58,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,69,62,67,68,67],
[69,0,70,61,64,67,70,66],
[67,60,0,65,60,69,75,65],
[61,69,65,0,66,73,72,65],
[68,66,70,64,0,68,74,76],
[63,63,61,57,62,0,67,63],
[62,60,55,58,56,63,0,65],
[63,64,65,65,54,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,66,70,61,66,59],
[62,0,67,70,68,59,57,60],
[58,63,0,61,73,50,57,58],
[64,60,69,0,69,52,63,58],
[60,62,57,61,0,58,57,58],
[69,71,80,78,72,0,65,71],
[64,73,73,67,73,65,0,70],
[71,70,72,72,72,59,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,55,61,57,68,57,64],
[68,0,55,71,64,76,57,67],
[75,75,0,70,64,72,65,79],
[69,59,60,0,56,68,58,70],
[73,66,66,74,0,71,60,73],
[62,54,58,62,59,0,52,68],
[73,73,65,72,70,78,0,70],
[66,63,51,60,57,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,54,52,45,58,60],
[61,0,60,62,83,58,66,80],
[60,70,0,71,69,65,67,64],
[76,68,59,0,67,48,61,73],
[78,47,61,63,0,58,65,74],
[85,72,65,82,72,0,81,88],
[72,64,63,69,65,49,0,75],
[70,50,66,57,56,42,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,80,65,54,59,55,65],
[56,0,88,62,66,62,65,55],
[50,42,0,47,52,31,45,59],
[65,68,83,0,67,67,67,78],
[76,64,78,63,0,64,73,79],
[71,68,99,63,66,0,75,75],
[75,65,85,63,57,55,0,71],
[65,75,71,52,51,55,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,72,63,70,74,74],
[64,0,65,71,59,71,62,67],
[58,65,0,63,50,61,58,57],
[58,59,67,0,53,61,55,64],
[67,71,80,77,0,71,76,64],
[60,59,69,69,59,0,65,53],
[56,68,72,75,54,65,0,66],
[56,63,73,66,66,77,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,65,61,73,61,69],
[64,0,71,70,67,76,68,67],
[67,59,0,74,72,82,72,73],
[65,60,56,0,62,71,58,59],
[69,63,58,68,0,73,62,67],
[57,54,48,59,57,0,59,63],
[69,62,58,72,68,71,0,70],
[61,63,57,71,63,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,62,66,64,69,71],
[64,0,65,63,73,62,67,58],
[63,65,0,60,69,66,62,67],
[68,67,70,0,75,64,69,75],
[64,57,61,55,0,56,65,55],
[66,68,64,66,74,0,71,77],
[61,63,68,61,65,59,0,63],
[59,72,63,55,75,53,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,78,65,70,76,68,72],
[60,0,72,68,66,72,63,64],
[52,58,0,61,62,70,69,61],
[65,62,69,0,72,75,72,67],
[60,64,68,58,0,76,56,64],
[54,58,60,55,54,0,60,62],
[62,67,61,58,74,70,0,63],
[58,66,69,63,66,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,68,90,34,66,67],
[62,0,75,63,63,62,86,52],
[64,55,0,34,55,45,45,43],
[62,67,96,0,85,53,86,76],
[40,67,75,45,0,55,75,77],
[96,68,85,77,75,0,86,62],
[64,44,85,44,55,44,0,56],
[63,78,87,54,53,68,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,63,51,76,64,67],
[53,0,51,46,42,45,39,50],
[62,79,0,64,67,57,59,78],
[67,84,66,0,70,61,59,58],
[79,88,63,60,0,72,78,76],
[54,85,73,69,58,0,53,59],
[66,91,71,71,52,77,0,84],
[63,80,52,72,54,71,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,130,130,130,65,65,65,130],
[0,0,0,65,0,0,65,65],
[0,130,0,130,65,0,65,65],
[0,65,0,0,65,0,65,0],
[65,130,65,65,0,0,65,65],
[65,130,130,130,130,0,65,65],
[65,65,65,65,65,65,0,65],
[0,65,65,130,65,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,64,57,75,62,63,67],
[74,0,58,58,70,64,46,74],
[66,72,0,69,71,66,55,70],
[73,72,61,0,70,67,69,61],
[55,60,59,60,0,49,56,56],
[68,66,64,63,81,0,61,73],
[67,84,75,61,74,69,0,82],
[63,56,60,69,74,57,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,87,92,77,78,70],
[64,0,51,73,85,85,54,77],
[65,79,0,91,86,97,74,91],
[43,57,39,0,66,54,55,53],
[38,45,44,64,0,60,66,70],
[53,45,33,76,70,0,73,54],
[52,76,56,75,64,57,0,53],
[60,53,39,77,60,76,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,56,60,71,64,66],
[55,0,79,58,54,68,63,63],
[53,51,0,52,47,49,58,60],
[74,72,78,0,67,62,68,67],
[70,76,83,63,0,71,74,75],
[59,62,81,68,59,0,67,71],
[66,67,72,62,56,63,0,67],
[64,67,70,63,55,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,62,75,65,78,81],
[68,0,62,67,68,56,73,85],
[71,68,0,67,78,58,81,79],
[68,63,63,0,72,70,64,77],
[55,62,52,58,0,52,64,72],
[65,74,72,60,78,0,68,79],
[52,57,49,66,66,62,0,76],
[49,45,51,53,58,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,83,71,37,48,82,34],
[59,0,70,60,60,47,46,22],
[47,60,0,47,49,35,82,47],
[59,70,83,0,72,70,69,70],
[93,70,81,58,0,70,69,70],
[82,83,95,60,60,0,94,58],
[48,84,48,61,61,36,0,36],
[96,108,83,60,60,72,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,60,56,56,63,60,52],
[75,0,69,63,70,73,63,65],
[70,61,0,67,60,80,68,68],
[74,67,63,0,66,68,65,65],
[74,60,70,64,0,75,63,61],
[67,57,50,62,55,0,55,62],
[70,67,62,65,67,75,0,70],
[78,65,62,65,69,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,67,71,66,74,66,65],
[58,0,57,55,60,69,64,67],
[63,73,0,64,60,70,70,76],
[59,75,66,0,64,68,62,66],
[64,70,70,66,0,74,64,64],
[56,61,60,62,56,0,62,66],
[64,66,60,68,66,68,0,67],
[65,63,54,64,66,64,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,56,61,72,69,63,70],
[65,0,54,74,71,62,72,84],
[74,76,0,62,73,67,66,73],
[69,56,68,0,66,64,61,64],
[58,59,57,64,0,66,65,72],
[61,68,63,66,64,0,65,77],
[67,58,64,69,65,65,0,65],
[60,46,57,66,58,53,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,65,56,63,50,96],
[66,0,49,65,74,64,75,90],
[66,81,0,58,57,89,66,97],
[65,65,72,0,90,64,65,115],
[74,56,73,40,0,63,67,113],
[67,66,41,66,67,0,68,107],
[80,55,64,65,63,62,0,90],
[34,40,33,15,17,23,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,78,71,63,56,72,78],
[57,0,59,69,62,58,66,65],
[52,71,0,65,58,58,68,70],
[59,61,65,0,58,67,63,66],
[67,68,72,72,0,65,70,71],
[74,72,72,63,65,0,75,79],
[58,64,62,67,60,55,0,67],
[52,65,60,64,59,51,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,77,57,51,67,50],
[69,0,50,80,68,61,63,67],
[75,80,0,78,80,65,80,68],
[53,50,52,0,58,47,62,51],
[73,62,50,72,0,62,65,49],
[79,69,65,83,68,0,70,62],
[63,67,50,68,65,60,0,63],
[80,63,62,79,81,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,73,72,61,69,65],
[62,0,63,69,75,51,56,61],
[59,67,0,57,66,53,57,53],
[57,61,73,0,69,58,48,55],
[58,55,64,61,0,53,54,43],
[69,79,77,72,77,0,63,57],
[61,74,73,82,76,67,0,70],
[65,69,77,75,87,73,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,53,68,77,52,54],
[62,0,81,72,82,63,64,60],
[53,49,0,19,71,74,55,52],
[77,58,111,0,88,79,105,67],
[62,48,59,42,0,69,78,59],
[53,67,56,51,61,0,56,16],
[78,66,75,25,52,74,0,65],
[76,70,78,63,71,114,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,59,69,61,52,64,57],
[69,0,61,74,61,60,65,62],
[71,69,0,76,67,56,66,68],
[61,56,54,0,60,54,63,52],
[69,69,63,70,0,51,69,60],
[78,70,74,76,79,0,70,64],
[66,65,64,67,61,60,0,63],
[73,68,62,78,70,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,70,66,60,76,63],
[55,0,59,66,57,52,57,60],
[57,71,0,70,70,60,62,58],
[60,64,60,0,76,61,66,63],
[64,73,60,54,0,70,72,69],
[70,78,70,69,60,0,69,61],
[54,73,68,64,58,61,0,57],
[67,70,72,67,61,69,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,58,55,62,68,67,63],
[59,0,63,62,71,73,74,68],
[72,67,0,60,79,59,76,64],
[75,68,70,0,66,75,68,64],
[68,59,51,64,0,75,74,55],
[62,57,71,55,55,0,72,52],
[63,56,54,62,56,58,0,53],
[67,62,66,66,75,78,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,74,58,70,80,69,59],
[66,0,81,65,65,64,68,70],
[56,49,0,51,60,58,74,61],
[72,65,79,0,67,63,65,67],
[60,65,70,63,0,62,65,79],
[50,66,72,67,68,0,71,67],
[61,62,56,65,65,59,0,72],
[71,60,69,63,51,63,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,77,63,62,79,65,66],
[71,0,69,68,63,78,67,64],
[53,61,0,59,65,58,74,56],
[67,62,71,0,64,68,63,49],
[68,67,65,66,0,57,63,70],
[51,52,72,62,73,0,63,52],
[65,63,56,67,67,67,0,62],
[64,66,74,81,60,78,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,76,55,76,61,58,74],
[71,0,71,70,64,70,57,48],
[54,59,0,64,40,69,79,56],
[75,60,66,0,42,70,67,74],
[54,66,90,88,0,93,91,87],
[69,60,61,60,37,0,66,59],
[72,73,51,63,39,64,0,57],
[56,82,74,56,43,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,71,64,61,69,64],
[75,0,64,77,66,73,82,73],
[75,66,0,60,70,54,81,62],
[59,53,70,0,66,39,69,78],
[66,64,60,64,0,45,68,54],
[69,57,76,91,85,0,74,80],
[61,48,49,61,62,56,0,68],
[66,57,68,52,76,50,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,78,81,69,63,74,65],
[61,0,68,70,70,68,77,62],
[52,62,0,78,58,59,69,63],
[49,60,52,0,61,54,55,46],
[61,60,72,69,0,58,64,61],
[67,62,71,76,72,0,74,69],
[56,53,61,75,66,56,0,56],
[65,68,67,84,69,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,56,62,74,49,57],
[55,0,72,58,65,69,51,49],
[59,58,0,58,67,71,50,56],
[74,72,72,0,83,73,70,61],
[68,65,63,47,0,66,49,61],
[56,61,59,57,64,0,55,51],
[81,79,80,60,81,75,0,74],
[73,81,74,69,69,79,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,64,66,45,67,76,60],
[76,0,70,67,58,72,60,63],
[66,60,0,73,48,61,53,65],
[64,63,57,0,39,71,52,63],
[85,72,82,91,0,88,65,71],
[63,58,69,59,42,0,84,71],
[54,70,77,78,65,46,0,77],
[70,67,65,67,59,59,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,68,69,60,65,71],
[62,0,60,60,67,63,58,62],
[57,70,0,64,59,65,59,72],
[62,70,66,0,61,67,58,67],
[61,63,71,69,0,67,65,76],
[70,67,65,63,63,0,66,72],
[65,72,71,72,65,64,0,76],
[59,68,58,63,54,58,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,53,53,60,51,71,60],
[75,0,58,69,66,64,70,65],
[77,72,0,67,66,69,64,66],
[77,61,63,0,72,65,79,72],
[70,64,64,58,0,70,75,67],
[79,66,61,65,60,0,67,61],
[59,60,66,51,55,63,0,61],
[70,65,64,58,63,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,69,54,64,70,70,64],
[67,0,75,66,65,73,79,63],
[61,55,0,53,49,51,68,55],
[76,64,77,0,62,71,75,65],
[66,65,81,68,0,66,77,68],
[60,57,79,59,64,0,71,70],
[60,51,62,55,53,59,0,60],
[66,67,75,65,62,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,70,70,64,64,67],
[56,0,67,59,59,56,56,58],
[60,63,0,62,65,65,59,59],
[60,71,68,0,69,69,67,63],
[60,71,65,61,0,64,61,60],
[66,74,65,61,66,0,54,65],
[66,74,71,63,69,76,0,64],
[63,72,71,67,70,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,63,69,70,73,59,69],
[62,0,73,61,69,80,69,72],
[67,57,0,60,75,80,54,66],
[61,69,70,0,72,73,54,60],
[60,61,55,58,0,69,57,52],
[57,50,50,57,61,0,51,51],
[71,61,76,76,73,79,0,85],
[61,58,64,70,78,79,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,64,58,64,65,56,55],
[77,0,83,63,80,67,67,70],
[66,47,0,52,61,53,59,48],
[72,67,78,0,69,66,73,64],
[66,50,69,61,0,62,54,52],
[65,63,77,64,68,0,68,56],
[74,63,71,57,76,62,0,59],
[75,60,82,66,78,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,64,58,68,73,56],
[69,0,61,61,57,63,64,60],
[72,69,0,56,60,69,65,58],
[66,69,74,0,64,61,64,54],
[72,73,70,66,0,69,71,65],
[62,67,61,69,61,0,64,68],
[57,66,65,66,59,66,0,64],
[74,70,72,76,65,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,59,65,64,62,65],
[67,0,60,66,64,66,63,67],
[72,70,0,63,66,71,72,75],
[71,64,67,0,66,69,68,73],
[65,66,64,64,0,64,71,72],
[66,64,59,61,66,0,66,65],
[68,67,58,62,59,64,0,63],
[65,63,55,57,58,65,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,63,59,37,42,60,60],
[78,0,73,76,65,60,81,82],
[67,57,0,74,37,46,58,64],
[71,54,56,0,36,42,62,62],
[93,65,93,94,0,69,89,91],
[88,70,84,88,61,0,85,97],
[70,49,72,68,41,45,0,60],
[70,48,66,68,39,33,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,67,68,68,55,52,48],
[88,0,70,68,64,77,63,53],
[63,60,0,67,59,65,59,59],
[62,62,63,0,46,51,55,56],
[62,66,71,84,0,57,65,59],
[75,53,65,79,73,0,62,63],
[78,67,71,75,65,68,0,65],
[82,77,71,74,71,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,70,57,64,59,59,61],
[67,0,65,66,65,67,62,62],
[60,65,0,59,60,59,64,63],
[73,64,71,0,67,67,65,67],
[66,65,70,63,0,62,57,65],
[71,63,71,63,68,0,65,68],
[71,68,66,65,73,65,0,63],
[69,68,67,63,65,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,61,59,68,72,61],
[70,0,75,72,72,69,76,65],
[61,55,0,69,59,49,57,69],
[69,58,61,0,49,66,70,65],
[71,58,71,81,0,62,74,71],
[62,61,81,64,68,0,64,66],
[58,54,73,60,56,66,0,61],
[69,65,61,65,59,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,69,64,54,64,60],
[63,0,64,67,46,67,72,61],
[60,66,0,50,45,47,52,47],
[61,63,80,0,54,63,57,68],
[66,84,85,76,0,62,67,52],
[76,63,83,67,68,0,51,64],
[66,58,78,73,63,79,0,52],
[70,69,83,62,78,66,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,83,64,65,70,71],
[73,0,75,69,64,65,66,68],
[64,55,0,81,56,59,60,64],
[47,61,49,0,51,43,52,48],
[66,66,74,79,0,63,76,70],
[65,65,71,87,67,0,64,67],
[60,64,70,78,54,66,0,69],
[59,62,66,82,60,63,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,57,68,60,70,67,75],
[55,0,64,61,58,75,63,62],
[73,66,0,65,66,68,72,74],
[62,69,65,0,56,67,66,70],
[70,72,64,74,0,72,81,76],
[60,55,62,63,58,0,70,67],
[63,67,58,64,49,60,0,65],
[55,68,56,60,54,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,34,62,52,43,35,24],
[97,0,73,75,68,75,49,71],
[96,57,0,78,67,68,60,69],
[68,55,52,0,61,48,55,54],
[78,62,63,69,0,85,56,55],
[87,55,62,82,45,0,62,60],
[95,81,70,75,74,68,0,59],
[106,59,61,76,75,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,52,78,51,62,53],
[67,0,66,65,74,73,62,80],
[69,64,0,63,73,63,63,73],
[78,65,67,0,77,75,72,73],
[52,56,57,53,0,46,50,66],
[79,57,67,55,84,0,67,67],
[68,68,67,58,80,63,0,78],
[77,50,57,57,64,63,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,83,66,72,60,81,55],
[62,0,83,71,63,74,84,74],
[47,47,0,64,42,58,64,55],
[64,59,66,0,61,51,65,71],
[58,67,88,69,0,72,88,60],
[70,56,72,79,58,0,91,63],
[49,46,66,65,42,39,0,65],
[75,56,75,59,70,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,58,60,59,63,59,63],
[60,0,64,53,62,53,56,60],
[72,66,0,56,61,54,65,57],
[70,77,74,0,68,70,73,64],
[71,68,69,62,0,71,67,66],
[67,77,76,60,59,0,66,66],
[71,74,65,57,63,64,0,65],
[67,70,73,66,64,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,98,64,130,80,82,96],
[48,0,67,64,95,49,65,65],
[32,63,0,64,63,64,81,81],
[66,66,66,0,113,65,65,66],
[0,35,67,17,0,49,66,18],
[50,81,66,65,81,0,115,81],
[48,65,49,65,64,15,0,48],
[34,65,49,64,112,49,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,76,68,64,83,49,68],
[59,0,74,79,78,84,68,64],
[54,56,0,63,61,69,53,60],
[62,51,67,0,76,71,63,70],
[66,52,69,54,0,75,60,64],
[47,46,61,59,55,0,60,61],
[81,62,77,67,70,70,0,71],
[62,66,70,60,66,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,63,53,54,59,66,69],
[53,0,54,50,56,57,52,61],
[67,76,0,44,63,74,50,66],
[77,80,86,0,75,72,65,80],
[76,74,67,55,0,70,61,67],
[71,73,56,58,60,0,55,70],
[64,78,80,65,69,75,0,83],
[61,69,64,50,63,60,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,52,69,65,79,77,73],
[66,0,72,71,65,73,67,64],
[78,58,0,68,67,75,76,74],
[61,59,62,0,62,65,63,66],
[65,65,63,68,0,71,79,77],
[51,57,55,65,59,0,58,63],
[53,63,54,67,51,72,0,59],
[57,66,56,64,53,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,61,57,62,73,58,60],
[65,0,72,51,66,68,62,64],
[69,58,0,58,61,68,67,57],
[73,79,72,0,60,69,71,78],
[68,64,69,70,0,65,59,65],
[57,62,62,61,65,0,60,59],
[72,68,63,59,71,70,0,69],
[70,66,73,52,65,71,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,70,64,79,83,71],
[63,0,64,71,66,77,74,71],
[59,66,0,64,65,75,68,61],
[60,59,66,0,52,64,63,70],
[66,64,65,78,0,81,81,66],
[51,53,55,66,49,0,60,64],
[47,56,62,67,49,70,0,64],
[59,59,69,60,64,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,66,66,58,61,71,69],
[70,0,59,70,61,73,71,81],
[64,71,0,67,73,62,71,72],
[64,60,63,0,61,62,56,64],
[72,69,57,69,0,68,71,79],
[69,57,68,68,62,0,54,68],
[59,59,59,74,59,76,0,75],
[61,49,58,66,51,62,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,60,50,64,76,61],
[57,0,59,53,42,63,68,60],
[70,71,0,65,58,61,74,65],
[70,77,65,0,71,83,88,71],
[80,88,72,59,0,68,75,77],
[66,67,69,47,62,0,68,62],
[54,62,56,42,55,62,0,57],
[69,70,65,59,53,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,46,57,59,62,44,54],
[61,0,53,51,48,48,51,55],
[84,77,0,77,73,66,65,58],
[73,79,53,0,69,68,54,62],
[71,82,57,61,0,47,53,48],
[68,82,64,62,83,0,60,75],
[86,79,65,76,77,70,0,70],
[76,75,72,68,82,55,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,62,67,73,68,56],
[68,0,50,42,46,47,42,53],
[70,80,0,77,60,72,63,72],
[68,88,53,0,67,59,75,66],
[63,84,70,63,0,69,67,64],
[57,83,58,71,61,0,62,86],
[62,88,67,55,63,68,0,62],
[74,77,58,64,66,44,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,67,67,61,55,72],
[60,0,61,67,63,69,63,58],
[61,69,0,72,62,69,61,64],
[63,63,58,0,63,56,62,64],
[63,67,68,67,0,62,62,68],
[69,61,61,74,68,0,73,58],
[75,67,69,68,68,57,0,63],
[58,72,66,66,62,72,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,70,63,66,65,66],
[59,0,67,69,62,62,63,68],
[59,63,0,65,63,62,61,63],
[60,61,65,0,61,67,55,65],
[67,68,67,69,0,62,70,69],
[64,68,68,63,68,0,63,68],
[65,67,69,75,60,67,0,66],
[64,62,67,65,61,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,64,59,66,51,56],
[70,0,61,54,62,70,48,54],
[66,69,0,78,78,72,65,64],
[66,76,52,0,63,63,60,56],
[71,68,52,67,0,63,57,62],
[64,60,58,67,67,0,58,57],
[79,82,65,70,73,72,0,73],
[74,76,66,74,68,73,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,60,61,60,65,61],
[63,0,60,55,49,56,54,59],
[63,70,0,61,66,72,72,64],
[70,75,69,0,65,69,68,73],
[69,81,64,65,0,64,61,73],
[70,74,58,61,66,0,70,67],
[65,76,58,62,69,60,0,58],
[69,71,66,57,57,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,57,65,71,69,57,48],
[68,0,65,66,76,77,70,67],
[73,65,0,77,75,74,68,66],
[65,64,53,0,68,74,61,63],
[59,54,55,62,0,62,63,51],
[61,53,56,56,68,0,60,47],
[73,60,62,69,67,70,0,58],
[82,63,64,67,79,83,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,72,68,77,58,70,69],
[49,0,79,68,67,57,50,68],
[58,51,0,47,77,46,39,59],
[62,62,83,0,80,39,39,59],
[53,63,53,50,0,30,41,53],
[72,73,84,91,100,0,61,71],
[60,80,91,91,89,69,0,59],
[61,62,71,71,77,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,48,79,82,64,66],
[66,0,79,50,64,114,62,66],
[66,51,0,51,64,98,49,67],
[82,80,79,0,47,97,95,82],
[51,66,66,83,0,66,64,68],
[48,16,32,33,64,0,32,49],
[66,68,81,35,66,98,0,66],
[64,64,63,48,62,81,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,61,73,74,79,64,71],
[51,0,57,73,59,61,50,59],
[69,73,0,75,73,63,67,72],
[57,57,55,0,66,60,58,56],
[56,71,57,64,0,65,65,70],
[51,69,67,70,65,0,61,69],
[66,80,63,72,65,69,0,74],
[59,71,58,74,60,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,88,89,61,74,81,73],
[44,0,58,63,63,60,73,75],
[42,72,0,79,70,42,55,72],
[41,67,51,0,46,50,83,69],
[69,67,60,84,0,48,68,69],
[56,70,88,80,82,0,81,81],
[49,57,75,47,62,49,0,67],
[57,55,58,61,61,49,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,63,53,60,46,61,64],
[64,0,65,57,60,54,54,62],
[67,65,0,56,76,56,60,67],
[77,73,74,0,70,60,63,79],
[70,70,54,60,0,55,59,66],
[84,76,74,70,75,0,65,67],
[69,76,70,67,71,65,0,73],
[66,68,63,51,64,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,83,72,56,70,72],
[63,0,66,58,60,56,72,67],
[69,64,0,68,72,74,69,65],
[47,72,62,0,55,49,77,63],
[58,70,58,75,0,43,67,74],
[74,74,56,81,87,0,68,80],
[60,58,61,53,63,62,0,60],
[58,63,65,67,56,50,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,58,64,61,61,63],
[63,0,57,67,63,54,61,54],
[65,73,0,61,65,57,60,63],
[72,63,69,0,63,62,64,62],
[66,67,65,67,0,61,64,62],
[69,76,73,68,69,0,67,65],
[69,69,70,66,66,63,0,62],
[67,76,67,68,68,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,65,65,63,63,53,65],
[53,0,67,67,60,60,61,60],
[65,63,0,69,62,63,60,65],
[65,63,61,0,62,62,51,65],
[67,70,68,68,0,67,59,72],
[67,70,67,68,63,0,68,72],
[77,69,70,79,71,62,0,76],
[65,70,65,65,58,58,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,68,74,62,59,55,62],
[46,0,55,67,38,51,45,61],
[62,75,0,80,59,44,63,67],
[56,63,50,0,64,59,70,74],
[68,92,71,66,0,65,70,66],
[71,79,86,71,65,0,75,74],
[75,85,67,60,60,55,0,54],
[68,69,63,56,64,56,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,51,49,57,54,40],
[85,0,83,81,73,88,72,65],
[86,47,0,75,55,59,67,54],
[79,49,55,0,54,57,80,42],
[81,57,75,76,0,62,83,57],
[73,42,71,73,68,0,74,50],
[76,58,63,50,47,56,0,56],
[90,65,76,88,73,80,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,56,68,71,66,70],
[58,0,50,62,58,56,57,70],
[65,80,0,67,63,59,74,81],
[74,68,63,0,66,73,61,70],
[62,72,67,64,0,70,66,72],
[59,74,71,57,60,0,69,67],
[64,73,56,69,64,61,0,62],
[60,60,49,60,58,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,62,68,59,58,67,62],
[62,0,57,61,62,60,64,58],
[68,73,0,68,64,63,68,58],
[62,69,62,0,62,57,69,60],
[71,68,66,68,0,67,65,63],
[72,70,67,73,63,0,67,66],
[63,66,62,61,65,63,0,60],
[68,72,72,70,67,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,60,71,65,75,68],
[65,0,54,52,66,61,63,64],
[64,76,0,68,78,75,83,76],
[70,78,62,0,68,76,70,72],
[59,64,52,62,0,70,64,65],
[65,69,55,54,60,0,72,66],
[55,67,47,60,66,58,0,57],
[62,66,54,58,65,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,62,56,62,59,56],
[70,0,70,70,62,69,58,62],
[70,60,0,61,62,66,63,58],
[68,60,69,0,54,63,63,57],
[74,68,68,76,0,75,60,69],
[68,61,64,67,55,0,60,64],
[71,72,67,67,70,70,0,59],
[74,68,72,73,61,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,64,64,68,72,67],
[65,0,61,66,68,68,68,66],
[70,69,0,71,67,75,76,57],
[66,64,59,0,65,69,73,66],
[66,62,63,65,0,65,74,62],
[62,62,55,61,65,0,75,64],
[58,62,54,57,56,55,0,51],
[63,64,73,64,68,66,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,68,55,58,54,64,66],
[75,0,68,63,72,67,66,79],
[62,62,0,65,67,66,58,77],
[75,67,65,0,69,54,59,76],
[72,58,63,61,0,62,67,76],
[76,63,64,76,68,0,64,77],
[66,64,72,71,63,66,0,81],
[64,51,53,54,54,53,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,65,70,60,66,57,54],
[80,0,79,71,70,76,78,53],
[65,51,0,64,62,64,59,60],
[60,59,66,0,48,55,50,48],
[70,60,68,82,0,70,54,57],
[64,54,66,75,60,0,63,65],
[73,52,71,80,76,67,0,60],
[76,77,70,82,73,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,86,83,73,76,80,64],
[58,0,64,64,63,63,59,54],
[44,66,0,61,55,61,72,55],
[47,66,69,0,58,61,72,56],
[57,67,75,72,0,68,65,62],
[54,67,69,69,62,0,74,66],
[50,71,58,58,65,56,0,49],
[66,76,75,74,68,64,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,70,66,67,66,66,63],
[73,0,74,61,81,68,73,63],
[60,56,0,47,65,55,64,60],
[64,69,83,0,76,64,71,62],
[63,49,65,54,0,62,65,53],
[64,62,75,66,68,0,74,68],
[64,57,66,59,65,56,0,61],
[67,67,70,68,77,62,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,89,53,65,58,80],
[63,0,66,78,62,63,74,65],
[65,64,0,89,62,65,54,77],
[41,52,41,0,52,53,42,67],
[77,68,68,78,0,65,79,80],
[65,67,65,77,65,0,67,86],
[72,56,76,88,51,63,0,78],
[50,65,53,63,50,44,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,54,67,57,69,61,67],
[78,0,62,72,61,81,78,68],
[76,68,0,77,68,88,64,68],
[63,58,53,0,70,76,59,63],
[73,69,62,60,0,88,74,62],
[61,49,42,54,42,0,50,49],
[69,52,66,71,56,80,0,68],
[63,62,62,67,68,81,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,58,61,64,63,54,54],
[74,0,68,63,68,73,66,64],
[72,62,0,66,59,68,62,55],
[69,67,64,0,60,64,54,59],
[66,62,71,70,0,72,61,69],
[67,57,62,66,58,0,68,58],
[76,64,68,76,69,62,0,60],
[76,66,75,71,61,72,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,75,71,75,68,70,71],
[70,0,59,76,79,55,68,57],
[55,71,0,66,59,57,73,62],
[59,54,64,0,62,59,59,58],
[55,51,71,68,0,63,66,78],
[62,75,73,71,67,0,81,72],
[60,62,57,71,64,49,0,57],
[59,73,68,72,52,58,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,57,60,66,73,68],
[64,0,72,67,70,71,78,60],
[56,58,0,61,63,62,74,60],
[73,63,69,0,70,82,78,74],
[70,60,67,60,0,67,73,64],
[64,59,68,48,63,0,71,56],
[57,52,56,52,57,59,0,52],
[62,70,70,56,66,74,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,62,80,46,78,54,50],
[78,0,70,83,65,92,74,75],
[68,60,0,93,60,91,62,65],
[50,47,37,0,37,53,59,59],
[84,65,70,93,0,70,71,88],
[52,38,39,77,60,0,61,38],
[76,56,68,71,59,69,0,43],
[80,55,65,71,42,92,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,46,34,38,40,39,30],
[76,0,67,62,77,57,55,63],
[84,63,0,62,66,46,68,73],
[96,68,68,0,65,82,59,58],
[92,53,64,65,0,60,56,42],
[90,73,84,48,70,0,60,64],
[91,75,62,71,74,70,0,60],
[100,67,57,72,88,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,67,68,71,69,74,68],
[66,0,63,58,62,74,63,77],
[63,67,0,58,64,65,65,61],
[62,72,72,0,61,72,69,74],
[59,68,66,69,0,57,69,70],
[61,56,65,58,73,0,68,60],
[56,67,65,61,61,62,0,68],
[62,53,69,56,60,70,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,66,56,61,70,62],
[63,0,48,48,55,62,51,43],
[67,82,0,61,58,68,76,56],
[64,82,69,0,62,63,75,65],
[74,75,72,68,0,66,76,61],
[69,68,62,67,64,0,68,58],
[60,79,54,55,54,62,0,52],
[68,87,74,65,69,72,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,59,65,70,69,64,62],
[57,0,54,62,59,54,60,61],
[71,76,0,81,70,69,79,65],
[65,68,49,0,65,59,70,63],
[60,71,60,65,0,57,72,57],
[61,76,61,71,73,0,63,65],
[66,70,51,60,58,67,0,56],
[68,69,65,67,73,65,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,51,68,63,69,79,63],
[65,0,71,71,80,84,65,51],
[79,59,0,60,91,88,74,56],
[62,59,70,0,80,70,62,67],
[67,50,39,50,0,66,65,50],
[61,46,42,60,64,0,69,53],
[51,65,56,68,65,61,0,52],
[67,79,74,63,80,77,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,58,61,59,60,49,66],
[82,0,73,67,57,68,67,75],
[72,57,0,61,57,51,53,55],
[69,63,69,0,62,75,70,68],
[71,73,73,68,0,60,56,72],
[70,62,79,55,70,0,54,68],
[81,63,77,60,74,76,0,71],
[64,55,75,62,58,62,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,56,59,62,55,62,56],
[73,0,54,70,67,61,65,59],
[74,76,0,79,64,65,70,68],
[71,60,51,0,57,61,66,68],
[68,63,66,73,0,70,83,74],
[75,69,65,69,60,0,77,62],
[68,65,60,64,47,53,0,46],
[74,71,62,62,56,68,84,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,55,60,56,59,62,54],
[76,0,70,68,64,69,66,72],
[75,60,0,68,70,68,67,62],
[70,62,62,0,65,62,67,68],
[74,66,60,65,0,67,70,63],
[71,61,62,68,63,0,59,63],
[68,64,63,63,60,71,0,69],
[76,58,68,62,67,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,73,61,67,63,56],
[66,0,60,68,67,75,69,73],
[71,70,0,77,63,70,64,67],
[57,62,53,0,69,67,59,63],
[69,63,67,61,0,62,60,61],
[63,55,60,63,68,0,56,61],
[67,61,66,71,70,74,0,68],
[74,57,63,67,69,69,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,71,63,75,66,69,72],
[57,0,67,64,68,58,72,72],
[59,63,0,60,59,66,66,65],
[67,66,70,0,64,74,73,71],
[55,62,71,66,0,69,63,72],
[64,72,64,56,61,0,66,71],
[61,58,64,57,67,64,0,66],
[58,58,65,59,58,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,61,63,49,59,58],
[70,0,70,63,69,72,52,60],
[67,60,0,59,61,59,60,57],
[69,67,71,0,74,52,56,61],
[67,61,69,56,0,60,58,49],
[81,58,71,78,70,0,67,64],
[71,78,70,74,72,63,0,70],
[72,70,73,69,81,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,86,69,71,57,51,66],
[54,0,54,60,72,69,70,53],
[44,76,0,57,62,55,52,58],
[61,70,73,0,62,70,55,58],
[59,58,68,68,0,55,57,65],
[73,61,75,60,75,0,64,58],
[79,60,78,75,73,66,0,70],
[64,77,72,72,65,72,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,69,72,79,67,79,50],
[47,0,55,61,38,46,57,57],
[61,75,0,86,75,55,76,74],
[58,69,44,0,47,55,62,53],
[51,92,55,83,0,54,59,63],
[63,84,75,75,76,0,76,70],
[51,73,54,68,71,54,0,62],
[80,73,56,77,67,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,64,73,76,64,59],
[65,0,55,55,56,64,61,52],
[75,75,0,58,65,66,73,62],
[66,75,72,0,64,71,66,62],
[57,74,65,66,0,78,67,65],
[54,66,64,59,52,0,69,60],
[66,69,57,64,63,61,0,66],
[71,78,68,68,65,70,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,37,58,51,61,69,52],
[71,0,30,75,77,62,70,67],
[93,100,0,89,60,93,90,84],
[72,55,41,0,73,71,62,63],
[79,53,70,57,0,79,69,61],
[69,68,37,59,51,0,76,61],
[61,60,40,68,61,54,0,69],
[78,63,46,67,69,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,61,41,47,53,47,65],
[76,0,83,85,83,64,53,64],
[69,47,0,64,62,53,39,54],
[89,45,66,0,64,64,45,59],
[83,47,68,66,0,60,52,43],
[77,66,77,66,70,0,57,64],
[83,77,91,85,78,73,0,61],
[65,66,76,71,87,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,63,64,67,57,59,52],
[82,0,68,64,79,65,58,72],
[67,62,0,52,68,59,70,73],
[66,66,78,0,66,74,67,62],
[63,51,62,64,0,58,52,53],
[73,65,71,56,72,0,52,62],
[71,72,60,63,78,78,0,59],
[78,58,57,68,77,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,55,62,56,53,69,66],
[67,0,53,65,61,52,63,68],
[75,77,0,71,67,59,80,73],
[68,65,59,0,58,57,72,67],
[74,69,63,72,0,65,77,71],
[77,78,71,73,65,0,74,79],
[61,67,50,58,53,56,0,65],
[64,62,57,63,59,51,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,55,78,50,59,46,55],
[81,0,70,84,55,70,60,70],
[75,60,0,65,51,61,43,65],
[52,46,65,0,49,52,54,57],
[80,75,79,81,0,73,65,67],
[71,60,69,78,57,0,52,61],
[84,70,87,76,65,78,0,67],
[75,60,65,73,63,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,54,54,55,54,53,56],
[59,0,53,62,59,50,59,71],
[76,77,0,74,65,68,66,69],
[76,68,56,0,64,61,59,69],
[75,71,65,66,0,63,60,64],
[76,80,62,69,67,0,60,69],
[77,71,64,71,70,70,0,63],
[74,59,61,61,66,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,70,75,92,60,57],
[77,0,61,68,74,75,89,69],
[79,69,0,64,66,74,86,77],
[60,62,66,0,61,77,77,63],
[55,56,64,69,0,69,80,67],
[38,55,56,53,61,0,57,41],
[70,41,44,53,50,73,0,62],
[73,61,53,67,63,89,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,52,52,40,70,31],
[77,0,88,75,89,55,57,67],
[68,42,0,48,49,59,49,32],
[78,55,82,0,70,48,80,43],
[78,41,81,60,0,68,69,41],
[90,75,71,82,62,0,89,71],
[60,73,81,50,61,41,0,50],
[99,63,98,87,89,59,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,53,56,68,67,76,70],
[80,0,65,49,57,69,58,73],
[77,65,0,67,75,64,79,80],
[74,81,63,0,65,66,67,84],
[62,73,55,65,0,65,69,70],
[63,61,66,64,65,0,63,63],
[54,72,51,63,61,67,0,75],
[60,57,50,46,60,67,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,68,70,72,63,69],
[65,0,71,63,65,68,63,65],
[63,59,0,64,63,69,59,66],
[62,67,66,0,67,70,68,59],
[60,65,67,63,0,66,56,62],
[58,62,61,60,64,0,61,65],
[67,67,71,62,74,69,0,70],
[61,65,64,71,68,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,65,62,84,57,58,57],
[53,0,55,82,72,60,69,72],
[65,75,0,67,85,67,63,68],
[68,48,63,0,77,67,80,56],
[46,58,45,53,0,58,57,42],
[73,70,63,63,72,0,72,51],
[72,61,67,50,73,58,0,56],
[73,58,62,74,88,79,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,51,55,57,52,64],
[72,0,62,61,66,60,54,59],
[69,68,0,53,69,68,52,54],
[79,69,77,0,61,67,63,65],
[75,64,61,69,0,63,71,66],
[73,70,62,63,67,0,66,70],
[78,76,78,67,59,64,0,69],
[66,71,76,65,64,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,68,71,56,74,68],
[64,0,67,68,75,73,92,80],
[58,63,0,76,61,61,90,80],
[62,62,54,0,68,61,85,76],
[59,55,69,62,0,74,83,82],
[74,57,69,69,56,0,84,68],
[56,38,40,45,47,46,0,53],
[62,50,50,54,48,62,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,66,59,63,56,78],
[65,0,71,68,62,65,69,73],
[55,59,0,69,55,56,59,74],
[64,62,61,0,55,65,59,69],
[71,68,75,75,0,56,66,72],
[67,65,74,65,74,0,56,80],
[74,61,71,71,64,74,0,80],
[52,57,56,61,58,50,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,60,65,79,68,69],
[65,0,62,54,67,70,59,62],
[70,68,0,73,63,80,64,61],
[70,76,57,0,63,78,72,70],
[65,63,67,67,0,73,66,57],
[51,60,50,52,57,0,56,64],
[62,71,66,58,64,74,0,57],
[61,68,69,60,73,66,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,56,67,63,72,67],
[63,0,69,62,69,66,74,68],
[70,61,0,65,80,71,69,75],
[74,68,65,0,77,75,74,76],
[63,61,50,53,0,67,67,61],
[67,64,59,55,63,0,69,59],
[58,56,61,56,63,61,0,64],
[63,62,55,54,69,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,64,60,59,61,61],
[75,0,68,72,69,70,63,66],
[68,62,0,66,64,61,61,59],
[66,58,64,0,63,63,63,64],
[70,61,66,67,0,63,68,66],
[71,60,69,67,67,0,69,68],
[69,67,69,67,62,61,0,60],
[69,64,71,66,64,62,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,55,46,65,56,48],
[68,0,74,66,67,69,60,63],
[64,56,0,56,55,61,55,61],
[75,64,74,0,62,61,65,54],
[84,63,75,68,0,78,61,69],
[65,61,69,69,52,0,58,57],
[74,70,75,65,69,72,0,72],
[82,67,69,76,61,73,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,50,62,66,54,64],
[74,0,59,61,79,74,79,81],
[69,71,0,77,71,66,67,64],
[80,69,53,0,75,63,75,74],
[68,51,59,55,0,72,50,61],
[64,56,64,67,58,0,57,54],
[76,51,63,55,80,73,0,62],
[66,49,66,56,69,76,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,48,43,61,52,54,60],
[64,0,51,47,69,53,49,74],
[82,79,0,57,77,65,62,79],
[87,83,73,0,82,53,59,83],
[69,61,53,48,0,50,55,62],
[78,77,65,77,80,0,71,77],
[76,81,68,71,75,59,0,67],
[70,56,51,47,68,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,76,71,63,67,72,71],
[56,0,73,62,58,54,60,67],
[54,57,0,71,50,58,61,58],
[59,68,59,0,63,62,58,60],
[67,72,80,67,0,65,69,77],
[63,76,72,68,65,0,67,69],
[58,70,69,72,61,63,0,74],
[59,63,72,70,53,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,72,64,71,63,68,64],
[62,0,69,60,72,62,60,59],
[58,61,0,57,66,65,57,57],
[66,70,73,0,74,65,63,64],
[59,58,64,56,0,55,62,56],
[67,68,65,65,75,0,63,64],
[62,70,73,67,68,67,0,67],
[66,71,73,66,74,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,56,58,82,57,69,63],
[66,0,57,62,83,65,71,64],
[74,73,0,64,82,60,68,69],
[72,68,66,0,77,61,68,61],
[48,47,48,53,0,57,66,49],
[73,65,70,69,73,0,77,58],
[61,59,62,62,64,53,0,55],
[67,66,61,69,81,72,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,71,75,67,65,62,72],
[58,0,64,59,61,53,52,65],
[59,66,0,66,69,59,58,64],
[55,71,64,0,57,56,61,64],
[63,69,61,73,0,57,61,63],
[65,77,71,74,73,0,66,72],
[68,78,72,69,69,64,0,73],
[58,65,66,66,67,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,56,53,63,65,67],
[66,0,75,48,57,59,54,58],
[61,55,0,55,53,58,60,63],
[74,82,75,0,65,66,69,71],
[77,73,77,65,0,64,67,68],
[67,71,72,64,66,0,60,66],
[65,76,70,61,63,70,0,71],
[63,72,67,59,62,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,71,62,75,60,59,66],
[53,0,69,62,70,66,63,67],
[59,61,0,64,68,58,58,64],
[68,68,66,0,71,61,66,61],
[55,60,62,59,0,58,59,60],
[70,64,72,69,72,0,62,75],
[71,67,72,64,71,68,0,73],
[64,63,66,69,70,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,63,76,62,51,65],
[64,0,62,60,64,57,59,59],
[65,68,0,62,61,58,55,61],
[67,70,68,0,66,60,63,59],
[54,66,69,64,0,58,50,57],
[68,73,72,70,72,0,50,63],
[79,71,75,67,80,80,0,63],
[65,71,69,71,73,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,75,59,72,66,68],
[67,0,60,74,65,73,66,68],
[68,70,0,74,73,72,59,60],
[55,56,56,0,52,63,51,50],
[71,65,57,78,0,62,58,69],
[58,57,58,67,68,0,51,61],
[64,64,71,79,72,79,0,65],
[62,62,70,80,61,69,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,74,63,55,63,75,58],
[69,0,75,66,75,62,75,74],
[56,55,0,52,45,47,55,39],
[67,64,78,0,56,60,70,66],
[75,55,85,74,0,62,86,80],
[67,68,83,70,68,0,80,65],
[55,55,75,60,44,50,0,53],
[72,56,91,64,50,65,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,68,63,63,54,56,52],
[54,0,58,55,50,52,44,43],
[62,72,0,67,63,53,59,59],
[67,75,63,0,51,53,51,56],
[67,80,67,79,0,70,50,59],
[76,78,77,77,60,0,69,61],
[74,86,71,79,80,61,0,69],
[78,87,71,74,71,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,69,57,63,65,66,57],
[63,0,63,65,60,61,65,64],
[61,67,0,59,61,66,62,49],
[73,65,71,0,62,81,70,62],
[67,70,69,68,0,63,71,66],
[65,69,64,49,67,0,63,52],
[64,65,68,60,59,67,0,58],
[73,66,81,68,64,78,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,68,62,69,59,81],
[65,0,62,70,69,69,72,84],
[67,68,0,81,68,69,62,79],
[62,60,49,0,69,71,53,70],
[68,61,62,61,0,70,51,72],
[61,61,61,59,60,0,61,70],
[71,58,68,77,79,69,0,86],
[49,46,51,60,58,60,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,68,71,61,66,72],
[73,0,76,72,64,68,66,70],
[62,54,0,69,62,55,63,64],
[62,58,61,0,60,61,55,64],
[59,66,68,70,0,59,61,61],
[69,62,75,69,71,0,50,69],
[64,64,67,75,69,80,0,71],
[58,60,66,66,69,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,69,71,57,63,64],
[61,0,65,61,69,68,68,63],
[63,65,0,64,74,68,68,59],
[61,69,66,0,73,70,75,70],
[59,61,56,57,0,61,74,64],
[73,62,62,60,69,0,70,60],
[67,62,62,55,56,60,0,65],
[66,67,71,60,66,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,83,76,69,82,90,92],
[71,0,87,79,62,63,66,64],
[47,43,0,55,53,53,44,45],
[54,51,75,0,44,64,59,51],
[61,68,77,86,0,70,72,68],
[48,67,77,66,60,0,71,74],
[40,64,86,71,58,59,0,67],
[38,66,85,79,62,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,73,70,71,69,72],
[65,0,64,72,66,74,64,66],
[59,66,0,65,66,72,65,66],
[57,58,65,0,64,66,64,65],
[60,64,64,66,0,63,76,68],
[59,56,58,64,67,0,58,55],
[61,66,65,66,54,72,0,64],
[58,64,64,65,62,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,54,75,69,66,59,77],
[60,0,57,60,57,78,62,75],
[76,73,0,70,69,72,63,79],
[55,70,60,0,59,59,56,60],
[61,73,61,71,0,89,68,61],
[64,52,58,71,41,0,60,76],
[71,68,67,74,62,70,0,79],
[53,55,51,70,69,54,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,72,64,63,59,68,70],
[50,0,62,61,59,52,58,62],
[58,68,0,59,63,58,70,65],
[66,69,71,0,69,63,63,63],
[67,71,67,61,0,61,58,62],
[71,78,72,67,69,0,65,73],
[62,72,60,67,72,65,0,66],
[60,68,65,67,68,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,62,74,73,76,69],
[52,0,60,67,67,67,71,63],
[62,70,0,63,76,72,66,65],
[68,63,67,0,78,73,70,66],
[56,63,54,52,0,70,68,57],
[57,63,58,57,60,0,58,67],
[54,59,64,60,62,72,0,63],
[61,67,65,64,73,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,81,71,66,68,84,52],
[51,0,78,56,75,54,71,54],
[49,52,0,47,53,43,47,49],
[59,74,83,0,85,66,70,70],
[64,55,77,45,0,49,55,45],
[62,76,87,64,81,0,75,69],
[46,59,83,60,75,55,0,56],
[78,76,81,60,85,61,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,92,81,73,79,79,59],
[58,0,79,77,86,82,76,54],
[38,51,0,58,61,69,50,45],
[49,53,72,0,73,54,52,59],
[57,44,69,57,0,50,55,44],
[51,48,61,76,80,0,54,70],
[51,54,80,78,75,76,0,57],
[71,76,85,71,86,60,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,67,64,67,56,62,71],
[64,0,60,67,71,63,68,68],
[63,70,0,68,68,67,74,73],
[66,63,62,0,69,69,69,71],
[63,59,62,61,0,63,69,68],
[74,67,63,61,67,0,68,72],
[68,62,56,61,61,62,0,64],
[59,62,57,59,62,58,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,73,70,68,62,56,65],
[75,0,62,84,66,69,75,71],
[57,68,0,73,68,61,65,71],
[60,46,57,0,66,65,55,60],
[62,64,62,64,0,63,61,66],
[68,61,69,65,67,0,68,64],
[74,55,65,75,69,62,0,67],
[65,59,59,70,64,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,51,61,66,82,65],
[68,0,59,59,75,63,64,58],
[60,71,0,76,74,59,82,56],
[79,71,54,0,64,70,78,71],
[69,55,56,66,0,53,72,75],
[64,67,71,60,77,0,70,62],
[48,66,48,52,58,60,0,51],
[65,72,74,59,55,68,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,67,76,69,62,65],
[63,0,68,71,68,66,67,66],
[63,62,0,64,70,70,67,68],
[63,59,66,0,68,54,65,60],
[54,62,60,62,0,66,57,58],
[61,64,60,76,64,0,61,61],
[68,63,63,65,73,69,0,67],
[65,64,62,70,72,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,70,77,64,73,62],
[56,0,61,66,64,60,73,60],
[66,69,0,64,77,60,76,66],
[60,64,66,0,70,61,61,66],
[53,66,53,60,0,64,65,59],
[66,70,70,69,66,0,70,61],
[57,57,54,69,65,60,0,62],
[68,70,64,64,71,69,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,100,70,72,85,115,70],
[75,0,100,70,87,60,87,87],
[30,30,0,70,42,60,102,72],
[60,60,60,0,72,90,90,72],
[58,43,88,58,0,88,88,88],
[45,70,70,40,42,0,87,72],
[15,43,28,40,42,43,0,72],
[60,43,58,58,42,58,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,74,62,61,83,75,81],
[79,0,94,68,61,94,60,79],
[56,36,0,54,40,74,66,61],
[68,62,76,0,50,70,57,67],
[69,69,90,80,0,59,56,81],
[47,36,56,60,71,0,53,59],
[55,70,64,73,74,77,0,74],
[49,51,69,63,49,71,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,62,74,60,66,74],
[63,0,62,66,66,65,61,74],
[67,68,0,64,68,60,69,73],
[68,64,66,0,70,59,60,72],
[56,64,62,60,0,63,64,70],
[70,65,70,71,67,0,69,79],
[64,69,61,70,66,61,0,69],
[56,56,57,58,60,51,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,77,71,65,69,71],
[72,0,60,82,73,65,67,69],
[65,70,0,83,73,71,69,72],
[53,48,47,0,59,52,55,57],
[59,57,57,71,0,52,60,70],
[65,65,59,78,78,0,68,74],
[61,63,61,75,70,62,0,66],
[59,61,58,73,60,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,65,73,66,63,80],
[68,0,65,58,74,71,64,71],
[62,65,0,69,73,76,60,73],
[65,72,61,0,69,73,66,73],
[57,56,57,61,0,56,55,66],
[64,59,54,57,74,0,58,66],
[67,66,70,64,75,72,0,79],
[50,59,57,57,64,64,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,52,57,55,46,64,59],
[70,0,57,62,59,51,55,45],
[78,73,0,68,61,60,75,66],
[73,68,62,0,66,56,66,56],
[75,71,69,64,0,51,66,56],
[84,79,70,74,79,0,75,61],
[66,75,55,64,64,55,0,60],
[71,85,64,74,74,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,70,61,63,58,73],
[62,0,64,56,57,53,59,62],
[56,66,0,55,56,56,59,62],
[60,74,75,0,66,64,63,62],
[69,73,74,64,0,71,67,70],
[67,77,74,66,59,0,60,70],
[72,71,71,67,63,70,0,71],
[57,68,68,68,60,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,57,46,66,65,57,62],
[66,0,69,49,69,65,56,70],
[73,61,0,67,63,63,56,74],
[84,81,63,0,78,69,60,69],
[64,61,67,52,0,70,61,74],
[65,65,67,61,60,0,70,84],
[73,74,74,70,69,60,0,79],
[68,60,56,61,56,46,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,60,65,58,64,58,65],
[65,0,63,72,67,68,71,60],
[70,67,0,56,62,66,65,65],
[65,58,74,0,60,71,76,67],
[72,63,68,70,0,79,64,69],
[66,62,64,59,51,0,62,59],
[72,59,65,54,66,68,0,66],
[65,70,65,63,61,71,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,87,88,58,87,64],
[67,0,69,89,81,66,82,61],
[59,61,0,93,79,59,79,55],
[43,41,37,0,59,39,46,42],
[42,49,51,71,0,48,66,57],
[72,64,71,91,82,0,81,74],
[43,48,51,84,64,49,0,53],
[66,69,75,88,73,56,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,53,41,50,28,39,27],
[62,0,52,49,50,26,49,26],
[77,78,0,64,50,67,76,27],
[89,81,66,0,77,66,65,79],
[80,80,80,53,0,80,65,14],
[102,104,63,64,50,0,89,40],
[91,81,54,65,65,41,0,40],
[103,104,103,51,116,90,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,49,43,55,41,52,46],
[82,0,71,60,73,67,76,73],
[81,59,0,60,71,56,61,68],
[87,70,70,0,74,57,76,66],
[75,57,59,56,0,57,72,54],
[89,63,74,73,73,0,78,67],
[78,54,69,54,58,52,0,51],
[84,57,62,64,76,63,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,69,61,66,59,70],
[74,0,66,69,71,68,63,73],
[70,64,0,69,76,69,67,68],
[61,61,61,0,70,55,70,74],
[69,59,54,60,0,51,64,60],
[64,62,61,75,79,0,68,68],
[71,67,63,60,66,62,0,65],
[60,57,62,56,70,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,62,65,72,70,66,61],
[70,0,66,74,78,66,65,75],
[68,64,0,66,65,65,63,64],
[65,56,64,0,75,66,61,61],
[58,52,65,55,0,62,58,52],
[60,64,65,64,68,0,66,62],
[64,65,67,69,72,64,0,68],
[69,55,66,69,78,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,64,63,60,66,60],
[65,0,61,59,61,66,68,62],
[63,69,0,58,65,51,68,61],
[66,71,72,0,66,59,64,74],
[67,69,65,64,0,60,61,68],
[70,64,79,71,70,0,60,69],
[64,62,62,66,69,70,0,67],
[70,68,69,56,62,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,42,52,22,49,44,40],
[76,0,65,66,62,64,51,62],
[88,65,0,77,64,64,75,64],
[78,64,53,0,71,61,64,63],
[108,68,66,59,0,71,45,72],
[81,66,66,69,59,0,70,66],
[86,79,55,66,85,60,0,69],
[90,68,66,67,58,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,85,75,31,71,57,32],
[56,0,87,74,73,88,60,29],
[45,43,0,59,59,59,43,30],
[55,56,71,0,72,57,29,27],
[99,57,71,58,0,101,40,71],
[59,42,71,73,29,0,43,44],
[73,70,87,101,90,87,0,58],
[98,101,100,103,59,86,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,55,65,61,65,57,54],
[69,0,58,70,71,74,70,64],
[75,72,0,85,74,81,88,60],
[65,60,45,0,65,50,59,46],
[69,59,56,65,0,69,60,77],
[65,56,49,80,61,0,64,64],
[73,60,42,71,70,66,0,60],
[76,66,70,84,53,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,73,68,61,60,62,66],
[68,0,73,56,63,59,65,60],
[57,57,0,62,57,55,60,58],
[62,74,68,0,57,63,58,64],
[69,67,73,73,0,56,66,73],
[70,71,75,67,74,0,72,58],
[68,65,70,72,64,58,0,66],
[64,70,72,66,57,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,51,56,52,56,48],
[70,0,73,74,57,50,67,56],
[74,57,0,62,61,59,72,75],
[79,56,68,0,58,62,72,50],
[74,73,69,72,0,55,69,53],
[78,80,71,68,75,0,69,64],
[74,63,58,58,61,61,0,56],
[82,74,55,80,77,66,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,76,71,68,56,56,70],
[54,0,56,72,72,58,57,74],
[54,74,0,64,77,57,65,56],
[59,58,66,0,64,57,59,60],
[62,58,53,66,0,54,58,72],
[74,72,73,73,76,0,60,76],
[74,73,65,71,72,70,0,60],
[60,56,74,70,58,54,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,64,74,53,71,75],
[57,0,58,51,72,53,57,69],
[66,72,0,53,63,52,65,73],
[66,79,77,0,74,67,63,82],
[56,58,67,56,0,46,70,68],
[77,77,78,63,84,0,78,76],
[59,73,65,67,60,52,0,68],
[55,61,57,48,62,54,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,68,70,61,59,60,60],
[59,0,69,63,63,65,65,59],
[62,61,0,73,56,55,68,59],
[60,67,57,0,59,51,64,62],
[69,67,74,71,0,73,69,60],
[71,65,75,79,57,0,70,72],
[70,65,62,66,61,60,0,68],
[70,71,71,68,70,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,64,71,71,70,74,68],
[56,0,59,62,69,73,73,63],
[66,71,0,63,78,77,72,67],
[59,68,67,0,69,75,70,68],
[59,61,52,61,0,69,70,68],
[60,57,53,55,61,0,61,61],
[56,57,58,60,60,69,0,59],
[62,67,63,62,62,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,68,73,77,75,68],
[64,0,64,61,73,76,66,71],
[68,66,0,63,74,69,59,76],
[62,69,67,0,70,66,57,69],
[57,57,56,60,0,62,58,68],
[53,54,61,64,68,0,65,57],
[55,64,71,73,72,65,0,69],
[62,59,54,61,62,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,59,98,94,80,74,67],
[49,0,46,95,74,71,54,74],
[71,84,0,90,84,85,64,73],
[32,35,40,0,54,59,37,47],
[36,56,46,76,0,61,55,52],
[50,59,45,71,69,0,57,58],
[56,76,66,93,75,73,0,76],
[63,56,57,83,78,72,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,53,65,52,44,78,55],
[60,0,52,69,59,60,75,68],
[77,78,0,64,75,75,93,85],
[65,61,66,0,63,42,90,77],
[78,71,55,67,0,60,84,78],
[86,70,55,88,70,0,72,65],
[52,55,37,40,46,58,0,61],
[75,62,45,53,52,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,47,62,60,52,65,49],
[63,0,54,69,68,60,71,58],
[83,76,0,77,72,58,77,65],
[68,61,53,0,57,52,73,59],
[70,62,58,73,0,62,72,63],
[78,70,72,78,68,0,70,57],
[65,59,53,57,58,60,0,59],
[81,72,65,71,67,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,75,79,83,83,88],
[58,0,61,72,71,56,67,76],
[65,69,0,66,80,69,71,81],
[55,58,64,0,63,57,59,58],
[51,59,50,67,0,51,56,62],
[47,74,61,73,79,0,63,70],
[47,63,59,71,74,67,0,67],
[42,54,49,72,68,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,63,64,57,65,74],
[63,0,59,67,69,58,66,68],
[67,71,0,67,64,67,69,72],
[67,63,63,0,61,60,61,74],
[66,61,66,69,0,68,66,76],
[73,72,63,70,62,0,73,77],
[65,64,61,69,64,57,0,67],
[56,62,58,56,54,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,71,81,80,75,77],
[65,0,60,63,71,75,68,67],
[66,70,0,70,70,73,66,64],
[59,67,60,0,66,52,62,64],
[49,59,60,64,0,62,56,64],
[50,55,57,78,68,0,66,63],
[55,62,64,68,74,64,0,84],
[53,63,66,66,66,67,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,70,52,62,46,52,54],
[87,0,83,61,79,67,64,70],
[60,47,0,55,64,58,54,52],
[78,69,75,0,63,61,72,68],
[68,51,66,67,0,64,56,54],
[84,63,72,69,66,0,58,68],
[78,66,76,58,74,72,0,72],
[76,60,78,62,76,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,70,69,62,66,57,70],
[76,0,82,63,70,71,61,76],
[60,48,0,54,73,62,66,68],
[61,67,76,0,67,86,68,79],
[68,60,57,63,0,68,51,63],
[64,59,68,44,62,0,60,65],
[73,69,64,62,79,70,0,77],
[60,54,62,51,67,65,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,71,65,67,74,67],
[64,0,70,66,72,62,74,60],
[56,60,0,68,68,60,74,62],
[59,64,62,0,63,72,74,59],
[65,58,62,67,0,65,64,61],
[63,68,70,58,65,0,74,65],
[56,56,56,56,66,56,0,55],
[63,70,68,71,69,65,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,72,70,65,73,68],
[67,0,69,65,68,68,73,68],
[63,61,0,63,65,58,64,70],
[58,65,67,0,57,68,75,65],
[60,62,65,73,0,58,69,67],
[65,62,72,62,72,0,65,80],
[57,57,66,55,61,65,0,69],
[62,62,60,65,63,50,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,58,65,77,78,68,64],
[52,0,46,56,65,54,46,50],
[72,84,0,59,72,73,77,68],
[65,74,71,0,72,65,68,67],
[53,65,58,58,0,57,61,55],
[52,76,57,65,73,0,49,55],
[62,84,53,62,69,81,0,66],
[66,80,62,63,75,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,45,86,20,85,20,62],
[42,0,66,62,41,41,21,62],
[85,64,0,85,85,85,85,106],
[44,68,45,0,43,44,44,44],
[110,89,45,87,0,89,68,65],
[45,89,45,86,41,0,45,42],
[110,109,45,86,62,85,0,85],
[68,68,24,86,65,88,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,66,67,67,74,60],
[70,0,63,75,81,59,75,72],
[61,67,0,61,71,73,53,58],
[64,55,69,0,56,56,58,50],
[63,49,59,74,0,62,53,63],
[63,71,57,74,68,0,73,63],
[56,55,77,72,77,57,0,62],
[70,58,72,80,67,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,70,60,67,68,60],
[64,0,73,77,67,73,64,70],
[59,57,0,67,45,72,47,59],
[60,53,63,0,52,63,57,59],
[70,63,85,78,0,63,78,67],
[63,57,58,67,67,0,59,55],
[62,66,83,73,52,71,0,71],
[70,60,71,71,63,75,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,82,79,88,73,59,90],
[68,0,70,79,59,92,69,59],
[48,60,0,61,79,71,59,79],
[51,51,69,0,80,72,61,71],
[42,71,51,50,0,73,32,51],
[57,38,59,58,57,0,58,79],
[71,61,71,69,98,72,0,111],
[40,71,51,59,79,51,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,52,57,55,64,66],
[66,0,72,63,57,62,68,60],
[69,58,0,60,62,48,60,63],
[78,67,70,0,67,61,69,71],
[73,73,68,63,0,68,78,77],
[75,68,82,69,62,0,78,71],
[66,62,70,61,52,52,0,67],
[64,70,67,59,53,59,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,66,74,70,69,63,71],
[51,0,62,69,65,71,62,74],
[64,68,0,65,72,65,64,71],
[56,61,65,0,73,69,70,68],
[60,65,58,57,0,61,55,70],
[61,59,65,61,69,0,69,70],
[67,68,66,60,75,61,0,67],
[59,56,59,62,60,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,71,68,72,61,69,72],
[62,0,64,67,62,66,75,66],
[59,66,0,72,71,60,65,65],
[62,63,58,0,71,59,63,68],
[58,68,59,59,0,51,65,56],
[69,64,70,71,79,0,73,66],
[61,55,65,67,65,57,0,61],
[58,64,65,62,74,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,68,74,62,62,73,64],
[47,0,61,75,51,54,73,56],
[62,69,0,72,67,64,76,64],
[56,55,58,0,49,56,55,59],
[68,79,63,81,0,69,76,65],
[68,76,66,74,61,0,76,71],
[57,57,54,75,54,54,0,62],
[66,74,66,71,65,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,54,71,84,72,63,84],
[82,0,90,74,78,63,94,84],
[76,40,0,70,68,66,70,81],
[59,56,60,0,62,42,69,60],
[46,52,62,68,0,48,74,67],
[58,67,64,88,82,0,84,80],
[67,36,60,61,56,46,0,59],
[46,46,49,70,63,50,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,93,90,70,87,74,61,72],
[37,0,60,29,63,50,47,52],
[40,70,0,55,61,63,45,57],
[60,101,75,0,87,91,73,77],
[43,67,69,43,0,49,52,44],
[56,80,67,39,81,0,58,66],
[69,83,85,57,78,72,0,59],
[58,78,73,53,86,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,78,72,69,66,60,67],
[52,0,59,61,55,60,58,65],
[52,71,0,69,57,69,55,68],
[58,69,61,0,65,72,65,65],
[61,75,73,65,0,70,62,70],
[64,70,61,58,60,0,60,61],
[70,72,75,65,68,70,0,71],
[63,65,62,65,60,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,73,64,69,65,74,71],
[64,0,75,63,74,71,77,71],
[57,55,0,63,54,66,56,53],
[66,67,67,0,61,73,71,64],
[61,56,76,69,0,62,71,63],
[65,59,64,57,68,0,59,63],
[56,53,74,59,59,71,0,63],
[59,59,77,66,67,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,63,74,70,66,66,57],
[59,0,64,66,53,53,60,63],
[67,66,0,63,64,67,68,51],
[56,64,67,0,56,64,69,67],
[60,77,66,74,0,58,69,53],
[64,77,63,66,72,0,67,60],
[64,70,62,61,61,63,0,62],
[73,67,79,63,77,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,67,70,64,77,54],
[62,0,66,52,68,57,81,67],
[62,64,0,57,62,60,70,69],
[63,78,73,0,85,68,74,71],
[60,62,68,45,0,57,74,56],
[66,73,70,62,73,0,69,67],
[53,49,60,56,56,61,0,53],
[76,63,61,59,74,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,112,56,93,56,93,21],
[76,0,130,75,93,75,95,40],
[18,0,0,35,35,35,76,0],
[74,55,95,0,72,0,58,39],
[37,37,95,58,0,37,76,39],
[74,55,95,130,93,0,76,76],
[37,35,54,72,54,54,0,37],
[109,90,130,91,91,54,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,69,65,61,67,70],
[64,0,71,78,81,62,77,59],
[62,59,0,64,58,53,67,52],
[61,52,66,0,53,53,69,62],
[65,49,72,77,0,65,72,66],
[69,68,77,77,65,0,76,66],
[63,53,63,61,58,54,0,63],
[60,71,78,68,64,64,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,60,61,65,67,61,73],
[61,0,57,65,69,66,66,74],
[70,73,0,66,67,75,63,71],
[69,65,64,0,72,78,55,67],
[65,61,63,58,0,73,51,60],
[63,64,55,52,57,0,67,71],
[69,64,67,75,79,63,0,69],
[57,56,59,63,70,59,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,60,68,56,66,65],
[67,0,60,63,65,55,63,68],
[69,70,0,58,66,65,66,66],
[70,67,72,0,71,65,72,73],
[62,65,64,59,0,48,61,62],
[74,75,65,65,82,0,72,69],
[64,67,64,58,69,58,0,62],
[65,62,64,57,68,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,73,65,56,55,62,69],
[55,0,57,58,45,66,51,60],
[57,73,0,52,54,62,57,49],
[65,72,78,0,64,71,63,62],
[74,85,76,66,0,81,66,58],
[75,64,68,59,49,0,68,53],
[68,79,73,67,64,62,0,60],
[61,70,81,68,72,77,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,74,50,66,64,73],
[65,0,50,64,51,56,65,66],
[73,80,0,52,64,73,74,53],
[56,66,78,0,67,75,46,75],
[80,79,66,63,0,93,65,82],
[64,74,57,55,37,0,55,52],
[66,65,56,84,65,75,0,72],
[57,64,77,55,48,78,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,57,68,63,61,62],
[62,0,63,51,60,58,63,64],
[62,67,0,65,60,61,68,64],
[73,79,65,0,72,64,79,61],
[62,70,70,58,0,58,62,66],
[67,72,69,66,72,0,65,70],
[69,67,62,51,68,65,0,65],
[68,66,66,69,64,60,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,73,63,72,61,67],
[68,0,60,72,70,65,66,80],
[66,70,0,76,64,79,64,66],
[57,58,54,0,63,74,70,65],
[67,60,66,67,0,74,58,70],
[58,65,51,56,56,0,63,54],
[69,64,66,60,72,67,0,60],
[63,50,64,65,60,76,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,62,68,57,52,58,57],
[83,0,67,80,68,73,62,77],
[68,63,0,88,71,77,62,79],
[62,50,42,0,55,68,45,66],
[73,62,59,75,0,67,67,66],
[78,57,53,62,63,0,57,83],
[72,68,68,85,63,73,0,70],
[73,53,51,64,64,47,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,61,63,61,64,57,61],
[66,0,63,65,70,61,64,60],
[69,67,0,63,67,62,60,62],
[67,65,67,0,60,62,67,68],
[69,60,63,70,0,66,60,59],
[66,69,68,68,64,0,69,60],
[73,66,70,63,70,61,0,65],
[69,70,68,62,71,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,41,39,72,66,81,72],
[41,0,58,57,78,49,64,49],
[89,72,0,47,63,55,81,90],
[91,73,83,0,90,74,114,65],
[58,52,67,40,0,56,76,68],
[64,81,75,56,74,0,74,74],
[49,66,49,16,54,56,0,51],
[58,81,40,65,62,56,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,84,89,84,59,63],
[55,0,53,52,65,60,55,49],
[61,77,0,91,67,88,70,60],
[46,78,39,0,58,71,59,42],
[41,65,63,72,0,49,58,41],
[46,70,42,59,81,0,46,52],
[71,75,60,71,72,84,0,84],
[67,81,70,88,89,78,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,73,69,55,53,74,65],
[69,0,82,67,69,49,67,65],
[57,48,0,48,53,41,68,60],
[61,63,82,0,64,60,70,67],
[75,61,77,66,0,50,80,77],
[77,81,89,70,80,0,87,64],
[56,63,62,60,50,43,0,50],
[65,65,70,63,53,66,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,81,80,74,62,63],
[68,0,63,78,82,67,72,71],
[67,67,0,74,75,76,64,61],
[49,52,56,0,63,67,54,47],
[50,48,55,67,0,60,52,52],
[56,63,54,63,70,0,61,54],
[68,58,66,76,78,69,0,66],
[67,59,69,83,78,76,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,74,70,54,65,59],
[63,0,57,74,60,54,47,64],
[69,73,0,70,70,63,59,75],
[56,56,60,0,54,64,47,65],
[60,70,60,76,0,66,57,67],
[76,76,67,66,64,0,61,73],
[65,83,71,83,73,69,0,88],
[71,66,55,65,63,57,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,64,56,70,66,65,62],
[61,0,56,54,68,59,58,54],
[66,74,0,63,65,59,67,66],
[74,76,67,0,66,65,60,61],
[60,62,65,64,0,65,72,64],
[64,71,71,65,65,0,62,61],
[65,72,63,70,58,68,0,55],
[68,76,64,69,66,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,66,58,59,69,51,65],
[75,0,76,56,64,73,58,70],
[64,54,0,57,67,67,57,64],
[72,74,73,0,70,59,67,67],
[71,66,63,60,0,81,71,68],
[61,57,63,71,49,0,56,68],
[79,72,73,63,59,74,0,76],
[65,60,66,63,62,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,79,68,71,65,73,67],
[63,0,63,61,63,55,67,59],
[51,67,0,57,58,56,63,56],
[62,69,73,0,81,73,67,69],
[59,67,72,49,0,55,50,72],
[65,75,74,57,75,0,71,66],
[57,63,67,63,80,59,0,78],
[63,71,74,61,58,64,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,59,67,40,68,49],
[89,0,87,78,80,50,68,62],
[80,43,0,71,71,34,52,63],
[71,52,59,0,61,60,70,71],
[63,50,59,69,0,59,85,62],
[90,80,96,70,71,0,78,63],
[62,62,78,60,45,52,0,54],
[81,68,67,59,68,67,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,63,69,68,67,72,76],
[57,0,61,61,51,59,56,66],
[67,69,0,60,61,68,66,70],
[61,69,70,0,55,65,59,63],
[62,79,69,75,0,69,73,78],
[63,71,62,65,61,0,61,72],
[58,74,64,71,57,69,0,67],
[54,64,60,67,52,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,65,63,62,64,52,63],
[73,0,72,71,70,73,57,74],
[65,58,0,64,66,72,62,71],
[67,59,66,0,61,72,69,81],
[68,60,64,69,0,61,67,80],
[66,57,58,58,69,0,69,75],
[78,73,68,61,63,61,0,73],
[67,56,59,49,50,55,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,78,70,69,88,60],
[70,0,56,59,79,78,69,59],
[73,74,0,92,74,92,83,61],
[52,71,38,0,62,52,68,51],
[60,51,56,68,0,70,58,49],
[61,52,38,78,60,0,71,69],
[42,61,47,62,72,59,0,70],
[70,71,69,79,81,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,68,68,66,45,67,56],
[74,0,78,76,67,65,74,67],
[62,52,0,62,60,45,56,58],
[62,54,68,0,56,42,51,46],
[64,63,70,74,0,53,58,62],
[85,65,85,88,77,0,77,71],
[63,56,74,79,72,53,0,58],
[74,63,72,84,68,59,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,66,63,65,60,50,56],
[53,0,55,54,63,58,49,57],
[64,75,0,61,83,64,65,58],
[67,76,69,0,80,70,56,72],
[65,67,47,50,0,62,58,52],
[70,72,66,60,68,0,64,66],
[80,81,65,74,72,66,0,71],
[74,73,72,58,78,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,65,87,83,66,54,71],
[84,0,64,88,101,71,77,74],
[65,66,0,80,75,68,62,65],
[43,42,50,0,67,53,51,52],
[47,29,55,63,0,45,38,50],
[64,59,62,77,85,0,59,73],
[76,53,68,79,92,71,0,83],
[59,56,65,78,80,57,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,77,79,26,79,53,77],
[52,0,78,52,78,52,52,52],
[53,52,0,79,0,53,53,52],
[51,78,51,0,51,52,0,51],
[104,52,130,79,0,79,79,104],
[51,78,77,78,51,0,0,25],
[77,78,77,130,51,130,0,77],
[53,78,78,79,26,105,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,65,85,75,75,78],
[65,0,68,66,81,75,76,86],
[57,62,0,60,67,63,62,76],
[65,64,70,0,70,65,70,73],
[45,49,63,60,0,59,62,75],
[55,55,67,65,71,0,63,72],
[55,54,68,60,68,67,0,76],
[52,44,54,57,55,58,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,72,79,80,78,78,61],
[53,0,64,58,69,66,66,68],
[58,66,0,59,81,72,74,61],
[51,72,71,0,73,71,72,56],
[50,61,49,57,0,57,60,48],
[52,64,58,59,73,0,75,53],
[52,64,56,58,70,55,0,48],
[69,62,69,74,82,77,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,69,71,72,71,69,70],
[70,0,71,59,65,69,68,66],
[61,59,0,58,72,67,69,66],
[59,71,72,0,69,76,71,71],
[58,65,58,61,0,60,68,75],
[59,61,63,54,70,0,61,66],
[61,62,61,59,62,69,0,68],
[60,64,64,59,55,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,59,62,52,62,51,43],
[83,0,76,78,61,68,70,69],
[71,54,0,67,55,59,56,60],
[68,52,63,0,55,56,59,56],
[78,69,75,75,0,65,56,62],
[68,62,71,74,65,0,62,61],
[79,60,74,71,74,68,0,71],
[87,61,70,74,68,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,52,62,60,58,60,57],
[62,0,64,62,67,60,61,62],
[78,66,0,69,68,64,68,65],
[68,68,61,0,65,60,62,58],
[70,63,62,65,0,63,62,59],
[72,70,66,70,67,0,64,61],
[70,69,62,68,68,66,0,67],
[73,68,65,72,71,69,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,62,60,49,63,66,50],
[77,0,62,75,60,61,71,53],
[68,68,0,63,53,61,71,51],
[70,55,67,0,59,57,69,57],
[81,70,77,71,0,65,78,65],
[67,69,69,73,65,0,71,61],
[64,59,59,61,52,59,0,51],
[80,77,79,73,65,69,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,46,54,56,66,63],
[72,0,59,63,56,62,86,67],
[69,71,0,67,62,76,78,75],
[84,67,63,0,69,66,82,75],
[76,74,68,61,0,68,86,71],
[74,68,54,64,62,0,62,62],
[64,44,52,48,44,68,0,65],
[67,63,55,55,59,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,74,64,73,86,81,86],
[64,0,84,75,71,82,75,75],
[56,46,0,57,70,62,56,72],
[66,55,73,0,72,72,62,71],
[57,59,60,58,0,78,66,72],
[44,48,68,58,52,0,60,63],
[49,55,74,68,64,70,0,66],
[44,55,58,59,58,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,55,60,55,59,71,50],
[81,0,54,58,71,66,79,63],
[75,76,0,74,78,68,76,63],
[70,72,56,0,70,70,67,55],
[75,59,52,60,0,62,77,56],
[71,64,62,60,68,0,70,69],
[59,51,54,63,53,60,0,52],
[80,67,67,75,74,61,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,73,64,78,67,60,80],
[69,0,73,70,71,64,61,73],
[57,57,0,67,58,58,54,65],
[66,60,63,0,68,53,55,70],
[52,59,72,62,0,60,68,59],
[63,66,72,77,70,0,61,68],
[70,69,76,75,62,69,0,80],
[50,57,65,60,71,62,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,58,55,64,66,60],
[71,0,72,57,56,70,64,62],
[62,58,0,72,61,69,61,70],
[72,73,58,0,62,80,63,79],
[75,74,69,68,0,65,69,66],
[66,60,61,50,65,0,70,65],
[64,66,69,67,61,60,0,68],
[70,68,60,51,64,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,73,65,77,61,67],
[65,0,62,60,55,74,50,59],
[58,68,0,66,67,73,65,62],
[57,70,64,0,69,84,48,66],
[65,75,63,61,0,74,52,58],
[53,56,57,46,56,0,53,62],
[69,80,65,82,78,77,0,57],
[63,71,68,64,72,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,66,61,53,68,64],
[68,0,71,67,63,65,65,63],
[64,59,0,59,57,56,62,66],
[64,63,71,0,57,57,65,66],
[69,67,73,73,0,66,64,63],
[77,65,74,73,64,0,66,70],
[62,65,68,65,66,64,0,74],
[66,67,64,64,67,60,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,62,59,64,51,64],
[66,0,71,74,61,76,62,69],
[62,59,0,54,50,65,58,64],
[68,56,76,0,73,59,56,68],
[71,69,80,57,0,66,68,77],
[66,54,65,71,64,0,61,68],
[79,68,72,74,62,69,0,79],
[66,61,66,62,53,62,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,69,65,75,72,67],
[64,0,69,67,66,69,68,65],
[58,61,0,59,62,64,61,64],
[61,63,71,0,78,76,74,65],
[65,64,68,52,0,70,61,62],
[55,61,66,54,60,0,62,60],
[58,62,69,56,69,68,0,63],
[63,65,66,65,68,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,57,51,48,66,64],
[76,0,61,66,71,65,73,74],
[71,69,0,63,64,58,77,66],
[73,64,67,0,69,65,80,69],
[79,59,66,61,0,66,62,65],
[82,65,72,65,64,0,74,71],
[64,57,53,50,68,56,0,66],
[66,56,64,61,65,59,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,69,63,69,67,64],
[62,0,72,66,65,70,74,70],
[64,58,0,60,61,60,67,57],
[61,64,70,0,59,69,65,63],
[67,65,69,71,0,66,71,65],
[61,60,70,61,64,0,72,62],
[63,56,63,65,59,58,0,59],
[66,60,73,67,65,68,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,40,47,61,56,42,47],
[76,0,64,58,65,63,50,55],
[90,66,0,62,89,61,82,68],
[83,72,68,0,89,67,62,63],
[69,65,41,41,0,39,43,53],
[74,67,69,63,91,0,61,63],
[88,80,48,68,87,69,0,60],
[83,75,62,67,77,67,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,71,68,90,69,70],
[65,0,85,79,56,79,65,68],
[60,45,0,60,66,89,62,68],
[59,51,70,0,58,83,66,62],
[62,74,64,72,0,80,63,78],
[40,51,41,47,50,0,48,49],
[61,65,68,64,67,82,0,79],
[60,62,62,68,52,81,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,89,92,75,63,74],
[61,0,81,73,82,73,82,58],
[58,49,0,73,68,61,69,63],
[41,57,57,0,60,50,59,56],
[38,48,62,70,0,68,57,68],
[55,57,69,80,62,0,69,64],
[67,48,61,71,73,61,0,73],
[56,72,67,74,62,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,80,66,62,62,68],
[69,0,69,67,72,62,68,68],
[60,61,0,71,61,69,55,66],
[50,63,59,0,58,62,62,58],
[64,58,69,72,0,70,61,66],
[68,68,61,68,60,0,63,58],
[68,62,75,68,69,67,0,72],
[62,62,64,72,64,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,44,77,85,40,76,76],
[65,0,75,75,94,65,66,47],
[86,55,0,86,94,77,76,75],
[53,55,44,0,63,55,62,58],
[45,36,36,67,0,28,57,57],
[90,65,53,75,102,0,83,85],
[54,64,54,68,73,47,0,67],
[54,83,55,72,73,45,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,59,66,49,62,66,71],
[65,0,68,75,59,73,65,71],
[71,62,0,72,67,66,75,68],
[64,55,58,0,52,63,65,68],
[81,71,63,78,0,79,73,78],
[68,57,64,67,51,0,66,70],
[64,65,55,65,57,64,0,67],
[59,59,62,62,52,60,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,68,66,59,57,59,66],
[61,0,68,47,63,50,61,60],
[62,62,0,49,69,55,57,72],
[64,83,81,0,75,72,72,73],
[71,67,61,55,0,50,56,69],
[73,80,75,58,80,0,71,75],
[71,69,73,58,74,59,0,77],
[64,70,58,57,61,55,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,63,61,56,61,60,67],
[65,0,63,68,68,67,68,72],
[67,67,0,67,63,72,64,62],
[69,62,63,0,56,73,69,81],
[74,62,67,74,0,75,70,77],
[69,63,58,57,55,0,67,62],
[70,62,66,61,60,63,0,68],
[63,58,68,49,53,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,69,58,49,54,50,48],
[74,0,77,72,70,73,82,65],
[61,53,0,64,52,60,57,53],
[72,58,66,0,66,62,63,59],
[81,60,78,64,0,80,75,55],
[76,57,70,68,50,0,60,51],
[80,48,73,67,55,70,0,65],
[82,65,77,71,75,79,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,67,62,76,67,77],
[68,0,74,68,60,73,67,69],
[59,56,0,62,64,68,59,63],
[63,62,68,0,63,73,68,71],
[68,70,66,67,0,59,76,69],
[54,57,62,57,71,0,63,76],
[63,63,71,62,54,67,0,77],
[53,61,67,59,61,54,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,82,72,65,73,67],
[64,0,74,61,70,62,55,66],
[59,56,0,72,66,53,66,66],
[48,69,58,0,55,62,65,71],
[58,60,64,75,0,59,63,56],
[65,68,77,68,71,0,66,68],
[57,75,64,65,67,64,0,68],
[63,64,64,59,74,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,33,47,44,47,42],
[70,0,49,45,44,56,55,57],
[74,81,0,64,54,57,57,62],
[97,85,66,0,65,68,66,67],
[83,86,76,65,0,81,53,74],
[86,74,73,62,49,0,47,55],
[83,75,73,64,77,83,0,66],
[88,73,68,63,56,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,47,56,65,64,46,60],
[67,0,59,67,69,72,64,63],
[83,71,0,65,84,76,82,72],
[74,63,65,0,73,65,68,61],
[65,61,46,57,0,69,52,51],
[66,58,54,65,61,0,55,47],
[84,66,48,62,78,75,0,65],
[70,67,58,69,79,83,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,78,60,61,64,70,63],
[73,0,78,61,57,58,63,71],
[52,52,0,43,51,64,66,56],
[70,69,87,0,70,73,61,68],
[69,73,79,60,0,64,72,74],
[66,72,66,57,66,0,63,64],
[60,67,64,69,58,67,0,69],
[67,59,74,62,56,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,0,33,0,32,33],
[98,0,97,33,33,66,97,66],
[98,33,0,0,66,33,64,33],
[130,97,130,0,98,97,64,66],
[97,97,64,32,0,97,64,33],
[130,64,97,33,33,0,64,66],
[98,33,66,66,66,66,0,66],
[97,64,97,64,97,64,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,61,65,62,68,60,65],
[78,0,60,66,69,75,65,65],
[69,70,0,70,72,71,61,80],
[65,64,60,0,56,68,58,72],
[68,61,58,74,0,69,59,73],
[62,55,59,62,61,0,59,59],
[70,65,69,72,71,71,0,68],
[65,65,50,58,57,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,0,32,32,33,33,32],
[98,0,33,64,65,33,65,65],
[130,97,0,97,65,97,130,97],
[98,66,33,0,65,33,66,98],
[98,65,65,65,0,98,98,65],
[97,97,33,97,32,0,65,97],
[97,65,0,64,32,65,0,32],
[98,65,33,32,65,33,98,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,69,62,61,59,54],
[67,0,66,67,63,66,65,54],
[68,64,0,72,69,67,66,65],
[61,63,58,0,61,62,62,58],
[68,67,61,69,0,59,60,59],
[69,64,63,68,71,0,73,64],
[71,65,64,68,70,57,0,62],
[76,76,65,72,71,66,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,75,72,78,79,66],
[65,0,62,69,63,71,69,58],
[62,68,0,68,65,78,66,79],
[55,61,62,0,66,68,58,61],
[58,67,65,64,0,69,61,64],
[52,59,52,62,61,0,58,56],
[51,61,64,72,69,72,0,67],
[64,72,51,69,66,74,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,69,79,62,76,64,72],
[57,0,66,75,63,73,58,59],
[61,64,0,75,61,72,68,52],
[51,55,55,0,53,52,51,55],
[68,67,69,77,0,79,64,78],
[54,57,58,78,51,0,52,48],
[66,72,62,79,66,78,0,62],
[58,71,78,75,52,82,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,51,50,53,82,55,44],
[70,0,54,69,56,72,62,67],
[79,76,0,68,60,76,73,50],
[80,61,62,0,60,78,61,61],
[77,74,70,70,0,83,74,64],
[48,58,54,52,47,0,53,48],
[75,68,57,69,56,77,0,58],
[86,63,80,69,66,82,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,47,77,60,56,52,57],
[66,0,61,64,68,68,52,60],
[83,69,0,81,62,62,60,73],
[53,66,49,0,58,57,59,52],
[70,62,68,72,0,59,58,58],
[74,62,68,73,71,0,69,64],
[78,78,70,71,72,61,0,61],
[73,70,57,78,72,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,51,70,54,66,63,63],
[75,0,54,65,66,63,78,66],
[79,76,0,83,69,77,76,64],
[60,65,47,0,60,60,69,71],
[76,64,61,70,0,60,77,72],
[64,67,53,70,70,0,67,62],
[67,52,54,61,53,63,0,49],
[67,64,66,59,58,68,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,58,65,67,59,65,63],
[76,0,58,64,70,61,64,68],
[72,72,0,67,71,68,73,60],
[65,66,63,0,68,73,69,70],
[63,60,59,62,0,65,65,58],
[71,69,62,57,65,0,68,58],
[65,66,57,61,65,62,0,69],
[67,62,70,60,72,72,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,77,68,83,78,67,73],
[68,0,84,65,79,69,83,75],
[53,46,0,56,74,68,68,65],
[62,65,74,0,78,72,70,75],
[47,51,56,52,0,57,61,67],
[52,61,62,58,73,0,64,70],
[63,47,62,60,69,66,0,71],
[57,55,65,55,63,60,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,71,56,68,68,69,65],
[74,0,86,66,83,76,76,55],
[59,44,0,60,63,60,59,48],
[74,64,70,0,82,74,72,55],
[62,47,67,48,0,67,52,50],
[62,54,70,56,63,0,55,45],
[61,54,71,58,78,75,0,59],
[65,75,82,75,80,85,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,73,38,59,60,67,66],
[67,0,74,47,66,59,67,49],
[57,56,0,51,73,66,68,64],
[92,83,79,0,68,83,86,50],
[71,64,57,62,0,66,65,43],
[70,71,64,47,64,0,56,63],
[63,63,62,44,65,74,0,50],
[64,81,66,80,87,67,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,77,59,55,53,81,60],
[69,0,73,81,63,76,70,69],
[53,57,0,66,70,55,70,60],
[71,49,64,0,65,63,66,66],
[75,67,60,65,0,75,83,75],
[77,54,75,67,55,0,81,58],
[49,60,60,64,47,49,0,71],
[70,61,70,64,55,72,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,58,72,56,67,54,52],
[84,0,66,71,61,72,71,65],
[72,64,0,71,66,57,65,55],
[58,59,59,0,71,57,72,63],
[74,69,64,59,0,63,76,64],
[63,58,73,73,67,0,80,65],
[76,59,65,58,54,50,0,61],
[78,65,75,67,66,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,83,74,64,71,83,64],
[54,0,76,65,73,73,69,57],
[47,54,0,63,49,65,73,55],
[56,65,67,0,70,66,65,62],
[66,57,81,60,0,63,64,81],
[59,57,65,64,67,0,76,55],
[47,61,57,65,66,54,0,54],
[66,73,75,68,49,75,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,59,60,68,62,71],
[65,0,63,56,55,62,73,76],
[62,67,0,59,63,56,65,75],
[71,74,71,0,64,69,70,86],
[70,75,67,66,0,72,62,84],
[62,68,74,61,58,0,56,69],
[68,57,65,60,68,74,0,70],
[59,54,55,44,46,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,57,65,70,73,71,64],
[54,0,56,58,68,52,76,58],
[73,74,0,64,61,72,71,68],
[65,72,66,0,65,68,72,62],
[60,62,69,65,0,74,73,60],
[57,78,58,62,56,0,67,63],
[59,54,59,58,57,63,0,54],
[66,72,62,68,70,67,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,62,65,71,74,61],
[70,0,70,67,79,76,68,58],
[69,60,0,53,71,60,59,61],
[68,63,77,0,83,78,66,60],
[65,51,59,47,0,65,56,69],
[59,54,70,52,65,0,75,61],
[56,62,71,64,74,55,0,61],
[69,72,69,70,61,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,32,64,49,30,51,63],
[83,0,31,66,65,97,66,49],
[98,99,0,96,49,82,82,63],
[66,64,34,0,49,47,52,33],
[81,65,81,81,0,48,65,81],
[100,33,48,83,82,0,67,50],
[79,64,48,78,65,63,0,80],
[67,81,67,97,49,80,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,75,79,62,56,58,62],
[74,0,79,70,61,62,54,78],
[55,51,0,61,55,65,54,72],
[51,60,69,0,62,55,62,56],
[68,69,75,68,0,76,63,73],
[74,68,65,75,54,0,73,75],
[72,76,76,68,67,57,0,68],
[68,52,58,74,57,55,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,62,70,76,65,79],
[72,0,62,70,71,77,67,71],
[70,68,0,61,64,91,71,62],
[68,60,69,0,62,80,54,64],
[60,59,66,68,0,75,65,69],
[54,53,39,50,55,0,42,57],
[65,63,59,76,65,88,0,71],
[51,59,68,66,61,73,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,71,68,65,72,66],
[68,0,66,72,64,66,72,70],
[70,64,0,67,71,70,66,71],
[59,58,63,0,66,55,56,56],
[62,66,59,64,0,65,68,59],
[65,64,60,75,65,0,71,64],
[58,58,64,74,62,59,0,61],
[64,60,59,74,71,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,65,43,56,50,64,53],
[59,0,51,50,45,45,57,48],
[65,79,0,66,69,67,71,63],
[87,80,64,0,76,72,70,76],
[74,85,61,54,0,54,63,53],
[80,85,63,58,76,0,63,67],
[66,73,59,60,67,67,0,58],
[77,82,67,54,77,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,51,69,71,60,45,54],
[75,0,57,58,65,82,51,56],
[79,73,0,70,97,61,51,79],
[61,72,60,0,78,76,71,61],
[59,65,33,52,0,33,44,34],
[70,48,69,54,97,0,61,69],
[85,79,79,59,86,69,0,67],
[76,74,51,69,96,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,61,56,67,62,68],
[67,0,65,79,61,69,69,74],
[68,65,0,68,62,64,65,64],
[69,51,62,0,58,62,55,64],
[74,69,68,72,0,65,66,75],
[63,61,66,68,65,0,66,74],
[68,61,65,75,64,64,0,69],
[62,56,66,66,55,56,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,73,66,64,73,67],
[51,0,58,59,57,52,62,57],
[66,72,0,72,65,73,71,60],
[57,71,58,0,59,63,65,54],
[64,73,65,71,0,63,72,62],
[66,78,57,67,67,0,66,62],
[57,68,59,65,58,64,0,57],
[63,73,70,76,68,68,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,72,55,77,64,86,62],
[73,0,70,67,76,61,75,53],
[58,60,0,61,78,63,81,72],
[75,63,69,0,72,65,78,59],
[53,54,52,58,0,41,68,41],
[66,69,67,65,89,0,77,67],
[44,55,49,52,62,53,0,52],
[68,77,58,71,89,63,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,62,55,71,56,54],
[72,0,69,59,68,75,71,67],
[63,61,0,69,55,65,66,71],
[68,71,61,0,64,72,72,64],
[75,62,75,66,0,75,78,69],
[59,55,65,58,55,0,59,68],
[74,59,64,58,52,71,0,69],
[76,63,59,66,61,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,66,66,76,63,69],
[58,0,55,56,49,68,67,62],
[68,75,0,65,69,77,73,71],
[64,74,65,0,73,75,70,77],
[64,81,61,57,0,82,64,66],
[54,62,53,55,48,0,61,55],
[67,63,57,60,66,69,0,66],
[61,68,59,53,64,75,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,76,64,34,45,64,86],
[66,0,76,74,54,77,42,53],
[54,54,0,40,53,54,42,53],
[66,56,90,0,56,67,42,33],
[96,76,77,74,0,65,65,87],
[85,53,76,63,65,0,42,53],
[66,88,88,88,65,88,0,53],
[44,77,77,97,43,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,48,61,58,57,63,70],
[65,0,52,71,65,51,63,64],
[82,78,0,69,71,56,84,75],
[69,59,61,0,62,67,57,58],
[72,65,59,68,0,47,68,71],
[73,79,74,63,83,0,76,84],
[67,67,46,73,62,54,0,72],
[60,66,55,72,59,46,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,60,58,70,61,59],
[72,0,66,68,63,66,68,61],
[69,64,0,70,66,70,61,67],
[70,62,60,0,63,66,62,61],
[72,67,64,67,0,65,70,64],
[60,64,60,64,65,0,61,64],
[69,62,69,68,60,69,0,66],
[71,69,63,69,66,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,59,63,63,70,61],
[68,0,74,72,72,62,70,65],
[70,56,0,65,67,63,65,66],
[71,58,65,0,64,64,73,60],
[67,58,63,66,0,57,66,64],
[67,68,67,66,73,0,74,65],
[60,60,65,57,64,56,0,52],
[69,65,64,70,66,65,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,56,60,57,67,62,64],
[76,0,68,64,66,73,73,67],
[74,62,0,71,62,67,68,62],
[70,66,59,0,60,66,58,64],
[73,64,68,70,0,66,66,71],
[63,57,63,64,64,0,61,63],
[68,57,62,72,64,69,0,73],
[66,63,68,66,59,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,65,62,62,67,70],
[64,0,59,65,66,68,62,76],
[64,71,0,71,75,70,62,66],
[65,65,59,0,70,68,62,70],
[68,64,55,60,0,62,69,65],
[68,62,60,62,68,0,67,67],
[63,68,68,68,61,63,0,78],
[60,54,64,60,65,63,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,73,70,57,64,63],
[57,0,65,64,71,57,53,58],
[56,65,0,66,67,62,67,63],
[57,66,64,0,68,56,64,61],
[60,59,63,62,0,53,50,57],
[73,73,68,74,77,0,59,67],
[66,77,63,66,80,71,0,66],
[67,72,67,69,73,63,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,73,62,70,61,79],
[60,0,63,61,61,55,61,57],
[61,67,0,68,65,66,59,62],
[57,69,62,0,47,53,62,66],
[68,69,65,83,0,80,70,69],
[60,75,64,77,50,0,57,70],
[69,69,71,68,60,73,0,80],
[51,73,68,64,61,60,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,68,60,74,64,60],
[69,0,70,68,59,77,65,66],
[65,60,0,65,67,63,59,64],
[62,62,65,0,61,67,55,61],
[70,71,63,69,0,74,66,70],
[56,53,67,63,56,0,51,54],
[66,65,71,75,64,79,0,70],
[70,64,66,69,60,76,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,56,55,66,73,58,62],
[70,0,59,60,72,74,66,65],
[74,71,0,72,76,65,71,75],
[75,70,58,0,75,76,71,67],
[64,58,54,55,0,63,63,63],
[57,56,65,54,67,0,70,63],
[72,64,59,59,67,60,0,70],
[68,65,55,63,67,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,67,64,54,60,58,63],
[55,0,60,58,55,54,58,60],
[63,70,0,65,70,59,57,59],
[66,72,65,0,67,57,56,67],
[76,75,60,63,0,63,66,60],
[70,76,71,73,67,0,55,64],
[72,72,73,74,64,75,0,70],
[67,70,71,63,70,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,83,66,70,61,66,72],
[66,0,75,68,60,64,64,80],
[47,55,0,58,61,54,55,73],
[64,62,72,0,69,58,69,58],
[60,70,69,61,0,74,67,70],
[69,66,76,72,56,0,66,77],
[64,66,75,61,63,64,0,62],
[58,50,57,72,60,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,69,53,59,62,60],
[70,0,69,72,68,66,63,78],
[75,61,0,68,56,61,63,67],
[61,58,62,0,57,58,60,66],
[77,62,74,73,0,66,77,73],
[71,64,69,72,64,0,79,65],
[68,67,67,70,53,51,0,70],
[70,52,63,64,57,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,66,69,59,60,66],
[64,0,82,78,76,70,88,73],
[68,48,0,59,66,67,62,73],
[64,52,71,0,76,66,80,68],
[61,54,64,54,0,56,63,80],
[71,60,63,64,74,0,62,74],
[70,42,68,50,67,68,0,70],
[64,57,57,62,50,56,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,65,76,67,74,64,53],
[69,0,64,76,66,67,68,71],
[65,66,0,70,63,71,74,68],
[54,54,60,0,62,63,68,48],
[63,64,67,68,0,62,63,72],
[56,63,59,67,68,0,68,68],
[66,62,56,62,67,62,0,66],
[77,59,62,82,58,62,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,66,63,69,71,70],
[65,0,55,60,58,61,66,61],
[73,75,0,72,66,72,64,68],
[64,70,58,0,63,64,70,69],
[67,72,64,67,0,71,71,67],
[61,69,58,66,59,0,57,61],
[59,64,66,60,59,73,0,66],
[60,69,62,61,63,69,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,64,63,61,63,58,62],
[51,0,51,54,53,52,52,45],
[66,79,0,62,71,67,67,54],
[67,76,68,0,66,66,59,68],
[69,77,59,64,0,62,73,60],
[67,78,63,64,68,0,66,66],
[72,78,63,71,57,64,0,65],
[68,85,76,62,70,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,62,64,55,62,66,78],
[58,0,45,70,62,60,38,70],
[68,85,0,61,71,64,52,69],
[66,60,69,0,61,58,50,56],
[75,68,59,69,0,76,61,71],
[68,70,66,72,54,0,50,56],
[64,92,78,80,69,80,0,75],
[52,60,61,74,59,74,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,68,71,67,60,73,73],
[60,0,60,63,68,66,70,59],
[62,70,0,72,77,68,69,67],
[59,67,58,0,68,60,64,68],
[63,62,53,62,0,68,70,63],
[70,64,62,70,62,0,71,65],
[57,60,61,66,60,59,0,68],
[57,71,63,62,67,65,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,67,63,66,66,77,67],
[52,0,79,65,66,64,104,66],
[63,51,0,24,78,77,38,65],
[67,65,106,0,81,92,80,93],
[64,64,52,49,0,51,77,65],
[64,66,53,38,79,0,53,91],
[53,26,92,50,53,77,0,65],
[63,64,65,37,65,39,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,61,62,64,78,61,76],
[57,0,51,61,59,65,63,65],
[69,79,0,74,81,77,65,70],
[68,69,56,0,65,76,63,78],
[66,71,49,65,0,69,68,70],
[52,65,53,54,61,0,60,68],
[69,67,65,67,62,70,0,73],
[54,65,60,52,60,62,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,67,63,72,67,66,68],
[67,0,64,66,76,72,65,66],
[63,66,0,65,72,66,60,63],
[67,64,65,0,76,72,70,67],
[58,54,58,54,0,56,56,60],
[63,58,64,58,74,0,55,60],
[64,65,70,60,74,75,0,64],
[62,64,67,63,70,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,63,66,73,61,64],
[62,0,66,70,69,80,70,61],
[65,64,0,67,68,76,66,62],
[67,60,63,0,65,75,64,61],
[64,61,62,65,0,79,64,65],
[57,50,54,55,51,0,62,55],
[69,60,64,66,66,68,0,62],
[66,69,68,69,65,75,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,60,69,61,69,64],
[64,0,61,64,65,63,66,64],
[66,69,0,63,71,69,68,71],
[70,66,67,0,71,62,70,75],
[61,65,59,59,0,54,67,71],
[69,67,61,68,76,0,68,75],
[61,64,62,60,63,62,0,69],
[66,66,59,55,59,55,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,70,71,66,63,68],
[68,0,63,72,60,66,67,72],
[74,67,0,70,62,66,62,68],
[60,58,60,0,61,62,57,62],
[59,70,68,69,0,61,75,72],
[64,64,64,68,69,0,68,70],
[67,63,68,73,55,62,0,70],
[62,58,62,68,58,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,60,60,81,68,64,78],
[52,0,58,47,57,63,54,61],
[70,72,0,63,77,74,65,73],
[70,83,67,0,70,69,51,70],
[49,73,53,60,0,58,54,58],
[62,67,56,61,72,0,57,67],
[66,76,65,79,76,73,0,76],
[52,69,57,60,72,63,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,45,69,57,66,64,54],
[72,0,48,68,54,57,71,58],
[85,82,0,76,80,76,78,63],
[61,62,54,0,49,58,67,52],
[73,76,50,81,0,70,70,67],
[64,73,54,72,60,0,79,55],
[66,59,52,63,60,51,0,45],
[76,72,67,78,63,75,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,61,57,65,70,59,69],
[64,0,62,74,63,64,49,61],
[69,68,0,68,72,61,55,68],
[73,56,62,0,78,55,66,69],
[65,67,58,52,0,62,66,65],
[60,66,69,75,68,0,58,70],
[71,81,75,64,64,72,0,78],
[61,69,62,61,65,60,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,31,69,58,70,50,62],
[68,0,70,78,88,60,88,91],
[99,60,0,88,87,82,88,89],
[61,52,42,0,57,54,29,42],
[72,42,43,73,0,73,60,62],
[60,70,48,76,57,0,58,80],
[80,42,42,101,70,72,0,71],
[68,39,41,88,68,50,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,71,78,70,67,73,70],
[77,0,71,65,50,79,78,63],
[59,59,0,85,47,58,64,71],
[52,65,45,0,66,66,67,69],
[60,80,83,64,0,98,88,77],
[63,51,72,64,32,0,86,63],
[57,52,66,63,42,44,0,63],
[60,67,59,61,53,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,98,70,72,71,75,70],
[78,0,76,77,67,56,70,65],
[32,54,0,75,60,70,58,47],
[60,53,55,0,65,70,74,71],
[58,63,70,65,0,72,66,75],
[59,74,60,60,58,0,63,51],
[55,60,72,56,64,67,0,55],
[60,65,83,59,55,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,68,61,68,70,76],
[62,0,57,63,65,58,61,69],
[65,73,0,72,66,66,69,72],
[62,67,58,0,63,63,61,69],
[69,65,64,67,0,66,64,70],
[62,72,64,67,64,0,69,73],
[60,69,61,69,66,61,0,75],
[54,61,58,61,60,57,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,65,85,62,60,72,83],
[60,0,76,70,86,72,96,89],
[65,54,0,81,87,74,76,83],
[45,60,49,0,67,36,54,49],
[68,44,43,63,0,53,73,72],
[70,58,56,94,77,0,83,81],
[58,34,54,76,57,47,0,80],
[47,41,47,81,58,49,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,63,45,58,46,53,49],
[73,0,73,56,70,55,64,63],
[67,57,0,55,71,66,62,64],
[85,74,75,0,83,57,77,72],
[72,60,59,47,0,44,53,56],
[84,75,64,73,86,0,75,63],
[77,66,68,53,77,55,0,66],
[81,67,66,58,74,67,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,83,69,58,78,63,84],
[53,0,70,65,50,66,55,75],
[47,60,0,64,62,65,68,69],
[61,65,66,0,65,64,57,64],
[72,80,68,65,0,78,68,70],
[52,64,65,66,52,0,54,62],
[67,75,62,73,62,76,0,88],
[46,55,61,66,60,68,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,71,59,64,71,77],
[69,0,69,82,58,58,68,76],
[68,61,0,65,47,56,63,75],
[59,48,65,0,67,59,61,73],
[71,72,83,63,0,65,78,87],
[66,72,74,71,65,0,73,84],
[59,62,67,69,52,57,0,80],
[53,54,55,57,43,46,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,66,73,62,65,60],
[68,0,60,65,69,62,72,52],
[67,70,0,68,73,64,65,61],
[64,65,62,0,67,67,66,57],
[57,61,57,63,0,58,66,63],
[68,68,66,63,72,0,70,67],
[65,58,65,64,64,60,0,53],
[70,78,69,73,67,63,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,84,65,78,66,83,71],
[59,0,70,47,56,45,55,54],
[46,60,0,61,65,59,76,64],
[65,83,69,0,64,65,74,70],
[52,74,65,66,0,58,67,46],
[64,85,71,65,72,0,66,70],
[47,75,54,56,63,64,0,55],
[59,76,66,60,84,60,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,65,114,66,66,99,50],
[99,0,114,98,66,99,115,65],
[65,16,0,49,32,65,81,35],
[16,32,81,0,51,47,68,66],
[64,64,98,79,0,95,64,82],
[64,31,65,83,35,0,83,66],
[31,15,49,62,66,47,0,65],
[80,65,95,64,48,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,62,49,58,51,64],
[74,0,59,62,57,63,57,53],
[74,71,0,72,72,69,67,62],
[68,68,58,0,62,59,55,57],
[81,73,58,68,0,60,61,63],
[72,67,61,71,70,0,61,63],
[79,73,63,75,69,69,0,70],
[66,77,68,73,67,67,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,62,68,66,69,70,72],
[64,0,68,67,68,69,63,71],
[68,62,0,68,68,70,75,73],
[62,63,62,0,64,71,68,70],
[64,62,62,66,0,60,67,73],
[61,61,60,59,70,0,62,71],
[60,67,55,62,63,68,0,73],
[58,59,57,60,57,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,68,46,65,52,55,62],
[82,0,70,65,70,71,67,79],
[62,60,0,47,67,54,61,74],
[84,65,83,0,72,43,63,74],
[65,60,63,58,0,63,60,76],
[78,59,76,87,67,0,52,73],
[75,63,69,67,70,78,0,74],
[68,51,56,56,54,57,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,73,58,74,61,72],
[60,0,73,72,67,83,63,78],
[60,57,0,74,62,71,72,76],
[57,58,56,0,55,71,51,72],
[72,63,68,75,0,83,58,68],
[56,47,59,59,47,0,53,54],
[69,67,58,79,72,77,0,74],
[58,52,54,58,62,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,68,70,50,66,59],
[58,0,59,59,58,57,57,65],
[65,71,0,69,67,68,65,58],
[62,71,61,0,66,59,57,59],
[60,72,63,64,0,54,51,53],
[80,73,62,71,76,0,62,75],
[64,73,65,73,79,68,0,59],
[71,65,72,71,77,55,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,77,65,58,61,66,72],
[71,0,71,64,61,61,56,65],
[53,59,0,51,54,59,54,63],
[65,66,79,0,65,66,61,71],
[72,69,76,65,0,72,69,68],
[69,69,71,64,58,0,63,63],
[64,74,76,69,61,67,0,73],
[58,65,67,59,62,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,79,61,83,73,80,60],
[60,0,69,57,72,56,68,61],
[51,61,0,56,60,59,50,61],
[69,73,74,0,82,69,64,69],
[47,58,70,48,0,58,61,47],
[57,74,71,61,72,0,64,62],
[50,62,80,66,69,66,0,68],
[70,69,69,61,83,68,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,50,58,63,72,51,69],
[79,0,69,63,75,67,65,63],
[80,61,0,73,80,65,53,74],
[72,67,57,0,66,57,48,77],
[67,55,50,64,0,59,48,66],
[58,63,65,73,71,0,58,63],
[79,65,77,82,82,72,0,79],
[61,67,56,53,64,67,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,60,67,68,65,80,82],
[81,0,79,68,55,59,65,53],
[70,51,0,77,69,74,88,82],
[63,62,53,0,59,83,59,51],
[62,75,61,71,0,68,89,75],
[65,71,56,47,62,0,66,62],
[50,65,42,71,41,64,0,40],
[48,77,48,79,55,68,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,61,63,65,61,66,70],
[59,0,63,59,73,63,66,74],
[69,67,0,64,66,58,58,70],
[67,71,66,0,72,65,70,75],
[65,57,64,58,0,58,63,68],
[69,67,72,65,72,0,70,72],
[64,64,72,60,67,60,0,67],
[60,56,60,55,62,58,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,66,74,65,61,71,68],
[56,0,60,63,62,54,58,59],
[64,70,0,76,64,62,70,68],
[56,67,54,0,53,54,58,58],
[65,68,66,77,0,57,66,63],
[69,76,68,76,73,0,68,62],
[59,72,60,72,64,62,0,63],
[62,71,62,72,67,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,72,68,67,69,68,64],
[67,0,74,63,67,69,67,69],
[58,56,0,58,55,66,62,53],
[62,67,72,0,66,68,71,59],
[63,63,75,64,0,68,72,63],
[61,61,64,62,62,0,61,55],
[62,63,68,59,58,69,0,60],
[66,61,77,71,67,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,68,68,95,68,63,59],
[49,0,55,64,66,56,51,37],
[62,75,0,62,85,66,73,65],
[62,66,68,0,65,65,56,57],
[35,64,45,65,0,64,66,49],
[62,74,64,65,66,0,61,77],
[67,79,57,74,64,69,0,45],
[71,93,65,73,81,53,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,65,60,74,62,63],
[60,0,65,66,57,69,67,64],
[59,65,0,61,58,61,59,59],
[65,64,69,0,62,69,66,65],
[70,73,72,68,0,69,61,72],
[56,61,69,61,61,0,68,72],
[68,63,71,64,69,62,0,68],
[67,66,71,65,58,58,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,71,67,65,76,67,68],
[60,0,72,60,61,67,72,60],
[59,58,0,64,63,70,61,67],
[63,70,66,0,64,72,65,65],
[65,69,67,66,0,72,66,58],
[54,63,60,58,58,0,63,59],
[63,58,69,65,64,67,0,56],
[62,70,63,65,72,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,77,91,75,75,66,36],
[78,0,91,91,62,62,67,64],
[53,39,0,92,63,63,53,41],
[39,39,38,0,49,63,51,38],
[55,68,67,81,0,39,80,40],
[55,68,67,67,91,0,80,67],
[64,63,77,79,50,50,0,64],
[94,66,89,92,90,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,76,47,51,50,61,50],
[75,0,82,57,64,63,72,66],
[54,48,0,56,55,48,72,58],
[83,73,74,0,64,68,84,64],
[79,66,75,66,0,67,80,63],
[80,67,82,62,63,0,78,69],
[69,58,58,46,50,52,0,54],
[80,64,72,66,67,61,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,64,63,74,64,71],
[66,0,69,64,62,67,68,71],
[59,61,0,49,72,64,59,65],
[66,66,81,0,73,84,63,72],
[67,68,58,57,0,62,57,61],
[56,63,66,46,68,0,50,63],
[66,62,71,67,73,80,0,69],
[59,59,65,58,69,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,51,69,70,57,68,66],
[55,0,55,69,56,50,64,53],
[79,75,0,82,70,65,83,84],
[61,61,48,0,60,52,68,72],
[60,74,60,70,0,61,66,74],
[73,80,65,78,69,0,69,67],
[62,66,47,62,64,61,0,64],
[64,77,46,58,56,63,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,62,79,60,82,75],
[60,0,63,54,75,58,70,73],
[61,67,0,58,63,52,56,67],
[68,76,72,0,76,65,62,70],
[51,55,67,54,0,51,55,59],
[70,72,78,65,79,0,73,71],
[48,60,74,68,75,57,0,59],
[55,57,63,60,71,59,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,85,81,81,74,80],
[58,0,77,76,64,77,71,88],
[70,53,0,76,68,78,68,82],
[45,54,54,0,68,55,53,60],
[49,66,62,62,0,75,60,64],
[49,53,52,75,55,0,51,70],
[56,59,62,77,70,79,0,78],
[50,42,48,70,66,60,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,70,65,59,66,61,74],
[69,0,71,70,59,70,65,75],
[60,59,0,60,66,64,59,68],
[65,60,70,0,56,66,69,72],
[71,71,64,74,0,73,64,72],
[64,60,66,64,57,0,63,65],
[69,65,71,61,66,67,0,82],
[56,55,62,58,58,65,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,65,61,63,49,63],
[68,0,71,69,68,54,59,63],
[62,59,0,67,61,63,55,59],
[65,61,63,0,63,60,61,63],
[69,62,69,67,0,61,57,66],
[67,76,67,70,69,0,59,62],
[81,71,75,69,73,71,0,64],
[67,67,71,67,64,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,63,63,70,65,73],
[63,0,64,61,60,64,74,70],
[63,66,0,68,64,62,63,64],
[67,69,62,0,68,71,66,69],
[67,70,66,62,0,70,67,65],
[60,66,68,59,60,0,63,66],
[65,56,67,64,63,67,0,71],
[57,60,66,61,65,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,67,80,62,62,78,80],
[57,0,62,76,56,73,64,72],
[63,68,0,64,56,67,70,92],
[50,54,66,0,56,74,70,67],
[68,74,74,74,0,64,82,84],
[68,57,63,56,66,0,76,80],
[52,66,60,60,48,54,0,74],
[50,58,38,63,46,50,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,66,51,70,74,79,58],
[69,0,65,55,87,60,73,57],
[64,65,0,71,78,69,73,75],
[79,75,59,0,81,79,77,71],
[60,43,52,49,0,58,57,53],
[56,70,61,51,72,0,61,53],
[51,57,57,53,73,69,0,55],
[72,73,55,59,77,77,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,75,89,63,72,73,63],
[72,0,52,74,66,65,73,57],
[55,78,0,89,79,80,87,72],
[41,56,41,0,73,71,72,66],
[67,64,51,57,0,65,66,63],
[58,65,50,59,65,0,49,65],
[57,57,43,58,64,81,0,41],
[67,73,58,64,67,65,89,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,68,81,75,57,56],
[61,0,56,71,79,62,63,55],
[57,74,0,61,77,62,66,60],
[62,59,69,0,76,64,65,65],
[49,51,53,54,0,52,54,64],
[55,68,68,66,78,0,54,57],
[73,67,64,65,76,76,0,72],
[74,75,70,65,66,73,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,85,60,60,68,68,58],
[65,0,85,56,66,64,65,60],
[45,45,0,53,46,48,53,43],
[70,74,77,0,67,69,64,68],
[70,64,84,63,0,64,57,62],
[62,66,82,61,66,0,59,66],
[62,65,77,66,73,71,0,71],
[72,70,87,62,68,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,50,64,56,61,70,72],
[66,0,58,56,43,78,72,86],
[80,72,0,44,66,69,56,65],
[66,74,86,0,49,76,80,72],
[74,87,64,81,0,86,86,77],
[69,52,61,54,44,0,74,61],
[60,58,74,50,44,56,0,80],
[58,44,65,58,53,69,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,62,68,59,79,58,61],
[56,0,62,60,53,57,49,55],
[68,68,0,69,61,64,64,62],
[62,70,61,0,70,63,73,64],
[71,77,69,60,0,72,72,68],
[51,73,66,67,58,0,49,58],
[72,81,66,57,58,81,0,59],
[69,75,68,66,62,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,78,68,56,71,65,61],
[72,0,78,74,65,69,69,59],
[52,52,0,59,51,59,60,59],
[62,56,71,0,69,61,64,62],
[74,65,79,61,0,73,74,78],
[59,61,71,69,57,0,63,66],
[65,61,70,66,56,67,0,57],
[69,71,71,68,52,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,66,56,74,78,69,68],
[49,0,45,45,69,53,63,52],
[64,85,0,62,72,73,73,59],
[74,85,68,0,89,80,71,63],
[56,61,58,41,0,62,45,38],
[52,77,57,50,68,0,59,68],
[61,67,57,59,85,71,0,69],
[62,78,71,67,92,62,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,76,95,77,39,56,76],
[41,0,59,59,41,41,37,59],
[54,71,0,74,76,76,56,59],
[35,71,56,0,58,39,54,93],
[53,89,54,72,0,40,91,75],
[91,89,54,91,90,0,91,76],
[74,93,74,76,39,39,0,74],
[54,71,71,37,55,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,49,17,16,51,67,33],
[114,0,68,66,49,98,51,50],
[81,62,0,47,46,65,81,31],
[113,64,83,0,83,97,67,80],
[114,81,84,47,0,81,84,47],
[79,32,65,33,49,0,49,49],
[63,79,49,63,46,81,0,47],
[97,80,99,50,83,81,83,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,75,66,66,60,49],
[73,0,72,92,83,62,70,80],
[62,58,0,68,63,53,60,61],
[55,38,62,0,49,42,53,59],
[64,47,67,81,0,59,61,57],
[64,68,77,88,71,0,77,82],
[70,60,70,77,69,53,0,57],
[81,50,69,71,73,48,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,58,53,60,54,60,71],
[65,0,61,56,66,68,53,66],
[72,69,0,67,74,64,65,70],
[77,74,63,0,66,60,67,80],
[70,64,56,64,0,55,61,68],
[76,62,66,70,75,0,68,78],
[70,77,65,63,69,62,0,74],
[59,64,60,50,62,52,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,51,53,59,68,72],
[70,0,59,59,59,67,66,73],
[70,71,0,70,61,73,72,74],
[79,71,60,0,68,71,77,85],
[77,71,69,62,0,67,68,68],
[71,63,57,59,63,0,67,67],
[62,64,58,53,62,63,0,68],
[58,57,56,45,62,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,42,44,44,44,88],
[86,0,42,42,42,42,42,86],
[86,88,0,42,86,86,44,130],
[88,88,88,0,88,44,88,88],
[86,88,44,42,0,42,44,86],
[86,88,44,86,88,0,44,88],
[86,88,86,42,86,86,0,130],
[42,44,0,42,44,42,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,70,58,78,68,77],
[57,0,56,60,54,71,43,70],
[56,74,0,79,66,75,64,64],
[60,70,51,0,52,56,56,56],
[72,76,64,78,0,77,72,85],
[52,59,55,74,53,0,54,80],
[62,87,66,74,58,76,0,69],
[53,60,66,74,45,50,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,61,57,56,67,62],
[76,0,63,74,70,71,64,63],
[71,67,0,60,60,59,65,65],
[69,56,70,0,75,83,76,61],
[73,60,70,55,0,73,76,68],
[74,59,71,47,57,0,57,53],
[63,66,65,54,54,73,0,51],
[68,67,65,69,62,77,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,72,64,71,53,73,44],
[68,0,65,62,74,58,67,48],
[58,65,0,46,59,61,71,40],
[66,68,84,0,74,76,78,65],
[59,56,71,56,0,68,69,47],
[77,72,69,54,62,0,77,64],
[57,63,59,52,61,53,0,51],
[86,82,90,65,83,66,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,76,70,70,71,72,64],
[53,0,66,59,67,60,68,58],
[54,64,0,62,58,60,66,61],
[60,71,68,0,59,60,66,57],
[60,63,72,71,0,59,68,72],
[59,70,70,70,71,0,71,68],
[58,62,64,64,62,59,0,59],
[66,72,69,73,58,62,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,72,71,68,75,70,69],
[70,0,60,57,62,73,71,71],
[58,70,0,66,58,76,61,72],
[59,73,64,0,69,80,75,73],
[62,68,72,61,0,69,66,74],
[55,57,54,50,61,0,62,62],
[60,59,69,55,64,68,0,62],
[61,59,58,57,56,68,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,64,61,52,66,59,66],
[77,0,64,65,64,68,64,75],
[66,66,0,62,54,52,59,67],
[69,65,68,0,70,70,63,76],
[78,66,76,60,0,67,62,75],
[64,62,78,60,63,0,61,64],
[71,66,71,67,68,69,0,64],
[64,55,63,54,55,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,54,70,59,59,70,70],
[66,0,62,72,64,58,69,67],
[76,68,0,65,73,65,72,67],
[60,58,65,0,60,53,68,69],
[71,66,57,70,0,57,72,73],
[71,72,65,77,73,0,76,79],
[60,61,58,62,58,54,0,62],
[60,63,63,61,57,51,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,71,54,62,54,56,47],
[72,0,71,63,77,58,65,58],
[59,59,0,59,70,53,51,62],
[76,67,71,0,76,61,68,63],
[68,53,60,54,0,46,55,56],
[76,72,77,69,84,0,78,65],
[74,65,79,62,75,52,0,64],
[83,72,68,67,74,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,59,68,72,59,62,69],
[71,0,62,74,77,68,70,76],
[71,68,0,71,72,81,62,75],
[62,56,59,0,63,60,63,63],
[58,53,58,67,0,58,65,60],
[71,62,49,70,72,0,72,65],
[68,60,68,67,65,58,0,78],
[61,54,55,67,70,65,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,92,44,92,36,55,55],
[58,0,77,74,75,67,67,66],
[38,53,0,53,19,36,37,38],
[86,56,77,0,57,56,47,77],
[38,55,111,73,0,36,35,47],
[94,63,94,74,94,0,46,57],
[75,63,93,83,95,84,0,67],
[75,64,92,53,83,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,85,73,63,77,70,92],
[53,0,62,62,65,71,55,69],
[45,68,0,57,63,53,47,59],
[57,68,73,0,65,71,65,63],
[67,65,67,65,0,69,67,66],
[53,59,77,59,61,0,51,78],
[60,75,83,65,63,79,0,63],
[38,61,71,67,64,52,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,64,99,67,67,48,98],
[49,0,80,65,80,65,64,49],
[66,50,0,84,50,52,82,99],
[31,65,46,0,50,32,63,51],
[63,50,80,80,0,48,48,83],
[63,65,78,98,82,0,62,98],
[82,66,48,67,82,68,0,83],
[32,81,31,79,47,32,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,62,50,74,60,53],
[65,0,52,45,54,63,56,50],
[73,78,0,65,69,77,66,64],
[68,85,65,0,65,74,69,64],
[80,76,61,65,0,80,62,69],
[56,67,53,56,50,0,41,44],
[70,74,64,61,68,89,0,76],
[77,80,66,66,61,86,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,68,64,64,77,59,56],
[72,0,70,66,67,69,62,71],
[62,60,0,65,70,60,67,61],
[66,64,65,0,56,64,78,54],
[66,63,60,74,0,72,74,52],
[53,61,70,66,58,0,67,40],
[71,68,63,52,56,63,0,54],
[74,59,69,76,78,90,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,69,69,66,69,65],
[64,0,52,58,66,68,64,54],
[71,78,0,62,83,74,62,68],
[61,72,68,0,69,69,63,77],
[61,64,47,61,0,72,64,71],
[64,62,56,61,58,0,70,68],
[61,66,68,67,66,60,0,76],
[65,76,62,53,59,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,69,65,70,68,69],
[66,0,76,67,67,68,64,57],
[61,54,0,52,47,59,59,61],
[61,63,78,0,58,71,72,68],
[65,63,83,72,0,75,74,66],
[60,62,71,59,55,0,69,66],
[62,66,71,58,56,61,0,69],
[61,73,69,62,64,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,49,71,81,63,65,59],
[64,0,67,80,79,70,58,71],
[81,63,0,91,89,83,76,75],
[59,50,39,0,63,56,48,45],
[49,51,41,67,0,66,59,55],
[67,60,47,74,64,0,60,51],
[65,72,54,82,71,70,0,59],
[71,59,55,85,75,79,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,61,60,67,64,65],
[68,0,70,54,61,65,65,68],
[62,60,0,54,53,54,66,63],
[69,76,76,0,65,67,71,80],
[70,69,77,65,0,58,62,82],
[63,65,76,63,72,0,74,74],
[66,65,64,59,68,56,0,69],
[65,62,67,50,48,56,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,53,76,65,64,66,72],
[72,0,61,81,75,69,73,80],
[77,69,0,60,74,75,68,76],
[54,49,70,0,56,65,51,66],
[65,55,56,74,0,69,64,78],
[66,61,55,65,61,0,57,73],
[64,57,62,79,66,73,0,74],
[58,50,54,64,52,57,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,59,67,68,74,63],
[70,0,63,59,72,73,82,62],
[57,67,0,77,85,66,72,68],
[71,71,53,0,80,65,71,56],
[63,58,45,50,0,70,61,59],
[62,57,64,65,60,0,65,64],
[56,48,58,59,69,65,0,63],
[67,68,62,74,71,66,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,59,52,62,60,86,75],
[78,0,76,47,70,77,83,84],
[71,54,0,62,75,39,74,71],
[78,83,68,0,78,71,82,63],
[68,60,55,52,0,65,77,78],
[70,53,91,59,65,0,71,78],
[44,47,56,48,53,59,0,56],
[55,46,59,67,52,52,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,89,68,82,63,84],
[58,0,60,79,76,78,56,77],
[64,70,0,90,72,73,70,73],
[41,51,40,0,50,59,46,56],
[62,54,58,80,0,75,59,68],
[48,52,57,71,55,0,53,65],
[67,74,60,84,71,77,0,81],
[46,53,57,74,62,65,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,83,82,75,65,82,88],
[50,0,83,65,80,61,68,76],
[47,47,0,70,62,46,66,50],
[48,65,60,0,58,61,72,67],
[55,50,68,72,0,63,73,78],
[65,69,84,69,67,0,68,88],
[48,62,64,58,57,62,0,60],
[42,54,80,63,52,42,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,70,74,67,56,72],
[62,0,65,58,70,63,65,70],
[65,65,0,77,75,85,74,60],
[60,72,53,0,79,57,63,61],
[56,60,55,51,0,68,41,58],
[63,67,45,73,62,0,51,58],
[74,65,56,67,89,79,0,72],
[58,60,70,69,72,72,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,56,59,56,67,63,67],
[79,0,64,72,64,78,64,76],
[74,66,0,73,61,78,68,68],
[71,58,57,0,68,72,73,72],
[74,66,69,62,0,72,72,76],
[63,52,52,58,58,0,69,63],
[67,66,62,57,58,61,0,68],
[63,54,62,58,54,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,72,76,71,61,71,77],
[56,0,61,55,65,62,69,61],
[58,69,0,57,62,57,73,62],
[54,75,73,0,57,59,77,64],
[59,65,68,73,0,67,83,73],
[69,68,73,71,63,0,77,69],
[59,61,57,53,47,53,0,62],
[53,69,68,66,57,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,69,81,76,81,64,67],
[74,0,65,80,71,83,65,75],
[61,65,0,68,66,72,52,66],
[49,50,62,0,61,63,48,53],
[54,59,64,69,0,67,50,53],
[49,47,58,67,63,0,48,59],
[66,65,78,82,80,82,0,81],
[63,55,64,77,77,71,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,61,63,49,83,63,62],
[74,0,61,59,56,70,79,67],
[69,69,0,67,64,80,78,77],
[67,71,63,0,59,69,78,71],
[81,74,66,71,0,61,85,80],
[47,60,50,61,69,0,70,63],
[67,51,52,52,45,60,0,67],
[68,63,53,59,50,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,61,57,59,68,74],
[72,0,61,53,61,51,45,62],
[68,69,0,50,63,51,56,63],
[69,77,80,0,65,63,62,74],
[73,69,67,65,0,58,55,62],
[71,79,79,67,72,0,61,74],
[62,85,74,68,75,69,0,75],
[56,68,67,56,68,56,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,75,63,66,59,70,80],
[71,0,77,70,66,65,68,81],
[55,53,0,50,74,65,61,78],
[67,60,80,0,71,73,72,79],
[64,64,56,59,0,62,63,78],
[71,65,65,57,68,0,65,76],
[60,62,69,58,67,65,0,71],
[50,49,52,51,52,54,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,63,75,62,67,71],
[64,0,52,58,62,63,56,55],
[65,78,0,70,67,64,71,62],
[67,72,60,0,62,65,57,62],
[55,68,63,68,0,55,59,65],
[68,67,66,65,75,0,73,57],
[63,74,59,73,71,57,0,69],
[59,75,68,68,65,73,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,62,82,67,73,80,67],
[59,0,78,79,67,72,72,65],
[68,52,0,81,69,79,86,65],
[48,51,49,0,59,77,78,72],
[63,63,61,71,0,72,73,72],
[57,58,51,53,58,0,58,55],
[50,58,44,52,57,72,0,57],
[63,65,65,58,58,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,69,61,74,85,77,66],
[56,0,81,65,67,75,73,73],
[61,49,0,50,53,58,78,51],
[69,65,80,0,60,77,74,71],
[56,63,77,70,0,75,71,59],
[45,55,72,53,55,0,64,62],
[53,57,52,56,59,66,0,53],
[64,57,79,59,71,68,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,62,61,67,69,60],
[61,0,59,59,59,61,58,54],
[63,71,0,72,61,75,70,54],
[68,71,58,0,61,66,60,65],
[69,71,69,69,0,73,63,65],
[63,69,55,64,57,0,57,59],
[61,72,60,70,67,73,0,56],
[70,76,76,65,65,71,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,55,44,61,64,46,56],
[74,0,66,65,76,60,60,64],
[75,64,0,56,69,66,68,62],
[86,65,74,0,65,62,61,70],
[69,54,61,65,0,83,77,61],
[66,70,64,68,47,0,52,61],
[84,70,62,69,53,78,0,60],
[74,66,68,60,69,69,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,76,63,62,77,68,60],
[63,0,59,64,64,67,61,66],
[54,71,0,61,65,72,68,64],
[67,66,69,0,67,67,63,66],
[68,66,65,63,0,70,74,67],
[53,63,58,63,60,0,60,57],
[62,69,62,67,56,70,0,59],
[70,64,66,64,63,73,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,71,84,65,69,72,77],
[56,0,63,68,57,48,70,73],
[59,67,0,70,66,61,59,77],
[46,62,60,0,54,53,63,78],
[65,73,64,76,0,58,79,73],
[61,82,69,77,72,0,79,85],
[58,60,71,67,51,51,0,64],
[53,57,53,52,57,45,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,65,62,68,54,70],
[64,0,55,66,61,64,61,68],
[64,75,0,79,61,70,74,73],
[65,64,51,0,66,62,55,70],
[68,69,69,64,0,76,72,79],
[62,66,60,68,54,0,64,71],
[76,69,56,75,58,66,0,78],
[60,62,57,60,51,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,69,86,85,86,70,60],
[55,0,68,76,78,66,57,67],
[61,62,0,73,80,79,86,80],
[44,54,57,0,63,69,71,45],
[45,52,50,67,0,69,69,47],
[44,64,51,61,61,0,55,34],
[60,73,44,59,61,75,0,48],
[70,63,50,85,83,96,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,70,60,70,74,75,72],
[70,0,53,65,62,69,71,66],
[60,77,0,72,71,72,82,66],
[70,65,58,0,74,70,69,75],
[60,68,59,56,0,69,78,63],
[56,61,58,60,61,0,62,60],
[55,59,48,61,52,68,0,61],
[58,64,64,55,67,70,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,74,47,46,61,48],
[56,0,89,63,81,44,68,84],
[53,41,0,49,43,37,53,51],
[56,67,81,0,59,47,51,89],
[83,49,87,71,0,71,71,83],
[84,86,93,83,59,0,74,95],
[69,62,77,79,59,56,0,78],
[82,46,79,41,47,35,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,65,53,63,54,54],
[68,0,55,62,62,62,70,61],
[67,75,0,67,75,69,71,61],
[65,68,63,0,59,71,68,62],
[77,68,55,71,0,62,58,65],
[67,68,61,59,68,0,58,57],
[76,60,59,62,72,72,0,67],
[76,69,69,68,65,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,28,57,64,67,52,33],
[85,0,61,77,73,87,71,73],
[102,69,0,67,85,70,87,64],
[73,53,63,0,68,71,77,70],
[66,57,45,62,0,61,79,48],
[63,43,60,59,69,0,62,62],
[78,59,43,53,51,68,0,50],
[97,57,66,60,82,68,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,52,62,58,78,57],
[64,0,71,70,84,71,84,72],
[74,59,0,52,66,72,72,61],
[78,60,78,0,77,69,80,56],
[68,46,64,53,0,47,65,52],
[72,59,58,61,83,0,83,69],
[52,46,58,50,65,47,0,51],
[73,58,69,74,78,61,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,70,64,62,60,67,67],
[74,0,65,57,62,68,64,66],
[60,65,0,70,66,69,67,69],
[66,73,60,0,55,63,64,71],
[68,68,64,75,0,75,64,75],
[70,62,61,67,55,0,62,66],
[63,66,63,66,66,68,0,70],
[63,64,61,59,55,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,64,74,71,67,75,66],
[76,0,66,63,68,77,78,65],
[66,64,0,72,65,66,65,69],
[56,67,58,0,77,70,65,62],
[59,62,65,53,0,67,65,54],
[63,53,64,60,63,0,67,54],
[55,52,65,65,65,63,0,61],
[64,65,61,68,76,76,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,75,88,64,66,77,65],
[61,0,68,75,57,60,63,69],
[55,62,0,66,55,52,69,64],
[42,55,64,0,61,55,73,54],
[66,73,75,69,0,68,70,62],
[64,70,78,75,62,0,67,56],
[53,67,61,57,60,63,0,59],
[65,61,66,76,68,74,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,71,70,63,59,63],
[66,0,59,72,69,58,48,59],
[62,71,0,75,63,61,59,56],
[59,58,55,0,63,57,53,56],
[60,61,67,67,0,59,62,57],
[67,72,69,73,71,0,62,66],
[71,82,71,77,68,68,0,65],
[67,71,74,74,73,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,83,61,81,68,68],
[65,0,63,77,58,72,73,70],
[55,67,0,83,73,77,67,61],
[47,53,47,0,37,52,56,54],
[69,72,57,93,0,74,71,69],
[49,58,53,78,56,0,55,62],
[62,57,63,74,59,75,0,58],
[62,60,69,76,61,68,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,85,73,72,60,64,65],
[62,0,75,59,60,60,59,57],
[45,55,0,62,59,58,57,59],
[57,71,68,0,69,73,65,69],
[58,70,71,61,0,57,43,59],
[70,70,72,57,73,0,65,60],
[66,71,73,65,87,65,0,70],
[65,73,71,61,71,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,73,65,72,70,76],
[59,0,63,77,64,60,72,75],
[56,67,0,72,67,70,62,65],
[57,53,58,0,56,56,64,72],
[65,66,63,74,0,57,63,78],
[58,70,60,74,73,0,56,79],
[60,58,68,66,67,74,0,82],
[54,55,65,58,52,51,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,66,59,62,60,54],
[58,0,79,56,58,50,67,43],
[61,51,0,50,60,48,56,50],
[64,74,80,0,68,64,74,61],
[71,72,70,62,0,66,60,54],
[68,80,82,66,64,0,71,68],
[70,63,74,56,70,59,0,58],
[76,87,80,69,76,62,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,81,44,67,74,59,42],
[60,0,92,61,72,90,63,53],
[49,38,0,33,68,44,43,48],
[86,69,97,0,86,85,99,65],
[63,58,62,44,0,67,84,42],
[56,40,86,45,63,0,53,41],
[71,67,87,31,46,77,0,57],
[88,77,82,65,88,89,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,49,66,72,49,82],
[65,0,56,57,72,89,48,97],
[65,74,0,63,81,72,63,96],
[81,73,67,0,74,80,65,72],
[64,58,49,56,0,64,49,65],
[58,41,58,50,66,0,56,89],
[81,82,67,65,81,74,0,90],
[48,33,34,58,65,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,67,74,66,71,69,52],
[53,0,63,63,52,76,68,51],
[63,67,0,74,68,84,54,69],
[56,67,56,0,67,62,51,45],
[64,78,62,63,0,64,45,51],
[59,54,46,68,66,0,49,52],
[61,62,76,79,85,81,0,71],
[78,79,61,85,79,78,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,74,75,61,76,64,58],
[62,0,68,69,44,66,59,47],
[56,62,0,71,49,58,58,58],
[55,61,59,0,50,65,53,47],
[69,86,81,80,0,73,65,66],
[54,64,72,65,57,0,59,58],
[66,71,72,77,65,71,0,48],
[72,83,72,83,64,72,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,63,61,74,76,74],
[65,0,61,69,63,74,76,66],
[66,69,0,70,66,62,75,69],
[67,61,60,0,53,64,77,72],
[69,67,64,77,0,73,84,70],
[56,56,68,66,57,0,76,71],
[54,54,55,53,46,54,0,62],
[56,64,61,58,60,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,45,37,54,52,52,50],
[77,0,74,46,65,75,63,58],
[85,56,0,50,59,84,71,59],
[93,84,80,0,69,90,61,67],
[76,65,71,61,0,75,59,68],
[78,55,46,40,55,0,67,41],
[78,67,59,69,71,63,0,67],
[80,72,71,63,62,89,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,77,85,84,76,63,59],
[65,0,51,50,68,64,54,64],
[53,79,0,63,85,79,51,65],
[45,80,67,0,85,67,55,57],
[46,62,45,45,0,52,46,43],
[54,66,51,63,78,0,51,47],
[67,76,79,75,84,79,0,54],
[71,66,65,73,87,83,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,43,72,65,63,64,64],
[58,0,57,37,40,65,28,37],
[87,73,0,64,95,71,47,65],
[58,93,66,0,77,75,67,69],
[65,90,35,53,0,54,54,54],
[67,65,59,55,76,0,58,65],
[66,102,83,63,76,72,0,82],
[66,93,65,61,76,65,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,57,65,59,66,69],
[76,0,53,68,65,69,75,70],
[71,77,0,70,72,65,67,67],
[73,62,60,0,52,73,72,62],
[65,65,58,78,0,66,75,78],
[71,61,65,57,64,0,70,72],
[64,55,63,58,55,60,0,59],
[61,60,63,68,52,58,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,91,64,54,49,51,51],
[64,0,104,51,77,50,64,64],
[39,26,0,36,40,26,39,36],
[66,79,94,0,54,53,53,55],
[76,53,90,76,0,76,76,63],
[81,80,104,77,54,0,54,64],
[79,66,91,77,54,76,0,78],
[79,66,94,75,67,66,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,109,42,64,44,21,65,64],
[21,0,42,21,44,21,65,42],
[88,88,0,64,65,64,86,64],
[66,109,66,0,87,43,109,109],
[86,86,65,43,0,65,86,64],
[109,109,66,87,65,0,130,87],
[65,65,44,21,44,0,0,65],
[66,88,66,21,66,43,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,60,67,66,64,67,59],
[63,0,71,76,70,69,67,71],
[70,59,0,74,69,75,66,70],
[63,54,56,0,55,54,61,58],
[64,60,61,75,0,66,66,64],
[66,61,55,76,64,0,69,67],
[63,63,64,69,64,61,0,61],
[71,59,60,72,66,63,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,74,76,57,50,47],
[62,0,61,66,68,41,55,46],
[73,69,0,77,86,79,64,72],
[56,64,53,0,56,56,50,53],
[54,62,44,74,0,40,57,51],
[73,89,51,74,90,0,61,59],
[80,75,66,80,73,69,0,57],
[83,84,58,77,79,71,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,62,68,62,65,64,64],
[69,0,64,72,63,66,67,71],
[68,66,0,61,61,61,70,71],
[62,58,69,0,67,76,60,69],
[68,67,69,63,0,63,63,71],
[65,64,69,54,67,0,65,67],
[66,63,60,70,67,65,0,65],
[66,59,59,61,59,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,54,46,37,40,51],
[69,0,69,48,55,53,49,55],
[72,61,0,76,49,57,54,56],
[76,82,54,0,51,65,59,62],
[84,75,81,79,0,53,68,68],
[93,77,73,65,77,0,65,64],
[90,81,76,71,62,65,0,61],
[79,75,74,68,62,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,76,77,64,66,66,69],
[51,0,69,74,51,60,60,61],
[54,61,0,67,51,56,57,56],
[53,56,63,0,52,49,53,54],
[66,79,79,78,0,66,65,70],
[64,70,74,81,64,0,58,59],
[64,70,73,77,65,72,0,64],
[61,69,74,76,60,71,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,61,62,57,51,52,64],
[78,0,67,64,69,67,71,73],
[69,63,0,62,55,60,58,65],
[68,66,68,0,63,67,58,64],
[73,61,75,67,0,69,66,69],
[79,63,70,63,61,0,58,71],
[78,59,72,72,64,72,0,71],
[66,57,65,66,61,59,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,65,67,67,67,86,74],
[51,0,67,63,68,75,77,70],
[65,63,0,69,78,73,77,65],
[63,67,61,0,67,75,70,70],
[63,62,52,63,0,69,60,66],
[63,55,57,55,61,0,74,62],
[44,53,53,60,70,56,0,66],
[56,60,65,60,64,68,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,84,68,63,76,64,67],
[75,0,93,88,82,78,65,74],
[46,37,0,46,52,57,38,50],
[62,42,84,0,73,68,68,71],
[67,48,78,57,0,59,56,61],
[54,52,73,62,71,0,57,57],
[66,65,92,62,74,73,0,87],
[63,56,80,59,69,73,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,49,76,75,65,67,59],
[75,0,94,94,74,101,94,59],
[81,36,0,77,67,92,72,67],
[54,36,53,0,45,89,45,28],
[55,56,63,85,0,90,85,48],
[65,29,38,41,40,0,67,37],
[63,36,58,85,45,63,0,21],
[71,71,63,102,82,93,109,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,70,68,69,73,65],
[55,0,68,59,66,65,59,55],
[58,62,0,65,67,68,65,56],
[60,71,65,0,60,76,70,52],
[62,64,63,70,0,66,75,56],
[61,65,62,54,64,0,80,59],
[57,71,65,60,55,50,0,58],
[65,75,74,78,74,71,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,65,69,71,60,70,63],
[64,0,53,56,58,54,65,65],
[65,77,0,51,69,58,59,55],
[61,74,79,0,78,65,75,66],
[59,72,61,52,0,61,56,68],
[70,76,72,65,69,0,73,68],
[60,65,71,55,74,57,0,64],
[67,65,75,64,62,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,60,60,64,62,56,60],
[60,0,73,69,71,67,64,65],
[70,57,0,73,75,73,62,60],
[70,61,57,0,67,66,60,60],
[66,59,55,63,0,65,69,69],
[68,63,57,64,65,0,57,61],
[74,66,68,70,61,73,0,71],
[70,65,70,70,61,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,71,67,67,67,72],
[65,0,63,71,63,63,78,66],
[61,67,0,79,59,57,70,60],
[59,59,51,0,59,53,63,66],
[63,67,71,71,0,61,70,68],
[63,67,73,77,69,0,77,65],
[63,52,60,67,60,53,0,60],
[58,64,70,64,62,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,73,66,53,64,61,59],
[71,0,77,78,63,69,67,69],
[57,53,0,61,46,58,65,60],
[64,52,69,0,55,58,64,57],
[77,67,84,75,0,71,64,70],
[66,61,72,72,59,0,57,58],
[69,63,65,66,66,73,0,76],
[71,61,70,73,60,72,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,78,66,72,83,76,82],
[65,0,69,67,76,64,71,63],
[52,61,0,71,71,67,66,70],
[64,63,59,0,68,74,66,75],
[58,54,59,62,0,67,46,57],
[47,66,63,56,63,0,58,55],
[54,59,64,64,84,72,0,60],
[48,67,60,55,73,75,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,130,65,98,65,65,66,99],
[0,0,0,0,0,0,34,34],
[65,130,0,65,34,34,66,34],
[32,130,65,0,32,65,66,66],
[65,130,96,98,0,65,97,34],
[65,130,96,65,65,0,97,65],
[64,96,64,64,33,33,0,33],
[31,96,96,64,96,65,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,71,52,57,75,66],
[65,0,46,68,63,66,78,63],
[63,84,0,68,65,74,81,82],
[59,62,62,0,60,69,73,60],
[78,67,65,70,0,68,79,69],
[73,64,56,61,62,0,63,68],
[55,52,49,57,51,67,0,56],
[64,67,48,70,61,62,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,69,60,62,62,62],
[77,0,61,71,63,63,62,55],
[65,69,0,68,72,75,75,69],
[61,59,62,0,73,61,69,58],
[70,67,58,57,0,58,62,63],
[68,67,55,69,72,0,69,68],
[68,68,55,61,68,61,0,65],
[68,75,61,72,67,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,64,56,40,62,44],
[67,0,51,57,53,48,50,59],
[72,79,0,51,60,56,66,69],
[66,73,79,0,59,59,65,61],
[74,77,70,71,0,68,70,64],
[90,82,74,71,62,0,65,74],
[68,80,64,65,60,65,0,68],
[86,71,61,69,66,56,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,68,71,73,62,69],
[62,0,69,65,62,67,66,72],
[57,61,0,70,56,57,63,69],
[62,65,60,0,64,68,65,60],
[59,68,74,66,0,71,68,69],
[57,63,73,62,59,0,69,68],
[68,64,67,65,62,61,0,68],
[61,58,61,70,61,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,73,61,62,66,66,61],
[70,0,75,64,65,75,74,70],
[57,55,0,56,69,65,66,60],
[69,66,74,0,66,62,75,70],
[68,65,61,64,0,68,67,64],
[64,55,65,68,62,0,60,67],
[64,56,64,55,63,70,0,57],
[69,60,70,60,66,63,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,59,66,60,59,62],
[64,0,68,65,66,63,63,61],
[66,62,0,61,64,59,61,65],
[71,65,69,0,71,65,66,66],
[64,64,66,59,0,61,65,64],
[70,67,71,65,69,0,67,63],
[71,67,69,64,65,63,0,61],
[68,69,65,64,66,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,65,65,79,69,65,80],
[58,0,66,59,74,58,60,73],
[65,64,0,66,70,65,63,76],
[65,71,64,0,70,64,59,75],
[51,56,60,60,0,54,55,69],
[61,72,65,66,76,0,56,78],
[65,70,67,71,75,74,0,80],
[50,57,54,55,61,52,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,74,74,93,51,65],
[65,0,65,76,49,79,58,51],
[61,65,0,58,65,75,55,54],
[56,54,72,0,67,81,62,64],
[56,81,65,63,0,90,60,63],
[37,51,55,49,40,0,50,43],
[79,72,75,68,70,80,0,62],
[65,79,76,66,67,87,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,68,68,54,65,49,56],
[78,0,76,77,64,69,72,69],
[62,54,0,55,58,69,55,57],
[62,53,75,0,55,71,56,62],
[76,66,72,75,0,78,65,62],
[65,61,61,59,52,0,53,56],
[81,58,75,74,65,77,0,63],
[74,61,73,68,68,74,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,64,69,72,60,51,79],
[72,0,73,65,76,70,72,92],
[66,57,0,58,64,64,60,84],
[61,65,72,0,67,64,60,75],
[58,54,66,63,0,70,61,80],
[70,60,66,66,60,0,55,75],
[79,58,70,70,69,75,0,81],
[51,38,46,55,50,55,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,72,56,72,65,70,66],
[76,0,67,61,75,73,71,69],
[58,63,0,69,62,72,68,71],
[74,69,61,0,72,62,69,71],
[58,55,68,58,0,58,53,69],
[65,57,58,68,72,0,62,67],
[60,59,62,61,77,68,0,74],
[64,61,59,59,61,63,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,55,98,65,74,64,88],
[42,0,76,77,75,85,64,74],
[75,54,0,88,74,85,63,65],
[32,53,42,0,42,73,54,52],
[65,55,56,88,0,75,86,66],
[56,45,45,57,55,0,54,87],
[66,66,67,76,44,76,0,66],
[42,56,65,78,64,43,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,77,56,76,63,64,63],
[71,0,87,77,69,54,78,76],
[53,43,0,66,67,40,59,54],
[74,53,64,0,56,65,61,71],
[54,61,63,74,0,58,58,61],
[67,76,90,65,72,0,72,65],
[66,52,71,69,72,58,0,79],
[67,54,76,59,69,65,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,51,55,59,58,63,65],
[60,0,60,66,60,71,60,76],
[79,70,0,68,65,69,67,67],
[75,64,62,0,69,68,62,69],
[71,70,65,61,0,67,65,72],
[72,59,61,62,63,0,60,76],
[67,70,63,68,65,70,0,72],
[65,54,63,61,58,54,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,50,67,60,70,54],
[70,0,68,57,68,68,69,53],
[72,62,0,57,68,67,74,64],
[80,73,73,0,76,78,77,58],
[63,62,62,54,0,65,80,66],
[70,62,63,52,65,0,66,51],
[60,61,56,53,50,64,0,53],
[76,77,66,72,64,79,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,45,62,51,57,61,53],
[73,0,57,52,65,62,59,79],
[85,73,0,65,74,64,69,80],
[68,78,65,0,59,83,66,58],
[79,65,56,71,0,66,76,69],
[73,68,66,47,64,0,57,55],
[69,71,61,64,54,73,0,68],
[77,51,50,72,61,75,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,63,60,57,69,65],
[66,0,61,65,62,58,64,62],
[65,69,0,76,73,64,71,73],
[67,65,54,0,61,63,60,58],
[70,68,57,69,0,59,70,63],
[73,72,66,67,71,0,65,65],
[61,66,59,70,60,65,0,62],
[65,68,57,72,67,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,74,70,71,59,85,88],
[63,0,67,65,72,62,74,63],
[56,63,0,67,55,80,61,76],
[60,65,63,0,54,67,64,75],
[59,58,75,76,0,65,82,77],
[71,68,50,63,65,0,71,78],
[45,56,69,66,48,59,0,59],
[42,67,54,55,53,52,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,72,64,53,64,55,62],
[73,0,71,55,60,72,74,68],
[58,59,0,59,53,62,56,49],
[66,75,71,0,67,72,72,65],
[77,70,77,63,0,63,68,61],
[66,58,68,58,67,0,67,75],
[75,56,74,58,62,63,0,59],
[68,62,81,65,69,55,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,64,63,68,62,65,66],
[64,0,61,62,63,66,60,58],
[66,69,0,63,64,65,67,67],
[67,68,67,0,67,65,67,73],
[62,67,66,63,0,60,68,70],
[68,64,65,65,70,0,68,63],
[65,70,63,63,62,62,0,64],
[64,72,63,57,60,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,72,77,79,65,81],
[58,0,58,60,66,56,58,69],
[55,72,0,66,73,73,57,75],
[58,70,64,0,64,67,54,75],
[53,64,57,66,0,75,54,69],
[51,74,57,63,55,0,64,66],
[65,72,73,76,76,66,0,77],
[49,61,55,55,61,64,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,74,59,68,64,52,67],
[61,0,78,69,69,69,68,65],
[56,52,0,58,61,55,50,52],
[71,61,72,0,68,74,68,64],
[62,61,69,62,0,63,54,58],
[66,61,75,56,67,0,54,57],
[78,62,80,62,76,76,0,66],
[63,65,78,66,72,73,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,63,65,70,65,65],
[61,0,61,71,69,59,63,65],
[73,69,0,66,68,70,65,72],
[67,59,64,0,60,67,64,64],
[65,61,62,70,0,67,62,59],
[60,71,60,63,63,0,60,66],
[65,67,65,66,68,70,0,60],
[65,65,58,66,71,64,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,77,73,77,70,68,58],
[58,0,58,65,66,68,51,52],
[53,72,0,64,69,68,56,49],
[57,65,66,0,73,77,57,67],
[53,64,61,57,0,66,50,58],
[60,62,62,53,64,0,61,55],
[62,79,74,73,80,69,0,57],
[72,78,81,63,72,75,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,130,43,86,0,43,130],
[87,0,87,87,87,44,44,87],
[0,43,0,0,43,0,0,44],
[87,43,130,0,130,44,87,87],
[44,43,87,0,0,44,43,44],
[130,86,130,86,86,0,43,130],
[87,86,130,43,87,87,0,87],
[0,43,86,43,86,0,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,68,61,61,60,62,42],
[72,0,72,65,70,65,73,59],
[62,58,0,56,67,65,63,55],
[69,65,74,0,74,72,71,66],
[69,60,63,56,0,61,61,65],
[70,65,65,58,69,0,67,63],
[68,57,67,59,69,63,0,64],
[88,71,75,64,65,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,58,60,58,57,66],
[67,0,66,50,56,53,47,49],
[68,64,0,68,60,54,59,66],
[72,80,62,0,56,61,55,58],
[70,74,70,74,0,63,70,77],
[72,77,76,69,67,0,62,69],
[73,83,71,75,60,68,0,70],
[64,81,64,72,53,61,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,92,64,55,56,62,94,53],
[38,0,47,45,46,42,48,63],
[66,83,0,54,66,72,75,55],
[75,85,76,0,95,102,85,61],
[74,84,64,35,0,72,76,72],
[68,88,58,28,58,0,78,54],
[36,82,55,45,54,52,0,54],
[77,67,75,69,58,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,64,70,69,57,63],
[64,0,58,54,66,62,57,62],
[73,72,0,69,84,64,65,73],
[66,76,61,0,76,77,65,72],
[60,64,46,54,0,53,53,55],
[61,68,66,53,77,0,56,56],
[73,73,65,65,77,74,0,74],
[67,68,57,58,75,74,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,62,57,63,71,65],
[70,0,76,64,67,71,68,62],
[63,54,0,59,56,61,66,62],
[68,66,71,0,62,65,75,61],
[73,63,74,68,0,68,69,67],
[67,59,69,65,62,0,66,66],
[59,62,64,55,61,64,0,64],
[65,68,68,69,63,64,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,43,68,59,40,68],
[73,0,61,61,57,69,51,60],
[68,69,0,41,79,81,29,80],
[87,69,89,0,88,79,67,57],
[62,73,51,42,0,60,51,63],
[71,61,49,51,70,0,50,60],
[90,79,101,63,79,80,0,79],
[62,70,50,73,67,70,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,55,77,69,70,58,70],
[57,0,65,67,58,56,61,58],
[75,65,0,69,57,72,77,60],
[53,63,61,0,49,53,61,55],
[61,72,73,81,0,69,58,72],
[60,74,58,77,61,0,55,60],
[72,69,53,69,72,75,0,65],
[60,72,70,75,58,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,76,83,77,81,71,78],
[66,0,71,73,75,64,65,79],
[54,59,0,68,80,64,64,71],
[47,57,62,0,65,62,60,66],
[53,55,50,65,0,61,64,71],
[49,66,66,68,69,0,69,66],
[59,65,66,70,66,61,0,72],
[52,51,59,64,59,64,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,59,65,67,75,53],
[59,0,66,56,58,72,70,66],
[59,64,0,58,56,64,59,52],
[71,74,72,0,62,71,74,68],
[65,72,74,68,0,69,73,69],
[63,58,66,59,61,0,72,63],
[55,60,71,56,57,58,0,56],
[77,64,78,62,61,67,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,62,59,65,62,72,65],
[67,0,58,59,63,62,67,63],
[68,72,0,66,76,61,77,67],
[71,71,64,0,66,76,75,76],
[65,67,54,64,0,66,68,60],
[68,68,69,54,64,0,71,63],
[58,63,53,55,62,59,0,64],
[65,67,63,54,70,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,65,84,67,70,64],
[64,0,65,82,67,78,85,65],
[73,65,0,76,83,74,64,71],
[65,48,54,0,68,40,61,63],
[46,63,47,62,0,66,56,55],
[63,52,56,90,64,0,71,62],
[60,45,66,69,74,59,0,51],
[66,65,59,67,75,68,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,63,67,52,63,70,73],
[63,0,59,64,57,56,68,72],
[67,71,0,73,67,73,74,63],
[63,66,57,0,47,56,58,59],
[78,73,63,83,0,76,78,78],
[67,74,57,74,54,0,67,65],
[60,62,56,72,52,63,0,62],
[57,58,67,71,52,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,77,71,61,86,66,68],
[55,0,59,65,71,75,62,75],
[53,71,0,71,58,70,63,74],
[59,65,59,0,59,69,62,62],
[69,59,72,71,0,67,62,66],
[44,55,60,61,63,0,65,62],
[64,68,67,68,68,65,0,70],
[62,55,56,68,64,68,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,81,61,73,62,72,76],
[60,0,62,54,68,48,61,55],
[49,68,0,59,70,56,64,75],
[69,76,71,0,74,68,72,61],
[57,62,60,56,0,56,58,65],
[68,82,74,62,74,0,67,59],
[58,69,66,58,72,63,0,61],
[54,75,55,69,65,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,64,60,59,59,57],
[65,0,60,68,68,67,66,66],
[64,70,0,56,67,63,70,73],
[66,62,74,0,65,70,69,65],
[70,62,63,65,0,52,79,74],
[71,63,67,60,78,0,72,87],
[71,64,60,61,51,58,0,58],
[73,64,57,65,56,43,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,68,55,74,66,61,72],
[55,0,66,65,72,72,62,60],
[62,64,0,53,51,59,61,69],
[75,65,77,0,65,74,62,80],
[56,58,79,65,0,59,64,69],
[64,58,71,56,71,0,71,67],
[69,68,69,68,66,59,0,73],
[58,70,61,50,61,63,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,64,65,90,71,65,100],
[47,0,48,44,67,48,58,68],
[66,82,0,38,91,65,82,86],
[65,86,92,0,101,66,73,92],
[40,63,39,29,0,41,48,71],
[59,82,65,64,89,0,82,60],
[65,72,48,57,82,48,0,64],
[30,62,44,38,59,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,61,66,55,58,64,62],
[71,0,56,64,66,64,62,66],
[69,74,0,57,66,67,63,64],
[64,66,73,0,72,69,69,67],
[75,64,64,58,0,66,68,62],
[72,66,63,61,64,0,71,69],
[66,68,67,61,62,59,0,61],
[68,64,66,63,68,61,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,79,64,79,73,72,80],
[55,0,77,65,73,72,75,66],
[51,53,0,55,58,53,61,60],
[66,65,75,0,71,65,74,67],
[51,57,72,59,0,57,69,59],
[57,58,77,65,73,0,68,66],
[58,55,69,56,61,62,0,69],
[50,64,70,63,71,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,72,62,59,53,60],
[63,0,69,61,71,66,59,63],
[59,61,0,51,67,60,63,63],
[58,69,79,0,76,66,65,69],
[68,59,63,54,0,58,65,50],
[71,64,70,64,72,0,67,64],
[77,71,67,65,65,63,0,68],
[70,67,67,61,80,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,71,68,66,66,67],
[62,0,59,66,63,64,62,58],
[65,71,0,77,69,64,65,75],
[59,64,53,0,61,62,62,59],
[62,67,61,69,0,67,73,64],
[64,66,66,68,63,0,60,62],
[64,68,65,68,57,70,0,69],
[63,72,55,71,66,68,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,53,55,37,45,53,55],
[80,0,66,58,61,72,67,73],
[77,64,0,56,60,63,58,84],
[75,72,74,0,51,51,74,66],
[93,69,70,79,0,55,67,100],
[85,58,67,79,75,0,64,86],
[77,63,72,56,63,66,0,82],
[75,57,46,64,30,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,73,68,73,69,61],
[65,0,71,73,74,78,72,75],
[62,59,0,72,60,76,64,65],
[57,57,58,0,65,67,63,74],
[62,56,70,65,0,64,66,69],
[57,52,54,63,66,0,67,69],
[61,58,66,67,64,63,0,63],
[69,55,65,56,61,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,71,66,75,78,70,81],
[68,0,70,65,69,79,71,89],
[59,60,0,64,62,74,71,75],
[64,65,66,0,82,70,71,73],
[55,61,68,48,0,65,63,64],
[52,51,56,60,65,0,62,70],
[60,59,59,59,67,68,0,69],
[49,41,55,57,66,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,64,60,57,61,62,58],
[75,0,71,70,58,66,68,68],
[66,59,0,63,58,64,62,58],
[70,60,67,0,62,60,75,71],
[73,72,72,68,0,68,65,66],
[69,64,66,70,62,0,60,70],
[68,62,68,55,65,70,0,62],
[72,62,72,59,64,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,78,66,71,61,64,77],
[50,0,70,62,49,49,55,65],
[52,60,0,60,56,51,52,56],
[64,68,70,0,62,53,65,62],
[59,81,74,68,0,62,60,74],
[69,81,79,77,68,0,62,73],
[66,75,78,65,70,68,0,76],
[53,65,74,68,56,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,68,61,71,70,65,70],
[81,0,73,72,77,57,69,72],
[62,57,0,63,68,66,64,64],
[69,58,67,0,73,66,72,77],
[59,53,62,57,0,67,60,64],
[60,73,64,64,63,0,66,70],
[65,61,66,58,70,64,0,61],
[60,58,66,53,66,60,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,54,73,73,72,91,73],
[77,0,54,74,55,74,75,93],
[76,76,0,56,73,55,94,73],
[57,56,74,0,55,74,94,56],
[57,75,57,75,0,74,94,95],
[58,56,75,56,56,0,76,56],
[39,55,36,36,36,54,0,55],
[57,37,57,74,35,74,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,66,59,77,61,61,66],
[66,0,69,65,74,67,65,73],
[64,61,0,62,70,63,61,61],
[71,65,68,0,72,63,70,64],
[53,56,60,58,0,55,58,54],
[69,63,67,67,75,0,69,69],
[69,65,69,60,72,61,0,67],
[64,57,69,66,76,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,76,74,64,68,69,63],
[61,0,57,55,67,62,62,64],
[54,73,0,62,55,49,63,58],
[56,75,68,0,71,65,73,59],
[66,63,75,59,0,55,69,60],
[62,68,81,65,75,0,68,66],
[61,68,67,57,61,62,0,50],
[67,66,72,71,70,64,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,65,64,61,63,63,65],
[72,0,62,66,73,69,76,60],
[65,68,0,78,72,68,70,62],
[66,64,52,0,63,52,63,52],
[69,57,58,67,0,68,68,54],
[67,61,62,78,62,0,62,51],
[67,54,60,67,62,68,0,55],
[65,70,68,78,76,79,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,71,61,59,65,71,74],
[55,0,57,60,59,56,59,70],
[59,73,0,61,64,60,72,76],
[69,70,69,0,60,64,67,72],
[71,71,66,70,0,62,71,77],
[65,74,70,66,68,0,68,71],
[59,71,58,63,59,62,0,64],
[56,60,54,58,53,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,86,91,72,73,63,78],
[60,0,63,80,73,60,60,68],
[44,67,0,71,68,61,55,71],
[39,50,59,0,50,41,42,66],
[58,57,62,80,0,64,63,69],
[57,70,69,89,66,0,68,81],
[67,70,75,88,67,62,0,66],
[52,62,59,64,61,49,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,99,54,78,76,83,69,69],
[31,0,53,53,45,52,30,63],
[76,77,0,82,70,92,55,63],
[52,77,48,0,46,90,39,38],
[54,85,60,84,0,100,61,77],
[47,78,38,40,30,0,39,54],
[61,100,75,91,69,91,0,84],
[61,67,67,92,53,76,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,98,33,98,97,65,130,97],
[32,0,65,65,97,65,97,64],
[97,65,0,130,130,98,130,97],
[32,65,0,0,65,0,98,65],
[33,33,0,65,0,65,65,65],
[65,65,32,130,65,0,130,65],
[0,33,0,32,65,0,0,32],
[33,66,33,65,65,65,98,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,19,75,57,55,56],
[75,0,94,38,75,57,94,56],
[75,36,0,38,75,57,94,38],
[111,92,92,0,94,112,94,56],
[55,55,55,36,0,57,92,54],
[73,73,73,18,73,0,92,54],
[75,36,36,36,38,38,0,74],
[74,74,92,74,76,76,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,75,63,81,62,61,60],
[63,0,76,65,90,84,61,82],
[55,54,0,59,80,61,56,61],
[67,65,71,0,71,64,60,63],
[49,40,50,59,0,52,50,54],
[68,46,69,66,78,0,65,73],
[69,69,74,70,80,65,0,68],
[70,48,69,67,76,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,63,55,59,61,63],
[74,0,72,76,63,69,68,64],
[70,58,0,59,66,57,63,56],
[67,54,71,0,59,56,67,65],
[75,67,64,71,0,68,73,77],
[71,61,73,74,62,0,73,63],
[69,62,67,63,57,57,0,62],
[67,66,74,65,53,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,56,80,63,57,72,61],
[68,0,64,66,59,72,69,59],
[74,66,0,77,66,66,66,60],
[50,64,53,0,58,62,68,56],
[67,71,64,72,0,58,68,56],
[73,58,64,68,72,0,73,69],
[58,61,64,62,62,57,0,57],
[69,71,70,74,74,61,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,51,75,49,67,64],
[65,0,61,63,80,42,66,61],
[60,69,0,54,65,44,56,62],
[79,67,76,0,84,66,62,65],
[55,50,65,46,0,36,54,46],
[81,88,86,64,94,0,76,73],
[63,64,74,68,76,54,0,57],
[66,69,68,65,84,57,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,67,70,65,59,54,65],
[65,0,57,74,61,53,61,46],
[63,73,0,69,61,64,53,66],
[60,56,61,0,66,60,61,59],
[65,69,69,64,0,67,60,66],
[71,77,66,70,63,0,64,63],
[76,69,77,69,70,66,0,63],
[65,84,64,71,64,67,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,60,64,42,64,34,59],
[96,0,94,80,78,89,62,96],
[70,36,0,51,45,70,24,71],
[66,50,79,0,62,70,62,74],
[88,52,85,68,0,86,68,77],
[66,41,60,60,44,0,44,73],
[96,68,106,68,62,86,0,83],
[71,34,59,56,53,57,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,66,67,33,34,33,99],
[63,0,63,63,96,63,96,63],
[64,67,0,33,33,33,33,99],
[63,67,97,0,64,63,33,97],
[97,34,97,66,0,66,0,97],
[96,67,97,67,64,0,33,130],
[97,34,97,97,130,97,0,97],
[31,67,31,33,33,0,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,93,66,82,91,64,74],
[54,0,64,36,73,91,54,53],
[37,66,0,48,64,64,54,64],
[64,94,82,0,64,92,54,83],
[48,57,66,66,0,75,65,64],
[39,39,66,38,55,0,56,64],
[66,76,76,76,65,74,0,101],
[56,77,66,47,66,66,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,53,64,59,58,57,53],
[75,0,70,71,71,63,65,64],
[77,60,0,70,73,69,63,67],
[66,59,60,0,64,62,66,59],
[71,59,57,66,0,66,60,66],
[72,67,61,68,64,0,71,67],
[73,65,67,64,70,59,0,68],
[77,66,63,71,64,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,77,64,84,81,74,62],
[56,0,51,62,67,67,74,65],
[53,79,0,66,71,70,79,66],
[66,68,64,0,67,77,77,70],
[46,63,59,63,0,69,64,63],
[49,63,60,53,61,0,76,68],
[56,56,51,53,66,54,0,54],
[68,65,64,60,67,62,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,130,65,107,130,109,130,109],
[0,0,21,64,42,65,65,64],
[65,109,0,87,86,88,108,87],
[23,66,43,0,87,88,87,87],
[0,88,44,43,0,44,45,22],
[21,65,42,42,86,0,86,108],
[0,65,22,43,85,44,0,43],
[21,66,43,43,108,22,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,58,83,56,51,52,67],
[72,0,54,75,72,65,58,60],
[72,76,0,79,65,67,67,64],
[47,55,51,0,66,63,35,56],
[74,58,65,64,0,56,57,56],
[79,65,63,67,74,0,56,66],
[78,72,63,95,73,74,0,70],
[63,70,66,74,74,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,79,65,79,66,70,74],
[57,0,62,59,65,59,62,55],
[51,68,0,70,65,59,67,63],
[65,71,60,0,80,69,57,75],
[51,65,65,50,0,53,62,63],
[64,71,71,61,77,0,64,67],
[60,68,63,73,68,66,0,71],
[56,75,67,55,67,63,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,69,53,73,92,68,55],
[88,0,64,68,77,73,74,62],
[61,66,0,75,88,75,72,68],
[77,62,55,0,62,73,65,58],
[57,53,42,68,0,62,69,58],
[38,57,55,57,68,0,68,52],
[62,56,58,65,61,62,0,60],
[75,68,62,72,72,78,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,63,49,36,49,35],
[87,0,65,88,89,54,53,78],
[82,65,0,76,91,69,75,68],
[67,42,54,0,81,49,38,46],
[81,41,39,49,0,36,47,61],
[94,76,61,81,94,0,60,65],
[81,77,55,92,83,70,0,84],
[95,52,62,84,69,65,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,56,60,78,53,67],
[63,0,72,63,72,76,56,65],
[68,58,0,59,67,66,65,62],
[74,67,71,0,65,78,66,68],
[70,58,63,65,0,64,61,71],
[52,54,64,52,66,0,59,60],
[77,74,65,64,69,71,0,74],
[63,65,68,62,59,70,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,65,81,81,69,62],
[60,0,92,58,68,73,93,79],
[61,38,0,41,53,49,55,65],
[65,72,89,0,79,84,81,90],
[49,62,77,51,0,64,71,71],
[49,57,81,46,66,0,81,70],
[61,37,75,49,59,49,0,68],
[68,51,65,40,59,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,71,41,71,41,50,50],
[50,0,59,30,69,80,60,58],
[59,71,0,61,82,59,50,59],
[89,100,69,0,91,59,78,80],
[59,61,48,39,0,70,39,68],
[89,50,71,71,60,0,69,68],
[80,70,80,52,91,61,0,70],
[80,72,71,50,62,62,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,59,58,71,60,59],
[66,0,48,46,41,63,64,52],
[65,82,0,71,69,77,70,73],
[71,84,59,0,72,65,71,64],
[72,89,61,58,0,90,78,63],
[59,67,53,65,40,0,48,53],
[70,66,60,59,52,82,0,53],
[71,78,57,66,67,77,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,65,56,65,55,62,62],
[71,0,63,55,72,66,67,75],
[65,67,0,61,65,50,57,59],
[74,75,69,0,80,64,69,73],
[65,58,65,50,0,55,53,60],
[75,64,80,66,75,0,67,68],
[68,63,73,61,77,63,0,67],
[68,55,71,57,70,62,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,65,65,130,130,0],
[65,0,0,65,65,65,130,0],
[65,130,0,65,65,65,130,0],
[65,65,65,0,0,65,130,0],
[65,65,65,130,0,130,130,65],
[0,65,65,65,0,0,130,0],
[0,0,0,0,0,0,0,0],
[130,130,130,130,65,130,130,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,84,53,61,61,58,54],
[71,0,76,66,71,68,65,66],
[46,54,0,66,54,51,48,58],
[77,64,64,0,45,68,57,56],
[69,59,76,85,0,65,66,72],
[69,62,79,62,65,0,66,55],
[72,65,82,73,64,64,0,64],
[76,64,72,74,58,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,79,82,76,66,83],
[68,0,87,75,82,65,81,72],
[56,43,0,75,57,67,55,66],
[51,55,55,0,66,66,66,56],
[48,48,73,64,0,66,63,74],
[54,65,63,64,64,0,71,74],
[64,49,75,64,67,59,0,61],
[47,58,64,74,56,56,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,54,57,53,47,53,46],
[74,0,63,63,61,64,70,68],
[76,67,0,62,55,49,55,68],
[73,67,68,0,61,62,62,71],
[77,69,75,69,0,61,68,75],
[83,66,81,68,69,0,64,75],
[77,60,75,68,62,66,0,76],
[84,62,62,59,55,55,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,84,74,82,70,59,73,68],
[46,0,67,73,73,58,57,46],
[56,63,0,64,60,54,70,52],
[48,57,66,0,75,59,72,50],
[60,57,70,55,0,62,65,61],
[71,72,76,71,68,0,78,61],
[57,73,60,58,65,52,0,55],
[62,84,78,80,69,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,78,64,68,65,63,68],
[58,0,61,61,65,67,56,51],
[52,69,0,55,51,54,52,60],
[66,69,75,0,71,64,71,70],
[62,65,79,59,0,64,62,64],
[65,63,76,66,66,0,70,69],
[67,74,78,59,68,60,0,62],
[62,79,70,60,66,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,75,58,53,60,73,66],
[62,0,80,64,61,62,69,65],
[55,50,0,53,54,61,63,69],
[72,66,77,0,60,64,65,68],
[77,69,76,70,0,64,74,77],
[70,68,69,66,66,0,65,72],
[57,61,67,65,56,65,0,62],
[64,65,61,62,53,58,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,71,68,62,61,62],
[64,0,62,68,72,68,73,67],
[64,68,0,66,72,64,64,60],
[59,62,64,0,74,64,61,61],
[62,58,58,56,0,64,58,67],
[68,62,66,66,66,0,67,63],
[69,57,66,69,72,63,0,64],
[68,63,70,69,63,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,68,70,66,58,58],
[62,0,64,60,62,64,50,53],
[66,66,0,67,65,65,64,68],
[62,70,63,0,60,64,54,55],
[60,68,65,70,0,73,66,61],
[64,66,65,66,57,0,59,63],
[72,80,66,76,64,71,0,69],
[72,77,62,75,69,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,52,71,68,61,72],
[69,0,60,59,77,55,63,61],
[63,70,0,54,76,58,54,63],
[78,71,76,0,88,64,75,75],
[59,53,54,42,0,55,54,53],
[62,75,72,66,75,0,78,57],
[69,67,76,55,76,52,0,54],
[58,69,67,55,77,73,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,58,66,68,59,67,67],
[67,0,66,68,75,65,69,73],
[72,64,0,69,76,66,71,74],
[64,62,61,0,64,63,66,69],
[62,55,54,66,0,56,59,64],
[71,65,64,67,74,0,62,71],
[63,61,59,64,71,68,0,72],
[63,57,56,61,66,59,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,65,64,60,57,63,65],
[79,0,82,73,75,62,74,82],
[65,48,0,72,53,63,58,67],
[66,57,58,0,60,70,66,72],
[70,55,77,70,0,70,57,71],
[73,68,67,60,60,0,76,74],
[67,56,72,64,73,54,0,74],
[65,48,63,58,59,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,57,64,65,62,60,64],
[71,0,64,76,66,63,69,67],
[73,66,0,68,66,71,65,65],
[66,54,62,0,63,61,67,66],
[65,64,64,67,0,66,72,67],
[68,67,59,69,64,0,67,64],
[70,61,65,63,58,63,0,61],
[66,63,65,64,63,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,63,82,74,79,98,79],
[45,0,43,51,28,37,51,35],
[67,87,0,89,61,60,92,76],
[48,79,41,0,49,50,77,56],
[56,102,69,81,0,72,80,69],
[51,93,70,80,58,0,71,66],
[32,79,38,53,50,59,0,59],
[51,95,54,74,61,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,61,73,66,62,67,55],
[80,0,73,83,77,74,74,62],
[69,57,0,77,70,64,77,60],
[57,47,53,0,48,56,57,47],
[64,53,60,82,0,62,73,68],
[68,56,66,74,68,0,70,58],
[63,56,53,73,57,60,0,66],
[75,68,70,83,62,72,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,67,64,84,67,72],
[59,0,71,61,68,74,71,74],
[59,59,0,54,56,63,68,72],
[63,69,76,0,65,82,74,74],
[66,62,74,65,0,85,74,89],
[46,56,67,48,45,0,65,65],
[63,59,62,56,56,65,0,59],
[58,56,58,56,41,65,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,86,65,78,71,79,60],
[60,0,59,74,71,55,60,57],
[44,71,0,57,61,62,55,54],
[65,56,73,0,72,53,67,57],
[52,59,69,58,0,54,65,78],
[59,75,68,77,76,0,77,60],
[51,70,75,63,65,53,0,65],
[70,73,76,73,52,70,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,61,52,60,72,59,72],
[75,0,64,42,60,68,74,47],
[69,66,0,65,67,81,56,81],
[78,88,65,0,83,92,94,73],
[70,70,63,47,0,83,93,61],
[58,62,49,38,47,0,48,47],
[71,56,74,36,37,82,0,60],
[58,83,49,57,69,83,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,70,68,63,69,68,58],
[61,0,54,63,53,63,54,73],
[60,76,0,61,67,78,64,59],
[62,67,69,0,67,63,61,65],
[67,77,63,63,0,55,63,63],
[61,67,52,67,75,0,64,63],
[62,76,66,69,67,66,0,72],
[72,57,71,65,67,67,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,76,70,65,67,72,77],
[52,0,65,51,60,47,54,59],
[54,65,0,62,53,50,62,62],
[60,79,68,0,62,55,71,68],
[65,70,77,68,0,60,72,69],
[63,83,80,75,70,0,79,72],
[58,76,68,59,58,51,0,69],
[53,71,68,62,61,58,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,71,75,63,71,67,71],
[63,0,62,70,60,59,61,68],
[59,68,0,70,64,68,61,67],
[55,60,60,0,62,60,69,68],
[67,70,66,68,0,68,71,64],
[59,71,62,70,62,0,65,56],
[63,69,69,61,59,65,0,64],
[59,62,63,62,66,74,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,62,66,63,61,52],
[63,0,64,63,69,60,55,51],
[71,66,0,64,71,70,63,65],
[68,67,66,0,71,72,57,62],
[64,61,59,59,0,67,68,58],
[67,70,60,58,63,0,57,54],
[69,75,67,73,62,73,0,59],
[78,79,65,68,72,76,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,85,65,64,62,63,43,64],
[45,0,0,20,65,21,21,20],
[65,130,0,88,86,66,65,65],
[66,110,42,0,66,66,42,41],
[68,65,44,64,0,65,44,85],
[67,109,64,64,65,0,43,43],
[87,109,65,88,86,87,0,85],
[66,110,65,89,45,87,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,75,66,62,61,82,73],
[60,0,68,55,58,56,64,62],
[55,62,0,47,59,50,65,54],
[64,75,83,0,67,70,70,77],
[68,72,71,63,0,59,68,60],
[69,74,80,60,71,0,67,69],
[48,66,65,60,62,63,0,62],
[57,68,76,53,70,61,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,0,65,0,0,0,0],
[130,0,65,65,65,0,0,0],
[130,65,0,65,130,65,65,65],
[65,65,65,0,65,0,0,0],
[130,65,0,65,0,65,0,0],
[130,130,65,130,65,0,65,65],
[130,130,65,130,130,65,0,130],
[130,130,65,130,130,65,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,66,65,76,81,73,66],
[60,0,71,70,73,80,78,70],
[64,59,0,78,80,80,80,64],
[65,60,52,0,77,80,70,68],
[54,57,50,53,0,55,68,50],
[49,50,50,50,75,0,50,59],
[57,52,50,60,62,80,0,53],
[64,60,66,62,80,71,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,80,73,72,81,56,58],
[64,0,69,54,70,79,82,76],
[50,61,0,60,58,68,59,59],
[57,76,70,0,62,51,58,71],
[58,60,72,68,0,90,65,45],
[49,51,62,79,40,0,61,56],
[74,48,71,72,65,69,0,65],
[72,54,71,59,85,74,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,62,70,56,63,58,59],
[71,0,55,64,57,63,62,62],
[68,75,0,65,58,64,67,60],
[60,66,65,0,60,70,58,62],
[74,73,72,70,0,69,68,62],
[67,67,66,60,61,0,65,64],
[72,68,63,72,62,65,0,72],
[71,68,70,68,68,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,76,93,39,36,36],
[72,0,54,93,74,94,54,54],
[75,76,0,58,94,76,73,56],
[54,37,72,0,72,37,54,35],
[37,56,36,58,0,76,54,38],
[91,36,54,93,54,0,55,36],
[94,76,57,76,76,75,0,76],
[94,76,74,95,92,94,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,40,69,60,49,69,61],
[80,0,52,56,82,43,55,70],
[90,78,0,78,89,57,71,67],
[61,74,52,0,75,54,62,63],
[70,48,41,55,0,56,63,51],
[81,87,73,76,74,0,76,61],
[61,75,59,68,67,54,0,77],
[69,60,63,67,79,69,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,72,68,66,73,59,77],
[71,0,78,76,56,66,69,84],
[58,52,0,72,65,65,58,88],
[62,54,58,0,71,48,54,71],
[64,74,65,59,0,61,63,65],
[57,64,65,82,69,0,80,84],
[71,61,72,76,67,50,0,74],
[53,46,42,59,65,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,68,67,66,67,66],
[63,0,65,71,61,66,63,64],
[68,65,0,68,72,60,65,61],
[62,59,62,0,61,63,60,62],
[63,69,58,69,0,67,65,63],
[64,64,70,67,63,0,57,64],
[63,67,65,70,65,73,0,59],
[64,66,69,68,67,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,58,73,63,49,60,72],
[70,0,65,67,65,57,58,56],
[72,65,0,79,75,66,68,60],
[57,63,51,0,69,63,52,52],
[67,65,55,61,0,58,65,59],
[81,73,64,67,72,0,71,67],
[70,72,62,78,65,59,0,63],
[58,74,70,78,71,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,54,60,50,66,81,66],
[55,0,44,52,61,61,69,43],
[76,86,0,70,69,65,90,78],
[70,78,60,0,56,59,83,61],
[80,69,61,74,0,71,82,74],
[64,69,65,71,59,0,75,54],
[49,61,40,47,48,55,0,54],
[64,87,52,69,56,76,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,109,86,66,84,44,86,107],
[21,0,43,44,62,21,43,41],
[44,87,0,44,65,21,43,21],
[64,86,86,0,107,41,63,63],
[46,68,65,23,0,44,45,86],
[86,109,109,89,86,0,65,63],
[44,87,87,67,85,65,0,64],
[23,89,109,67,44,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,69,66,67,70,63],
[59,0,62,60,63,63,68,67],
[61,68,0,60,64,52,68,65],
[61,70,70,0,66,67,68,75],
[64,67,66,64,0,57,61,60],
[63,67,78,63,73,0,70,68],
[60,62,62,62,69,60,0,76],
[67,63,65,55,70,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,65,66,71,56,57],
[73,0,56,68,56,68,38,54],
[75,74,0,86,72,76,56,74],
[65,62,44,0,44,52,56,49],
[64,74,58,86,0,81,75,65],
[59,62,54,78,49,0,56,63],
[74,92,74,74,55,74,0,61],
[73,76,56,81,65,67,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,55,60,55,75,63,57],
[70,0,69,62,66,79,71,58],
[75,61,0,68,56,68,65,62],
[70,68,62,0,74,74,73,71],
[75,64,74,56,0,90,74,66],
[55,51,62,56,40,0,70,54],
[67,59,65,57,56,60,0,57],
[73,72,68,59,64,76,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,81,66,69,74,68,68,60],
[49,0,49,61,71,62,51,54],
[64,81,0,63,72,68,73,59],
[61,69,67,0,76,62,62,67],
[56,59,58,54,0,52,57,52],
[62,68,62,68,78,0,60,55],
[62,79,57,68,73,70,0,59],
[70,76,71,63,78,75,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,66,66,72,75,59],
[74,0,60,67,80,56,75,61],
[74,70,0,74,80,66,69,60],
[64,63,56,0,62,52,60,52],
[64,50,50,68,0,51,58,41],
[58,74,64,78,79,0,73,66],
[55,55,61,70,72,57,0,49],
[71,69,70,78,89,64,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,74,86,69,72,87,66],
[71,0,65,68,64,57,82,77],
[56,65,0,68,53,61,79,80],
[44,62,62,0,59,56,74,61],
[61,66,77,71,0,71,87,67],
[58,73,69,74,59,0,72,67],
[43,48,51,56,43,58,0,65],
[64,53,50,69,63,63,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,73,74,69,62,79,74],
[53,0,58,58,55,53,68,67],
[57,72,0,69,62,65,80,79],
[56,72,61,0,58,60,70,71],
[61,75,68,72,0,70,86,70],
[68,77,65,70,60,0,78,70],
[51,62,50,60,44,52,0,62],
[56,63,51,59,60,60,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,59,50,48,55,54],
[64,0,76,62,66,52,48,56],
[62,54,0,57,51,45,36,63],
[71,68,73,0,57,66,51,53],
[80,64,79,73,0,60,57,58],
[82,78,85,64,70,0,68,63],
[75,82,94,79,73,62,0,75],
[76,74,67,77,72,67,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,67,65,68,67,62],
[65,0,65,69,64,59,61,64],
[73,65,0,71,73,63,67,69],
[63,61,59,0,76,47,63,55],
[65,66,57,54,0,55,53,61],
[62,71,67,83,75,0,68,69],
[63,69,63,67,77,62,0,66],
[68,66,61,75,69,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,64,60,66,59,70,53],
[77,0,68,65,72,75,69,66],
[66,62,0,62,64,58,60,58],
[70,65,68,0,71,63,65,61],
[64,58,66,59,0,62,65,63],
[71,55,72,67,68,0,69,64],
[60,61,70,65,65,61,0,66],
[77,64,72,69,67,66,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,69,67,58,55,55,59],
[76,0,62,59,69,63,69,67],
[61,68,0,59,50,67,60,60],
[63,71,71,0,60,72,59,66],
[72,61,80,70,0,70,70,74],
[75,67,63,58,60,0,65,67],
[75,61,70,71,60,65,0,68],
[71,63,70,64,56,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,88,65,76,69,67,80,83],
[42,0,55,63,66,60,54,54],
[65,75,0,78,64,69,73,74],
[54,67,52,0,56,56,71,67],
[61,64,66,74,0,54,82,65],
[63,70,61,74,76,0,67,68],
[50,76,57,59,48,63,0,63],
[47,76,56,63,65,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,78,64,73,72,68],
[65,0,74,63,65,67,76,47],
[58,56,0,77,59,72,65,59],
[52,67,53,0,55,66,55,43],
[66,65,71,75,0,67,78,53],
[57,63,58,64,63,0,73,50],
[58,54,65,75,52,57,0,54],
[62,83,71,87,77,80,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,66,63,66,61,68,70],
[62,0,47,60,65,65,67,56],
[64,83,0,67,61,75,66,72],
[67,70,63,0,72,62,65,66],
[64,65,69,58,0,59,63,64],
[69,65,55,68,71,0,64,67],
[62,63,64,65,67,66,0,59],
[60,74,58,64,66,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,66,68,71,70,68,74],
[74,0,69,72,64,67,75,87],
[64,61,0,73,69,71,70,77],
[62,58,57,0,64,56,67,77],
[59,66,61,66,0,78,71,84],
[60,63,59,74,52,0,78,80],
[62,55,60,63,59,52,0,75],
[56,43,53,53,46,50,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,64,54,55,56,58],
[71,0,63,62,58,59,57,60],
[74,67,0,62,64,66,57,58],
[66,68,68,0,67,60,57,63],
[76,72,66,63,0,68,58,57],
[75,71,64,70,62,0,68,69],
[74,73,73,73,72,62,0,69],
[72,70,72,67,73,61,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,59,66,63,58,66,59],
[64,0,47,56,59,62,64,71],
[71,83,0,68,72,80,64,73],
[64,74,62,0,67,62,67,66],
[67,71,58,63,0,63,63,60],
[72,68,50,68,67,0,68,73],
[64,66,66,63,67,62,0,83],
[71,59,57,64,70,57,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,65,62,60,63,55],
[65,0,68,67,62,58,50,61],
[60,62,0,66,57,55,56,60],
[65,63,64,0,58,48,53,53],
[68,68,73,72,0,65,58,66],
[70,72,75,82,65,0,67,68],
[67,80,74,77,72,63,0,65],
[75,69,70,77,64,62,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,64,64,64,66,71],
[74,0,63,63,62,63,58,72],
[67,67,0,73,64,69,67,70],
[66,67,57,0,67,61,63,70],
[66,68,66,63,0,66,63,70],
[66,67,61,69,64,0,60,73],
[64,72,63,67,67,70,0,76],
[59,58,60,60,60,57,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,57,55,58,69,63,71],
[53,0,51,46,55,66,58,61],
[73,79,0,61,71,79,77,73],
[75,84,69,0,71,68,63,69],
[72,75,59,59,0,72,63,75],
[61,64,51,62,58,0,68,67],
[67,72,53,67,67,62,0,60],
[59,69,57,61,55,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,71,62,60,75,67,71],
[65,0,70,78,72,70,71,75],
[59,60,0,64,62,74,64,72],
[68,52,66,0,60,59,64,70],
[70,58,68,70,0,69,63,68],
[55,60,56,71,61,0,56,71],
[63,59,66,66,67,74,0,78],
[59,55,58,60,62,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,56,55,69,66,56,56],
[64,0,58,62,68,72,64,58],
[74,72,0,68,64,72,66,60],
[75,68,62,0,74,62,64,64],
[61,62,66,56,0,61,62,63],
[64,58,58,68,69,0,61,58],
[74,66,64,66,68,69,0,65],
[74,72,70,66,67,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,72,62,68,68,73,64],
[61,0,76,65,64,74,59,74],
[58,54,0,50,54,60,49,62],
[68,65,80,0,70,73,71,76],
[62,66,76,60,0,71,63,74],
[62,56,70,57,59,0,59,66],
[57,71,81,59,67,71,0,76],
[66,56,68,54,56,64,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,66,75,72,78,61,64],
[64,0,60,66,47,57,76,70],
[64,70,0,87,75,82,69,84],
[55,64,43,0,45,62,51,54],
[58,83,55,85,0,75,63,74],
[52,73,48,68,55,0,67,63],
[69,54,61,79,67,63,0,73],
[66,60,46,76,56,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,63,59,56,57,68,66],
[69,0,68,60,57,61,66,64],
[67,62,0,67,63,58,67,69],
[71,70,63,0,65,55,68,70],
[74,73,67,65,0,67,77,73],
[73,69,72,75,63,0,83,78],
[62,64,63,62,53,47,0,59],
[64,66,61,60,57,52,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,57,30,28,44,73,43],
[103,0,59,58,72,74,88,60],
[73,71,0,59,28,86,87,87],
[100,72,71,0,28,86,87,73],
[102,58,102,102,0,102,89,75],
[86,56,44,44,28,0,88,72],
[57,42,43,43,41,42,0,57],
[87,70,43,57,55,58,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,67,58,67,63,65,61],
[69,0,71,62,60,63,66,66],
[63,59,0,57,64,56,65,55],
[72,68,73,0,64,71,71,67],
[63,70,66,66,0,68,65,61],
[67,67,74,59,62,0,72,57],
[65,64,65,59,65,58,0,58],
[69,64,75,63,69,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,47,71,71,59,57],
[72,0,68,67,75,61,70,68],
[69,62,0,54,63,61,67,60],
[83,63,76,0,70,78,86,61],
[59,55,67,60,0,72,62,59],
[59,69,69,52,58,0,69,53],
[71,60,63,44,68,61,0,64],
[73,62,70,69,71,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,65,59,75,56,61,57],
[68,0,62,56,70,58,57,49],
[65,68,0,59,66,60,55,56],
[71,74,71,0,72,64,67,58],
[55,60,64,58,0,69,50,59],
[74,72,70,66,61,0,67,76],
[69,73,75,63,80,63,0,58],
[73,81,74,72,71,54,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,60,68,66,72,71,59],
[58,0,67,62,57,67,63,57],
[70,63,0,58,59,68,66,65],
[62,68,72,0,62,73,68,63],
[64,73,71,68,0,69,65,69],
[58,63,62,57,61,0,60,60],
[59,67,64,62,65,70,0,59],
[71,73,65,67,61,70,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,62,72,66,72,61,60],
[56,0,57,56,58,65,27,38],
[68,73,0,84,70,65,66,66],
[58,74,46,0,58,53,48,69],
[64,72,60,72,0,60,43,62],
[58,65,65,77,70,0,54,63],
[69,103,64,82,87,76,0,80],
[70,92,64,61,68,67,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,46,62,68,63,67,66],
[55,0,52,55,54,60,59,70],
[84,78,0,65,81,69,75,83],
[68,75,65,0,68,69,78,84],
[62,76,49,62,0,61,61,69],
[67,70,61,61,69,0,60,72],
[63,71,55,52,69,70,0,77],
[64,60,47,46,61,58,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,97,32,32,64,65,97],
[130,0,130,65,65,130,98,130],
[33,0,0,0,32,64,65,97],
[98,65,130,0,32,130,98,130],
[98,65,98,98,0,130,130,130],
[66,0,66,0,0,0,33,33],
[65,32,65,32,0,97,0,64],
[33,0,33,0,0,97,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,59,73,70,76,64,62],
[63,0,57,73,59,78,67,70],
[71,73,0,70,65,75,65,67],
[57,57,60,0,59,67,57,63],
[60,71,65,71,0,66,57,66],
[54,52,55,63,64,0,54,64],
[66,63,65,73,73,76,0,70],
[68,60,63,67,64,66,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,74,85,65,76,63,58],
[50,0,64,76,53,71,56,63],
[56,66,0,77,26,77,56,55],
[45,54,53,0,43,55,48,56],
[65,77,104,87,0,89,75,71],
[54,59,53,75,41,0,38,61],
[67,74,74,82,55,92,0,80],
[72,67,75,74,59,69,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,34,89,68,87,53,53],
[63,0,70,86,80,100,71,57],
[96,60,0,90,68,109,89,89],
[41,44,40,0,66,84,51,49],
[62,50,62,64,0,85,69,47],
[43,30,21,46,45,0,55,30],
[77,59,41,79,61,75,0,50],
[77,73,41,81,83,100,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,57,56,52,55,54,50],
[64,0,71,72,52,71,71,61],
[73,59,0,67,70,67,66,69],
[74,58,63,0,62,57,63,60],
[78,78,60,68,0,67,61,68],
[75,59,63,73,63,0,59,66],
[76,59,64,67,69,71,0,69],
[80,69,61,70,62,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,60,59,63,77,72],
[60,0,70,62,76,60,71,70],
[53,60,0,54,68,54,69,67],
[70,68,76,0,63,63,79,85],
[71,54,62,67,0,63,69,72],
[67,70,76,67,67,0,74,62],
[53,59,61,51,61,56,0,63],
[58,60,63,45,58,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,57,73,59,62,63],
[68,0,50,58,79,44,69,67],
[76,80,0,66,92,61,72,79],
[73,72,64,0,75,68,75,72],
[57,51,38,55,0,47,62,55],
[71,86,69,62,83,0,73,66],
[68,61,58,55,68,57,0,65],
[67,63,51,58,75,64,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,66,79,74,74,72,58],
[67,0,54,75,68,63,65,56],
[64,76,0,89,68,82,75,73],
[51,55,41,0,45,52,59,40],
[56,62,62,85,0,62,74,60],
[56,67,48,78,68,0,70,55],
[58,65,55,71,56,60,0,56],
[72,74,57,90,70,75,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,76,65,60,65,54,86],
[64,0,57,55,56,64,63,81],
[54,73,0,61,52,66,43,81],
[65,75,69,0,60,49,46,86],
[70,74,78,70,0,65,81,79],
[65,66,64,81,65,0,50,92],
[76,67,87,84,49,80,0,72],
[44,49,49,44,51,38,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,62,65,58,58,72,51],
[78,0,63,75,46,58,59,61],
[68,67,0,86,70,66,59,69],
[65,55,44,0,52,59,52,56],
[72,84,60,78,0,68,75,67],
[72,72,64,71,62,0,69,57],
[58,71,71,78,55,61,0,67],
[79,69,61,74,63,73,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,57,56,65,63,71,67],
[80,0,62,65,54,79,69,62],
[73,68,0,55,67,81,75,69],
[74,65,75,0,66,73,67,78],
[65,76,63,64,0,73,69,65],
[67,51,49,57,57,0,71,62],
[59,61,55,63,61,59,0,67],
[63,68,61,52,65,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,62,60,46,71,54,55],
[65,0,74,68,69,61,66,58],
[68,56,0,54,67,76,62,39],
[70,62,76,0,71,77,73,66],
[84,61,63,59,0,62,71,53],
[59,69,54,53,68,0,58,61],
[76,64,68,57,59,72,0,69],
[75,72,91,64,77,69,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,66,60,76,68,75,73],
[73,0,75,65,68,66,74,73],
[64,55,0,54,67,62,56,65],
[70,65,76,0,68,63,67,64],
[54,62,63,62,0,58,67,64],
[62,64,68,67,72,0,68,67],
[55,56,74,63,63,62,0,60],
[57,57,65,66,66,63,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,48,31,65,49,47,66],
[81,0,49,64,66,49,48,64],
[82,81,0,62,97,65,66,65],
[99,66,68,0,67,82,66,51],
[65,64,33,63,0,64,49,65],
[81,81,65,48,66,0,64,66],
[83,82,64,64,81,66,0,81],
[64,66,65,79,65,64,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,88,66,87,87,109,87],
[65,0,68,43,66,110,110,85],
[42,62,0,84,84,88,88,84],
[64,87,46,0,65,88,88,63],
[43,64,46,65,0,88,88,64],
[43,20,42,42,42,0,66,42],
[21,20,42,42,42,64,0,42],
[43,45,46,67,66,88,88,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,61,65,67,70,71,72],
[52,0,62,55,56,56,59,60],
[69,68,0,69,63,74,67,71],
[65,75,61,0,71,71,56,69],
[63,74,67,59,0,71,62,72],
[60,74,56,59,59,0,56,67],
[59,71,63,74,68,74,0,68],
[58,70,59,61,58,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,74,60,71,71,68,69],
[60,0,69,67,63,63,65,60],
[56,61,0,55,70,69,65,55],
[70,63,75,0,63,71,70,62],
[59,67,60,67,0,68,70,59],
[59,67,61,59,62,0,58,57],
[62,65,65,60,60,72,0,58],
[61,70,75,68,71,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,70,72,75,70,61,63],
[59,0,81,70,72,73,58,81],
[60,49,0,55,60,57,53,76],
[58,60,75,0,75,48,51,67],
[55,58,70,55,0,65,68,82],
[60,57,73,82,65,0,72,71],
[69,72,77,79,62,58,0,78],
[67,49,54,63,48,59,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,46,63,66,54,62,52],
[68,0,76,70,78,66,47,67],
[84,54,0,64,76,62,55,74],
[67,60,66,0,83,60,65,65],
[64,52,54,47,0,55,49,37],
[76,64,68,70,75,0,44,82],
[68,83,75,65,81,86,0,63],
[78,63,56,65,93,48,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,65,65,55,55,69,63],
[57,0,55,63,49,42,55,59],
[65,75,0,52,58,52,60,60],
[65,67,78,0,58,53,66,67],
[75,81,72,72,0,63,78,77],
[75,88,78,77,67,0,65,76],
[61,75,70,64,52,65,0,64],
[67,71,70,63,53,54,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,64,60,70,61,59,65],
[60,0,58,55,58,62,61,66],
[66,72,0,56,64,66,65,70],
[70,75,74,0,65,71,61,70],
[60,72,66,65,0,67,61,62],
[69,68,64,59,63,0,52,68],
[71,69,65,69,69,78,0,72],
[65,64,60,60,68,62,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,56,73,75,37,74,93],
[75,0,76,57,75,59,94,92],
[74,54,0,54,54,76,72,91],
[57,73,76,0,37,57,56,74],
[55,55,76,93,0,57,94,55],
[93,71,54,73,73,0,72,110],
[56,36,58,74,36,58,0,38],
[37,38,39,56,75,20,92,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,70,72,69,78,63,64],
[56,0,65,69,57,70,65,56],
[60,65,0,72,70,68,68,66],
[58,61,58,0,61,66,56,51],
[61,73,60,69,0,74,60,53],
[52,60,62,64,56,0,67,57],
[67,65,62,74,70,63,0,65],
[66,74,64,79,77,73,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,70,59,61,63,58],
[72,0,63,73,65,62,62,67],
[61,67,0,69,65,63,62,59],
[60,57,61,0,56,61,61,56],
[71,65,65,74,0,64,67,68],
[69,68,67,69,66,0,64,67],
[67,68,68,69,63,66,0,62],
[72,63,71,74,62,63,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,64,64,57,58,70,60],
[62,0,59,60,65,62,65,67],
[66,71,0,70,65,72,75,68],
[66,70,60,0,70,59,74,69],
[73,65,65,60,0,63,78,73],
[72,68,58,71,67,0,68,65],
[60,65,55,56,52,62,0,48],
[70,63,62,61,57,65,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,53,75,77,55,55,66],
[85,0,73,87,86,75,96,64],
[77,57,0,67,57,47,57,35],
[55,43,63,0,65,42,65,63],
[53,44,73,65,0,20,44,43],
[75,55,83,88,110,0,66,68],
[75,34,73,65,86,64,0,76],
[64,66,95,67,87,62,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,71,81,75,67,73],
[50,0,58,61,62,65,49,51],
[66,72,0,67,57,66,64,61],
[59,69,63,0,74,69,68,59],
[49,68,73,56,0,79,72,67],
[55,65,64,61,51,0,54,60],
[63,81,66,62,58,76,0,69],
[57,79,69,71,63,70,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,55,64,65,54,63,53],
[62,0,61,61,64,65,61,60],
[75,69,0,74,67,66,65,67],
[66,69,56,0,69,58,65,62],
[65,66,63,61,0,58,62,59],
[76,65,64,72,72,0,66,69],
[67,69,65,65,68,64,0,64],
[77,70,63,68,71,61,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,85,62,52,45,59],
[76,0,56,80,72,47,66,62],
[76,74,0,83,66,65,58,69],
[45,50,47,0,40,35,47,47],
[68,58,64,90,0,51,65,57],
[78,83,65,95,79,0,82,86],
[85,64,72,83,65,48,0,69],
[71,68,61,83,73,44,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,70,70,65,60,71,78],
[53,0,52,60,50,52,63,65],
[60,78,0,73,61,50,76,76],
[60,70,57,0,56,64,67,74],
[65,80,69,74,0,84,69,88],
[70,78,80,66,46,0,77,87],
[59,67,54,63,61,53,0,68],
[52,65,54,56,42,43,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,61,75,69,63,70],
[66,0,56,60,65,67,69,63],
[66,74,0,61,60,73,62,69],
[69,70,69,0,73,78,71,63],
[55,65,70,57,0,74,72,63],
[61,63,57,52,56,0,65,58],
[67,61,68,59,58,65,0,59],
[60,67,61,67,67,72,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,71,61,69,66,61,67],
[67,0,70,54,57,61,58,51],
[59,60,0,67,61,75,62,63],
[69,76,63,0,68,69,64,66],
[61,73,69,62,0,68,59,58],
[64,69,55,61,62,0,65,65],
[69,72,68,66,71,65,0,71],
[63,79,67,64,72,65,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,72,66,60,66,68,66],
[66,0,66,64,69,58,70,80],
[58,64,0,65,66,53,46,59],
[64,66,65,0,69,62,56,64],
[70,61,64,61,0,57,58,51],
[64,72,77,68,73,0,69,72],
[62,60,84,74,72,61,0,66],
[64,50,71,66,79,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,51,66,70,74,66,65],
[53,0,45,53,66,77,61,65],
[79,85,0,65,78,77,57,72],
[64,77,65,0,70,79,62,72],
[60,64,52,60,0,68,62,65],
[56,53,53,51,62,0,52,60],
[64,69,73,68,68,78,0,72],
[65,65,58,58,65,70,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,60,70,67,66,63,60],
[79,0,59,73,80,66,59,72],
[70,71,0,81,74,72,67,65],
[60,57,49,0,54,66,63,57],
[63,50,56,76,0,62,64,71],
[64,64,58,64,68,0,56,56],
[67,71,63,67,66,74,0,66],
[70,58,65,73,59,74,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,68,57,50,58,60],
[62,0,66,57,63,61,62,53],
[62,64,0,62,52,57,64,52],
[62,73,68,0,57,62,65,62],
[73,67,78,73,0,59,75,67],
[80,69,73,68,71,0,59,64],
[72,68,66,65,55,71,0,67],
[70,77,78,68,63,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,55,63,60,73,56,53],
[72,0,73,74,71,70,61,53],
[75,57,0,68,78,69,50,66],
[67,56,62,0,57,70,60,51],
[70,59,52,73,0,68,56,64],
[57,60,61,60,62,0,49,61],
[74,69,80,70,74,81,0,64],
[77,77,64,79,66,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,70,70,58,67,59,63],
[68,0,68,67,63,57,59,65],
[60,62,0,70,63,66,59,61],
[60,63,60,0,59,64,60,60],
[72,67,67,71,0,69,61,63],
[63,73,64,66,61,0,60,57],
[71,71,71,70,69,70,0,57],
[67,65,69,70,67,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,57,60,76,75,59],
[66,0,62,63,61,70,72,59],
[61,68,0,67,67,74,66,67],
[73,67,63,0,65,73,64,66],
[70,69,63,65,0,68,65,63],
[54,60,56,57,62,0,66,58],
[55,58,64,66,65,64,0,56],
[71,71,63,64,67,72,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,79,69,75,67,79,65],
[54,0,66,50,54,56,72,54],
[51,64,0,56,59,49,65,60],
[61,80,74,0,61,66,81,62],
[55,76,71,69,0,61,77,55],
[63,74,81,64,69,0,75,66],
[51,58,65,49,53,55,0,59],
[65,76,70,68,75,64,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,68,64,55,64,66,58],
[65,0,60,55,52,60,65,56],
[62,70,0,73,65,64,66,60],
[66,75,57,0,52,59,74,56],
[75,78,65,78,0,68,77,74],
[66,70,66,71,62,0,74,67],
[64,65,64,56,53,56,0,58],
[72,74,70,74,56,63,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,66,57,73,63,66,62],
[72,0,70,74,77,71,65,66],
[64,60,0,55,75,67,52,45],
[73,56,75,0,70,70,60,47],
[57,53,55,60,0,59,54,41],
[67,59,63,60,71,0,68,52],
[64,65,78,70,76,62,0,61],
[68,64,85,83,89,78,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,55,69,67,63,73,66],
[73,0,72,65,59,66,68,67],
[75,58,0,79,69,74,75,64],
[61,65,51,0,53,53,59,47],
[63,71,61,77,0,72,74,70],
[67,64,56,77,58,0,67,62],
[57,62,55,71,56,63,0,61],
[64,63,66,83,60,68,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,52,59,68,66,59,53],
[63,0,59,53,66,66,57,77],
[78,71,0,61,70,63,81,72],
[71,77,69,0,87,61,73,69],
[62,64,60,43,0,48,63,58],
[64,64,67,69,82,0,75,61],
[71,73,49,57,67,55,0,74],
[77,53,58,61,72,69,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,61,59,78,65,64,70],
[69,0,58,68,75,69,66,81],
[69,72,0,63,79,70,72,69],
[71,62,67,0,73,66,73,73],
[52,55,51,57,0,62,48,66],
[65,61,60,64,68,0,57,73],
[66,64,58,57,82,73,0,64],
[60,49,61,57,64,57,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,56,75,67,74,64],
[60,0,70,72,65,67,76,54],
[71,60,0,69,73,72,85,70],
[74,58,61,0,67,71,80,73],
[55,65,57,63,0,68,77,69],
[63,63,58,59,62,0,78,59],
[56,54,45,50,53,52,0,59],
[66,76,60,57,61,71,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,79,56,64,63,72,70],
[62,0,70,56,69,67,69,71],
[51,60,0,48,59,51,61,65],
[74,74,82,0,59,72,74,71],
[66,61,71,71,0,60,62,69],
[67,63,79,58,70,0,75,77],
[58,61,69,56,68,55,0,67],
[60,59,65,59,61,53,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,55,60,62,59,68,65],
[65,0,43,60,51,51,50,56],
[75,87,0,61,69,58,60,70],
[70,70,69,0,62,70,73,76],
[68,79,61,68,0,58,71,65],
[71,79,72,60,72,0,78,76],
[62,80,70,57,59,52,0,74],
[65,74,60,54,65,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,64,67,68,63,73,62],
[57,0,65,60,65,65,60,55],
[66,65,0,67,61,56,63,62],
[63,70,63,0,62,56,66,52],
[62,65,69,68,0,56,72,54],
[67,65,74,74,74,0,67,66],
[57,70,67,64,58,63,0,56],
[68,75,68,78,76,64,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,85,63,64,70,61,75],
[56,0,84,55,63,65,70,65],
[45,46,0,45,62,56,54,61],
[67,75,85,0,73,81,70,60],
[66,67,68,57,0,58,60,70],
[60,65,74,49,72,0,68,60],
[69,60,76,60,70,62,0,62],
[55,65,69,70,60,70,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,87,43,21,43,64,42],
[44,0,44,44,65,65,65,65],
[43,86,0,21,43,43,42,42],
[87,86,109,0,65,65,43,42],
[109,65,87,65,0,44,65,64],
[87,65,87,65,86,0,65,64],
[66,65,88,87,65,65,0,43],
[88,65,88,88,66,66,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,44,31,35,52,64,35],
[100,0,81,74,44,93,92,68],
[86,49,0,39,51,85,79,67],
[99,56,91,0,69,89,90,65],
[95,86,79,61,0,86,95,50],
[78,37,45,41,44,0,71,27],
[66,38,51,40,35,59,0,48],
[95,62,63,65,80,103,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,60,61,66,67,51,56],
[57,0,65,64,63,56,46,49],
[70,65,0,65,69,62,59,50],
[69,66,65,0,60,64,62,48],
[64,67,61,70,0,59,55,60],
[63,74,68,66,71,0,57,65],
[79,84,71,68,75,73,0,62],
[74,81,80,82,70,65,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,68,59,68,52,61,66],
[52,0,61,68,60,48,50,51],
[62,69,0,69,72,68,72,60],
[71,62,61,0,66,68,57,53],
[62,70,58,64,0,65,65,65],
[78,82,62,62,65,0,68,64],
[69,80,58,73,65,62,0,69],
[64,79,70,77,65,66,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,49,57,62,57,64,66],
[70,0,48,35,63,52,78,64],
[81,82,0,75,68,57,79,73],
[73,95,55,0,69,70,69,79],
[68,67,62,61,0,58,73,60],
[73,78,73,60,72,0,82,76],
[66,52,51,61,57,48,0,63],
[64,66,57,51,70,54,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,83,43,58,38,43],
[70,0,70,82,55,48,64,73],
[73,60,0,84,72,64,45,75],
[47,48,46,0,46,48,34,46],
[87,75,58,84,0,60,66,63],
[72,82,66,82,70,0,51,87],
[92,66,85,96,64,79,0,75],
[87,57,55,84,67,43,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,61,65,69,65,61,62],
[61,0,57,62,77,70,71,63],
[69,73,0,60,69,68,73,71],
[65,68,70,0,70,69,69,68],
[61,53,61,60,0,64,64,57],
[65,60,62,61,66,0,65,63],
[69,59,57,61,66,65,0,64],
[68,67,59,62,73,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,75,76,64,66,70],
[66,0,71,73,69,64,62,72],
[60,59,0,67,63,63,67,66],
[55,57,63,0,61,56,57,58],
[54,61,67,69,0,57,60,62],
[66,66,67,74,73,0,65,72],
[64,68,63,73,70,65,0,66],
[60,58,64,72,68,58,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,65,70,81,58,63,63],
[74,0,73,81,76,67,64,70],
[65,57,0,59,74,62,61,59],
[60,49,71,0,64,52,55,61],
[49,54,56,66,0,56,55,53],
[72,63,68,78,74,0,61,64],
[67,66,69,75,75,69,0,65],
[67,60,71,69,77,66,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,71,69,82,73,68,56],
[59,0,64,57,79,66,71,65],
[59,66,0,66,67,67,69,63],
[61,73,64,0,73,71,65,69],
[48,51,63,57,0,59,62,61],
[57,64,63,59,71,0,62,59],
[62,59,61,65,68,68,0,61],
[74,65,67,61,69,71,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,59,66,64,70,62,67],
[50,0,52,61,57,61,59,52],
[71,78,0,65,60,71,71,62],
[64,69,65,0,60,68,66,62],
[66,73,70,70,0,74,60,68],
[60,69,59,62,56,0,60,61],
[68,71,59,64,70,70,0,64],
[63,78,68,68,62,69,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,80,81,76,63,66,58],
[66,0,72,75,67,69,59,69],
[50,58,0,72,56,60,59,60],
[49,55,58,0,62,61,45,49],
[54,63,74,68,0,69,60,60],
[67,61,70,69,61,0,68,64],
[64,71,71,85,70,62,0,68],
[72,61,70,81,70,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,77,70,60,69,76,76],
[60,0,64,63,64,53,75,70],
[53,66,0,75,59,48,69,87],
[60,67,55,0,52,49,68,61],
[70,66,71,78,0,61,68,74],
[61,77,82,81,69,0,81,88],
[54,55,61,62,62,49,0,63],
[54,60,43,69,56,42,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,109,89,79,81,109,59,100],
[21,0,60,81,73,69,51,82],
[41,70,0,69,62,80,62,91],
[51,49,61,0,62,59,71,81],
[49,57,68,68,0,77,67,100],
[21,61,50,71,53,0,51,52],
[71,79,68,59,63,79,0,71],
[30,48,39,49,30,78,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,68,87,66,71,70,61],
[62,0,75,85,76,65,84,69],
[62,55,0,73,76,67,72,64],
[43,45,57,0,64,58,62,45],
[64,54,54,66,0,52,65,66],
[59,65,63,72,78,0,58,60],
[60,46,58,68,65,72,0,70],
[69,61,66,85,64,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,69,76,79,66,58,69],
[62,0,71,70,57,70,67,59],
[61,59,0,63,74,65,56,51],
[54,60,67,0,66,56,59,73],
[51,73,56,64,0,59,54,54],
[64,60,65,74,71,0,79,60],
[72,63,74,71,76,51,0,64],
[61,71,79,57,76,70,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,56,56,53,61,65,61],
[69,0,51,50,47,59,52,55],
[74,79,0,63,72,64,74,61],
[74,80,67,0,61,67,68,58],
[77,83,58,69,0,78,71,71],
[69,71,66,63,52,0,78,53],
[65,78,56,62,59,52,0,63],
[69,75,69,72,59,77,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,65,70,82,63,66],
[62,0,49,62,64,58,58,61],
[69,81,0,63,71,69,57,78],
[65,68,67,0,59,75,68,69],
[60,66,59,71,0,65,53,63],
[48,72,61,55,65,0,52,64],
[67,72,73,62,77,78,0,82],
[64,69,52,61,67,66,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,62,64,53,63,67,70],
[75,0,61,58,75,64,66,63],
[68,69,0,62,73,78,65,53],
[66,72,68,0,69,72,67,61],
[77,55,57,61,0,72,67,59],
[67,66,52,58,58,0,61,56],
[63,64,65,63,63,69,0,69],
[60,67,77,69,71,74,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,65,74,54,73,69,55],
[66,0,70,83,65,72,78,68],
[65,60,0,81,63,72,61,76],
[56,47,49,0,62,66,57,65],
[76,65,67,68,0,72,73,69],
[57,58,58,64,58,0,57,52],
[61,52,69,73,57,73,0,63],
[75,62,54,65,61,78,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,63,72,60,64,71,66],
[61,0,60,65,66,54,72,65],
[67,70,0,73,69,61,69,72],
[58,65,57,0,55,60,62,58],
[70,64,61,75,0,65,66,67],
[66,76,69,70,65,0,75,76],
[59,58,61,68,64,55,0,59],
[64,65,58,72,63,54,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,56,58,64,51,59],
[75,0,56,66,64,58,54,51],
[75,74,0,67,75,68,71,63],
[74,64,63,0,72,73,63,63],
[72,66,55,58,0,62,66,64],
[66,72,62,57,68,0,68,67],
[79,76,59,67,64,62,0,63],
[71,79,67,67,66,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,63,65,85,58,66,71],
[59,0,69,80,78,68,69,67],
[67,61,0,74,74,60,65,69],
[65,50,56,0,64,62,58,61],
[45,52,56,66,0,54,58,56],
[72,62,70,68,76,0,72,78],
[64,61,65,72,72,58,0,73],
[59,63,61,69,74,52,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,60,55,62,64,63,60],
[78,0,72,62,71,79,83,66],
[70,58,0,63,67,82,68,62],
[75,68,67,0,62,78,71,66],
[68,59,63,68,0,75,67,61],
[66,51,48,52,55,0,52,55],
[67,47,62,59,63,78,0,55],
[70,64,68,64,69,75,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,79,69,67,67,43,91],
[53,0,69,62,42,49,54,71],
[51,61,0,45,64,38,49,67],
[61,68,85,0,57,53,68,82],
[63,88,66,73,0,38,66,82],
[63,81,92,77,92,0,81,79],
[87,76,81,62,64,49,0,82],
[39,59,63,48,48,51,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,95,76,58,77,57,76],
[73,0,93,74,76,74,56,57],
[35,37,0,57,56,57,37,57],
[54,56,73,0,56,38,19,76],
[72,54,74,74,0,74,36,74],
[53,56,73,92,56,0,19,57],
[73,74,93,111,94,111,0,57],
[54,73,73,54,56,73,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,64,69,67,62,78],
[65,0,65,61,65,66,62,74],
[64,65,0,59,66,62,59,70],
[66,69,71,0,67,66,57,72],
[61,65,64,63,0,66,59,72],
[63,64,68,64,64,0,64,68],
[68,68,71,73,71,66,0,64],
[52,56,60,58,58,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,75,75,58,69,82,78],
[58,0,74,64,74,58,61,69],
[55,56,0,62,48,58,53,51],
[55,66,68,0,64,55,67,61],
[72,56,82,66,0,81,68,69],
[61,72,72,75,49,0,73,70],
[48,69,77,63,62,57,0,63],
[52,61,79,69,61,60,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,60,71,51,65,81],
[57,0,76,58,69,52,75,78],
[64,54,0,70,67,52,60,61],
[70,72,60,0,57,66,64,74],
[59,61,63,73,0,72,73,75],
[79,78,78,64,58,0,73,73],
[65,55,70,66,57,57,0,60],
[49,52,69,56,55,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,79,77,78,78,76,91],
[65,0,65,77,77,63,51,65],
[51,65,0,75,89,64,88,61],
[53,53,55,0,105,65,63,51],
[52,53,41,25,0,52,76,37],
[52,67,66,65,78,0,65,91],
[54,79,42,67,54,65,0,67],
[39,65,69,79,93,39,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,65,63,60,68,76,67],
[53,0,51,45,57,61,48,56],
[65,79,0,56,75,66,59,60],
[67,85,74,0,73,70,73,63],
[70,73,55,57,0,56,56,60],
[62,69,64,60,74,0,64,71],
[54,82,71,57,74,66,0,73],
[63,74,70,67,70,59,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,64,76,66,66,63,64],
[71,0,71,72,65,61,64,65],
[66,59,0,75,57,67,75,62],
[54,58,55,0,55,56,60,51],
[64,65,73,75,0,70,65,69],
[64,69,63,74,60,0,64,66],
[67,66,55,70,65,66,0,61],
[66,65,68,79,61,64,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,54,57,63,60,54,64],
[65,0,66,67,63,71,64,67],
[76,64,0,70,79,67,76,79],
[73,63,60,0,64,63,65,68],
[67,67,51,66,0,64,59,60],
[70,59,63,67,66,0,67,66],
[76,66,54,65,71,63,0,69],
[66,63,51,62,70,64,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,64,65,76,74,72],
[69,0,59,65,59,73,61,74],
[70,71,0,68,65,72,65,69],
[66,65,62,0,67,76,75,77],
[65,71,65,63,0,79,75,79],
[54,57,58,54,51,0,58,66],
[56,69,65,55,55,72,0,74],
[58,56,61,53,51,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,65,66,64,68,67,63],
[61,0,67,66,70,74,67,70],
[65,63,0,65,74,76,67,63],
[64,64,65,0,65,70,60,60],
[66,60,56,65,0,78,65,68],
[62,56,54,60,52,0,58,53],
[63,63,63,70,65,72,0,62],
[67,60,67,70,62,77,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,57,47,95,62,56,68],
[65,0,54,54,71,56,64,92],
[73,76,0,62,79,75,81,78],
[83,76,68,0,72,66,65,103],
[35,59,51,58,0,60,76,81],
[68,74,55,64,70,0,51,66],
[74,66,49,65,54,79,0,74],
[62,38,52,27,49,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,65,64,61,72,65,59],
[70,0,60,70,68,72,74,62],
[65,70,0,74,69,68,76,65],
[66,60,56,0,62,71,64,68],
[69,62,61,68,0,66,66,61],
[58,58,62,59,64,0,62,70],
[65,56,54,66,64,68,0,69],
[71,68,65,62,69,60,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,56,54,62,75,70,51],
[74,0,75,58,70,65,75,60],
[74,55,0,79,76,76,73,68],
[76,72,51,0,68,62,76,63],
[68,60,54,62,0,61,86,57],
[55,65,54,68,69,0,70,71],
[60,55,57,54,44,60,0,56],
[79,70,62,67,73,59,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,74,67,69,78,68,65],
[52,0,71,60,68,57,60,66],
[56,59,0,71,67,57,60,68],
[63,70,59,0,68,69,72,64],
[61,62,63,62,0,53,62,55],
[52,73,73,61,77,0,63,57],
[62,70,70,58,68,67,0,52],
[65,64,62,66,75,73,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,60,67,68,68,61,73],
[50,0,54,47,52,52,49,70],
[70,76,0,77,63,65,62,75],
[63,83,53,0,70,59,65,67],
[62,78,67,60,0,65,53,62],
[62,78,65,71,65,0,66,59],
[69,81,68,65,77,64,0,80],
[57,60,55,63,68,71,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,67,65,75,68,61,70],
[59,0,65,70,66,59,68,66],
[63,65,0,62,62,59,56,71],
[65,60,68,0,65,61,61,73],
[55,64,68,65,0,62,61,65],
[62,71,71,69,68,0,69,66],
[69,62,74,69,69,61,0,74],
[60,64,59,57,65,64,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,55,66,71,63,76,66],
[61,0,61,71,64,67,68,67],
[75,69,0,72,61,65,76,70],
[64,59,58,0,62,56,65,52],
[59,66,69,68,0,70,72,69],
[67,63,65,74,60,0,72,66],
[54,62,54,65,58,58,0,57],
[64,63,60,78,61,64,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,48,57,54,67,56,59],
[57,0,45,52,47,59,51,45],
[82,85,0,66,74,76,76,63],
[73,78,64,0,74,73,67,73],
[76,83,56,56,0,75,72,56],
[63,71,54,57,55,0,63,50],
[74,79,54,63,58,67,0,53],
[71,85,67,57,74,80,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,57,41,57,54,57],
[73,0,59,62,56,50,59,66],
[68,71,0,66,60,61,78,57],
[73,68,64,0,56,66,55,60],
[89,74,70,74,0,63,66,75],
[73,80,69,64,67,0,69,64],
[76,71,52,75,64,61,0,73],
[73,64,73,70,55,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,60,70,74,77,67],
[62,0,62,64,65,75,68,59],
[65,68,0,66,70,61,68,63],
[70,66,64,0,68,62,69,66],
[60,65,60,62,0,65,62,61],
[56,55,69,68,65,0,63,60],
[53,62,62,61,68,67,0,63],
[63,71,67,64,69,70,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,71,76,70,65,69,65],
[66,0,78,80,72,76,68,65],
[59,52,0,63,60,55,56,49],
[54,50,67,0,59,61,59,55],
[60,58,70,71,0,56,69,65],
[65,54,75,69,74,0,72,66],
[61,62,74,71,61,58,0,58],
[65,65,81,75,65,64,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,82,67,68,66,65],
[53,0,69,63,59,50,47,60],
[62,61,0,79,65,51,57,56],
[48,67,51,0,54,51,48,49],
[63,71,65,76,0,57,64,62],
[62,80,79,79,73,0,66,61],
[64,83,73,82,66,64,0,70],
[65,70,74,81,68,69,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,69,72,76,71,68],
[58,0,65,62,65,64,74,68],
[69,65,0,70,80,84,87,74],
[61,68,60,0,74,63,78,70],
[58,65,50,56,0,67,70,65],
[54,66,46,67,63,0,67,55],
[59,56,43,52,60,63,0,54],
[62,62,56,60,65,75,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,70,62,54,59,71],
[70,0,60,79,57,62,69,77],
[73,70,0,78,64,59,81,69],
[60,51,52,0,50,45,55,57],
[68,73,66,80,0,60,76,71],
[76,68,71,85,70,0,86,62],
[71,61,49,75,54,44,0,60],
[59,53,61,73,59,68,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,59,48,60,46,56,42],
[72,0,54,52,57,72,55,48],
[71,76,0,58,62,63,61,47],
[82,78,72,0,71,71,65,52],
[70,73,68,59,0,79,62,64],
[84,58,67,59,51,0,56,50],
[74,75,69,65,68,74,0,68],
[88,82,83,78,66,80,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,74,77,60,65,69,86],
[54,0,71,78,60,62,62,71],
[56,59,0,68,50,58,77,65],
[53,52,62,0,57,47,63,59],
[70,70,80,73,0,62,69,61],
[65,68,72,83,68,0,62,65],
[61,68,53,67,61,68,0,70],
[44,59,65,71,69,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,68,59,57,53,57,67],
[63,0,67,67,64,59,63,70],
[62,63,0,65,52,61,52,59],
[71,63,65,0,60,67,67,73],
[73,66,78,70,0,59,62,71],
[77,71,69,63,71,0,59,74],
[73,67,78,63,68,71,0,73],
[63,60,71,57,59,56,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,65,50,86,62,66,86],
[62,0,53,50,66,56,54,91],
[65,77,0,54,78,66,55,87],
[80,80,76,0,97,64,64,92],
[44,64,52,33,0,63,49,71],
[68,74,64,66,67,0,46,96],
[64,76,75,66,81,84,0,94],
[44,39,43,38,59,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,56,71,77,75,85,63],
[59,0,71,59,65,64,90,64],
[74,59,0,78,82,68,78,69],
[59,71,52,0,76,74,88,73],
[53,65,48,54,0,57,74,72],
[55,66,62,56,73,0,90,61],
[45,40,52,42,56,40,0,37],
[67,66,61,57,58,69,93,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,50,44,60,45,53,35],
[83,0,77,65,75,62,63,49],
[80,53,0,51,75,61,65,43],
[86,65,79,0,85,76,73,75],
[70,55,55,45,0,49,63,56],
[85,68,69,54,81,0,60,56],
[77,67,65,57,67,70,0,56],
[95,81,87,55,74,74,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,70,72,65,61,58,75],
[63,0,63,64,57,64,58,72],
[60,67,0,71,59,70,61,73],
[58,66,59,0,58,66,56,67],
[65,73,71,72,0,75,65,75],
[69,66,60,64,55,0,58,75],
[72,72,69,74,65,72,0,82],
[55,58,57,63,55,55,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,73,64,57,64,79,76],
[65,0,71,71,76,69,60,71],
[57,59,0,63,62,56,62,61],
[66,59,67,0,64,62,70,72],
[73,54,68,66,0,65,60,66],
[66,61,74,68,65,0,61,65],
[51,70,68,60,70,69,0,54],
[54,59,69,58,64,65,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,56,55,73,33,67,65],
[55,0,77,57,88,57,43,75],
[74,53,0,76,73,53,65,88],
[75,73,54,0,74,54,65,86],
[57,42,57,56,0,46,67,77],
[97,73,77,76,84,0,65,97],
[63,87,65,65,63,65,0,85],
[65,55,42,44,53,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,105,102,89,103,64,102],
[65,0,93,88,65,105,75,89],
[25,37,0,61,37,75,51,63],
[28,42,69,0,13,79,68,54],
[41,65,93,117,0,91,79,91],
[27,25,55,51,39,0,39,63],
[66,55,79,62,51,91,0,78],
[28,41,67,76,39,67,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,71,65,69,72,65,66],
[64,0,67,60,67,61,51,65],
[59,63,0,61,58,47,53,59],
[65,70,69,0,74,59,67,67],
[61,63,72,56,0,67,53,66],
[58,69,83,71,63,0,63,76],
[65,79,77,63,77,67,0,74],
[64,65,71,63,64,54,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,72,61,87,43,59,69],
[63,0,62,54,74,65,53,80],
[58,68,0,88,77,71,71,71],
[69,76,42,0,89,59,77,72],
[43,56,53,41,0,56,70,63],
[87,65,59,71,74,0,56,69],
[71,77,59,53,60,74,0,74],
[61,50,59,58,67,61,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,60,61,60,68,57,73],
[69,0,62,66,54,68,64,65],
[70,68,0,61,59,67,57,73],
[69,64,69,0,59,67,66,72],
[70,76,71,71,0,69,60,71],
[62,62,63,63,61,0,61,73],
[73,66,73,64,70,69,0,67],
[57,65,57,58,59,57,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,56,75,71,53,56],
[72,0,71,64,79,79,55,71],
[69,59,0,65,79,81,63,72],
[74,66,65,0,79,72,54,62],
[55,51,51,51,0,62,54,43],
[59,51,49,58,68,0,51,49],
[77,75,67,76,76,79,0,60],
[74,59,58,68,87,81,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,64,68,54,54,62,63],
[65,0,64,70,59,59,75,62],
[66,66,0,80,61,77,82,72],
[62,60,50,0,61,70,70,60],
[76,71,69,69,0,68,81,58],
[76,71,53,60,62,0,69,76],
[68,55,48,60,49,61,0,60],
[67,68,58,70,72,54,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,56,68,65,84,68],
[62,0,76,72,66,69,79,67],
[53,54,0,50,61,62,71,57],
[74,58,80,0,80,63,74,67],
[62,64,69,50,0,56,69,69],
[65,61,68,67,74,0,67,69],
[46,51,59,56,61,63,0,63],
[62,63,73,63,61,61,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,57,70,55,59,60,59],
[69,0,59,75,54,60,68,66],
[73,71,0,69,62,62,60,65],
[60,55,61,0,58,66,68,74],
[75,76,68,72,0,65,62,69],
[71,70,68,64,65,0,75,71],
[70,62,70,62,68,55,0,62],
[71,64,65,56,61,59,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,56,82,68,76,84,61],
[56,0,65,47,56,58,74,58],
[74,65,0,80,56,70,76,69],
[48,83,50,0,58,78,69,61],
[62,74,74,72,0,75,84,69],
[54,72,60,52,55,0,75,57],
[46,56,54,61,46,55,0,58],
[69,72,61,69,61,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,80,75,68,67,72,63],
[63,0,74,70,59,70,67,64],
[50,56,0,65,51,67,56,58],
[55,60,65,0,51,68,65,65],
[62,71,79,79,0,74,71,76],
[63,60,63,62,56,0,64,57],
[58,63,74,65,59,66,0,64],
[67,66,72,65,54,73,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,69,77,69,71,65,72],
[76,0,62,80,64,65,61,73],
[61,68,0,82,71,57,62,66],
[53,50,48,0,44,51,33,61],
[61,66,59,86,0,66,55,76],
[59,65,73,79,64,0,64,73],
[65,69,68,97,75,66,0,69],
[58,57,64,69,54,57,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,60,60,47,59,58,49],
[67,0,77,79,73,95,77,65],
[70,53,0,76,49,62,70,63],
[70,51,54,0,60,74,56,50],
[83,57,81,70,0,84,79,57],
[71,35,68,56,46,0,63,46],
[72,53,60,74,51,67,0,63],
[81,65,67,80,73,84,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,78,67,70,81,65,59],
[70,0,74,66,64,84,62,63],
[52,56,0,65,54,72,55,59],
[63,64,65,0,65,84,54,62],
[60,66,76,65,0,76,60,56],
[49,46,58,46,54,0,43,45],
[65,68,75,76,70,87,0,69],
[71,67,71,68,74,85,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,60,64,66,61,55,61],
[72,0,67,77,66,68,63,65],
[70,63,0,66,60,64,61,55],
[66,53,64,0,56,53,49,61],
[64,64,70,74,0,68,55,72],
[69,62,66,77,62,0,66,69],
[75,67,69,81,75,64,0,67],
[69,65,75,69,58,61,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,88,65,67,86,90,64],
[64,0,66,64,45,64,45,64],
[42,64,0,19,67,64,68,64],
[65,66,111,0,67,45,68,64],
[63,85,63,63,0,61,108,66],
[44,66,66,85,69,0,89,66],
[40,85,62,62,22,41,0,43],
[66,66,66,66,64,64,87,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,57,62,67,69,65],
[58,0,67,58,54,66,59,57],
[61,63,0,60,69,66,66,64],
[73,72,70,0,70,69,70,62],
[68,76,61,60,0,59,60,59],
[63,64,64,61,71,0,55,53],
[61,71,64,60,70,75,0,64],
[65,73,66,68,71,77,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,66,65,67,64,69],
[64,0,68,71,63,65,67,73],
[58,62,0,58,63,64,63,68],
[64,59,72,0,65,61,71,68],
[65,67,67,65,0,65,67,70],
[63,65,66,69,65,0,63,66],
[66,63,67,59,63,67,0,70],
[61,57,62,62,60,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,59,75,62,60,58],
[66,0,79,63,80,62,64,62],
[62,51,0,51,63,53,58,60],
[71,67,79,0,82,74,63,61],
[55,50,67,48,0,48,51,58],
[68,68,77,56,82,0,73,68],
[70,66,72,67,79,57,0,63],
[72,68,70,69,72,62,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,57,76,62,51,65,68],
[61,0,57,64,65,54,56,49],
[73,73,0,78,84,65,62,63],
[54,66,52,0,66,46,61,60],
[68,65,46,64,0,49,51,58],
[79,76,65,84,81,0,64,86],
[65,74,68,69,79,66,0,61],
[62,81,67,70,72,44,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,69,58,55,60,59,54],
[64,0,50,52,53,60,56,56],
[61,80,0,65,68,64,62,75],
[72,78,65,0,77,69,74,74],
[75,77,62,53,0,75,73,71],
[70,70,66,61,55,0,58,66],
[71,74,68,56,57,72,0,81],
[76,74,55,56,59,64,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,59,76,70,59,76,61],
[68,0,71,76,59,65,74,66],
[71,59,0,78,59,55,64,61],
[54,54,52,0,53,51,70,54],
[60,71,71,77,0,60,91,81],
[71,65,75,79,70,0,84,74],
[54,56,66,60,39,46,0,57],
[69,64,69,76,49,56,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,75,74,93,93,93,73],
[75,0,93,56,56,75,57,75],
[55,37,0,55,75,75,57,55],
[56,74,75,0,76,112,76,75],
[37,74,55,54,0,55,75,73],
[37,55,55,18,75,0,39,55],
[37,73,73,54,55,91,0,74],
[57,55,75,55,57,75,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,63,59,57,58,74],
[61,0,61,55,58,61,62,66],
[72,69,0,64,67,60,66,70],
[67,75,66,0,78,64,78,79],
[71,72,63,52,0,60,61,68],
[73,69,70,66,70,0,63,78],
[72,68,64,52,69,67,0,80],
[56,64,60,51,62,52,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,74,69,70,69,74,65],
[57,0,68,64,51,59,66,68],
[56,62,0,62,63,62,65,62],
[61,66,68,0,64,67,73,65],
[60,79,67,66,0,65,66,70],
[61,71,68,63,65,0,67,62],
[56,64,65,57,64,63,0,65],
[65,62,68,65,60,68,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,89,51,87,72,90,87,82],
[41,0,51,71,64,76,85,75],
[79,79,0,93,60,80,86,93],
[43,59,37,0,55,67,70,57],
[58,66,70,75,0,82,82,82],
[40,54,50,63,48,0,77,68],
[43,45,44,60,48,53,0,68],
[48,55,37,73,48,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,66,70,67,65,64,66],
[68,0,75,70,77,61,71,74],
[64,55,0,63,73,59,62,61],
[60,60,67,0,73,60,62,71],
[63,53,57,57,0,51,61,66],
[65,69,71,70,79,0,73,69],
[66,59,68,68,69,57,0,66],
[64,56,69,59,64,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,74,68,64,57,59,69],
[59,0,73,59,62,59,61,64],
[56,57,0,60,58,59,49,62],
[62,71,70,0,68,57,73,68],
[66,68,72,62,0,59,71,69],
[73,71,71,73,71,0,65,70],
[71,69,81,57,59,65,0,70],
[61,66,68,62,61,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,77,70,65,62,71],
[57,0,71,69,71,72,72,56],
[64,59,0,65,59,62,63,56],
[53,61,65,0,63,72,53,59],
[60,59,71,67,0,61,60,54],
[65,58,68,58,69,0,66,64],
[68,58,67,77,70,64,0,61],
[59,74,74,71,76,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,59,68,60,65,65,58],
[66,0,70,66,60,67,67,55],
[71,60,0,69,62,61,75,54],
[62,64,61,0,63,61,62,56],
[70,70,68,67,0,63,75,65],
[65,63,69,69,67,0,73,60],
[65,63,55,68,55,57,0,55],
[72,75,76,74,65,70,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,59,62,67,68,79,68],
[60,0,59,62,58,61,67,68],
[71,71,0,64,67,75,74,70],
[68,68,66,0,58,70,75,67],
[63,72,63,72,0,72,78,66],
[62,69,55,60,58,0,69,66],
[51,63,56,55,52,61,0,48],
[62,62,60,63,64,64,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,71,83,94,83,58,48],
[47,0,47,49,72,58,49,49],
[59,83,0,59,84,83,58,71],
[47,81,71,0,83,81,46,48],
[36,58,46,47,0,70,33,47],
[47,72,47,49,60,0,60,49],
[72,81,72,84,97,70,0,58],
[82,81,59,82,83,81,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,59,64,63,69,70,67],
[70,0,71,74,62,69,65,72],
[71,59,0,66,60,63,74,69],
[66,56,64,0,61,72,73,65],
[67,68,70,69,0,77,64,74],
[61,61,67,58,53,0,61,65],
[60,65,56,57,66,69,0,70],
[63,58,61,65,56,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,67,67,66,70,58,64],
[61,0,69,70,71,64,63,66],
[63,61,0,64,54,59,60,66],
[63,60,66,0,62,68,65,59],
[64,59,76,68,0,68,63,64],
[60,66,71,62,62,0,67,65],
[72,67,70,65,67,63,0,70],
[66,64,64,71,66,65,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,62,54,61,62,56],
[76,0,63,73,68,62,56,61],
[77,67,0,73,75,63,67,71],
[68,57,57,0,57,53,62,52],
[76,62,55,73,0,60,58,62],
[69,68,67,77,70,0,59,61],
[68,74,63,68,72,71,0,61],
[74,69,59,78,68,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,67,61,56,61,67,63],
[72,0,69,70,59,64,62,65],
[63,61,0,61,65,62,67,59],
[69,60,69,0,61,61,64,60],
[74,71,65,69,0,69,69,70],
[69,66,68,69,61,0,67,65],
[63,68,63,66,61,63,0,61],
[67,65,71,70,60,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,78,96,74,63,79,65],
[56,0,79,87,71,60,85,38],
[52,51,0,81,72,53,67,51],
[34,43,49,0,55,23,37,42],
[56,59,58,75,0,56,55,51],
[67,70,77,107,74,0,79,65],
[51,45,63,93,75,51,0,57],
[65,92,79,88,79,65,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,73,63,75,65,65,66],
[61,0,65,66,73,75,69,67],
[57,65,0,62,63,65,63,60],
[67,64,68,0,78,61,58,68],
[55,57,67,52,0,58,55,54],
[65,55,65,69,72,0,60,64],
[65,61,67,72,75,70,0,58],
[64,63,70,62,76,66,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,81,62,72,62,62,55],
[62,0,64,58,63,64,62,59],
[49,66,0,54,64,52,54,55],
[68,72,76,0,74,71,68,64],
[58,67,66,56,0,53,47,50],
[68,66,78,59,77,0,58,59],
[68,68,76,62,83,72,0,68],
[75,71,75,66,80,71,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,51,48,58,50,53,58],
[66,0,61,55,59,57,64,68],
[79,69,0,65,77,66,62,69],
[82,75,65,0,71,81,75,79],
[72,71,53,59,0,64,58,67],
[80,73,64,49,66,0,60,67],
[77,66,68,55,72,70,0,70],
[72,62,61,51,63,63,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,63,57,62,70,64],
[73,0,80,65,70,60,70,69],
[70,50,0,73,64,56,62,55],
[67,65,57,0,63,56,54,70],
[73,60,66,67,0,74,65,60],
[68,70,74,74,56,0,76,72],
[60,60,68,76,65,54,0,65],
[66,61,75,60,70,58,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,69,74,73,79,69,65],
[56,0,56,68,66,61,65,64],
[61,74,0,72,66,68,76,65],
[56,62,58,0,62,68,65,61],
[57,64,64,68,0,60,66,57],
[51,69,62,62,70,0,69,62],
[61,65,54,65,64,61,0,56],
[65,66,65,69,73,68,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,85,92,58,83,75,75],
[47,0,65,61,61,69,61,50],
[45,65,0,70,56,81,53,47],
[38,69,60,0,54,63,51,53],
[72,69,74,76,0,85,61,67],
[47,61,49,67,45,0,48,50],
[55,69,77,79,69,82,0,71],
[55,80,83,77,63,80,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,57,68,65,51,58,57],
[67,0,57,64,68,63,60,58],
[73,73,0,69,64,65,69,67],
[62,66,61,0,68,57,61,64],
[65,62,66,62,0,61,64,62],
[79,67,65,73,69,0,66,66],
[72,70,61,69,66,64,0,70],
[73,72,63,66,68,64,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,83,77,65,61,65,54,61],
[47,0,58,61,60,63,47,51],
[53,72,0,68,67,66,50,57],
[65,69,62,0,76,60,67,63],
[69,70,63,54,0,63,47,79],
[65,67,64,70,67,0,58,62],
[76,83,80,63,83,72,0,84],
[69,79,73,67,51,68,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,61,74,60,52,65,59],
[73,0,57,69,64,59,61,63],
[69,73,0,73,64,67,56,74],
[56,61,57,0,54,68,59,58],
[70,66,66,76,0,51,78,76],
[78,71,63,62,79,0,60,77],
[65,69,74,71,52,70,0,66],
[71,67,56,72,54,53,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,58,55,69,56,59,70],
[69,0,57,67,74,68,67,70],
[72,73,0,65,79,75,60,75],
[75,63,65,0,83,74,62,72],
[61,56,51,47,0,62,47,67],
[74,62,55,56,68,0,53,77],
[71,63,70,68,83,77,0,70],
[60,60,55,58,63,53,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,76,70,65,78,90,63],
[62,0,74,75,64,69,71,72],
[54,56,0,71,64,64,65,64],
[60,55,59,0,54,59,62,52],
[65,66,66,76,0,64,75,53],
[52,61,66,71,66,0,67,68],
[40,59,65,68,55,63,0,52],
[67,58,66,78,77,62,78,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,60,75,72,90,70,69],
[56,0,62,70,62,86,55,51],
[70,68,0,78,76,90,65,73],
[55,60,52,0,52,73,51,56],
[58,68,54,78,0,75,57,66],
[40,44,40,57,55,0,44,50],
[60,75,65,79,73,86,0,69],
[61,79,57,74,64,80,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,69,62,50,67,69,58],
[65,0,69,67,67,61,66,64],
[61,61,0,65,57,57,75,58],
[68,63,65,0,69,70,67,60],
[80,63,73,61,0,67,81,64],
[63,69,73,60,63,0,71,66],
[61,64,55,63,49,59,0,55],
[72,66,72,70,66,64,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,63,60,51,56,58,45],
[66,0,62,56,58,58,69,63],
[67,68,0,54,59,58,50,59],
[70,74,76,0,73,60,77,60],
[79,72,71,57,0,56,57,54],
[74,72,72,70,74,0,68,64],
[72,61,80,53,73,62,0,75],
[85,67,71,70,76,66,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,60,59,69,64,65,61],
[74,0,74,69,70,65,71,74],
[70,56,0,67,65,73,68,65],
[71,61,63,0,62,74,70,67],
[61,60,65,68,0,69,73,71],
[66,65,57,56,61,0,70,65],
[65,59,62,60,57,60,0,60],
[69,56,65,63,59,65,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,66,69,58,65,65,65],
[65,0,67,61,59,65,75,62],
[64,63,0,71,58,63,70,64],
[61,69,59,0,58,62,63,59],
[72,71,72,72,0,74,72,63],
[65,65,67,68,56,0,72,60],
[65,55,60,67,58,58,0,56],
[65,68,66,71,67,70,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,85,76,64,55,63,68],
[63,0,73,59,60,62,56,54],
[45,57,0,56,48,50,52,60],
[54,71,74,0,71,62,63,63],
[66,70,82,59,0,55,69,63],
[75,68,80,68,75,0,65,64],
[67,74,78,67,61,65,0,61],
[62,76,70,67,67,66,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,57,66,62,63,57,61],
[63,0,82,65,72,69,70,66],
[73,48,0,58,68,62,70,58],
[64,65,72,0,67,60,63,74],
[68,58,62,63,0,62,62,63],
[67,61,68,70,68,0,67,69],
[73,60,60,67,68,63,0,66],
[69,64,72,56,67,61,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,61,62,72,69,71,58],
[72,0,66,66,71,67,70,60],
[69,64,0,60,72,66,72,62],
[68,64,70,0,74,67,67,67],
[58,59,58,56,0,65,59,61],
[61,63,64,63,65,0,74,64],
[59,60,58,63,71,56,0,59],
[72,70,68,63,69,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,69,69,61,72,69,65],
[59,0,74,67,57,70,72,67],
[61,56,0,55,55,67,74,53],
[61,63,75,0,71,71,73,66],
[69,73,75,59,0,77,80,68],
[58,60,63,59,53,0,68,57],
[61,58,56,57,50,62,0,58],
[65,63,77,64,62,73,72,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,75,63,69,71,72,76],
[55,0,68,51,63,63,59,56],
[55,62,0,60,64,70,72,66],
[67,79,70,0,68,71,64,66],
[61,67,66,62,0,62,71,61],
[59,67,60,59,68,0,62,67],
[58,71,58,66,59,68,0,63],
[54,74,64,64,69,63,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,67,61,65,57,56,61],
[70,0,71,69,65,71,66,68],
[63,59,0,55,55,65,59,66],
[69,61,75,0,71,66,64,72],
[65,65,75,59,0,69,67,63],
[73,59,65,64,61,0,67,65],
[74,64,71,66,63,63,0,65],
[69,62,64,58,67,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,74,64,70,74,59,68],
[68,0,66,63,67,63,58,64],
[56,64,0,58,64,67,55,55],
[66,67,72,0,64,67,65,67],
[60,63,66,66,0,66,63,72],
[56,67,63,63,64,0,61,63],
[71,72,75,65,67,69,0,68],
[62,66,75,63,58,67,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,62,59,55,59,62],
[83,0,61,70,72,73,60,69],
[83,69,0,74,69,70,64,68],
[68,60,56,0,71,69,72,72],
[71,58,61,59,0,47,66,64],
[75,57,60,61,83,0,71,69],
[71,70,66,58,64,59,0,71],
[68,61,62,58,66,61,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,59,68,78,62,64],
[61,0,59,61,53,75,65,59],
[64,71,0,60,65,69,68,63],
[71,69,70,0,68,72,65,61],
[62,77,65,62,0,79,63,65],
[52,55,61,58,51,0,57,54],
[68,65,62,65,67,73,0,72],
[66,71,67,69,65,76,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,54,69,69,61,65],
[65,0,78,62,76,71,66,75],
[58,52,0,60,61,64,64,67],
[76,68,70,0,64,66,70,69],
[61,54,69,66,0,55,65,53],
[61,59,66,64,75,0,62,64],
[69,64,66,60,65,68,0,59],
[65,55,63,61,77,66,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,68,65,83,64,63,69],
[66,0,86,67,78,65,66,72],
[62,44,0,47,67,50,50,73],
[65,63,83,0,78,67,55,74],
[47,52,63,52,0,61,57,79],
[66,65,80,63,69,0,64,85],
[67,64,80,75,73,66,0,81],
[61,58,57,56,51,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,71,69,66,64,69,70],
[51,0,57,57,48,52,55,56],
[59,73,0,58,50,48,58,66],
[61,73,72,0,51,57,63,61],
[64,82,80,79,0,71,72,72],
[66,78,82,73,59,0,70,70],
[61,75,72,67,58,60,0,68],
[60,74,64,69,58,60,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,62,46,68,53,52,67],
[72,0,74,65,70,57,70,75],
[68,56,0,46,63,63,60,61],
[84,65,84,0,74,58,74,69],
[62,60,67,56,0,59,62,72],
[77,73,67,72,71,0,63,69],
[78,60,70,56,68,67,0,76],
[63,55,69,61,58,61,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,68,68,58,60,61,64],
[64,0,62,69,70,62,72,51],
[62,68,0,64,70,61,64,60],
[62,61,66,0,63,67,64,67],
[72,60,60,67,0,70,64,62],
[70,68,69,63,60,0,64,62],
[69,58,66,66,66,66,0,63],
[66,79,70,63,68,68,67,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,75,67,72,63,71,63],
[65,0,77,76,59,71,64,67],
[55,53,0,58,45,59,62,62],
[63,54,72,0,57,54,68,71],
[58,71,85,73,0,66,71,68],
[67,59,71,76,64,0,73,71],
[59,66,68,62,59,57,0,64],
[67,63,68,59,62,59,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,62,64,60,59,55,56],
[73,0,74,72,69,60,63,71],
[68,56,0,61,62,62,56,62],
[66,58,69,0,55,66,59,63],
[70,61,68,75,0,60,57,68],
[71,70,68,64,70,0,66,73],
[75,67,74,71,73,64,0,79],
[74,59,68,67,62,57,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,79,69,75,71,73,70,64],
[51,0,70,61,70,64,63,64],
[61,60,0,76,66,69,71,65],
[55,69,54,0,64,71,51,59],
[59,60,64,66,0,76,54,64],
[57,66,61,59,54,0,66,77],
[60,67,59,79,76,64,0,79],
[66,66,65,71,66,53,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,74,39,66,66,58,47],
[108,0,83,74,92,67,66,59],
[56,47,0,49,56,67,57,47],
[91,56,81,0,84,100,65,48],
[64,38,74,46,0,41,63,49],
[64,63,63,30,89,0,47,47],
[72,64,73,65,67,83,0,74],
[83,71,83,82,81,83,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,62,63,67,66,61,64],
[53,0,58,67,50,62,61,56],
[68,72,0,67,60,68,68,62],
[67,63,63,0,57,75,62,57],
[63,80,70,73,0,72,71,66],
[64,68,62,55,58,0,53,58],
[69,69,62,68,59,77,0,67],
[66,74,68,73,64,72,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,65,75,66,63,76,64],
[54,0,61,77,52,64,66,63],
[65,69,0,67,59,65,65,57],
[55,53,63,0,44,55,65,54],
[64,78,71,86,0,64,65,61],
[67,66,65,75,66,0,71,62],
[54,64,65,65,65,59,0,67],
[66,67,73,76,69,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,61,38,48,56,58,47],
[67,0,62,69,64,67,70,73],
[69,68,0,57,58,70,74,67],
[92,61,73,0,49,69,70,75],
[82,66,72,81,0,55,69,67],
[74,63,60,61,75,0,76,62],
[72,60,56,60,61,54,0,64],
[83,57,63,55,63,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,57,70,68,53,78,74],
[62,0,56,63,61,55,65,65],
[73,74,0,65,68,65,76,70],
[60,67,65,0,63,61,80,70],
[62,69,62,67,0,67,77,69],
[77,75,65,69,63,0,72,78],
[52,65,54,50,53,58,0,59],
[56,65,60,60,61,52,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,61,67,63,67,58,49],
[63,0,63,55,52,50,51,53],
[69,67,0,68,74,70,65,57],
[63,75,62,0,63,72,60,56],
[67,78,56,67,0,67,53,51],
[63,80,60,58,63,0,64,63],
[72,79,65,70,77,66,0,65],
[81,77,73,74,79,67,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,63,63,67,66,65,75],
[68,0,62,63,70,76,64,73],
[67,68,0,65,72,70,64,71],
[67,67,65,0,72,72,57,76],
[63,60,58,58,0,65,57,64],
[64,54,60,58,65,0,61,65],
[65,66,66,73,73,69,0,80],
[55,57,59,54,66,65,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,61,65,60,67,57,69],
[62,0,50,63,62,65,59,71],
[69,80,0,63,68,88,62,79],
[65,67,67,0,62,77,60,83],
[70,68,62,68,0,75,60,66],
[63,65,42,53,55,0,54,65],
[73,71,68,70,70,76,0,64],
[61,59,51,47,64,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,76,65,69,70,71,68],
[67,0,75,65,58,56,70,75],
[54,55,0,57,62,51,58,61],
[65,65,73,0,60,59,69,61],
[61,72,68,70,0,53,61,68],
[60,74,79,71,77,0,63,80],
[59,60,72,61,69,67,0,68],
[62,55,69,69,62,50,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,66,69,58,68,66,62],
[61,0,72,75,69,74,72,77],
[64,58,0,64,67,67,69,66],
[61,55,66,0,62,61,60,55],
[72,61,63,68,0,71,70,67],
[62,56,63,69,59,0,64,64],
[64,58,61,70,60,66,0,73],
[68,53,64,75,63,66,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,66,63,65,69,66,74],
[58,0,63,58,66,76,64,66],
[64,67,0,63,64,67,68,71],
[67,72,67,0,61,76,64,77],
[65,64,66,69,0,69,59,67],
[61,54,63,54,61,0,55,64],
[64,66,62,66,71,75,0,67],
[56,64,59,53,63,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,62,61,56,77,51,66],
[63,0,65,62,60,47,62,69],
[68,65,0,47,52,48,51,69],
[69,68,83,0,60,76,64,81],
[74,70,78,70,0,75,59,70],
[53,83,82,54,55,0,68,75],
[79,68,79,66,71,62,0,91],
[64,61,61,49,60,55,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,70,65,74,67,69,64],
[65,0,61,71,56,71,69,64],
[60,69,0,65,63,67,60,67],
[65,59,65,0,56,70,62,70],
[56,74,67,74,0,78,67,64],
[63,59,63,60,52,0,56,54],
[61,61,70,68,63,74,0,70],
[66,66,63,60,66,76,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,66,69,89,74,65],
[59,0,68,59,66,77,63,67],
[64,62,0,55,58,72,67,58],
[64,71,75,0,70,77,76,63],
[61,64,72,60,0,69,73,68],
[41,53,58,53,61,0,65,52],
[56,67,63,54,57,65,0,57],
[65,63,72,67,62,78,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,70,75,70,78,69,61],
[62,0,64,72,54,74,63,58],
[60,66,0,70,68,66,64,53],
[55,58,60,0,56,60,58,53],
[60,76,62,74,0,70,62,54],
[52,56,64,70,60,0,65,60],
[61,67,66,72,68,65,0,70],
[69,72,77,77,76,70,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,64,66,65,62,67,67],
[58,0,76,70,68,68,66,64],
[66,54,0,68,58,59,65,56],
[64,60,62,0,64,65,64,57],
[65,62,72,66,0,64,71,59],
[68,62,71,65,66,0,76,61],
[63,64,65,66,59,54,0,59],
[63,66,74,73,71,69,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,79,80,62,77,112,48],
[66,0,64,48,49,64,64,35],
[51,66,0,33,46,48,48,51],
[50,82,97,0,97,80,84,66],
[68,81,84,33,0,81,83,83],
[53,66,82,50,49,0,68,50],
[18,66,82,46,47,62,0,33],
[82,95,79,64,47,80,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,73,65,75,81,72,70],
[62,0,66,63,63,64,58,65],
[57,64,0,66,63,73,61,68],
[65,67,64,0,63,72,61,70],
[55,67,67,67,0,65,65,60],
[49,66,57,58,65,0,54,58],
[58,72,69,69,65,76,0,65],
[60,65,62,60,70,72,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,64,62,54,67,64,50],
[70,0,60,61,67,60,69,60],
[66,70,0,71,71,71,80,65],
[68,69,59,0,68,67,73,67],
[76,63,59,62,0,69,71,59],
[63,70,59,63,61,0,74,59],
[66,61,50,57,59,56,0,54],
[80,70,65,63,71,71,76,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,56,51,73,61,66,65],
[71,0,76,69,72,63,58,68],
[74,54,0,66,67,66,60,62],
[79,61,64,0,78,70,54,69],
[57,58,63,52,0,65,51,70],
[69,67,64,60,65,0,57,64],
[64,72,70,76,79,73,0,72],
[65,62,68,61,60,66,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,72,50,77,89,59,43],
[64,0,84,70,71,63,66,53],
[58,46,0,58,84,57,38,43],
[80,60,72,0,78,68,67,42],
[53,59,46,52,0,60,47,35],
[41,67,73,62,70,0,49,62],
[71,64,92,63,83,81,0,67],
[87,77,87,88,95,68,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,35,50,48,38,49,58],
[83,0,52,56,62,59,59,62],
[95,78,0,68,66,63,54,92],
[80,74,62,0,62,68,67,71],
[82,68,64,68,0,64,78,68],
[92,71,67,62,66,0,68,83],
[81,71,76,63,52,62,0,81],
[72,68,38,59,62,47,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,66,67,74,64,64,82],
[59,0,57,59,76,65,72,72],
[64,73,0,59,69,66,65,77],
[63,71,71,0,79,73,72,74],
[56,54,61,51,0,55,58,69],
[66,65,64,57,75,0,62,72],
[66,58,65,58,72,68,0,73],
[48,58,53,56,61,58,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,53,65,77,98,68,82],
[65,0,52,63,67,95,62,65],
[77,78,0,69,64,93,80,70],
[65,67,61,0,76,96,75,71],
[53,63,66,54,0,93,81,75],
[32,35,37,34,37,0,38,62],
[62,68,50,55,49,92,0,64],
[48,65,60,59,55,68,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,69,49,72,43,89,67],
[58,0,66,61,72,57,72,62],
[61,64,0,58,72,48,84,59],
[81,69,72,0,77,65,77,64],
[58,58,58,53,0,54,77,73],
[87,73,82,65,76,0,95,81],
[41,58,46,53,53,35,0,51],
[63,68,71,66,57,49,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,82,73,64,68,78,75,75],
[48,0,62,73,63,60,69,76],
[57,68,0,65,65,46,66,60],
[66,57,65,0,62,46,62,57],
[62,67,65,68,0,55,57,73],
[52,70,84,84,75,0,77,73],
[55,61,64,68,73,53,0,66],
[55,54,70,73,57,57,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,59,72,55,70,63],
[71,0,71,48,56,53,68,63],
[64,59,0,51,51,40,71,69],
[71,82,79,0,78,65,84,74],
[58,74,79,52,0,58,78,74],
[75,77,90,65,72,0,81,76],
[60,62,59,46,52,49,0,56],
[67,67,61,56,56,54,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,70,54,77,69,51,56],
[64,0,71,56,68,81,64,58],
[60,59,0,57,69,72,52,58],
[76,74,73,0,71,81,69,65],
[53,62,61,59,0,68,59,63],
[61,49,58,49,62,0,56,52],
[79,66,78,61,71,74,0,65],
[74,72,72,65,67,78,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,77,65,75,69,81,71],
[52,0,60,78,59,55,78,68],
[53,70,0,47,73,57,69,72],
[65,52,83,0,77,56,77,83],
[55,71,57,53,0,55,75,57],
[61,75,73,74,75,0,99,73],
[49,52,61,53,55,31,0,60],
[59,62,58,47,73,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,72,61,64,65,65,63],
[59,0,72,61,57,54,58,68],
[58,58,0,55,60,59,59,58],
[69,69,75,0,64,64,68,66],
[66,73,70,66,0,58,57,61],
[65,76,71,66,72,0,66,65],
[65,72,71,62,73,64,0,61],
[67,62,72,64,69,65,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,75,71,53,51,58,71],
[66,0,85,74,83,65,56,101],
[55,45,0,70,62,60,58,76],
[59,56,60,0,41,60,68,72],
[77,47,68,89,0,69,64,81],
[79,65,70,70,61,0,67,93],
[72,74,72,62,66,63,0,90],
[59,29,54,58,49,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,59,69,78,54,68,55],
[54,0,67,60,42,41,44,45],
[71,63,0,69,70,56,75,73],
[61,70,61,0,60,58,66,46],
[52,88,60,70,0,66,76,53],
[76,89,74,72,64,0,83,65],
[62,86,55,64,54,47,0,49],
[75,85,57,84,77,65,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,67,63,65,62,70,70],
[50,0,55,35,58,49,61,54],
[63,75,0,59,77,68,67,67],
[67,95,71,0,71,79,72,62],
[65,72,53,59,0,64,59,59],
[68,81,62,51,66,0,75,72],
[60,69,63,58,71,55,0,45],
[60,76,63,68,71,58,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,58,30,51,44,67,27],
[61,0,51,78,48,22,79,49],
[72,79,0,74,49,48,92,62],
[100,52,56,0,64,27,104,65],
[79,82,81,66,0,80,81,51],
[86,108,82,103,50,0,106,65],
[63,51,38,26,49,24,0,36],
[103,81,68,65,79,65,94,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,71,70,71,63,62,61],
[61,0,73,71,74,70,66,64],
[59,57,0,59,54,65,55,63],
[60,59,71,0,68,64,58,64],
[59,56,76,62,0,65,58,64],
[67,60,65,66,65,0,59,74],
[68,64,75,72,72,71,0,67],
[69,66,67,66,66,56,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,60,66,68,66,73,77],
[68,0,59,59,66,62,67,76],
[70,71,0,67,64,76,71,69],
[64,71,63,0,65,72,66,75],
[62,64,66,65,0,64,65,67],
[64,68,54,58,66,0,68,66],
[57,63,59,64,65,62,0,68],
[53,54,61,55,63,64,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,77,66,63,67,73,77],
[62,0,58,59,52,70,57,56],
[53,72,0,72,63,73,71,76],
[64,71,58,0,69,78,78,75],
[67,78,67,61,0,78,69,76],
[63,60,57,52,52,0,54,64],
[57,73,59,52,61,76,0,71],
[53,74,54,55,54,66,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,31,31,79,79,78,63],
[83,0,31,46,63,78,62,63],
[99,99,0,81,63,94,98,79],
[99,84,49,0,64,79,98,65],
[51,67,67,66,0,98,82,82],
[51,52,36,51,32,0,66,48],
[52,68,32,32,48,64,0,48],
[67,67,51,65,48,82,82,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,68,66,70,68,69,71],
[68,0,66,64,62,65,69,64],
[62,64,0,68,59,69,66,55],
[64,66,62,0,59,59,70,61],
[60,68,71,71,0,72,72,66],
[62,65,61,71,58,0,62,58],
[61,61,64,60,58,68,0,57],
[59,66,75,69,64,72,73,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,78,66,61,113,47],
[50,0,66,66,66,82,66,51],
[66,64,0,79,66,82,66,99],
[52,64,51,0,67,66,52,69],
[64,64,64,63,0,64,64,81],
[69,48,48,64,66,0,85,51],
[17,64,64,78,66,45,0,33],
[83,79,31,61,49,79,97,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,19,55,56,92,19,56],
[57,0,37,76,57,75,19,76],
[111,93,0,111,56,93,73,94],
[75,54,19,0,56,54,19,55],
[74,73,74,74,0,74,56,93],
[38,55,37,76,56,0,19,94],
[111,111,57,111,74,111,0,94],
[74,54,36,75,37,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,63,69,68,64,73,64],
[55,0,69,62,69,70,56,60],
[67,61,0,56,57,71,61,67],
[61,68,74,0,65,66,67,74],
[62,61,73,65,0,67,64,68],
[66,60,59,64,63,0,59,65],
[57,74,69,63,66,71,0,64],
[66,70,63,56,62,65,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,75,72,71,78,69,67,64],
[55,0,73,58,56,62,65,55],
[58,57,0,61,68,67,64,56],
[59,72,69,0,78,83,86,68],
[52,74,62,52,0,68,71,72],
[61,68,63,47,62,0,62,61],
[63,65,66,44,59,68,0,55],
[66,75,74,62,58,69,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,66,73,56,64,61,64],
[71,0,79,85,60,69,83,74],
[64,51,0,67,52,55,59,56],
[57,45,63,0,62,59,58,52],
[74,70,78,68,0,53,57,61],
[66,61,75,71,77,0,64,69],
[69,47,71,72,73,66,0,72],
[66,56,74,78,69,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,66,80,79,62,64,74],
[57,0,70,78,73,58,64,64],
[64,60,0,73,71,65,59,66],
[50,52,57,0,56,43,52,64],
[51,57,59,74,0,50,62,62],
[68,72,65,87,80,0,77,91],
[66,66,71,78,68,53,0,66],
[56,66,64,66,68,39,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,78,78,78,78,78,25,51],
[52,0,78,25,27,78,77,77],
[52,52,0,52,54,80,77,77],
[52,105,78,0,54,105,52,78],
[52,103,76,76,0,78,77,103],
[52,52,50,25,52,0,77,77],
[105,53,53,78,53,53,0,78],
[79,53,53,52,27,53,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,70,55,63,52,58,69],
[66,0,66,76,58,57,62,66],
[60,64,0,65,70,56,56,70],
[75,54,65,0,74,63,60,69],
[67,72,60,56,0,60,51,71],
[78,73,74,67,70,0,71,63],
[72,68,74,70,79,59,0,73],
[61,64,60,61,59,67,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,59,61,59,51,67,61],
[76,0,64,79,76,70,72,79],
[71,66,0,72,70,67,69,64],
[69,51,58,0,65,61,64,63],
[71,54,60,65,0,66,69,57],
[79,60,63,69,64,0,71,67],
[63,58,61,66,61,59,0,59],
[69,51,66,67,73,63,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,65,55,62,58,57,64],
[63,0,73,62,76,56,57,59],
[65,57,0,56,63,64,52,60],
[75,68,74,0,78,64,67,68],
[68,54,67,52,0,60,64,61],
[72,74,66,66,70,0,53,73],
[73,73,78,63,66,77,0,65],
[66,71,70,62,69,57,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,64,66,67,58,58,57],
[68,0,58,61,64,61,50,62],
[66,72,0,66,59,58,54,54],
[64,69,64,0,76,65,77,68],
[63,66,71,54,0,56,57,56],
[72,69,72,65,74,0,65,57],
[72,80,76,53,73,65,0,49],
[73,68,76,62,74,73,81,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,74,67,67,63,70,66,73],
[56,0,59,59,55,66,51,64],
[63,71,0,65,72,71,69,68],
[63,71,65,0,67,62,62,71],
[67,75,58,63,0,69,69,76],
[60,64,59,68,61,0,60,65],
[64,79,61,68,61,70,0,65],
[57,66,62,59,54,65,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,57,69,69,62,49,68],
[70,0,47,70,60,61,50,58],
[73,83,0,82,102,74,82,63],
[61,60,48,0,51,80,39,49],
[61,70,28,79,0,50,78,41],
[68,69,56,50,80,0,58,68],
[81,80,48,91,52,72,0,40],
[62,72,67,81,89,62,90,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,68,63,65,62,57,57],
[71,0,82,67,84,63,64,71],
[62,48,0,67,68,51,61,51],
[67,63,63,0,68,60,63,56],
[65,46,62,62,0,64,53,56],
[68,67,79,70,66,0,55,55],
[73,66,69,67,77,75,0,64],
[73,59,79,74,74,75,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,72,74,68,67,65,67],
[69,0,64,86,76,63,67,75],
[58,66,0,69,67,58,71,53],
[56,44,61,0,62,60,59,56],
[62,54,63,68,0,65,72,63],
[63,67,72,70,65,0,68,70],
[65,63,59,71,58,62,0,53],
[63,55,77,74,67,60,77,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,60,65,67,66,64,72],
[54,0,59,53,55,57,65,64],
[70,71,0,67,63,66,65,66],
[65,77,63,0,60,72,76,66],
[63,75,67,70,0,69,67,68],
[64,73,64,58,61,0,59,74],
[66,65,65,54,63,71,0,72],
[58,66,64,64,62,56,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,70,74,76,58,65,60],
[60,0,76,73,75,50,61,64],
[60,54,0,65,63,55,52,60],
[56,57,65,0,65,62,48,62],
[54,55,67,65,0,49,45,63],
[72,80,75,68,81,0,65,63],
[65,69,78,82,85,65,0,69],
[70,66,70,68,67,67,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,60,49,66,60,56,66],
[71,0,71,55,68,62,64,72],
[70,59,0,59,73,71,67,71],
[81,75,71,0,78,60,70,82],
[64,62,57,52,0,59,56,66],
[70,68,59,70,71,0,65,76],
[74,66,63,60,74,65,0,70],
[64,58,59,48,64,54,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,73,68,59,73,58,66],
[72,0,82,73,66,76,61,69],
[57,48,0,78,66,72,75,65],
[62,57,52,0,60,71,65,59],
[71,64,64,70,0,63,68,64],
[57,54,58,59,67,0,69,64],
[72,69,55,65,62,61,0,60],
[64,61,65,71,66,66,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,64,98,65,97,97],
[66,0,65,65,98,66,97,98],
[66,65,0,65,98,65,98,97],
[66,65,65,0,98,66,97,65],
[32,32,32,32,0,32,65,32],
[65,64,65,64,98,0,97,32],
[33,33,32,33,65,33,0,65],
[33,32,33,65,98,98,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,64,54,61,46,56],
[68,0,50,72,58,61,56,70],
[76,80,0,74,65,76,67,77],
[66,58,56,0,60,59,51,58],
[76,72,65,70,0,73,62,76],
[69,69,54,71,57,0,54,63],
[84,74,63,79,68,76,0,67],
[74,60,53,72,54,67,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,55,66,59,64,58,69],
[66,0,45,52,34,65,52,49],
[75,85,0,71,57,81,73,75],
[64,78,59,0,68,82,59,70],
[71,96,73,62,0,67,68,80],
[66,65,49,48,63,0,52,57],
[72,78,57,71,62,78,0,51],
[61,81,55,60,50,73,79,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,76,79,66,62,71,61,62],
[54,0,54,51,64,54,62,54],
[51,76,0,64,64,60,61,61],
[64,79,66,0,65,63,62,66],
[68,66,66,65,0,58,57,63],
[59,76,70,67,72,0,66,69],
[69,68,69,68,73,64,0,72],
[68,76,69,64,67,61,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,85,62,68,88,63,63],
[65,0,63,85,46,44,42,65],
[45,67,0,107,23,66,42,64],
[68,45,23,0,46,68,46,68],
[62,84,107,84,0,65,63,62],
[42,86,64,62,65,0,65,65],
[67,88,88,84,67,65,0,45],
[67,65,66,62,68,65,85,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,60,59,58,50,58,61],
[73,0,55,64,62,70,66,62],
[70,75,0,64,70,67,67,60],
[71,66,66,0,65,62,67,63],
[72,68,60,65,0,55,66,65],
[80,60,63,68,75,0,68,63],
[72,64,63,63,64,62,0,62],
[69,68,70,67,65,67,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,69,74,72,73,70,64],
[66,0,64,66,59,69,69,65],
[61,66,0,63,55,69,61,65],
[56,64,67,0,61,70,73,64],
[58,71,75,69,0,77,63,65],
[57,61,61,60,53,0,62,63],
[60,61,69,57,67,68,0,59],
[66,65,65,66,65,67,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,50,61,79,56,55,51],
[73,0,69,76,74,66,65,60],
[80,61,0,71,81,67,59,69],
[69,54,59,0,68,68,59,52],
[51,56,49,62,0,50,57,54],
[74,64,63,62,80,0,66,68],
[75,65,71,71,73,64,0,64],
[79,70,61,78,76,62,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,58,60,42,64,70,71],
[66,0,53,63,59,64,60,76],
[72,77,0,63,69,78,69,77],
[70,67,67,0,55,59,74,69],
[88,71,61,75,0,69,79,86],
[66,66,52,71,61,0,75,73],
[60,70,61,56,51,55,0,62],
[59,54,53,61,44,57,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,74,56,60,75,50,64],
[71,0,59,75,69,69,58,47],
[56,71,0,73,61,76,54,53],
[74,55,57,0,52,77,63,60],
[70,61,69,78,0,80,65,64],
[55,61,54,53,50,0,62,54],
[80,72,76,67,65,68,0,65],
[66,83,77,70,66,76,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,87,96,59,70,91,97],
[50,0,63,89,73,71,68,95],
[43,67,0,62,78,67,76,80],
[34,41,68,0,63,62,84,79],
[71,57,52,67,0,76,85,76],
[60,59,63,68,54,0,74,77],
[39,62,54,46,45,56,0,62],
[33,35,50,51,54,53,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,59,67,54,55,54,48],
[62,0,81,54,49,57,68,67],
[71,49,0,53,38,57,53,42],
[63,76,77,0,59,69,80,52],
[76,81,92,71,0,77,63,64],
[75,73,73,61,53,0,82,61],
[76,62,77,50,67,48,0,56],
[82,63,88,78,66,69,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,64,68,61,56,66,60],
[69,0,69,65,70,65,59,65],
[66,61,0,76,66,64,73,75],
[62,65,54,0,56,57,62,51],
[69,60,64,74,0,71,63,61],
[74,65,66,73,59,0,62,66],
[64,71,57,68,67,68,0,71],
[70,65,55,79,69,64,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,56,55,71,60,53,58],
[61,0,65,76,74,78,63,58],
[74,65,0,75,85,72,76,65],
[75,54,55,0,71,85,61,55],
[59,56,45,59,0,59,54,47],
[70,52,58,45,71,0,43,46],
[77,67,54,69,76,87,0,62],
[72,72,65,75,83,84,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,86,64,64,65,87,43,44],
[44,0,43,43,65,65,43,22],
[66,87,0,86,43,88,87,45],
[66,87,44,0,66,66,65,45],
[65,65,87,64,0,87,87,65],
[43,65,42,64,43,0,42,65],
[87,87,43,65,43,88,0,66],
[86,108,85,85,65,65,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,77,68,67,70,79,61,72],
[53,0,59,61,62,63,60,66],
[62,71,0,51,53,56,61,58],
[63,69,79,0,69,75,59,80],
[60,68,77,61,0,64,72,70],
[51,67,74,55,66,0,63,67],
[69,70,69,71,58,67,0,77],
[58,64,72,50,60,63,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,72,68,61,66,77,71],
[58,0,70,59,59,64,67,75],
[58,60,0,51,66,54,60,61],
[62,71,79,0,67,66,73,68],
[69,71,64,63,0,56,75,66],
[64,66,76,64,74,0,84,74],
[53,63,70,57,55,46,0,61],
[59,55,69,62,64,56,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,82,67,49,46,58,49],
[74,0,74,82,66,79,70,63],
[48,56,0,68,48,54,41,55],
[63,48,62,0,54,55,67,52],
[81,64,82,76,0,81,75,67],
[84,51,76,75,49,0,68,64],
[72,60,89,63,55,62,0,68],
[81,67,75,78,63,66,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,57,77,58,67,61,67],
[73,0,74,73,66,65,64,69],
[73,56,0,78,73,68,70,65],
[53,57,52,0,47,49,48,56],
[72,64,57,83,0,57,57,68],
[63,65,62,81,73,0,67,64],
[69,66,60,82,73,63,0,67],
[63,61,65,74,62,66,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,65,58,58,57,59,71],
[67,0,69,58,57,66,68,65],
[65,61,0,69,63,65,65,63],
[72,72,61,0,65,68,71,65],
[72,73,67,65,0,66,62,76],
[73,64,65,62,64,0,67,67],
[71,62,65,59,68,63,0,68],
[59,65,67,65,54,63,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,70,58,55,65,66,64],
[71,0,74,60,67,61,68,69],
[60,56,0,58,56,71,69,62],
[72,70,72,0,62,73,69,67],
[75,63,74,68,0,78,68,71],
[65,69,59,57,52,0,73,63],
[64,62,61,61,62,57,0,64],
[66,61,68,63,59,67,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 130, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_130.csv", index=False, header=False)