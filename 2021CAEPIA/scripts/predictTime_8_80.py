
import numpy as np
import pandas as pd
import time
import kemeny.azzinimunda.azzinimunda3 as am3

rep = 3
results = np.zeros(0).reshape(0,7+rep)

##############################################################
om = np.array([
[0,46,43,34,47,42,58,45],
[34,0,35,33,44,30,50,40],
[37,45,0,40,50,41,51,36],
[46,47,40,0,60,45,56,45],
[33,36,30,20,0,34,47,38],
[38,50,39,35,46,0,64,41],
[22,30,29,24,33,16,0,25],
[35,40,44,35,42,39,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,51,37,38,49,41,36],
[49,0,48,51,46,43,34,40],
[29,32,0,33,31,40,36,35],
[43,29,47,0,35,43,43,39],
[42,34,49,45,0,56,36,39],
[31,37,40,37,24,0,32,38],
[39,46,44,37,44,48,0,41],
[44,40,45,41,41,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 2, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,35,40,37,38,32],
[41,0,42,39,40,41,34,36],
[41,38,0,40,39,38,34,33],
[45,41,40,0,41,41,35,42],
[40,40,41,39,0,40,40,34],
[43,39,42,39,40,0,41,32],
[42,46,46,45,40,39,0,44],
[48,44,47,38,46,48,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 3, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,29,34,29,31,45],
[37,0,34,37,34,31,36,42],
[41,46,0,34,37,42,33,41],
[51,43,46,0,46,37,44,47],
[46,46,43,34,0,36,33,53],
[51,49,38,43,44,0,35,45],
[49,44,47,36,47,45,0,45],
[35,38,39,33,27,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 4, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,36,41,42,44,43],
[34,0,38,39,39,39,30,39],
[35,42,0,42,43,45,40,42],
[44,41,38,0,35,42,36,34],
[39,41,37,45,0,47,37,44],
[38,41,35,38,33,0,32,34],
[36,50,40,44,43,48,0,44],
[37,41,38,46,36,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 5, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,30,62,64,53,36,37],
[34,0,64,60,43,46,43,34],
[50,16,0,50,34,23,16,34],
[18,20,30,0,38,46,20,20],
[16,37,46,42,0,46,0,20],
[27,34,57,34,34,0,27,27],
[44,37,64,60,80,53,0,55],
[43,46,46,60,60,53,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 6, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,49,44,40,51,48],
[37,0,36,40,36,36,42,42],
[36,44,0,43,38,41,43,46],
[31,40,37,0,36,41,37,41],
[36,44,42,44,0,41,40,49],
[40,44,39,39,39,0,44,43],
[29,38,37,43,40,36,0,40],
[32,38,34,39,31,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 7, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,36,35,43,40,41],
[39,0,27,39,25,39,33,25],
[43,53,0,48,35,44,43,37],
[44,41,32,0,30,35,44,30],
[45,55,45,50,0,41,45,37],
[37,41,36,45,39,0,40,39],
[40,47,37,36,35,40,0,36],
[39,55,43,50,43,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 8, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,39,45,37,39,37],
[37,0,40,37,38,45,43,36],
[39,40,0,41,31,41,43,38],
[41,43,39,0,42,37,38,39],
[35,42,49,38,0,41,45,48],
[43,35,39,43,39,0,37,37],
[41,37,37,42,35,43,0,45],
[43,44,42,41,32,43,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 9, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,41,47,42,45,37,39],
[32,0,44,47,37,42,32,39],
[39,36,0,50,33,34,42,46],
[33,33,30,0,29,26,29,32],
[38,43,47,51,0,48,33,38],
[35,38,46,54,32,0,37,40],
[43,48,38,51,47,43,0,39],
[41,41,34,48,42,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 10, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,34,37,34,47,32,38],
[54,0,48,52,40,54,44,49],
[46,32,0,52,44,53,39,49],
[43,28,28,0,36,42,39,40],
[46,40,36,44,0,53,39,48],
[33,26,27,38,27,0,26,32],
[48,36,41,41,41,54,0,47],
[42,31,31,40,32,48,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 11, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,41,39,38,39,39,46],
[52,0,43,44,43,52,40,47],
[39,37,0,46,35,44,37,40],
[41,36,34,0,40,36,37,51],
[42,37,45,40,0,43,43,42],
[41,28,36,44,37,0,45,44],
[41,40,43,43,37,35,0,45],
[34,33,40,29,38,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 12, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,32,37,39,34,36,40],
[39,0,31,41,38,36,42,34],
[48,49,0,37,55,44,44,45],
[43,39,43,0,53,47,34,39],
[41,42,25,27,0,35,28,36],
[46,44,36,33,45,0,37,41],
[44,38,36,46,52,43,0,46],
[40,46,35,41,44,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 13, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,36,39,36,45,36],
[35,0,28,34,38,36,39,38],
[38,52,0,36,45,40,47,40],
[44,46,44,0,45,43,44,39],
[41,42,35,35,0,37,45,40],
[44,44,40,37,43,0,45,41],
[35,41,33,36,35,35,0,39],
[44,42,40,41,40,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 14, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,47,46,38,39,38],
[38,0,37,32,44,39,43,42],
[40,43,0,35,41,39,41,37],
[33,48,45,0,48,51,44,38],
[34,36,39,32,0,39,41,32],
[42,41,41,29,41,0,36,39],
[41,37,39,36,39,44,0,48],
[42,38,43,42,48,41,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 15, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,33,44,41,48,36],
[44,0,33,39,43,44,47,44],
[46,47,0,38,47,40,51,50],
[47,41,42,0,42,41,39,48],
[36,37,33,38,0,50,37,33],
[39,36,40,39,30,0,36,40],
[32,33,29,41,43,44,0,34],
[44,36,30,32,47,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 16, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,44,43,46,42,34],
[42,0,39,33,35,41,39,35],
[40,41,0,36,39,39,47,36],
[36,47,44,0,39,42,43,41],
[37,45,41,41,0,48,50,39],
[34,39,41,38,32,0,42,34],
[38,41,33,37,30,38,0,36],
[46,45,44,39,41,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 17, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,33,33,37,37,22,34],
[54,0,52,40,44,45,42,40],
[47,28,0,44,48,48,25,36],
[47,40,36,0,43,40,33,41],
[43,36,32,37,0,33,24,28],
[43,35,32,40,47,0,32,40],
[58,38,55,47,56,48,0,48],
[46,40,44,39,52,40,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 18, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,38,39,37,29,33],
[42,0,38,38,49,39,35,38],
[44,42,0,40,43,38,37,37],
[42,42,40,0,47,38,33,38],
[41,31,37,33,0,28,28,26],
[43,41,42,42,52,0,40,36],
[51,45,43,47,52,40,0,44],
[47,42,43,42,54,44,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 19, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,32,32,31,34,35,31],
[47,0,50,43,40,42,43,40],
[48,30,0,37,32,39,39,35],
[48,37,43,0,40,41,42,45],
[49,40,48,40,0,37,50,39],
[46,38,41,39,43,0,46,39],
[45,37,41,38,30,34,0,34],
[49,40,45,35,41,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 20, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,39,42,56,32,45,42],
[48,0,37,47,47,43,50,46],
[41,43,0,44,55,36,45,41],
[38,33,36,0,44,25,33,32],
[24,33,25,36,0,21,37,30],
[48,37,44,55,59,0,46,44],
[35,30,35,47,43,34,0,32],
[38,34,39,48,50,36,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 21, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,35,45,48,58,39],
[32,0,48,52,38,54,64,45],
[37,32,0,35,41,53,51,36],
[45,28,45,0,30,47,37,31],
[35,42,39,50,0,48,58,40],
[32,26,27,33,32,0,39,33],
[22,16,29,43,22,41,0,32],
[41,35,44,49,40,47,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 22, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,39,42,40,45,45],
[42,0,37,41,51,42,44,42],
[36,43,0,41,40,39,53,48],
[41,39,39,0,38,43,42,44],
[38,29,40,42,0,28,46,45],
[40,38,41,37,52,0,43,55],
[35,36,27,38,34,37,0,39],
[35,38,32,36,35,25,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 23, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,37,34,40,41,41],
[47,0,49,41,32,41,42,46],
[42,31,0,40,31,33,40,41],
[43,39,40,0,34,39,43,39],
[46,48,49,46,0,46,51,35],
[40,39,47,41,34,0,40,40],
[39,38,40,37,29,40,0,34],
[39,34,39,41,45,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 24, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,35,32,32,52,49,32],
[26,0,23,28,0,40,12,44],
[45,57,0,27,29,45,36,29],
[48,52,53,0,34,39,36,32],
[48,80,51,46,0,51,39,55],
[28,40,35,41,29,0,26,54],
[31,68,44,44,41,54,0,52],
[48,36,51,48,25,26,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 25, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,38,32,34,39,45],
[45,0,41,45,39,50,51,44],
[44,39,0,48,41,42,46,44],
[42,35,32,0,41,26,31,44],
[48,41,39,39,0,40,45,50],
[46,30,38,54,40,0,49,45],
[41,29,34,49,35,31,0,42],
[35,36,36,36,30,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 26, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,31,36,25,28,35],
[50,0,34,21,35,40,26,49],
[48,46,0,46,56,44,34,49],
[49,59,34,0,36,33,21,46],
[44,45,24,44,0,38,32,47],
[55,40,36,47,42,0,41,35],
[52,54,46,59,48,39,0,50],
[45,31,31,34,33,45,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 27, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,67,67,25,25,33,47,25],
[13,0,33,13,13,46,22,13],
[13,47,0,13,38,46,22,38],
[55,67,67,0,34,42,47,47],
[55,67,42,46,0,42,22,80],
[47,34,34,38,38,0,47,38],
[33,58,58,33,58,33,0,58],
[55,67,42,33,0,42,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 28, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,37,33,37,43,39],
[38,0,40,46,43,46,48,39],
[45,40,0,45,43,40,40,46],
[43,34,35,0,37,37,29,42],
[47,37,37,43,0,42,38,48],
[43,34,40,43,38,0,42,47],
[37,32,40,51,42,38,0,40],
[41,41,34,38,32,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 29, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,42,40,35,40,37,47],
[45,0,40,34,28,30,31,42],
[38,40,0,36,29,32,41,33],
[40,46,44,0,27,35,36,50],
[45,52,51,53,0,57,38,51],
[40,50,48,45,23,0,30,42],
[43,49,39,44,42,50,0,40],
[33,38,47,30,29,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 30, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,44,44,46,46,51],
[40,0,43,44,36,42,45,50],
[32,37,0,38,37,43,43,47],
[36,36,42,0,33,52,34,44],
[36,44,43,47,0,39,44,51],
[34,38,37,28,41,0,36,45],
[34,35,37,46,36,44,0,46],
[29,30,33,36,29,35,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 31, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,38,48,46,41,40],
[40,0,35,32,43,45,32,31],
[39,45,0,42,47,45,35,36],
[42,48,38,0,51,47,33,35],
[32,37,33,29,0,33,23,29],
[34,35,35,33,47,0,35,27],
[39,48,45,47,57,45,0,41],
[40,49,44,45,51,53,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 32, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,60,50,34,50,51,41],
[36,0,51,45,40,35,38,33],
[20,29,0,23,33,32,28,34],
[30,35,57,0,28,25,32,47],
[46,40,47,52,0,59,39,45],
[30,45,48,55,21,0,33,47],
[29,42,52,48,41,47,0,53],
[39,47,46,33,35,33,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 33, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,46,35,42,35,33],
[36,0,38,38,29,37,35,31],
[29,42,0,39,35,37,35,39],
[34,42,41,0,37,38,36,35],
[45,51,45,43,0,43,40,44],
[38,43,43,42,37,0,32,38],
[45,45,45,44,40,48,0,40],
[47,49,41,45,36,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 34, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,45,34,35,33,41],
[39,0,46,49,34,31,34,42],
[41,34,0,44,32,38,40,42],
[35,31,36,0,36,39,27,41],
[46,46,48,44,0,42,33,39],
[45,49,42,41,38,0,38,41],
[47,46,40,53,47,42,0,43],
[39,38,38,39,41,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 35, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,31,29,32,40,38,32],
[40,0,39,43,35,39,34,35],
[49,41,0,37,40,37,35,30],
[51,37,43,0,33,35,30,31],
[48,45,40,47,0,38,44,33],
[40,41,43,45,42,0,44,43],
[42,46,45,50,36,36,0,31],
[48,45,50,49,47,37,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 36, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,43,35,43,39,35],
[42,0,38,37,35,46,33,37],
[46,42,0,43,37,47,46,41],
[37,43,37,0,34,45,40,41],
[45,45,43,46,0,49,39,43],
[37,34,33,35,31,0,32,32],
[41,47,34,40,41,48,0,37],
[45,43,39,39,37,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 37, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,40,38,47,47,49],
[38,0,39,38,43,40,44,47],
[40,41,0,46,41,45,40,45],
[40,42,34,0,36,39,36,35],
[42,37,39,44,0,42,39,43],
[33,40,35,41,38,0,38,39],
[33,36,40,44,41,42,0,45],
[31,33,35,45,37,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 38, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,47,39,46,50,34],
[37,0,40,46,34,39,45,29],
[39,40,0,49,37,44,48,37],
[33,34,31,0,34,41,39,30],
[41,46,43,46,0,47,43,40],
[34,41,36,39,33,0,34,31],
[30,35,32,41,37,46,0,32],
[46,51,43,50,40,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 39, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,49,45,38,31,41,41],
[51,0,44,42,48,39,43,49],
[31,36,0,32,31,32,37,35],
[35,38,48,0,52,37,44,43],
[42,32,49,28,0,33,37,43],
[49,41,48,43,47,0,31,53],
[39,37,43,36,43,49,0,47],
[39,31,45,37,37,27,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 40, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,41,45,43,44,43],
[35,0,30,39,42,40,49,39],
[40,50,0,45,46,47,46,50],
[39,41,35,0,41,43,45,38],
[35,38,34,39,0,40,45,37],
[37,40,33,37,40,0,37,33],
[36,31,34,35,35,43,0,39],
[37,41,30,42,43,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 41, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,35,29,40,35,57],
[39,0,39,48,46,45,46,53],
[36,41,0,44,36,36,39,44],
[45,32,36,0,41,32,36,42],
[51,34,44,39,0,44,35,40],
[40,35,44,48,36,0,35,47],
[45,34,41,44,45,45,0,37],
[23,27,36,38,40,33,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 42, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,42,40,47,40,48],
[42,0,41,40,51,51,35,45],
[37,39,0,38,47,45,39,47],
[38,40,42,0,44,51,40,47],
[40,29,33,36,0,40,37,40],
[33,29,35,29,40,0,33,40],
[40,45,41,40,43,47,0,52],
[32,35,33,33,40,40,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 43, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,46,43,47,20,41],
[44,0,38,49,45,47,40,40],
[37,42,0,43,44,46,23,35],
[34,31,37,0,42,47,27,36],
[37,35,36,38,0,46,36,41],
[33,33,34,33,34,0,39,35],
[60,40,57,53,44,41,0,49],
[39,40,45,44,39,45,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 44, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,34,23,32,42,26,53],
[53,0,43,31,45,48,37,55],
[46,37,0,32,32,51,27,46],
[57,49,48,0,46,41,38,54],
[48,35,48,34,0,50,41,50],
[38,32,29,39,30,0,25,48],
[54,43,53,42,39,55,0,46],
[27,25,34,26,30,32,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 45, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,37,43,45,46,36],
[48,0,42,34,40,42,41,40],
[47,38,0,40,39,51,36,35],
[43,46,40,0,43,50,49,45],
[37,40,41,37,0,53,47,37],
[35,38,29,30,27,0,31,35],
[34,39,44,31,33,49,0,35],
[44,40,45,35,43,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 46, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,40,33,24,29,28,26],
[50,0,29,38,46,44,35,27],
[40,51,0,36,35,43,41,47],
[47,42,44,0,55,40,46,40],
[56,34,45,25,0,46,39,30],
[51,36,37,40,34,0,49,31],
[52,45,39,34,41,31,0,34],
[54,53,33,40,50,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 47, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,39,45,40,40,41],
[34,0,40,34,35,33,42,30],
[31,40,0,35,30,29,39,29],
[41,46,45,0,48,31,37,39],
[35,45,50,32,0,36,30,33],
[40,47,51,49,44,0,44,47],
[40,38,41,43,50,36,0,37],
[39,50,51,41,47,33,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 48, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,45,44,43,40,43],
[41,0,39,48,42,43,41,45],
[41,41,0,47,38,39,40,39],
[35,32,33,0,41,32,31,29],
[36,38,42,39,0,35,30,39],
[37,37,41,48,45,0,40,41],
[40,39,40,49,50,40,0,36],
[37,35,41,51,41,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 49, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,33,40,32,38,42],
[45,0,42,36,46,39,40,43],
[37,38,0,32,38,38,35,42],
[47,44,48,0,46,43,38,52],
[40,34,42,34,0,36,34,35],
[48,41,42,37,44,0,38,47],
[42,40,45,42,46,42,0,46],
[38,37,38,28,45,33,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 50, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,49,46,46,40,44,41],
[41,0,45,44,36,32,37,37],
[31,35,0,33,33,31,31,33],
[34,36,47,0,36,33,36,39],
[34,44,47,44,0,35,46,39],
[40,48,49,47,45,0,50,32],
[36,43,49,44,34,30,0,42],
[39,43,47,41,41,48,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 51, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,33,40,38,46,38,44],
[31,0,36,35,39,41,44,36],
[47,44,0,39,45,41,39,42],
[40,45,41,0,41,44,43,47],
[42,41,35,39,0,41,41,39],
[34,39,39,36,39,0,44,39],
[42,36,41,37,39,36,0,37],
[36,44,38,33,41,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 52, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,50,44,37,43,46],
[41,0,37,35,31,33,38,40],
[30,43,0,44,40,44,49,42],
[30,45,36,0,35,31,45,41],
[36,49,40,45,0,43,50,41],
[43,47,36,49,37,0,43,38],
[37,42,31,35,30,37,0,33],
[34,40,38,39,39,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 53, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,35,37,30,54,60,46],
[31,0,43,42,29,49,45,33],
[45,37,0,42,44,55,53,36],
[43,38,38,0,34,60,52,54],
[50,51,36,46,0,45,46,51],
[26,31,25,20,35,0,49,35],
[20,35,27,28,34,31,0,29],
[34,47,44,26,29,45,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 54, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,50,46,30,35,58,69],
[40,0,37,34,39,30,56,66],
[30,43,0,23,49,42,40,34],
[34,46,57,0,32,45,47,65],
[50,41,31,48,0,48,38,50],
[45,50,38,35,32,0,45,49],
[22,24,40,33,42,35,0,56],
[11,14,46,15,30,31,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 55, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,36,45,40,37,44],
[40,0,40,32,39,35,29,34],
[37,40,0,32,41,37,31,39],
[44,48,48,0,43,36,39,46],
[35,41,39,37,0,34,40,41],
[40,45,43,44,46,0,38,42],
[43,51,49,41,40,42,0,47],
[36,46,41,34,39,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 56, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,42,47,47,41,35],
[42,0,42,50,52,39,39,46],
[35,38,0,35,36,44,24,41],
[38,30,45,0,40,34,36,40],
[33,28,44,40,0,37,32,44],
[33,41,36,46,43,0,28,38],
[39,41,56,44,48,52,0,51],
[45,34,39,40,36,42,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 57, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,47,47,46,53,47,50],
[47,0,47,41,49,48,31,47],
[33,33,0,41,41,42,37,41],
[33,39,39,0,50,48,38,41],
[34,31,39,30,0,29,35,37],
[27,32,38,32,51,0,33,38],
[33,49,43,42,45,47,0,46],
[30,33,39,39,43,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 58, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,33,45,40,41,44],
[38,0,41,41,43,49,42,49],
[42,39,0,46,44,45,39,49],
[47,39,34,0,39,44,41,47],
[35,37,36,41,0,38,40,41],
[40,31,35,36,42,0,39,43],
[39,38,41,39,40,41,0,39],
[36,31,31,33,39,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 59, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,50,43,40,44,37],
[46,0,40,48,43,41,43,42],
[42,40,0,45,41,40,45,36],
[30,32,35,0,37,33,39,28],
[37,37,39,43,0,34,38,32],
[40,39,40,47,46,0,42,42],
[36,37,35,41,42,38,0,31],
[43,38,44,52,48,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 60, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,45,48,43,44,43],
[46,0,35,47,46,38,44,48],
[39,45,0,47,39,36,40,42],
[35,33,33,0,38,23,36,42],
[32,34,41,42,0,37,37,45],
[37,42,44,57,43,0,45,51],
[36,36,40,44,43,35,0,46],
[37,32,38,38,35,29,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 61, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,37,31,30,32,40],
[45,0,43,39,38,39,39,43],
[39,37,0,39,44,40,40,42],
[43,41,41,0,39,43,49,43],
[49,42,36,41,0,36,41,44],
[50,41,40,37,44,0,42,45],
[48,41,40,31,39,38,0,46],
[40,37,38,37,36,35,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 62, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,28,43,37,42,38,36],
[48,0,39,42,35,38,42,48],
[52,41,0,42,40,40,43,56],
[37,38,38,0,34,37,35,43],
[43,45,40,46,0,42,52,52],
[38,42,40,43,38,0,48,48],
[42,38,37,45,28,32,0,39],
[44,32,24,37,28,32,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 63, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,44,30,40,40,48,43],
[46,0,42,33,37,41,47,48],
[36,38,0,34,38,35,48,43],
[50,47,46,0,47,37,52,54],
[40,43,42,33,0,35,49,45],
[40,39,45,43,45,0,47,41],
[32,33,32,28,31,33,0,38],
[37,32,37,26,35,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 64, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,41,42,42,46,46],
[42,0,38,38,50,35,39,46],
[40,42,0,47,43,34,39,45],
[39,42,33,0,44,44,28,41],
[38,30,37,36,0,35,38,38],
[38,45,46,36,45,0,40,48],
[34,41,41,52,42,40,0,44],
[34,34,35,39,42,32,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 65, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,42,45,41,35,38],
[47,0,47,38,43,44,37,47],
[42,33,0,38,37,46,34,39],
[38,42,42,0,47,51,35,45],
[35,37,43,33,0,45,41,45],
[39,36,34,29,35,0,37,40],
[45,43,46,45,39,43,0,46],
[42,33,41,35,35,40,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 66, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,20,36,43,32,46,42],
[32,0,39,36,21,27,44,27],
[60,41,0,61,37,42,49,45],
[44,44,19,0,32,20,29,20],
[37,59,43,48,0,45,43,55],
[48,53,38,60,35,0,42,43],
[34,36,31,51,37,38,0,44],
[38,53,35,60,25,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 67, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,38,37,33,36,38],
[44,0,47,43,37,43,41,41],
[44,33,0,42,45,39,33,41],
[42,37,38,0,36,36,39,37],
[43,43,35,44,0,44,42,43],
[47,37,41,44,36,0,39,40],
[44,39,47,41,38,41,0,38],
[42,39,39,43,37,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 68, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,39,37,34,37,37,28],
[51,0,38,45,51,46,40,40],
[41,42,0,40,41,38,34,35],
[43,35,40,0,39,38,32,32],
[46,29,39,41,0,37,34,37],
[43,34,42,42,43,0,39,32],
[43,40,46,48,46,41,0,33],
[52,40,45,48,43,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 69, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,49,51,38,49,37],
[39,0,42,36,57,36,49,25],
[31,38,0,44,60,38,55,28],
[31,44,36,0,47,53,55,47],
[29,23,20,33,0,22,45,32],
[42,44,42,27,58,0,65,41],
[31,31,25,25,35,15,0,25],
[43,55,52,33,48,39,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 70, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,34,33,27,45,34],
[43,0,48,49,41,30,36,39],
[35,32,0,40,33,36,25,45],
[46,31,40,0,59,35,49,60],
[47,39,47,21,0,39,44,35],
[53,50,44,45,41,0,39,48],
[35,44,55,31,36,41,0,40],
[46,41,35,20,45,32,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 71, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,47,43,48,42,45],
[45,0,49,47,44,39,45,49],
[37,31,0,44,49,50,39,44],
[33,33,36,0,30,34,48,36],
[37,36,31,50,0,42,39,42],
[32,41,30,46,38,0,38,41],
[38,35,41,32,41,42,0,42],
[35,31,36,44,38,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 72, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,30,38,40,36,39],
[40,0,47,30,44,38,37,44],
[36,33,0,34,25,30,29,28],
[50,50,46,0,38,42,44,40],
[42,36,55,42,0,37,37,44],
[40,42,50,38,43,0,35,42],
[44,43,51,36,43,45,0,49],
[41,36,52,40,36,38,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 73, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,35,42,47,38,53],
[32,0,38,38,36,48,29,54],
[34,42,0,41,33,44,42,46],
[45,42,39,0,40,43,39,52],
[38,44,47,40,0,40,35,50],
[33,32,36,37,40,0,33,46],
[42,51,38,41,45,47,0,52],
[27,26,34,28,30,34,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 74, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,38,43,46,38,43,44],
[51,0,40,44,46,44,46,59],
[42,40,0,47,45,49,38,53],
[37,36,33,0,36,38,38,41],
[34,34,35,44,0,38,28,41],
[42,36,31,42,42,0,41,46],
[37,34,42,42,52,39,0,43],
[36,21,27,39,39,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 75, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,45,49,38,39,45],
[35,0,37,39,46,39,36,37],
[34,43,0,42,43,41,36,38],
[35,41,38,0,48,38,37,38],
[31,34,37,32,0,33,30,33],
[42,41,39,42,47,0,40,43],
[41,44,44,43,50,40,0,39],
[35,43,42,42,47,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 76, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,28,32,51,19,28,47],
[46,0,32,33,61,23,33,36],
[52,48,0,47,53,32,45,38],
[48,47,33,0,48,28,24,54],
[29,19,27,32,0,15,29,32],
[61,57,48,52,65,0,49,36],
[52,47,35,56,51,31,0,40],
[33,44,42,26,48,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 77, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,44,37,39,38,43],
[44,0,38,41,44,42,36,46],
[44,42,0,49,39,38,35,44],
[36,39,31,0,38,37,35,42],
[43,36,41,42,0,44,40,45],
[41,38,42,43,36,0,38,42],
[42,44,45,45,40,42,0,45],
[37,34,36,38,35,38,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 78, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,42,26,40,31,35,32],
[48,0,41,36,40,33,30,28],
[38,39,0,30,44,41,30,30],
[54,44,50,0,42,32,46,34],
[40,40,36,38,0,37,34,47],
[49,47,39,48,43,0,42,43],
[45,50,50,34,46,38,0,44],
[48,52,50,46,33,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 79, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,42,46,41,40,41],
[34,0,37,44,40,34,30,35],
[34,43,0,38,37,39,35,35],
[38,36,42,0,37,41,37,40],
[34,40,43,43,0,37,38,35],
[39,46,41,39,43,0,36,38],
[40,50,45,43,42,44,0,41],
[39,45,45,40,45,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 80, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,44,43,42,29,41,47],
[31,0,41,35,46,32,42,44],
[36,39,0,41,37,32,43,41],
[37,45,39,0,43,35,47,43],
[38,34,43,37,0,32,40,46],
[51,48,48,45,48,0,38,47],
[39,38,37,33,40,42,0,45],
[33,36,39,37,34,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 81, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,33,34,41,40,46,33],
[46,0,43,34,43,41,45,40],
[47,37,0,42,42,37,47,40],
[46,46,38,0,47,42,47,42],
[39,37,38,33,0,32,38,33],
[40,39,43,38,48,0,47,38],
[34,35,33,33,42,33,0,33],
[47,40,40,38,47,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 82, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,35,50,35,46,41],
[39,0,35,38,50,40,42,40],
[41,45,0,36,46,45,48,44],
[45,42,44,0,55,45,46,37],
[30,30,34,25,0,33,30,32],
[45,40,35,35,47,0,43,40],
[34,38,32,34,50,37,0,38],
[39,40,36,43,48,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 83, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,46,47,37,41,39,38],
[45,0,48,52,41,36,32,44],
[34,32,0,41,29,38,33,37],
[33,28,39,0,30,33,33,29],
[43,39,51,50,0,38,35,49],
[39,44,42,47,42,0,43,42],
[41,48,47,47,45,37,0,40],
[42,36,43,51,31,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 84, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,51,47,49,35,45],
[35,0,40,45,36,43,38,36],
[36,40,0,39,38,44,41,44],
[29,35,41,0,32,47,31,40],
[33,44,42,48,0,50,41,39],
[31,37,36,33,30,0,28,33],
[45,42,39,49,39,52,0,45],
[35,44,36,40,41,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 85, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,38,42,37,35,38],
[48,0,46,45,50,39,49,39],
[43,34,0,41,48,40,45,40],
[42,35,39,0,46,35,40,35],
[38,30,32,34,0,33,37,34],
[43,41,40,45,47,0,41,40],
[45,31,35,40,43,39,0,35],
[42,41,40,45,46,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 86, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,36,38,38,46,41],
[43,0,47,41,43,40,50,49],
[45,33,0,37,42,39,48,45],
[44,39,43,0,47,47,51,47],
[42,37,38,33,0,40,38,47],
[42,40,41,33,40,0,44,45],
[34,30,32,29,42,36,0,48],
[39,31,35,33,33,35,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 87, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,46,40,48,40,48],
[34,0,42,41,41,42,36,44],
[30,38,0,47,47,42,44,40],
[34,39,33,0,31,36,35,31],
[40,39,33,49,0,41,39,49],
[32,38,38,44,39,0,37,35],
[40,44,36,45,41,43,0,40],
[32,36,40,49,31,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 88, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,41,35,41,46,37],
[33,0,42,37,36,37,41,41],
[36,38,0,42,41,35,44,40],
[39,43,38,0,40,41,44,38],
[45,44,39,40,0,43,45,36],
[39,43,45,39,37,0,46,44],
[34,39,36,36,35,34,0,38],
[43,39,40,42,44,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 89, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,49,47,35,40,54],
[36,0,40,44,36,39,44,38],
[37,40,0,41,45,35,32,46],
[31,36,39,0,44,34,28,45],
[33,44,35,36,0,43,36,43],
[45,41,45,46,37,0,39,43],
[40,36,48,52,44,41,0,48],
[26,42,34,35,37,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 90, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,36,36,49,38,42],
[37,0,47,43,36,47,38,36],
[42,33,0,38,36,47,38,38],
[44,37,42,0,42,43,41,38],
[44,44,44,38,0,46,38,43],
[31,33,33,37,34,0,29,31],
[42,42,42,39,42,51,0,45],
[38,44,42,42,37,49,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 91, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,43,33,29,40,40],
[43,0,30,32,34,39,36,44],
[38,50,0,43,41,40,48,45],
[37,48,37,0,42,39,41,48],
[47,46,39,38,0,37,42,39],
[51,41,40,41,43,0,48,37],
[40,44,32,39,38,32,0,36],
[40,36,35,32,41,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 92, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,14,37,30,30,49,28],
[51,0,39,43,47,45,55,31],
[66,41,0,44,49,49,58,33],
[43,37,36,0,32,24,31,22],
[50,33,31,48,0,32,51,33],
[50,35,31,56,48,0,54,41],
[31,25,22,49,29,26,0,23],
[52,49,47,58,47,39,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 93, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,40,37,36,45,25,43],
[27,0,18,26,28,38,21,40],
[40,62,0,49,56,44,40,43],
[43,54,31,0,33,51,34,33],
[44,52,24,47,0,46,46,51],
[35,42,36,29,34,0,26,39],
[55,59,40,46,34,54,0,40],
[37,40,37,47,29,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 94, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,38,34,35,40,36],
[47,0,45,39,43,41,40,42],
[42,35,0,41,37,38,36,37],
[42,41,39,0,36,36,34,39],
[46,37,43,44,0,40,40,39],
[45,39,42,44,40,0,42,44],
[40,40,44,46,40,38,0,40],
[44,38,43,41,41,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 95, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,36,59,52,46,66,50],
[23,0,16,17,20,20,41,25],
[44,64,0,37,41,43,48,56],
[21,63,43,0,59,40,47,32],
[28,60,39,21,0,43,44,36],
[34,60,37,40,37,0,56,45],
[14,39,32,33,36,24,0,25],
[30,55,24,48,44,35,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 96, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,30,35,34,31,40,38],
[44,0,40,45,41,40,51,42],
[50,40,0,51,51,43,45,49],
[45,35,29,0,40,35,31,38],
[46,39,29,40,0,37,42,38],
[49,40,37,45,43,0,47,43],
[40,29,35,49,38,33,0,29],
[42,38,31,42,42,37,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 97, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,42,46,31,42,35],
[48,0,44,43,45,39,48,45],
[50,36,0,51,45,39,39,43],
[38,37,29,0,48,39,44,38],
[34,35,35,32,0,33,49,31],
[49,41,41,41,47,0,39,34],
[38,32,41,36,31,41,0,22],
[45,35,37,42,49,46,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 98, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,40,42,36,45,45],
[34,0,39,37,43,40,44,44],
[38,41,0,34,39,36,42,40],
[40,43,46,0,47,41,49,43],
[38,37,41,33,0,41,45,42],
[44,40,44,39,39,0,45,39],
[35,36,38,31,35,35,0,39],
[35,36,40,37,38,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 99, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,45,30,42,37,48],
[38,0,44,27,38,36,27,35],
[36,36,0,26,33,37,28,31],
[35,53,54,0,40,43,49,47],
[50,42,47,40,0,63,30,49],
[38,44,43,37,17,0,27,39],
[43,53,52,31,50,53,0,40],
[32,45,49,33,31,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,54,46,51,51,36],
[33,0,52,57,43,49,48,51],
[39,28,0,54,45,43,44,32],
[26,23,26,0,30,46,29,24],
[34,37,35,50,0,55,58,34],
[29,31,37,34,25,0,41,39],
[29,32,36,51,22,39,0,29],
[44,29,48,56,46,41,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,35,43,35,37,28],
[43,0,42,44,43,37,43,38],
[42,38,0,41,43,38,39,38],
[45,36,39,0,43,41,38,39],
[37,37,37,37,0,36,33,38],
[45,43,42,39,44,0,34,31],
[43,37,41,42,47,46,0,40],
[52,42,42,41,42,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,37,43,36,39,43],
[43,0,40,37,42,39,36,48],
[46,40,0,47,47,34,40,42],
[43,43,33,0,46,41,42,42],
[37,38,33,34,0,36,33,36],
[44,41,46,39,44,0,43,46],
[41,44,40,38,47,37,0,43],
[37,32,38,38,44,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,29,30,36,39,40],
[41,0,36,42,43,47,48,38],
[42,44,0,41,38,43,50,36],
[51,38,39,0,43,42,39,38],
[50,37,42,37,0,36,46,30],
[44,33,37,38,44,0,37,32],
[41,32,30,41,34,43,0,29],
[40,42,44,42,50,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,47,38,38,56,36],
[45,0,46,31,37,48,62,42],
[39,34,0,35,55,40,60,41],
[33,49,45,0,48,36,52,42],
[42,43,25,32,0,40,56,41],
[42,32,40,44,40,0,49,27],
[24,18,20,28,24,31,0,33],
[44,38,39,38,39,53,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,43,45,42,36,47],
[36,0,39,42,37,33,32,43],
[37,41,0,31,38,34,34,40],
[37,38,49,0,38,40,39,44],
[35,43,42,42,0,30,41,39],
[38,47,46,40,50,0,41,43],
[44,48,46,41,39,39,0,42],
[33,37,40,36,41,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,54,51,47,41,55,46],
[40,0,40,48,42,47,46,37],
[26,40,0,42,41,40,34,40],
[29,32,38,0,39,34,29,31],
[33,38,39,41,0,40,37,40],
[39,33,40,46,40,0,39,42],
[25,34,46,51,43,41,0,38],
[34,43,40,49,40,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,31,26,32,33,23],
[37,0,51,49,31,47,36,40],
[32,29,0,32,35,36,33,35],
[49,31,48,0,40,41,24,35],
[54,49,45,40,0,55,41,41],
[48,33,44,39,25,0,35,32],
[47,44,47,56,39,45,0,36],
[57,40,45,45,39,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,51,50,48,46,43],
[41,0,40,46,45,45,46,41],
[33,40,0,46,43,41,40,34],
[29,34,34,0,46,48,41,43],
[30,35,37,34,0,43,38,38],
[32,35,39,32,37,0,36,39],
[34,34,40,39,42,44,0,39],
[37,39,46,37,42,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,38,42,50,42,41],
[33,0,47,45,41,49,50,49],
[39,33,0,33,26,39,45,33],
[42,35,47,0,36,58,43,40],
[38,39,54,44,0,51,34,33],
[30,31,41,22,29,0,44,30],
[38,30,35,37,46,36,0,30],
[39,31,47,40,47,50,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,46,42,50,42,46],
[35,0,25,35,29,40,23,30],
[42,55,0,53,52,51,40,43],
[34,45,27,0,20,43,38,28],
[38,51,28,60,0,46,38,35],
[30,40,29,37,34,0,37,36],
[38,57,40,42,42,43,0,40],
[34,50,37,52,45,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,36,43,28,41,28],
[50,0,49,44,59,33,49,43],
[41,31,0,37,41,29,41,33],
[44,36,43,0,47,41,48,45],
[37,21,39,33,0,19,41,34],
[52,47,51,39,61,0,54,45],
[39,31,39,32,39,26,0,31],
[52,37,47,35,46,35,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,34,52,54,33,40,37],
[28,0,33,38,38,44,32,31],
[46,47,0,40,39,41,37,36],
[28,42,40,0,47,46,37,39],
[26,42,41,33,0,33,39,32],
[47,36,39,34,47,0,43,33],
[40,48,43,43,41,37,0,43],
[43,49,44,41,48,47,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,31,30,37,40,43],
[37,0,43,40,40,42,37,39],
[40,37,0,29,39,32,44,41],
[49,40,51,0,48,43,44,47],
[50,40,41,32,0,36,49,41],
[43,38,48,37,44,0,42,44],
[40,43,36,36,31,38,0,42],
[37,41,39,33,39,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,49,45,52,46,34,42],
[42,0,45,40,45,35,38,37],
[31,35,0,34,41,31,33,34],
[35,40,46,0,38,36,40,34],
[28,35,39,42,0,38,36,35],
[34,45,49,44,42,0,43,37],
[46,42,47,40,44,37,0,43],
[38,43,46,46,45,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,27,39,47,34,38,41],
[40,0,48,32,36,49,47,39],
[53,32,0,49,47,48,43,35],
[41,48,31,0,39,56,37,36],
[33,44,33,41,0,47,39,34],
[46,31,32,24,33,0,37,15],
[42,33,37,43,41,43,0,40],
[39,41,45,44,46,65,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,43,43,36,47,50],
[36,0,46,49,48,41,46,47],
[33,34,0,50,35,27,46,31],
[37,31,30,0,40,35,33,27],
[37,32,45,40,0,37,53,35],
[44,39,53,45,43,0,56,41],
[33,34,34,47,27,24,0,42],
[30,33,49,53,45,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,28,40,58,48,46],
[38,0,41,21,36,49,41,44],
[37,39,0,29,40,46,52,57],
[52,59,51,0,40,59,58,60],
[40,44,40,40,0,51,53,48],
[22,31,34,21,29,0,28,31],
[32,39,28,22,27,52,0,46],
[34,36,23,20,32,49,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,50,48,39,45,42,42],
[32,0,41,33,38,40,37,38],
[30,39,0,37,33,39,33,30],
[32,47,43,0,44,46,39,46],
[41,42,47,36,0,48,42,38],
[35,40,41,34,32,0,33,35],
[38,43,47,41,38,47,0,46],
[38,42,50,34,42,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,40,45,46,43,40],
[36,0,43,49,48,40,40,40],
[45,37,0,34,47,38,38,41],
[40,31,46,0,43,37,36,36],
[35,32,33,37,0,35,37,37],
[34,40,42,43,45,0,35,44],
[37,40,42,44,43,45,0,36],
[40,40,39,44,43,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,25,34,32,39,27,41],
[41,0,33,43,41,30,33,43],
[55,47,0,55,41,62,39,50],
[46,37,25,0,30,40,38,34],
[48,39,39,50,0,53,47,45],
[41,50,18,40,27,0,41,37],
[53,47,41,42,33,39,0,47],
[39,37,30,46,35,43,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,47,61,45,47,47,45],
[49,0,39,49,49,49,16,14],
[33,41,0,57,41,41,41,41],
[19,31,23,0,42,19,0,14],
[35,31,39,38,0,35,24,22],
[33,31,39,61,45,0,24,45],
[33,64,39,80,56,56,0,64],
[35,66,39,66,58,35,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,23,23,53,53,50,50],
[57,0,50,23,30,53,50,50],
[57,30,0,30,30,30,57,57],
[57,57,50,0,30,80,27,27],
[27,50,50,50,0,50,50,50],
[27,27,50,0,30,0,27,27],
[30,30,23,53,30,53,0,0],
[30,30,23,53,30,53,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,0,35,35,30,8,41],
[23,0,23,23,11,22,23,22],
[80,57,0,35,57,30,30,41],
[45,57,45,0,49,22,45,22],
[45,69,23,31,0,53,31,53],
[50,58,50,58,27,0,31,41],
[72,57,50,35,49,49,0,57],
[39,58,39,58,27,39,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,41,38,37,46,43],
[40,0,38,36,41,37,39,40],
[33,42,0,32,29,33,35,39],
[39,44,48,0,43,40,39,47],
[42,39,51,37,0,33,41,43],
[43,43,47,40,47,0,50,45],
[34,41,45,41,39,30,0,34],
[37,40,41,33,37,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,36,32,30,43,34],
[48,0,38,47,41,41,44,46],
[47,42,0,39,40,27,32,37],
[44,33,41,0,31,27,32,40],
[48,39,40,49,0,40,40,41],
[50,39,53,53,40,0,52,36],
[37,36,48,48,40,28,0,32],
[46,34,43,40,39,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,39,46,46,43,39],
[32,0,39,35,41,41,41,34],
[36,41,0,32,42,40,40,41],
[41,45,48,0,41,43,41,40],
[34,39,38,39,0,42,37,31],
[34,39,40,37,38,0,41,40],
[37,39,40,39,43,39,0,38],
[41,46,39,40,49,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,37,29,42,35,37],
[41,0,52,55,43,35,44,37],
[35,28,0,49,27,24,29,33],
[43,25,31,0,25,27,27,23],
[51,37,53,55,0,39,42,35],
[38,45,56,53,41,0,42,44],
[45,36,51,53,38,38,0,43],
[43,43,47,57,45,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,59,13,13,34,34],
[46,0,80,46,38,59,46,59],
[46,0,0,46,0,21,21,46],
[21,34,34,0,13,13,0,34],
[67,42,80,67,0,34,42,67],
[67,21,59,67,46,0,46,67],
[46,34,59,80,38,34,0,59],
[46,21,34,46,13,13,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,32,30,34,37,35,39],
[44,0,30,34,32,39,45,38],
[48,50,0,39,43,46,51,48],
[50,46,41,0,46,40,50,52],
[46,48,37,34,0,46,43,43],
[43,41,34,40,34,0,49,41],
[45,35,29,30,37,31,0,32],
[41,42,32,28,37,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,41,33,36,40,53],
[47,0,48,55,49,40,49,49],
[41,32,0,53,37,32,48,48],
[39,25,27,0,31,33,35,43],
[47,31,43,49,0,29,52,47],
[44,40,48,47,51,0,53,45],
[40,31,32,45,28,27,0,42],
[27,31,32,37,33,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,45,40,48,44,37],
[43,0,38,45,45,34,39,52],
[47,42,0,45,39,41,53,38],
[35,35,35,0,19,40,38,36],
[40,35,41,61,0,31,49,31],
[32,46,39,40,49,0,49,35],
[36,41,27,42,31,31,0,22],
[43,28,42,44,49,45,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,35,38,40,38,39],
[40,0,43,40,29,35,44,32],
[37,37,0,36,35,28,39,34],
[45,40,44,0,32,34,32,36],
[42,51,45,48,0,36,45,45],
[40,45,52,46,44,0,44,44],
[42,36,41,48,35,36,0,37],
[41,48,46,44,35,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,38,42,24,44,45,39],
[50,0,46,38,43,41,37,52],
[42,34,0,44,15,33,34,35],
[38,42,36,0,34,36,44,47],
[56,37,65,46,0,53,54,52],
[36,39,47,44,27,0,61,49],
[35,43,46,36,26,19,0,39],
[41,28,45,33,28,31,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,40,37,38,42,37,46],
[49,0,35,37,37,44,39,46],
[40,45,0,41,41,38,37,43],
[43,43,39,0,37,42,42,52],
[42,43,39,43,0,38,37,48],
[38,36,42,38,42,0,43,50],
[43,41,43,38,43,37,0,49],
[34,34,37,28,32,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,69,39,55,72,39,49],
[30,0,46,24,46,74,46,57],
[11,34,0,34,11,56,39,33],
[41,56,46,0,33,80,46,57],
[25,34,69,47,0,80,47,57],
[8,6,24,0,0,0,24,57],
[41,34,41,34,33,56,0,33],
[31,23,47,23,23,23,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,31,18,35,5,6,43],
[15,0,25,33,33,15,16,41],
[49,55,0,33,50,32,33,33],
[62,47,47,0,57,45,62,40],
[45,47,30,23,0,20,6,41],
[75,65,48,35,60,0,48,43],
[74,64,47,18,74,32,0,57],
[37,39,47,40,39,37,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,49,43,39,35,44],
[41,0,43,56,41,40,45,34],
[43,37,0,50,46,36,39,43],
[31,24,30,0,33,33,28,33],
[37,39,34,47,0,43,28,33],
[41,40,44,47,37,0,36,44],
[45,35,41,52,52,44,0,47],
[36,46,37,47,47,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,37,38,36,35,40,37],
[45,0,43,49,40,42,40,41],
[43,37,0,44,41,37,32,37],
[42,31,36,0,38,38,32,40],
[44,40,39,42,0,38,32,38],
[45,38,43,42,42,0,38,39],
[40,40,48,48,48,42,0,40],
[43,39,43,40,42,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,39,46,43,41,41],
[39,0,37,36,40,37,32,39],
[39,43,0,40,46,40,30,39],
[41,44,40,0,41,39,34,45],
[34,40,34,39,0,39,30,44],
[37,43,40,41,41,0,39,42],
[39,48,50,46,50,41,0,40],
[39,41,41,35,36,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,52,52,23,44,44,42],
[21,0,22,23,24,40,27,18],
[28,58,0,54,31,50,36,16],
[28,57,26,0,17,44,32,25],
[57,56,49,63,0,61,36,47],
[36,40,30,36,19,0,29,27],
[36,53,44,48,44,51,0,33],
[38,62,64,55,33,53,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,34,32,35,39,46],
[45,0,48,47,40,42,47,45],
[40,32,0,37,40,36,50,50],
[46,33,43,0,38,42,48,46],
[48,40,40,42,0,32,42,49],
[45,38,44,38,48,0,44,47],
[41,33,30,32,38,36,0,39],
[34,35,30,34,31,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,46,39,40,42,40,39],
[44,0,44,43,45,41,36,45],
[34,36,0,40,36,35,33,37],
[41,37,40,0,43,43,43,44],
[40,35,44,37,0,41,40,42],
[38,39,45,37,39,0,37,45],
[40,44,47,37,40,43,0,40],
[41,35,43,36,38,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,34,34,34,46,42,43],
[52,0,41,46,41,54,39,51],
[46,39,0,44,42,55,42,47],
[46,34,36,0,38,49,41,56],
[46,39,38,42,0,53,47,49],
[34,26,25,31,27,0,33,43],
[38,41,38,39,33,47,0,44],
[37,29,33,24,31,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,42,39,45,41,39],
[34,0,44,35,33,48,35,41],
[39,36,0,38,42,44,40,41],
[38,45,42,0,39,48,31,39],
[41,47,38,41,0,51,37,35],
[35,32,36,32,29,0,33,34],
[39,45,40,49,43,47,0,38],
[41,39,39,41,45,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,68,48,48,65,60,65],
[44,0,55,37,40,64,62,60],
[12,25,0,25,44,37,32,20],
[32,43,55,0,48,41,51,45],
[32,40,36,32,0,47,45,33],
[15,16,43,39,33,0,28,23],
[20,18,48,29,35,52,0,36],
[15,20,60,35,47,57,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,68,58,53,40,54,55,58],
[12,0,53,30,32,42,41,41],
[22,27,0,32,20,42,36,47],
[27,50,48,0,57,49,40,44],
[40,48,60,23,0,50,46,47],
[26,38,38,31,30,0,29,39],
[25,39,44,40,34,51,0,53],
[22,39,33,36,33,41,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,46,45,43,38,41,34],
[30,0,42,45,35,35,30,32],
[34,38,0,45,38,31,40,43],
[35,35,35,0,41,28,34,30],
[37,45,42,39,0,47,46,41],
[42,45,49,52,33,0,42,46],
[39,50,40,46,34,38,0,39],
[46,48,37,50,39,34,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,31,41,41,45,38],
[43,0,40,34,29,28,36,41],
[42,40,0,36,37,34,34,43],
[49,46,44,0,49,39,36,32],
[39,51,43,31,0,33,39,40],
[39,52,46,41,47,0,37,45],
[35,44,46,44,41,43,0,42],
[42,39,37,48,40,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,37,38,45,39,46],
[38,0,35,30,36,36,35,39],
[36,45,0,35,41,45,32,43],
[43,50,45,0,45,42,40,50],
[42,44,39,35,0,42,38,40],
[35,44,35,38,38,0,35,37],
[41,45,48,40,42,45,0,45],
[34,41,37,30,40,43,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,48,42,36,39,34],
[34,0,47,44,41,38,34,44],
[34,33,0,36,37,32,35,38],
[32,36,44,0,40,38,36,44],
[38,39,43,40,0,36,38,40],
[44,42,48,42,44,0,44,36],
[41,46,45,44,42,36,0,38],
[46,36,42,36,40,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,40,44,47,53,54,34],
[50,0,42,41,36,43,49,38],
[40,38,0,40,35,34,36,29],
[36,39,40,0,34,48,39,29],
[33,44,45,46,0,35,50,45],
[27,37,46,32,45,0,35,33],
[26,31,44,41,30,45,0,18],
[46,42,51,51,35,47,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,50,53,26,60,33,35],
[35,0,43,45,24,53,27,27],
[30,37,0,51,30,41,19,22],
[27,35,29,0,28,25,20,30],
[54,56,50,52,0,47,29,39],
[20,27,39,55,33,0,26,41],
[47,53,61,60,51,54,0,38],
[45,53,58,50,41,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,30,44,32,32,28],
[43,0,36,40,37,34,41,38],
[36,44,0,40,41,41,32,33],
[50,40,40,0,38,38,38,34],
[36,43,39,42,0,39,36,36],
[48,46,39,42,41,0,38,36],
[48,39,48,42,44,42,0,41],
[52,42,47,46,44,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,48,44,41,52,39],
[38,0,42,40,42,38,43,42],
[37,38,0,42,44,37,48,39],
[32,40,38,0,37,31,41,28],
[36,38,36,43,0,34,39,30],
[39,42,43,49,46,0,52,42],
[28,37,32,39,41,28,0,32],
[41,38,41,52,50,38,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,30,25,24,35,41,32],
[41,0,38,36,37,40,45,38],
[50,42,0,38,41,46,42,42],
[55,44,42,0,38,51,49,42],
[56,43,39,42,0,55,41,47],
[45,40,34,29,25,0,38,32],
[39,35,38,31,39,42,0,46],
[48,42,38,38,33,48,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,35,24,45,34,48],
[41,0,45,43,36,47,46,33],
[33,35,0,37,22,35,37,30],
[45,37,43,0,32,40,44,39],
[56,44,58,48,0,53,38,50],
[35,33,45,40,27,0,37,32],
[46,34,43,36,42,43,0,46],
[32,47,50,41,30,48,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,46,24,36,40,30,34],
[51,0,52,40,52,55,49,41],
[34,28,0,34,43,41,30,34],
[56,40,46,0,50,48,37,46],
[44,28,37,30,0,44,33,31],
[40,25,39,32,36,0,29,35],
[50,31,50,43,47,51,0,49],
[46,39,46,34,49,45,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,50,56,44,43,47,31],
[49,0,38,55,56,55,60,58],
[30,42,0,56,42,42,47,40],
[24,25,24,0,21,35,51,23],
[36,24,38,59,0,54,59,42],
[37,25,38,45,26,0,51,24],
[33,20,33,29,21,29,0,31],
[49,22,40,57,38,56,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,36,49,19,51,39],
[35,0,32,31,49,25,62,35],
[38,48,0,39,43,34,67,43],
[44,49,41,0,35,40,43,36],
[31,31,37,45,0,33,52,23],
[61,55,46,40,47,0,48,57],
[29,18,13,37,28,32,0,20],
[41,45,37,44,57,23,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,39,30,26,41,29],
[41,0,43,38,39,32,37,33],
[38,37,0,36,25,27,40,30],
[41,42,44,0,41,30,52,38],
[50,41,55,39,0,39,50,39],
[54,48,53,50,41,0,52,40],
[39,43,40,28,30,28,0,29],
[51,47,50,42,41,40,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,39,40,39,41,42,41],
[32,0,34,31,31,35,35,33],
[41,46,0,43,44,44,40,48],
[40,49,37,0,40,45,40,42],
[41,49,36,40,0,47,40,33],
[39,45,36,35,33,0,42,37],
[38,45,40,40,40,38,0,43],
[39,47,32,38,47,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,41,38,46,41,47],
[41,0,41,41,40,45,41,38],
[40,39,0,38,41,43,38,42],
[39,39,42,0,42,41,37,38],
[42,40,39,38,0,40,38,40],
[34,35,37,39,40,0,36,41],
[39,39,42,43,42,44,0,39],
[33,42,38,42,40,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,35,42,43,41,44],
[39,0,40,43,39,41,37,40],
[43,40,0,40,52,42,48,52],
[45,37,40,0,34,33,47,42],
[38,41,28,46,0,40,40,44],
[37,39,38,47,40,0,40,36],
[39,43,32,33,40,40,0,41],
[36,40,28,38,36,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,49,40,42,34,40],
[38,0,34,42,30,40,35,39],
[38,46,0,48,41,45,38,42],
[31,38,32,0,34,39,28,33],
[40,50,39,46,0,46,41,42],
[38,40,35,41,34,0,33,36],
[46,45,42,52,39,47,0,41],
[40,41,38,47,38,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,44,39,36,42,39],
[39,0,32,46,38,36,41,41],
[39,48,0,45,35,38,35,40],
[36,34,35,0,38,32,33,39],
[41,42,45,42,0,40,39,42],
[44,44,42,48,40,0,40,44],
[38,39,45,47,41,40,0,43],
[41,39,40,41,38,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,47,43,43,42,46],
[39,0,44,47,43,42,41,44],
[42,36,0,46,43,37,32,45],
[33,33,34,0,32,35,31,39],
[37,37,37,48,0,41,39,47],
[37,38,43,45,39,0,38,41],
[38,39,48,49,41,42,0,50],
[34,36,35,41,33,39,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,35,38,52,51,45,42],
[32,0,32,33,37,42,34,42],
[45,48,0,39,41,56,33,49],
[42,47,41,0,38,49,33,36],
[28,43,39,42,0,48,37,46],
[29,38,24,31,32,0,29,33],
[35,46,47,47,43,51,0,45],
[38,38,31,44,34,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,30,34,39,37,34,43],
[34,0,33,25,38,32,39,41],
[50,47,0,39,43,42,40,46],
[46,55,41,0,42,43,39,45],
[41,42,37,38,0,46,36,42],
[43,48,38,37,34,0,42,43],
[46,41,40,41,44,38,0,41],
[37,39,34,35,38,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,47,45,41,45,46,36],
[38,0,50,46,39,39,47,33],
[33,30,0,29,36,34,30,29],
[35,34,51,0,43,42,49,40],
[39,41,44,37,0,33,36,32],
[35,41,46,38,47,0,46,38],
[34,33,50,31,44,34,0,37],
[44,47,51,40,48,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,35,38,33,38,40,38],
[46,0,36,40,31,38,49,40],
[45,44,0,46,38,50,45,36],
[42,40,34,0,38,42,50,42],
[47,49,42,42,0,39,48,46],
[42,42,30,38,41,0,47,39],
[40,31,35,30,32,33,0,38],
[42,40,44,38,34,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,49,39,42,36,32],
[35,0,33,51,39,36,42,37],
[40,47,0,46,45,43,39,37],
[31,29,34,0,39,34,34,24],
[41,41,35,41,0,39,30,36],
[38,44,37,46,41,0,39,38],
[44,38,41,46,50,41,0,40],
[48,43,43,56,44,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,43,43,38,41,36],
[35,0,41,41,43,37,40,37],
[34,39,0,32,37,27,44,40],
[37,39,48,0,38,38,35,35],
[37,37,43,42,0,34,33,33],
[42,43,53,42,46,0,36,38],
[39,40,36,45,47,44,0,38],
[44,43,40,45,47,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,46,48,36,51,38],
[35,0,42,36,38,34,43,44],
[38,38,0,42,48,42,54,42],
[34,44,38,0,43,31,41,46],
[32,42,32,37,0,31,44,44],
[44,46,38,49,49,0,48,48],
[29,37,26,39,36,32,0,35],
[42,36,38,34,36,32,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,52,43,41,33,45],
[32,0,39,43,54,47,35,38],
[36,41,0,51,42,35,29,36],
[28,37,29,0,30,29,22,30],
[37,26,38,50,0,37,37,43],
[39,33,45,51,43,0,40,44],
[47,45,51,58,43,40,0,37],
[35,42,44,50,37,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,42,34,44,45,37],
[45,0,36,41,44,43,42,40],
[45,44,0,40,44,42,48,43],
[38,39,40,0,40,40,43,43],
[46,36,36,40,0,45,44,50],
[36,37,38,40,35,0,40,47],
[35,38,32,37,36,40,0,33],
[43,40,37,37,30,33,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,43,40,37,44,41],
[33,0,37,38,36,34,37,35],
[35,43,0,41,35,40,43,38],
[37,42,39,0,33,33,42,34],
[40,44,45,47,0,30,42,34],
[43,46,40,47,50,0,47,43],
[36,43,37,38,38,33,0,31],
[39,45,42,46,46,37,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,51,42,47,45,45],
[42,0,50,37,35,38,40,45],
[34,30,0,39,34,40,37,39],
[29,43,41,0,37,43,39,42],
[38,45,46,43,0,42,42,43],
[33,42,40,37,38,0,43,42],
[35,40,43,41,38,37,0,43],
[35,35,41,38,37,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,46,51,45,23,44,37],
[21,0,32,37,24,21,34,37],
[34,48,0,42,49,27,20,50],
[29,43,38,0,22,8,15,45],
[35,56,31,58,0,28,29,43],
[57,59,53,72,52,0,37,60],
[36,46,60,65,51,43,0,60],
[43,43,30,35,37,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,40,45,36,43,40],
[33,0,43,32,38,32,43,36],
[33,37,0,31,34,31,45,32],
[40,48,49,0,50,42,51,41],
[35,42,46,30,0,35,41,38],
[44,48,49,38,45,0,49,39],
[37,37,35,29,39,31,0,34],
[40,44,48,39,42,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,51,49,37,42,44],
[41,0,40,47,41,36,36,45],
[42,40,0,48,46,30,45,44],
[29,33,32,0,35,28,27,33],
[31,39,34,45,0,31,27,41],
[43,44,50,52,49,0,36,47],
[38,44,35,53,53,44,0,43],
[36,35,36,47,39,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,47,39,44,43,50],
[38,0,35,45,38,43,37,39],
[40,45,0,47,46,47,41,41],
[33,35,33,0,38,42,41,34],
[41,42,34,42,0,42,41,41],
[36,37,33,38,38,0,44,36],
[37,43,39,39,39,36,0,39],
[30,41,39,46,39,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,40,42,48,46,38],
[39,0,45,32,39,46,38,36],
[34,35,0,34,39,44,44,34],
[40,48,46,0,54,49,53,40],
[38,41,41,26,0,38,42,38],
[32,34,36,31,42,0,44,33],
[34,42,36,27,38,36,0,36],
[42,44,46,40,42,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,49,57,55,47,47,51],
[45,0,45,44,61,51,48,32],
[31,35,0,33,46,45,20,26],
[23,36,47,0,40,33,31,30],
[25,19,34,40,0,53,26,37],
[33,29,35,47,27,0,28,38],
[33,32,60,49,54,52,0,43],
[29,48,54,50,43,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,39,28,41,34,35],
[49,0,42,46,39,40,42,41],
[45,38,0,38,41,38,40,44],
[41,34,42,0,37,42,42,40],
[52,41,39,43,0,44,52,43],
[39,40,42,38,36,0,42,43],
[46,38,40,38,28,38,0,40],
[45,39,36,40,37,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,41,48,38,42,39,37],
[32,0,41,42,32,31,34,28],
[39,39,0,40,39,41,40,41],
[32,38,40,0,35,37,37,45],
[42,48,41,45,0,44,38,42],
[38,49,39,43,36,0,44,43],
[41,46,40,43,42,36,0,38],
[43,52,39,35,38,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,50,40,37,56,52,42],
[37,0,44,28,31,45,48,33],
[30,36,0,30,21,38,53,41],
[40,52,50,0,44,43,63,43],
[43,49,59,36,0,57,48,48],
[24,35,42,37,23,0,40,34],
[28,32,27,17,32,40,0,24],
[38,47,39,37,32,46,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,36,48,45,43,38],
[35,0,34,31,45,36,34,36],
[39,46,0,45,51,45,41,42],
[44,49,35,0,49,40,46,35],
[32,35,29,31,0,30,37,28],
[35,44,35,40,50,0,41,39],
[37,46,39,34,43,39,0,39],
[42,44,38,45,52,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,38,36,40,43,42],
[37,0,42,34,33,37,25,40],
[36,38,0,41,32,39,42,41],
[42,46,39,0,46,41,42,48],
[44,47,48,34,0,39,41,45],
[40,43,41,39,41,0,39,39],
[37,55,38,38,39,41,0,44],
[38,40,39,32,35,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,44,44,41,45,48],
[34,0,33,44,39,36,40,43],
[42,47,0,43,40,37,42,44],
[36,36,37,0,39,32,31,41],
[36,41,40,41,0,38,40,39],
[39,44,43,48,42,0,44,36],
[35,40,38,49,40,36,0,40],
[32,37,36,39,41,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,54,64,32,63,67,75],
[18,0,32,48,31,36,18,65],
[26,48,0,61,44,47,31,74],
[16,32,19,0,9,54,9,45],
[48,49,36,71,0,58,49,72],
[17,44,33,26,22,0,17,44],
[13,62,49,71,31,63,0,75],
[5,15,6,35,8,36,5,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,40,44,47,39,45],
[41,0,41,37,44,44,41,46],
[40,39,0,39,44,49,40,42],
[40,43,41,0,48,50,37,45],
[36,36,36,32,0,38,34,35],
[33,36,31,30,42,0,35,41],
[41,39,40,43,46,45,0,46],
[35,34,38,35,45,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,33,42,45,36,37,30],
[50,0,44,58,51,40,52,49],
[47,36,0,45,52,38,45,50],
[38,22,35,0,46,38,37,31],
[35,29,28,34,0,38,35,32],
[44,40,42,42,42,0,47,40],
[43,28,35,43,45,33,0,35],
[50,31,30,49,48,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,47,43,43,52,26],
[35,0,33,39,36,37,36,28],
[41,47,0,48,32,39,43,30],
[33,41,32,0,35,31,37,23],
[37,44,48,45,0,40,38,41],
[37,43,41,49,40,0,42,34],
[28,44,37,43,42,38,0,21],
[54,52,50,57,39,46,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,42,38,41,43,36],
[37,0,26,36,33,41,37,40],
[46,54,0,40,35,43,49,48],
[38,44,40,0,40,46,45,41],
[42,47,45,40,0,49,44,45],
[39,39,37,34,31,0,32,31],
[37,43,31,35,36,48,0,38],
[44,40,32,39,35,49,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,39,40,46,40,34],
[40,0,47,44,49,46,43,35],
[36,33,0,41,40,34,32,27],
[41,36,39,0,46,36,34,30],
[40,31,40,34,0,37,38,28],
[34,34,46,44,43,0,40,35],
[40,37,48,46,42,40,0,46],
[46,45,53,50,52,45,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,34,39,44,43,34],
[33,0,32,33,27,33,34,32],
[38,48,0,36,37,39,43,33],
[46,47,44,0,36,43,48,35],
[41,53,43,44,0,50,40,41],
[36,47,41,37,30,0,38,31],
[37,46,37,32,40,42,0,30],
[46,48,47,45,39,49,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,48,36,43,48,43,48],
[29,0,30,37,47,43,32,32],
[32,50,0,43,49,44,36,30],
[44,43,37,0,43,49,32,28],
[37,33,31,37,0,41,23,34],
[32,37,36,31,39,0,28,28],
[37,48,44,48,57,52,0,40],
[32,48,50,52,46,52,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,38,34,36,42,39],
[42,0,44,41,32,36,34,39],
[34,36,0,35,33,33,36,30],
[42,39,45,0,40,43,33,35],
[46,48,47,40,0,45,43,44],
[44,44,47,37,35,0,41,38],
[38,46,44,47,37,39,0,39],
[41,41,50,45,36,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,43,39,31,43,32],
[48,0,37,56,42,36,44,38],
[47,43,0,54,35,37,36,39],
[37,24,26,0,32,26,31,28],
[41,38,45,48,0,35,40,33],
[49,44,43,54,45,0,45,38],
[37,36,44,49,40,35,0,40],
[48,42,41,52,47,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,39,47,39,52,42,43],
[26,0,38,40,46,44,41,38],
[41,42,0,37,50,47,39,41],
[33,40,43,0,36,46,39,36],
[41,34,30,44,0,51,48,51],
[28,36,33,34,29,0,36,34],
[38,39,41,41,32,44,0,33],
[37,42,39,44,29,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,34,45,55,30,45],
[48,0,37,30,38,61,45,47],
[46,43,0,30,55,55,35,48],
[46,50,50,0,56,54,36,49],
[35,42,25,24,0,45,31,44],
[25,19,25,26,35,0,29,40],
[50,35,45,44,49,51,0,51],
[35,33,32,31,36,40,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,37,40,47,43,39],
[35,0,35,35,39,36,43,40],
[41,45,0,43,35,37,41,40],
[43,45,37,0,37,41,44,34],
[40,41,45,43,0,42,43,47],
[33,44,43,39,38,0,37,38],
[37,37,39,36,37,43,0,33],
[41,40,40,46,33,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,38,35,37,38,41],
[41,0,38,38,39,43,41,38],
[41,42,0,34,34,42,35,33],
[42,42,46,0,43,49,40,46],
[45,41,46,37,0,46,44,46],
[43,37,38,31,34,0,40,36],
[42,39,45,40,36,40,0,37],
[39,42,47,34,34,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,41,40,42,41,40],
[41,0,41,39,44,39,38,45],
[39,39,0,37,43,36,46,41],
[39,41,43,0,46,39,44,43],
[40,36,37,34,0,36,42,41],
[38,41,44,41,44,0,39,49],
[39,42,34,36,38,41,0,39],
[40,35,39,37,39,31,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,27,36,41,35,42],
[39,0,42,39,37,37,38,37],
[42,38,0,38,41,42,42,38],
[53,41,42,0,40,44,45,42],
[44,43,39,40,0,41,39,41],
[39,43,38,36,39,0,37,38],
[45,42,38,35,41,43,0,37],
[38,43,42,38,39,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,48,50,46,50,51],
[38,0,39,46,49,34,43,35],
[42,41,0,52,43,42,48,37],
[32,34,28,0,32,39,39,42],
[30,31,37,48,0,37,40,43],
[34,46,38,41,43,0,41,48],
[30,37,32,41,40,39,0,39],
[29,45,43,38,37,32,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,35,44,31,33,37,34],
[48,0,43,50,35,42,42,37],
[45,37,0,50,42,33,40,38],
[36,30,30,0,20,32,24,24],
[49,45,38,60,0,35,50,44],
[47,38,47,48,45,0,48,46],
[43,38,40,56,30,32,0,48],
[46,43,42,56,36,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,45,36,40,34,36],
[34,0,32,38,36,35,28,34],
[34,48,0,38,33,39,35,35],
[35,42,42,0,35,40,35,33],
[44,44,47,45,0,44,40,41],
[40,45,41,40,36,0,44,46],
[46,52,45,45,40,36,0,41],
[44,46,45,47,39,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,37,52,46,36,40],
[40,0,40,35,60,41,37,46],
[38,40,0,47,51,30,47,47],
[43,45,33,0,46,35,42,45],
[28,20,29,34,0,37,31,31],
[34,39,50,45,43,0,39,41],
[44,43,33,38,49,41,0,36],
[40,34,33,35,49,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,43,37,34,47,50],
[32,0,46,28,36,41,50,48],
[33,34,0,26,31,32,51,39],
[37,52,54,0,48,39,60,46],
[43,44,49,32,0,39,58,44],
[46,39,48,41,41,0,52,52],
[33,30,29,20,22,28,0,32],
[30,32,41,34,36,28,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,41,43,38,37,28],
[41,0,41,45,48,41,48,40],
[39,39,0,47,46,36,38,35],
[39,35,33,0,40,38,38,40],
[37,32,34,40,0,44,39,34],
[42,39,44,42,36,0,45,34],
[43,32,42,42,41,35,0,40],
[52,40,45,40,46,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,36,44,37,39,34],
[43,0,47,42,45,32,39,35],
[33,33,0,40,37,32,38,32],
[44,38,40,0,42,41,42,39],
[36,35,43,38,0,38,35,29],
[43,48,48,39,42,0,48,40],
[41,41,42,38,45,32,0,33],
[46,45,48,41,51,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,45,45,32,54,37,41],
[36,0,37,42,36,45,33,42],
[35,43,0,45,47,45,40,50],
[35,38,35,0,35,43,34,37],
[48,44,33,45,0,43,43,49],
[26,35,35,37,37,0,31,38],
[43,47,40,46,37,49,0,51],
[39,38,30,43,31,42,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,28,41,34,39,49,32],
[46,0,30,38,33,31,42,40],
[52,50,0,54,49,33,58,37],
[39,42,26,0,36,44,48,39],
[46,47,31,44,0,42,57,35],
[41,49,47,36,38,0,49,36],
[31,38,22,32,23,31,0,22],
[48,40,43,41,45,44,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,43,41,40,39,46],
[38,0,41,37,39,41,46,46],
[34,39,0,39,34,38,43,47],
[37,43,41,0,44,42,45,43],
[39,41,46,36,0,42,45,45],
[40,39,42,38,38,0,40,45],
[41,34,37,35,35,40,0,37],
[34,34,33,37,35,35,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,38,25,42,25,42,31],
[50,0,37,42,42,37,42,36],
[42,43,0,32,41,43,41,44],
[55,38,48,0,46,40,46,46],
[38,38,39,34,0,37,47,40],
[55,43,37,40,43,0,42,43],
[38,38,39,34,33,38,0,41],
[49,44,36,34,40,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,40,39,41,45,43],
[42,0,44,39,36,45,50,46],
[38,36,0,31,32,33,40,40],
[40,41,49,0,42,46,52,45],
[41,44,48,38,0,39,43,43],
[39,35,47,34,41,0,45,45],
[35,30,40,28,37,35,0,46],
[37,34,40,35,37,35,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,41,41,51,40,36],
[45,0,34,36,43,43,39,37],
[40,46,0,38,28,48,38,38],
[39,44,42,0,45,49,37,42],
[39,37,52,35,0,45,38,38],
[29,37,32,31,35,0,31,33],
[40,41,42,43,42,49,0,43],
[44,43,42,38,42,47,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,42,45,44,44,38],
[38,0,42,45,40,42,43,38],
[34,38,0,44,42,37,41,35],
[38,35,36,0,43,42,38,38],
[35,40,38,37,0,41,38,34],
[36,38,43,38,39,0,42,40],
[36,37,39,42,42,38,0,31],
[42,42,45,42,46,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,48,40,42,35,34],
[36,0,38,44,49,33,37,40],
[37,42,0,40,29,40,43,36],
[32,36,40,0,34,35,41,38],
[40,31,51,46,0,39,46,33],
[38,47,40,45,41,0,42,32],
[45,43,37,39,34,38,0,36],
[46,40,44,42,47,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,31,25,18,30,17,22],
[54,0,36,27,47,41,47,45],
[49,44,0,30,46,47,38,28],
[55,53,50,0,44,48,42,39],
[62,33,34,36,0,30,22,42],
[50,39,33,32,50,0,21,36],
[63,33,42,38,58,59,0,31],
[58,35,52,41,38,44,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,37,40,35,32,37],
[46,0,43,39,44,40,41,35],
[40,37,0,37,42,37,38,38],
[43,41,43,0,49,37,39,38],
[40,36,38,31,0,32,37,43],
[45,40,43,43,48,0,47,41],
[48,39,42,41,43,33,0,35],
[43,45,42,42,37,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,44,41,38,44,38,48],
[28,0,36,35,31,45,37,43],
[36,44,0,37,38,48,40,48],
[39,45,43,0,40,51,36,48],
[42,49,42,40,0,50,43,50],
[36,35,32,29,30,0,33,46],
[42,43,40,44,37,47,0,45],
[32,37,32,32,30,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,30,36,35,46,38,43],
[32,0,42,42,33,32,30,42],
[50,38,0,52,40,34,46,36],
[44,38,28,0,29,29,47,34],
[45,47,40,51,0,42,44,41],
[34,48,46,51,38,0,44,38],
[42,50,34,33,36,36,0,45],
[37,38,44,46,39,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,37,34,40,37,37],
[38,0,27,34,39,35,35,33],
[41,53,0,45,32,42,42,44],
[43,46,35,0,38,32,40,33],
[46,41,48,42,0,40,41,40],
[40,45,38,48,40,0,41,42],
[43,45,38,40,39,39,0,46],
[43,47,36,47,40,38,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,36,50,45,34,42],
[43,0,38,44,47,41,40,40],
[44,42,0,38,47,43,39,46],
[44,36,42,0,48,47,48,44],
[30,33,33,32,0,41,35,41],
[35,39,37,33,39,0,41,42],
[46,40,41,32,45,39,0,44],
[38,40,34,36,39,38,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,49,39,43,40,45,46],
[31,0,38,47,41,34,30,34],
[31,42,0,25,44,34,42,33],
[41,33,55,0,50,47,39,37],
[37,39,36,30,0,31,41,30],
[40,46,46,33,49,0,46,27],
[35,50,38,41,39,34,0,41],
[34,46,47,43,50,53,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,29,33,42,36,36],
[48,0,34,36,37,35,41,34],
[51,46,0,44,38,50,50,47],
[51,44,36,0,42,45,39,40],
[47,43,42,38,0,39,43,40],
[38,45,30,35,41,0,41,36],
[44,39,30,41,37,39,0,38],
[44,46,33,40,40,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,37,39,36,34,37,32],
[54,0,46,45,45,42,37,54],
[43,34,0,41,40,34,36,44],
[41,35,39,0,41,38,37,41],
[44,35,40,39,0,43,43,49],
[46,38,46,42,37,0,41,46],
[43,43,44,43,37,39,0,49],
[48,26,36,39,31,34,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,37,33,46,35,31,30],
[59,0,47,35,48,35,42,42],
[43,33,0,36,44,34,37,29],
[47,45,44,0,45,42,30,44],
[34,32,36,35,0,34,32,41],
[45,45,46,38,46,0,41,45],
[49,38,43,50,48,39,0,51],
[50,38,51,36,39,35,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,31,43,43,23,56,27],
[26,0,21,41,24,34,44,42],
[49,59,0,52,43,40,56,44],
[37,39,28,0,22,26,65,21],
[37,56,37,58,0,40,49,52],
[57,46,40,54,40,0,48,55],
[24,36,24,15,31,32,0,21],
[53,38,36,59,28,25,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,25,45,40,29,54,40],
[20,0,28,17,25,25,36,20],
[55,52,0,50,46,42,37,27],
[35,63,30,0,51,53,21,25],
[40,55,34,29,0,24,36,19],
[51,55,38,27,56,0,34,42],
[26,44,43,59,44,46,0,39],
[40,60,53,55,61,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,52,53,52,41,41],
[40,0,43,39,46,37,35,38],
[32,37,0,40,41,39,37,39],
[28,41,40,0,55,44,39,39],
[27,34,39,25,0,33,30,35],
[28,43,41,36,47,0,47,37],
[39,45,43,41,50,33,0,44],
[39,42,41,41,45,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,33,38,32,52,31],
[37,0,53,43,41,43,37,38],
[48,27,0,24,35,51,41,35],
[47,37,56,0,53,44,45,50],
[42,39,45,27,0,40,50,38],
[48,37,29,36,40,0,49,34],
[28,43,39,35,30,31,0,32],
[49,42,45,30,42,46,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,40,42,44,41,43],
[35,0,43,37,41,42,36,41],
[36,37,0,44,44,43,30,37],
[40,43,36,0,41,39,41,37],
[38,39,36,39,0,40,40,35],
[36,38,37,41,40,0,37,32],
[39,44,50,39,40,43,0,48],
[37,39,43,43,45,48,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,31,40,36,31,42,44],
[40,0,34,37,37,34,36,36],
[49,46,0,39,40,40,45,47],
[40,43,41,0,42,34,43,50],
[44,43,40,38,0,33,42,46],
[49,46,40,46,47,0,46,45],
[38,44,35,37,38,34,0,47],
[36,44,33,30,34,35,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,35,39,34,35,32,28],
[47,0,45,40,39,41,39,40],
[45,35,0,37,41,42,39,38],
[41,40,43,0,41,40,38,46],
[46,41,39,39,0,33,47,41],
[45,39,38,40,47,0,46,41],
[48,41,41,42,33,34,0,39],
[52,40,42,34,39,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,46,34,34,39,42,41],
[60,0,50,38,40,46,61,55],
[34,30,0,30,15,20,38,34],
[46,42,50,0,22,32,50,56],
[46,40,65,58,0,45,55,46],
[41,34,60,48,35,0,56,70],
[38,19,42,30,25,24,0,25],
[39,25,46,24,34,10,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,47,46,43,44,42,57],
[44,0,39,46,49,44,45,49],
[33,41,0,43,39,38,37,49],
[34,34,37,0,42,30,45,49],
[37,31,41,38,0,44,36,51],
[36,36,42,50,36,0,45,45],
[38,35,43,35,44,35,0,49],
[23,31,31,31,29,35,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,45,43,52,39,35],
[44,0,52,55,56,55,40,42],
[35,28,0,28,37,53,38,41],
[35,25,52,0,40,46,42,37],
[37,24,43,40,0,48,26,36],
[28,25,27,34,32,0,27,51],
[41,40,42,38,54,53,0,46],
[45,38,39,43,44,29,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,31,37,39,41,36],
[46,0,45,34,42,39,37,33],
[42,35,0,35,37,33,40,33],
[49,46,45,0,37,41,34,33],
[43,38,43,43,0,40,41,35],
[41,41,47,39,40,0,44,41],
[39,43,40,46,39,36,0,35],
[44,47,47,47,45,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,36,36,40,39,38],
[34,0,42,35,26,35,39,29],
[35,38,0,39,38,37,40,34],
[44,45,41,0,33,37,36,36],
[44,54,42,47,0,44,43,40],
[40,45,43,43,36,0,37,38],
[41,41,40,44,37,43,0,39],
[42,51,46,44,40,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,35,40,48,42,30],
[34,0,38,42,40,50,34,44],
[40,42,0,50,39,47,45,32],
[45,38,30,0,47,45,34,36],
[40,40,41,33,0,52,37,38],
[32,30,33,35,28,0,32,23],
[38,46,35,46,43,48,0,37],
[50,36,48,44,42,57,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,70,69,43,40,45,74,29],
[10,0,61,36,29,39,46,17],
[11,19,0,25,12,21,50,11],
[37,44,55,0,32,44,58,39],
[40,51,68,48,0,37,68,44],
[35,41,59,36,43,0,53,39],
[6,34,30,22,12,27,0,21],
[51,63,69,41,36,41,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,32,43,46,28,41,34],
[62,0,45,45,49,49,40,41],
[48,35,0,50,38,41,38,40],
[37,35,30,0,40,37,40,22],
[34,31,42,40,0,39,31,39],
[52,31,39,43,41,0,32,43],
[39,40,42,40,49,48,0,34],
[46,39,40,58,41,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,61,52,37,32,35,34],
[29,0,51,47,41,29,32,41],
[19,29,0,41,30,19,26,18],
[28,33,39,0,28,17,45,41],
[43,39,50,52,0,48,42,60],
[48,51,61,63,32,0,43,43],
[45,48,54,35,38,37,0,47],
[46,39,62,39,20,37,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,44,42,38,40,32],
[37,0,40,38,41,41,42,33],
[44,40,0,44,40,45,47,45],
[36,42,36,0,42,40,42,39],
[38,39,40,38,0,42,42,34],
[42,39,35,40,38,0,43,29],
[40,38,33,38,38,37,0,31],
[48,47,35,41,46,51,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,31,37,44,33,39,40],
[42,0,42,42,44,39,40,45],
[49,38,0,44,44,37,39,41],
[43,38,36,0,47,36,42,40],
[36,36,36,33,0,37,39,38],
[47,41,43,44,43,0,40,42],
[41,40,41,38,41,40,0,42],
[40,35,39,40,42,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,42,33,43,38,36,42],
[49,0,41,40,35,38,37,44],
[38,39,0,29,30,30,31,41],
[47,40,51,0,38,40,43,44],
[37,45,50,42,0,38,37,45],
[42,42,50,40,42,0,42,42],
[44,43,49,37,43,38,0,50],
[38,36,39,36,35,38,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,45,43,50,34,47],
[31,0,29,33,32,36,32,49],
[39,51,0,41,47,43,43,62],
[35,47,39,0,55,40,45,56],
[37,48,33,25,0,36,39,45],
[30,44,37,40,44,0,35,41],
[46,48,37,35,41,45,0,51],
[33,31,18,24,35,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,49,40,53,48,52],
[40,0,41,45,33,46,43,48],
[40,39,0,44,38,55,43,49],
[31,35,36,0,33,38,43,42],
[40,47,42,47,0,56,45,48],
[27,34,25,42,24,0,36,40],
[32,37,37,37,35,44,0,45],
[28,32,31,38,32,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,45,46,39,39,39],
[42,0,41,43,50,37,47,47],
[36,39,0,46,50,42,44,49],
[35,37,34,0,48,28,43,42],
[34,30,30,32,0,26,41,37],
[41,43,38,52,54,0,38,43],
[41,33,36,37,39,42,0,42],
[41,33,31,38,43,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,40,41,48,44,38],
[39,0,36,37,47,46,40,38],
[30,44,0,39,51,49,43,40],
[40,43,41,0,44,56,46,40],
[39,33,29,36,0,41,38,36],
[32,34,31,24,39,0,36,28],
[36,40,37,34,42,44,0,33],
[42,42,40,40,44,52,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,35,45,42,44,37],
[44,0,41,44,42,42,44,40],
[49,39,0,43,45,38,44,37],
[45,36,37,0,43,39,47,48],
[35,38,35,37,0,41,38,44],
[38,38,42,41,39,0,44,42],
[36,36,36,33,42,36,0,36],
[43,40,43,32,36,38,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,40,41,39,42,36],
[40,0,47,45,48,35,44,44],
[39,33,0,38,41,32,43,37],
[40,35,42,0,34,41,42,40],
[39,32,39,46,0,36,40,40],
[41,45,48,39,44,0,47,39],
[38,36,37,38,40,33,0,36],
[44,36,43,40,40,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,47,53,33,40,41,32],
[47,0,53,44,43,38,49,48],
[33,27,0,37,36,30,32,33],
[27,36,43,0,33,30,34,34],
[47,37,44,47,0,44,38,25],
[40,42,50,50,36,0,28,34],
[39,31,48,46,42,52,0,41],
[48,32,47,46,55,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,41,39,44,46,45,37],
[24,0,27,28,28,29,33,24],
[39,53,0,42,43,36,48,39],
[41,52,38,0,44,50,60,45],
[36,52,37,36,0,39,33,42],
[34,51,44,30,41,0,49,45],
[35,47,32,20,47,31,0,35],
[43,56,41,35,38,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,37,36,38,38,37],
[41,0,41,45,33,51,40,38],
[47,39,0,41,39,38,38,36],
[43,35,39,0,31,36,25,43],
[44,47,41,49,0,43,36,41],
[42,29,42,44,37,0,28,37],
[42,40,42,55,44,52,0,37],
[43,42,44,37,39,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,32,36,33,37,31],
[41,0,41,33,39,36,40,42],
[36,39,0,36,40,31,41,32],
[48,47,44,0,48,37,43,41],
[44,41,40,32,0,35,43,36],
[47,44,49,43,45,0,46,39],
[43,40,39,37,37,34,0,39],
[49,38,48,39,44,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,39,39,33,38,36],
[39,0,40,42,41,35,40,42],
[43,40,0,45,41,43,46,46],
[41,38,35,0,46,34,36,42],
[41,39,39,34,0,33,42,38],
[47,45,37,46,47,0,46,50],
[42,40,34,44,38,34,0,43],
[44,38,34,38,42,30,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,52,43,48,37,51,28],
[32,0,47,22,38,34,40,26],
[28,33,0,35,40,24,34,25],
[37,58,45,0,44,31,51,40],
[32,42,40,36,0,37,42,34],
[43,46,56,49,43,0,45,35],
[29,40,46,29,38,35,0,25],
[52,54,55,40,46,45,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,45,40,34,34,39],
[41,0,41,39,44,42,42,38],
[40,39,0,42,41,40,46,41],
[35,41,38,0,42,41,42,34],
[40,36,39,38,0,45,42,35],
[46,38,40,39,35,0,42,39],
[46,38,34,38,38,38,0,37],
[41,42,39,46,45,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,26,35,40,38,50,42],
[37,0,37,32,38,46,46,37],
[54,43,0,37,40,50,46,40],
[45,48,43,0,33,45,52,42],
[40,42,40,47,0,50,48,43],
[42,34,30,35,30,0,41,44],
[30,34,34,28,32,39,0,31],
[38,43,40,38,37,36,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,53,47,38,52,43],
[36,0,35,44,34,41,46,31],
[39,45,0,50,31,47,47,32],
[27,36,30,0,27,38,42,28],
[33,46,49,53,0,38,39,43],
[42,39,33,42,42,0,62,37],
[28,34,33,38,41,18,0,35],
[37,49,48,52,37,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,30,41,52,39,33],
[39,0,49,44,38,48,39,38],
[39,31,0,34,22,42,34,32],
[50,36,46,0,31,42,38,34],
[39,42,58,49,0,40,39,49],
[28,32,38,38,40,0,31,35],
[41,41,46,42,41,49,0,26],
[47,42,48,46,31,45,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,40,38,28,23,31],
[49,0,36,45,51,45,45,50],
[45,44,0,49,46,40,37,42],
[40,35,31,0,48,46,40,45],
[42,29,34,32,0,28,28,35],
[52,35,40,34,52,0,40,41],
[57,35,43,40,52,40,0,43],
[49,30,38,35,45,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,36,50,51,43,45,43],
[35,0,36,51,40,36,42,35],
[44,44,0,48,52,39,39,44],
[30,29,32,0,38,32,31,27],
[29,40,28,42,0,33,38,36],
[37,44,41,48,47,0,40,41],
[35,38,41,49,42,40,0,37],
[37,45,36,53,44,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,46,40,6,6,46,0],
[74,0,46,74,40,0,46,40],
[34,34,0,34,0,34,40,34],
[40,6,46,0,40,0,46,40],
[74,40,80,40,0,34,46,34],
[74,80,46,80,46,0,46,40],
[34,34,40,34,34,34,0,34],
[80,40,46,40,46,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,41,46,43,40,50],
[41,0,40,49,51,43,55,48],
[43,40,0,40,56,49,46,47],
[39,31,40,0,47,49,43,54],
[34,29,24,33,0,35,36,58],
[37,37,31,31,45,0,31,48],
[40,25,34,37,44,49,0,47],
[30,32,33,26,22,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,24,28,34,26,50],
[38,0,42,34,35,50,41,50],
[40,38,0,39,38,44,30,37],
[56,46,41,0,41,52,37,49],
[52,45,42,39,0,35,45,38],
[46,30,36,28,45,0,33,54],
[54,39,50,43,35,47,0,50],
[30,30,43,31,42,26,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,38,38,38,22,54,0],
[31,0,38,54,54,38,38,31],
[42,42,0,16,27,11,47,15],
[42,26,64,0,42,48,31,15],
[42,26,53,38,0,64,53,31],
[58,42,69,32,16,0,47,47],
[26,42,33,49,27,33,0,15],
[80,49,65,65,49,33,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,38,43,35,39,40],
[41,0,41,39,39,35,44,39],
[41,39,0,37,31,42,36,39],
[42,41,43,0,40,34,40,37],
[37,41,49,40,0,49,38,40],
[45,45,38,46,31,0,38,41],
[41,36,44,40,42,42,0,31],
[40,41,41,43,40,39,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,30,31,30,35,32,29],
[54,0,43,36,37,41,42,39],
[50,37,0,40,43,42,42,36],
[49,44,40,0,41,41,42,41],
[50,43,37,39,0,40,41,39],
[45,39,38,39,40,0,39,37],
[48,38,38,38,39,41,0,39],
[51,41,44,39,41,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,41,42,41,38,44],
[43,0,37,38,38,46,39,49],
[39,43,0,42,43,43,43,46],
[39,42,38,0,37,41,38,47],
[38,42,37,43,0,39,37,48],
[39,34,37,39,41,0,38,43],
[42,41,37,42,43,42,0,45],
[36,31,34,33,32,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,24,37,31,34,38,29],
[48,0,28,28,36,32,41,42],
[56,52,0,25,31,35,32,35],
[43,52,55,0,38,49,39,36],
[49,44,49,42,0,46,44,33],
[46,48,45,31,34,0,31,45],
[42,39,48,41,36,49,0,44],
[51,38,45,44,47,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,48,56,46,41,50],
[42,0,47,45,50,47,39,46],
[41,33,0,38,47,37,34,51],
[32,35,42,0,49,44,34,40],
[24,30,33,31,0,42,25,29],
[34,33,43,36,38,0,34,37],
[39,41,46,46,55,46,0,52],
[30,34,29,40,51,43,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,43,34,45,43,37],
[39,0,36,40,43,39,44,38],
[39,44,0,40,40,40,40,38],
[37,40,40,0,38,41,39,35],
[46,37,40,42,0,40,45,43],
[35,41,40,39,40,0,39,46],
[37,36,40,41,35,41,0,35],
[43,42,42,45,37,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,43,42,38,49,36,37],
[49,0,42,45,36,51,52,43],
[37,38,0,54,38,40,52,37],
[38,35,26,0,38,43,34,23],
[42,44,42,42,0,42,33,33],
[31,29,40,37,38,0,35,33],
[44,28,28,46,47,45,0,37],
[43,37,43,57,47,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,39,39,37,35,42],
[38,0,38,39,35,39,36,32],
[39,42,0,42,35,41,42,43],
[41,41,38,0,39,41,39,44],
[41,45,45,41,0,46,38,41],
[43,41,39,39,34,0,38,37],
[45,44,38,41,42,42,0,38],
[38,48,37,36,39,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,27,40,34,42,30,26],
[43,0,35,49,47,58,33,40],
[53,45,0,40,41,62,47,46],
[40,31,40,0,40,42,31,44],
[46,33,39,40,0,47,32,34],
[38,22,18,38,33,0,30,37],
[50,47,33,49,48,50,0,40],
[54,40,34,36,46,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,37,35,38,39,46,38],
[47,0,44,38,50,41,48,44],
[43,36,0,35,36,43,45,43],
[45,42,45,0,41,48,44,35],
[42,30,44,39,0,45,46,39],
[41,39,37,32,35,0,43,41],
[34,32,35,36,34,37,0,32],
[42,36,37,45,41,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,55,64,64,55,36,71],
[25,0,28,25,50,50,25,80],
[25,52,0,47,50,64,61,71],
[16,55,33,0,41,55,30,71],
[16,30,30,39,0,14,30,30],
[25,30,16,25,66,0,30,52],
[44,55,19,50,50,50,0,71],
[9,0,9,9,50,28,9,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,34,37,31,37,34,41],
[52,0,39,41,44,44,48,43],
[46,41,0,33,40,36,40,42],
[43,39,47,0,41,43,42,51],
[49,36,40,39,0,45,44,38],
[43,36,44,37,35,0,34,41],
[46,32,40,38,36,46,0,45],
[39,37,38,29,42,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,36,27,28,37,48,31],
[48,0,40,41,47,42,43,39],
[44,40,0,31,40,36,45,39],
[53,39,49,0,42,42,46,36],
[52,33,40,38,0,41,53,42],
[43,38,44,38,39,0,47,39],
[32,37,35,34,27,33,0,39],
[49,41,41,44,38,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,36,37,38,35,35],
[36,0,37,40,39,36,33,42],
[45,43,0,41,39,34,34,41],
[44,40,39,0,38,47,35,43],
[43,41,41,42,0,46,34,46],
[42,44,46,33,34,0,40,44],
[45,47,46,45,46,40,0,46],
[45,38,39,37,34,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,42,39,33,39,39],
[41,0,43,34,37,36,34,40],
[40,37,0,40,29,38,36,36],
[38,46,40,0,42,35,39,37],
[41,43,51,38,0,40,47,46],
[47,44,42,45,40,0,40,40],
[41,46,44,41,33,40,0,33],
[41,40,44,43,34,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,45,41,40,40,43],
[43,0,37,45,41,41,42,39],
[42,43,0,44,46,38,43,43],
[35,35,36,0,37,33,39,33],
[39,39,34,43,0,39,46,40],
[40,39,42,47,41,0,43,43],
[40,38,37,41,34,37,0,37],
[37,41,37,47,40,37,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,54,60,43,27,41,55],
[37,0,53,50,32,36,21,50],
[26,27,0,33,22,38,33,56],
[20,30,47,0,24,42,13,55],
[37,48,58,56,0,42,45,58],
[53,44,42,38,38,0,37,69],
[39,59,47,67,35,43,0,56],
[25,30,24,25,22,11,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,41,36,38,39,30],
[41,0,40,40,34,42,39,36],
[46,40,0,39,39,46,46,41],
[39,40,41,0,39,45,41,36],
[44,46,41,41,0,48,42,37],
[42,38,34,35,32,0,37,31],
[41,41,34,39,38,43,0,33],
[50,44,39,44,43,49,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,36,40,35,34,40,28],
[51,0,45,47,38,34,30,35],
[44,35,0,40,33,28,36,30],
[40,33,40,0,27,27,22,38],
[45,42,47,53,0,40,44,43],
[46,46,52,53,40,0,49,48],
[40,50,44,58,36,31,0,48],
[52,45,50,42,37,32,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,43,43,27,45,38],
[39,0,44,37,48,36,44,36],
[38,36,0,31,35,32,36,30],
[37,43,49,0,37,38,41,29],
[37,32,45,43,0,28,40,42],
[53,44,48,42,52,0,42,28],
[35,36,44,39,40,38,0,27],
[42,44,50,51,38,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,45,43,40,33,43],
[44,0,38,35,40,38,40,38],
[40,42,0,41,43,31,45,34],
[35,45,39,0,46,31,42,35],
[37,40,37,34,0,29,37,33],
[40,42,49,49,51,0,45,39],
[47,40,35,38,43,35,0,33],
[37,42,46,45,47,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,38,30,42,36,36],
[46,0,38,43,37,42,40,36],
[42,42,0,47,35,42,38,45],
[42,37,33,0,33,34,31,37],
[50,43,45,47,0,43,37,45],
[38,38,38,46,37,0,36,38],
[44,40,42,49,43,44,0,46],
[44,44,35,43,35,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,53,40,55,44,53,56],
[39,0,44,42,47,37,41,35],
[27,36,0,40,53,42,30,29],
[40,38,40,0,43,29,39,31],
[25,33,27,37,0,30,27,23],
[36,43,38,51,50,0,35,31],
[27,39,50,41,53,45,0,39],
[24,45,51,49,57,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,45,40,49,39,41],
[46,0,41,40,39,52,47,49],
[37,39,0,39,35,47,37,40],
[35,40,41,0,30,41,51,45],
[40,41,45,50,0,44,43,48],
[31,28,33,39,36,0,32,42],
[41,33,43,29,37,48,0,40],
[39,31,40,35,32,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,40,46,31,43,35],
[40,0,27,42,37,41,42,33],
[44,53,0,41,56,38,52,42],
[40,38,39,0,43,37,45,36],
[34,43,24,37,0,37,42,31],
[49,39,42,43,43,0,42,38],
[37,38,28,35,38,38,0,29],
[45,47,38,44,49,42,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,40,35,34,39,41],
[41,0,37,37,40,32,42,40],
[43,43,0,37,36,39,47,36],
[40,43,43,0,43,43,51,42],
[45,40,44,37,0,38,41,49],
[46,48,41,37,42,0,52,39],
[41,38,33,29,39,28,0,40],
[39,40,44,38,31,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,33,40,46,34,33,41],
[42,0,35,52,40,26,31,50],
[47,45,0,42,39,27,38,46],
[40,28,38,0,45,26,24,41],
[34,40,41,35,0,27,33,38],
[46,54,53,54,53,0,40,47],
[47,49,42,56,47,40,0,48],
[39,30,34,39,42,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,45,37,45,49,45,39],
[48,0,40,54,50,46,43,46],
[35,40,0,44,48,45,27,46],
[43,26,36,0,42,44,34,41],
[35,30,32,38,0,35,46,34],
[31,34,35,36,45,0,25,41],
[35,37,53,46,34,55,0,52],
[41,34,34,39,46,39,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,41,40,43,37,41],
[38,0,40,28,30,33,31,39],
[34,40,0,34,34,34,44,39],
[39,52,46,0,43,46,47,41],
[40,50,46,37,0,41,49,41],
[37,47,46,34,39,0,42,44],
[43,49,36,33,31,38,0,37],
[39,41,41,39,39,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,33,45,43,52,40,42],
[38,0,26,50,36,52,34,30],
[47,54,0,47,40,45,48,37],
[35,30,33,0,37,54,39,45],
[37,44,40,43,0,46,30,39],
[28,28,35,26,34,0,33,32],
[40,46,32,41,50,47,0,47],
[38,50,43,35,41,48,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,39,37,34,33,25,30],
[46,0,45,41,37,28,41,40],
[41,35,0,49,38,34,32,34],
[43,39,31,0,39,39,39,33],
[46,43,42,41,0,44,45,37],
[47,52,46,41,36,0,35,41],
[55,39,48,41,35,45,0,34],
[50,40,46,47,43,39,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,57,44,40,41,39,43],
[44,0,45,46,43,41,49,34],
[23,35,0,36,40,32,38,32],
[36,34,44,0,29,33,41,33],
[40,37,40,51,0,35,42,40],
[39,39,48,47,45,0,52,37],
[41,31,42,39,38,28,0,32],
[37,46,48,47,40,43,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,41,43,39,43,43],
[37,0,33,35,33,32,39,36],
[37,47,0,44,41,37,46,43],
[39,45,36,0,41,42,39,40],
[37,47,39,39,0,33,49,40],
[41,48,43,38,47,0,49,42],
[37,41,34,41,31,31,0,35],
[37,44,37,40,40,38,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,28,44,26,30,35],
[41,0,44,33,43,33,41,33],
[41,36,0,41,49,41,46,42],
[52,47,39,0,53,45,45,33],
[36,37,31,27,0,32,27,23],
[54,47,39,35,48,0,41,38],
[50,39,34,35,53,39,0,32],
[45,47,38,47,57,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,39,43,62,42,55,58],
[17,0,25,26,55,28,19,18],
[41,55,0,38,50,39,34,47],
[37,54,42,0,64,44,37,47],
[18,25,30,16,0,12,17,23],
[38,52,41,36,68,0,32,54],
[25,61,46,43,63,48,0,37],
[22,62,33,33,57,26,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,49,47,39,46,41],
[39,0,47,38,39,28,38,40],
[40,33,0,39,45,39,42,36],
[31,42,41,0,45,35,46,37],
[33,41,35,35,0,39,40,40],
[41,52,41,45,41,0,45,35],
[34,42,38,34,40,35,0,30],
[39,40,44,43,40,45,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,30,29,27,27,31],
[42,0,35,33,35,26,29,33],
[41,45,0,33,46,30,38,39],
[50,47,47,0,42,41,40,42],
[51,45,34,38,0,36,32,36],
[53,54,50,39,44,0,41,39],
[53,51,42,40,48,39,0,43],
[49,47,41,38,44,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,41,38,55,52,62],
[34,0,35,43,34,46,49,50],
[42,45,0,46,35,49,49,57],
[39,37,34,0,40,38,42,52],
[42,46,45,40,0,52,64,43],
[25,34,31,42,28,0,30,47],
[28,31,31,38,16,50,0,48],
[18,30,23,28,37,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,38,46,30,37,33],
[37,0,42,42,52,40,42,37],
[38,38,0,46,45,34,40,32],
[42,38,34,0,38,41,43,33],
[34,28,35,42,0,35,42,28],
[50,40,46,39,45,0,39,41],
[43,38,40,37,38,41,0,35],
[47,43,48,47,52,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,37,46,40,53,42],
[32,0,40,36,31,30,42,31],
[37,40,0,38,34,39,41,36],
[43,44,42,0,40,37,47,48],
[34,49,46,40,0,41,43,45],
[40,50,41,43,39,0,44,36],
[27,38,39,33,37,36,0,29],
[38,49,44,32,35,44,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,53,43,45,42,48],
[42,0,41,55,42,50,31,49],
[40,39,0,54,39,43,33,47],
[27,25,26,0,29,38,24,45],
[37,38,41,51,0,48,41,49],
[35,30,37,42,32,0,32,40],
[38,49,47,56,39,48,0,56],
[32,31,33,35,31,40,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,33,46,26,33,46,34],
[39,0,32,40,34,25,40,36],
[47,48,0,38,38,33,40,43],
[34,40,42,0,35,29,39,37],
[54,46,42,45,0,36,36,36],
[47,55,47,51,44,0,46,40],
[34,40,40,41,44,34,0,30],
[46,44,37,43,44,40,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,53,50,31,50,44,41],
[37,0,58,45,47,47,47,38],
[27,22,0,38,39,37,34,41],
[30,35,42,0,45,39,39,31],
[49,33,41,35,0,38,39,35],
[30,33,43,41,42,0,39,34],
[36,33,46,41,41,41,0,41],
[39,42,39,49,45,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,40,33,42,40,37],
[37,0,39,47,40,40,36,46],
[34,41,0,40,40,38,36,39],
[40,33,40,0,34,39,31,39],
[47,40,40,46,0,38,42,41],
[38,40,42,41,42,0,37,42],
[40,44,44,49,38,43,0,46],
[43,34,41,41,39,38,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,40,60,40,41,43],
[42,0,33,46,57,50,42,44],
[46,47,0,40,44,51,49,39],
[40,34,40,0,53,41,33,33],
[20,23,36,27,0,38,23,28],
[40,30,29,39,42,0,43,44],
[39,38,31,47,57,37,0,42],
[37,36,41,47,52,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,58,15,32,52,32],
[41,0,43,37,40,17,65,45],
[47,37,0,34,30,32,62,40],
[22,43,46,0,28,27,35,33],
[65,40,50,52,0,52,74,19],
[48,63,48,53,28,0,62,35],
[28,15,18,45,6,18,0,6],
[48,35,40,47,61,45,74,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,33,54,46,36,39,45],
[45,0,39,50,39,35,41,42],
[47,41,0,52,40,39,44,46],
[26,30,28,0,36,38,33,41],
[34,41,40,44,0,40,34,43],
[44,45,41,42,40,0,47,39],
[41,39,36,47,46,33,0,45],
[35,38,34,39,37,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,54,54,52,53,36,69],
[40,0,36,40,45,43,47,50],
[26,44,0,28,33,33,33,45],
[26,40,52,0,33,48,34,60],
[28,35,47,47,0,50,34,51],
[27,37,47,32,30,0,23,57],
[44,33,47,46,46,57,0,66],
[11,30,35,20,29,23,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,29,38,35,30,31],
[51,0,52,36,42,45,47,42],
[48,28,0,35,43,38,32,34],
[51,44,45,0,46,51,45,39],
[42,38,37,34,0,45,34,35],
[45,35,42,29,35,0,36,34],
[50,33,48,35,46,44,0,38],
[49,38,46,41,45,46,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,39,37,37,37,36],
[38,0,34,38,38,33,36,31],
[38,46,0,41,40,43,33,46],
[41,42,39,0,44,44,38,45],
[43,42,40,36,0,42,37,46],
[43,47,37,36,38,0,36,44],
[43,44,47,42,43,44,0,40],
[44,49,34,35,34,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,39,45,38,47,35],
[39,0,31,31,35,34,40,34],
[45,49,0,42,42,46,50,38],
[41,49,38,0,41,38,40,36],
[35,45,38,39,0,37,48,39],
[42,46,34,42,43,0,45,42],
[33,40,30,40,32,35,0,35],
[45,46,42,44,41,38,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,35,42,47,37,49],
[44,0,47,43,39,48,36,43],
[36,33,0,43,33,40,36,36],
[45,37,37,0,40,42,40,41],
[38,41,47,40,0,44,39,50],
[33,32,40,38,36,0,37,47],
[43,44,44,40,41,43,0,49],
[31,37,44,39,30,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,39,41,39,34,33],
[41,0,42,30,38,38,36,40],
[37,38,0,43,45,36,37,29],
[41,50,37,0,40,45,43,37],
[39,42,35,40,0,38,30,31],
[41,42,44,35,42,0,40,42],
[46,44,43,37,50,40,0,45],
[47,40,51,43,49,38,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,46,43,41,39,39],
[39,0,39,37,48,37,39,38],
[36,41,0,44,44,41,40,38],
[34,43,36,0,42,38,43,37],
[37,32,36,38,0,38,42,34],
[39,43,39,42,42,0,35,46],
[41,41,40,37,38,45,0,43],
[41,42,42,43,46,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,52,44,36,56,42],
[35,0,50,41,45,46,55,35],
[34,30,0,37,29,37,46,21],
[28,39,43,0,40,35,48,34],
[36,35,51,40,0,41,49,36],
[44,34,43,45,39,0,54,35],
[24,25,34,32,31,26,0,23],
[38,45,59,46,44,45,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,50,43,38,52,32,39],
[45,0,51,39,48,50,47,37],
[30,29,0,34,37,40,32,23],
[37,41,46,0,42,38,30,25],
[42,32,43,38,0,49,42,37],
[28,30,40,42,31,0,28,34],
[48,33,48,50,38,52,0,42],
[41,43,57,55,43,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,38,33,36,38,34,33],
[51,0,47,44,42,42,47,40],
[42,33,0,36,35,40,37,30],
[47,36,44,0,38,45,38,40],
[44,38,45,42,0,35,37,43],
[42,38,40,35,45,0,41,45],
[46,33,43,42,43,39,0,40],
[47,40,50,40,37,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,25,26,37,39,25],
[44,0,30,32,34,41,41,31],
[45,50,0,45,38,50,45,48],
[55,48,35,0,38,48,43,36],
[54,46,42,42,0,40,39,35],
[43,39,30,32,40,0,44,35],
[41,39,35,37,41,36,0,41],
[55,49,32,44,45,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,37,38,33,44,41,31],
[61,0,56,50,54,53,53,40],
[43,24,0,38,41,45,44,21],
[42,30,42,0,34,50,45,33],
[47,26,39,46,0,42,43,24],
[36,27,35,30,38,0,42,23],
[39,27,36,35,37,38,0,23],
[49,40,59,47,56,57,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,34,30,33,32,46],
[41,0,34,35,33,35,28,39],
[43,46,0,42,41,40,45,48],
[46,45,38,0,43,51,34,35],
[50,47,39,37,0,42,41,48],
[47,45,40,29,38,0,35,41],
[48,52,35,46,39,45,0,49],
[34,41,32,45,32,39,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,41,45,47,40,46],
[38,0,38,41,39,45,41,42],
[41,42,0,41,37,56,45,38],
[39,39,39,0,46,46,50,40],
[35,41,43,34,0,42,34,42],
[33,35,24,34,38,0,33,27],
[40,39,35,30,46,47,0,40],
[34,38,42,40,38,53,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,50,45,38,45,45],
[40,0,36,45,43,33,40,41],
[38,44,0,46,42,43,41,44],
[30,35,34,0,34,33,31,35],
[35,37,38,46,0,34,39,44],
[42,47,37,47,46,0,39,47],
[35,40,39,49,41,41,0,43],
[35,39,36,45,36,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,47,40,48,46,38,50],
[39,0,40,35,46,49,47,45],
[33,40,0,35,42,41,37,40],
[40,45,45,0,44,48,44,46],
[32,34,38,36,0,40,37,42],
[34,31,39,32,40,0,35,29],
[42,33,43,36,43,45,0,34],
[30,35,40,34,38,51,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,49,36,57,50,38,34],
[46,0,46,31,50,42,32,27],
[31,34,0,31,51,42,24,26],
[44,49,49,0,53,51,34,42],
[23,30,29,27,0,27,26,21],
[30,38,38,29,53,0,36,34],
[42,48,56,46,54,44,0,40],
[46,53,54,38,59,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,37,46,43,31,54],
[31,0,43,39,52,43,36,56],
[33,37,0,29,50,43,34,55],
[43,41,51,0,43,29,27,42],
[34,28,30,37,0,36,36,53],
[37,37,37,51,44,0,43,48],
[49,44,46,53,44,37,0,61],
[26,24,25,38,27,32,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,55,37,49,49,39],
[34,0,48,45,39,49,36,33],
[29,32,0,36,24,40,44,30],
[25,35,44,0,31,35,40,26],
[43,41,56,49,0,49,39,45],
[31,31,40,45,31,0,37,33],
[31,44,36,40,41,43,0,33],
[41,47,50,54,35,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,44,35,44,35,42,36],
[51,0,49,51,60,36,44,41],
[36,31,0,37,47,29,51,25],
[45,29,43,0,48,32,46,33],
[36,20,33,32,0,21,44,28],
[45,44,51,48,59,0,39,37],
[38,36,29,34,36,41,0,35],
[44,39,55,47,52,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,40,36,40,39,38],
[38,0,45,39,36,39,37,40],
[35,35,0,38,34,31,34,32],
[40,41,42,0,34,36,38,35],
[44,44,46,46,0,37,41,45],
[40,41,49,44,43,0,38,40],
[41,43,46,42,39,42,0,39],
[42,40,48,45,35,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,34,36,35,37,42],
[43,0,35,35,39,37,43,43],
[43,45,0,41,40,38,38,45],
[46,45,39,0,45,43,41,43],
[44,41,40,35,0,35,39,40],
[45,43,42,37,45,0,39,42],
[43,37,42,39,41,41,0,40],
[38,37,35,37,40,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,28,34,35,28,27,42],
[61,0,39,47,43,47,43,46],
[52,41,0,47,34,40,31,46],
[46,33,33,0,37,45,36,43],
[45,37,46,43,0,32,40,48],
[52,33,40,35,48,0,43,34],
[53,37,49,44,40,37,0,44],
[38,34,34,37,32,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,41,41,37,33,40],
[42,0,37,44,44,48,39,50],
[42,43,0,44,43,44,40,47],
[39,36,36,0,47,42,35,47],
[39,36,37,33,0,39,34,44],
[43,32,36,38,41,0,39,48],
[47,41,40,45,46,41,0,47],
[40,30,33,33,36,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,37,43,44,47,46],
[38,0,50,41,38,41,51,38],
[37,30,0,43,34,37,37,36],
[43,39,37,0,24,32,34,31],
[37,42,46,56,0,42,43,42],
[36,39,43,48,38,0,44,49],
[33,29,43,46,37,36,0,35],
[34,42,44,49,38,31,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,47,45,38,39,37],
[43,0,46,47,42,35,40,45],
[45,34,0,44,47,38,37,34],
[33,33,36,0,33,29,26,39],
[35,38,33,47,0,36,31,41],
[42,45,42,51,44,0,40,44],
[41,40,43,54,49,40,0,46],
[43,35,46,41,39,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,39,42,38,43,38],
[43,0,45,38,40,39,37,37],
[31,35,0,23,35,32,33,37],
[41,42,57,0,49,50,39,42],
[38,40,45,31,0,41,42,38],
[42,41,48,30,39,0,45,35],
[37,43,47,41,38,35,0,34],
[42,43,43,38,42,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,49,39,34,45,47,33],
[42,0,45,37,38,40,42,33],
[31,35,0,34,33,39,36,31],
[41,43,46,0,32,43,43,33],
[46,42,47,48,0,44,45,40],
[35,40,41,37,36,0,42,36],
[33,38,44,37,35,38,0,30],
[47,47,49,47,40,44,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,42,37,38,45,42],
[34,0,38,41,34,35,43,40],
[43,42,0,48,36,39,39,37],
[38,39,32,0,38,39,45,34],
[43,46,44,42,0,42,42,38],
[42,45,41,41,38,0,41,41],
[35,37,41,35,38,39,0,35],
[38,40,43,46,42,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,54,42,50,45,22,36],
[53,0,61,46,49,45,35,39],
[26,19,0,26,37,31,13,30],
[38,34,54,0,50,26,33,33],
[30,31,43,30,0,41,33,38],
[35,35,49,54,39,0,46,44],
[58,45,67,47,47,34,0,46],
[44,41,50,47,42,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,30,32,34,31,29],
[43,0,34,42,38,37,41,39],
[46,46,0,44,42,39,44,38],
[50,38,36,0,42,39,41,40],
[48,42,38,38,0,43,47,39],
[46,43,41,41,37,0,47,42],
[49,39,36,39,33,33,0,37],
[51,41,42,40,41,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,36,45,41,35,40],
[38,0,39,40,43,36,36,40],
[38,41,0,33,37,30,31,42],
[44,40,47,0,38,40,38,42],
[35,37,43,42,0,39,37,40],
[39,44,50,40,41,0,41,45],
[45,44,49,42,43,39,0,42],
[40,40,38,38,40,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,43,42,37,44,41],
[40,0,40,41,40,42,37,40],
[37,40,0,50,40,33,42,39],
[37,39,30,0,41,43,41,38],
[38,40,40,39,0,39,46,38],
[43,38,47,37,41,0,39,37],
[36,43,38,39,34,41,0,40],
[39,40,41,42,42,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,36,38,38,40,37,40],
[49,0,43,51,40,43,44,41],
[44,37,0,41,37,43,46,42],
[42,29,39,0,41,33,48,31],
[42,40,43,39,0,41,40,39],
[40,37,37,47,39,0,43,39],
[43,36,34,32,40,37,0,38],
[40,39,38,49,41,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,25,34,30,30,37,43],
[44,0,38,42,46,33,32,38],
[55,42,0,48,38,40,37,46],
[46,38,32,0,44,39,36,45],
[50,34,42,36,0,42,42,47],
[50,47,40,41,38,0,44,41],
[43,48,43,44,38,36,0,42],
[37,42,34,35,33,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,47,46,38,46,31,42],
[28,0,36,40,32,43,26,42],
[33,44,0,52,54,40,38,51],
[34,40,28,0,26,33,28,39],
[42,48,26,54,0,52,52,59],
[34,37,40,47,28,0,29,50],
[49,54,42,52,28,51,0,63],
[38,38,29,41,21,30,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,63,43,70,41,77,30],
[20,0,43,47,31,12,77,20],
[17,37,0,38,25,4,71,17],
[37,33,42,0,44,14,75,36],
[10,49,55,36,0,10,51,33],
[39,68,76,66,70,0,74,46],
[3,3,9,5,29,6,0,5],
[50,60,63,44,47,34,75,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,44,45,45,51,47],
[41,0,35,45,31,44,42,34],
[35,45,0,39,33,50,39,30],
[36,35,41,0,33,44,40,38],
[35,49,47,47,0,43,45,40],
[35,36,30,36,37,0,39,30],
[29,38,41,40,35,41,0,33],
[33,46,50,42,40,50,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,35,34,31,44,36],
[43,0,40,41,42,39,45,44],
[44,40,0,44,46,36,44,42],
[45,39,36,0,37,41,45,42],
[46,38,34,43,0,36,47,41],
[49,41,44,39,44,0,45,44],
[36,35,36,35,33,35,0,38],
[44,36,38,38,39,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,44,29,39,39,42],
[37,0,36,40,29,34,40,37],
[44,44,0,36,35,31,43,40],
[36,40,44,0,27,41,38,39],
[51,51,45,53,0,40,52,45],
[41,46,49,39,40,0,40,41],
[41,40,37,42,28,40,0,43],
[38,43,40,41,35,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,37,37,36,35,33],
[46,0,40,39,30,44,37,33],
[46,40,0,39,43,45,42,36],
[43,41,41,0,42,51,41,40],
[43,50,37,38,0,45,40,40],
[44,36,35,29,35,0,31,31],
[45,43,38,39,40,49,0,36],
[47,47,44,40,40,49,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,32,41,35,40,32],
[43,0,38,40,48,38,45,50],
[41,42,0,44,46,41,42,39],
[48,40,36,0,44,41,46,39],
[39,32,34,36,0,32,43,35],
[45,42,39,39,48,0,50,41],
[40,35,38,34,37,30,0,37],
[48,30,41,41,45,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,50,44,40,44,49],
[32,0,51,45,40,38,39,44],
[37,29,0,41,41,36,31,38],
[30,35,39,0,35,35,31,32],
[36,40,39,45,0,44,38,45],
[40,42,44,45,36,0,43,42],
[36,41,49,49,42,37,0,48],
[31,36,42,48,35,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,46,44,41,40,50],
[44,0,38,47,47,41,38,50],
[39,42,0,45,45,36,57,54],
[34,33,35,0,38,30,37,40],
[36,33,35,42,0,35,43,41],
[39,39,44,50,45,0,47,47],
[40,42,23,43,37,33,0,45],
[30,30,26,40,39,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,26,41,36,31,43,31],
[47,0,45,42,44,41,35,50],
[54,35,0,61,50,37,56,43],
[39,38,19,0,38,34,40,40],
[44,36,30,42,0,35,29,24],
[49,39,43,46,45,0,46,42],
[37,45,24,40,51,34,0,40],
[49,30,37,40,56,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,49,39,40,47,36],
[38,0,40,41,37,43,35,37],
[38,40,0,41,38,37,34,35],
[31,39,39,0,28,32,29,29],
[41,43,42,52,0,44,42,38],
[40,37,43,48,36,0,40,35],
[33,45,46,51,38,40,0,42],
[44,43,45,51,42,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,33,34,41,37,42,39],
[35,0,28,28,34,35,37,34],
[47,52,0,45,41,43,37,45],
[46,52,35,0,45,40,46,37],
[39,46,39,35,0,43,42,36],
[43,45,37,40,37,0,48,46],
[38,43,43,34,38,32,0,35],
[41,46,35,43,44,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,70,38,38,32,70],
[42,0,48,80,48,10,42,42],
[32,32,0,70,32,32,32,32],
[10,0,10,0,10,10,42,42],
[42,32,48,70,0,10,42,32],
[42,70,48,70,70,0,32,70],
[48,38,48,38,38,48,0,70],
[10,38,48,38,48,10,10,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,41,39,37,39,42],
[39,0,42,34,48,37,43,39],
[38,38,0,39,48,33,34,32],
[39,46,41,0,40,41,32,44],
[41,32,32,40,0,31,30,40],
[43,43,47,39,49,0,37,49],
[41,37,46,48,50,43,0,55],
[38,41,48,36,40,31,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,41,61,59,36,50,56],
[30,0,38,30,47,28,45,50],
[39,42,0,30,42,45,33,40],
[19,50,50,0,60,34,37,45],
[21,33,38,20,0,32,27,35],
[44,52,35,46,48,0,43,53],
[30,35,47,43,53,37,0,43],
[24,30,40,35,45,27,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,41,33,42,39,38],
[41,0,40,41,40,43,43,39],
[41,40,0,34,35,45,42,40],
[39,39,46,0,36,33,41,40],
[47,40,45,44,0,47,43,40],
[38,37,35,47,33,0,45,42],
[41,37,38,39,37,35,0,41],
[42,41,40,40,40,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,40,43,35,43,37],
[42,0,39,37,38,35,41,40],
[39,41,0,31,37,28,33,33],
[40,43,49,0,41,32,43,40],
[37,42,43,39,0,33,37,26],
[45,45,52,48,47,0,49,40],
[37,39,47,37,43,31,0,36],
[43,40,47,40,54,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,40,45,35,49,43],
[42,0,45,42,44,35,39,46],
[39,35,0,42,41,38,46,46],
[40,38,38,0,37,40,39,45],
[35,36,39,43,0,34,44,38],
[45,45,42,40,46,0,41,44],
[31,41,34,41,36,39,0,45],
[37,34,34,35,42,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,50,36,40,63,44,37],
[35,0,36,32,39,49,45,38],
[30,44,0,42,46,54,47,46],
[44,48,38,0,45,50,45,45],
[40,41,34,35,0,49,38,37],
[17,31,26,30,31,0,34,35],
[36,35,33,35,42,46,0,41],
[43,42,34,35,43,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,45,39,45,41,39,31],
[48,0,53,42,50,47,49,40],
[35,27,0,36,35,39,33,31],
[41,38,44,0,37,45,44,36],
[35,30,45,43,0,44,44,35],
[39,33,41,35,36,0,41,41],
[41,31,47,36,36,39,0,39],
[49,40,49,44,45,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,43,41,32,32,41],
[34,0,38,34,33,36,34,38],
[42,42,0,34,43,39,37,44],
[37,46,46,0,41,40,34,45],
[39,47,37,39,0,43,45,43],
[48,44,41,40,37,0,38,46],
[48,46,43,46,35,42,0,48],
[39,42,36,35,37,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,47,29,25,56,40,57],
[44,0,39,29,33,46,37,70],
[33,41,0,36,26,53,48,60],
[51,51,44,0,40,54,42,61],
[55,47,54,40,0,49,43,71],
[24,34,27,26,31,0,53,56],
[40,43,32,38,37,27,0,54],
[23,10,20,19,9,24,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,62,41,57,43,38,53,55],
[18,0,26,67,33,38,50,42],
[39,54,0,63,33,28,57,67],
[23,13,17,0,24,21,49,44],
[37,47,47,56,0,46,58,58],
[42,42,52,59,34,0,47,58],
[27,30,23,31,22,33,0,47],
[25,38,13,36,22,22,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,37,30,33,42,33,41],
[47,0,48,44,37,46,49,39],
[43,32,0,35,34,35,30,41],
[50,36,45,0,34,39,32,49],
[47,43,46,46,0,55,36,45],
[38,34,45,41,25,0,36,41],
[47,31,50,48,44,44,0,39],
[39,41,39,31,35,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,41,43,38,38,44],
[44,0,34,43,46,40,37,39],
[45,46,0,47,43,41,38,46],
[39,37,33,0,45,34,33,39],
[37,34,37,35,0,40,37,38],
[42,40,39,46,40,0,46,40],
[42,43,42,47,43,34,0,45],
[36,41,34,41,42,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,39,44,47,39,39],
[40,0,37,41,48,37,41,37],
[44,43,0,47,47,44,45,40],
[41,39,33,0,47,43,40,35],
[36,32,33,33,0,34,43,31],
[33,43,36,37,46,0,45,31],
[41,39,35,40,37,35,0,34],
[41,43,40,45,49,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,48,44,37,34,37],
[39,0,42,44,36,37,35,36],
[35,38,0,42,42,37,33,40],
[32,36,38,0,38,33,37,30],
[36,44,38,42,0,35,31,43],
[43,43,43,47,45,0,40,42],
[46,45,47,43,49,40,0,42],
[43,44,40,50,37,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,36,37,29,27,27,43],
[48,0,33,44,38,30,40,46],
[44,47,0,45,31,35,37,48],
[43,36,35,0,31,34,33,36],
[51,42,49,49,0,40,51,50],
[53,50,45,46,40,0,49,58],
[53,40,43,47,29,31,0,47],
[37,34,32,44,30,22,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,29,39,44,33,46,37],
[42,0,45,44,55,39,53,41],
[51,35,0,40,36,41,43,40],
[41,36,40,0,40,37,51,39],
[36,25,44,40,0,36,48,36],
[47,41,39,43,44,0,45,47],
[34,27,37,29,32,35,0,26],
[43,39,40,41,44,33,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,38,37,35,38,37],
[47,0,43,42,42,40,44,43],
[42,37,0,45,41,38,41,36],
[42,38,35,0,43,43,41,40],
[43,38,39,37,0,39,40,37],
[45,40,42,37,41,0,41,39],
[42,36,39,39,40,39,0,33],
[43,37,44,40,43,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,21,44,33,27,37,50],
[56,0,10,38,32,23,38,57],
[59,70,0,48,41,35,39,58],
[36,42,32,0,30,22,37,62],
[47,48,39,50,0,42,53,41],
[53,57,45,58,38,0,68,66],
[43,42,41,43,27,12,0,25],
[30,23,22,18,39,14,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,37,42,31,45,31],
[43,0,35,38,41,32,44,33],
[41,45,0,35,35,32,38,36],
[43,42,45,0,38,48,47,35],
[38,39,45,42,0,39,45,40],
[49,48,48,32,41,0,46,35],
[35,36,42,33,35,34,0,28],
[49,47,44,45,40,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,41,51,36,42,39],
[36,0,48,33,49,38,42,33],
[31,32,0,37,39,40,42,32],
[39,47,43,0,45,36,54,41],
[29,31,41,35,0,33,45,34],
[44,42,40,44,47,0,57,39],
[38,38,38,26,35,23,0,30],
[41,47,48,39,46,41,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,49,45,33,41,45],
[45,0,40,43,44,38,38,44],
[42,40,0,49,41,33,38,42],
[31,37,31,0,32,31,25,32],
[35,36,39,48,0,44,42,43],
[47,42,47,49,36,0,40,42],
[39,42,42,55,38,40,0,37],
[35,36,38,48,37,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,32,47,36,37,41],
[34,0,34,35,35,35,32,36],
[41,46,0,40,45,42,43,40],
[48,45,40,0,42,43,49,44],
[33,45,35,38,0,38,44,37],
[44,45,38,37,42,0,34,45],
[43,48,37,31,36,46,0,38],
[39,44,40,36,43,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,18,20,11,49,29,48],
[26,0,35,38,18,35,17,38],
[62,45,0,40,39,53,53,57],
[60,42,40,0,43,54,43,55],
[69,62,41,37,0,66,53,64],
[31,45,27,26,14,0,19,54],
[51,63,27,37,27,61,0,54],
[32,42,23,25,16,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,28,40,26,49,43,21],
[44,0,40,35,38,59,41,33],
[52,40,0,45,44,48,45,44],
[40,45,35,0,50,49,29,37],
[54,42,36,30,0,33,30,15],
[31,21,32,31,47,0,33,36],
[37,39,35,51,50,47,0,31],
[59,47,36,43,65,44,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,35,35,42,32,37,39],
[55,0,38,38,55,51,46,42],
[45,42,0,41,38,49,45,40],
[45,42,39,0,52,48,41,47],
[38,25,42,28,0,39,40,45],
[48,29,31,32,41,0,44,42],
[43,34,35,39,40,36,0,53],
[41,38,40,33,35,38,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,45,40,36,47,39],
[40,0,37,43,32,37,39,43],
[42,43,0,37,36,34,40,36],
[35,37,43,0,41,29,46,41],
[40,48,44,39,0,39,41,46],
[44,43,46,51,41,0,51,40],
[33,41,40,34,39,29,0,35],
[41,37,44,39,34,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,29,38,29,36,37,27],
[33,0,24,33,30,45,40,39],
[51,56,0,49,40,48,65,40],
[42,47,31,0,38,34,33,41],
[51,50,40,42,0,39,28,33],
[44,35,32,46,41,0,40,19],
[43,40,15,47,52,40,0,33],
[53,41,40,39,47,61,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,44,47,32,33,35],
[38,0,40,54,38,38,42,36],
[45,40,0,43,51,31,34,32],
[36,26,37,0,40,26,27,31],
[33,42,29,40,0,31,34,34],
[48,42,49,54,49,0,49,40],
[47,38,46,53,46,31,0,27],
[45,44,48,49,46,40,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,44,42,51,50,32],
[33,0,35,39,34,40,37,31],
[43,45,0,41,40,46,51,38],
[36,41,39,0,40,44,47,34],
[38,46,40,40,0,50,45,42],
[29,40,34,36,30,0,41,29],
[30,43,29,33,35,39,0,35],
[48,49,42,46,38,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,54,46,39,48,39],
[39,0,39,48,45,39,45,40],
[35,41,0,52,44,39,43,36],
[26,32,28,0,33,29,35,27],
[34,35,36,47,0,40,46,35],
[41,41,41,51,40,0,40,37],
[32,35,37,45,34,40,0,31],
[41,40,44,53,45,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,25,37,50,41,41],
[46,0,55,44,39,50,54,38],
[51,25,0,36,36,34,41,40],
[55,36,44,0,53,57,51,43],
[43,41,44,27,0,42,52,29],
[30,30,46,23,38,0,39,33],
[39,26,39,29,28,41,0,37],
[39,42,40,37,51,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,39,32,53,39,41,46],
[31,0,28,29,40,24,34,34],
[41,52,0,44,43,40,43,34],
[48,51,36,0,40,38,47,44],
[27,40,37,40,0,31,44,35],
[41,56,40,42,49,0,50,46],
[39,46,37,33,36,30,0,38],
[34,46,46,36,45,34,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,72,46,33,23,67,56],
[24,0,54,44,26,23,49,16],
[8,26,0,5,18,0,31,0],
[34,36,75,0,36,41,75,28],
[47,54,62,44,0,23,47,62],
[57,57,80,39,57,0,75,49],
[13,31,49,5,33,5,0,23],
[24,64,80,52,18,31,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,41,50,41,43,42],
[41,0,41,35,40,35,37,35],
[32,39,0,34,41,36,36,37],
[39,45,46,0,53,46,46,41],
[30,40,39,27,0,40,32,33],
[39,45,44,34,40,0,35,40],
[37,43,44,34,48,45,0,35],
[38,45,43,39,47,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,49,46,40,38,36],
[34,0,47,45,39,40,40,40],
[34,33,0,40,34,33,31,33],
[31,35,40,0,37,40,34,35],
[34,41,46,43,0,38,34,33],
[40,40,47,40,42,0,37,37],
[42,40,49,46,46,43,0,42],
[44,40,47,45,47,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,35,37,35,36,37],
[49,0,36,37,41,38,40,38],
[43,44,0,40,45,35,41,37],
[45,43,40,0,48,45,45,41],
[43,39,35,32,0,38,40,32],
[45,42,45,35,42,0,41,37],
[44,40,39,35,40,39,0,33],
[43,42,43,39,48,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,0,80,0,40,40,0],
[0,0,0,0,0,0,40,0],
[80,80,0,80,40,80,80,0],
[0,80,0,0,0,40,40,0],
[80,80,40,80,0,80,40,40],
[40,80,0,40,0,0,40,0],
[40,40,0,40,40,40,0,0],
[80,80,80,80,40,80,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,48,20,43,41,46,33],
[35,0,49,29,49,34,33,41],
[32,31,0,17,31,40,34,31],
[60,51,63,0,45,41,46,38],
[37,31,49,35,0,31,52,39],
[39,46,40,39,49,0,34,26],
[34,47,46,34,28,46,0,26],
[47,39,49,42,41,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,24,52,19,12,46,47],
[61,0,52,56,46,50,56,39],
[56,28,0,57,52,50,51,34],
[28,24,23,0,18,0,34,17],
[61,34,28,62,0,56,44,45],
[68,30,30,80,24,0,46,47],
[34,24,29,46,36,34,0,22],
[33,41,46,63,35,33,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,39,36,36,33,35],
[41,0,41,42,45,42,40,36],
[39,39,0,41,39,45,40,40],
[41,38,39,0,39,40,36,34],
[44,35,41,41,0,41,36,38],
[44,38,35,40,39,0,38,40],
[47,40,40,44,44,42,0,37],
[45,44,40,46,42,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,41,33,37,35,37],
[38,0,38,32,28,36,29,29],
[35,42,0,39,36,42,35,40],
[39,48,41,0,36,47,37,36],
[47,52,44,44,0,43,40,40],
[43,44,38,33,37,0,38,41],
[45,51,45,43,40,42,0,38],
[43,51,40,44,40,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,26,39,35,39,40,31],
[45,0,40,35,40,45,44,37],
[54,40,0,45,40,40,42,38],
[41,45,35,0,39,42,47,40],
[45,40,40,41,0,46,37,36],
[41,35,40,38,34,0,38,27],
[40,36,38,33,43,42,0,32],
[49,43,42,40,44,53,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,34,19,23,33,26,38],
[56,0,54,46,40,42,46,52],
[46,26,0,27,31,32,38,44],
[61,34,53,0,40,33,54,42],
[57,40,49,40,0,43,50,43],
[47,38,48,47,37,0,41,43],
[54,34,42,26,30,39,0,47],
[42,28,36,38,37,37,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,52,34,38,44,30,53],
[51,0,47,29,36,46,29,44],
[28,33,0,24,36,39,24,43],
[46,51,56,0,48,59,36,53],
[42,44,44,32,0,53,45,56],
[36,34,41,21,27,0,30,52],
[50,51,56,44,35,50,0,51],
[27,36,37,27,24,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,30,38,39,42,34],
[41,0,47,42,37,41,42,53],
[42,33,0,31,38,40,39,46],
[50,38,49,0,42,50,47,45],
[42,43,42,38,0,41,39,45],
[41,39,40,30,39,0,39,43],
[38,38,41,33,41,41,0,40],
[46,27,34,35,35,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,38,45,43,43,45],
[36,0,38,37,43,42,44,47],
[34,42,0,41,40,36,40,41],
[42,43,39,0,47,38,42,52],
[35,37,40,33,0,32,45,45],
[37,38,44,42,48,0,42,47],
[37,36,40,38,35,38,0,39],
[35,33,39,28,35,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,55,37,48,34,39,50],
[31,0,39,33,31,35,34,48],
[25,41,0,33,39,34,36,37],
[43,47,47,0,42,45,40,46],
[32,49,41,38,0,37,31,47],
[46,45,46,35,43,0,39,41],
[41,46,44,40,49,41,0,51],
[30,32,43,34,33,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,50,52,40,50,40,46],
[40,0,44,48,33,47,37,38],
[30,36,0,49,33,47,36,43],
[28,32,31,0,29,42,28,34],
[40,47,47,51,0,48,43,44],
[30,33,33,38,32,0,30,41],
[40,43,44,52,37,50,0,52],
[34,42,37,46,36,39,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,28,40,43,49,44,42],
[46,0,42,39,44,43,43,36],
[52,38,0,39,43,37,32,52],
[40,41,41,0,55,53,43,48],
[37,36,37,25,0,21,43,55],
[31,37,43,27,59,0,33,39],
[36,37,48,37,37,47,0,60],
[38,44,28,32,25,41,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,34,33,36,43,40],
[44,0,50,46,42,46,40,42],
[37,30,0,39,33,41,38,42],
[46,34,41,0,44,46,40,37],
[47,38,47,36,0,38,35,36],
[44,34,39,34,42,0,37,42],
[37,40,42,40,45,43,0,40],
[40,38,38,43,44,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,30,44,57,63,49,45],
[31,0,24,33,41,33,33,45],
[50,56,0,38,47,52,51,58],
[36,47,42,0,46,53,42,54],
[23,39,33,34,0,34,39,40],
[17,47,28,27,46,0,34,46],
[31,47,29,38,41,46,0,35],
[35,35,22,26,40,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,38,48,43,42,44],
[39,0,37,38,38,36,37,39],
[31,43,0,35,43,36,41,42],
[42,42,45,0,40,43,48,41],
[32,42,37,40,0,35,41,43],
[37,44,44,37,45,0,38,44],
[38,43,39,32,39,42,0,42],
[36,41,38,39,37,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,40,34,41,41,38],
[44,0,43,40,37,42,38,42],
[40,37,0,36,37,41,34,36],
[40,40,44,0,37,42,43,39],
[46,43,43,43,0,44,38,40],
[39,38,39,38,36,0,33,39],
[39,42,46,37,42,47,0,41],
[42,38,44,41,40,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,41,36,41,55,30],
[40,0,52,40,40,42,48,34],
[45,28,0,44,26,46,39,40],
[39,40,36,0,24,24,29,43],
[44,40,54,56,0,47,57,61],
[39,38,34,56,33,0,47,59],
[25,32,41,51,23,33,0,37],
[50,46,40,37,19,21,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,44,43,40,47,41,40],
[64,0,57,44,52,64,31,48],
[36,23,0,28,38,38,22,28],
[37,36,52,0,51,44,31,33],
[40,28,42,29,0,47,39,33],
[33,16,42,36,33,0,15,33],
[39,49,58,49,41,65,0,53],
[40,32,52,47,47,47,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,43,41,44,41,44],
[37,0,40,40,32,38,43,43],
[42,40,0,38,36,41,36,37],
[37,40,42,0,42,42,43,35],
[39,48,44,38,0,42,40,45],
[36,42,39,38,38,0,40,38],
[39,37,44,37,40,40,0,41],
[36,37,43,45,35,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,36,43,40,40,38],
[43,0,35,46,47,35,43,38],
[51,45,0,44,50,47,49,35],
[44,34,36,0,47,46,38,45],
[37,33,30,33,0,39,32,34],
[40,45,33,34,41,0,41,36],
[40,37,31,42,48,39,0,36],
[42,42,45,35,46,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,28,52,39,44,60,29],
[32,0,20,50,60,38,53,29],
[52,60,0,42,67,31,59,47],
[28,30,38,0,49,23,47,40],
[41,20,13,31,0,14,29,39],
[36,42,49,57,66,0,56,44],
[20,27,21,33,51,24,0,22],
[51,51,33,40,41,36,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,36,36,31,33,32,31],
[39,0,36,37,34,43,34,37],
[44,44,0,40,35,45,34,45],
[44,43,40,0,41,37,41,43],
[49,46,45,39,0,44,41,48],
[47,37,35,43,36,0,41,40],
[48,46,46,39,39,39,0,43],
[49,43,35,37,32,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,42,40,38,43,37],
[39,0,34,39,40,38,41,37],
[37,46,0,35,41,42,46,37],
[38,41,45,0,37,40,48,30],
[40,40,39,43,0,40,40,40],
[42,42,38,40,40,0,38,38],
[37,39,34,32,40,42,0,36],
[43,43,43,50,40,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,49,48,35,42,45],
[41,0,39,44,50,37,40,46],
[34,41,0,43,49,39,39,38],
[31,36,37,0,44,37,39,42],
[32,30,31,36,0,25,37,38],
[45,43,41,43,55,0,40,42],
[38,40,41,41,43,40,0,37],
[35,34,42,38,42,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,47,39,42,45,33],
[40,0,48,43,35,41,39,33],
[45,32,0,45,42,38,42,38],
[33,37,35,0,29,32,38,22],
[41,45,38,51,0,45,51,41],
[38,39,42,48,35,0,40,36],
[35,41,38,42,29,40,0,36],
[47,47,42,58,39,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,48,48,37,44,47,40],
[34,0,39,42,38,42,39,40],
[32,41,0,42,35,45,40,40],
[32,38,38,0,38,39,35,42],
[43,42,45,42,0,38,42,35],
[36,38,35,41,42,0,41,40],
[33,41,40,45,38,39,0,38],
[40,40,40,38,45,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,32,40,47,30,43],
[37,0,35,40,42,49,35,37],
[39,45,0,46,36,46,42,42],
[48,40,34,0,39,42,33,42],
[40,38,44,41,0,43,37,38],
[33,31,34,38,37,0,32,31],
[50,45,38,47,43,48,0,50],
[37,43,38,38,42,49,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,37,40,41,41,32],
[43,0,43,40,43,38,43,41],
[40,37,0,33,36,46,45,35],
[43,40,47,0,43,39,40,42],
[40,37,44,37,0,40,45,37],
[39,42,34,41,40,0,44,41],
[39,37,35,40,35,36,0,36],
[48,39,45,38,43,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,44,44,31,34,31,52],
[27,0,43,39,31,33,29,41],
[36,37,0,39,32,45,35,40],
[36,41,41,0,37,43,42,49],
[49,49,48,43,0,36,45,48],
[46,47,35,37,44,0,39,52],
[49,51,45,38,35,41,0,68],
[28,39,40,31,32,28,12,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,33,46,52,41,44],
[37,0,22,36,35,44,42,38],
[48,58,0,50,47,56,33,50],
[47,44,30,0,43,54,35,44],
[34,45,33,37,0,40,26,32],
[28,36,24,26,40,0,24,26],
[39,38,47,45,54,56,0,49],
[36,42,30,36,48,54,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,51,34,45,41,44],
[45,0,40,51,38,41,42,43],
[41,40,0,53,47,43,38,42],
[29,29,27,0,32,35,35,29],
[46,42,33,48,0,48,49,34],
[35,39,37,45,32,0,38,37],
[39,38,42,45,31,42,0,36],
[36,37,38,51,46,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,26,39,28,42,51],
[33,0,39,30,34,36,32,38],
[35,41,0,25,32,34,34,43],
[54,50,55,0,39,42,50,45],
[41,46,48,41,0,38,42,41],
[52,44,46,38,42,0,47,51],
[38,48,46,30,38,33,0,44],
[29,42,37,35,39,29,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,39,38,31,44,42],
[43,0,49,39,40,33,43,46],
[35,31,0,37,32,28,30,32],
[41,41,43,0,37,32,41,44],
[42,40,48,43,0,40,42,45],
[49,47,52,48,40,0,48,46],
[36,37,50,39,38,32,0,37],
[38,34,48,36,35,34,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,48,58,62,40,41],
[39,0,31,33,34,34,30,37],
[31,49,0,33,33,46,32,36],
[32,47,47,0,46,59,33,46],
[22,46,47,34,0,42,28,44],
[18,46,34,21,38,0,38,33],
[40,50,48,47,52,42,0,29],
[39,43,44,34,36,47,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,40,43,44,40,54,51],
[26,0,30,32,36,24,27,36],
[40,50,0,42,49,37,40,42],
[37,48,38,0,43,40,43,44],
[36,44,31,37,0,36,40,37],
[40,56,43,40,44,0,41,44],
[26,53,40,37,40,39,0,48],
[29,44,38,36,43,36,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,39,41,44,40,44],
[39,0,47,42,39,42,46,47],
[35,33,0,44,38,40,38,37],
[41,38,36,0,36,38,42,40],
[39,41,42,44,0,45,43,48],
[36,38,40,42,35,0,40,48],
[40,34,42,38,37,40,0,39],
[36,33,43,40,32,32,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,32,34,38,34,30],
[41,0,44,34,31,45,35,34],
[49,36,0,56,41,34,44,33],
[48,46,24,0,29,45,26,33],
[46,49,39,51,0,32,43,31],
[42,35,46,35,48,0,36,39],
[46,45,36,54,37,44,0,42],
[50,46,47,47,49,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,39,44,37,42,37],
[45,0,49,42,44,37,45,33],
[40,31,0,32,41,32,41,30],
[41,38,48,0,40,37,40,35],
[36,36,39,40,0,30,34,32],
[43,43,48,43,50,0,48,40],
[38,35,39,40,46,32,0,33],
[43,47,50,45,48,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,44,39,32,31,46],
[37,0,43,35,42,29,42,37],
[34,37,0,25,41,34,43,43],
[36,45,55,0,43,43,20,39],
[41,38,39,37,0,34,52,54],
[48,51,46,37,46,0,34,46],
[49,38,37,60,28,46,0,43],
[34,43,37,41,26,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,47,51,42,48,40],
[39,0,52,43,43,39,47,40],
[32,28,0,34,32,41,42,30],
[33,37,46,0,46,39,44,35],
[29,37,48,34,0,37,45,35],
[38,41,39,41,43,0,43,38],
[32,33,38,36,35,37,0,34],
[40,40,50,45,45,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,34,40,39,43,41,46],
[49,0,44,48,33,55,40,43],
[46,36,0,44,40,58,43,47],
[40,32,36,0,29,47,40,50],
[41,47,40,51,0,56,48,56],
[37,25,22,33,24,0,30,32],
[39,40,37,40,32,50,0,45],
[34,37,33,30,24,48,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,36,42,40,52,33],
[42,0,44,32,32,34,48,33],
[35,36,0,30,30,29,45,33],
[44,48,50,0,45,46,52,39],
[38,48,50,35,0,34,50,46],
[40,46,51,34,46,0,51,37],
[28,32,35,28,30,29,0,32],
[47,47,47,41,34,43,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,41,41,35,40,42],
[40,0,43,40,40,35,41,46],
[36,37,0,40,34,34,45,43],
[39,40,40,0,41,42,33,44],
[39,40,46,39,0,43,33,49],
[45,45,46,38,37,0,36,52],
[40,39,35,47,47,44,0,47],
[38,34,37,36,31,28,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,51,48,36,35,31],
[47,0,44,52,45,38,36,43],
[42,36,0,41,37,35,33,36],
[29,28,39,0,27,30,24,31],
[32,35,43,53,0,39,36,31],
[44,42,45,50,41,0,37,37],
[45,44,47,56,44,43,0,40],
[49,37,44,49,49,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,43,43,45,47,42],
[36,0,34,42,33,35,36,28],
[40,46,0,39,34,39,43,35],
[37,38,41,0,39,38,41,35],
[37,47,46,41,0,42,38,40],
[35,45,41,42,38,0,42,37],
[33,44,37,39,42,38,0,34],
[38,52,45,45,40,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,38,44,38,49,44,36],
[47,0,33,48,48,46,43,34],
[42,47,0,50,45,44,37,41],
[36,32,30,0,39,29,33,24],
[42,32,35,41,0,37,33,31],
[31,34,36,51,43,0,42,30],
[36,37,43,47,47,38,0,36],
[44,46,39,56,49,50,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,72,61,38,61,54,72,72],
[8,0,51,29,46,35,70,40],
[19,29,0,28,44,16,40,43],
[42,51,52,0,49,33,50,51],
[19,34,36,31,0,25,40,31],
[26,45,64,47,55,0,52,48],
[8,10,40,30,40,28,0,25],
[8,40,37,29,49,32,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,30,37,34,29,37,37],
[46,0,39,48,48,43,49,39],
[50,41,0,43,42,39,49,45],
[43,32,37,0,31,34,38,36],
[46,32,38,49,0,39,40,34],
[51,37,41,46,41,0,44,40],
[43,31,31,42,40,36,0,34],
[43,41,35,44,46,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,27,31,39,28,36,40],
[45,0,34,36,45,38,42,42],
[53,46,0,40,43,33,48,46],
[49,44,40,0,46,40,42,41],
[41,35,37,34,0,32,45,44],
[52,42,47,40,48,0,48,46],
[44,38,32,38,35,32,0,41],
[40,38,34,39,36,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,34,42,43,34,48,42],
[32,0,36,41,35,34,42,33],
[46,44,0,47,46,35,54,37],
[38,39,33,0,43,39,40,29],
[37,45,34,37,0,30,46,30],
[46,46,45,41,50,0,52,38],
[32,38,26,40,34,28,0,17],
[38,47,43,51,50,42,63,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,43,39,36,39,43],
[43,0,41,47,46,40,45,45],
[45,39,0,43,39,33,42,40],
[37,33,37,0,35,36,37,44],
[41,34,41,45,0,38,38,39],
[44,40,47,44,42,0,44,44],
[41,35,38,43,42,36,0,39],
[37,35,40,36,41,36,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,36,38,48,42,48,44],
[29,0,29,21,30,38,23,38],
[44,51,0,41,35,40,44,46],
[42,59,39,0,41,44,42,46],
[32,50,45,39,0,48,36,44],
[38,42,40,36,32,0,40,44],
[32,57,36,38,44,40,0,43],
[36,42,34,34,36,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,35,39,35,30,37],
[41,0,40,42,38,43,41,46],
[41,40,0,45,38,38,37,45],
[45,38,35,0,43,36,39,42],
[41,42,42,37,0,41,34,41],
[45,37,42,44,39,0,34,42],
[50,39,43,41,46,46,0,41],
[43,34,35,38,39,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,48,50,37,45,47,42],
[50,0,47,54,42,45,45,37],
[32,33,0,36,33,39,38,38],
[30,26,44,0,38,38,37,31],
[43,38,47,42,0,48,33,32],
[35,35,41,42,32,0,33,41],
[33,35,42,43,47,47,0,47],
[38,43,42,49,48,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,27,38,33,22,36,32],
[58,0,49,42,40,44,40,48],
[53,31,0,43,37,32,40,27],
[42,38,37,0,28,40,32,41],
[47,40,43,52,0,44,49,48],
[58,36,48,40,36,0,45,51],
[44,40,40,48,31,35,0,47],
[48,32,53,39,32,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,45,39,19,25,40],
[38,0,33,34,36,41,36,48],
[41,47,0,38,37,30,33,35],
[35,46,42,0,43,30,38,35],
[41,44,43,37,0,38,36,63],
[61,39,50,50,42,0,43,58],
[55,44,47,42,44,37,0,58],
[40,32,45,45,17,22,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,43,37,26,39,42,39],
[29,0,33,34,25,33,26,26],
[37,47,0,36,38,40,40,38],
[43,46,44,0,32,43,44,42],
[54,55,42,48,0,37,40,34],
[41,47,40,37,43,0,34,30],
[38,54,40,36,40,46,0,31],
[41,54,42,38,46,50,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,43,45,49,45,40],
[39,0,45,38,45,47,43,44],
[34,35,0,40,36,38,37,42],
[37,42,40,0,39,46,39,41],
[35,35,44,41,0,48,37,39],
[31,33,42,34,32,0,32,40],
[35,37,43,41,43,48,0,47],
[40,36,38,39,41,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,34,42,41,36,43],
[42,0,34,32,37,35,35,42],
[42,46,0,39,41,45,45,40],
[46,48,41,0,49,39,46,47],
[38,43,39,31,0,44,42,39],
[39,45,35,41,36,0,41,38],
[44,45,35,34,38,39,0,41],
[37,38,40,33,41,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,33,34,40,42,36],
[44,0,42,33,41,38,40,38],
[37,38,0,35,43,35,43,47],
[47,47,45,0,38,46,42,41],
[46,39,37,42,0,40,41,44],
[40,42,45,34,40,0,38,35],
[38,40,37,38,39,42,0,32],
[44,42,33,39,36,45,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,1,56,7,8,6,36],
[80,0,35,73,41,52,34,52],
[79,45,0,73,17,45,23,46],
[24,7,7,0,7,14,6,36],
[73,39,63,73,0,52,72,52],
[72,28,35,66,28,0,34,57],
[74,46,57,74,8,46,0,46],
[44,28,34,44,28,23,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,58,80,46,41,16,57],
[34,0,52,47,32,22,22,80],
[22,28,0,22,28,28,11,39],
[0,33,58,0,20,20,3,46],
[34,48,52,60,0,43,39,72],
[39,58,52,60,37,0,42,72],
[64,58,69,77,41,38,0,69],
[23,0,41,34,8,8,11,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,44,39,40,46,41],
[36,0,34,37,36,30,33,41],
[36,46,0,43,37,43,35,38],
[36,43,37,0,38,38,36,42],
[41,44,43,42,0,41,35,42],
[40,50,37,42,39,0,41,44],
[34,47,45,44,45,39,0,46],
[39,39,42,38,38,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,42,38,39,40,52],
[34,0,36,32,35,38,39,47],
[37,44,0,46,41,43,42,50],
[38,48,34,0,43,39,47,58],
[42,45,39,37,0,36,40,51],
[41,42,37,41,44,0,40,51],
[40,41,38,33,40,40,0,47],
[28,33,30,22,29,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,44,34,49,31,44],
[38,0,40,34,34,42,33,39],
[40,40,0,46,38,52,33,38],
[36,46,34,0,40,49,37,42],
[46,46,42,40,0,51,47,47],
[31,38,28,31,29,0,29,38],
[49,47,47,43,33,51,0,42],
[36,41,42,38,33,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,42,49,38,31,35],
[48,0,24,26,56,55,37,31],
[48,56,0,33,50,61,25,48],
[38,54,47,0,61,55,42,44],
[31,24,30,19,0,38,26,20],
[42,25,19,25,42,0,19,13],
[49,43,55,38,54,61,0,55],
[45,49,32,36,60,67,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,46,40,46,43,40,39],
[30,0,33,27,26,29,31,39],
[34,47,0,25,37,35,38,29],
[40,53,55,0,47,50,53,41],
[34,54,43,33,0,43,46,43],
[37,51,45,30,37,0,46,39],
[40,49,42,27,34,34,0,34],
[41,41,51,39,37,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,66,52,39,80,53,50,48],
[14,0,35,18,53,26,24,27],
[28,45,0,45,49,49,27,29],
[41,62,35,0,57,44,40,46],
[0,27,31,23,0,21,35,32],
[27,54,31,36,59,0,36,20],
[30,56,53,40,45,44,0,49],
[32,53,51,34,48,60,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,43,46,50,44,44],
[37,0,40,41,45,42,47,38],
[44,40,0,39,41,45,48,36],
[37,39,41,0,41,39,44,38],
[34,35,39,39,0,38,39,32],
[30,38,35,41,42,0,39,36],
[36,33,32,36,41,41,0,34],
[36,42,44,42,48,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,53,39,38,43,31],
[34,0,46,53,32,18,25,20],
[39,34,0,47,36,25,42,26],
[27,27,33,0,29,30,28,28],
[41,48,44,51,0,35,37,44],
[42,62,55,50,45,0,31,40],
[37,55,38,52,43,49,0,36],
[49,60,54,52,36,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,38,44,51,46,47,42],
[27,0,35,36,35,37,27,22],
[42,45,0,31,38,41,41,28],
[36,44,49,0,54,51,45,40],
[29,45,42,26,0,37,36,30],
[34,43,39,29,43,0,46,38],
[33,53,39,35,44,34,0,38],
[38,58,52,40,50,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,46,46,35,46,30,39],
[45,0,44,40,42,42,42,37],
[34,36,0,41,42,43,34,38],
[34,40,39,0,44,33,30,32],
[45,38,38,36,0,44,34,37],
[34,38,37,47,36,0,36,30],
[50,38,46,50,46,44,0,42],
[41,43,42,48,43,50,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,42,46,41,36,37],
[44,0,42,44,40,42,43,40],
[41,38,0,45,39,45,45,41],
[38,36,35,0,34,43,43,36],
[34,40,41,46,0,45,43,40],
[39,38,35,37,35,0,36,34],
[44,37,35,37,37,44,0,40],
[43,40,39,44,40,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,47,40,42,41,38,48],
[43,0,38,32,48,43,27,38],
[33,42,0,34,46,44,37,39],
[40,48,46,0,47,41,40,43],
[38,32,34,33,0,40,34,38],
[39,37,36,39,40,0,27,47],
[42,53,43,40,46,53,0,51],
[32,42,41,37,42,33,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,30,41,42,32,30,38],
[38,0,35,38,35,36,38,38],
[50,45,0,51,44,37,46,40],
[39,42,29,0,46,41,43,35],
[38,45,36,34,0,39,40,35],
[48,44,43,39,41,0,41,36],
[50,42,34,37,40,39,0,38],
[42,42,40,45,45,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,42,36,37,35,45,41],
[57,0,48,40,32,38,42,38],
[38,32,0,36,29,29,43,34],
[44,40,44,0,40,44,49,47],
[43,48,51,40,0,44,50,42],
[45,42,51,36,36,0,37,45],
[35,38,37,31,30,43,0,34],
[39,42,46,33,38,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,39,28,25,37,37,32],
[61,0,50,48,48,44,48,40],
[41,30,0,34,30,45,36,31],
[52,32,46,0,44,39,47,44],
[55,32,50,36,0,50,47,37],
[43,36,35,41,30,0,42,42],
[43,32,44,33,33,38,0,32],
[48,40,49,36,43,38,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,31,28,28,28,21],
[46,0,39,32,37,23,30,32],
[44,41,0,31,34,25,26,33],
[49,48,49,0,41,33,40,39],
[52,43,46,39,0,34,33,28],
[52,57,55,47,46,0,40,46],
[52,50,54,40,47,40,0,42],
[59,48,47,41,52,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,38,44,49,36,46,55],
[49,0,47,39,48,37,40,43],
[42,33,0,40,40,36,26,39],
[36,41,40,0,47,33,31,42],
[31,32,40,33,0,37,25,31],
[44,43,44,47,43,0,33,43],
[34,40,54,49,55,47,0,49],
[25,37,41,38,49,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,41,42,41,41,41],
[41,0,43,44,39,43,44,37],
[38,37,0,45,42,39,44,45],
[39,36,35,0,39,39,43,36],
[38,41,38,41,0,41,44,39],
[39,37,41,41,39,0,45,45],
[39,36,36,37,36,35,0,37],
[39,43,35,44,41,35,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,48,41,39,43,39],
[33,0,39,39,38,33,39,42],
[34,41,0,39,40,35,36,40],
[32,41,41,0,36,35,39,40],
[39,42,40,44,0,38,39,38],
[41,47,45,45,42,0,49,40],
[37,41,44,41,41,31,0,38],
[41,38,40,40,42,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,20,39,20,9,31,40],
[58,0,48,49,41,40,26,49],
[60,32,0,32,13,39,32,50],
[41,31,48,0,41,30,18,41],
[60,39,67,39,0,39,28,51],
[71,40,41,50,41,0,42,65],
[49,54,48,62,52,38,0,60],
[40,31,30,39,29,15,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,36,34,32,27,28],
[53,0,39,42,40,41,30,41],
[48,41,0,39,37,41,37,41],
[44,38,41,0,40,37,31,43],
[46,40,43,40,0,39,42,44],
[48,39,39,43,41,0,31,41],
[53,50,43,49,38,49,0,51],
[52,39,39,37,36,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,44,27,31,35,41],
[47,0,40,49,35,40,34,41],
[52,40,0,40,37,42,35,53],
[36,31,40,0,41,34,32,43],
[53,45,43,39,0,38,42,55],
[49,40,38,46,42,0,34,41],
[45,46,45,48,38,46,0,42],
[39,39,27,37,25,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,38,34,41,33,38],
[39,0,41,40,41,39,43,40],
[40,39,0,36,41,38,38,40],
[42,40,44,0,42,39,38,41],
[46,39,39,38,0,41,42,38],
[39,41,42,41,39,0,41,41],
[47,37,42,42,38,39,0,40],
[42,40,40,39,42,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,46,51,48,54,39],
[34,0,41,47,29,39,45,48],
[35,39,0,46,32,48,42,46],
[34,33,34,0,34,44,48,40],
[29,51,48,46,0,45,49,43],
[32,41,32,36,35,0,40,51],
[26,35,38,32,31,40,0,34],
[41,32,34,40,37,29,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,49,75,45,29,61],
[39,0,55,49,59,54,34,66],
[30,25,0,40,54,40,50,61],
[31,31,40,0,55,30,35,31],
[5,21,26,25,0,0,14,26],
[35,26,40,50,80,0,23,51],
[51,46,30,45,66,57,0,57],
[19,14,19,49,54,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,50,42,44,44,37],
[34,0,41,37,31,42,37,28],
[35,39,0,39,32,44,36,33],
[30,43,41,0,30,36,35,31],
[38,49,48,50,0,55,52,48],
[36,38,36,44,25,0,33,28],
[36,43,44,45,28,47,0,38],
[43,52,47,49,32,52,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,50,32,32,25,35],
[49,0,38,52,46,40,37,37],
[47,42,0,52,45,38,38,33],
[30,28,28,0,31,30,17,22],
[48,34,35,49,0,50,42,45],
[48,40,42,50,30,0,36,37],
[55,43,42,63,38,44,0,42],
[45,43,47,58,35,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,32,38,40,31,28,44],
[42,0,27,37,35,29,38,35],
[48,53,0,41,37,35,42,41],
[42,43,39,0,38,41,41,38],
[40,45,43,42,0,28,40,32],
[49,51,45,39,52,0,50,51],
[52,42,38,39,40,30,0,39],
[36,45,39,42,48,29,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,42,42,20,24,40],
[40,0,58,22,38,38,58,55],
[36,22,0,22,38,19,40,41],
[38,58,58,0,57,19,58,40],
[38,42,42,23,0,21,26,23],
[60,42,61,61,59,0,60,38],
[56,22,40,22,54,20,0,21],
[40,25,39,40,57,42,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,45,48,40,42,42],
[34,0,40,42,42,42,40,39],
[40,40,0,48,42,42,41,39],
[35,38,32,0,33,39,36,34],
[32,38,38,47,0,35,42,34],
[40,38,38,41,45,0,45,41],
[38,40,39,44,38,35,0,39],
[38,41,41,46,46,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,80,36,61,80,35,54],
[19,0,37,19,37,19,54,37],
[0,43,0,19,0,0,17,19],
[44,61,61,0,44,61,61,18],
[19,43,80,36,0,36,17,19],
[0,61,80,19,44,0,35,37],
[45,26,63,19,63,45,0,19],
[26,43,61,62,61,43,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,37,42,39,39,38],
[36,0,39,37,34,37,27,35],
[40,41,0,39,42,31,29,35],
[43,43,41,0,44,41,39,45],
[38,46,38,36,0,39,36,30],
[41,43,49,39,41,0,40,45],
[41,53,51,41,44,40,0,49],
[42,45,45,35,50,35,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,40,32,37,36,30],
[46,0,47,50,40,46,43,37],
[46,33,0,43,34,47,39,38],
[40,30,37,0,36,40,34,30],
[48,40,46,44,0,43,43,41],
[43,34,33,40,37,0,38,40],
[44,37,41,46,37,42,0,36],
[50,43,42,50,39,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,35,50,43,41,48],
[38,0,32,39,51,43,39,50],
[44,48,0,52,54,39,54,51],
[45,41,28,0,53,35,42,43],
[30,29,26,27,0,21,27,47],
[37,37,41,45,59,0,51,52],
[39,41,26,38,53,29,0,45],
[32,30,29,37,33,28,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,41,23,40,46,23],
[40,0,23,62,39,57,45,25],
[34,57,0,56,57,52,39,52],
[39,18,24,0,39,33,39,1],
[57,41,23,41,0,42,41,41],
[40,23,28,47,38,0,29,23],
[34,35,41,41,39,51,0,18],
[57,55,28,79,39,57,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,39,43,33,33,30],
[41,0,52,32,51,32,31,37],
[30,28,0,35,44,26,34,25],
[41,48,45,0,51,44,42,37],
[37,29,36,29,0,33,34,34],
[47,48,54,36,47,0,44,41],
[47,49,46,38,46,36,0,50],
[50,43,55,43,46,39,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,45,46,35,34,53],
[31,0,34,44,42,32,30,47],
[38,46,0,49,48,38,33,48],
[35,36,31,0,38,29,32,41],
[34,38,32,42,0,30,27,45],
[45,48,42,51,50,0,40,53],
[46,50,47,48,53,40,0,50],
[27,33,32,39,35,27,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,40,46,43,43,45],
[33,0,44,49,42,36,48,46],
[31,36,0,41,39,40,42,45],
[40,31,39,0,43,37,42,38],
[34,38,41,37,0,40,43,49],
[37,44,40,43,40,0,44,39],
[37,32,38,38,37,36,0,43],
[35,34,35,42,31,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,49,32,38,40,42,46],
[50,0,60,30,50,66,44,36],
[31,20,0,39,37,55,23,35],
[48,50,41,0,38,47,25,41],
[42,30,43,42,0,46,34,32],
[40,14,25,33,34,0,31,19],
[38,36,57,55,46,49,0,51],
[34,44,45,39,48,61,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,45,39,45,42,39],
[32,0,34,34,30,35,27,30],
[33,46,0,39,38,38,33,42],
[35,46,41,0,36,35,38,35],
[41,50,42,44,0,42,37,46],
[35,45,42,45,38,0,41,36],
[38,53,47,42,43,39,0,40],
[41,50,38,45,34,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,46,46,39,37,33],
[40,0,34,35,40,43,33,30],
[41,46,0,42,46,37,43,39],
[34,45,38,0,46,36,43,40],
[34,40,34,34,0,42,36,31],
[41,37,43,44,38,0,40,31],
[43,47,37,37,44,40,0,42],
[47,50,41,40,49,49,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,40,37,42,36,42,43],
[30,0,34,41,38,36,39,31],
[40,46,0,36,41,38,43,44],
[43,39,44,0,47,41,40,36],
[38,42,39,33,0,36,39,39],
[44,44,42,39,44,0,43,44],
[38,41,37,40,41,37,0,38],
[37,49,36,44,41,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,34,44,51,42,45,34],
[29,0,33,40,42,36,38,29],
[46,47,0,48,46,38,49,43],
[36,40,32,0,38,42,40,35],
[29,38,34,42,0,37,43,39],
[38,44,42,38,43,0,46,41],
[35,42,31,40,37,34,0,36],
[46,51,37,45,41,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,43,52,40,41,43],
[43,0,52,44,54,40,53,47],
[35,28,0,37,45,34,38,42],
[37,36,43,0,51,41,50,45],
[28,26,35,29,0,37,36,37],
[40,40,46,39,43,0,44,42],
[39,27,42,30,44,36,0,46],
[37,33,38,35,43,38,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,40,41,47,44,51],
[34,0,35,41,36,47,39,40],
[41,45,0,42,32,47,48,47],
[40,39,38,0,33,39,45,43],
[39,44,48,47,0,41,47,50],
[33,33,33,41,39,0,40,41],
[36,41,32,35,33,40,0,37],
[29,40,33,37,30,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,42,49,39,46,47,40],
[32,0,36,37,35,30,56,38],
[38,44,0,50,40,46,42,28],
[31,43,30,0,39,47,49,29],
[41,45,40,41,0,41,54,40],
[34,50,34,33,39,0,52,32],
[33,24,38,31,26,28,0,23],
[40,42,52,51,40,48,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,44,47,48,34,38],
[36,0,31,36,33,47,39,28],
[36,49,0,42,42,46,46,42],
[36,44,38,0,49,42,41,41],
[33,47,38,31,0,38,43,32],
[32,33,34,38,42,0,44,28],
[46,41,34,39,37,36,0,40],
[42,52,38,39,48,52,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,56,45,46,47,38],
[41,0,40,46,52,48,46,56],
[35,40,0,54,43,52,54,54],
[24,34,26,0,30,41,39,40],
[35,28,37,50,0,52,37,41],
[34,32,28,39,28,0,30,25],
[33,34,26,41,43,50,0,30],
[42,24,26,40,39,55,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,37,41,37,39,34,41],
[51,0,46,50,45,38,44,45],
[43,34,0,43,40,35,27,43],
[39,30,37,0,43,39,38,39],
[43,35,40,37,0,47,34,45],
[41,42,45,41,33,0,32,46],
[46,36,53,42,46,48,0,49],
[39,35,37,41,35,34,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,50,44,23,42,45,41],
[44,0,63,45,36,47,37,23],
[30,17,0,17,18,36,29,30],
[36,35,63,0,29,45,23,30],
[57,44,62,51,0,39,49,63],
[38,33,44,35,41,0,21,27],
[35,43,51,57,31,59,0,42],
[39,57,50,50,17,53,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,44,46,41,42,44],
[42,0,46,39,44,50,47,42],
[36,34,0,40,41,42,43,39],
[36,41,40,0,42,41,46,39],
[34,36,39,38,0,39,41,42],
[39,30,38,39,41,0,40,39],
[38,33,37,34,39,40,0,40],
[36,38,41,41,38,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,29,38,57,37,36,14],
[44,0,51,49,64,43,35,46],
[51,29,0,35,47,29,33,21],
[42,31,45,0,44,35,31,29],
[23,16,33,36,0,22,23,27],
[43,37,51,45,58,0,45,32],
[44,45,47,49,57,35,0,41],
[66,34,59,51,53,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,45,44,38,37,33],
[42,0,33,37,45,35,34,39],
[45,47,0,48,45,45,39,41],
[35,43,32,0,33,37,35,34],
[36,35,35,47,0,36,32,39],
[42,45,35,43,44,0,35,34],
[43,46,41,45,48,45,0,40],
[47,41,39,46,41,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,39,39,38,45,31],
[43,0,37,42,37,43,39,38],
[39,43,0,44,43,41,44,34],
[41,38,36,0,34,33,37,40],
[41,43,37,46,0,45,44,37],
[42,37,39,47,35,0,38,37],
[35,41,36,43,36,42,0,37],
[49,42,46,40,43,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,41,28,24,42,36,39],
[48,0,33,47,49,42,40,59],
[39,47,0,40,38,53,44,53],
[52,33,40,0,23,45,44,46],
[56,31,42,57,0,45,61,51],
[38,38,27,35,35,0,46,42],
[44,40,36,36,19,34,0,33],
[41,21,27,34,29,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,42,43,45,43,38],
[31,0,38,28,34,33,28,34],
[39,42,0,29,27,37,25,34],
[38,52,51,0,45,42,45,43],
[37,46,53,35,0,48,41,41],
[35,47,43,38,32,0,38,31],
[37,52,55,35,39,42,0,41],
[42,46,46,37,39,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,34,39,35,39,40,35],
[30,0,37,36,35,32,36,34],
[46,43,0,45,41,35,46,36],
[41,44,35,0,41,34,46,45],
[45,45,39,39,0,39,37,36],
[41,48,45,46,41,0,38,43],
[40,44,34,34,43,42,0,36],
[45,46,44,35,44,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,40,36,37,47,43],
[39,0,43,45,44,41,50,45],
[34,37,0,37,27,30,38,40],
[40,35,43,0,32,30,44,35],
[44,36,53,48,0,42,55,41],
[43,39,50,50,38,0,43,47],
[33,30,42,36,25,37,0,37],
[37,35,40,45,39,33,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,43,41,44,37,55],
[38,0,37,45,32,47,43,43],
[39,43,0,46,42,47,45,45],
[37,35,34,0,41,48,43,51],
[39,48,38,39,0,49,39,46],
[36,33,33,32,31,0,35,40],
[43,37,35,37,41,45,0,42],
[25,37,35,29,34,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,29,50,50,58,49,50],
[30,0,28,27,43,44,42,59],
[51,52,0,42,33,57,56,58],
[30,53,38,0,48,50,47,61],
[30,37,47,32,0,34,43,56],
[22,36,23,30,46,0,41,52],
[31,38,24,33,37,39,0,42],
[30,21,22,19,24,28,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,38,38,43,48,36],
[41,0,45,40,42,43,54,45],
[36,35,0,35,31,43,35,37],
[42,40,45,0,34,53,47,44],
[42,38,49,46,0,54,49,47],
[37,37,37,27,26,0,42,35],
[32,26,45,33,31,38,0,39],
[44,35,43,36,33,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,5,25,37,43,17,2,15],
[75,0,40,35,52,55,20,55],
[55,40,0,17,55,37,25,35],
[43,45,63,0,43,37,43,55],
[37,28,25,37,0,40,25,40],
[63,25,43,43,40,0,40,55],
[78,60,55,37,55,40,0,38],
[65,25,45,25,40,25,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,45,36,35,40,40,44],
[48,0,43,34,41,52,45,47],
[35,37,0,28,34,43,38,48],
[44,46,52,0,32,45,36,53],
[45,39,46,48,0,48,38,53],
[40,28,37,35,32,0,42,39],
[40,35,42,44,42,38,0,51],
[36,33,32,27,27,41,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,43,35,38,40,56],
[38,0,39,47,45,42,45,48],
[34,41,0,40,27,37,38,44],
[37,33,40,0,37,40,33,43],
[45,35,53,43,0,44,37,49],
[42,38,43,40,36,0,41,46],
[40,35,42,47,43,39,0,50],
[24,32,36,37,31,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,52,37,47,39,46,46],
[38,0,33,38,31,37,37,33],
[28,47,0,41,43,40,47,36],
[43,42,39,0,39,41,33,41],
[33,49,37,41,0,45,37,42],
[41,43,40,39,35,0,40,46],
[34,43,33,47,43,40,0,40],
[34,47,44,39,38,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,35,29,26,29,33,32],
[51,0,34,41,43,28,47,39],
[45,46,0,39,41,44,51,38],
[51,39,41,0,45,32,53,38],
[54,37,39,35,0,30,47,34],
[51,52,36,48,50,0,47,29],
[47,33,29,27,33,33,0,41],
[48,41,42,42,46,51,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,36,40,47,46,40],
[38,0,32,39,42,36,42,32],
[42,48,0,40,40,47,40,35],
[44,41,40,0,35,40,41,39],
[40,38,40,45,0,35,39,39],
[33,44,33,40,45,0,39,32],
[34,38,40,39,41,41,0,37],
[40,48,45,41,41,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,45,55,28,41,48,39],
[48,0,41,39,45,40,48,42],
[35,39,0,46,35,39,43,52],
[25,41,34,0,35,22,43,35],
[52,35,45,45,0,44,43,37],
[39,40,41,58,36,0,31,39],
[32,32,37,37,37,49,0,40],
[41,38,28,45,43,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,35,43,39,45,37],
[39,0,35,41,37,33,33,35],
[40,45,0,43,34,33,36,35],
[45,39,37,0,34,38,42,35],
[37,43,46,46,0,37,34,36],
[41,47,47,42,43,0,45,40],
[35,47,44,38,46,35,0,43],
[43,45,45,45,44,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,48,39,45,43,42],
[36,0,36,39,39,43,39,35],
[39,44,0,46,33,44,38,36],
[32,41,34,0,31,40,28,32],
[41,41,47,49,0,48,40,39],
[35,37,36,40,32,0,40,31],
[37,41,42,52,40,40,0,37],
[38,45,44,48,41,49,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,51,39,39,38,41,37],
[33,0,40,35,35,33,33,36],
[29,40,0,32,36,41,36,38],
[41,45,48,0,37,43,39,39],
[41,45,44,43,0,42,41,31],
[42,47,39,37,38,0,38,41],
[39,47,44,41,39,42,0,38],
[43,44,42,41,49,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,37,45,46,50,46],
[42,0,41,42,51,47,51,36],
[45,39,0,43,39,41,36,49],
[43,38,37,0,39,46,39,49],
[35,29,41,41,0,34,40,47],
[34,33,39,34,46,0,38,50],
[30,29,44,41,40,42,0,45],
[34,44,31,31,33,30,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,45,35,35,40,36,31],
[50,0,42,39,45,47,40,38],
[35,38,0,39,32,40,29,39],
[45,41,41,0,44,43,42,33],
[45,35,48,36,0,48,39,34],
[40,33,40,37,32,0,36,38],
[44,40,51,38,41,44,0,49],
[49,42,41,47,46,42,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,35,33,36,38,37],
[48,0,44,47,40,45,46,36],
[51,36,0,31,28,39,32,36],
[45,33,49,0,32,38,40,37],
[47,40,52,48,0,43,42,48],
[44,35,41,42,37,0,48,36],
[42,34,48,40,38,32,0,37],
[43,44,44,43,32,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,46,51,39,44,52],
[41,0,40,35,48,34,39,43],
[36,40,0,29,42,35,45,42],
[34,45,51,0,50,46,44,37],
[29,32,38,30,0,31,46,40],
[41,46,45,34,49,0,53,43],
[36,41,35,36,34,27,0,38],
[28,37,38,43,40,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,39,49,43,55,47],
[43,0,46,44,39,48,55,45],
[34,34,0,35,35,38,46,37],
[41,36,45,0,43,40,51,46],
[31,41,45,37,0,43,50,39],
[37,32,42,40,37,0,47,44],
[25,25,34,29,30,33,0,35],
[33,35,43,34,41,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,30,45,40,40,41,21],
[38,0,38,43,41,37,36,31],
[50,42,0,50,44,37,31,38],
[35,37,30,0,42,34,35,28],
[40,39,36,38,0,39,37,37],
[40,43,43,46,41,0,41,18],
[39,44,49,45,43,39,0,42],
[59,49,42,52,43,62,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,24,40,37,32,36,32],
[46,0,27,42,44,32,43,40],
[56,53,0,49,39,38,45,54],
[40,38,31,0,35,35,41,35],
[43,36,41,45,0,39,47,46],
[48,48,42,45,41,0,50,38],
[44,37,35,39,33,30,0,38],
[48,40,26,45,34,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,39,32,40,40,34],
[38,0,38,31,41,41,36,33],
[45,42,0,35,44,36,40,38],
[41,49,45,0,38,37,47,38],
[48,39,36,42,0,34,40,37],
[40,39,44,43,46,0,38,44],
[40,44,40,33,40,42,0,40],
[46,47,42,42,43,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,28,52,36,24,39,49],
[40,0,33,66,38,31,31,45],
[52,47,0,44,31,31,42,37],
[28,14,36,0,7,12,35,27],
[44,42,49,73,0,23,42,34],
[56,49,49,68,57,0,55,36],
[41,49,38,45,38,25,0,38],
[31,35,43,53,46,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,46,47,42,38,37],
[40,0,47,38,49,42,45,52],
[32,33,0,35,35,40,35,29],
[34,42,45,0,47,42,39,48],
[33,31,45,33,0,35,25,34],
[38,38,40,38,45,0,34,38],
[42,35,45,41,55,46,0,41],
[43,28,51,32,46,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,35,46,39,35,37,34],
[38,0,35,45,46,38,43,35],
[45,45,0,48,51,39,40,42],
[34,35,32,0,36,32,33,30],
[41,34,29,44,0,41,40,31],
[45,42,41,48,39,0,52,31],
[43,37,40,47,40,28,0,33],
[46,45,38,50,49,49,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,35,33,45,39,31],
[43,0,48,46,43,49,40,40],
[38,32,0,42,49,45,37,30],
[45,34,38,0,44,46,43,27],
[47,37,31,36,0,42,39,27],
[35,31,35,34,38,0,32,33],
[41,40,43,37,41,48,0,38],
[49,40,50,53,53,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,44,40,44,35,41,35],
[31,0,38,22,25,31,25,36],
[36,42,0,23,43,37,41,27],
[40,58,57,0,57,51,54,51],
[36,55,37,23,0,34,26,40],
[45,49,43,29,46,0,32,46],
[39,55,39,26,54,48,0,34],
[45,44,53,29,40,34,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,44,44,40,43,42],
[36,0,49,44,41,38,45,42],
[31,31,0,31,28,28,32,32],
[36,36,49,0,40,43,47,50],
[36,39,52,40,0,28,38,41],
[40,42,52,37,52,0,53,47],
[37,35,48,33,42,27,0,40],
[38,38,48,30,39,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,43,35,41,39,39],
[40,0,43,46,47,37,48,44],
[36,37,0,38,35,34,40,40],
[37,34,42,0,41,41,45,38],
[45,33,45,39,0,39,38,38],
[39,43,46,39,41,0,46,39],
[41,32,40,35,42,34,0,35],
[41,36,40,42,42,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,33,28,37,36,39],
[53,0,44,40,41,46,49,47],
[56,36,0,48,44,49,46,49],
[47,40,32,0,36,35,42,38],
[52,39,36,44,0,39,49,45],
[43,34,31,45,41,0,41,45],
[44,31,34,38,31,39,0,35],
[41,33,31,42,35,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,29,35,44,42,39],
[41,0,39,37,38,45,43,35],
[43,41,0,35,35,45,38,40],
[51,43,45,0,45,46,39,41],
[45,42,45,35,0,48,46,38],
[36,35,35,34,32,0,44,36],
[38,37,42,41,34,36,0,37],
[41,45,40,39,42,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,34,33,33,35,33],
[43,0,36,45,36,35,44,46],
[46,44,0,45,44,34,42,32],
[46,35,35,0,42,47,26,34],
[47,44,36,38,0,33,39,48],
[47,45,46,33,47,0,52,42],
[45,36,38,54,41,28,0,39],
[47,34,48,46,32,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,36,42,40,44,50],
[33,0,39,43,46,37,40,44],
[40,41,0,33,42,37,36,37],
[44,37,47,0,42,37,49,44],
[38,34,38,38,0,38,42,46],
[40,43,43,43,42,0,46,46],
[36,40,44,31,38,34,0,42],
[30,36,43,36,34,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,41,41,38,47,43],
[37,0,33,37,42,33,34,44],
[37,47,0,38,32,35,45,35],
[39,43,42,0,46,35,41,41],
[39,38,48,34,0,40,41,40],
[42,47,45,45,40,0,44,36],
[33,46,35,39,39,36,0,38],
[37,36,45,39,40,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,40,33,37,45,46],
[36,0,42,36,31,25,41,41],
[29,38,0,28,27,27,42,43],
[40,44,52,0,40,26,43,47],
[47,49,53,40,0,41,49,46],
[43,55,53,54,39,0,47,53],
[35,39,38,37,31,33,0,42],
[34,39,37,33,34,27,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,33,40,42,35,38],
[40,0,37,37,45,41,32,40],
[40,43,0,33,42,55,31,36],
[47,43,47,0,51,49,45,38],
[40,35,38,29,0,39,35,28],
[38,39,25,31,41,0,37,38],
[45,48,49,35,45,43,0,43],
[42,40,44,42,52,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,39,35,42,46,43],
[35,0,41,41,39,41,41,38],
[40,39,0,37,35,40,39,42],
[41,39,43,0,42,39,40,43],
[45,41,45,38,0,47,45,34],
[38,39,40,41,33,0,40,39],
[34,39,41,40,35,40,0,36],
[37,42,38,37,46,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,42,29,22,38,32,26],
[50,0,40,24,30,51,36,30],
[38,40,0,21,27,50,30,23],
[51,56,59,0,53,51,36,42],
[58,50,53,27,0,61,48,44],
[42,29,30,29,19,0,30,24],
[48,44,50,44,32,50,0,43],
[54,50,57,38,36,56,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,48,35,38,37,39],
[34,0,39,43,36,38,40,42],
[38,41,0,45,39,39,31,32],
[32,37,35,0,32,36,26,35],
[45,44,41,48,0,38,43,43],
[42,42,41,44,42,0,36,43],
[43,40,49,54,37,44,0,41],
[41,38,48,45,37,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,30,42,41,30,31,28],
[42,0,40,43,42,51,34,38],
[50,40,0,45,42,40,33,41],
[38,37,35,0,36,33,35,36],
[39,38,38,44,0,43,26,32],
[50,29,40,47,37,0,42,34],
[49,46,47,45,54,38,0,40],
[52,42,39,44,48,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,47,41,52,45,35,42],
[27,0,29,34,36,38,34,27],
[33,51,0,39,37,31,41,28],
[39,46,41,0,45,37,42,34],
[28,44,43,35,0,36,30,19],
[35,42,49,43,44,0,39,33],
[45,46,39,38,50,41,0,33],
[38,53,52,46,61,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,53,47,38,30,36,43],
[41,0,43,45,43,32,39,43],
[27,37,0,30,34,33,35,38],
[33,35,50,0,42,34,36,46],
[42,37,46,38,0,32,40,46],
[50,48,47,46,48,0,37,45],
[44,41,45,44,40,43,0,55],
[37,37,42,34,34,35,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,50,49,42,42,40],
[41,0,42,45,41,39,31,42],
[32,38,0,38,40,35,28,33],
[30,35,42,0,38,33,26,40],
[31,39,40,42,0,31,36,39],
[38,41,45,47,49,0,35,43],
[38,49,52,54,44,45,0,52],
[40,38,47,40,41,37,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,46,38,28,39,44],
[35,0,27,33,30,29,38,34],
[35,53,0,36,38,27,34,44],
[34,47,44,0,39,31,38,37],
[42,50,42,41,0,39,36,38],
[52,51,53,49,41,0,40,46],
[41,42,46,42,44,40,0,35],
[36,46,36,43,42,34,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,41,50,35,60,39],
[36,0,38,37,30,35,40,31],
[41,42,0,29,31,34,32,33],
[39,43,51,0,36,43,43,44],
[30,50,49,44,0,41,31,26],
[45,45,46,37,39,0,40,51],
[20,40,48,37,49,40,0,26],
[41,49,47,36,54,29,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,17,23,63,23,40,40],
[57,0,57,40,80,40,40,40],
[63,23,0,23,63,23,40,40],
[57,40,57,0,63,0,17,40],
[17,0,17,17,0,0,17,17],
[57,40,57,80,80,0,57,80],
[40,40,40,63,63,23,0,40],
[40,40,40,40,63,0,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,47,46,42,38,39],
[40,0,47,47,50,42,36,34],
[40,33,0,50,44,36,37,37],
[33,33,30,0,34,37,26,28],
[34,30,36,46,0,36,36,31],
[38,38,44,43,44,0,39,42],
[42,44,43,54,44,41,0,37],
[41,46,43,52,49,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,40,39,48,40,38],
[37,0,44,39,42,49,43,40],
[35,36,0,37,43,42,35,38],
[40,41,43,0,36,46,39,39],
[41,38,37,44,0,45,38,35],
[32,31,38,34,35,0,37,36],
[40,37,45,41,42,43,0,43],
[42,40,42,41,45,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,37,39,36,45,47],
[40,0,41,43,37,42,39,45],
[43,39,0,37,41,38,47,49],
[43,37,43,0,40,30,37,45],
[41,43,39,40,0,34,36,45],
[44,38,42,50,46,0,44,46],
[35,41,33,43,44,36,0,41],
[33,35,31,35,35,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,34,40,44,41,32],
[40,0,35,34,31,43,24,36],
[44,45,0,38,45,51,43,38],
[46,46,42,0,51,52,41,35],
[40,49,35,29,0,48,34,38],
[36,37,29,28,32,0,38,38],
[39,56,37,39,46,42,0,41],
[48,44,42,45,42,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,50,48,42,34,45,51],
[41,0,56,37,36,40,60,44],
[30,24,0,44,29,13,31,50],
[32,43,36,0,37,14,54,51],
[38,44,51,43,0,37,49,52],
[46,40,67,66,43,0,72,59],
[35,20,49,26,31,8,0,38],
[29,36,30,29,28,21,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,45,44,47,41,42],
[40,0,44,31,40,51,39,47],
[41,36,0,40,45,54,48,45],
[35,49,40,0,38,43,39,36],
[36,40,35,42,0,35,42,40],
[33,29,26,37,45,0,38,34],
[39,41,32,41,38,42,0,37],
[38,33,35,44,40,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,45,39,43,46,39],
[38,0,40,41,35,43,45,34],
[38,40,0,38,41,45,47,38],
[35,39,42,0,40,39,43,35],
[41,45,39,40,0,40,47,49],
[37,37,35,41,40,0,43,41],
[34,35,33,37,33,37,0,38],
[41,46,42,45,31,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,29,33,35,38,38],
[49,0,47,46,42,39,57,45],
[45,33,0,37,35,42,51,43],
[51,34,43,0,36,45,50,47],
[47,38,45,44,0,44,45,47],
[45,41,38,35,36,0,48,38],
[42,23,29,30,35,32,0,34],
[42,35,37,33,33,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,48,45,44,45,43],
[42,0,37,42,42,44,50,44],
[34,43,0,48,40,40,43,38],
[32,38,32,0,37,43,43,34],
[35,38,40,43,0,42,38,33],
[36,36,40,37,38,0,38,38],
[35,30,37,37,42,42,0,34],
[37,36,42,46,47,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,35,39,46,41,33],
[40,0,39,32,37,44,40,36],
[41,41,0,38,36,45,41,38],
[45,48,42,0,44,42,38,47],
[41,43,44,36,0,38,32,37],
[34,36,35,38,42,0,41,40],
[39,40,39,42,48,39,0,36],
[47,44,42,33,43,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,28,36,48,36,62,41],
[42,0,40,31,51,38,59,27],
[52,40,0,41,50,47,61,35],
[44,49,39,0,45,40,60,30],
[32,29,30,35,0,46,27,28],
[44,42,33,40,34,0,55,32],
[18,21,19,20,53,25,0,22],
[39,53,45,50,52,48,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,43,36,39,46,47],
[46,0,44,44,41,41,40,52],
[44,36,0,44,42,44,41,49],
[37,36,36,0,34,37,40,44],
[44,39,38,46,0,42,43,38],
[41,39,36,43,38,0,40,46],
[34,40,39,40,37,40,0,39],
[33,28,31,36,42,34,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,41,42,46,29,42],
[42,0,30,30,40,43,34,47],
[38,50,0,44,46,52,39,55],
[39,50,36,0,49,48,40,49],
[38,40,34,31,0,43,37,48],
[34,37,28,32,37,0,36,37],
[51,46,41,40,43,44,0,43],
[38,33,25,31,32,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,45,39,48,42,50],
[34,0,33,30,37,31,38,37],
[36,47,0,43,35,38,44,41],
[35,50,37,0,36,31,33,39],
[41,43,45,44,0,45,39,47],
[32,49,42,49,35,0,42,48],
[38,42,36,47,41,38,0,41],
[30,43,39,41,33,32,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,21,35,38,22,25,32],
[51,0,41,38,45,37,38,40],
[59,39,0,41,45,53,31,43],
[45,42,39,0,43,44,38,32],
[42,35,35,37,0,41,33,37],
[58,43,27,36,39,0,25,40],
[55,42,49,42,47,55,0,35],
[48,40,37,48,43,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,48,50,32,40,45],
[40,0,37,49,46,30,34,34],
[38,43,0,48,44,36,44,39],
[32,31,32,0,45,33,37,36],
[30,34,36,35,0,27,28,33],
[48,50,44,47,53,0,39,39],
[40,46,36,43,52,41,0,37],
[35,46,41,44,47,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,43,41,44,47,48],
[40,0,57,58,43,46,39,53],
[33,23,0,38,41,41,32,44],
[37,22,42,0,35,41,33,45],
[39,37,39,45,0,53,35,53],
[36,34,39,39,27,0,32,38],
[33,41,48,47,45,48,0,53],
[32,27,36,35,27,42,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,40,37,36,35,33,39],
[31,0,43,42,32,28,35,44],
[40,37,0,34,31,38,36,43],
[43,38,46,0,46,39,44,44],
[44,48,49,34,0,40,40,45],
[45,52,42,41,40,0,49,49],
[47,45,44,36,40,31,0,54],
[41,36,37,36,35,31,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,57,59,57,32,41,46],
[51,0,57,35,57,32,57,62],
[23,23,0,53,30,55,44,26],
[21,45,27,0,36,48,27,53],
[23,23,50,44,0,50,39,55],
[48,48,25,32,30,0,25,30],
[39,23,36,53,41,55,0,62],
[34,18,54,27,25,50,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,28,40,27,41,46,27],
[61,0,32,37,32,30,46,40],
[52,48,0,43,48,32,49,44],
[40,43,37,0,40,42,42,39],
[53,48,32,40,0,37,37,39],
[39,50,48,38,43,0,46,40],
[34,34,31,38,43,34,0,40],
[53,40,36,41,41,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,42,42,38,46,44],
[39,0,36,34,32,39,37,37],
[41,44,0,44,40,39,39,40],
[38,46,36,0,43,38,42,42],
[38,48,40,37,0,43,41,38],
[42,41,41,42,37,0,42,44],
[34,43,41,38,39,38,0,45],
[36,43,40,38,42,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,45,37,37,42,39,44],
[29,0,38,43,31,38,38,33],
[35,42,0,40,30,35,36,38],
[43,37,40,0,34,36,34,35],
[43,49,50,46,0,36,43,47],
[38,42,45,44,44,0,39,38],
[41,42,44,46,37,41,0,42],
[36,47,42,45,33,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,42,49,41,42,40],
[37,0,33,33,42,34,31,30],
[38,47,0,35,43,38,41,41],
[38,47,45,0,44,41,48,38],
[31,38,37,36,0,34,32,34],
[39,46,42,39,46,0,42,45],
[38,49,39,32,48,38,0,37],
[40,50,39,42,46,35,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,36,39,40,27,48],
[41,0,33,36,30,44,23,42],
[46,47,0,38,35,40,31,44],
[44,44,42,0,45,47,28,43],
[41,50,45,35,0,52,41,48],
[40,36,40,33,28,0,32,38],
[53,57,49,52,39,48,0,47],
[32,38,36,37,32,42,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,42,42,35,48,43],
[43,0,40,32,45,36,44,35],
[36,40,0,36,35,35,43,37],
[38,48,44,0,38,43,41,45],
[38,35,45,42,0,43,50,35],
[45,44,45,37,37,0,47,41],
[32,36,37,39,30,33,0,25],
[37,45,43,35,45,39,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,36,46,45,45,40,37],
[56,0,60,53,51,54,38,54],
[44,20,0,42,29,30,27,37],
[34,27,38,0,30,42,28,30],
[35,29,51,50,0,43,33,41],
[35,26,50,38,37,0,30,41],
[40,42,53,52,47,50,0,37],
[43,26,43,50,39,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,38,43,39,37,37],
[41,0,43,35,42,40,36,41],
[41,37,0,34,45,42,33,44],
[42,45,46,0,39,42,39,40],
[37,38,35,41,0,37,39,38],
[41,40,38,38,43,0,43,41],
[43,44,47,41,41,37,0,40],
[43,39,36,40,42,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,32,29,31,44,40,33],
[40,0,44,32,51,33,50,53],
[48,36,0,39,35,40,45,39],
[51,48,41,0,47,35,45,51],
[49,29,45,33,0,36,32,38],
[36,47,40,45,44,0,49,46],
[40,30,35,35,48,31,0,37],
[47,27,41,29,42,34,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,27,48,9,38,19],
[36,0,43,42,55,33,42,24],
[44,37,0,30,34,20,40,22],
[53,38,50,0,72,48,32,31],
[32,25,46,8,0,0,28,0],
[71,47,60,32,80,0,64,46],
[42,38,40,48,52,16,0,52],
[61,56,58,49,80,34,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,39,40,38,48,39],
[44,0,47,38,43,38,49,46],
[31,33,0,43,32,33,42,33],
[41,42,37,0,40,40,43,33],
[40,37,48,40,0,37,45,41],
[42,42,47,40,43,0,44,41],
[32,31,38,37,35,36,0,35],
[41,34,47,47,39,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,31,46,42,43,48],
[39,0,50,39,39,49,44,46],
[38,30,0,35,39,31,36,45],
[49,41,45,0,44,38,43,50],
[34,41,41,36,0,41,39,42],
[38,31,49,42,39,0,44,44],
[37,36,44,37,41,36,0,46],
[32,34,35,30,38,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,39,41,45,39,41],
[36,0,36,38,41,42,33,36],
[42,44,0,45,42,42,40,41],
[41,42,35,0,37,46,39,33],
[39,39,38,43,0,49,39,37],
[35,38,38,34,31,0,41,33],
[41,47,40,41,41,39,0,39],
[39,44,39,47,43,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,52,39,57,37,46],
[37,0,24,35,26,53,21,28],
[40,56,0,46,29,46,30,36],
[28,45,34,0,23,38,37,38],
[41,54,51,57,0,40,49,34],
[23,27,34,42,40,0,38,24],
[43,59,50,43,31,42,0,53],
[34,52,44,42,46,56,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,29,35,44,33,42,44],
[38,0,28,46,35,35,52,37],
[51,52,0,40,40,48,50,39],
[45,34,40,0,41,38,40,46],
[36,45,40,39,0,41,43,42],
[47,45,32,42,39,0,37,37],
[38,28,30,40,37,43,0,45],
[36,43,41,34,38,43,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,51,45,50,40,41,40],
[30,0,42,28,36,36,31,32],
[29,38,0,30,36,39,37,30],
[35,52,50,0,44,50,39,36],
[30,44,44,36,0,34,33,30],
[40,44,41,30,46,0,37,29],
[39,49,43,41,47,43,0,44],
[40,48,50,44,50,51,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,44,37,33,48,40],
[37,0,42,41,41,40,48,38],
[42,38,0,43,45,40,49,42],
[36,39,37,0,38,41,45,37],
[43,39,35,42,0,38,51,43],
[47,40,40,39,42,0,45,44],
[32,32,31,35,29,35,0,43],
[40,42,38,43,37,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,45,46,50,32,46],
[43,0,37,52,48,41,44,45],
[48,43,0,50,36,59,44,52],
[35,28,30,0,37,37,34,30],
[34,32,44,43,0,39,38,46],
[30,39,21,43,41,0,30,51],
[48,36,36,46,42,50,0,48],
[34,35,28,50,34,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,43,46,47,40,49,47],
[28,0,39,37,38,37,41,37],
[37,41,0,44,45,45,49,43],
[34,43,36,0,42,45,44,39],
[33,42,35,38,0,35,47,34],
[40,43,35,35,45,0,51,39],
[31,39,31,36,33,29,0,30],
[33,43,37,41,46,41,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,53,37,45,42,34,41],
[43,0,55,50,39,50,54,50],
[27,25,0,32,40,43,29,40],
[43,30,48,0,40,38,41,25],
[35,41,40,40,0,40,34,42],
[38,30,37,42,40,0,30,33],
[46,26,51,39,46,50,0,38],
[39,30,40,55,38,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,28,43,36,51,39],
[43,0,39,41,52,41,50,41],
[44,41,0,28,43,41,45,41],
[52,39,52,0,51,41,48,44],
[37,28,37,29,0,39,39,37],
[44,39,39,39,41,0,44,44],
[29,30,35,32,41,36,0,35],
[41,39,39,36,43,36,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,35,40,38,37,31,40],
[34,0,30,29,27,24,26,26],
[45,50,0,50,46,37,34,53],
[40,51,30,0,27,31,31,41],
[42,53,34,53,0,45,40,61],
[43,56,43,49,35,0,50,62],
[49,54,46,49,40,30,0,32],
[40,54,27,39,19,18,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,42,45,31,42,37],
[34,0,42,44,38,41,32,37],
[34,38,0,32,32,22,43,30],
[38,36,48,0,35,34,36,31],
[35,42,48,45,0,31,39,34],
[49,39,58,46,49,0,45,40],
[38,48,37,44,41,35,0,38],
[43,43,50,49,46,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,41,43,38,43,38],
[37,0,46,38,42,37,31,40],
[41,34,0,35,41,37,28,34],
[39,42,45,0,46,38,34,39],
[37,38,39,34,0,36,41,40],
[42,43,43,42,44,0,49,40],
[37,49,52,46,39,31,0,39],
[42,40,46,41,40,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,30,51,37,39,44,33],
[35,0,23,43,28,34,33,28],
[50,57,0,47,45,44,56,39],
[29,37,33,0,21,34,35,31],
[43,52,35,59,0,43,46,42],
[41,46,36,46,37,0,36,31],
[36,47,24,45,34,44,0,32],
[47,52,41,49,38,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,50,41,48,39,49],
[33,0,33,36,42,37,31,38],
[43,47,0,52,47,48,39,44],
[30,44,28,0,37,35,36,35],
[39,38,33,43,0,42,34,42],
[32,43,32,45,38,0,44,41],
[41,49,41,44,46,36,0,41],
[31,42,36,45,38,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,38,37,38,40,43],
[41,0,42,38,40,36,40,41],
[37,38,0,40,41,46,47,43],
[42,42,40,0,43,36,39,32],
[43,40,39,37,0,48,42,38],
[42,44,34,44,32,0,40,41],
[40,40,33,41,38,40,0,30],
[37,39,37,48,42,39,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,39,32,22,22,24,20],
[58,0,39,53,37,27,42,25],
[41,41,0,38,25,40,37,44],
[48,27,42,0,48,48,48,49],
[58,43,55,32,0,43,61,41],
[58,53,40,32,37,0,37,56],
[56,38,43,32,19,43,0,59],
[60,55,36,31,39,24,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,33,34,49,70,34,45],
[25,0,37,23,41,51,26,33],
[47,43,0,42,49,68,37,42],
[46,57,38,0,45,70,27,41],
[31,39,31,35,0,60,43,49],
[10,29,12,10,20,0,10,31],
[46,54,43,53,37,70,0,32],
[35,47,38,39,31,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,53,51,43,37,38],
[34,0,37,25,39,37,24,31],
[31,43,0,26,34,40,16,37],
[27,55,54,0,47,46,34,40],
[29,41,46,33,0,44,27,31],
[37,43,40,34,36,0,25,29],
[43,56,64,46,53,55,0,38],
[42,49,43,40,49,51,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,36,44,37,40,37],
[36,0,45,30,49,33,45,37],
[37,35,0,37,37,29,41,34],
[44,50,43,0,49,40,41,32],
[36,31,43,31,0,36,41,40],
[43,47,51,40,44,0,41,37],
[40,35,39,39,39,39,0,33],
[43,43,46,48,40,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,36,45,46,36,46,40],
[29,0,32,38,26,28,40,34],
[44,48,0,52,37,29,45,43],
[35,42,28,0,37,30,41,36],
[34,54,43,43,0,42,44,47],
[44,52,51,50,38,0,54,52],
[34,40,35,39,36,26,0,36],
[40,46,37,44,33,28,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,42,40,45,37,35],
[43,0,38,43,38,37,41,40],
[47,42,0,45,43,50,37,42],
[38,37,35,0,42,42,34,44],
[40,42,37,38,0,53,34,42],
[35,43,30,38,27,0,32,32],
[43,39,43,46,46,48,0,47],
[45,40,38,36,38,48,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,36,33,37,34,32],
[45,0,47,33,40,33,47,26],
[37,33,0,27,35,34,42,35],
[44,47,53,0,46,44,52,40],
[47,40,45,34,0,36,44,33],
[43,47,46,36,44,0,43,38],
[46,33,38,28,36,37,0,32],
[48,54,45,40,47,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,30,30,32,37,31,21],
[36,0,37,35,32,37,36,30],
[50,43,0,51,38,51,36,40],
[50,45,29,0,44,37,41,32],
[48,48,42,36,0,34,38,41],
[43,43,29,43,46,0,43,29],
[49,44,44,39,42,37,0,41],
[59,50,40,48,39,51,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,34,37,45,33,60,39],
[50,0,32,54,69,52,52,38],
[46,48,0,42,65,48,66,40],
[43,26,38,0,65,40,41,26],
[35,11,15,15,0,34,35,3],
[47,28,32,40,46,0,58,32],
[20,28,14,39,45,22,0,20],
[41,42,40,54,77,48,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,43,42,44,42,45],
[42,0,46,33,42,38,45,48],
[37,34,0,27,34,31,33,42],
[37,47,53,0,38,33,46,49],
[38,38,46,42,0,34,40,44],
[36,42,49,47,46,0,46,47],
[38,35,47,34,40,34,0,55],
[35,32,38,31,36,33,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,37,40,41,37,52],
[35,0,42,42,47,41,43,46],
[37,38,0,41,43,41,38,52],
[43,38,39,0,43,38,42,43],
[40,33,37,37,0,42,33,44],
[39,39,39,42,38,0,36,40],
[43,37,42,38,47,44,0,46],
[28,34,28,37,36,40,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,45,46,33,45,40,48],
[30,0,31,30,33,36,31,36],
[35,49,0,43,36,46,42,39],
[34,50,37,0,42,36,34,43],
[47,47,44,38,0,41,42,44],
[35,44,34,44,39,0,43,44],
[40,49,38,46,38,37,0,41],
[32,44,41,37,36,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,43,43,47,47,47],
[40,0,44,38,43,50,42,40],
[40,36,0,36,43,46,39,44],
[37,42,44,0,42,44,38,43],
[37,37,37,38,0,41,38,44],
[33,30,34,36,39,0,35,37],
[33,38,41,42,42,45,0,48],
[33,40,36,37,36,43,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,46,43,33,42,32,32],
[44,0,54,40,37,45,33,29],
[34,26,0,31,24,36,32,32],
[37,40,49,0,43,41,38,36],
[47,43,56,37,0,43,41,44],
[38,35,44,39,37,0,38,31],
[48,47,48,42,39,42,0,38],
[48,51,48,44,36,49,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,44,47,36,30,46,40],
[50,0,44,37,45,42,54,48],
[36,36,0,43,43,36,46,39],
[33,43,37,0,38,31,46,47],
[44,35,37,42,0,32,39,41],
[50,38,44,49,48,0,42,50],
[34,26,34,34,41,38,0,33],
[40,32,41,33,39,30,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,43,29,41,47,32,71],
[24,0,45,35,44,42,45,52],
[37,35,0,38,38,40,45,51],
[51,45,42,0,52,41,32,56],
[39,36,42,28,0,47,33,39],
[33,38,40,39,33,0,32,56],
[48,35,35,48,47,48,0,57],
[9,28,29,24,41,24,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,24,36,30,30,27,39],
[43,0,33,36,32,42,36,39],
[56,47,0,51,44,40,42,47],
[44,44,29,0,38,38,37,31],
[50,48,36,42,0,46,41,46],
[50,38,40,42,34,0,41,43],
[53,44,38,43,39,39,0,51],
[41,41,33,49,34,37,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,44,37,44,39,42],
[37,0,39,38,38,39,36,36],
[40,41,0,43,42,42,42,44],
[36,42,37,0,39,38,40,38],
[43,42,38,41,0,40,39,39],
[36,41,38,42,40,0,37,39],
[41,44,38,40,41,43,0,46],
[38,44,36,42,41,41,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,41,36,50,47,35],
[41,0,43,35,34,47,40,32],
[41,37,0,44,39,46,48,41],
[39,45,36,0,34,48,51,32],
[44,46,41,46,0,56,52,37],
[30,33,34,32,24,0,44,27],
[33,40,32,29,28,36,0,30],
[45,48,39,48,43,53,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,63,47,49,44,41,52],
[40,0,46,45,44,41,42,37],
[17,34,0,28,35,36,32,24],
[33,35,52,0,35,32,37,39],
[31,36,45,45,0,32,39,33],
[36,39,44,48,48,0,49,35],
[39,38,48,43,41,31,0,35],
[28,43,56,41,47,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,12,21,21,32,33,52],
[44,0,36,27,42,5,21,54],
[68,44,0,40,29,29,38,45],
[59,53,40,0,41,58,47,74],
[59,38,51,39,0,35,35,51],
[48,75,51,22,45,0,49,63],
[47,59,42,33,45,31,0,63],
[28,26,35,6,29,17,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,41,37,43,37,40],
[38,0,38,36,36,43,37,40],
[49,42,0,42,38,46,41,47],
[39,44,38,0,41,48,41,45],
[43,44,42,39,0,47,43,45],
[37,37,34,32,33,0,37,40],
[43,43,39,39,37,43,0,49],
[40,40,33,35,35,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,39,43,50,51,46],
[34,0,37,37,39,43,31,42],
[39,43,0,35,41,46,41,41],
[41,43,45,0,44,46,39,41],
[37,41,39,36,0,47,42,38],
[30,37,34,34,33,0,33,40],
[29,49,39,41,38,47,0,34],
[34,38,39,39,42,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,45,41,35,42,32],
[31,0,36,35,33,35,31,40],
[38,44,0,39,43,46,35,30],
[35,45,41,0,35,32,28,34],
[39,47,37,45,0,48,37,41],
[45,45,34,48,32,0,35,32],
[38,49,45,52,43,45,0,39],
[48,40,50,46,39,48,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,44,43,38,45,42,37],
[31,0,36,38,30,34,31,34],
[36,44,0,42,30,42,42,37],
[37,42,38,0,28,32,37,34],
[42,50,50,52,0,47,48,40],
[35,46,38,48,33,0,48,36],
[38,49,38,43,32,32,0,34],
[43,46,43,46,40,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,39,43,47,36,47],
[38,0,34,36,44,36,40,48],
[39,46,0,46,47,48,47,51],
[41,44,34,0,46,37,46,46],
[37,36,33,34,0,45,41,44],
[33,44,32,43,35,0,38,43],
[44,40,33,34,39,42,0,46],
[33,32,29,34,36,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,37,19,36,29,48,22],
[47,0,46,43,42,36,59,45],
[43,34,0,37,55,39,40,34],
[61,37,43,0,55,52,45,48],
[44,38,25,25,0,23,36,27],
[51,44,41,28,57,0,48,36],
[32,21,40,35,44,32,0,25],
[58,35,46,32,53,44,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,46,49,34,38,34],
[41,0,44,43,49,51,46,34],
[38,36,0,38,40,46,42,37],
[34,37,42,0,42,32,40,37],
[31,31,40,38,0,36,29,30],
[46,29,34,48,44,0,41,35],
[42,34,38,40,51,39,0,40],
[46,46,43,43,50,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,42,39,39,39,36],
[46,0,35,43,38,40,46,40],
[42,45,0,42,41,49,37,40],
[38,37,38,0,36,40,35,33],
[41,42,39,44,0,43,37,38],
[41,40,31,40,37,0,41,31],
[41,34,43,45,43,39,0,41],
[44,40,40,47,42,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,49,44,46,40,51,36],
[45,0,44,43,46,37,50,46],
[31,36,0,31,37,37,36,38],
[36,37,49,0,39,44,42,36],
[34,34,43,41,0,37,42,37],
[40,43,43,36,43,0,45,37],
[29,30,44,38,38,35,0,37],
[44,34,42,44,43,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,42,46,44,47,51,25],
[44,0,43,48,40,55,51,49],
[38,37,0,45,38,48,42,30],
[34,32,35,0,35,43,51,27],
[36,40,42,45,0,48,53,26],
[33,25,32,37,32,0,54,21],
[29,29,38,29,27,26,0,24],
[55,31,50,53,54,59,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,40,37,32,38,34,36],
[48,0,45,37,36,40,39,39],
[40,35,0,34,37,33,33,42],
[43,43,46,0,42,33,39,50],
[48,44,43,38,0,35,41,49],
[42,40,47,47,45,0,41,41],
[46,41,47,41,39,39,0,45],
[44,41,38,30,31,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,40,39,32,41,39],
[36,0,32,37,26,31,26,33],
[42,48,0,35,41,43,41,52],
[40,43,45,0,40,37,35,33],
[41,54,39,40,0,37,27,45],
[48,49,37,43,43,0,38,45],
[39,54,39,45,53,42,0,62],
[41,47,28,47,35,35,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,23,27,27,42,40],
[43,0,25,36,26,27,31,38],
[46,55,0,34,42,45,52,57],
[57,44,46,0,30,32,45,36],
[53,54,38,50,0,38,37,53],
[53,53,35,48,42,0,41,47],
[38,49,28,35,43,39,0,48],
[40,42,23,44,27,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,51,35,42,43,38,35],
[42,0,45,38,42,46,39,37],
[29,35,0,30,41,36,33,25],
[45,42,50,0,38,46,44,34],
[38,38,39,42,0,45,36,32],
[37,34,44,34,35,0,38,35],
[42,41,47,36,44,42,0,42],
[45,43,55,46,48,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,26,37,45,46,44],
[41,0,37,40,28,46,37,35],
[42,43,0,37,45,35,37,38],
[54,40,43,0,38,49,37,41],
[43,52,35,42,0,53,35,33],
[35,34,45,31,27,0,36,32],
[34,43,43,43,45,44,0,32],
[36,45,42,39,47,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,24,35,22,24,32,19],
[47,0,41,39,28,36,30,36],
[56,39,0,39,22,42,32,41],
[45,41,41,0,27,45,27,45],
[58,52,58,53,0,49,35,55],
[56,44,38,35,31,0,40,46],
[48,50,48,53,45,40,0,40],
[61,44,39,35,25,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,38,48,41,45,35],
[36,0,36,44,30,32,36,41],
[48,44,0,34,35,43,50,37],
[42,36,46,0,44,41,46,38],
[32,50,45,36,0,35,39,40],
[39,48,37,39,45,0,44,26],
[35,44,30,34,41,36,0,33],
[45,39,43,42,40,54,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,44,41,44,44,41],
[40,0,35,43,42,41,48,40],
[35,45,0,41,40,43,47,41],
[36,37,39,0,37,39,41,38],
[39,38,40,43,0,39,51,45],
[36,39,37,41,41,0,46,39],
[36,32,33,39,29,34,0,34],
[39,40,39,42,35,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,69,50,32,20,10,61],
[22,0,37,50,19,37,21,23],
[11,43,0,50,5,2,10,61],
[30,30,30,0,22,22,27,30],
[48,61,75,58,0,45,28,61],
[60,43,78,58,35,0,40,61],
[70,59,70,53,52,40,0,53],
[19,57,19,50,19,19,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,45,49,35,45,46],
[37,0,44,48,35,36,43,35],
[32,36,0,33,42,34,37,40],
[35,32,47,0,41,39,42,28],
[31,45,38,39,0,32,34,45],
[45,44,46,41,48,0,43,39],
[35,37,43,38,46,37,0,37],
[34,45,40,52,35,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,43,46,36,52,47,49],
[17,0,28,28,17,29,23,37],
[37,52,0,28,35,46,39,45],
[34,52,52,0,40,44,41,46],
[44,63,45,40,0,46,56,51],
[28,51,34,36,34,0,36,32],
[33,57,41,39,24,44,0,40],
[31,43,35,34,29,48,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,43,60,46,51,45],
[36,0,39,35,53,38,41,28],
[44,41,0,32,54,40,57,45],
[37,45,48,0,56,36,46,35],
[20,27,26,24,0,32,33,28],
[34,42,40,44,48,0,50,40],
[29,39,23,34,47,30,0,32],
[35,52,35,45,52,40,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,56,36,26,24,15,11],
[40,0,48,43,33,31,27,44],
[24,32,0,21,34,30,7,24],
[44,37,59,0,60,43,34,44],
[54,47,46,20,0,45,47,32],
[56,49,50,37,35,0,56,41],
[65,53,73,46,33,24,0,45],
[69,36,56,36,48,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,51,40,37,46,43],
[39,0,50,52,42,43,43,50],
[42,30,0,46,38,35,46,48],
[29,28,34,0,30,30,37,40],
[40,38,42,50,0,39,42,47],
[43,37,45,50,41,0,52,41],
[34,37,34,43,38,28,0,41],
[37,30,32,40,33,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,69,32,21,42,22,25,33],
[11,0,16,26,12,25,5,19],
[48,64,0,21,50,23,25,37],
[59,54,59,0,54,46,41,38],
[38,68,30,26,0,25,28,41],
[58,55,57,34,55,0,36,42],
[55,75,55,39,52,44,0,63],
[47,61,43,42,39,38,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,40,43,42,37,41],
[41,0,37,39,37,43,40,41],
[47,43,0,48,39,52,39,49],
[40,41,32,0,38,43,39,40],
[37,43,41,42,0,43,41,42],
[38,37,28,37,37,0,34,37],
[43,40,41,41,39,46,0,38],
[39,39,31,40,38,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,40,40,44,49,43],
[34,0,37,33,43,35,48,32],
[39,43,0,38,46,35,51,39],
[40,47,42,0,47,45,52,43],
[40,37,34,33,0,38,50,32],
[36,45,45,35,42,0,45,37],
[31,32,29,28,30,35,0,26],
[37,48,41,37,48,43,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,16,67,40,40,46,80],
[53,0,28,79,34,63,63,63],
[64,52,0,79,30,74,74,80],
[13,1,1,0,30,14,58,29],
[40,46,50,50,0,63,45,63],
[40,17,6,66,17,0,45,80],
[34,17,6,22,35,35,0,35],
[0,17,0,51,17,0,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,58,44,35,42,36],
[38,0,39,49,34,25,42,31],
[41,41,0,35,49,48,52,44],
[22,31,45,0,36,37,34,45],
[36,46,31,44,0,30,45,47],
[45,55,32,43,50,0,50,56],
[38,38,28,46,35,30,0,28],
[44,49,36,35,33,24,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,31,44,34,26,33,30],
[50,0,43,52,41,42,40,42],
[49,37,0,54,48,49,52,48],
[36,28,26,0,36,39,33,39],
[46,39,32,44,0,38,41,39],
[54,38,31,41,42,0,36,37],
[47,40,28,47,39,44,0,37],
[50,38,32,41,41,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,40,33,35,42,35],
[40,0,50,50,38,48,48,48],
[43,30,0,36,32,41,47,34],
[40,30,44,0,39,39,49,32],
[47,42,48,41,0,44,46,36],
[45,32,39,41,36,0,41,34],
[38,32,33,31,34,39,0,40],
[45,32,46,48,44,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,34,26,31,36,48],
[40,0,27,37,35,23,33,42],
[44,53,0,39,39,41,30,48],
[46,43,41,0,41,39,37,46],
[54,45,41,39,0,43,40,50],
[49,57,39,41,37,0,38,48],
[44,47,50,43,40,42,0,50],
[32,38,32,34,30,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,42,42,39,42,50],
[42,0,42,39,45,39,43,41],
[44,38,0,45,37,40,37,40],
[38,41,35,0,44,39,34,41],
[38,35,43,36,0,36,43,43],
[41,41,40,41,44,0,41,44],
[38,37,43,46,37,39,0,38],
[30,39,40,39,37,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,40,41,47,41,43],
[40,0,51,49,42,57,46,47],
[34,29,0,38,22,48,39,31],
[40,31,42,0,32,52,30,50],
[39,38,58,48,0,48,50,49],
[33,23,32,28,32,0,33,26],
[39,34,41,50,30,47,0,32],
[37,33,49,30,31,54,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,41,33,46,37,45],
[34,0,37,47,36,42,47,43],
[41,43,0,50,36,44,42,39],
[39,33,30,0,39,44,39,43],
[47,44,44,41,0,54,44,40],
[34,38,36,36,26,0,36,32],
[43,33,38,41,36,44,0,32],
[35,37,41,37,40,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,37,47,47,41,44],
[41,0,32,41,40,41,39,38],
[37,48,0,40,51,40,40,40],
[43,39,40,0,45,32,38,35],
[33,40,29,35,0,24,24,28],
[33,39,40,48,56,0,44,40],
[39,41,40,42,56,36,0,43],
[36,42,40,45,52,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,42,39,48,41,42,42],
[49,0,55,37,50,41,43,44],
[38,25,0,45,53,41,43,36],
[41,43,35,0,44,39,36,40],
[32,30,27,36,0,23,40,29],
[39,39,39,41,57,0,44,47],
[38,37,37,44,40,36,0,33],
[38,36,44,40,51,33,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,57,39,25,42,57,28],
[54,0,60,41,41,41,42,38],
[23,20,0,16,22,17,33,32],
[41,39,64,0,42,53,56,67],
[55,39,58,38,0,37,66,48],
[38,39,63,27,43,0,38,34],
[23,38,47,24,14,42,0,35],
[52,42,48,13,32,46,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,37,44,40,33,40],
[40,0,47,34,42,47,40,39],
[40,33,0,35,38,43,28,34],
[43,46,45,0,49,44,35,43],
[36,38,42,31,0,42,31,39],
[40,33,37,36,38,0,32,35],
[47,40,52,45,49,48,0,42],
[40,41,46,37,41,45,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,33,39,44,38,33],
[42,0,43,41,35,44,39,41],
[40,37,0,31,34,38,32,38],
[47,39,49,0,41,48,36,38],
[41,45,46,39,0,40,35,41],
[36,36,42,32,40,0,36,37],
[42,41,48,44,45,44,0,35],
[47,39,42,42,39,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,50,49,39,56,52,55],
[46,0,41,52,42,52,40,55],
[30,39,0,42,30,47,35,48],
[31,28,38,0,37,49,44,47],
[41,38,50,43,0,64,45,54],
[24,28,33,31,16,0,24,46],
[28,40,45,36,35,56,0,63],
[25,25,32,33,26,34,17,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,65,53,31,65,27,39],
[15,0,32,5,20,32,20,27],
[15,48,0,0,0,20,15,27],
[27,75,80,0,32,58,32,49],
[49,60,80,48,0,80,37,49],
[15,48,60,22,0,0,37,34],
[53,60,65,48,43,43,0,34],
[41,53,53,31,31,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,28,36,56,40,35,39],
[38,0,34,52,44,46,45,49],
[52,46,0,29,47,37,41,21],
[44,28,51,0,51,32,23,27],
[24,36,33,29,0,38,23,22],
[40,34,43,48,42,0,48,38],
[45,35,39,57,57,32,0,36],
[41,31,59,53,58,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,42,35,41,48,35],
[45,0,41,41,39,37,46,39],
[44,39,0,41,42,43,45,30],
[38,39,39,0,27,44,36,32],
[45,41,38,53,0,44,47,39],
[39,43,37,36,36,0,39,40],
[32,34,35,44,33,41,0,28],
[45,41,50,48,41,40,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,33,30,43,31,31],
[41,0,37,39,33,47,41,34],
[46,43,0,39,34,46,36,33],
[47,41,41,0,28,47,38,36],
[50,47,46,52,0,48,40,42],
[37,33,34,33,32,0,34,33],
[49,39,44,42,40,46,0,37],
[49,46,47,44,38,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,39,38,41,30,29],
[41,0,36,38,38,48,28,31],
[46,44,0,42,43,44,40,33],
[41,42,38,0,38,43,38,36],
[42,42,37,42,0,40,38,41],
[39,32,36,37,40,0,37,33],
[50,52,40,42,42,43,0,42],
[51,49,47,44,39,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,39,47,38,42,43,41],
[34,0,35,37,34,29,41,36],
[41,45,0,45,40,42,46,38],
[33,43,35,0,36,36,39,38],
[42,46,40,44,0,37,43,45],
[38,51,38,44,43,0,44,47],
[37,39,34,41,37,36,0,44],
[39,44,42,42,35,33,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,37,36,41,37,35,41],
[45,0,42,43,52,40,40,46],
[43,38,0,37,46,40,40,43],
[44,37,43,0,41,42,42,44],
[39,28,34,39,0,36,30,32],
[43,40,40,38,44,0,41,42],
[45,40,40,38,50,39,0,46],
[39,34,37,36,48,38,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,36,39,39,42,39,37],
[41,0,36,39,47,43,37,40],
[44,44,0,40,41,43,37,38],
[41,41,40,0,42,41,38,40],
[41,33,39,38,0,42,36,33],
[38,37,37,39,38,0,35,38],
[41,43,43,42,44,45,0,39],
[43,40,42,40,47,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,56,56,47,42,42],
[47,0,38,58,51,48,43,53],
[41,42,0,49,47,47,37,45],
[24,22,31,0,43,36,32,29],
[24,29,33,37,0,38,25,37],
[33,32,33,44,42,0,33,38],
[38,37,43,48,55,47,0,43],
[38,27,35,51,43,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,38,43,39,46,33],
[38,0,43,38,40,34,36,33],
[37,37,0,42,42,39,37,25],
[42,42,38,0,48,44,37,40],
[37,40,38,32,0,38,35,31],
[41,46,41,36,42,0,36,39],
[34,44,43,43,45,44,0,35],
[47,47,55,40,49,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,42,45,43,39,51],
[36,0,41,41,31,38,34,52],
[33,39,0,41,32,42,36,52],
[38,39,39,0,33,38,29,46],
[35,49,48,47,0,46,45,53],
[37,42,38,42,34,0,32,50],
[41,46,44,51,35,48,0,57],
[29,28,28,34,27,30,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,42,45,44,51,58,37],
[28,0,33,35,39,43,46,33],
[38,47,0,27,38,49,55,36],
[35,45,53,0,44,49,49,35],
[36,41,42,36,0,50,52,43],
[29,37,31,31,30,0,43,32],
[22,34,25,31,28,37,0,30],
[43,47,44,45,37,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,48,41,47,55,50],
[40,0,37,37,42,36,46,46],
[35,43,0,35,49,35,37,50],
[32,43,45,0,40,39,44,49],
[39,38,31,40,0,32,41,42],
[33,44,45,41,48,0,41,49],
[25,34,43,36,39,39,0,43],
[30,34,30,31,38,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,50,61,37,34,50,46],
[26,0,46,50,44,44,43,49],
[30,34,0,34,38,31,34,34],
[19,30,46,0,20,32,25,33],
[43,36,42,60,0,44,49,47],
[46,36,49,48,36,0,40,59],
[30,37,46,55,31,40,0,44],
[34,31,46,47,33,21,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,41,43,39,44,41],
[36,0,44,48,50,42,47,42],
[38,36,0,41,40,36,39,43],
[39,32,39,0,42,42,41,42],
[37,30,40,38,0,38,39,37],
[41,38,44,38,42,0,43,44],
[36,33,41,39,41,37,0,40],
[39,38,37,38,43,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,37,38,39,28,40,34],
[45,0,44,42,35,42,50,51],
[43,36,0,43,39,42,42,38],
[42,38,37,0,41,43,52,44],
[41,45,41,39,0,41,46,39],
[52,38,38,37,39,0,60,46],
[40,30,38,28,34,20,0,32],
[46,29,42,36,41,34,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,40,36,32,38,42],
[33,0,36,37,30,27,31,35],
[38,44,0,34,33,30,38,40],
[40,43,46,0,39,31,36,45],
[44,50,47,41,0,43,37,39],
[48,53,50,49,37,0,44,47],
[42,49,42,44,43,36,0,48],
[38,45,40,35,41,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,28,39,33,34,32,37],
[40,0,32,46,33,28,31,33],
[52,48,0,48,49,39,42,37],
[41,34,32,0,39,31,30,32],
[47,47,31,41,0,34,27,31],
[46,52,41,49,46,0,33,38],
[48,49,38,50,53,47,0,44],
[43,47,43,48,49,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,33,28,30,34,42,45],
[42,0,31,41,31,45,47,41],
[47,49,0,28,40,43,53,31],
[52,39,52,0,33,54,43,46],
[50,49,40,47,0,53,53,36],
[46,35,37,26,27,0,40,32],
[38,33,27,37,27,40,0,37],
[35,39,49,34,44,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,45,38,41,40,39,36],
[45,0,47,38,46,41,42,43],
[35,33,0,35,36,32,28,25],
[42,42,45,0,37,47,35,38],
[39,34,44,43,0,39,34,39],
[40,39,48,33,41,0,36,38],
[41,38,52,45,46,44,0,42],
[44,37,55,42,41,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,42,41,43,42,40],
[34,0,40,43,44,42,42,49],
[39,40,0,41,39,42,44,38],
[38,37,39,0,40,34,41,37],
[39,36,41,40,0,38,45,43],
[37,38,38,46,42,0,46,40],
[38,38,36,39,35,34,0,34],
[40,31,42,43,37,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,37,34,40,35,37],
[43,0,42,35,37,36,36,42],
[34,38,0,36,36,37,41,37],
[43,45,44,0,43,36,41,43],
[46,43,44,37,0,41,44,38],
[40,44,43,44,39,0,40,38],
[45,44,39,39,36,40,0,39],
[43,38,43,37,42,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,47,40,40,40,35],
[46,0,46,48,50,44,40,41],
[40,34,0,41,40,43,34,40],
[33,32,39,0,43,36,35,31],
[40,30,40,37,0,36,36,35],
[40,36,37,44,44,0,35,39],
[40,40,46,45,44,45,0,38],
[45,39,40,49,45,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,44,42,40,40,45,52],
[49,0,54,45,38,57,60,53],
[36,26,0,31,23,37,37,37],
[38,35,49,0,30,43,53,46],
[40,42,57,50,0,43,47,52],
[40,23,43,37,37,0,39,50],
[35,20,43,27,33,41,0,42],
[28,27,43,34,28,30,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,56,29,24,5,56],
[51,0,28,80,52,51,32,52],
[55,52,0,79,28,24,28,55],
[24,0,1,0,1,24,1,25],
[51,28,52,79,0,48,56,51],
[56,29,56,56,32,0,56,56],
[75,48,52,79,24,24,0,51],
[24,28,25,55,29,24,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,45,38,48,46,36],
[35,0,33,31,34,42,33,24],
[38,47,0,43,44,37,48,30],
[35,49,37,0,43,51,48,44],
[42,46,36,37,0,39,49,39],
[32,38,43,29,41,0,37,32],
[34,47,32,32,31,43,0,32],
[44,56,50,36,41,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,52,37,48,47,46,46],
[22,0,41,38,46,41,49,27],
[28,39,0,39,37,36,43,30],
[43,42,41,0,40,35,48,46],
[32,34,43,40,0,34,49,41],
[33,39,44,45,46,0,41,34],
[34,31,37,32,31,39,0,36],
[34,53,50,34,39,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,41,46,43,42,37],
[39,0,40,35,44,44,38,38],
[41,40,0,38,39,43,41,38],
[39,45,42,0,40,48,37,43],
[34,36,41,40,0,40,35,38],
[37,36,37,32,40,0,37,37],
[38,42,39,43,45,43,0,41],
[43,42,42,37,42,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,40,46,54,48,44,52],
[24,0,39,30,35,44,28,38],
[40,41,0,42,54,28,41,46],
[34,50,38,0,44,52,41,46],
[26,45,26,36,0,32,44,41],
[32,36,52,28,48,0,46,44],
[36,52,39,39,36,34,0,40],
[28,42,34,34,39,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,54,38,43,35,37,38],
[38,0,52,36,47,40,38,42],
[26,28,0,32,32,27,28,28],
[42,44,48,0,40,36,36,35],
[37,33,48,40,0,32,41,39],
[45,40,53,44,48,0,34,44],
[43,42,52,44,39,46,0,44],
[42,38,52,45,41,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,47,44,42,43,51,37],
[37,0,42,44,39,40,45,42],
[33,38,0,35,39,40,40,27],
[36,36,45,0,39,43,46,38],
[38,41,41,41,0,45,44,39],
[37,40,40,37,35,0,42,35],
[29,35,40,34,36,38,0,28],
[43,38,53,42,41,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,39,45,45,45,36],
[35,0,32,42,46,40,34,31],
[38,48,0,38,47,45,43,36],
[41,38,42,0,43,40,49,40],
[35,34,33,37,0,40,33,36],
[35,40,35,40,40,0,38,37],
[35,46,37,31,47,42,0,39],
[44,49,44,40,44,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,52,37,49,42,44,36],
[39,0,48,47,44,44,51,40],
[28,32,0,34,34,31,31,35],
[43,33,46,0,45,40,39,39],
[31,36,46,35,0,42,42,34],
[38,36,49,40,38,0,40,39],
[36,29,49,41,38,40,0,37],
[44,40,45,41,46,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,32,55,41,22,37,38],
[41,0,39,61,49,45,38,50],
[48,41,0,57,51,32,49,51],
[25,19,23,0,49,25,43,28],
[39,31,29,31,0,26,39,38],
[58,35,48,55,54,0,49,59],
[43,42,31,37,41,31,0,36],
[42,30,29,52,42,21,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,43,50,39,42,53],
[42,0,37,45,41,38,42,46],
[41,43,0,39,42,38,40,43],
[37,35,41,0,42,40,37,50],
[30,39,38,38,0,33,39,41],
[41,42,42,40,47,0,38,46],
[38,38,40,43,41,42,0,46],
[27,34,37,30,39,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,42,37,39,42,41],
[41,0,40,43,37,36,42,46],
[40,40,0,43,40,41,42,43],
[38,37,37,0,33,31,38,44],
[43,43,40,47,0,33,43,39],
[41,44,39,49,47,0,41,46],
[38,38,38,42,37,39,0,44],
[39,34,37,36,41,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,48,43,41,40,36],
[39,0,40,40,45,43,41,46],
[42,40,0,42,36,46,34,37],
[32,40,38,0,35,48,33,49],
[37,35,44,45,0,47,44,44],
[39,37,34,32,33,0,43,38],
[40,39,46,47,36,37,0,33],
[44,34,43,31,36,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,35,42,37,34,45,46],
[48,0,44,37,35,43,38,47],
[45,36,0,27,39,42,39,49],
[38,43,53,0,42,38,46,48],
[43,45,41,38,0,34,39,39],
[46,37,38,42,46,0,47,49],
[35,42,41,34,41,33,0,47],
[34,33,31,32,41,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,35,23,22,42,48,25],
[50,0,47,42,34,55,50,39],
[45,33,0,19,32,37,44,34],
[57,38,61,0,49,54,48,41],
[58,46,48,31,0,56,56,45],
[38,25,43,26,24,0,38,32],
[32,30,36,32,24,42,0,29],
[55,41,46,39,35,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,48,34,46,35,58],
[33,0,33,55,24,37,39,53],
[38,47,0,48,27,37,31,46],
[32,25,32,0,29,29,46,58],
[46,56,53,51,0,40,37,51],
[34,43,43,51,40,0,42,58],
[45,41,49,34,43,38,0,42],
[22,27,34,22,29,22,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,35,43,41,39,32],
[46,0,45,40,46,42,41,40],
[43,35,0,38,42,36,29,31],
[45,40,42,0,48,36,34,40],
[37,34,38,32,0,32,29,31],
[39,38,44,44,48,0,31,34],
[41,39,51,46,51,49,0,41],
[48,40,49,40,49,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,45,42,44,43,39],
[39,0,43,40,51,43,43,40],
[31,37,0,35,38,39,36,31],
[35,40,45,0,43,40,48,38],
[38,29,42,37,0,44,36,28],
[36,37,41,40,36,0,41,39],
[37,37,44,32,44,39,0,38],
[41,40,49,42,52,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,31,49,33,35,39],
[43,0,38,40,48,40,41,46],
[51,42,0,38,44,45,44,37],
[49,40,42,0,43,35,40,38],
[31,32,36,37,0,22,31,36],
[47,40,35,45,58,0,39,48],
[45,39,36,40,49,41,0,46],
[41,34,43,42,44,32,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,46,42,36,45,47,46],
[31,0,41,37,35,37,37,37],
[34,39,0,31,34,46,44,35],
[38,43,49,0,41,40,46,45],
[44,45,46,39,0,41,48,45],
[35,43,34,40,39,0,45,37],
[33,43,36,34,32,35,0,33],
[34,43,45,35,35,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,41,41,50,38,59],
[37,0,27,31,24,26,17,24],
[37,53,0,39,23,39,42,49],
[39,49,41,0,47,38,53,54],
[39,56,57,33,0,48,52,49],
[30,54,41,42,32,0,41,48],
[42,63,38,27,28,39,0,55],
[21,56,31,26,31,32,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,37,36,36,33,41],
[43,0,36,35,35,39,34,42],
[42,44,0,42,35,38,41,45],
[43,45,38,0,41,40,43,43],
[44,45,45,39,0,40,40,42],
[44,41,42,40,40,0,42,41],
[47,46,39,37,40,38,0,47],
[39,38,35,37,38,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,31,41,48,31,38,42],
[49,0,35,35,49,38,44,40],
[49,45,0,43,52,39,41,55],
[39,45,37,0,47,46,37,45],
[32,31,28,33,0,27,27,39],
[49,42,41,34,53,0,37,44],
[42,36,39,43,53,43,0,41],
[38,40,25,35,41,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,37,44,40,44,45],
[36,0,38,31,36,37,37,36],
[40,42,0,32,40,35,42,35],
[43,49,48,0,42,46,51,40],
[36,44,40,38,0,41,36,35],
[40,43,45,34,39,0,41,40],
[36,43,38,29,44,39,0,45],
[35,44,45,40,45,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,72,41,22,41,35,41],
[22,0,14,22,22,14,22,14],
[8,66,0,22,22,0,8,27],
[39,58,58,0,39,58,39,58],
[58,58,58,41,0,58,58,27],
[39,66,80,22,22,0,8,27],
[45,58,72,41,22,72,0,41],
[39,66,53,22,53,53,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,54,52,42,38,47,41],
[38,0,29,36,47,42,44,46],
[26,51,0,49,41,27,48,48],
[28,44,31,0,36,29,40,38],
[38,33,39,44,0,32,46,34],
[42,38,53,51,48,0,48,45],
[33,36,32,40,34,32,0,39],
[39,34,32,42,46,35,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,52,47,48,47,45],
[34,0,36,44,39,40,42,48],
[40,44,0,44,45,42,45,44],
[28,36,36,0,31,38,38,40],
[33,41,35,49,0,35,39,36],
[32,40,38,42,45,0,40,36],
[33,38,35,42,41,40,0,39],
[35,32,36,40,44,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,36,38,45,33,39],
[39,0,37,41,38,41,38,32],
[32,43,0,37,46,38,42,35],
[44,39,43,0,46,42,43,44],
[42,42,34,34,0,35,40,36],
[35,39,42,38,45,0,35,44],
[47,42,38,37,40,45,0,37],
[41,48,45,36,44,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,25,31,35,27,43,31],
[51,0,41,38,51,32,38,46],
[55,39,0,51,59,46,54,53],
[49,42,29,0,43,46,35,38],
[45,29,21,37,0,42,39,38],
[53,48,34,34,38,0,37,46],
[37,42,26,45,41,43,0,44],
[49,34,27,42,42,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,41,44,36,31,40,42],
[47,0,42,39,42,39,38,49],
[39,38,0,35,42,30,41,41],
[36,41,45,0,37,41,38,48],
[44,38,38,43,0,36,32,44],
[49,41,50,39,44,0,38,53],
[40,42,39,42,48,42,0,46],
[38,31,39,32,36,27,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,41,35,41,37,40],
[38,0,35,43,37,45,42,40],
[41,45,0,50,33,42,42,43],
[39,37,30,0,24,30,37,35],
[45,43,47,56,0,43,47,39],
[39,35,38,50,37,0,39,42],
[43,38,38,43,33,41,0,43],
[40,40,37,45,41,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,56,45,46,39,42],
[36,0,42,41,43,38,35,33],
[37,38,0,47,46,33,35,41],
[24,39,33,0,33,27,25,27],
[35,37,34,47,0,37,30,38],
[34,42,47,53,43,0,37,43],
[41,45,45,55,50,43,0,39],
[38,47,39,53,42,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,50,49,51,59,45,54],
[43,0,34,50,42,44,40,45],
[30,46,0,54,53,58,38,37],
[31,30,26,0,37,48,31,42],
[29,38,27,43,0,45,37,41],
[21,36,22,32,35,0,28,39],
[35,40,42,49,43,52,0,55],
[26,35,43,38,39,41,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,23,46,34,34,46,54],
[46,0,40,48,59,40,61,34],
[57,40,0,34,57,23,47,45],
[34,32,46,0,54,43,24,31],
[46,21,23,26,0,12,50,34],
[46,40,57,37,68,0,61,45],
[34,19,33,56,30,19,0,34],
[26,46,35,49,46,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,51,40,46,40,42,45],
[38,0,45,44,40,45,41,38],
[29,35,0,43,42,33,34,49],
[40,36,37,0,31,40,40,49],
[34,40,38,49,0,41,42,32],
[40,35,47,40,39,0,30,33],
[38,39,46,40,38,50,0,45],
[35,42,31,31,48,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,57,40,45,56,43],
[37,0,42,51,37,44,37,40],
[40,38,0,42,35,48,51,47],
[23,29,38,0,31,30,34,41],
[40,43,45,49,0,44,53,48],
[35,36,32,50,36,0,46,41],
[24,43,29,46,27,34,0,32],
[37,40,33,39,32,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,16,8,8,40,16,40],
[40,0,56,48,48,64,40,64],
[64,24,0,8,48,44,28,64],
[72,32,72,0,48,60,36,80],
[72,32,32,32,0,60,52,80],
[40,16,36,20,20,0,40,48],
[64,40,52,44,28,40,0,60],
[40,16,16,0,0,32,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,47,40,47,54,38],
[42,0,44,45,44,40,50,44],
[32,36,0,41,34,34,42,31],
[33,35,39,0,34,33,39,23],
[40,36,46,46,0,41,53,41],
[33,40,46,47,39,0,51,31],
[26,30,38,41,27,29,0,26],
[42,36,49,57,39,49,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,44,46,43,48,41],
[40,0,41,47,42,48,47,41],
[37,39,0,46,43,46,42,38],
[36,33,34,0,38,35,39,31],
[34,38,37,42,0,40,43,36],
[37,32,34,45,40,0,45,41],
[32,33,38,41,37,35,0,41],
[39,39,42,49,44,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,33,29,32,33,34],
[50,0,46,40,43,45,48,41],
[41,34,0,36,42,43,42,34],
[47,40,44,0,38,42,38,41],
[51,37,38,42,0,38,39,36],
[48,35,37,38,42,0,42,42],
[47,32,38,42,41,38,0,38],
[46,39,46,39,44,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,40,33,49,40,40,43],
[33,0,39,27,40,40,40,42],
[40,41,0,36,47,40,46,39],
[47,53,44,0,45,35,38,42],
[31,40,33,35,0,35,42,37],
[40,40,40,45,45,0,46,36],
[40,40,34,42,38,34,0,48],
[37,38,41,38,43,44,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,44,40,44,37,40],
[44,0,47,41,36,38,36,34],
[35,33,0,36,34,37,35,28],
[36,39,44,0,40,43,43,33],
[40,44,46,40,0,39,39,31],
[36,42,43,37,41,0,42,34],
[43,44,45,37,41,38,0,40],
[40,46,52,47,49,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,29,44,41,41,34,35],
[38,0,41,40,43,51,35,37],
[51,39,0,53,45,66,43,46],
[36,40,27,0,34,37,40,31],
[39,37,35,46,0,36,39,39],
[39,29,14,43,44,0,30,43],
[46,45,37,40,41,50,0,36],
[45,43,34,49,41,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,40,39,38,29,38],
[42,0,40,37,42,42,31,42],
[41,40,0,39,40,38,39,39],
[40,43,41,0,39,41,41,39],
[41,38,40,41,0,43,37,28],
[42,38,42,39,37,0,40,42],
[51,49,41,39,43,40,0,38],
[42,38,41,41,52,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,39,40,36,39,39,38],
[47,0,40,45,47,38,47,45],
[41,40,0,43,39,47,41,41],
[40,35,37,0,34,40,43,41],
[44,33,41,46,0,43,42,44],
[41,42,33,40,37,0,44,42],
[41,33,39,37,38,36,0,39],
[42,35,39,39,36,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,28,36,41,35,29],
[40,0,36,34,38,30,41,32],
[43,44,0,35,40,38,38,41],
[52,46,45,0,40,41,53,41],
[44,42,40,40,0,35,45,43],
[39,50,42,39,45,0,51,50],
[45,39,42,27,35,29,0,39],
[51,48,39,39,37,30,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,37,40,38,40,45,42],
[46,0,37,44,41,45,43,41],
[43,43,0,39,32,44,45,41],
[40,36,41,0,40,51,49,43],
[42,39,48,40,0,42,48,42],
[40,35,36,29,38,0,39,35],
[35,37,35,31,32,41,0,39],
[38,39,39,37,38,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,44,40,41,44,41],
[37,0,43,39,39,47,50,42],
[32,37,0,43,36,39,42,35],
[36,41,37,0,41,45,41,38],
[40,41,44,39,0,45,44,37],
[39,33,41,35,35,0,40,34],
[36,30,38,39,36,40,0,33],
[39,38,45,42,43,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,31,33,43,36,40,31],
[51,0,48,33,46,50,50,43],
[49,32,0,39,41,38,50,36],
[47,47,41,0,48,49,51,37],
[37,34,39,32,0,42,46,36],
[44,30,42,31,38,0,54,36],
[40,30,30,29,34,26,0,18],
[49,37,44,43,44,44,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,40,36,33,40,42,36],
[32,0,29,36,36,47,40,32],
[40,51,0,41,44,44,38,37],
[44,44,39,0,39,39,43,39],
[47,44,36,41,0,44,46,40],
[40,33,36,41,36,0,38,36],
[38,40,42,37,34,42,0,39],
[44,48,43,41,40,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,42,50,53,46,36],
[38,0,38,37,45,45,42,37],
[34,42,0,50,42,41,42,40],
[38,43,30,0,42,43,39,34],
[30,35,38,38,0,44,34,32],
[27,35,39,37,36,0,43,32],
[34,38,38,41,46,37,0,32],
[44,43,40,46,48,48,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,36,62,31,32,42],
[39,0,21,39,52,45,32,29],
[40,59,0,45,60,41,40,28],
[44,41,35,0,54,34,27,22],
[18,28,20,26,0,27,12,23],
[49,35,39,46,53,0,38,37],
[48,48,40,53,68,42,0,34],
[38,51,52,58,57,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,39,60,41,45,43,39],
[31,0,45,39,28,39,31,23],
[41,35,0,47,34,49,46,33],
[20,41,33,0,31,25,40,32],
[39,52,46,49,0,44,44,30],
[35,41,31,55,36,0,37,32],
[37,49,34,40,36,43,0,41],
[41,57,47,48,50,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,28,43,37,42,34],
[41,0,52,29,49,36,47,39],
[45,28,0,32,46,35,43,41],
[52,51,48,0,48,37,49,49],
[37,31,34,32,0,33,35,36],
[43,44,45,43,47,0,47,40],
[38,33,37,31,45,33,0,37],
[46,41,39,31,44,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,42,44,37,34,43],
[43,0,39,37,42,34,36,43],
[43,41,0,46,38,42,39,44],
[38,43,34,0,41,32,36,40],
[36,38,42,39,0,30,38,38],
[43,46,38,48,50,0,42,48],
[46,44,41,44,42,38,0,44],
[37,37,36,40,42,32,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,38,36,27,37,33,23],
[49,0,62,42,39,44,33,21],
[42,18,0,40,23,40,27,20],
[44,38,40,0,33,44,36,30],
[53,41,57,47,0,37,34,36],
[43,36,40,36,43,0,27,42],
[47,47,53,44,46,53,0,39],
[57,59,60,50,44,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,31,37,45,27,40],
[37,0,22,33,25,34,33,34],
[46,58,0,47,47,47,34,49],
[49,47,33,0,41,48,41,51],
[43,55,33,39,0,51,43,52],
[35,46,33,32,29,0,40,49],
[53,47,46,39,37,40,0,51],
[40,46,31,29,28,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,41,38,33,39,45],
[41,0,46,40,37,37,41,42],
[33,34,0,36,31,33,33,30],
[39,40,44,0,42,38,46,41],
[42,43,49,38,0,30,37,35],
[47,43,47,42,50,0,49,38],
[41,39,47,34,43,31,0,34],
[35,38,50,39,45,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,40,41,40,45,40],
[39,0,43,42,40,37,45,40],
[32,37,0,39,34,32,39,33],
[40,38,41,0,39,36,45,40],
[39,40,46,41,0,35,42,41],
[40,43,48,44,45,0,46,42],
[35,35,41,35,38,34,0,34],
[40,40,47,40,39,38,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,51,43,34,38,39],
[39,0,31,48,39,25,39,36],
[46,49,0,47,37,39,40,31],
[29,32,33,0,35,30,32,30],
[37,41,43,45,0,28,33,39],
[46,55,41,50,52,0,32,49],
[42,41,40,48,47,48,0,49],
[41,44,49,50,41,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,43,45,47,40,48],
[40,0,45,41,40,44,39,48],
[37,35,0,43,35,37,44,45],
[37,39,37,0,43,34,42,43],
[35,40,45,37,0,36,38,45],
[33,36,43,46,44,0,40,42],
[40,41,36,38,42,40,0,47],
[32,32,35,37,35,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,30,41,43,40,41,44],
[48,0,38,43,39,43,42,47],
[50,42,0,40,44,42,49,33],
[39,37,40,0,38,40,45,43],
[37,41,36,42,0,39,40,45],
[40,37,38,40,41,0,44,39],
[39,38,31,35,40,36,0,41],
[36,33,47,37,35,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,38,40,34,33,41],
[40,0,45,34,40,37,29,34],
[43,35,0,40,40,44,33,34],
[42,46,40,0,32,43,40,28],
[40,40,40,48,0,39,36,36],
[46,43,36,37,41,0,43,38],
[47,51,47,40,44,37,0,45],
[39,46,46,52,44,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,47,39,47,41,38],
[42,0,46,43,34,52,34,40],
[45,34,0,39,41,38,41,39],
[33,37,41,0,40,40,36,45],
[41,46,39,40,0,47,39,35],
[33,28,42,40,33,0,34,30],
[39,46,39,44,41,46,0,29],
[42,40,41,35,45,50,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,36,45,40,48,35,38],
[30,0,31,32,27,36,41,30],
[44,49,0,52,47,45,42,39],
[35,48,28,0,37,34,39,40],
[40,53,33,43,0,47,44,32],
[32,44,35,46,33,0,45,39],
[45,39,38,41,36,35,0,36],
[42,50,41,40,48,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,43,46,46,36,39],
[32,0,36,30,39,43,34,40],
[36,44,0,41,35,50,36,37],
[37,50,39,0,41,48,44,38],
[34,41,45,39,0,42,34,42],
[34,37,30,32,38,0,28,40],
[44,46,44,36,46,52,0,43],
[41,40,43,42,38,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,39,41,43,42,44],
[41,0,39,40,40,38,38,44],
[40,41,0,43,41,47,43,47],
[41,40,37,0,38,30,43,46],
[39,40,39,42,0,45,33,47],
[37,42,33,50,35,0,34,51],
[38,42,37,37,47,46,0,42],
[36,36,33,34,33,29,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,37,38,39,39,35],
[44,0,40,45,46,41,43,38],
[44,40,0,42,42,42,41,42],
[43,35,38,0,37,32,35,40],
[42,34,38,43,0,36,35,40],
[41,39,38,48,44,0,41,47],
[41,37,39,45,45,39,0,40],
[45,42,38,40,40,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,46,52,40,51,49],
[38,0,37,46,51,42,43,50],
[44,43,0,41,53,34,43,44],
[34,34,39,0,44,37,42,38],
[28,29,27,36,0,31,32,34],
[40,38,46,43,49,0,47,46],
[29,37,37,38,48,33,0,40],
[31,30,36,42,46,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,44,42,47,24,17,29],
[59,0,39,49,42,53,29,42],
[36,41,0,36,40,39,42,55],
[38,31,44,0,51,31,27,34],
[33,38,40,29,0,31,30,46],
[56,27,41,49,49,0,34,40],
[63,51,38,53,50,46,0,38],
[51,38,25,46,34,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,36,40,38,38,35],
[38,0,29,42,31,31,37,30],
[39,51,0,46,45,36,42,37],
[44,38,34,0,36,35,36,36],
[40,49,35,44,0,48,44,41],
[42,49,44,45,32,0,39,41],
[42,43,38,44,36,41,0,36],
[45,50,43,44,39,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,31,34,41,33,40],
[41,0,39,36,46,39,41,43],
[46,41,0,38,33,43,43,39],
[49,44,42,0,37,48,46,43],
[46,34,47,43,0,45,38,49],
[39,41,37,32,35,0,38,43],
[47,39,37,34,42,42,0,51],
[40,37,41,37,31,37,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,34,40,47,40,36],
[44,0,46,43,44,51,48,34],
[44,34,0,36,41,43,46,36],
[46,37,44,0,51,51,51,44],
[40,36,39,29,0,43,43,33],
[33,29,37,29,37,0,41,28],
[40,32,34,29,37,39,0,28],
[44,46,44,36,47,52,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,30,42,56,47,46,13],
[35,0,30,41,36,45,29,32],
[50,50,0,61,56,45,44,25],
[38,39,19,0,21,22,27,8],
[24,44,24,59,0,14,38,19],
[33,35,35,58,66,0,37,22],
[34,51,36,53,42,43,0,42],
[67,48,55,72,61,58,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,40,37,37,35,35],
[38,0,41,45,37,44,40,39],
[41,39,0,36,41,39,44,41],
[40,35,44,0,35,38,38,31],
[43,43,39,45,0,37,35,40],
[43,36,41,42,43,0,43,38],
[45,40,36,42,45,37,0,43],
[45,41,39,49,40,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,40,39,53,40,48],
[36,0,39,42,40,51,46,46],
[40,41,0,36,35,53,37,40],
[40,38,44,0,46,52,41,36],
[41,40,45,34,0,53,39,42],
[27,29,27,28,27,0,31,32],
[40,34,43,39,41,49,0,42],
[32,34,40,44,38,48,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,34,42,26,26,36,39],
[51,0,51,53,34,47,47,48],
[46,29,0,46,34,49,40,33],
[38,27,34,0,33,17,36,31],
[54,46,46,47,0,42,32,47],
[54,33,31,63,38,0,40,40],
[44,33,40,44,48,40,0,29],
[41,32,47,49,33,40,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,28,26,40,32,37,35],
[42,0,35,39,41,41,35,41],
[52,45,0,38,44,37,37,43],
[54,41,42,0,51,35,43,38],
[40,39,36,29,0,35,39,32],
[48,39,43,45,45,0,38,36],
[43,45,43,37,41,42,0,43],
[45,39,37,42,48,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,37,25,34,33,38],
[43,0,51,36,33,40,42,44],
[40,29,0,29,37,30,36,38],
[43,44,51,0,39,52,46,45],
[55,47,43,41,0,38,48,50],
[46,40,50,28,42,0,45,41],
[47,38,44,34,32,35,0,38],
[42,36,42,35,30,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,37,36,36,39,49],
[31,0,37,35,36,40,40,47],
[39,43,0,41,36,46,41,46],
[43,45,39,0,43,47,44,53],
[44,44,44,37,0,42,47,50],
[44,40,34,33,38,0,41,40],
[41,40,39,36,33,39,0,56],
[31,33,34,27,30,40,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,47,27,47,55,40],
[40,0,47,39,57,25,40,65],
[40,33,0,37,30,37,60,33],
[33,41,43,0,45,20,35,28],
[53,23,50,35,0,25,50,28],
[33,55,43,60,55,0,55,53],
[25,40,20,45,30,25,0,38],
[40,15,47,52,52,27,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,40,42,43,42,31],
[42,0,37,45,38,47,35,33],
[41,43,0,32,36,37,29,30],
[40,35,48,0,43,38,37,37],
[38,42,44,37,0,40,38,37],
[37,33,43,42,40,0,42,40],
[38,45,51,43,42,38,0,37],
[49,47,50,43,43,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,34,37,34,30,24,26],
[38,0,54,52,42,32,21,20],
[46,26,0,41,27,24,21,28],
[43,28,39,0,26,34,33,30],
[46,38,53,54,0,30,25,28],
[50,48,56,46,50,0,40,32],
[56,59,59,47,55,40,0,48],
[54,60,52,50,52,48,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,38,32,31,48,42,36],
[44,0,44,47,44,34,41,44],
[42,36,0,40,45,41,44,38],
[48,33,40,0,43,42,37,42],
[49,36,35,37,0,39,46,40],
[32,46,39,38,41,0,37,39],
[38,39,36,43,34,43,0,40],
[44,36,42,38,40,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,37,40,38,44,32],
[43,0,45,44,43,45,49,38],
[40,35,0,28,32,32,43,37],
[43,36,52,0,40,44,52,42],
[40,37,48,40,0,34,42,32],
[42,35,48,36,46,0,52,41],
[36,31,37,28,38,28,0,29],
[48,42,43,38,48,39,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,34,44,30,42,45,39],
[34,0,26,35,29,38,42,34],
[46,54,0,40,41,42,45,44],
[36,45,40,0,35,44,43,47],
[50,51,39,45,0,57,54,52],
[38,42,38,36,23,0,42,31],
[35,38,35,37,26,38,0,41],
[41,46,36,33,28,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,36,44,60,54,43,20],
[34,0,29,37,44,45,28,26],
[44,51,0,42,37,39,35,44],
[36,43,38,0,45,50,32,27],
[20,36,43,35,0,45,23,24],
[26,35,41,30,35,0,33,26],
[37,52,45,48,57,47,0,38],
[60,54,36,53,56,54,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,37,34,34,39,30,38],
[35,0,39,27,43,44,30,40],
[43,41,0,30,31,46,36,33],
[46,53,50,0,42,43,34,44],
[46,37,49,38,0,50,32,37],
[41,36,34,37,30,0,21,30],
[50,50,44,46,48,59,0,38],
[42,40,47,36,43,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,42,37,36,30,41],
[44,0,36,48,36,51,44,42],
[47,44,0,37,35,33,35,39],
[38,32,43,0,42,43,38,34],
[43,44,45,38,0,40,42,43],
[44,29,47,37,40,0,32,44],
[50,36,45,42,38,48,0,46],
[39,38,41,46,37,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,18,46,40,44,37],
[42,0,48,36,57,34,53,42],
[40,32,0,22,46,34,41,41],
[62,44,58,0,55,35,57,51],
[34,23,34,25,0,36,38,26],
[40,46,46,45,44,0,42,42],
[36,27,39,23,42,38,0,31],
[43,38,39,29,54,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,39,35,36,41,33],
[44,0,45,41,38,45,42,44],
[41,35,0,38,40,35,34,38],
[41,39,42,0,35,45,34,44],
[45,42,40,45,0,42,37,40],
[44,35,45,35,38,0,34,34],
[39,38,46,46,43,46,0,46],
[47,36,42,36,40,46,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,49,50,39,41,43],
[34,0,37,40,36,32,32,29],
[33,43,0,47,47,41,46,41],
[31,40,33,0,42,34,29,33],
[30,44,33,38,0,34,35,36],
[41,48,39,46,46,0,41,45],
[39,48,34,51,45,39,0,45],
[37,51,39,47,44,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,30,42,41,40,43],
[43,0,38,33,38,38,39,42],
[38,42,0,40,40,36,38,42],
[50,47,40,0,43,38,44,39],
[38,42,40,37,0,44,39,45],
[39,42,44,42,36,0,36,41],
[40,41,42,36,41,44,0,37],
[37,38,38,41,35,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,42,42,42,39,52],
[40,0,44,40,38,43,37,46],
[40,36,0,41,42,47,45,48],
[38,40,39,0,29,39,31,42],
[38,42,38,51,0,42,40,42],
[38,37,33,41,38,0,32,47],
[41,43,35,49,40,48,0,49],
[28,34,32,38,38,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,53,21,21,21,21,21],
[61,0,53,57,53,53,76,38],
[27,27,0,21,6,21,44,6],
[59,23,59,0,23,23,23,59],
[59,27,74,57,0,53,76,38],
[59,27,59,57,27,0,78,65],
[59,4,36,57,4,2,0,42],
[59,42,74,21,42,15,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,62,63,62,40,61,44],
[30,0,53,44,53,40,51,39],
[18,27,0,36,39,26,30,25],
[17,36,44,0,49,30,54,33],
[18,27,41,31,0,30,43,19],
[40,40,54,50,50,0,49,46],
[19,29,50,26,37,31,0,14],
[36,41,55,47,61,34,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,48,47,46,41,48],
[42,0,36,40,46,39,44,44],
[40,44,0,47,47,45,42,54],
[32,40,33,0,41,41,38,48],
[33,34,33,39,0,34,36,38],
[34,41,35,39,46,0,39,48],
[39,36,38,42,44,41,0,47],
[32,36,26,32,42,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,48,48,51,40,40,54],
[29,0,47,35,41,53,39,31],
[32,33,0,28,19,29,21,41],
[32,45,52,0,41,41,36,46],
[29,39,61,39,0,28,25,31],
[40,27,51,39,52,0,16,48],
[40,41,59,44,55,64,0,42],
[26,49,39,34,49,32,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,29,26,49,32,34,30],
[45,0,43,39,51,37,38,46],
[51,37,0,41,46,41,41,43],
[54,41,39,0,49,42,48,40],
[31,29,34,31,0,25,22,25],
[48,43,39,38,55,0,54,43],
[46,42,39,32,58,26,0,39],
[50,34,37,40,55,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,39,36,44,38,32],
[41,0,32,38,39,42,39,37],
[49,48,0,42,39,41,48,42],
[41,42,38,0,43,46,43,43],
[44,41,41,37,0,41,39,44],
[36,38,39,34,39,0,45,41],
[42,41,32,37,41,35,0,40],
[48,43,38,37,36,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,39,40,41,37,38,32],
[48,0,42,43,46,45,45,39],
[41,38,0,42,52,38,44,42],
[40,37,38,0,45,45,41,31],
[39,34,28,35,0,30,35,32],
[43,35,42,35,50,0,42,38],
[42,35,36,39,45,38,0,33],
[48,41,38,49,48,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,53,36,51,41,32],
[34,0,32,46,31,43,31,31],
[39,48,0,56,38,47,42,49],
[27,34,24,0,30,36,35,33],
[44,49,42,50,0,49,45,38],
[29,37,33,44,31,0,39,43],
[39,49,38,45,35,41,0,38],
[48,49,31,47,42,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,45,46,39,46,47],
[40,0,46,45,48,44,51,39],
[39,34,0,45,43,37,46,40],
[35,35,35,0,40,37,37,37],
[34,32,37,40,0,33,41,35],
[41,36,43,43,47,0,48,40],
[34,29,34,43,39,32,0,31],
[33,41,40,43,45,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,40,40,46,34,39],
[34,0,37,41,33,41,34,36],
[34,43,0,44,38,42,41,41],
[40,39,36,0,37,44,37,40],
[40,47,42,43,0,49,44,41],
[34,39,38,36,31,0,36,36],
[46,46,39,43,36,44,0,35],
[41,44,39,40,39,44,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,42,38,36,39,40],
[41,0,38,41,40,39,36,40],
[45,42,0,45,46,41,40,45],
[38,39,35,0,45,37,34,36],
[42,40,34,35,0,35,36,40],
[44,41,39,43,45,0,46,39],
[41,44,40,46,44,34,0,40],
[40,40,35,44,40,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,48,50,46,53,40,52],
[27,0,38,55,23,52,43,20],
[32,42,0,53,34,37,48,49],
[30,25,27,0,24,40,60,37],
[34,57,46,56,0,45,51,49],
[27,28,43,40,35,0,40,42],
[40,37,32,20,29,40,0,31],
[28,60,31,43,31,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,38,40,35,45,42],
[43,0,41,43,42,40,45,47],
[36,39,0,36,38,35,34,36],
[42,37,44,0,43,37,46,46],
[40,38,42,37,0,32,33,46],
[45,40,45,43,48,0,57,49],
[35,35,46,34,47,23,0,36],
[38,33,44,34,34,31,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,44,45,40,39,39],
[49,0,44,51,52,45,46,40],
[48,36,0,46,43,44,46,48],
[36,29,34,0,45,37,36,35],
[35,28,37,35,0,38,32,30],
[40,35,36,43,42,0,43,37],
[41,34,34,44,48,37,0,38],
[41,40,32,45,50,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,48,41,51,35,41,47],
[31,0,38,40,43,41,33,38],
[32,42,0,39,49,38,39,38],
[39,40,41,0,41,39,34,42],
[29,37,31,39,0,33,31,37],
[45,39,42,41,47,0,43,41],
[39,47,41,46,49,37,0,40],
[33,42,42,38,43,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,33,40,42,37,38],
[43,0,38,40,35,39,40,43],
[38,42,0,42,42,44,39,40],
[47,40,38,0,41,45,40,45],
[40,45,38,39,0,35,34,39],
[38,41,36,35,45,0,43,41],
[43,40,41,40,46,37,0,44],
[42,37,40,35,41,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,41,47,41,32,17,37],
[19,0,33,30,23,36,29,22],
[39,47,0,43,34,39,39,27],
[33,50,37,0,32,32,33,28],
[39,57,46,48,0,40,40,37],
[48,44,41,48,40,0,26,29],
[63,51,41,47,40,54,0,45],
[43,58,53,52,43,51,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,45,37,36,35,31],
[41,0,36,39,35,32,36,31],
[43,44,0,44,38,38,41,36],
[35,41,36,0,34,40,35,34],
[43,45,42,46,0,39,42,40],
[44,48,42,40,41,0,39,39],
[45,44,39,45,38,41,0,41],
[49,49,44,46,40,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,38,40,53,37,51],
[39,0,42,45,43,46,38,44],
[42,38,0,35,36,45,37,43],
[42,35,45,0,35,46,40,44],
[40,37,44,45,0,50,44,44],
[27,34,35,34,30,0,32,39],
[43,42,43,40,36,48,0,43],
[29,36,37,36,36,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,24,37,22,38,25,36],
[53,0,41,54,39,42,44,42],
[56,39,0,57,38,42,31,49],
[43,26,23,0,28,34,34,36],
[58,41,42,52,0,47,37,48],
[42,38,38,46,33,0,41,49],
[55,36,49,46,43,39,0,46],
[44,38,31,44,32,31,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,39,39,41,41,40],
[38,0,39,37,42,41,41,41],
[36,41,0,41,41,38,39,40],
[41,43,39,0,41,39,42,39],
[41,38,39,39,0,43,49,40],
[39,39,42,41,37,0,46,34],
[39,39,41,38,31,34,0,36],
[40,39,40,41,40,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,37,52,49,49,39],
[43,0,42,40,43,45,62,42],
[40,38,0,42,45,49,51,38],
[43,40,38,0,46,50,51,33],
[28,37,35,34,0,39,49,35],
[31,35,31,30,41,0,45,30],
[31,18,29,29,31,35,0,21],
[41,38,42,47,45,50,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,45,31,50,56,44],
[35,0,39,38,40,40,42,40],
[38,41,0,35,44,50,41,38],
[35,42,45,0,32,42,46,46],
[49,40,36,48,0,48,56,44],
[30,40,30,38,32,0,45,33],
[24,38,39,34,24,35,0,39],
[36,40,42,34,36,47,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,52,33,40,35,24,51],
[47,0,69,39,47,50,41,45],
[28,11,0,28,21,27,19,33],
[47,41,52,0,42,35,44,44],
[40,33,59,38,0,48,34,48],
[45,30,53,45,32,0,29,36],
[56,39,61,36,46,51,0,51],
[29,35,47,36,32,44,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,54,62,54,56,51,40],
[22,0,59,74,49,50,50,39],
[26,21,0,46,31,42,27,23],
[18,6,34,0,39,33,15,7],
[26,31,49,41,0,51,32,36],
[24,30,38,47,29,0,29,23],
[29,30,53,65,48,51,0,10],
[40,41,57,73,44,57,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,39,39,54,39,55,49],
[32,0,41,33,49,40,36,36],
[41,39,0,41,43,30,31,44],
[41,47,39,0,59,35,40,49],
[26,31,37,21,0,37,30,46],
[41,40,50,45,43,0,45,45],
[25,44,49,40,50,35,0,50],
[31,44,36,31,34,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,23,36,27,12,43,40],
[43,0,41,33,12,23,54,65],
[57,39,0,45,48,35,45,57],
[44,47,35,0,49,38,65,63],
[53,68,32,31,0,42,54,54],
[68,57,45,42,38,0,43,55],
[37,26,35,15,26,37,0,59],
[40,15,23,17,26,25,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,38,39,31,36,39],
[43,0,43,47,46,41,42,39],
[41,37,0,42,42,36,43,33],
[42,33,38,0,38,34,37,39],
[41,34,38,42,0,36,40,41],
[49,39,44,46,44,0,45,38],
[44,38,37,43,40,35,0,37],
[41,41,47,41,39,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,39,44,42,43,46,42],
[28,0,31,38,28,35,37,37],
[41,49,0,42,35,45,50,42],
[36,42,38,0,33,38,47,44],
[38,52,45,47,0,41,47,43],
[37,45,35,42,39,0,40,38],
[34,43,30,33,33,40,0,36],
[38,43,38,36,37,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,53,40,39,42,42,44],
[30,0,49,35,30,43,37,36],
[27,31,0,38,36,40,39,39],
[40,45,42,0,37,38,40,35],
[41,50,44,43,0,42,36,38],
[38,37,40,42,38,0,36,43],
[38,43,41,40,44,44,0,43],
[36,44,41,45,42,37,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,15,35,19,18,31,18],
[49,0,44,22,20,18,0,20],
[65,36,0,36,5,20,16,20],
[45,58,44,0,45,27,57,42],
[61,60,75,35,0,44,60,35],
[62,62,60,53,36,0,34,36],
[49,80,64,23,20,46,0,20],
[62,60,60,38,45,44,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,45,47,43,23,55],
[43,0,45,46,49,46,37,43],
[44,35,0,49,49,43,31,47],
[35,34,31,0,36,41,25,35],
[33,31,31,44,0,47,18,57],
[37,34,37,39,33,0,44,41],
[57,43,49,55,62,36,0,66],
[25,37,33,45,23,39,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,45,45,42,39,38],
[40,0,44,43,39,48,45,47],
[38,36,0,40,43,47,41,44],
[35,37,40,0,41,41,41,42],
[35,41,37,39,0,45,43,42],
[38,32,33,39,35,0,34,33],
[41,35,39,39,37,46,0,46],
[42,33,36,38,38,47,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,33,49,43,32,40,47],
[39,0,32,51,34,38,35,42],
[47,48,0,60,48,47,38,53],
[31,29,20,0,31,28,24,35],
[37,46,32,49,0,35,39,38],
[48,42,33,52,45,0,34,52],
[40,45,42,56,41,46,0,51],
[33,38,27,45,42,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,29,43,43,35,40,37],
[35,0,29,34,36,43,46,39],
[51,51,0,40,45,49,60,47],
[37,46,40,0,47,36,44,45],
[37,44,35,33,0,38,41,39],
[45,37,31,44,42,0,43,43],
[40,34,20,36,39,37,0,32],
[43,41,33,35,41,37,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,56,44,48,41,42],
[49,0,38,50,58,43,37,39],
[48,42,0,52,52,55,46,37],
[24,30,28,0,29,54,29,25],
[36,22,28,51,0,40,25,42],
[32,37,25,26,40,0,25,38],
[39,43,34,51,55,55,0,38],
[38,41,43,55,38,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,56,35,27,40,42,58],
[37,0,33,29,37,42,30,44],
[24,47,0,41,22,47,49,54],
[45,51,39,0,43,51,51,59],
[53,43,58,37,0,71,38,58],
[40,38,33,29,9,0,19,43],
[38,50,31,29,42,61,0,52],
[22,36,26,21,22,37,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,37,43,44,46,45],
[35,0,32,37,32,40,37,44],
[40,48,0,40,38,44,43,53],
[43,43,40,0,42,47,47,56],
[37,48,42,38,0,41,42,46],
[36,40,36,33,39,0,37,45],
[34,43,37,33,38,43,0,50],
[35,36,27,24,34,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,40,43,43,48,37],
[35,0,43,42,38,38,44,43],
[37,37,0,39,33,35,37,38],
[40,38,41,0,40,42,42,40],
[37,42,47,40,0,44,43,42],
[37,42,45,38,36,0,46,40],
[32,36,43,38,37,34,0,33],
[43,37,42,40,38,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,38,43,45,41,46,35],
[48,0,40,42,44,42,41,42],
[42,40,0,40,47,43,44,47],
[37,38,40,0,43,35,37,41],
[35,36,33,37,0,41,40,37],
[39,38,37,45,39,0,36,37],
[34,39,36,43,40,44,0,43],
[45,38,33,39,43,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,29,50,44,50,36],
[40,0,23,32,45,30,44,28],
[40,57,0,51,56,43,42,54],
[51,48,29,0,52,36,50,40],
[30,35,24,28,0,25,42,27],
[36,50,37,44,55,0,41,41],
[30,36,38,30,38,39,0,29],
[44,52,26,40,53,39,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,54,60,38,38,33,25],
[28,0,29,33,27,27,33,14],
[26,51,0,32,37,51,59,51],
[20,47,48,0,40,47,35,27],
[42,53,43,40,0,58,40,40],
[42,53,29,33,22,0,47,47],
[47,47,21,45,40,33,0,27],
[55,66,29,53,40,33,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,17,45,34,40,40,40],
[40,0,40,45,57,28,40,57],
[63,40,0,63,75,51,80,52],
[35,35,17,0,52,63,17,12],
[46,23,5,28,0,28,40,35],
[40,52,29,17,52,0,29,29],
[40,40,0,63,40,51,0,40],
[40,23,28,68,45,51,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,25,41,56,57,39,37],
[19,0,18,18,42,55,16,32],
[55,62,0,36,53,55,40,29],
[39,62,44,0,56,51,29,35],
[24,38,27,24,0,39,23,31],
[23,25,25,29,41,0,19,23],
[41,64,40,51,57,61,0,47],
[43,48,51,45,49,57,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,45,45,46,48,43],
[36,0,41,42,42,44,35,44],
[43,39,0,44,42,45,42,46],
[35,38,36,0,41,48,38,50],
[35,38,38,39,0,44,40,46],
[34,36,35,32,36,0,31,39],
[32,45,38,42,40,49,0,41],
[37,36,34,30,34,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,38,35,19,43,22,37],
[48,0,49,44,28,49,34,45],
[42,31,0,43,30,50,24,29],
[45,36,37,0,25,37,40,39],
[61,52,50,55,0,53,44,37],
[37,31,30,43,27,0,29,28],
[58,46,56,40,36,51,0,40],
[43,35,51,41,43,52,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,30,40,40,38,42],
[40,0,45,31,31,37,43,41],
[37,35,0,37,33,34,33,37],
[50,49,43,0,41,53,40,46],
[40,49,47,39,0,49,45,41],
[40,43,46,27,31,0,37,42],
[42,37,47,40,35,43,0,40],
[38,39,43,34,39,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,41,35,42,47,42],
[43,0,46,41,40,37,43,45],
[37,34,0,36,35,38,42,46],
[39,39,44,0,34,36,43,42],
[45,40,45,46,0,40,43,41],
[38,43,42,44,40,0,40,40],
[33,37,38,37,37,40,0,39],
[38,35,34,38,39,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,56,53,40,42,43],
[37,0,43,46,48,44,43,38],
[32,37,0,44,52,33,37,32],
[24,34,36,0,48,36,39,40],
[27,32,28,32,0,29,26,28],
[40,36,47,44,51,0,44,36],
[38,37,43,41,54,36,0,32],
[37,42,48,40,52,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,48,41,40,41,39],
[42,0,40,42,41,45,37,31],
[44,40,0,48,41,45,40,36],
[32,38,32,0,41,47,38,39],
[39,39,39,39,0,36,32,39],
[40,35,35,33,44,0,37,39],
[39,43,40,42,48,43,0,43],
[41,49,44,41,41,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,39,32,41,37,45,27],
[51,0,54,36,48,56,55,42],
[41,26,0,38,41,33,54,36],
[48,44,42,0,39,36,53,40],
[39,32,39,41,0,37,43,28],
[43,24,47,44,43,0,47,33],
[35,25,26,27,37,33,0,30],
[53,38,44,40,52,47,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,45,46,45,44,37],
[41,0,41,45,46,38,39,41],
[37,39,0,48,39,45,43,34],
[35,35,32,0,38,38,24,28],
[34,34,41,42,0,32,33,35],
[35,42,35,42,48,0,36,33],
[36,41,37,56,47,44,0,34],
[43,39,46,52,45,47,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,44,43,43,41,41],
[40,0,47,50,44,53,41,43],
[45,33,0,45,41,51,42,39],
[36,30,35,0,37,45,42,33],
[37,36,39,43,0,47,41,39],
[37,27,29,35,33,0,34,36],
[39,39,38,38,39,46,0,37],
[39,37,41,47,41,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,34,42,39,45,49,37],
[35,0,30,31,42,29,44,40],
[46,50,0,43,49,45,39,45],
[38,49,37,0,49,31,41,40],
[41,38,31,31,0,34,51,43],
[35,51,35,49,46,0,38,39],
[31,36,41,39,29,42,0,34],
[43,40,35,40,37,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,27,32,44,36,40],
[41,0,38,30,29,40,37,28],
[39,42,0,30,39,32,35,28],
[53,50,50,0,40,44,41,49],
[48,51,41,40,0,36,50,39],
[36,40,48,36,44,0,39,42],
[44,43,45,39,30,41,0,37],
[40,52,52,31,41,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,18,34,32,40,50,28],
[20,0,14,21,44,36,40,35],
[62,66,0,56,49,25,61,46],
[46,59,24,0,51,46,59,47],
[48,36,31,29,0,31,49,25],
[40,44,55,34,49,0,39,47],
[30,40,19,21,31,41,0,27],
[52,45,34,33,55,33,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,35,32,33,30,29],
[46,0,47,40,48,45,38,38],
[34,33,0,41,40,42,41,43],
[45,40,39,0,42,34,41,34],
[48,32,40,38,0,37,38,39],
[47,35,38,46,43,0,46,38],
[50,42,39,39,42,34,0,40],
[51,42,37,46,41,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,40,37,57,41,52],
[33,0,34,32,29,39,23,40],
[31,46,0,38,32,26,31,30],
[40,48,42,0,32,34,33,36],
[43,51,48,48,0,39,49,44],
[23,41,54,46,41,0,32,54],
[39,57,49,47,31,48,0,55],
[28,40,50,44,36,26,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,28,35,34,31,39,25],
[43,0,32,26,36,34,43,31],
[52,48,0,45,41,42,51,33],
[45,54,35,0,41,46,53,41],
[46,44,39,39,0,37,42,35],
[49,46,38,34,43,0,46,30],
[41,37,29,27,38,34,0,27],
[55,49,47,39,45,50,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,37,47,38,47,37],
[37,0,50,51,51,42,45,47],
[41,30,0,35,39,31,45,26],
[43,29,45,0,46,40,45,32],
[33,29,41,34,0,31,42,26],
[42,38,49,40,49,0,42,37],
[33,35,35,35,38,38,0,33],
[43,33,54,48,54,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,40,42,47,35,44],
[42,0,44,31,45,51,50,43],
[34,36,0,36,39,43,40,41],
[40,49,44,0,47,41,45,49],
[38,35,41,33,0,40,43,41],
[33,29,37,39,40,0,32,40],
[45,30,40,35,37,48,0,36],
[36,37,39,31,39,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,45,40,44,38,40,42],
[36,0,43,38,43,40,38,43],
[35,37,0,44,39,40,35,38],
[40,42,36,0,37,41,41,39],
[36,37,41,43,0,36,33,35],
[42,40,40,39,44,0,36,40],
[40,42,45,39,47,44,0,44],
[38,37,42,41,45,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,33,42,41,39,34,44],
[30,0,22,38,34,45,35,44],
[47,58,0,40,48,50,46,46],
[38,42,40,0,42,41,44,42],
[39,46,32,38,0,46,43,41],
[41,35,30,39,34,0,37,44],
[46,45,34,36,37,43,0,42],
[36,36,34,38,39,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,41,41,42,42,37],
[37,0,35,46,41,40,38,39],
[37,45,0,46,38,40,32,32],
[39,34,34,0,38,36,41,35],
[39,39,42,42,0,45,39,36],
[38,40,40,44,35,0,37,33],
[38,42,48,39,41,43,0,42],
[43,41,48,45,44,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,6,22,74,30,33,6,24],
[74,0,39,74,74,74,47,63],
[58,41,0,58,41,58,24,35],
[6,6,22,0,6,22,6,0],
[50,6,39,74,0,50,23,63],
[47,6,22,58,30,0,0,24],
[74,33,56,74,57,80,0,51],
[56,17,45,80,17,56,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,42,42,46,42,40,51],
[29,0,36,32,35,39,33,36],
[38,44,0,37,39,43,36,43],
[38,48,43,0,41,39,34,41],
[34,45,41,39,0,41,45,53],
[38,41,37,41,39,0,36,45],
[40,47,44,46,35,44,0,46],
[29,44,37,39,27,35,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,60,31,32,30,49,65],
[37,0,37,31,50,39,62,54],
[20,43,0,11,19,30,31,48],
[49,49,69,0,35,51,35,52],
[48,30,61,45,0,50,74,61],
[50,41,50,29,30,0,45,51],
[31,18,49,45,6,35,0,22],
[15,26,32,28,19,29,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,42,54,40,43,42],
[43,0,33,43,43,40,35,43],
[43,47,0,48,57,39,43,44],
[38,37,32,0,44,34,35,39],
[26,37,23,36,0,30,32,31],
[40,40,41,46,50,0,43,35],
[37,45,37,45,48,37,0,38],
[38,37,36,41,49,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,44,50,53,46,40],
[40,0,36,44,52,48,43,36],
[32,44,0,41,42,49,32,47],
[36,36,39,0,52,50,49,50],
[30,28,38,28,0,38,38,29],
[27,32,31,30,42,0,40,35],
[34,37,48,31,42,40,0,44],
[40,44,33,30,51,45,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,22,61,41,43,3,39,19],
[58,0,78,36,80,42,56,58],
[19,2,0,38,22,3,1,19],
[39,44,42,0,45,23,21,39],
[37,0,58,35,0,1,20,37],
[77,38,77,57,79,0,55,61],
[41,24,79,59,60,25,0,41],
[61,22,61,41,43,19,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,37,40,38,36,39],
[41,0,41,39,48,42,41,42],
[40,39,0,47,45,44,40,44],
[43,41,33,0,44,34,35,38],
[40,32,35,36,0,40,34,36],
[42,38,36,46,40,0,37,39],
[44,39,40,45,46,43,0,50],
[41,38,36,42,44,41,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,52,40,49,57,53],
[33,0,36,39,43,40,48,50],
[33,44,0,35,30,22,48,50],
[28,41,45,0,48,37,45,60],
[40,37,50,32,0,47,52,54],
[31,40,58,43,33,0,65,49],
[23,32,32,35,28,15,0,51],
[27,30,30,20,26,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,8,52,39,35,53,31,50],
[72,0,44,40,55,62,39,51],
[28,36,0,24,29,42,33,33],
[41,40,56,0,49,55,46,63],
[45,25,51,31,0,41,30,41],
[27,18,38,25,39,0,9,55],
[49,41,47,34,50,71,0,61],
[30,29,47,17,39,25,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,37,36,40,44,42],
[31,0,39,42,36,48,41,36],
[38,41,0,39,34,36,42,35],
[43,38,41,0,43,44,46,37],
[44,44,46,37,0,42,41,47],
[40,32,44,36,38,0,40,48],
[36,39,38,34,39,40,0,37],
[38,44,45,43,33,32,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,36,40,38,39,32],
[49,0,43,43,51,40,49,42],
[43,37,0,42,39,46,43,39],
[44,37,38,0,42,45,41,35],
[40,29,41,38,0,40,39,36],
[42,40,34,35,40,0,35,32],
[41,31,37,39,41,45,0,34],
[48,38,41,45,44,48,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,41,41,38,41,46,51],
[20,0,26,36,22,36,42,32],
[39,54,0,34,37,58,50,47],
[39,44,46,0,44,63,52,53],
[42,58,43,36,0,48,35,53],
[39,44,22,17,32,0,26,32],
[34,38,30,28,45,54,0,50],
[29,48,33,27,27,48,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,7,33,35,31,38,41,25],
[73,0,48,66,54,47,53,40],
[47,32,0,52,48,50,36,38],
[45,14,28,0,41,36,23,36],
[49,26,32,39,0,34,34,31],
[42,33,30,44,46,0,29,33],
[39,27,44,57,46,51,0,40],
[55,40,42,44,49,47,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,36,41,41,40,44],
[46,0,39,33,32,42,41,45],
[34,41,0,39,51,44,46,39],
[44,47,41,0,38,43,60,42],
[39,48,29,42,0,35,54,40],
[39,38,36,37,45,0,43,32],
[40,39,34,20,26,37,0,36],
[36,35,41,38,40,48,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,44,32,32,34,34,38],
[38,0,39,39,32,37,35,35],
[36,41,0,36,34,38,29,32],
[48,41,44,0,37,40,40,39],
[48,48,46,43,0,40,46,50],
[46,43,42,40,40,0,49,41],
[46,45,51,40,34,31,0,44],
[42,45,48,41,30,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,44,48,41,53,45,39],
[41,0,47,53,36,51,45,42],
[36,33,0,46,30,48,36,36],
[32,27,34,0,30,39,33,34],
[39,44,50,50,0,51,44,42],
[27,29,32,41,29,0,41,37],
[35,35,44,47,36,39,0,38],
[41,38,44,46,38,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,33,46,42,42,42,47],
[45,0,39,38,47,41,46,43],
[47,41,0,47,42,33,43,46],
[34,42,33,0,38,41,37,44],
[38,33,38,42,0,34,46,36],
[38,39,47,39,46,0,42,41],
[38,34,37,43,34,38,0,41],
[33,37,34,36,44,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,32,28,36,40,34],
[41,0,44,36,27,31,41,38],
[35,36,0,33,26,27,37,29],
[48,44,47,0,32,43,47,40],
[52,53,54,48,0,40,50,41],
[44,49,53,37,40,0,50,45],
[40,39,43,33,30,30,0,28],
[46,42,51,40,39,35,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,54,25,51,25,54,54],
[0,0,0,0,51,0,25,0],
[26,80,0,25,51,51,54,0],
[55,80,55,0,80,55,54,29],
[29,29,29,0,0,0,29,29],
[55,80,29,25,80,0,54,29],
[26,55,26,26,51,26,0,26],
[26,80,80,51,51,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,41,49,40,44,44],
[36,0,40,33,45,37,48,41],
[40,40,0,31,46,39,44,33],
[39,47,49,0,52,43,50,47],
[31,35,34,28,0,42,44,37],
[40,43,41,37,38,0,49,32],
[36,32,36,30,36,31,0,29],
[36,39,47,33,43,48,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,36,21,29,46,25,42],
[47,0,42,48,45,50,34,40],
[44,38,0,40,37,41,47,38],
[59,32,40,0,39,53,36,47],
[51,35,43,41,0,46,28,41],
[34,30,39,27,34,0,29,21],
[55,46,33,44,52,51,0,50],
[38,40,42,33,39,59,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,53,38,51,45,50,45],
[37,0,40,39,35,47,36,37],
[27,40,0,36,44,42,41,30],
[42,41,44,0,45,46,42,40],
[29,45,36,35,0,52,34,30],
[35,33,38,34,28,0,35,33],
[30,44,39,38,46,45,0,42],
[35,43,50,40,50,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,55,53,43,48,48,53],
[47,0,52,67,47,43,35,48],
[25,28,0,38,41,41,44,28],
[27,13,42,0,56,43,32,43],
[37,33,39,24,0,49,35,29],
[32,37,39,37,31,0,36,32],
[32,45,36,48,45,44,0,59],
[27,32,52,37,51,48,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,48,57,51,38,35],
[37,0,29,41,44,33,28,35],
[36,51,0,45,48,48,45,39],
[32,39,35,0,41,40,31,22],
[23,36,32,39,0,35,31,34],
[29,47,32,40,45,0,35,43],
[42,52,35,49,49,45,0,44],
[45,45,41,58,46,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,35,37,38,35,33],
[42,0,33,30,40,36,32,36],
[43,47,0,33,39,41,34,37],
[45,50,47,0,41,45,40,39],
[43,40,41,39,0,44,37,38],
[42,44,39,35,36,0,34,35],
[45,48,46,40,43,46,0,48],
[47,44,43,41,42,45,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,43,46,27,32,41,56],
[27,0,28,27,29,38,30,60],
[37,52,0,45,46,40,57,56],
[34,53,35,0,49,66,50,67],
[53,51,34,31,0,54,40,57],
[48,42,40,14,26,0,54,46],
[39,50,23,30,40,26,0,55],
[24,20,24,13,23,34,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,44,44,42,41,41],
[40,0,37,45,42,45,35,37],
[40,43,0,40,39,42,37,38],
[36,35,40,0,40,43,35,37],
[36,38,41,40,0,40,37,43],
[38,35,38,37,40,0,34,33],
[39,45,43,45,43,46,0,45],
[39,43,42,43,37,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,59,80,21,56,42,21],
[24,0,3,24,21,3,24,21],
[21,77,0,39,42,39,24,42],
[0,56,41,0,21,18,24,21],
[59,59,38,59,0,38,59,77],
[24,77,41,62,42,0,24,42],
[38,56,56,56,21,56,0,18],
[59,59,38,59,3,38,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,61,39,33,66,49,41],
[20,0,50,45,22,60,25,30],
[19,30,0,27,28,59,18,37],
[41,35,53,0,18,50,25,47],
[47,58,52,62,0,47,27,47],
[14,20,21,30,33,0,3,10],
[31,55,62,55,53,77,0,62],
[39,50,43,33,33,70,18,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,27,31,39,40,31,32],
[33,0,27,27,40,30,27,39],
[53,53,0,39,46,58,50,45],
[49,53,41,0,46,50,40,40],
[41,40,34,34,0,39,31,39],
[40,50,22,30,41,0,32,32],
[49,53,30,40,49,48,0,48],
[48,41,35,40,41,48,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,53,33,30,41,56,35],
[44,0,36,44,36,47,52,40],
[27,44,0,20,27,17,55,38],
[47,36,60,0,40,32,46,41],
[50,44,53,40,0,50,48,53],
[39,33,63,48,30,0,60,52],
[24,28,25,34,32,20,0,33],
[45,40,42,39,27,28,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,71,63,37,49,46,39,55],
[9,0,26,24,9,22,9,23],
[17,54,0,45,23,45,31,54],
[43,56,35,0,34,40,57,55],
[31,71,57,46,0,55,47,55],
[34,58,35,40,25,0,34,33],
[41,71,49,23,33,46,0,55],
[25,57,26,25,25,47,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,37,41,42,35,42],
[43,0,36,37,32,31,42,38],
[40,44,0,39,40,37,37,44],
[43,43,41,0,46,33,35,46],
[39,48,40,34,0,38,35,56],
[38,49,43,47,42,0,40,49],
[45,38,43,45,45,40,0,57],
[38,42,36,34,24,31,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,32,33,37,34,33],
[43,0,42,37,37,40,37,35],
[42,38,0,36,36,37,32,38],
[48,43,44,0,42,40,36,43],
[47,43,44,38,0,40,39,40],
[43,40,43,40,40,0,43,37],
[46,43,48,44,41,37,0,39],
[47,45,42,37,40,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,39,37,37,40,35],
[43,0,39,37,36,35,37,37],
[39,41,0,33,31,26,31,31],
[41,43,47,0,44,38,42,36],
[43,44,49,36,0,37,35,45],
[43,45,54,42,43,0,41,39],
[40,43,49,38,45,39,0,42],
[45,43,49,44,35,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,37,40,41,44,46],
[33,0,37,38,32,37,44,37],
[43,43,0,42,39,37,45,54],
[43,42,38,0,39,38,48,47],
[40,48,41,41,0,40,40,49],
[39,43,43,42,40,0,47,51],
[36,36,35,32,40,33,0,41],
[34,43,26,33,31,29,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,51,34,38,50,50,36],
[35,0,41,33,41,38,39,39],
[29,39,0,28,34,34,30,27],
[46,47,52,0,45,47,43,39],
[42,39,46,35,0,49,43,43],
[30,42,46,33,31,0,43,34],
[30,41,50,37,37,37,0,37],
[44,41,53,41,37,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,33,40,29,43,34],
[43,0,38,35,41,42,36,41],
[46,42,0,35,47,40,41,41],
[47,45,45,0,49,44,39,41],
[40,39,33,31,0,34,40,37],
[51,38,40,36,46,0,44,40],
[37,44,39,41,40,36,0,38],
[46,39,39,39,43,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,16,27,27,31,27,31],
[35,0,20,32,35,47,12,35],
[64,60,0,60,30,31,42,19],
[53,48,20,0,50,39,30,39],
[53,45,50,30,0,51,23,35],
[49,33,49,41,29,0,29,18],
[53,68,38,50,57,51,0,53],
[49,45,61,41,45,62,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,23,52,27,38,63],
[57,0,54,47,52,25,53,61],
[53,26,0,46,63,40,43,65],
[57,33,34,0,55,33,47,58],
[28,28,17,25,0,10,17,38],
[53,55,40,47,70,0,56,70],
[42,27,37,33,63,24,0,55],
[17,19,15,22,42,10,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,30,28,37,32,38],
[43,0,39,47,33,46,48,47],
[48,41,0,34,41,53,42,43],
[50,33,46,0,34,39,50,47],
[52,47,39,46,0,39,42,48],
[43,34,27,41,41,0,44,33],
[48,32,38,30,38,36,0,44],
[42,33,37,33,32,47,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,46,36,39,36,40],
[42,0,36,45,37,38,42,48],
[41,44,0,37,40,34,42,52],
[34,35,43,0,30,32,34,42],
[44,43,40,50,0,42,46,50],
[41,42,46,48,38,0,42,48],
[44,38,38,46,34,38,0,50],
[40,32,28,38,30,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,43,46,41,41,49],
[41,0,37,45,47,49,44,46],
[37,43,0,44,47,44,34,42],
[37,35,36,0,40,44,40,43],
[34,33,33,40,0,33,30,42],
[39,31,36,36,47,0,38,32],
[39,36,46,40,50,42,0,43],
[31,34,38,37,38,48,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,42,50,37,36,34],
[46,0,37,48,49,42,40,34],
[34,43,0,33,43,37,34,38],
[38,32,47,0,43,39,34,36],
[30,31,37,37,0,32,30,32],
[43,38,43,41,48,0,30,38],
[44,40,46,46,50,50,0,49],
[46,46,42,44,48,42,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,44,47,45,41,40],
[33,0,36,35,47,35,36,39],
[43,44,0,41,43,40,34,41],
[36,45,39,0,45,42,39,43],
[33,33,37,35,0,35,31,38],
[35,45,40,38,45,0,37,36],
[39,44,46,41,49,43,0,46],
[40,41,39,37,42,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,38,44,42,37,36],
[41,0,39,41,47,44,47,35],
[42,41,0,38,38,49,43,38],
[42,39,42,0,42,43,47,44],
[36,33,42,38,0,48,38,38],
[38,36,31,37,32,0,32,38],
[43,33,37,33,42,48,0,34],
[44,45,42,36,42,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,34,42,42,29,28,34],
[47,0,31,37,50,37,39,37],
[46,49,0,41,48,40,47,40],
[38,43,39,0,47,31,41,37],
[38,30,32,33,0,29,34,32],
[51,43,40,49,51,0,44,36],
[52,41,33,39,46,36,0,37],
[46,43,40,43,48,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,52,51,44,35,47,54],
[23,0,43,40,32,28,36,34],
[28,37,0,30,46,26,23,37],
[29,40,50,0,45,32,35,22],
[36,48,34,35,0,48,46,54],
[45,52,54,48,32,0,44,53],
[33,44,57,45,34,36,0,55],
[26,46,43,58,26,27,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,49,49,38,47,43],
[35,0,38,29,49,32,46,39],
[36,42,0,44,40,23,34,39],
[31,51,36,0,42,29,38,44],
[31,31,40,38,0,15,24,33],
[42,48,57,51,65,0,35,39],
[33,34,46,42,56,45,0,33],
[37,41,41,36,47,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,43,49,43,42,35],
[35,0,35,46,40,37,49,45],
[38,45,0,50,47,40,38,34],
[37,34,30,0,40,41,41,45],
[31,40,33,40,0,36,34,28],
[37,43,40,39,44,0,42,43],
[38,31,42,39,46,38,0,46],
[45,35,46,35,52,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,41,44,39,37,38],
[43,0,41,40,42,43,45,43],
[36,39,0,36,40,41,33,37],
[39,40,44,0,43,41,37,38],
[36,38,40,37,0,38,36,35],
[41,37,39,39,42,0,33,40],
[43,35,47,43,44,47,0,42],
[42,37,43,42,45,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,36,36,40,44,32],
[36,0,29,31,34,36,35,30],
[40,51,0,39,48,49,48,40],
[44,49,41,0,40,48,56,39],
[44,46,32,40,0,49,42,35],
[40,44,31,32,31,0,37,31],
[36,45,32,24,38,43,0,35],
[48,50,40,41,45,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,45,39,40,36,42,42],
[34,0,37,32,33,29,38,36],
[35,43,0,32,30,25,38,35],
[41,48,48,0,37,38,31,38],
[40,47,50,43,0,41,54,43],
[44,51,55,42,39,0,42,48],
[38,42,42,49,26,38,0,41],
[38,44,45,42,37,32,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,31,41,43,41,34,40],
[41,0,42,36,34,37,34,40],
[49,38,0,38,45,46,42,43],
[39,44,42,0,48,39,38,39],
[37,46,35,32,0,33,29,40],
[39,43,34,41,47,0,46,42],
[46,46,38,42,51,34,0,46],
[40,40,37,41,40,38,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,29,48,51,33,48],
[33,0,34,34,44,39,34,41],
[34,46,0,43,46,49,39,52],
[51,46,37,0,47,50,40,50],
[32,36,34,33,0,32,29,40],
[29,41,31,30,48,0,31,40],
[47,46,41,40,51,49,0,41],
[32,39,28,30,40,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,43,38,42,49,42],
[34,0,29,33,37,37,41,41],
[43,51,0,35,40,44,42,49],
[37,47,45,0,39,46,41,47],
[42,43,40,41,0,42,46,42],
[38,43,36,34,38,0,36,43],
[31,39,38,39,34,44,0,42],
[38,39,31,33,38,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,44,30,34,37,34,37],
[36,0,42,37,41,38,43,45],
[36,38,0,46,41,34,41,41],
[50,43,34,0,44,37,36,43],
[46,39,39,36,0,40,38,41],
[43,42,46,43,40,0,39,39],
[46,37,39,44,42,41,0,44],
[43,35,39,37,39,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,56,40,39,46,31],
[39,0,45,45,39,44,49,39],
[41,35,0,38,32,40,38,33],
[24,35,42,0,36,42,36,28],
[40,41,48,44,0,48,45,38],
[41,36,40,38,32,0,42,44],
[34,31,42,44,35,38,0,34],
[49,41,47,52,42,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,29,36,33,36,34,32],
[41,0,38,38,30,38,43,42],
[51,42,0,45,40,42,46,48],
[44,42,35,0,41,37,44,41],
[47,50,40,39,0,37,42,45],
[44,42,38,43,43,0,41,44],
[46,37,34,36,38,39,0,37],
[48,38,32,39,35,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,16,23,20,48,16,14,32],
[64,0,59,69,65,27,63,50],
[57,21,0,48,43,40,55,33],
[60,11,32,0,50,16,38,23],
[32,15,37,30,0,9,34,28],
[64,53,40,64,71,0,55,58],
[66,17,25,42,46,25,0,19],
[48,30,47,57,52,22,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,61,41,51,39,42,56],
[29,0,36,31,41,33,36,40],
[19,44,0,36,32,33,31,43],
[39,49,44,0,42,47,35,42],
[29,39,48,38,0,38,28,37],
[41,47,47,33,42,0,29,40],
[38,44,49,45,52,51,0,49],
[24,40,37,38,43,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,41,41,44,39,29,37],
[37,0,40,39,43,47,39,41],
[39,40,0,37,40,49,37,43],
[39,41,43,0,45,54,39,53],
[36,37,40,35,0,43,45,42],
[41,33,31,26,37,0,28,32],
[51,41,43,41,35,52,0,45],
[43,39,37,27,38,48,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,52,37,40,42,30,40],
[38,0,43,42,50,34,41,43],
[28,37,0,39,43,31,25,28],
[43,38,41,0,41,27,35,26],
[40,30,37,39,0,31,41,34],
[38,46,49,53,49,0,48,38],
[50,39,55,45,39,32,0,45],
[40,37,52,54,46,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,34,33,26,39,33,36],
[48,0,40,39,41,41,43,49],
[46,40,0,46,40,41,51,47],
[47,41,34,0,38,46,45,52],
[54,39,40,42,0,38,48,43],
[41,39,39,34,42,0,32,41],
[47,37,29,35,32,48,0,47],
[44,31,33,28,37,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,29,23,26,48,30,36],
[44,0,50,41,47,48,37,34],
[51,30,0,17,41,61,42,31],
[57,39,63,0,50,56,37,34],
[54,33,39,30,0,62,40,47],
[32,32,19,24,18,0,30,31],
[50,43,38,43,40,50,0,35],
[44,46,49,46,33,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,41,45,36,40,43],
[38,0,33,41,40,40,31,41],
[41,47,0,43,43,39,38,45],
[39,39,37,0,43,37,35,43],
[35,40,37,37,0,37,37,38],
[44,40,41,43,43,0,41,46],
[40,49,42,45,43,39,0,44],
[37,39,35,37,42,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,47,40,42,42,45],
[36,0,36,44,38,38,34,36],
[39,44,0,48,39,45,32,46],
[33,36,32,0,33,42,38,44],
[40,42,41,47,0,41,33,35],
[38,42,35,38,39,0,35,36],
[38,46,48,42,47,45,0,46],
[35,44,34,36,45,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,41,37,45,52,43,42],
[28,0,44,31,30,42,42,38],
[39,36,0,44,40,40,46,55],
[43,49,36,0,42,46,44,49],
[35,50,40,38,0,51,46,48],
[28,38,40,34,29,0,50,46],
[37,38,34,36,34,30,0,29],
[38,42,25,31,32,34,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,55,43,42,42,51,34],
[33,0,46,39,37,46,41,42],
[25,34,0,41,40,39,41,38],
[37,41,39,0,38,42,40,44],
[38,43,40,42,0,48,42,37],
[38,34,41,38,32,0,32,37],
[29,39,39,40,38,48,0,39],
[46,38,42,36,43,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,37,42,37,39,48],
[45,0,45,41,46,43,40,44],
[41,35,0,37,39,36,35,35],
[43,39,43,0,46,44,45,40],
[38,34,41,34,0,37,40,39],
[43,37,44,36,43,0,30,46],
[41,40,45,35,40,50,0,34],
[32,36,45,40,41,34,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,45,34,52,41,36,45],
[33,0,36,27,29,36,36,30],
[35,44,0,41,35,38,35,36],
[46,53,39,0,52,45,40,47],
[28,51,45,28,0,43,38,46],
[39,44,42,35,37,0,38,45],
[44,44,45,40,42,42,0,52],
[35,50,44,33,34,35,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,52,36,40,45,46,50],
[32,0,39,42,39,40,35,48],
[28,41,0,31,35,35,32,37],
[44,38,49,0,44,46,50,42],
[40,41,45,36,0,39,40,48],
[35,40,45,34,41,0,37,43],
[34,45,48,30,40,43,0,45],
[30,32,43,38,32,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,29,45,44,46,53,51],
[36,0,41,37,33,43,49,44],
[51,39,0,41,38,40,45,36],
[35,43,39,0,32,32,34,36],
[36,47,42,48,0,43,54,49],
[34,37,40,48,37,0,46,41],
[27,31,35,46,26,34,0,27],
[29,36,44,44,31,39,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,33,30,41,34,37],
[38,0,42,31,31,35,39,39],
[41,38,0,33,30,37,35,32],
[47,49,47,0,36,38,44,38],
[50,49,50,44,0,50,36,47],
[39,45,43,42,30,0,40,38],
[46,41,45,36,44,40,0,45],
[43,41,48,42,33,42,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,42,40,36,43,41],
[31,0,44,34,37,33,36,37],
[38,36,0,34,37,38,39,44],
[38,46,46,0,49,38,44,43],
[40,43,43,31,0,40,36,38],
[44,47,42,42,40,0,45,43],
[37,44,41,36,44,35,0,39],
[39,43,36,37,42,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,53,36,40,46,40,44],
[33,0,41,39,37,41,35,43],
[27,39,0,37,39,43,35,38],
[44,41,43,0,47,39,35,44],
[40,43,41,33,0,38,39,42],
[34,39,37,41,42,0,35,41],
[40,45,45,45,41,45,0,46],
[36,37,42,36,38,39,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,53,47,51,75,27,60],
[25,0,39,37,40,57,40,48],
[27,41,0,31,26,33,47,39],
[33,43,49,0,28,33,46,32],
[29,40,54,52,0,53,45,56],
[5,23,47,47,27,0,26,48],
[53,40,33,34,35,54,0,52],
[20,32,41,48,24,32,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,48,39,37,34,44,37],
[47,0,42,40,37,37,44,43],
[32,38,0,38,36,33,42,35],
[41,40,42,0,38,37,41,37],
[43,43,44,42,0,40,47,40],
[46,43,47,43,40,0,43,39],
[36,36,38,39,33,37,0,30],
[43,37,45,43,40,41,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,52,38,49,53,44],
[32,0,35,36,25,36,47,40],
[34,45,0,40,29,35,56,38],
[28,44,40,0,36,39,44,29],
[42,55,51,44,0,37,52,50],
[31,44,45,41,43,0,58,40],
[27,33,24,36,28,22,0,31],
[36,40,42,51,30,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,33,40,29,37,40,28],
[39,0,36,47,38,34,44,34],
[47,44,0,54,47,52,33,57],
[40,33,26,0,25,36,33,35],
[51,42,33,55,0,45,48,45],
[43,46,28,44,35,0,39,36],
[40,36,47,47,32,41,0,49],
[52,46,23,45,35,44,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,28,35,43,42,42,43],
[41,0,33,43,47,42,36,47],
[52,47,0,39,50,49,43,50],
[45,37,41,0,46,48,33,49],
[37,33,30,34,0,38,33,43],
[38,38,31,32,42,0,35,46],
[38,44,37,47,47,45,0,47],
[37,33,30,31,37,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,45,34,40,49,40],
[38,0,42,49,42,47,43,57],
[42,38,0,46,48,44,43,47],
[35,31,34,0,32,43,37,39],
[46,38,32,48,0,50,46,46],
[40,33,36,37,30,0,41,37],
[31,37,37,43,34,39,0,43],
[40,23,33,41,34,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,49,49,36,52,41,52],
[23,0,32,41,41,41,24,41],
[31,48,0,48,31,47,42,48],
[31,39,32,0,25,40,34,43],
[44,39,49,55,0,49,45,60],
[28,39,33,40,31,0,24,45],
[39,56,38,46,35,56,0,53],
[28,39,32,37,20,35,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,35,22,57,51,43,31],
[31,0,16,33,45,39,27,41],
[45,64,0,49,53,55,31,29],
[58,47,31,0,66,58,48,25],
[23,35,27,14,0,30,24,33],
[29,41,25,22,50,0,48,25],
[37,53,49,32,56,32,0,51],
[49,39,51,55,47,55,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,40,46,29,59,50],
[38,0,38,42,54,41,64,62],
[49,42,0,49,61,36,43,69],
[40,38,31,0,28,37,66,50],
[34,26,19,52,0,18,54,39],
[51,39,44,43,62,0,56,63],
[21,16,37,14,26,24,0,45],
[30,18,11,30,41,17,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,39,41,48,51,31],
[36,0,35,32,40,45,35,42],
[45,45,0,40,50,42,48,46],
[41,48,40,0,52,54,49,46],
[39,40,30,28,0,34,40,44],
[32,35,38,26,46,0,40,30],
[29,45,32,31,40,40,0,37],
[49,38,34,34,36,50,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,49,34,45,41,50,42],
[36,0,47,35,47,37,49,45],
[31,33,0,31,35,33,48,42],
[46,45,49,0,40,47,50,53],
[35,33,45,40,0,33,43,44],
[39,43,47,33,47,0,40,45],
[30,31,32,30,37,40,0,44],
[38,35,38,27,36,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,30,36,35,35,34],
[42,0,42,41,41,44,40,41],
[40,38,0,35,32,36,37,41],
[50,39,45,0,39,47,34,42],
[44,39,48,41,0,40,36,43],
[45,36,44,33,40,0,33,43],
[45,40,43,46,44,47,0,47],
[46,39,39,38,37,37,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,47,40,39,41,39],
[40,0,39,49,35,44,44,40],
[39,41,0,43,39,38,45,38],
[33,31,37,0,36,40,38,38],
[40,45,41,44,0,47,44,43],
[41,36,42,40,33,0,40,40],
[39,36,35,42,36,40,0,39],
[41,40,42,42,37,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,36,35,41,31,39,41],
[54,0,44,37,45,42,43,44],
[44,36,0,36,44,33,47,47],
[45,43,44,0,49,39,40,50],
[39,35,36,31,0,35,42,31],
[49,38,47,41,45,0,44,45],
[41,37,33,40,38,36,0,36],
[39,36,33,30,49,35,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,29,33,37,43,38,37],
[39,0,40,35,42,42,40,41],
[51,40,0,47,38,45,40,48],
[47,45,33,0,41,50,41,43],
[43,38,42,39,0,44,40,39],
[37,38,35,30,36,0,35,35],
[42,40,40,39,40,45,0,43],
[43,39,32,37,41,45,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,36,45,36,41,44],
[38,0,32,32,45,43,39,42],
[49,48,0,36,37,45,41,57],
[44,48,44,0,50,38,39,47],
[35,35,43,30,0,40,34,45],
[44,37,35,42,40,0,32,40],
[39,41,39,41,46,48,0,51],
[36,38,23,33,35,40,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,68,42,45,42,52,52],
[42,0,56,38,51,38,65,48],
[12,24,0,22,32,25,35,27],
[38,42,58,0,44,34,47,51],
[35,29,48,36,0,34,68,41],
[38,42,55,46,46,0,51,59],
[28,15,45,33,12,29,0,35],
[28,32,53,29,39,21,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,44,36,50,35,33],
[39,0,43,39,32,43,39,29],
[42,37,0,38,26,46,45,37],
[36,41,42,0,30,44,37,36],
[44,48,54,50,0,42,37,46],
[30,37,34,36,38,0,41,39],
[45,41,35,43,43,39,0,40],
[47,51,43,44,34,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,37,38,43,47,44],
[44,0,47,43,40,45,50,48],
[37,33,0,39,36,34,40,38],
[43,37,41,0,38,48,46,42],
[42,40,44,42,0,40,43,42],
[37,35,46,32,40,0,44,39],
[33,30,40,34,37,36,0,44],
[36,32,42,38,38,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,40,36,43,32,42,35],
[29,0,36,29,30,32,32,24],
[40,44,0,38,44,33,40,38],
[44,51,42,0,40,38,44,51],
[37,50,36,40,0,33,47,35],
[48,48,47,42,47,0,48,38],
[38,48,40,36,33,32,0,32],
[45,56,42,29,45,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,25,33,38,28,24,19],
[44,0,43,31,32,33,37,40],
[55,37,0,47,47,39,47,42],
[47,49,33,0,37,35,29,43],
[42,48,33,43,0,31,42,40],
[52,47,41,45,49,0,41,38],
[56,43,33,51,38,39,0,40],
[61,40,38,37,40,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,35,36,48,51,40],
[35,0,35,24,34,41,47,37],
[36,45,0,42,43,49,51,48],
[45,56,38,0,45,52,54,51],
[44,46,37,35,0,46,49,44],
[32,39,31,28,34,0,43,36],
[29,33,29,26,31,37,0,37],
[40,43,32,29,36,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,32,59,50,46,54],
[36,0,52,49,64,32,41,36],
[37,28,0,37,54,47,25,36],
[48,31,43,0,49,47,37,41],
[21,16,26,31,0,20,21,24],
[30,48,33,33,60,0,37,33],
[34,39,55,43,59,43,0,46],
[26,44,44,39,56,47,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,46,45,38,41,47,45],
[29,0,30,32,29,29,32,30],
[34,50,0,27,37,39,40,37],
[35,48,53,0,34,38,39,41],
[42,51,43,46,0,40,41,40],
[39,51,41,42,40,0,46,46],
[33,48,40,41,39,34,0,37],
[35,50,43,39,40,34,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,38,34,39,34,45,44],
[48,0,41,38,47,42,45,43],
[42,39,0,41,43,42,46,44],
[46,42,39,0,48,45,46,39],
[41,33,37,32,0,36,39,35],
[46,38,38,35,44,0,38,39],
[35,35,34,34,41,42,0,39],
[36,37,36,41,45,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,52,44,44,51,39,51],
[30,0,51,39,44,47,41,43],
[28,29,0,43,39,38,41,46],
[36,41,37,0,53,44,35,50],
[36,36,41,27,0,42,27,44],
[29,33,42,36,38,0,33,47],
[41,39,39,45,53,47,0,40],
[29,37,34,30,36,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,36,42,38,32,29],
[37,0,32,40,41,36,38,36],
[46,48,0,49,47,41,40,41],
[44,40,31,0,41,42,30,37],
[38,39,33,39,0,44,37,31],
[42,44,39,38,36,0,34,32],
[48,42,40,50,43,46,0,38],
[51,44,39,43,49,48,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,44,35,47,40,41,42],
[45,0,45,37,51,39,52,45],
[36,35,0,30,47,36,48,43],
[45,43,50,0,49,39,46,43],
[33,29,33,31,0,32,37,32],
[40,41,44,41,48,0,51,50],
[39,28,32,34,43,29,0,34],
[38,35,37,37,48,30,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,37,43,42,36,39],
[39,0,42,37,42,36,34,34],
[41,38,0,42,36,37,39,41],
[43,43,38,0,40,40,40,39],
[37,38,44,40,0,37,37,36],
[38,44,43,40,43,0,37,35],
[44,46,41,40,43,43,0,41],
[41,46,39,41,44,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,45,51,36,41,45],
[38,0,55,48,53,39,40,40],
[34,25,0,36,47,42,33,31],
[35,32,44,0,47,39,30,33],
[29,27,33,33,0,37,26,37],
[44,41,38,41,43,0,43,41],
[39,40,47,50,54,37,0,45],
[35,40,49,47,43,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,49,44,40,47,38,42],
[31,0,50,32,42,48,31,36],
[31,30,0,30,40,31,28,33],
[36,48,50,0,43,45,43,46],
[40,38,40,37,0,34,35,46],
[33,32,49,35,46,0,30,41],
[42,49,52,37,45,50,0,45],
[38,44,47,34,34,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,37,31,41,48,45],
[43,0,48,32,42,51,38,37],
[40,32,0,41,35,37,36,34],
[43,48,39,0,37,36,44,34],
[49,38,45,43,0,50,46,42],
[39,29,43,44,30,0,36,43],
[32,42,44,36,34,44,0,40],
[35,43,46,46,38,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,43,43,42,40,41],
[37,0,47,44,45,45,43,38],
[41,33,0,41,36,33,37,32],
[37,36,39,0,47,38,41,38],
[37,35,44,33,0,37,39,40],
[38,35,47,42,43,0,36,38],
[40,37,43,39,41,44,0,39],
[39,42,48,42,40,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,41,39,47,42,46],
[34,0,49,44,44,48,48,45],
[29,31,0,38,35,37,40,39],
[39,36,42,0,42,47,42,42],
[41,36,45,38,0,49,56,48],
[33,32,43,33,31,0,48,46],
[38,32,40,38,24,32,0,38],
[34,35,41,38,32,34,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,25,46,39,29,43,31],
[48,0,42,39,42,28,34,38],
[55,38,0,52,41,36,41,44],
[34,41,28,0,36,35,38,27],
[41,38,39,44,0,29,49,30],
[51,52,44,45,51,0,54,37],
[37,46,39,42,31,26,0,29],
[49,42,36,53,50,43,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,22,38,24,21,32,28],
[49,0,31,42,46,34,44,23],
[58,49,0,54,51,36,43,40],
[42,38,26,0,38,32,34,27],
[56,34,29,42,0,36,34,33],
[59,46,44,48,44,0,45,39],
[48,36,37,46,46,35,0,15],
[52,57,40,53,47,41,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,49,52,40,40,57,31],
[26,0,40,39,7,38,33,21],
[31,40,0,41,20,36,44,24],
[28,41,39,0,22,37,35,18],
[40,73,60,58,0,46,63,44],
[40,42,44,43,34,0,43,33],
[23,47,36,45,17,37,0,31],
[49,59,56,62,36,47,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,45,46,46,31,38,38],
[31,0,39,50,52,43,44,42],
[35,41,0,53,62,46,47,50],
[34,30,27,0,39,32,33,31],
[34,28,18,41,0,28,32,28],
[49,37,34,48,52,0,50,37],
[42,36,33,47,48,30,0,35],
[42,38,30,49,52,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,44,31,30,38,40,39],
[46,0,48,29,37,41,42,42],
[36,32,0,30,32,33,38,37],
[49,51,50,0,40,46,44,48],
[50,43,48,40,0,47,47,44],
[42,39,47,34,33,0,42,43],
[40,38,42,36,33,38,0,42],
[41,38,43,32,36,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,41,33,48,35,39],
[43,0,40,53,52,50,38,47],
[42,40,0,54,42,50,44,57],
[39,27,26,0,30,40,41,44],
[47,28,38,50,0,46,45,34],
[32,30,30,40,34,0,28,39],
[45,42,36,39,35,52,0,43],
[41,33,23,36,46,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,42,41,29,38,33,31],
[46,0,45,45,40,41,47,41],
[38,35,0,42,30,32,41,38],
[39,35,38,0,28,37,45,37],
[51,40,50,52,0,45,53,47],
[42,39,48,43,35,0,52,42],
[47,33,39,35,27,28,0,29],
[49,39,42,43,33,38,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,25,64,26,30,55],
[34,0,14,39,49,34,25,44],
[40,66,0,44,59,45,31,56],
[55,41,36,0,74,56,46,55],
[16,31,21,6,0,26,41,21],
[54,46,35,24,54,0,40,54],
[50,55,49,34,39,40,0,44],
[25,36,24,25,59,26,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,38,43,47,41,49],
[37,0,34,32,51,39,48,48],
[47,46,0,43,39,38,40,48],
[42,48,37,0,39,43,47,43],
[37,29,41,41,0,41,42,45],
[33,41,42,37,39,0,40,43],
[39,32,40,33,38,40,0,46],
[31,32,32,37,35,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,38,44,37,41,44],
[40,0,28,28,40,39,36,37],
[40,52,0,46,49,40,43,47],
[42,52,34,0,45,38,43,41],
[36,40,31,35,0,31,36,48],
[43,41,40,42,49,0,38,45],
[39,44,37,37,44,42,0,44],
[36,43,33,39,32,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,41,38,43,44,40],
[42,0,39,34,35,39,37,40],
[42,41,0,33,43,39,38,36],
[39,46,47,0,43,47,45,44],
[42,45,37,37,0,38,42,39],
[37,41,41,33,42,0,41,42],
[36,43,42,35,38,39,0,41],
[40,40,44,36,41,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,38,45,39,37,40],
[40,0,35,37,36,44,29,39],
[39,45,0,44,48,51,43,41],
[42,43,36,0,49,43,45,43],
[35,44,32,31,0,39,37,37],
[41,36,29,37,41,0,37,41],
[43,51,37,35,43,43,0,44],
[40,41,39,37,43,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,40,45,48,45,43,46],
[27,0,39,36,36,40,34,36],
[40,41,0,41,44,47,45,44],
[35,44,39,0,44,38,45,37],
[32,44,36,36,0,36,40,35],
[35,40,33,42,44,0,37,36],
[37,46,35,35,40,43,0,43],
[34,44,36,43,45,44,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,57,35,37,58,44],
[35,0,45,77,28,45,46,56],
[40,35,0,54,31,43,43,50],
[23,3,26,0,21,19,26,26],
[45,52,49,59,0,30,43,53],
[43,35,37,61,50,0,44,35],
[22,34,37,54,37,36,0,28],
[36,24,30,54,27,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,46,44,52,37,53,25],
[22,0,37,34,41,27,44,34],
[34,43,0,31,39,27,42,40],
[36,46,49,0,45,37,47,39],
[28,39,41,35,0,35,34,36],
[43,53,53,43,45,0,48,37],
[27,36,38,33,46,32,0,34],
[55,46,40,41,44,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,30,38,34,29,31,32],
[41,0,24,34,21,32,30,31],
[50,56,0,38,41,32,33,36],
[42,46,42,0,38,36,37,44],
[46,59,39,42,0,41,49,45],
[51,48,48,44,39,0,41,39],
[49,50,47,43,31,39,0,45],
[48,49,44,36,35,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,37,30,34,37,30],
[42,0,41,41,38,43,36,35],
[43,39,0,42,34,40,36,35],
[43,39,38,0,39,43,35,40],
[50,42,46,41,0,42,42,40],
[46,37,40,37,38,0,40,41],
[43,44,44,45,38,40,0,39],
[50,45,45,40,40,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,47,35,31,37,39,44],
[42,0,42,35,31,34,35,39],
[33,38,0,42,28,29,27,37],
[45,45,38,0,34,38,34,43],
[49,49,52,46,0,43,38,46],
[43,46,51,42,37,0,42,48],
[41,45,53,46,42,38,0,50],
[36,41,43,37,34,32,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,45,38,41,43,46],
[38,0,41,36,40,38,32,45],
[35,39,0,40,45,41,39,48],
[35,44,40,0,47,39,35,54],
[42,40,35,33,0,42,46,45],
[39,42,39,41,38,0,39,46],
[37,48,41,45,34,41,0,48],
[34,35,32,26,35,34,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,32,38,36,32,32,31],
[46,0,28,46,50,38,46,40],
[48,52,0,42,50,44,41,38],
[42,34,38,0,37,36,38,37],
[44,30,30,43,0,36,37,32],
[48,42,36,44,44,0,38,38],
[48,34,39,42,43,42,0,44],
[49,40,42,43,48,42,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,32,36,33,42,40,40],
[42,0,42,37,40,37,43,40],
[48,38,0,39,44,39,44,43],
[44,43,41,0,40,46,47,44],
[47,40,36,40,0,39,42,40],
[38,43,41,34,41,0,38,38],
[40,37,36,33,38,42,0,36],
[40,40,37,36,40,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,52,50,44,50,40,55],
[26,0,42,38,43,34,31,46],
[28,38,0,36,32,32,30,31],
[30,42,44,0,33,36,35,39],
[36,37,48,47,0,47,43,44],
[30,46,48,44,33,0,37,47],
[40,49,50,45,37,43,0,50],
[25,34,49,41,36,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,48,57,55,52,59,50],
[43,0,52,53,51,44,47,39],
[32,28,0,33,46,28,43,34],
[23,27,47,0,36,29,37,28],
[25,29,34,44,0,37,45,44],
[28,36,52,51,43,0,44,32],
[21,33,37,43,35,36,0,15],
[30,41,46,52,36,48,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,50,35,43,42,49],
[36,0,37,37,34,34,33,38],
[33,43,0,40,30,40,36,41],
[30,43,40,0,31,28,38,40],
[45,46,50,49,0,38,51,54],
[37,46,40,52,42,0,45,43],
[38,47,44,42,29,35,0,42],
[31,42,39,40,26,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,52,41,39,40,37,32],
[40,0,54,44,41,45,39,40],
[28,26,0,35,28,31,23,34],
[39,36,45,0,34,39,40,38],
[41,39,52,46,0,36,47,41],
[40,35,49,41,44,0,40,37],
[43,41,57,40,33,40,0,37],
[48,40,46,42,39,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,36,49,44,51,45,47],
[38,0,28,44,37,40,52,48],
[44,52,0,41,37,50,49,49],
[31,36,39,0,28,37,41,40],
[36,43,43,52,0,55,45,50],
[29,40,30,43,25,0,42,40],
[35,28,31,39,35,38,0,42],
[33,32,31,40,30,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,36,37,41,43,41],
[37,0,36,37,37,38,42,38],
[42,44,0,43,44,36,40,40],
[44,43,37,0,44,39,43,44],
[43,43,36,36,0,38,42,43],
[39,42,44,41,42,0,39,45],
[37,38,40,37,38,41,0,38],
[39,42,40,36,37,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,43,39,41,39,41],
[40,0,40,46,45,42,43,37],
[45,40,0,43,39,40,39,40],
[37,34,37,0,29,35,34,34],
[41,35,41,51,0,44,43,38],
[39,38,40,45,36,0,35,40],
[41,37,41,46,37,45,0,38],
[39,43,40,46,42,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,39,38,46,42,36],
[42,0,40,34,34,40,34,26],
[43,40,0,47,44,48,49,41],
[41,46,33,0,39,46,42,32],
[42,46,36,41,0,46,39,37],
[34,40,32,34,34,0,37,25],
[38,46,31,38,41,43,0,32],
[44,54,39,48,43,55,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,31,38,38,42,31,32],
[43,0,32,38,34,41,29,35],
[49,48,0,42,42,52,45,36],
[42,42,38,0,38,50,38,37],
[42,46,38,42,0,48,45,36],
[38,39,28,30,32,0,35,41],
[49,51,35,42,35,45,0,36],
[48,45,44,43,44,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,39,27,32,39,44],
[44,0,41,37,41,38,45,42],
[40,39,0,41,49,45,48,50],
[41,43,39,0,38,45,49,35],
[53,39,31,42,0,42,44,54],
[48,42,35,35,38,0,48,47],
[41,35,32,31,36,32,0,39],
[36,38,30,45,26,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,41,48,33,33,46,48],
[26,0,33,41,29,36,28,35],
[39,47,0,44,40,40,42,42],
[32,39,36,0,32,33,38,38],
[47,51,40,48,0,33,48,51],
[47,44,40,47,47,0,49,42],
[34,52,38,42,32,31,0,40],
[32,45,38,42,29,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1001, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,27,35,43,43,45],
[36,0,27,45,27,53,43,46],
[46,53,0,45,46,35,53,54],
[53,35,35,0,35,54,44,56],
[45,53,34,45,0,53,35,55],
[37,27,45,26,27,0,37,44],
[37,37,27,36,45,43,0,45],
[35,34,26,24,25,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1002, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,42,42,43,40,37],
[33,0,36,39,41,38,38,48],
[43,44,0,35,42,44,32,43],
[38,41,45,0,43,50,26,35],
[38,39,38,37,0,54,31,49],
[37,42,36,30,26,0,23,34],
[40,42,48,54,49,57,0,49],
[43,32,37,45,31,46,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1003, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,52,41,38,43,38,40],
[39,0,41,40,41,39,36,38],
[28,39,0,39,34,37,40,38],
[39,40,41,0,36,40,38,42],
[42,39,46,44,0,43,38,43],
[37,41,43,40,37,0,34,37],
[42,44,40,42,42,46,0,40],
[40,42,42,38,37,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1004, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,42,41,35,32,36],
[40,0,45,47,48,38,41,41],
[45,35,0,49,49,41,40,45],
[38,33,31,0,39,30,31,36],
[39,32,31,41,0,25,37,35],
[45,42,39,50,55,0,41,43],
[48,39,40,49,43,39,0,39],
[44,39,35,44,45,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1005, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,34,43,34,40,42,30],
[38,0,43,43,44,45,43,37],
[46,37,0,50,38,46,39,35],
[37,37,30,0,35,33,38,29],
[46,36,42,45,0,48,47,40],
[40,35,34,47,32,0,44,31],
[38,37,41,42,33,36,0,25],
[50,43,45,51,40,49,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1006, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,36,39,39,34,32,39],
[51,0,42,41,52,37,40,41],
[44,38,0,27,42,32,29,27],
[41,39,53,0,49,39,35,32],
[41,28,38,31,0,29,28,24],
[46,43,48,41,51,0,36,42],
[48,40,51,45,52,44,0,47],
[41,39,53,48,56,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1007, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,55,51,40,55,44],
[34,0,37,45,48,42,50,41],
[36,43,0,47,45,34,45,50],
[25,35,33,0,31,19,39,25],
[29,32,35,49,0,34,41,42],
[40,38,46,61,46,0,45,46],
[25,30,35,41,39,35,0,41],
[36,39,30,55,38,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1008, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,36,36,23,33,29,32],
[52,0,39,29,27,30,40,33],
[44,41,0,42,43,45,45,37],
[44,51,38,0,24,38,40,32],
[57,53,37,56,0,42,45,46],
[47,50,35,42,38,0,50,34],
[51,40,35,40,35,30,0,44],
[48,47,43,48,34,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1009, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,49,49,35,53,45,48],
[47,0,35,43,33,49,43,47],
[31,45,0,35,35,46,40,39],
[31,37,45,0,28,57,43,37],
[45,47,45,52,0,49,40,42],
[27,31,34,23,31,0,28,46],
[35,37,40,37,40,52,0,47],
[32,33,41,43,38,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1010, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,39,29,37,30,46],
[44,0,42,40,36,37,27,45],
[40,38,0,37,38,45,32,42],
[41,40,43,0,43,41,37,45],
[51,44,42,37,0,47,43,50],
[43,43,35,39,33,0,27,52],
[50,53,48,43,37,53,0,48],
[34,35,38,35,30,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1011, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,31,36,26,32,31,35],
[36,0,27,33,27,29,31,38],
[49,53,0,53,30,50,40,45],
[44,47,27,0,28,36,30,14],
[54,53,50,52,0,48,38,41],
[48,51,30,44,32,0,47,35],
[49,49,40,50,42,33,0,43],
[45,42,35,66,39,45,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1012, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,39,39,40,38,44],
[38,0,37,35,44,39,35,29],
[41,43,0,47,47,50,37,49],
[41,45,33,0,49,42,33,42],
[41,36,33,31,0,41,32,34],
[40,41,30,38,39,0,30,36],
[42,45,43,47,48,50,0,37],
[36,51,31,38,46,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1013, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,23,34,29,28,32,33],
[55,0,34,43,38,34,42,35],
[57,46,0,38,33,34,31,43],
[46,37,42,0,42,36,39,40],
[51,42,47,38,0,36,42,42],
[52,46,46,44,44,0,41,38],
[48,38,49,41,38,39,0,41],
[47,45,37,40,38,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1014, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,45,39,42,47,42],
[42,0,41,45,38,31,43,42],
[41,39,0,47,35,41,46,43],
[35,35,33,0,31,34,39,34],
[41,42,45,49,0,39,48,41],
[38,49,39,46,41,0,52,41],
[33,37,34,41,32,28,0,40],
[38,38,37,46,39,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1015, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,41,35,38,35,41,36],
[50,0,53,34,45,39,36,31],
[39,27,0,30,36,30,31,31],
[45,46,50,0,48,50,38,42],
[42,35,44,32,0,37,39,32],
[45,41,50,30,43,0,42,31],
[39,44,49,42,41,38,0,38],
[44,49,49,38,48,49,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1016, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,35,34,38,45,38],
[45,0,51,48,44,47,45,37],
[39,29,0,44,46,40,43,35],
[45,32,36,0,33,39,46,33],
[46,36,34,47,0,50,49,47],
[42,33,40,41,30,0,44,40],
[35,35,37,34,31,36,0,39],
[42,43,45,47,33,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1017, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,42,38,48,42,35,38],
[30,0,33,29,42,30,39,26],
[38,47,0,42,58,42,43,40],
[42,51,38,0,52,45,46,39],
[32,38,22,28,0,29,26,27],
[38,50,38,35,51,0,42,36],
[45,41,37,34,54,38,0,33],
[42,54,40,41,53,44,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1018, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,45,38,43,32,40],
[36,0,39,41,38,41,38,41],
[44,41,0,45,38,48,40,41],
[35,39,35,0,36,40,35,37],
[42,42,42,44,0,49,42,39],
[37,39,32,40,31,0,39,37],
[48,42,40,45,38,41,0,42],
[40,39,39,43,41,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1019, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,36,53,29,36,31],
[50,0,40,36,41,39,30,47],
[41,40,0,18,40,32,27,46],
[44,44,62,0,42,43,30,43],
[27,39,40,38,0,40,52,33],
[51,41,48,37,40,0,54,41],
[44,50,53,50,28,26,0,41],
[49,33,34,37,47,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1020, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,51,46,46,43,35,41],
[41,0,47,46,43,39,35,42],
[29,33,0,44,42,42,36,49],
[34,34,36,0,44,41,29,44],
[34,37,38,36,0,35,41,39],
[37,41,38,39,45,0,38,50],
[45,45,44,51,39,42,0,44],
[39,38,31,36,41,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1021, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,42,48,35,43,43],
[36,0,31,37,38,29,27,34],
[38,49,0,41,50,39,37,40],
[38,43,39,0,44,40,38,45],
[32,42,30,36,0,30,27,33],
[45,51,41,40,50,0,39,42],
[37,53,43,42,53,41,0,43],
[37,46,40,35,47,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1022, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,44,59,38,25,36],
[39,0,48,46,64,46,28,48],
[32,32,0,31,44,33,45,31],
[36,34,49,0,46,39,39,45],
[21,16,36,34,0,32,21,31],
[42,34,47,41,48,0,43,46],
[55,52,35,41,59,37,0,44],
[44,32,49,35,49,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1023, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,34,45,47,45,42,36],
[41,0,45,37,49,44,40,44],
[46,35,0,38,48,43,40,39],
[35,43,42,0,48,41,39,32],
[33,31,32,32,0,38,36,32],
[35,36,37,39,42,0,38,35],
[38,40,40,41,44,42,0,39],
[44,36,41,48,48,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1024, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,40,42,42,37,42],
[41,0,43,45,39,43,43,46],
[33,37,0,39,37,36,38,44],
[40,35,41,0,35,41,36,39],
[38,41,43,45,0,43,44,43],
[38,37,44,39,37,0,42,36],
[43,37,42,44,36,38,0,41],
[38,34,36,41,37,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1025, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,35,35,45,29,36],
[43,0,27,27,39,42,23,37],
[37,53,0,36,33,48,23,45],
[45,53,44,0,43,50,33,52],
[45,41,47,37,0,51,33,36],
[35,38,32,30,29,0,30,36],
[51,57,57,47,47,50,0,40],
[44,43,35,28,44,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1026, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,53,44,41,37,40,46],
[34,0,40,32,34,31,29,32],
[27,40,0,36,35,32,39,37],
[36,48,44,0,35,35,40,38],
[39,46,45,45,0,38,36,45],
[43,49,48,45,42,0,46,40],
[40,51,41,40,44,34,0,42],
[34,48,43,42,35,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1027, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,44,42,49,35,40],
[32,0,45,42,35,44,32,39],
[36,35,0,40,35,43,34,38],
[36,38,40,0,35,41,34,41],
[38,45,45,45,0,45,40,38],
[31,36,37,39,35,0,31,32],
[45,48,46,46,40,49,0,49],
[40,41,42,39,42,48,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1028, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,46,40,40,49,27,47],
[50,0,54,47,39,47,40,53],
[34,26,0,46,33,35,29,37],
[40,33,34,0,34,34,38,42],
[40,41,47,46,0,47,38,44],
[31,33,45,46,33,0,33,40],
[53,40,51,42,42,47,0,47],
[33,27,43,38,36,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1029, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,39,37,40,44,43],
[43,0,43,37,38,36,46,41],
[34,37,0,38,36,34,39,40],
[41,43,42,0,40,35,43,43],
[43,42,44,40,0,40,45,46],
[40,44,46,45,40,0,45,44],
[36,34,41,37,35,35,0,42],
[37,39,40,37,34,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1030, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,49,37,43,43,43],
[35,0,39,43,32,38,32,40],
[36,41,0,51,43,48,38,49],
[31,37,29,0,24,35,34,39],
[43,48,37,56,0,42,45,44],
[37,42,32,45,38,0,44,39],
[37,48,42,46,35,36,0,38],
[37,40,31,41,36,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1031, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,52,52,37,46,46],
[42,0,38,54,63,38,44,43],
[38,42,0,54,52,44,45,39],
[28,26,26,0,41,29,46,23],
[28,17,28,39,0,29,40,22],
[43,42,36,51,51,0,26,39],
[34,36,35,34,40,54,0,36],
[34,37,41,57,58,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1032, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,48,48,50,40,55,43],
[30,0,27,44,51,36,44,38],
[32,53,0,44,45,45,51,50],
[32,36,36,0,39,28,45,45],
[30,29,35,41,0,34,51,37],
[40,44,35,52,46,0,53,48],
[25,36,29,35,29,27,0,35],
[37,42,30,35,43,32,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1033, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,39,44,38,43,41],
[37,0,42,39,42,39,40,36],
[38,38,0,40,35,41,40,36],
[41,41,40,0,35,43,36,28],
[36,38,45,45,0,44,46,36],
[42,41,39,37,36,0,41,37],
[37,40,40,44,34,39,0,30],
[39,44,44,52,44,43,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1034, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,47,45,39,40,45,43],
[32,0,37,42,36,35,41,37],
[33,43,0,48,33,29,45,37],
[35,38,32,0,37,28,41,34],
[41,44,47,43,0,36,37,37],
[40,45,51,52,44,0,46,47],
[35,39,35,39,43,34,0,35],
[37,43,43,46,43,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1035, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,21,40,43,53,47,31],
[55,0,43,35,50,54,56,41],
[59,37,0,47,53,58,58,45],
[40,45,33,0,44,54,51,37],
[37,30,27,36,0,39,36,34],
[27,26,22,26,41,0,38,27],
[33,24,22,29,44,42,0,24],
[49,39,35,43,46,53,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1036, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,46,43,45,49,42,38],
[35,0,42,39,40,40,36,42],
[34,38,0,33,34,40,35,37],
[37,41,47,0,38,39,38,37],
[35,40,46,42,0,46,35,44],
[31,40,40,41,34,0,31,36],
[38,44,45,42,45,49,0,45],
[42,38,43,43,36,44,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1037, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,40,40,44,39,42,37],
[32,0,29,35,27,38,47,31],
[40,51,0,42,35,28,43,36],
[40,45,38,0,36,48,57,34],
[36,53,45,44,0,43,51,43],
[41,42,52,32,37,0,42,39],
[38,33,37,23,29,38,0,34],
[43,49,44,46,37,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1038, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,25,40,31,49,37,34],
[49,0,39,35,58,52,57,48],
[55,41,0,45,54,58,51,38],
[40,45,35,0,46,45,45,37],
[49,22,26,34,0,40,34,25],
[31,28,22,35,40,0,32,27],
[43,23,29,35,46,48,0,35],
[46,32,42,43,55,53,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1039, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,35,35,36,38,36],
[42,0,45,39,41,40,44,39],
[44,35,0,47,40,38,40,36],
[45,41,33,0,44,41,37,38],
[45,39,40,36,0,42,39,40],
[44,40,42,39,38,0,44,44],
[42,36,40,43,41,36,0,44],
[44,41,44,42,40,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1040, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,44,38,38,35,40,40],
[49,0,46,47,38,43,44,39],
[36,34,0,38,31,35,38,35],
[42,33,42,0,37,39,36,40],
[42,42,49,43,0,38,36,36],
[45,37,45,41,42,0,39,39],
[40,36,42,44,44,41,0,39],
[40,41,45,40,44,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1041, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,32,44,40,46,44],
[35,0,47,38,48,42,49,42],
[38,33,0,34,41,34,43,43],
[48,42,46,0,46,40,43,46],
[36,32,39,34,0,37,39,43],
[40,38,46,40,43,0,42,45],
[34,31,37,37,41,38,0,36],
[36,38,37,34,37,35,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1042, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,80,40,68,68,41],
[26,0,40,26,53,54,54,26],
[26,40,0,52,66,40,14,27],
[0,54,28,0,27,55,42,27],
[40,27,14,53,0,41,28,14],
[12,26,40,25,39,0,0,27],
[12,26,66,38,52,80,0,27],
[39,54,53,53,66,53,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1043, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,35,25,55,47,45,8],
[55,0,55,53,47,30,63,53],
[45,25,0,43,46,38,63,34],
[55,27,37,0,57,39,55,37],
[25,33,34,23,0,45,53,25],
[33,50,42,41,35,0,52,33],
[35,17,17,25,27,28,0,9],
[72,27,46,43,55,47,71,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1044, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,45,46,33,41,40],
[38,0,43,38,43,39,45,38],
[41,37,0,44,53,39,42,41],
[35,42,36,0,32,40,41,38],
[34,37,27,48,0,34,42,36],
[47,41,41,40,46,0,35,43],
[39,35,38,39,38,45,0,33],
[40,42,39,42,44,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1045, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,35,33,29,36,32],
[44,0,40,38,33,32,46,36],
[47,40,0,44,40,39,40,37],
[45,42,36,0,36,38,40,36],
[47,47,40,44,0,36,41,41],
[51,48,41,42,44,0,48,40],
[44,34,40,40,39,32,0,38],
[48,44,43,44,39,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1046, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,34,67,47,55,33,28],
[35,0,43,54,40,41,36,50],
[46,37,0,67,46,47,26,48],
[13,26,13,0,41,41,27,28],
[33,40,34,39,0,49,41,41],
[25,39,33,39,31,0,18,40],
[47,44,54,53,39,62,0,54],
[52,30,32,52,39,40,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1047, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,12,58,36,59,36,48],
[33,0,45,56,34,58,47,47],
[68,35,0,46,34,47,47,59],
[22,24,34,0,46,58,24,36],
[44,46,46,34,0,47,46,58],
[21,22,33,22,33,0,35,47],
[44,33,33,56,34,45,0,59],
[32,33,21,44,22,33,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1048, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,35,43,34,33,44],
[43,0,41,39,46,42,43,45],
[41,39,0,40,41,44,38,49],
[45,41,40,0,44,41,42,42],
[37,34,39,36,0,40,39,44],
[46,38,36,39,40,0,37,54],
[47,37,42,38,41,43,0,48],
[36,35,31,38,36,26,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1049, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,42,46,43,50,42],
[40,0,42,46,48,42,43,47],
[33,38,0,35,43,41,43,44],
[38,34,45,0,43,41,43,40],
[34,32,37,37,0,36,32,35],
[37,38,39,39,44,0,45,38],
[30,37,37,37,48,35,0,36],
[38,33,36,40,45,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1050, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,49,49,46,40,42,49],
[51,0,53,42,44,35,54,42],
[31,27,0,47,27,28,48,45],
[31,38,33,0,33,35,36,50],
[34,36,53,47,0,44,48,39],
[40,45,52,45,36,0,47,57],
[38,26,32,44,32,33,0,40],
[31,38,35,30,41,23,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1051, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,24,43,32,42,44,40],
[45,0,42,38,34,40,48,41],
[56,38,0,46,41,43,53,42],
[37,42,34,0,41,42,47,45],
[48,46,39,39,0,51,51,38],
[38,40,37,38,29,0,45,43],
[36,32,27,33,29,35,0,33],
[40,39,38,35,42,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1052, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,40,40,20,0,40],
[60,0,40,60,60,20,20,40],
[60,40,0,40,40,40,20,40],
[40,20,40,0,60,20,40,40],
[40,20,40,20,0,40,20,40],
[60,60,40,60,40,0,20,20],
[80,60,60,40,60,60,0,80],
[40,40,40,40,40,60,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1053, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,33,41,44,41,38,35],
[40,0,42,36,43,41,38,31],
[47,38,0,39,52,41,41,38],
[39,44,41,0,44,46,40,40],
[36,37,28,36,0,37,32,28],
[39,39,39,34,43,0,40,32],
[42,42,39,40,48,40,0,30],
[45,49,42,40,52,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1054, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,28,22,29,21,22],
[41,0,44,32,23,38,20,26],
[42,36,0,31,31,48,45,36],
[52,48,49,0,37,53,44,43],
[58,57,49,43,0,51,56,29],
[51,42,32,27,29,0,45,30],
[59,60,35,36,24,35,0,37],
[58,54,44,37,51,50,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1055, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,58,45,35,45,34],
[46,0,48,46,68,37,58,46],
[46,32,0,58,56,35,55,43],
[22,34,22,0,44,24,45,34],
[35,12,24,36,0,49,57,33],
[45,43,45,56,31,0,55,43],
[35,22,25,35,23,25,0,12],
[46,34,37,46,47,37,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1056, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,45,40,33,42,47,41],
[42,0,38,42,39,44,43,29],
[35,42,0,35,37,35,36,36],
[40,38,45,0,42,41,45,34],
[47,41,43,38,0,41,47,38],
[38,36,45,39,39,0,42,31],
[33,37,44,35,33,38,0,35],
[39,51,44,46,42,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1057, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,47,32,57,48,24,39],
[33,0,49,16,41,25,16,49],
[33,31,0,8,33,25,24,41],
[48,64,72,0,65,56,40,72],
[23,39,47,15,0,32,31,39],
[32,55,55,24,48,0,32,39],
[56,64,56,40,49,48,0,56],
[41,31,39,8,41,41,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1058, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,38,47,47,42,44],
[32,0,38,38,47,37,38,42],
[34,42,0,38,41,38,37,45],
[42,42,42,0,47,40,33,39],
[33,33,39,33,0,35,31,36],
[33,43,42,40,45,0,36,44],
[38,42,43,47,49,44,0,46],
[36,38,35,41,44,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1059, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,22,27,31,44,32],
[46,0,32,34,25,32,31,35],
[44,48,0,32,34,37,36,41],
[58,46,48,0,35,42,50,35],
[53,55,46,45,0,52,53,40],
[49,48,43,38,28,0,48,32],
[36,49,44,30,27,32,0,30],
[48,45,39,45,40,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1060, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,45,47,36,30,38,39],
[47,0,45,48,50,44,39,47],
[35,35,0,33,36,31,34,29],
[33,32,47,0,43,38,35,45],
[44,30,44,37,0,35,40,35],
[50,36,49,42,45,0,39,39],
[42,41,46,45,40,41,0,35],
[41,33,51,35,45,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1061, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,25,28,25,53,0,0],
[27,0,25,0,25,53,0,27],
[55,55,0,55,0,55,0,27],
[52,80,25,0,25,80,25,52],
[55,55,80,55,0,55,0,27],
[27,27,25,0,25,0,0,27],
[80,80,80,55,80,80,0,27],
[80,53,53,28,53,53,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1062, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,44,35,36,33,36],
[45,0,41,36,27,37,34,31],
[41,39,0,41,35,39,36,38],
[36,44,39,0,33,43,34,30],
[45,53,45,47,0,48,43,39],
[44,43,41,37,32,0,34,40],
[47,46,44,46,37,46,0,47],
[44,49,42,50,41,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1063, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,43,34,42,42,38],
[40,0,30,39,36,41,42,42],
[40,50,0,38,35,42,45,44],
[37,41,42,0,38,43,42,43],
[46,44,45,42,0,40,44,41],
[38,39,38,37,40,0,40,32],
[38,38,35,38,36,40,0,40],
[42,38,36,37,39,48,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1064, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,44,46,40,50,41],
[36,0,44,33,25,30,20,25],
[39,36,0,41,43,49,42,41],
[36,47,39,0,42,49,37,36],
[34,55,37,38,0,48,41,23],
[40,50,31,31,32,0,23,23],
[30,60,38,43,39,57,0,34],
[39,55,39,44,57,57,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1065, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,47,33,44,40,43,35],
[46,0,48,48,45,39,42,44],
[33,32,0,31,27,34,34,34],
[47,32,49,0,43,39,34,44],
[36,35,53,37,0,50,45,52],
[40,41,46,41,30,0,35,43],
[37,38,46,46,35,45,0,42],
[45,36,46,36,28,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1066, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,50,42,41,48,46],
[37,0,41,47,52,42,47,40],
[41,39,0,49,52,43,44,46],
[30,33,31,0,39,44,42,33],
[38,28,28,41,0,39,45,41],
[39,38,37,36,41,0,46,39],
[32,33,36,38,35,34,0,34],
[34,40,34,47,39,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1067, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,33,42,36,36,36],
[36,0,34,36,33,31,34,37],
[46,46,0,38,32,35,44,37],
[47,44,42,0,46,36,44,37],
[38,47,48,34,0,41,44,36],
[44,49,45,44,39,0,44,45],
[44,46,36,36,36,36,0,34],
[44,43,43,43,44,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1068, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,36,45,47,43,43],
[34,0,42,39,45,42,37,40],
[42,38,0,36,45,36,28,36],
[44,41,44,0,46,39,31,39],
[35,35,35,34,0,36,29,32],
[33,38,44,41,44,0,39,34],
[37,43,52,49,51,41,0,47],
[37,40,44,41,48,46,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1069, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,41,33,39,45,31],
[49,0,50,49,40,56,49,46],
[45,30,0,45,33,46,45,37],
[39,31,35,0,31,35,50,35],
[47,40,47,49,0,40,39,39],
[41,24,34,45,40,0,47,32],
[35,31,35,30,41,33,0,30],
[49,34,43,45,41,48,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1070, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,41,46,47,38,45],
[40,0,41,36,44,55,48,44],
[41,39,0,41,43,46,47,40],
[39,44,39,0,45,43,42,42],
[34,36,37,35,0,46,33,35],
[33,25,34,37,34,0,43,31],
[42,32,33,38,47,37,0,45],
[35,36,40,38,45,49,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1071, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,32,33,37,30,33],
[48,0,41,40,39,37,40,39],
[51,39,0,40,41,40,41,43],
[48,40,40,0,38,42,43,47],
[47,41,39,42,0,37,46,42],
[43,43,40,38,43,0,48,48],
[50,40,39,37,34,32,0,45],
[47,41,37,33,38,32,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1072, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,44,44,45,43,37],
[34,0,35,41,32,31,31,42],
[43,45,0,44,42,45,43,38],
[36,39,36,0,24,32,35,34],
[36,48,38,56,0,40,47,40],
[35,49,35,48,40,0,48,39],
[37,49,37,45,33,32,0,37],
[43,38,42,46,40,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1073, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,47,46,45,47,43,37],
[38,0,30,37,38,39,42,29],
[33,50,0,44,53,44,53,43],
[34,43,36,0,35,35,36,37],
[35,42,27,45,0,42,50,28],
[33,41,36,45,38,0,38,34],
[37,38,27,44,30,42,0,27],
[43,51,37,43,52,46,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1074, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,55,37,51,52,52,50],
[30,0,45,37,45,46,62,40],
[25,35,0,42,48,53,57,41],
[43,43,38,0,40,47,48,45],
[29,35,32,40,0,45,39,35],
[28,34,27,33,35,0,37,33],
[28,18,23,32,41,43,0,26],
[30,40,39,35,45,47,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1075, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,38,47,44,40,40],
[43,0,34,38,44,42,37,46],
[40,46,0,35,44,43,43,41],
[42,42,45,0,38,37,42,40],
[33,36,36,42,0,36,38,30],
[36,38,37,43,44,0,37,40],
[40,43,37,38,42,43,0,39],
[40,34,39,40,50,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1076, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,34,25,28,17,44,22],
[51,0,44,43,32,34,43,45],
[46,36,0,19,21,22,45,20],
[55,37,61,0,42,36,49,36],
[52,48,59,38,0,33,56,32],
[63,46,58,44,47,0,46,38],
[36,37,35,31,24,34,0,22],
[58,35,60,44,48,42,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1077, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,30,38,37,38,41],
[44,0,47,37,35,35,44,35],
[40,33,0,44,33,42,40,41],
[50,43,36,0,43,41,43,39],
[42,45,47,37,0,39,48,44],
[43,45,38,39,41,0,39,44],
[42,36,40,37,32,41,0,34],
[39,45,39,41,36,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1078, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,49,36,43,48,40],
[43,0,34,49,52,41,53,43],
[40,46,0,56,44,40,50,41],
[31,31,24,0,29,35,39,34],
[44,28,36,51,0,40,60,42],
[37,39,40,45,40,0,36,36],
[32,27,30,41,20,44,0,36],
[40,37,39,46,38,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1079, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,42,38,41,41,47],
[36,0,36,40,43,50,51,51],
[33,44,0,41,46,36,44,33],
[38,40,39,0,30,37,32,45],
[42,37,34,50,0,30,49,44],
[39,30,44,43,50,0,39,50],
[39,29,36,48,31,41,0,51],
[33,29,47,35,36,30,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1080, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,45,36,44,42,37],
[42,0,33,39,40,38,47,38],
[43,47,0,47,39,48,44,43],
[35,41,33,0,31,42,43,37],
[44,40,41,49,0,43,45,43],
[36,42,32,38,37,0,45,34],
[38,33,36,37,35,35,0,40],
[43,42,37,43,37,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1081, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,32,38,41,40,36,41],
[44,0,39,41,47,42,40,53],
[48,41,0,39,43,41,40,45],
[42,39,41,0,60,48,37,52],
[39,33,37,20,0,38,35,45],
[40,38,39,32,42,0,41,43],
[44,40,40,43,45,39,0,53],
[39,27,35,28,35,37,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1082, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,42,43,44,40,47],
[35,0,38,41,42,38,35,41],
[37,42,0,41,45,37,38,42],
[38,39,39,0,43,32,38,40],
[37,38,35,37,0,39,40,44],
[36,42,43,48,41,0,41,48],
[40,45,42,42,40,39,0,45],
[33,39,38,40,36,32,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1083, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,29,29,29,55,54,80],
[0,0,0,29,29,29,54,51],
[51,80,0,55,29,55,54,80],
[51,51,25,0,54,51,54,51],
[51,51,51,26,0,51,80,51],
[25,51,25,29,29,0,54,51],
[26,26,26,26,0,26,0,51],
[0,29,0,29,29,29,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1084, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,48,44,42,36,46],
[37,0,44,41,47,37,36,44],
[35,36,0,38,43,32,27,43],
[32,39,42,0,38,33,31,42],
[36,33,37,42,0,32,32,40],
[38,43,48,47,48,0,45,45],
[44,44,53,49,48,35,0,50],
[34,36,37,38,40,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1085, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,38,36,38,34,33],
[43,0,44,46,47,37,42,41],
[43,36,0,40,42,38,39,36],
[42,34,40,0,43,36,33,40],
[44,33,38,37,0,38,35,35],
[42,43,42,44,42,0,39,37],
[46,38,41,47,45,41,0,42],
[47,39,44,40,45,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1086, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,35,45,44,29,43],
[40,0,34,34,46,41,24,44],
[44,46,0,45,49,38,34,47],
[45,46,35,0,40,44,42,46],
[35,34,31,40,0,34,29,34],
[36,39,42,36,46,0,35,44],
[51,56,46,38,51,45,0,52],
[37,36,33,34,46,36,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1087, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,31,36,35,33,34,35],
[43,0,38,45,44,39,39,45],
[49,42,0,48,40,37,41,47],
[44,35,32,0,39,37,32,36],
[45,36,40,41,0,43,37,34],
[47,41,43,43,37,0,41,46],
[46,41,39,48,43,39,0,45],
[45,35,33,44,46,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1088, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,50,49,45,46,46],
[43,0,37,39,44,38,27,43],
[40,43,0,47,45,46,40,54],
[30,41,33,0,51,49,40,39],
[31,36,35,29,0,54,29,35],
[35,42,34,31,26,0,27,35],
[34,53,40,40,51,53,0,55],
[34,37,26,41,45,45,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1089, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,30,32,38,23,30,42],
[52,0,38,51,45,43,42,49],
[50,42,0,50,45,40,42,53],
[48,29,30,0,28,31,34,36],
[42,35,35,52,0,40,39,43],
[57,37,40,49,40,0,36,51],
[50,38,38,46,41,44,0,50],
[38,31,27,44,37,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1090, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,44,32,33,30,39],
[46,0,40,42,32,40,38,42],
[44,40,0,44,30,31,35,42],
[36,38,36,0,30,29,32,37],
[48,48,50,50,0,37,44,50],
[47,40,49,51,43,0,39,49],
[50,42,45,48,36,41,0,47],
[41,38,38,43,30,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1091, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,30,29,40,41,19,30],
[47,0,32,36,47,41,23,40],
[50,48,0,22,41,40,30,44],
[51,44,58,0,45,46,33,40],
[40,33,39,35,0,42,37,32],
[39,39,40,34,38,0,40,33],
[61,57,50,47,43,40,0,52],
[50,40,36,40,48,47,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1092, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,41,49,44,46,42],
[39,0,40,48,44,40,41,51],
[42,40,0,42,43,40,46,43],
[39,32,38,0,39,38,35,28],
[31,36,37,41,0,42,43,43],
[36,40,40,42,38,0,38,39],
[34,39,34,45,37,42,0,45],
[38,29,37,52,37,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1093, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,33,39,41,40,35,40],
[36,0,31,41,40,39,39,36],
[47,49,0,50,40,39,45,40],
[41,39,30,0,44,34,36,40],
[39,40,40,36,0,33,37,33],
[40,41,41,46,47,0,39,43],
[45,41,35,44,43,41,0,39],
[40,44,40,40,47,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1094, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,41,47,33,36,38,40],
[31,0,32,39,29,28,31,22],
[39,48,0,43,40,37,43,39],
[33,41,37,0,36,35,31,35],
[47,51,40,44,0,45,37,34],
[44,52,43,45,35,0,35,37],
[42,49,37,49,43,45,0,38],
[40,58,41,45,46,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1095, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,29,47,29,36,37,31],
[40,0,29,44,27,27,43,36],
[51,51,0,47,37,52,50,39],
[33,36,33,0,37,36,38,35],
[51,53,43,43,0,42,43,35],
[44,53,28,44,38,0,45,44],
[43,37,30,42,37,35,0,36],
[49,44,41,45,45,36,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1096, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,46,43,33,44,42,38],
[50,0,44,35,42,45,31,53],
[34,36,0,32,28,39,32,43],
[37,45,48,0,39,47,43,51],
[47,38,52,41,0,41,45,47],
[36,35,41,33,39,0,37,38],
[38,49,48,37,35,43,0,42],
[42,27,37,29,33,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1097, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,40,42,38,37,36],
[49,0,53,48,50,47,39,38],
[41,27,0,37,37,37,35,33],
[40,32,43,0,40,42,35,35],
[38,30,43,40,0,34,42,32],
[42,33,43,38,46,0,40,37],
[43,41,45,45,38,40,0,40],
[44,42,47,45,48,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1098, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,41,43,43,48,36],
[34,0,34,34,27,20,27,27],
[29,46,0,43,28,33,44,46],
[39,46,37,0,36,51,34,54],
[37,53,52,44,0,47,58,57],
[37,60,47,29,33,0,45,40],
[32,53,36,46,22,35,0,39],
[44,53,34,26,23,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1099, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,60,60,80,60,60,40,40],
[20,0,60,60,60,40,20,40],
[20,20,0,60,60,20,20,40],
[0,20,20,0,20,20,20,40],
[20,20,20,60,0,40,20,40],
[20,40,60,60,40,0,0,20],
[40,60,60,60,60,80,0,20],
[40,40,40,40,40,60,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1100, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,36,32,39,54,25],
[33,0,32,43,49,33,54,39],
[39,48,0,26,32,28,47,40],
[44,37,54,0,23,37,45,24],
[48,31,48,57,0,49,42,20],
[41,47,52,43,31,0,55,46],
[26,26,33,35,38,25,0,19],
[55,41,40,56,60,34,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1101, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,29,30,41,43,28],
[44,0,50,35,36,40,40,34],
[49,30,0,37,37,43,41,37],
[51,45,43,0,40,39,53,36],
[50,44,43,40,0,41,42,42],
[39,40,37,41,39,0,42,35],
[37,40,39,27,38,38,0,30],
[52,46,43,44,38,45,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1102, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,50,38,40,31,39,30],
[37,0,44,39,40,35,45,34],
[30,36,0,30,26,26,35,27],
[42,41,50,0,37,28,39,37],
[40,40,54,43,0,32,39,37],
[49,45,54,52,48,0,47,36],
[41,35,45,41,41,33,0,40],
[50,46,53,43,43,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1103, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,41,38,49,32,35,46],
[30,0,37,28,41,26,35,32],
[39,43,0,42,49,30,44,37],
[42,52,38,0,43,33,41,39],
[31,39,31,37,0,27,38,27],
[48,54,50,47,53,0,55,40],
[45,45,36,39,42,25,0,37],
[34,48,43,41,53,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1104, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,41,37,45,34,43],
[39,0,31,41,37,38,40,43],
[43,49,0,51,47,45,34,52],
[39,39,29,0,43,45,34,46],
[43,43,33,37,0,40,42,43],
[35,42,35,35,40,0,24,41],
[46,40,46,46,38,56,0,48],
[37,37,28,34,37,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1105, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,40,38,44,44,30],
[44,0,42,34,36,35,41,42],
[46,38,0,42,49,34,47,42],
[40,46,38,0,36,47,62,41],
[42,44,31,44,0,35,47,49],
[36,45,46,33,45,0,58,53],
[36,39,33,18,33,22,0,30],
[50,38,38,39,31,27,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1106, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,44,49,44,40,44,46],
[29,0,26,34,29,41,22,21],
[36,54,0,57,56,51,54,45],
[31,46,23,0,48,43,34,29],
[36,51,24,32,0,42,32,41],
[40,39,29,37,38,0,34,51],
[36,58,26,46,48,46,0,42],
[34,59,35,51,39,29,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1107, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,32,45,36,43,40,39],
[39,0,40,37,36,35,35,46],
[48,40,0,38,42,41,41,35],
[35,43,42,0,46,42,44,44],
[44,44,38,34,0,35,41,36],
[37,45,39,38,45,0,37,47],
[40,45,39,36,39,43,0,42],
[41,34,45,36,44,33,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1108, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,44,48,46,39,50,37],
[30,0,39,33,35,31,40,35],
[36,41,0,35,46,43,38,45],
[32,47,45,0,44,39,38,41],
[34,45,34,36,0,36,44,50],
[41,49,37,41,44,0,36,36],
[30,40,42,42,36,44,0,30],
[43,45,35,39,30,44,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1109, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,36,35,31,45,32],
[43,0,44,35,38,53,48,42],
[38,36,0,32,34,49,43,38],
[44,45,48,0,30,40,39,41],
[45,42,46,50,0,49,44,35],
[49,27,31,40,31,0,34,37],
[35,32,37,41,36,46,0,41],
[48,38,42,39,45,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1110, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,38,38,39,42,37],
[42,0,43,42,44,40,48,42],
[39,37,0,34,39,36,44,34],
[42,38,46,0,40,38,48,44],
[42,36,41,40,0,40,51,35],
[41,40,44,42,40,0,47,36],
[38,32,36,32,29,33,0,34],
[43,38,46,36,45,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1111, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,52,26,66,40,40,38],
[42,0,28,28,52,40,54,26],
[28,52,0,14,38,26,54,12],
[54,52,66,0,52,40,54,52],
[14,28,42,28,0,54,54,40],
[40,40,54,40,26,0,80,26],
[40,26,26,26,26,0,0,12],
[42,54,68,28,40,54,68,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1112, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,33,39,29,38,34,32],
[49,0,45,43,35,42,47,44],
[47,35,0,41,33,40,45,35],
[41,37,39,0,33,41,41,32],
[51,45,47,47,0,40,49,46],
[42,38,40,39,40,0,36,31],
[46,33,35,39,31,44,0,39],
[48,36,45,48,34,49,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1113, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,53,39,36,37,41,40],
[38,0,46,42,40,42,40,38],
[27,34,0,32,35,29,31,35],
[41,38,48,0,42,43,39,37],
[44,40,45,38,0,42,37,39],
[43,38,51,37,38,0,36,39],
[39,40,49,41,43,44,0,39],
[40,42,45,43,41,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1114, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,53,48,47,35,50,44],
[39,0,31,31,47,30,37,33],
[27,49,0,42,50,34,43,37],
[32,49,38,0,53,37,44,46],
[33,33,30,27,0,30,34,45],
[45,50,46,43,50,0,33,50],
[30,43,37,36,46,47,0,55],
[36,47,43,34,35,30,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1115, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,34,36,33,26,29],
[48,0,38,48,43,43,40,40],
[47,42,0,41,42,44,41,37],
[46,32,39,0,39,37,37,39],
[44,37,38,41,0,38,37,38],
[47,37,36,43,42,0,36,38],
[54,40,39,43,43,44,0,38],
[51,40,43,41,42,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1116, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,18,25,27,30,46,23,26],
[62,0,45,36,42,48,44,33],
[55,35,0,34,37,42,30,50],
[53,44,46,0,38,55,44,36],
[50,38,43,42,0,50,38,48],
[34,32,38,25,30,0,38,35],
[57,36,50,36,42,42,0,32],
[54,47,30,44,32,45,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1117, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,34,42,38,47,45,43],
[50,0,43,34,37,46,50,53],
[46,37,0,42,40,47,46,44],
[38,46,38,0,44,49,44,50],
[42,43,40,36,0,42,52,42],
[33,34,33,31,38,0,45,45],
[35,30,34,36,28,35,0,31],
[37,27,36,30,38,35,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1118, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,48,44,41,49,39,51],
[40,0,42,37,41,47,39,43],
[32,38,0,37,33,35,37,39],
[36,43,43,0,36,36,32,39],
[39,39,47,44,0,46,35,48],
[31,33,45,44,34,0,41,39],
[41,41,43,48,45,39,0,48],
[29,37,41,41,32,41,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1119, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,42,33,38,36,39],
[39,0,39,40,37,40,41,42],
[42,41,0,44,39,41,44,42],
[38,40,36,0,38,40,38,41],
[47,43,41,42,0,45,40,40],
[42,40,39,40,35,0,40,38],
[44,39,36,42,40,40,0,40],
[41,38,38,39,40,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1120, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,46,48,58,48,33,55],
[22,0,30,26,49,42,23,42],
[34,50,0,36,52,48,49,35],
[32,54,44,0,43,37,23,39],
[22,31,28,37,0,40,31,57],
[32,38,32,43,40,0,13,40],
[47,57,31,57,49,67,0,50],
[25,38,45,41,23,40,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1121, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,40,40,43,47,37],
[43,0,44,39,40,41,48,33],
[40,36,0,41,40,49,44,40],
[40,41,39,0,42,41,41,39],
[40,40,40,38,0,52,43,36],
[37,39,31,39,28,0,34,37],
[33,32,36,39,37,46,0,30],
[43,47,40,41,44,43,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1122, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,40,37,40,32,31,35],
[46,0,44,41,40,41,34,42],
[40,36,0,38,39,41,33,42],
[43,39,42,0,36,32,36,38],
[40,40,41,44,0,41,40,38],
[48,39,39,48,39,0,40,39],
[49,46,47,44,40,40,0,42],
[45,38,38,42,42,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1123, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,36,40,41,37,39,38],
[54,0,46,39,44,39,40,44],
[44,34,0,47,54,47,43,43],
[40,41,33,0,53,38,45,43],
[39,36,26,27,0,37,28,33],
[43,41,33,42,43,0,40,40],
[41,40,37,35,52,40,0,41],
[42,36,37,37,47,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1124, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,36,40,35,40,29],
[39,0,43,31,41,38,45,40],
[49,37,0,39,36,51,42,40],
[44,49,41,0,51,41,47,40],
[40,39,44,29,0,37,42,36],
[45,42,29,39,43,0,39,35],
[40,35,38,33,38,41,0,37],
[51,40,40,40,44,45,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1125, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,45,39,42,39,42],
[39,0,35,47,46,41,38,39],
[39,45,0,48,43,49,47,46],
[35,33,32,0,46,41,33,35],
[41,34,37,34,0,41,46,34],
[38,39,31,39,39,0,41,39],
[41,42,33,47,34,39,0,34],
[38,41,34,45,46,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1126, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,31,44,43,37,34],
[36,0,35,27,43,42,33,28],
[34,45,0,34,48,38,39,36],
[49,53,46,0,51,37,42,42],
[36,37,32,29,0,28,41,31],
[37,38,42,43,52,0,45,33],
[43,47,41,38,39,35,0,37],
[46,52,44,38,49,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1127, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,45,39,34,44,40,34],
[36,0,39,35,37,40,38,33],
[35,41,0,35,36,33,42,34],
[41,45,45,0,41,43,41,34],
[46,43,44,39,0,45,45,44],
[36,40,47,37,35,0,33,31],
[40,42,38,39,35,47,0,34],
[46,47,46,46,36,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1128, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,40,39,35,41,41,45],
[30,0,31,30,35,46,33,45],
[40,49,0,36,36,48,45,57],
[41,50,44,0,39,51,43,48],
[45,45,44,41,0,42,38,45],
[39,34,32,29,38,0,34,42],
[39,47,35,37,42,46,0,47],
[35,35,23,32,35,38,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1129, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,48,39,36,33,45],
[47,0,50,50,41,39,39,47],
[38,30,0,36,38,32,38,38],
[32,30,44,0,35,37,39,40],
[41,39,42,45,0,43,40,43],
[44,41,48,43,37,0,39,55],
[47,41,42,41,40,41,0,44],
[35,33,42,40,37,25,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1130, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,44,30,35,51,39,36],
[51,0,45,38,49,54,41,47],
[36,35,0,28,32,39,44,38],
[50,42,52,0,37,51,49,53],
[45,31,48,43,0,54,44,41],
[29,26,41,29,26,0,28,36],
[41,39,36,31,36,52,0,47],
[44,33,42,27,39,44,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1131, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,23,40,18,38,46,29],
[49,0,43,53,19,38,59,47],
[57,37,0,55,31,55,52,37],
[40,27,25,0,26,45,43,20],
[62,61,49,54,0,39,61,61],
[42,42,25,35,41,0,46,41],
[34,21,28,37,19,34,0,33],
[51,33,43,60,19,39,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1132, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,43,40,42,42,41],
[37,0,42,50,43,38,40,41],
[47,38,0,48,41,43,41,45],
[37,30,32,0,29,37,29,37],
[40,37,39,51,0,46,40,41],
[38,42,37,43,34,0,38,34],
[38,40,39,51,40,42,0,43],
[39,39,35,43,39,46,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1133, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,44,36,43,42,37],
[35,0,50,34,32,46,36,34],
[38,30,0,36,20,49,40,37],
[36,46,44,0,37,43,41,38],
[44,48,60,43,0,53,40,41],
[37,34,31,37,27,0,35,30],
[38,44,40,39,40,45,0,41],
[43,46,43,42,39,50,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1134, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,40,80,0,40,40],
[40,0,0,40,80,0,0,40],
[40,80,0,40,80,40,40,40],
[40,40,40,0,80,0,40,40],
[0,0,0,0,0,0,0,40],
[80,80,40,80,80,0,40,40],
[40,80,40,40,80,40,0,40],
[40,40,40,40,40,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1135, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,47,48,39,45,54,41],
[30,0,36,50,44,39,51,43],
[33,44,0,54,36,47,48,40],
[32,30,26,0,25,27,41,38],
[41,36,44,55,0,50,53,47],
[35,41,33,53,30,0,47,38],
[26,29,32,39,27,33,0,20],
[39,37,40,42,33,42,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1136, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,35,32,42,38,39],
[43,0,39,34,39,34,40,41],
[37,41,0,34,31,45,35,48],
[45,46,46,0,41,49,39,60],
[48,41,49,39,0,49,48,49],
[38,46,35,31,31,0,37,39],
[42,40,45,41,32,43,0,46],
[41,39,32,20,31,41,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1137, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,33,36,34,49,42,41],
[47,0,32,41,32,57,42,41],
[47,48,0,50,39,64,40,39],
[44,39,30,0,31,41,46,31],
[46,48,41,49,0,50,48,36],
[31,23,16,39,30,0,33,27],
[38,38,40,34,32,47,0,32],
[39,39,41,49,44,53,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1138, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,35,30,37,34,36],
[41,0,33,38,32,30,34,41],
[47,47,0,41,33,38,40,39],
[45,42,39,0,36,30,39,38],
[50,48,47,44,0,45,38,46],
[43,50,42,50,35,0,42,46],
[46,46,40,41,42,38,0,40],
[44,39,41,42,34,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1139, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,39,40,49,44,41],
[36,0,43,40,37,46,33,35],
[34,37,0,43,33,49,39,34],
[41,40,37,0,33,44,36,35],
[40,43,47,47,0,54,44,42],
[31,34,31,36,26,0,29,33],
[36,47,41,44,36,51,0,38],
[39,45,46,45,38,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1140, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,34,35,34,44,44],
[43,0,39,32,37,41,47,55],
[40,41,0,40,38,45,39,48],
[46,48,40,0,52,44,46,48],
[45,43,42,28,0,39,40,54],
[46,39,35,36,41,0,48,52],
[36,33,41,34,40,32,0,45],
[36,25,32,32,26,28,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1141, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,30,39,30,29,30],
[49,0,38,40,43,52,35,49],
[48,42,0,34,40,39,37,40],
[50,40,46,0,41,40,45,49],
[41,37,40,39,0,39,38,39],
[50,28,41,40,41,0,50,42],
[51,45,43,35,42,30,0,34],
[50,31,40,31,41,38,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1142, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,46,50,44,53,37,49],
[28,0,28,42,35,47,39,44],
[34,52,0,44,43,48,37,45],
[30,38,36,0,38,37,24,42],
[36,45,37,42,0,51,40,41],
[27,33,32,43,29,0,32,38],
[43,41,43,56,40,48,0,43],
[31,36,35,38,39,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1143, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,44,46,41,47,47],
[43,0,30,41,46,48,40,39],
[38,50,0,40,44,44,34,37],
[36,39,40,0,41,38,38,39],
[34,34,36,39,0,35,39,33],
[39,32,36,42,45,0,43,44],
[33,40,46,42,41,37,0,45],
[33,41,43,41,47,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1144, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,29,35,30,39,46,27],
[39,0,42,39,39,37,52,37],
[51,38,0,47,41,37,51,44],
[45,41,33,0,36,38,44,38],
[50,41,39,44,0,34,52,33],
[41,43,43,42,46,0,47,40],
[34,28,29,36,28,33,0,32],
[53,43,36,42,47,40,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1145, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,41,40,51,49,57,47],
[33,0,44,40,49,28,51,45],
[39,36,0,41,53,41,45,32],
[40,40,39,0,48,35,43,38],
[29,31,27,32,0,33,51,32],
[31,52,39,45,47,0,59,43],
[23,29,35,37,29,21,0,28],
[33,35,48,42,48,37,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1146, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,32,35,34,31,37,36],
[53,0,40,43,44,42,44,47],
[48,40,0,48,40,45,45,42],
[45,37,32,0,35,35,36,38],
[46,36,40,45,0,41,44,45],
[49,38,35,45,39,0,43,41],
[43,36,35,44,36,37,0,38],
[44,33,38,42,35,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1147, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,30,51,40,45,41,51],
[25,0,29,36,23,35,40,37],
[50,51,0,51,40,46,39,45],
[29,44,29,0,36,39,36,31],
[40,57,40,44,0,43,47,44],
[35,45,34,41,37,0,38,39],
[39,40,41,44,33,42,0,40],
[29,43,35,49,36,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1148, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,45,37,53,45,45,45],
[17,0,26,27,34,15,26,24],
[35,54,0,35,42,36,38,32],
[43,53,45,0,49,34,53,41],
[27,46,38,31,0,17,40,42],
[35,65,44,46,63,0,63,45],
[35,54,42,27,40,17,0,32],
[35,56,48,39,38,35,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1149, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,40,39,39,34,48],
[41,0,45,49,43,42,38,47],
[41,35,0,48,37,40,37,36],
[40,31,32,0,34,37,36,39],
[41,37,43,46,0,40,40,47],
[41,38,40,43,40,0,39,43],
[46,42,43,44,40,41,0,47],
[32,33,44,41,33,37,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1150, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,41,44,43,40,32],
[44,0,44,52,49,44,38,46],
[45,36,0,41,40,43,34,46],
[39,28,39,0,40,33,31,37],
[36,31,40,40,0,44,36,33],
[37,36,37,47,36,0,42,44],
[40,42,46,49,44,38,0,43],
[48,34,34,43,47,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1151, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,38,40,27,32,28],
[44,0,32,33,34,41,38,33],
[45,48,0,41,39,46,42,37],
[42,47,39,0,36,45,46,34],
[40,46,41,44,0,42,44,37],
[53,39,34,35,38,0,40,43],
[48,42,38,34,36,40,0,36],
[52,47,43,46,43,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1152, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,31,33,35,32,29,31],
[52,0,46,47,38,39,39,42],
[49,34,0,36,42,39,39,39],
[47,33,44,0,34,37,47,35],
[45,42,38,46,0,37,42,37],
[48,41,41,43,43,0,54,37],
[51,41,41,33,38,26,0,31],
[49,38,41,45,43,43,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1153, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,21,44,30,34,31],
[29,0,45,24,40,43,37,33],
[29,35,0,31,42,40,39,37],
[59,56,49,0,54,54,35,62],
[36,40,38,26,0,35,28,31],
[50,37,40,26,45,0,41,34],
[46,43,41,45,52,39,0,49],
[49,47,43,18,49,46,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1154, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,43,38,45,41,38],
[38,0,37,37,40,47,41,45],
[40,43,0,44,43,51,42,50],
[37,43,36,0,33,38,39,46],
[42,40,37,47,0,47,46,43],
[35,33,29,42,33,0,35,38],
[39,39,38,41,34,45,0,42],
[42,35,30,34,37,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1155, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,47,43,43,25,44,36],
[49,0,49,39,51,37,49,41],
[33,31,0,35,46,33,46,33],
[37,41,45,0,49,37,49,39],
[37,29,34,31,0,29,41,31],
[55,43,47,43,51,0,47,40],
[36,31,34,31,39,33,0,27],
[44,39,47,41,49,40,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1156, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,31,31,33,36,37],
[45,0,42,32,35,36,40,40],
[39,38,0,32,46,27,42,32],
[49,48,48,0,45,41,39,41],
[49,45,34,35,0,35,49,36],
[47,44,53,39,45,0,46,40],
[44,40,38,41,31,34,0,34],
[43,40,48,39,44,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1157, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,42,40,43,53,46],
[38,0,44,43,44,44,44,40],
[32,36,0,39,35,43,41,44],
[38,37,41,0,38,44,46,37],
[40,36,45,42,0,38,43,47],
[37,36,37,36,42,0,43,40],
[27,36,39,34,37,37,0,37],
[34,40,36,43,33,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1158, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,40,43,44,41,43],
[36,0,42,35,39,41,34,32],
[41,38,0,33,37,42,43,37],
[40,45,47,0,43,47,43,43],
[37,41,43,37,0,49,36,44],
[36,39,38,33,31,0,32,33],
[39,46,37,37,44,48,0,42],
[37,48,43,37,36,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1159, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,39,48,44,45,41],
[38,0,41,40,41,39,44,41],
[41,39,0,36,41,45,44,34],
[41,40,44,0,47,45,44,42],
[32,39,39,33,0,47,41,32],
[36,41,35,35,33,0,45,36],
[35,36,36,36,39,35,0,40],
[39,39,46,38,48,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1160, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,47,40,28,25,36,29],
[53,0,41,31,28,17,55,24],
[33,39,0,29,33,27,45,39],
[40,49,51,0,35,29,54,48],
[52,52,47,45,0,40,51,42],
[55,63,53,51,40,0,60,50],
[44,25,35,26,29,20,0,28],
[51,56,41,32,38,30,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1161, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,48,40,49,39,51,46],
[41,0,44,44,47,34,47,45],
[32,36,0,35,40,38,40,34],
[40,36,45,0,46,45,51,41],
[31,33,40,34,0,35,38,33],
[41,46,42,35,45,0,47,38],
[29,33,40,29,42,33,0,30],
[34,35,46,39,47,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1162, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,42,42,44,37,36],
[42,0,46,44,35,46,36,46],
[37,34,0,42,37,42,32,39],
[38,36,38,0,44,56,39,47],
[38,45,43,36,0,53,38,46],
[36,34,38,24,27,0,29,33],
[43,44,48,41,42,51,0,36],
[44,34,41,33,34,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1163, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,33,28,38,37,42],
[44,0,44,39,35,42,43,41],
[43,36,0,41,36,46,41,46],
[47,41,39,0,35,43,40,44],
[52,45,44,45,0,41,39,45],
[42,38,34,37,39,0,35,37],
[43,37,39,40,41,45,0,42],
[38,39,34,36,35,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1164, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,35,11,33,23,35,22],
[47,0,22,47,47,34,59,49],
[45,58,0,35,56,45,68,47],
[69,33,45,0,80,55,80,47],
[47,33,24,0,0,22,25,12],
[57,46,35,25,58,0,60,47],
[45,21,12,0,55,20,0,10],
[58,31,33,33,68,33,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1165, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,51,45,34,41,37,38],
[35,0,48,42,36,39,43,36],
[29,32,0,33,28,28,36,27],
[35,38,47,0,28,35,31,34],
[46,44,52,52,0,37,46,43],
[39,41,52,45,43,0,43,38],
[43,37,44,49,34,37,0,39],
[42,44,53,46,37,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1166, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,38,40,39,44,38,38],
[30,0,42,40,38,42,38,32],
[42,38,0,37,40,38,43,36],
[40,40,43,0,33,40,41,36],
[41,42,40,47,0,45,42,41],
[36,38,42,40,35,0,36,31],
[42,42,37,39,38,44,0,40],
[42,48,44,44,39,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1167, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,40,40,37,41,43],
[43,0,38,36,40,39,38,41],
[40,42,0,40,46,42,37,44],
[40,44,40,0,47,36,39,48],
[40,40,34,33,0,33,38,44],
[43,41,38,44,47,0,38,45],
[39,42,43,41,42,42,0,45],
[37,39,36,32,36,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1168, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,40,32,49,36,36],
[49,0,49,43,40,53,56,42],
[45,31,0,49,42,41,49,51],
[40,37,31,0,46,43,42,39],
[48,40,38,34,0,45,47,41],
[31,27,39,37,35,0,35,40],
[44,24,31,38,33,45,0,35],
[44,38,29,41,39,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1169, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,19,36,26,59,19,25],
[54,0,40,40,40,63,40,40],
[61,40,0,42,40,55,49,46],
[44,40,38,0,47,56,55,47],
[54,40,40,33,0,48,49,39],
[21,17,25,24,32,0,15,31],
[61,40,31,25,31,65,0,41],
[55,40,34,33,41,49,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1170, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,40,43,37,45,36],
[41,0,39,40,35,43,42,31],
[38,41,0,39,39,42,37,33],
[40,40,41,0,38,37,43,41],
[37,45,41,42,0,44,42,48],
[43,37,38,43,36,0,42,36],
[35,38,43,37,38,38,0,36],
[44,49,47,39,32,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1171, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,50,41,40,45,46],
[39,0,50,47,42,39,49,45],
[32,30,0,41,41,39,46,46],
[30,33,39,0,37,35,43,30],
[39,38,39,43,0,36,41,41],
[40,41,41,45,44,0,46,39],
[35,31,34,37,39,34,0,31],
[34,35,34,50,39,41,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1172, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,40,44,33,33,40,36],
[47,0,43,50,40,41,48,50],
[40,37,0,50,38,39,45,42],
[36,30,30,0,27,39,39,32],
[47,40,42,53,0,42,50,40],
[47,39,41,41,38,0,43,45],
[40,32,35,41,30,37,0,40],
[44,30,38,48,40,35,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1173, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,32,28,42,34,47,34],
[44,0,27,42,31,30,39,41],
[48,53,0,38,47,49,55,40],
[52,38,42,0,41,36,40,30],
[38,49,33,39,0,34,45,40],
[46,50,31,44,46,0,46,38],
[33,41,25,40,35,34,0,30],
[46,39,40,50,40,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1174, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,35,21,25,30,32],
[46,0,46,54,52,38,37,41],
[46,34,0,47,39,45,37,47],
[45,26,33,0,22,28,27,30],
[59,28,41,58,0,41,42,38],
[55,42,35,52,39,0,45,43],
[50,43,43,53,38,35,0,40],
[48,39,33,50,42,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1175, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,35,41,31,36,41],
[38,0,36,33,27,30,37,32],
[39,44,0,35,31,31,36,34],
[45,47,45,0,40,40,33,41],
[39,53,49,40,0,35,38,43],
[49,50,49,40,45,0,44,40],
[44,43,44,47,42,36,0,34],
[39,48,46,39,37,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1176, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,49,43,40,33,39],
[45,0,37,50,56,44,42,47],
[42,43,0,41,51,43,39,40],
[31,30,39,0,45,40,30,39],
[37,24,29,35,0,37,27,43],
[40,36,37,40,43,0,33,42],
[47,38,41,50,53,47,0,43],
[41,33,40,41,37,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1177, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,48,42,39,39,43],
[35,0,33,37,29,34,37,42],
[39,47,0,41,36,41,40,40],
[32,43,39,0,40,41,39,40],
[38,51,44,40,0,42,43,44],
[41,46,39,39,38,0,41,45],
[41,43,40,41,37,39,0,43],
[37,38,40,40,36,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1178, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,47,39,46,43,45,42],
[36,0,45,42,50,52,48,40],
[33,35,0,37,39,43,47,41],
[41,38,43,0,48,51,45,40],
[34,30,41,32,0,44,42,36],
[37,28,37,29,36,0,38,32],
[35,32,33,35,38,42,0,37],
[38,40,39,40,44,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1179, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,40,43,34,36,52],
[37,0,35,38,34,33,38,46],
[46,45,0,45,39,34,41,48],
[40,42,35,0,41,40,42,45],
[37,46,41,39,0,39,41,43],
[46,47,46,40,41,0,42,51],
[44,42,39,38,39,38,0,50],
[28,34,32,35,37,29,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1180, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,58,53,46,36,39,51],
[32,0,58,45,43,31,45,47],
[22,22,0,34,31,23,27,53],
[27,35,46,0,43,29,35,48],
[34,37,49,37,0,28,33,46],
[44,49,57,51,52,0,36,47],
[41,35,53,45,47,44,0,51],
[29,33,27,32,34,33,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1181, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,41,38,47,40,42],
[40,0,45,43,37,51,48,32],
[43,35,0,46,32,61,57,48],
[39,37,34,0,35,37,40,39],
[42,43,48,45,0,56,56,39],
[33,29,19,43,24,0,42,24],
[40,32,23,40,24,38,0,35],
[38,48,32,41,41,56,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1182, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,44,34,43,43,43],
[35,0,43,43,40,44,42,39],
[40,37,0,35,36,40,38,37],
[36,37,45,0,37,43,39,42],
[46,40,44,43,0,50,43,46],
[37,36,40,37,30,0,35,39],
[37,38,42,41,37,45,0,41],
[37,41,43,38,34,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1183, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,50,39,36,51,48,38],
[48,0,48,45,34,55,61,42],
[30,32,0,46,35,44,44,38],
[41,35,34,0,46,54,53,52],
[44,46,45,34,0,57,51,32],
[29,25,36,26,23,0,29,13],
[32,19,36,27,29,51,0,32],
[42,38,42,28,48,67,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1184, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,40,47,41,45,40],
[39,0,53,45,53,38,52,39],
[42,27,0,30,37,33,41,34],
[40,35,50,0,35,45,53,40],
[33,27,43,45,0,31,38,31],
[39,42,47,35,49,0,40,35],
[35,28,39,27,42,40,0,23],
[40,41,46,40,49,45,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1185, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,18,31,35,28,24,31],
[52,0,34,37,31,38,38,42],
[62,46,0,44,42,36,37,55],
[49,43,36,0,34,38,30,45],
[45,49,38,46,0,51,47,55],
[52,42,44,42,29,0,40,44],
[56,42,43,50,33,40,0,49],
[49,38,25,35,25,36,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1186, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,33,27,45,41,38],
[33,0,39,32,29,37,44,40],
[36,41,0,38,41,39,58,45],
[47,48,42,0,34,37,51,46],
[53,51,39,46,0,43,59,46],
[35,43,41,43,37,0,48,38],
[39,36,22,29,21,32,0,36],
[42,40,35,34,34,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1187, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,39,36,35,39,45,46],
[43,0,39,35,42,50,54,45],
[41,41,0,40,39,52,53,47],
[44,45,40,0,46,40,52,45],
[45,38,41,34,0,42,52,51],
[41,30,28,40,38,0,45,44],
[35,26,27,28,28,35,0,38],
[34,35,33,35,29,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1188, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,35,39,37,29,34,30],
[48,0,47,46,44,36,41,43],
[45,33,0,47,41,31,39,40],
[41,34,33,0,45,32,34,43],
[43,36,39,35,0,29,35,37],
[51,44,49,48,51,0,40,45],
[46,39,41,46,45,40,0,37],
[50,37,40,37,43,35,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1189, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,40,40,80,40,40,80],
[0,0,0,0,40,40,40,80],
[40,80,0,80,80,80,40,80],
[40,80,0,0,80,40,40,80],
[0,40,0,0,0,40,40,80],
[40,40,0,40,40,0,40,40],
[40,40,40,40,40,40,0,80],
[0,0,0,0,0,40,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1190, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,44,37,39,39,45],
[31,0,40,38,36,37,38,29],
[38,40,0,46,36,36,36,35],
[36,42,34,0,37,34,40,39],
[43,44,44,43,0,45,38,42],
[41,43,44,46,35,0,36,43],
[41,42,44,40,42,44,0,44],
[35,51,45,41,38,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1191, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,38,37,40,49,38],
[45,0,50,42,46,40,50,53],
[42,30,0,30,34,28,40,34],
[42,38,50,0,43,42,46,42],
[43,34,46,37,0,35,49,44],
[40,40,52,38,45,0,44,44],
[31,30,40,34,31,36,0,38],
[42,27,46,38,36,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1192, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,36,58,46,58,23,45],
[36,0,36,59,23,58,24,35],
[44,44,0,46,34,56,34,44],
[22,21,34,0,32,45,33,33],
[34,57,46,48,0,45,35,57],
[22,22,24,35,35,0,24,33],
[57,56,46,47,45,56,0,33],
[35,45,36,47,23,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1193, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,40,50,31,40,51,40],
[50,0,51,41,40,39,40,29],
[40,29,0,41,40,29,40,19],
[30,39,39,0,30,29,30,19],
[49,40,40,50,0,19,20,29],
[40,41,51,51,61,0,30,31],
[29,40,40,50,60,50,0,40],
[40,51,61,61,51,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1194, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,39,36,35,38,33,29],
[49,0,48,45,40,43,49,34],
[41,32,0,35,32,35,37,31],
[44,35,45,0,38,48,41,45],
[45,40,48,42,0,47,40,39],
[42,37,45,32,33,0,34,34],
[47,31,43,39,40,46,0,42],
[51,46,49,35,41,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1195, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,37,31,39,40,41],
[43,0,44,36,28,35,32,47],
[37,36,0,28,32,31,26,38],
[43,44,52,0,41,46,36,58],
[49,52,48,39,0,44,34,50],
[41,45,49,34,36,0,37,45],
[40,48,54,44,46,43,0,50],
[39,33,42,22,30,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1196, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,36,41,41,36,43],
[39,0,33,34,34,29,35,39],
[43,47,0,33,44,39,41,44],
[44,46,47,0,49,44,40,46],
[39,46,36,31,0,36,35,40],
[39,51,41,36,44,0,45,48],
[44,45,39,40,45,35,0,46],
[37,41,36,34,40,32,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1197, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,46,43,38,47,43],
[38,0,47,44,42,41,38,37],
[34,33,0,30,39,36,36,36],
[34,36,50,0,39,41,41,37],
[37,38,41,41,0,39,39,32],
[42,39,44,39,41,0,42,39],
[33,42,44,39,41,38,0,40],
[37,43,44,43,48,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1198, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,55,51,55,41,47],
[41,0,28,45,30,49,50,58],
[41,52,0,54,25,72,52,60],
[25,35,26,0,39,42,34,58],
[29,50,55,41,0,55,49,57],
[25,31,8,38,25,0,24,52],
[39,30,28,46,31,56,0,44],
[33,22,20,22,23,28,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1199, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,21,19,27,27,20,26],
[37,0,25,29,42,34,38,39],
[59,55,0,43,42,41,40,49],
[61,51,37,0,33,41,40,50],
[53,38,38,47,0,38,43,27],
[53,46,39,39,42,0,28,35],
[60,42,40,40,37,52,0,50],
[54,41,31,30,53,45,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1200, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,80,80,40,80,80],
[0,0,0,0,0,0,0,40],
[0,80,0,40,80,0,0,40],
[0,80,40,0,40,40,0,40],
[0,80,0,40,0,0,0,40],
[40,80,80,40,80,0,40,40],
[0,80,80,80,80,40,0,80],
[0,40,40,40,40,40,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1201, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,33,39,31,48,43,37],
[42,0,48,44,36,49,41,38],
[47,32,0,38,45,44,45,33],
[41,36,42,0,37,41,47,32],
[49,44,35,43,0,48,40,40],
[32,31,36,39,32,0,40,34],
[37,39,35,33,40,40,0,34],
[43,42,47,48,40,46,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1202, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,44,34,36,36,34,53],
[51,0,50,60,33,35,51,62],
[36,30,0,36,48,30,27,47],
[46,20,44,0,38,29,33,47],
[44,47,32,42,0,47,51,55],
[44,45,50,51,33,0,69,42],
[46,29,53,47,29,11,0,38],
[27,18,33,33,25,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1203, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,39,32,35,38,42],
[44,0,43,43,37,41,36,46],
[43,37,0,40,40,42,36,48],
[41,37,40,0,34,32,42,38],
[48,43,40,46,0,49,45,42],
[45,39,38,48,31,0,36,53],
[42,44,44,38,35,44,0,49],
[38,34,32,42,38,27,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1204, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,42,42,38,39,35],
[38,0,44,43,36,32,44,40],
[41,36,0,46,38,39,41,38],
[38,37,34,0,34,27,39,38],
[38,44,42,46,0,31,45,33],
[42,48,41,53,49,0,47,40],
[41,36,39,41,35,33,0,35],
[45,40,42,42,47,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1205, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,51,56,39,44,49,44],
[27,0,44,43,31,45,42,35],
[29,36,0,36,40,35,46,38],
[24,37,44,0,33,41,37,36],
[41,49,40,47,0,45,32,46],
[36,35,45,39,35,0,33,43],
[31,38,34,43,48,47,0,49],
[36,45,42,44,34,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1206, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,40,46,45,46,48],
[31,0,44,29,35,38,37,44],
[33,36,0,43,42,40,46,36],
[40,51,37,0,42,35,42,48],
[34,45,38,38,0,38,46,44],
[35,42,40,45,42,0,40,37],
[34,43,34,38,34,40,0,37],
[32,36,44,32,36,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1207, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,50,34,42,36,42,48],
[43,0,51,40,44,25,49,42],
[30,29,0,33,36,18,22,29],
[46,40,47,0,33,34,27,28],
[38,36,44,47,0,23,29,31],
[44,55,62,46,57,0,35,44],
[38,31,58,53,51,45,0,31],
[32,38,51,52,49,36,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1208, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,31,30,40,42,37,48],
[47,0,43,40,47,47,45,44],
[49,37,0,48,41,43,42,46],
[50,40,32,0,36,42,35,45],
[40,33,39,44,0,43,44,42],
[38,33,37,38,37,0,40,47],
[43,35,38,45,36,40,0,40],
[32,36,34,35,38,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1209, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,45,41,45,50,38],
[50,0,47,44,39,44,56,51],
[41,33,0,35,35,48,37,31],
[35,36,45,0,42,52,42,47],
[39,41,45,38,0,45,38,40],
[35,36,32,28,35,0,37,38],
[30,24,43,38,42,43,0,36],
[42,29,49,33,40,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1210, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,46,25,45,36,38,37],
[49,0,26,23,45,33,42,33],
[34,54,0,37,59,24,44,36],
[55,57,43,0,57,34,52,44],
[35,35,21,23,0,21,31,17],
[44,47,56,46,59,0,46,35],
[42,38,36,28,49,34,0,29],
[43,47,44,36,63,45,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1211, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,31,48,41,40,47,31],
[42,0,51,42,49,37,31,39],
[49,29,0,47,33,47,35,36],
[32,38,33,0,43,37,35,30],
[39,31,47,37,0,40,30,35],
[40,43,33,43,40,0,36,46],
[33,49,45,45,50,44,0,40],
[49,41,44,50,45,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1212, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,48,44,39,34,44,42],
[35,0,42,49,35,33,40,36],
[32,38,0,39,31,38,40,32],
[36,31,41,0,32,29,31,34],
[41,45,49,48,0,42,40,34],
[46,47,42,51,38,0,47,46],
[36,40,40,49,40,33,0,32],
[38,44,48,46,46,34,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1213, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,25,35,32,38,29,40],
[41,0,27,38,34,34,33,39],
[55,53,0,40,49,48,41,49],
[45,42,40,0,46,39,38,47],
[48,46,31,34,0,39,31,42],
[42,46,32,41,41,0,34,49],
[51,47,39,42,49,46,0,45],
[40,41,31,33,38,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1214, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,29,43,39,39,42],
[40,0,42,33,41,39,39,48],
[43,38,0,39,46,41,32,46],
[51,47,41,0,37,47,42,47],
[37,39,34,43,0,39,37,46],
[41,41,39,33,41,0,36,46],
[41,41,48,38,43,44,0,45],
[38,32,34,33,34,34,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1215, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,35,42,41,36,46],
[36,0,48,37,42,38,39,38],
[39,32,0,36,42,38,35,39],
[45,43,44,0,48,39,41,47],
[38,38,38,32,0,35,33,37],
[39,42,42,41,45,0,36,43],
[44,41,45,39,47,44,0,45],
[34,42,41,33,43,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1216, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,31,31,27,32,29,20],
[47,0,46,40,40,46,39,33],
[49,34,0,31,35,38,30,25],
[49,40,49,0,36,49,44,37],
[53,40,45,44,0,48,47,42],
[48,34,42,31,32,0,34,31],
[51,41,50,36,33,46,0,35],
[60,47,55,43,38,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1217, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,29,48,40,36,46,41],
[40,0,35,47,41,41,40,43],
[51,45,0,48,46,34,43,48],
[32,33,32,0,31,36,24,39],
[40,39,34,49,0,33,36,43],
[44,39,46,44,47,0,40,46],
[34,40,37,56,44,40,0,47],
[39,37,32,41,37,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1218, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,20,40,40,40,20],
[40,0,40,20,40,40,40,20],
[40,40,0,20,40,60,40,0],
[60,60,60,0,60,60,60,40],
[40,40,40,20,0,20,40,0],
[40,40,20,20,60,0,60,20],
[40,40,40,20,40,20,0,40],
[60,60,80,40,80,60,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1219, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,38,27,26,27,39],
[48,0,44,47,46,37,47,48],
[48,36,0,39,37,28,31,37],
[42,33,41,0,40,34,31,37],
[53,34,43,40,0,33,28,35],
[54,43,52,46,47,0,37,47],
[53,33,49,49,52,43,0,48],
[41,32,43,43,45,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1220, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,42,45,39,44,48,43],
[33,0,33,37,39,33,37,37],
[38,47,0,45,41,43,43,41],
[35,43,35,0,41,43,44,38],
[41,41,39,39,0,43,46,36],
[36,47,37,37,37,0,46,37],
[32,43,37,36,34,34,0,37],
[37,43,39,42,44,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1221, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,32,40,42,48,45,38],
[35,0,30,30,37,63,26,32],
[48,50,0,38,46,49,33,36],
[40,50,42,0,50,47,39,35],
[38,43,34,30,0,49,32,24],
[32,17,31,33,31,0,28,31],
[35,54,47,41,48,52,0,43],
[42,48,44,45,56,49,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1222, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,28,38,46,27,27,40],
[44,0,37,45,46,38,37,45],
[52,43,0,43,45,33,44,48],
[42,35,37,0,41,24,31,35],
[34,34,35,39,0,32,28,48],
[53,42,47,56,48,0,51,36],
[53,43,36,49,52,29,0,39],
[40,35,32,45,32,44,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1223, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,43,45,38,33,42,31],
[47,0,58,43,50,41,45,39],
[37,22,0,39,41,33,32,39],
[35,37,41,0,42,31,43,29],
[42,30,39,38,0,32,46,27],
[47,39,47,49,48,0,47,40],
[38,35,48,37,34,33,0,36],
[49,41,41,51,53,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1224, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,38,42,48,47,41],
[42,0,41,39,35,39,40,39],
[44,39,0,35,42,42,49,40],
[42,41,45,0,45,49,44,40],
[38,45,38,35,0,45,42,38],
[32,41,38,31,35,0,45,34],
[33,40,31,36,38,35,0,39],
[39,41,40,40,42,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1225, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,37,39,40,49,42],
[38,0,33,38,37,42,41,39],
[37,47,0,43,41,45,42,42],
[43,42,37,0,41,44,44,44],
[41,43,39,39,0,43,43,48],
[40,38,35,36,37,0,49,47],
[31,39,38,36,37,31,0,36],
[38,41,38,36,32,33,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1226, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,44,45,49,46,43],
[38,0,30,41,34,54,38,35],
[42,50,0,44,42,55,42,37],
[36,39,36,0,36,49,44,39],
[35,46,38,44,0,52,44,39],
[31,26,25,31,28,0,32,29],
[34,42,38,36,36,48,0,33],
[37,45,43,41,41,51,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1227, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,39,43,49,37,37],
[41,0,47,39,36,43,45,46],
[37,33,0,28,31,38,37,33],
[41,41,52,0,36,51,36,43],
[37,44,49,44,0,37,41,43],
[31,37,42,29,43,0,41,36],
[43,35,43,44,39,39,0,37],
[43,34,47,37,37,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1228, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,40,42,36,37,42],
[41,0,42,41,46,37,40,38],
[39,38,0,39,42,42,35,41],
[40,39,41,0,44,36,42,44],
[38,34,38,36,0,37,41,41],
[44,43,38,44,43,0,40,48],
[43,40,45,38,39,40,0,45],
[38,42,39,36,39,32,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1229, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,48,49,38,48,46,50],
[30,0,44,27,30,34,28,37],
[32,36,0,38,30,42,31,40],
[31,53,42,0,40,47,42,51],
[42,50,50,40,0,42,42,43],
[32,46,38,33,38,0,42,51],
[34,52,49,38,38,38,0,43],
[30,43,40,29,37,29,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1230, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,37,43,40,40,44,39],
[35,0,40,44,40,43,39,39],
[43,40,0,44,40,39,38,36],
[37,36,36,0,36,34,36,37],
[40,40,40,44,0,41,46,38],
[40,37,41,46,39,0,37,40],
[36,41,42,44,34,43,0,40],
[41,41,44,43,42,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1231, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,52,38,49,46,44,41],
[37,0,48,39,49,42,46,42],
[28,32,0,38,37,34,36,36],
[42,41,42,0,49,38,46,48],
[31,31,43,31,0,35,40,39],
[34,38,46,42,45,0,45,40],
[36,34,44,34,40,35,0,33],
[39,38,44,32,41,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1232, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,19,30,29,47,25,41],
[50,0,37,38,31,43,42,39],
[61,43,0,37,48,61,55,45],
[50,42,43,0,37,49,48,48],
[51,49,32,43,0,46,35,43],
[33,37,19,31,34,0,42,37],
[55,38,25,32,45,38,0,49],
[39,41,35,32,37,43,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1233, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,42,48,49,40,38,48],
[45,0,39,46,46,35,37,43],
[38,41,0,44,34,30,40,38],
[32,34,36,0,36,30,33,39],
[31,34,46,44,0,34,36,41],
[40,45,50,50,46,0,43,47],
[42,43,40,47,44,37,0,44],
[32,37,42,41,39,33,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1234, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,41,41,53,43,38],
[38,0,39,38,36,35,39,29],
[43,41,0,48,59,42,37,41],
[39,42,32,0,37,35,36,36],
[39,44,21,43,0,47,44,45],
[27,45,38,45,33,0,33,41],
[37,41,43,44,36,47,0,38],
[42,51,39,44,35,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1235, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,39,44,39,39,39],
[38,0,39,39,40,43,37,38],
[31,41,0,38,39,35,40,35],
[41,41,42,0,41,36,38,36],
[36,40,41,39,0,35,42,38],
[41,37,45,44,45,0,46,41],
[41,43,40,42,38,34,0,36],
[41,42,45,44,42,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1236, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,35,49,39,43,37],
[46,0,47,36,53,45,45,37],
[37,33,0,35,45,40,36,35],
[45,44,45,0,56,46,40,46],
[31,27,35,24,0,37,31,31],
[41,35,40,34,43,0,46,40],
[37,35,44,40,49,34,0,35],
[43,43,45,34,49,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1237, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,38,39,36,40,37],
[45,0,46,45,42,45,39,48],
[40,34,0,38,40,42,46,39],
[42,35,42,0,46,43,37,45],
[41,38,40,34,0,39,38,42],
[44,35,38,37,41,0,41,49],
[40,41,34,43,42,39,0,43],
[43,32,41,35,38,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1238, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,35,37,36,36,43],
[45,0,33,42,33,36,36,39],
[50,47,0,47,37,43,44,47],
[45,38,33,0,41,33,35,43],
[43,47,43,39,0,45,36,42],
[44,44,37,47,35,0,34,40],
[44,44,36,45,44,46,0,45],
[37,41,33,37,38,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1239, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,80,53,80,53,27,53],
[54,0,80,80,80,27,54,54],
[0,0,0,0,80,27,27,27],
[27,0,80,0,80,27,54,54],
[0,0,0,0,0,0,0,0],
[27,53,53,53,80,0,54,27],
[53,26,53,26,80,26,0,53],
[27,26,53,26,80,53,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1240, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,36,39,39,35,43,35],
[31,0,30,26,33,36,30,32],
[44,50,0,37,43,41,36,42],
[41,54,43,0,44,53,37,37],
[41,47,37,36,0,42,35,39],
[45,44,39,27,38,0,35,37],
[37,50,44,43,45,45,0,39],
[45,48,38,43,41,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1241, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,41,43,38,39,42],
[39,0,49,45,43,44,43,34],
[31,31,0,36,35,34,34,32],
[39,35,44,0,36,36,36,35],
[37,37,45,44,0,39,41,39],
[42,36,46,44,41,0,27,33],
[41,37,46,44,39,53,0,45],
[38,46,48,45,41,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1242, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,41,44,40,44,44,38],
[35,0,41,39,38,34,39,40],
[39,39,0,37,41,39,29,36],
[36,41,43,0,38,38,33,31],
[40,42,39,42,0,47,45,41],
[36,46,41,42,33,0,44,39],
[36,41,51,47,35,36,0,39],
[42,40,44,49,39,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1243, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,28,43,43,36,39,40],
[45,0,44,39,44,42,36,40],
[52,36,0,37,51,41,48,43],
[37,41,43,0,41,47,42,44],
[37,36,29,39,0,47,36,33],
[44,38,39,33,33,0,38,39],
[41,44,32,38,44,42,0,42],
[40,40,37,36,47,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1244, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,46,41,37,39,28],
[40,0,41,39,42,40,40,35],
[41,39,0,45,41,33,37,43],
[34,41,35,0,43,30,32,32],
[39,38,39,37,0,42,38,36],
[43,40,47,50,38,0,44,35],
[41,40,43,48,42,36,0,39],
[52,45,37,48,44,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1245, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,43,42,43,47,38],
[38,0,38,41,42,43,45,41],
[34,42,0,41,42,38,46,34],
[37,39,39,0,39,40,44,39],
[38,38,38,41,0,34,48,45],
[37,37,42,40,46,0,44,42],
[33,35,34,36,32,36,0,38],
[42,39,46,41,35,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1246, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,39,36,40,39,33],
[43,0,49,42,46,48,40,43],
[45,31,0,42,39,36,30,34],
[41,38,38,0,44,29,32,31],
[44,34,41,36,0,45,37,40],
[40,32,44,51,35,0,47,40],
[41,40,50,48,43,33,0,35],
[47,37,46,49,40,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1247, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,33,40,39,32,34],
[44,0,30,35,37,41,37,42],
[37,50,0,39,36,43,31,46],
[47,45,41,0,39,48,44,42],
[40,43,44,41,0,40,35,35],
[41,39,37,32,40,0,25,36],
[48,43,49,36,45,55,0,45],
[46,38,34,38,45,44,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1248, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,42,49,40,38,50,50],
[30,0,37,35,40,34,39,39],
[38,43,0,37,32,44,37,31],
[31,45,43,0,41,43,39,31],
[40,40,48,39,0,42,41,29],
[42,46,36,37,38,0,35,34],
[30,41,43,41,39,45,0,30],
[30,41,49,49,51,46,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1249, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,49,40,45,41,41],
[40,0,39,44,38,36,36,38],
[38,41,0,47,34,38,30,36],
[31,36,33,0,36,27,31,35],
[40,42,46,44,0,40,45,38],
[35,44,42,53,40,0,40,36],
[39,44,50,49,35,40,0,42],
[39,42,44,45,42,44,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1250, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,44,44,35,36,38],
[39,0,36,40,41,43,36,38],
[38,44,0,40,42,39,40,43],
[36,40,40,0,35,31,34,35],
[36,39,38,45,0,40,34,43],
[45,37,41,49,40,0,38,40],
[44,44,40,46,46,42,0,44],
[42,42,37,45,37,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1251, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,46,49,39,44,46,58],
[26,0,42,22,43,46,27,44],
[34,38,0,48,33,42,41,43],
[31,58,32,0,45,39,30,46],
[41,37,47,35,0,38,45,33],
[36,34,38,41,42,0,38,53],
[34,53,39,50,35,42,0,61],
[22,36,37,34,47,27,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1252, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,46,40,51,39,44],
[32,0,37,50,42,42,43,47],
[36,43,0,50,46,32,46,47],
[34,30,30,0,35,31,39,41],
[40,38,34,45,0,44,39,47],
[29,38,48,49,36,0,35,48],
[41,37,34,41,41,45,0,42],
[36,33,33,39,33,32,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1253, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,50,46,52,44,36],
[44,0,39,46,46,45,41,46],
[39,41,0,38,44,47,41,43],
[30,34,42,0,41,40,45,49],
[34,34,36,39,0,49,41,40],
[28,35,33,40,31,0,38,47],
[36,39,39,35,39,42,0,45],
[44,34,37,31,40,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1254, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,44,44,45,41,45],
[42,0,51,37,42,41,35,39],
[34,29,0,38,36,39,28,38],
[36,43,42,0,42,46,43,45],
[36,38,44,38,0,43,43,41],
[35,39,41,34,37,0,39,45],
[39,45,52,37,37,41,0,43],
[35,41,42,35,39,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1255, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,41,38,44,43,52],
[50,0,36,40,43,39,56,52],
[41,44,0,40,42,29,49,47],
[39,40,40,0,41,41,52,48],
[42,37,38,39,0,38,42,42],
[36,41,51,39,42,0,48,44],
[37,24,31,28,38,32,0,40],
[28,28,33,32,38,36,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1256, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,36,36,37,39,37],
[39,0,39,47,37,31,44,38],
[42,41,0,44,41,32,45,38],
[44,33,36,0,32,38,40,40],
[44,43,39,48,0,40,50,50],
[43,49,48,42,40,0,52,50],
[41,36,35,40,30,28,0,37],
[43,42,42,40,30,30,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1257, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,43,47,41,40,45],
[40,0,47,46,41,34,32,46],
[34,33,0,32,33,35,30,39],
[37,34,48,0,34,35,36,48],
[33,39,47,46,0,43,33,50],
[39,46,45,45,37,0,34,47],
[40,48,50,44,47,46,0,50],
[35,34,41,32,30,33,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1258, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,36,54,46,46,45,48],
[33,0,33,34,46,40,44,42],
[44,47,0,38,54,48,40,40],
[26,46,42,0,41,38,39,40],
[34,34,26,39,0,34,27,34],
[34,40,32,42,46,0,33,35],
[35,36,40,41,53,47,0,37],
[32,38,40,40,46,45,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1259, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,11,40,33,48,27,45],
[41,0,25,40,42,47,34,40],
[69,55,0,42,34,67,55,61],
[40,40,38,0,34,46,41,39],
[47,38,46,46,0,47,40,52],
[32,33,13,34,33,0,29,40],
[53,46,25,39,40,51,0,66],
[35,40,19,41,28,40,14,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1260, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,49,33,30,47,49,42],
[39,0,48,45,40,49,49,52],
[31,32,0,38,36,46,36,33],
[47,35,42,0,28,41,45,36],
[50,40,44,52,0,50,46,41],
[33,31,34,39,30,0,41,43],
[31,31,44,35,34,39,0,33],
[38,28,47,44,39,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1261, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,35,37,37,41,35,33],
[50,0,36,37,32,50,36,35],
[45,44,0,40,41,41,41,48],
[43,43,40,0,46,41,30,37],
[43,48,39,34,0,43,36,39],
[39,30,39,39,37,0,38,36],
[45,44,39,50,44,42,0,41],
[47,45,32,43,41,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1262, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,49,50,38,43,43],
[38,0,41,39,44,34,45,41],
[42,39,0,40,46,48,40,49],
[31,41,40,0,43,35,30,40],
[30,36,34,37,0,35,31,39],
[42,46,32,45,45,0,41,51],
[37,35,40,50,49,39,0,47],
[37,39,31,40,41,29,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1263, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,39,34,36,44,49],
[44,0,38,43,41,36,44,49],
[46,42,0,45,41,34,44,51],
[41,37,35,0,38,42,44,46],
[46,39,39,42,0,34,40,43],
[44,44,46,38,46,0,46,52],
[36,36,36,36,40,34,0,45],
[31,31,29,34,37,28,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1264, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,57,45,40,56,47,43],
[39,0,43,37,42,38,42,38],
[23,37,0,30,36,37,39,40],
[35,43,50,0,32,42,44,40],
[40,38,44,48,0,46,44,47],
[24,42,43,38,34,0,38,37],
[33,38,41,36,36,42,0,35],
[37,42,40,40,33,43,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1265, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,29,37,34,38,37],
[38,0,39,34,42,40,39,35],
[42,41,0,47,36,38,46,42],
[51,46,33,0,38,31,42,39],
[43,38,44,42,0,39,38,39],
[46,40,42,49,41,0,41,37],
[42,41,34,38,42,39,0,34],
[43,45,38,41,41,43,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1266, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,44,44,39,46,38],
[40,0,44,52,49,45,45,41],
[41,36,0,48,43,51,49,43],
[36,28,32,0,35,34,30,31],
[36,31,37,45,0,38,43,37],
[41,35,29,46,42,0,43,48],
[34,35,31,50,37,37,0,30],
[42,39,37,49,43,32,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1267, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,38,38,37,39,48,37],
[50,0,43,45,40,40,52,47],
[42,37,0,40,42,37,43,43],
[42,35,40,0,39,37,45,38],
[43,40,38,41,0,38,41,39],
[41,40,43,43,42,0,40,43],
[32,28,37,35,39,40,0,35],
[43,33,37,42,41,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1268, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,42,39,39,41,34],
[40,0,46,43,33,46,36,37],
[41,34,0,40,36,46,37,36],
[38,37,40,0,32,39,37,34],
[41,47,44,48,0,46,44,39],
[41,34,34,41,34,0,42,32],
[39,44,43,43,36,38,0,41],
[46,43,44,46,41,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1269, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,30,42,36,41,40,48],
[42,0,41,39,40,43,42,44],
[50,39,0,42,37,41,43,43],
[38,41,38,0,43,39,40,44],
[44,40,43,37,0,42,47,44],
[39,37,39,41,38,0,44,44],
[40,38,37,40,33,36,0,49],
[32,36,37,36,36,36,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1270, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,39,19,40,19,60,19],
[61,0,80,41,40,60,80,60],
[41,0,0,0,40,21,41,19],
[61,39,80,0,60,60,80,80],
[40,40,40,20,0,20,61,40],
[61,20,59,20,60,0,80,39],
[20,0,39,0,19,0,0,19],
[61,20,61,0,40,41,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1271, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,42,40,38,42,43],
[38,0,39,45,34,44,37,40],
[49,41,0,40,43,40,48,39],
[38,35,40,0,52,38,38,33],
[40,46,37,28,0,28,34,35],
[42,36,40,42,52,0,45,45],
[38,43,32,42,46,35,0,35],
[37,40,41,47,45,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1272, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,44,39,41,49,45],
[37,0,28,40,30,26,39,31],
[48,52,0,45,44,46,50,39],
[36,40,35,0,36,35,38,31],
[41,50,36,44,0,37,41,39],
[39,54,34,45,43,0,52,38],
[31,41,30,42,39,28,0,37],
[35,49,41,49,41,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1273, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,53,53,80,53,54,27],
[27,0,0,80,53,53,54,54],
[27,80,0,80,80,53,54,54],
[27,0,0,0,53,53,54,27],
[0,27,0,27,0,53,27,27],
[27,27,27,27,27,0,27,54],
[26,26,26,26,53,53,0,27],
[53,26,26,53,53,26,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1274, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,26,28,33,39,37,42],
[42,0,29,31,36,33,28,39],
[54,51,0,43,45,50,39,54],
[52,49,37,0,38,47,34,51],
[47,44,35,42,0,46,40,43],
[41,47,30,33,34,0,43,41],
[43,52,41,46,40,37,0,40],
[38,41,26,29,37,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1275, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,33,34,37,35,46,42],
[32,0,33,37,41,36,49,47],
[47,47,0,48,52,40,47,49],
[46,43,32,0,48,48,43,46],
[43,39,28,32,0,39,36,45],
[45,44,40,32,41,0,42,49],
[34,31,33,37,44,38,0,43],
[38,33,31,34,35,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1276, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,43,38,41,42,48,39],
[33,0,45,34,36,39,36,41],
[37,35,0,34,33,35,37,37],
[42,46,46,0,40,41,47,45],
[39,44,47,40,0,42,47,42],
[38,41,45,39,38,0,38,40],
[32,44,43,33,33,42,0,38],
[41,39,43,35,38,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1277, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,44,36,37,40,38],
[43,0,39,44,43,44,43,40],
[44,41,0,44,42,41,39,46],
[36,36,36,0,38,37,43,39],
[44,37,38,42,0,46,39,36],
[43,36,39,43,34,0,38,42],
[40,37,41,37,41,42,0,39],
[42,40,34,41,44,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1278, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,54,29,43,42,34],
[38,0,32,47,36,40,34,33],
[32,48,0,46,35,37,33,44],
[26,33,34,0,33,28,35,36],
[51,44,45,47,0,39,35,37],
[37,40,43,52,41,0,45,37],
[38,46,47,45,45,35,0,47],
[46,47,36,44,43,43,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1279, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,29,37,34,35,38],
[40,0,43,36,33,37,36,41],
[41,37,0,30,33,37,37,38],
[51,44,50,0,38,36,42,49],
[43,47,47,42,0,41,41,39],
[46,43,43,44,39,0,38,40],
[45,44,43,38,39,42,0,43],
[42,39,42,31,41,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1280, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,42,36,43,43,48,50],
[26,0,39,31,34,37,31,36],
[38,41,0,40,35,44,42,42],
[44,49,40,0,34,39,47,49],
[37,46,45,46,0,37,45,49],
[37,43,36,41,43,0,39,44],
[32,49,38,33,35,41,0,43],
[30,44,38,31,31,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1281, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,38,54,38,36,52,46],
[26,0,29,37,33,19,48,19],
[42,51,0,52,49,30,48,43],
[26,43,28,0,35,29,38,34],
[42,47,31,45,0,26,46,46],
[44,61,50,51,54,0,55,40],
[28,32,32,42,34,25,0,32],
[34,61,37,46,34,40,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1282, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,38,39,39,46,41,41],
[33,0,33,40,39,43,39,38],
[42,47,0,37,38,46,36,34],
[41,40,43,0,38,44,40,45],
[41,41,42,42,0,41,47,39],
[34,37,34,36,39,0,39,40],
[39,41,44,40,33,41,0,39],
[39,42,46,35,41,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1283, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,40,46,37,44,46],
[45,0,44,44,44,39,48,44],
[37,36,0,43,39,37,42,40],
[40,36,37,0,44,43,44,47],
[34,36,41,36,0,38,39,45],
[43,41,43,37,42,0,48,45],
[36,32,38,36,41,32,0,34],
[34,36,40,33,35,35,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1284, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,61,43,61,33,33],
[38,0,40,41,62,59,41,52],
[37,40,0,50,61,28,40,50],
[19,39,30,0,52,39,9,33],
[37,18,19,28,0,18,28,19],
[19,21,52,41,62,0,41,52],
[47,39,40,71,52,39,0,61],
[47,28,30,47,61,28,19,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1285, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,37,46,35,47,35,45],
[33,0,34,23,46,45,23,34],
[43,46,0,34,45,33,56,44],
[34,57,46,0,57,33,46,55],
[45,34,35,23,0,23,46,34],
[33,35,47,47,57,0,34,33],
[45,57,24,34,34,46,0,45],
[35,46,36,25,46,47,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1286, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,37,41,38,41,48],
[44,0,44,32,42,36,41,46],
[37,36,0,31,37,36,30,41],
[43,48,49,0,44,40,36,49],
[39,38,43,36,0,36,35,44],
[42,44,44,40,44,0,32,47],
[39,39,50,44,45,48,0,59],
[32,34,39,31,36,33,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1287, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,37,38,32,39,37,39],
[42,0,43,44,37,41,39,46],
[43,37,0,41,44,44,42,46],
[42,36,39,0,34,44,39,35],
[48,43,36,46,0,50,46,45],
[41,39,36,36,30,0,40,34],
[43,41,38,41,34,40,0,42],
[41,34,34,45,35,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1288, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,43,30,45,45,25,37],
[42,0,51,21,21,35,22,58],
[37,29,0,37,36,51,23,35],
[50,59,43,0,35,43,44,51],
[35,59,44,45,0,50,46,65],
[35,45,29,37,30,0,38,44],
[55,58,57,36,34,42,0,59],
[43,22,45,29,15,36,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1289, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,34,36,36,38,32,26],
[49,0,49,41,48,46,39,43],
[46,31,0,45,45,44,42,37],
[44,39,35,0,39,40,37,34],
[44,32,35,41,0,39,39,34],
[42,34,36,40,41,0,41,35],
[48,41,38,43,41,39,0,36],
[54,37,43,46,46,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1290, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,36,37,37,38,37],
[40,0,44,37,43,34,40,33],
[38,36,0,32,38,33,33,35],
[44,43,48,0,52,40,38,36],
[43,37,42,28,0,43,38,34],
[43,46,47,40,37,0,43,38],
[42,40,47,42,42,37,0,41],
[43,47,45,44,46,42,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1291, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,40,40,39,41,42],
[41,0,38,36,41,37,37,42],
[42,42,0,39,35,36,38,44],
[40,44,41,0,39,40,39,50],
[40,39,45,41,0,43,46,48],
[41,43,44,40,37,0,39,39],
[39,43,42,41,34,41,0,43],
[38,38,36,30,32,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1292, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,51,53,50,37,43],
[40,0,64,58,57,48,38,50],
[34,16,0,23,41,43,26,20],
[29,22,57,0,45,53,30,31],
[27,23,39,35,0,29,27,43],
[30,32,37,27,51,0,40,25],
[43,42,54,50,53,40,0,43],
[37,30,60,49,37,55,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1293, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,35,45,42,32,21],
[47,0,47,44,49,49,29,41],
[52,33,0,41,31,46,35,37],
[45,36,39,0,45,50,39,34],
[35,31,49,35,0,46,43,34],
[38,31,34,30,34,0,29,33],
[48,51,45,41,37,51,0,38],
[59,39,43,46,46,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1294, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,46,40,47,36,42],
[43,0,39,48,44,46,46,41],
[31,41,0,41,41,40,48,43],
[34,32,39,0,46,40,40,42],
[40,36,39,34,0,42,41,28],
[33,34,40,40,38,0,37,33],
[44,34,32,40,39,43,0,37],
[38,39,37,38,52,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1295, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,42,46,41,40,45],
[34,0,41,35,34,37,34,37],
[43,39,0,41,47,43,36,37],
[38,45,39,0,48,41,38,43],
[34,46,33,32,0,38,35,36],
[39,43,37,39,42,0,35,42],
[40,46,44,42,45,45,0,43],
[35,43,43,37,44,38,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1296, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,50,44,49,40,44],
[38,0,38,48,32,34,28,34],
[37,42,0,45,34,40,40,40],
[30,32,35,0,25,36,28,34],
[36,48,46,55,0,45,38,44],
[31,46,40,44,35,0,43,37],
[40,52,40,52,42,37,0,38],
[36,46,40,46,36,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1297, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,43,35,41,31,35],
[47,0,52,46,36,49,35,45],
[38,28,0,33,30,40,28,33],
[37,34,47,0,40,37,31,37],
[45,44,50,40,0,39,44,43],
[39,31,40,43,41,0,26,43],
[49,45,52,49,36,54,0,50],
[45,35,47,43,37,37,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1298, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,41,49,42,40,33],
[38,0,44,40,48,41,40,40],
[37,36,0,37,44,34,42,32],
[39,40,43,0,47,41,46,31],
[31,32,36,33,0,41,37,28],
[38,39,46,39,39,0,40,30],
[40,40,38,34,43,40,0,32],
[47,40,48,49,52,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1299, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,23,44,40,25,37,34],
[59,0,39,46,50,50,56,51],
[57,41,0,56,36,45,47,51],
[36,34,24,0,28,44,38,41],
[40,30,44,52,0,35,38,53],
[55,30,35,36,45,0,51,53],
[43,24,33,42,42,29,0,32],
[46,29,29,39,27,27,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1300, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,58,32,37,55,41,30],
[41,0,48,38,39,33,42,43],
[22,32,0,25,30,20,31,25],
[48,42,55,0,43,32,36,41],
[43,41,50,37,0,41,32,30],
[25,47,60,48,39,0,41,41],
[39,38,49,44,48,39,0,42],
[50,37,55,39,50,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1301, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,35,34,42,32,43],
[47,0,50,42,44,47,40,39],
[38,30,0,36,38,35,33,35],
[45,38,44,0,38,47,35,47],
[46,36,42,42,0,48,28,45],
[38,33,45,33,32,0,30,28],
[48,40,47,45,52,50,0,49],
[37,41,45,33,35,52,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1302, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,33,41,42,32,31,39],
[45,0,40,41,37,39,36,35],
[47,40,0,48,45,45,46,46],
[39,39,32,0,40,33,36,40],
[38,43,35,40,0,33,41,38],
[48,41,35,47,47,0,35,43],
[49,44,34,44,39,45,0,34],
[41,45,34,40,42,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1303, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,26,37,56,30,47,23],
[43,0,36,35,65,41,44,46],
[54,44,0,42,53,34,46,41],
[43,45,38,0,59,39,35,40],
[24,15,27,21,0,30,19,21],
[50,39,46,41,50,0,43,52],
[33,36,34,45,61,37,0,37],
[57,34,39,40,59,28,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1304, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,41,49,39,41,41],
[38,0,41,38,43,43,33,36],
[40,39,0,40,46,46,40,43],
[39,42,40,0,43,44,38,39],
[31,37,34,37,0,39,32,30],
[41,37,34,36,41,0,35,42],
[39,47,40,42,48,45,0,39],
[39,44,37,41,50,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1305, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,33,33,46,34,38,26],
[44,0,43,46,47,40,45,42],
[47,37,0,44,44,45,49,41],
[47,34,36,0,48,50,45,40],
[34,33,36,32,0,34,46,32],
[46,40,35,30,46,0,55,34],
[42,35,31,35,34,25,0,29],
[54,38,39,40,48,46,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1306, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,40,39,25,32,33,35],
[53,0,44,48,44,43,40,45],
[40,36,0,42,34,41,40,44],
[41,32,38,0,32,35,33,45],
[55,36,46,48,0,39,41,46],
[48,37,39,45,41,0,46,44],
[47,40,40,47,39,34,0,46],
[45,35,36,35,34,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1307, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,53,45,50,36,49,41],
[29,0,39,32,43,41,45,40],
[27,41,0,35,40,33,43,25],
[35,48,45,0,39,49,51,45],
[30,37,40,41,0,36,40,31],
[44,39,47,31,44,0,49,44],
[31,35,37,29,40,31,0,28],
[39,40,55,35,49,36,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1308, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,30,35,37,37,49,48],
[47,0,38,45,34,43,41,52],
[50,42,0,41,40,39,34,48],
[45,35,39,0,41,41,42,47],
[43,46,40,39,0,44,45,54],
[43,37,41,39,36,0,41,47],
[31,39,46,38,35,39,0,41],
[32,28,32,33,26,33,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1309, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,44,40,47,40,48,41],
[27,0,41,35,35,30,49,30],
[36,39,0,34,32,37,45,34],
[40,45,46,0,56,46,56,38],
[33,45,48,24,0,38,49,23],
[40,50,43,34,42,0,52,31],
[32,31,35,24,31,28,0,22],
[39,50,46,42,57,49,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1310, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,47,42,39,45,45,45],
[35,0,40,39,35,35,40,37],
[33,40,0,36,34,34,40,38],
[38,41,44,0,38,40,43,47],
[41,45,46,42,0,37,45,41],
[35,45,46,40,43,0,46,43],
[35,40,40,37,35,34,0,33],
[35,43,42,33,39,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1311, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,42,42,41,36,42],
[37,0,40,38,37,48,34,27],
[48,40,0,43,45,42,39,44],
[38,42,37,0,42,40,40,41],
[38,43,35,38,0,39,30,36],
[39,32,38,40,41,0,38,32],
[44,46,41,40,50,42,0,44],
[38,53,36,39,44,48,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1312, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,40,39,35,38,45],
[32,0,47,41,36,42,43,52],
[36,33,0,51,37,44,34,50],
[40,39,29,0,36,39,38,34],
[41,44,43,44,0,44,36,45],
[45,38,36,41,36,0,42,41],
[42,37,46,42,44,38,0,51],
[35,28,30,46,35,39,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1313, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,40,43,51,47,46],
[36,0,38,37,37,44,43,44],
[37,42,0,41,43,45,41,41],
[40,43,39,0,49,40,44,47],
[37,43,37,31,0,38,38,40],
[29,36,35,40,42,0,39,36],
[33,37,39,36,42,41,0,38],
[34,36,39,33,40,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1314, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,33,33,39,29,51],
[40,0,45,43,30,34,31,37],
[41,35,0,36,37,28,29,36],
[47,37,44,0,40,47,35,48],
[47,50,43,40,0,45,40,50],
[41,46,52,33,35,0,33,40],
[51,49,51,45,40,47,0,46],
[29,43,44,32,30,40,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1315, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,44,42,55,37,47],
[37,0,34,33,36,49,47,37],
[36,46,0,49,39,60,47,57],
[36,47,31,0,35,46,45,55],
[38,44,41,45,0,47,42,45],
[25,31,20,34,33,0,32,36],
[43,33,33,35,38,48,0,41],
[33,43,23,25,35,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1316, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,40,42,35,35,38,32],
[50,0,40,40,39,40,41,41],
[40,40,0,49,45,45,48,51],
[38,40,31,0,38,33,46,35],
[45,41,35,42,0,35,44,35],
[45,40,35,47,45,0,41,36],
[42,39,32,34,36,39,0,30],
[48,39,29,45,45,44,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1317, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,15,34,30,23,25,25],
[39,0,25,15,48,32,15,33],
[65,55,0,40,48,41,46,58],
[46,65,40,0,62,40,45,33],
[50,32,32,18,0,16,40,43],
[57,48,39,40,64,0,48,51],
[55,65,34,35,40,32,0,49],
[55,47,22,47,37,29,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1318, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,35,41,32,37,39,38],
[49,0,41,39,36,39,45,41],
[45,39,0,38,40,42,40,42],
[39,41,42,0,31,42,37,46],
[48,44,40,49,0,47,46,55],
[43,41,38,38,33,0,36,40],
[41,35,40,43,34,44,0,44],
[42,39,38,34,25,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1319, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,53,38,47,45,47],
[46,0,26,41,46,40,51,41],
[37,54,0,59,56,51,56,53],
[27,39,21,0,37,40,46,46],
[42,34,24,43,0,41,50,43],
[33,40,29,40,39,0,39,29],
[35,29,24,34,30,41,0,43],
[33,39,27,34,37,51,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1320, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,52,40,39,41,43,41],
[32,0,50,43,34,31,35,27],
[28,30,0,36,37,34,33,44],
[40,37,44,0,32,30,33,38],
[41,46,43,48,0,38,46,45],
[39,49,46,50,42,0,42,41],
[37,45,47,47,34,38,0,40],
[39,53,36,42,35,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1321, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,60,20,21,20,41,20],
[61,0,80,40,61,40,61,20],
[20,0,0,20,21,0,41,20],
[60,40,60,0,21,39,41,60],
[59,19,59,59,0,39,40,39],
[60,40,80,41,41,0,41,41],
[39,19,39,39,40,39,0,39],
[60,60,60,20,41,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1322, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,38,43,34,33,42],
[42,0,36,33,34,38,28,42],
[38,44,0,45,40,33,42,54],
[42,47,35,0,48,41,38,41],
[37,46,40,32,0,37,39,38],
[46,42,47,39,43,0,37,46],
[47,52,38,42,41,43,0,42],
[38,38,26,39,42,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1323, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,39,39,43,46,46,38],
[35,0,33,35,37,38,42,44],
[41,47,0,44,38,38,47,46],
[41,45,36,0,45,47,40,43],
[37,43,42,35,0,50,44,41],
[34,42,42,33,30,0,43,46],
[34,38,33,40,36,37,0,42],
[42,36,34,37,39,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1324, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,31,41,35,46,25],
[43,0,42,46,48,36,40,24],
[45,38,0,44,47,48,46,40],
[49,34,36,0,47,38,35,23],
[39,32,33,33,0,31,44,36],
[45,44,32,42,49,0,35,39],
[34,40,34,45,36,45,0,26],
[55,56,40,57,44,41,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1325, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,37,38,33,29,37,39],
[49,0,41,40,42,37,36,43],
[43,39,0,43,39,39,38,41],
[42,40,37,0,46,43,43,44],
[47,38,41,34,0,37,38,41],
[51,43,41,37,43,0,35,47],
[43,44,42,37,42,45,0,41],
[41,37,39,36,39,33,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1326, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,35,39,45,40,44],
[32,0,29,28,35,35,30,35],
[36,51,0,34,43,43,33,45],
[45,52,46,0,44,42,35,37],
[41,45,37,36,0,41,35,38],
[35,45,37,38,39,0,37,37],
[40,50,47,45,45,43,0,40],
[36,45,35,43,42,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1327, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,51,48,39,56,42,43],
[36,0,37,40,45,51,33,41],
[29,43,0,44,32,45,29,39],
[32,40,36,0,29,35,33,27],
[41,35,48,51,0,52,33,38],
[24,29,35,45,28,0,32,38],
[38,47,51,47,47,48,0,46],
[37,39,41,53,42,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1328, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,44,40,47,49,55,58],
[31,0,40,29,34,39,39,43],
[36,40,0,35,25,37,51,48],
[40,51,45,0,43,43,54,55],
[33,46,55,37,0,41,45,52],
[31,41,43,37,39,0,46,48],
[25,41,29,26,35,34,0,38],
[22,37,32,25,28,32,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1329, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,47,45,39,36,41],
[41,0,40,47,44,29,33,33],
[42,40,0,44,38,40,39,30],
[33,33,36,0,35,32,30,40],
[35,36,42,45,0,34,32,35],
[41,51,40,48,46,0,38,36],
[44,47,41,50,48,42,0,37],
[39,47,50,40,45,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1330, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,47,45,45,50,44,44],
[40,0,40,43,38,41,42,36],
[33,40,0,39,42,35,40,40],
[35,37,41,0,42,37,42,36],
[35,42,38,38,0,42,34,49],
[30,39,45,43,38,0,50,47],
[36,38,40,38,46,30,0,43],
[36,44,40,44,31,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1331, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,64,64,29,46,64,46,47],
[16,0,32,0,31,29,46,15],
[16,48,0,30,30,29,62,33],
[51,80,50,0,49,64,64,33],
[34,49,50,31,0,33,50,33],
[16,51,51,16,47,0,62,18],
[34,34,18,16,30,18,0,18],
[33,65,47,47,47,62,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1332, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,40,47,40,45,45],
[41,0,39,40,43,37,32,34],
[38,41,0,38,49,33,37,38],
[40,40,42,0,48,39,43,47],
[33,37,31,32,0,31,32,32],
[40,43,47,41,49,0,43,44],
[35,48,43,37,48,37,0,42],
[35,46,42,33,48,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1333, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,45,45,37,42,44,35],
[30,0,32,34,32,41,46,37],
[35,48,0,38,36,37,43,34],
[35,46,42,0,39,39,45,42],
[43,48,44,41,0,44,47,36],
[38,39,43,41,36,0,50,38],
[36,34,37,35,33,30,0,29],
[45,43,46,38,44,42,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1334, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,47,40,42,40,45,45],
[51,0,49,48,49,48,41,40],
[33,31,0,44,37,37,39,39],
[40,32,36,0,39,32,39,44],
[38,31,43,41,0,33,31,50],
[40,32,43,48,47,0,48,38],
[35,39,41,41,49,32,0,42],
[35,40,41,36,30,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1335, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,44,47,46,37,42,45],
[32,0,36,33,39,39,41,38],
[36,44,0,45,45,32,46,38],
[33,47,35,0,38,28,40,39],
[34,41,35,42,0,37,45,45],
[43,41,48,52,43,0,47,37],
[38,39,34,40,35,33,0,37],
[35,42,42,41,35,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1336, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,13,13,26,27,40,39],
[54,0,41,27,40,41,40,26],
[67,39,0,40,40,67,27,52],
[67,53,40,0,53,54,54,53],
[54,40,40,27,0,54,41,53],
[53,39,13,26,26,0,13,39],
[40,40,53,26,39,67,0,53],
[41,54,28,27,27,41,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1337, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,47,45,37,39,43,40],
[29,0,36,28,29,30,32,38],
[33,44,0,36,36,41,43,36],
[35,52,44,0,34,27,38,36],
[43,51,44,46,0,37,46,43],
[41,50,39,53,43,0,49,45],
[37,48,37,42,34,31,0,36],
[40,42,44,44,37,35,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1338, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,37,30,45,47,47,31],
[34,0,47,40,47,48,49,48],
[43,33,0,32,39,41,58,48],
[50,40,48,0,48,48,41,56],
[35,33,41,32,0,33,51,33],
[33,32,39,32,47,0,32,39],
[33,31,22,39,29,48,0,32],
[49,32,32,24,47,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1339, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,54,46,53,40,41,43],
[42,0,50,41,46,36,50,38],
[26,30,0,42,41,31,40,35],
[34,39,38,0,52,42,44,35],
[27,34,39,28,0,28,43,27],
[40,44,49,38,52,0,47,34],
[39,30,40,36,37,33,0,33],
[37,42,45,45,53,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1340, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,35,36,39,42,35],
[39,0,37,32,45,40,41,37],
[46,43,0,30,40,42,46,48],
[45,48,50,0,47,37,42,47],
[44,35,40,33,0,41,49,46],
[41,40,38,43,39,0,44,38],
[38,39,34,38,31,36,0,40],
[45,43,32,33,34,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1341, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,24,38,31,37,24],
[40,0,39,44,51,51,41,43],
[45,41,0,45,52,32,43,38],
[56,36,35,0,41,43,41,50],
[42,29,28,39,0,34,39,40],
[49,29,48,37,46,0,44,41],
[43,39,37,39,41,36,0,43],
[56,37,42,30,40,39,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1342, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,35,48,36,38,41],
[44,0,43,40,48,38,37,41],
[37,37,0,32,45,36,41,40],
[45,40,48,0,49,37,45,44],
[32,32,35,31,0,27,34,35],
[44,42,44,43,53,0,41,40],
[42,43,39,35,46,39,0,39],
[39,39,40,36,45,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1343, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,73,57,27,27,27,44,58],
[7,0,28,20,27,13,13,24],
[23,52,0,21,23,27,29,37],
[53,60,59,0,36,43,53,45],
[53,53,57,44,0,35,57,53],
[53,67,53,37,45,0,59,53],
[36,67,51,27,23,21,0,30],
[22,56,43,35,27,27,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1344, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,45,50,49,52,50,36],
[25,0,31,43,37,43,38,32],
[35,49,0,45,41,53,46,44],
[30,37,35,0,32,40,41,39],
[31,43,39,48,0,52,47,41],
[28,37,27,40,28,0,33,31],
[30,42,34,39,33,47,0,35],
[44,48,36,41,39,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1345, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,56,18,40,34,40,39],
[35,0,45,24,30,35,30,29],
[24,35,0,24,35,45,24,17],
[62,56,56,0,45,40,45,51],
[40,50,45,35,0,41,47,33],
[46,45,35,40,39,0,22,40],
[40,50,56,35,33,58,0,39],
[41,51,63,29,47,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1346, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,35,38,35,38,33,37],
[47,0,44,42,39,42,41,40],
[45,36,0,48,40,44,40,40],
[42,38,32,0,36,36,38,38],
[45,41,40,44,0,41,41,40],
[42,38,36,44,39,0,40,36],
[47,39,40,42,39,40,0,41],
[43,40,40,42,40,44,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1347, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,40,44,41,38,46,35],
[34,0,47,46,46,29,45,37],
[40,33,0,38,38,30,42,30],
[36,34,42,0,31,34,40,33],
[39,34,42,49,0,41,35,33],
[42,51,50,46,39,0,52,50],
[34,35,38,40,45,28,0,41],
[45,43,50,47,47,30,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1348, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,38,42,27,31,34,36],
[55,0,54,50,40,42,48,39],
[42,26,0,41,39,32,41,32],
[38,30,39,0,29,29,34,30],
[53,40,41,51,0,36,50,49],
[49,38,48,51,44,0,38,45],
[46,32,39,46,30,42,0,37],
[44,41,48,50,31,35,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1349, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,26,40,66,26,54,52],
[27,0,26,13,53,26,27,40],
[54,54,0,27,80,54,54,67],
[40,67,53,0,80,53,54,53],
[14,27,0,0,0,0,14,27],
[54,54,26,27,80,0,54,67],
[26,53,26,26,66,26,0,39],
[28,40,13,27,53,13,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1350, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,53,40,35,41,38,41],
[40,0,65,50,46,47,47,31],
[27,15,0,30,17,38,29,28],
[40,30,50,0,31,42,42,39],
[45,34,63,49,0,52,50,40],
[39,33,42,38,28,0,35,30],
[42,33,51,38,30,45,0,37],
[39,49,52,41,40,50,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1351, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,37,42,42,40,35],
[42,0,46,40,32,40,41,38],
[40,34,0,34,44,47,36,34],
[43,40,46,0,44,51,40,42],
[38,48,36,36,0,53,37,30],
[38,40,33,29,27,0,32,35],
[40,39,44,40,43,48,0,45],
[45,42,46,38,50,45,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1352, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,31,44,43,38,33],
[34,0,32,33,39,33,31,28],
[34,48,0,30,34,34,31,34],
[49,47,50,0,36,42,51,44],
[36,41,46,44,0,33,39,30],
[37,47,46,38,47,0,42,32],
[42,49,49,29,41,38,0,38],
[47,52,46,36,50,48,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1353, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,51,49,42,46,52],
[40,0,35,46,44,53,51,60],
[36,45,0,48,43,50,42,48],
[29,34,32,0,28,38,33,43],
[31,36,37,52,0,40,36,50],
[38,27,30,42,40,0,37,47],
[34,29,38,47,44,43,0,49],
[28,20,32,37,30,33,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1354, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,38,44,39,42,37,45],
[34,0,38,32,37,29,44,42],
[42,42,0,34,36,45,40,45],
[36,48,46,0,40,32,47,43],
[41,43,44,40,0,29,39,33],
[38,51,35,48,51,0,45,54],
[43,36,40,33,41,35,0,44],
[35,38,35,37,47,26,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1355, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,51,35,40,32,32,45],
[44,0,58,43,45,44,39,46],
[29,22,0,29,33,25,20,31],
[45,37,51,0,44,32,40,47],
[40,35,47,36,0,40,31,44],
[48,36,55,48,40,0,55,45],
[48,41,60,40,49,25,0,50],
[35,34,49,33,36,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1356, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,38,38,45,41,38],
[42,0,36,32,38,41,47,36],
[45,44,0,41,39,39,41,38],
[42,48,39,0,40,43,47,43],
[42,42,41,40,0,39,46,44],
[35,39,41,37,41,0,46,39],
[39,33,39,33,34,34,0,35],
[42,44,42,37,36,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1357, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,35,34,34,40,42,41],
[39,0,27,34,36,39,42,44],
[45,53,0,32,42,45,49,45],
[46,46,48,0,34,40,49,42],
[46,44,38,46,0,41,41,39],
[40,41,35,40,39,0,37,44],
[38,38,31,31,39,43,0,38],
[39,36,35,38,41,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1358, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,39,48,46,35,41],
[39,0,40,46,43,41,42,47],
[34,40,0,41,45,38,38,43],
[41,34,39,0,46,41,37,37],
[32,37,35,34,0,45,30,41],
[34,39,42,39,35,0,29,36],
[45,38,42,43,50,51,0,50],
[39,33,37,43,39,44,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1359, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,39,32,54,47,54,33],
[19,0,26,40,19,26,34,27],
[41,54,0,40,39,32,47,39],
[48,40,40,0,39,32,41,33],
[26,61,41,41,0,15,49,40],
[33,54,48,48,65,0,63,54],
[26,46,33,39,31,17,0,27],
[47,53,41,47,40,26,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1360, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,52,43,48,44,36,41],
[39,0,41,37,47,38,36,38],
[28,39,0,33,39,37,32,31],
[37,43,47,0,46,42,42,38],
[32,33,41,34,0,33,31,35],
[36,42,43,38,47,0,33,32],
[44,44,48,38,49,47,0,39],
[39,42,49,42,45,48,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1361, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,38,29,34,43,46],
[50,0,48,42,40,39,46,51],
[41,32,0,39,36,31,39,40],
[42,38,41,0,36,35,42,43],
[51,40,44,44,0,41,45,44],
[46,41,49,45,39,0,48,43],
[37,34,41,38,35,32,0,42],
[34,29,40,37,36,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1362, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,39,40,39,42,37],
[41,0,39,40,41,42,38,40],
[34,41,0,42,42,37,35,34],
[41,40,38,0,38,35,35,42],
[40,39,38,42,0,39,31,38],
[41,38,43,45,41,0,35,37],
[38,42,45,45,49,45,0,47],
[43,40,46,38,42,43,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1363, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,44,36,36,43,46],
[40,0,44,39,45,55,45,40],
[41,36,0,47,43,36,37,37],
[36,41,33,0,47,38,41,45],
[44,35,37,33,0,37,40,53],
[44,25,44,42,43,0,39,46],
[37,35,43,39,40,41,0,44],
[34,40,43,35,27,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1364, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,42,40,52,51,46,50],
[36,0,39,42,46,45,39,42],
[38,41,0,42,45,51,42,42],
[40,38,38,0,37,48,35,39],
[28,34,35,43,0,44,40,37],
[29,35,29,32,36,0,27,30],
[34,41,38,45,40,53,0,48],
[30,38,38,41,43,50,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1365, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,43,43,43,40,41,46],
[36,0,35,39,46,32,44,44],
[37,45,0,40,39,37,41,47],
[37,41,40,0,38,42,41,42],
[37,34,41,42,0,38,46,50],
[40,48,43,38,42,0,47,43],
[39,36,39,39,34,33,0,45],
[34,36,33,38,30,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1366, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,41,35,35,43,45],
[35,0,43,48,44,34,39,48],
[40,37,0,47,37,40,44,51],
[39,32,33,0,29,29,39,42],
[45,36,43,51,0,42,43,44],
[45,46,40,51,38,0,52,46],
[37,41,36,41,37,28,0,40],
[35,32,29,38,36,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1367, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,42,47,39,41,35],
[41,0,38,42,46,32,45,38],
[41,42,0,39,44,43,42,36],
[38,38,41,0,41,37,41,39],
[33,34,36,39,0,37,35,35],
[41,48,37,43,43,0,38,41],
[39,35,38,39,45,42,0,39],
[45,42,44,41,45,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1368, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,41,36,40,47,48],
[43,0,38,35,35,43,43,44],
[37,42,0,39,31,39,36,47],
[39,45,41,0,43,43,47,49],
[44,45,49,37,0,41,45,46],
[40,37,41,37,39,0,42,45],
[33,37,44,33,35,38,0,42],
[32,36,33,31,34,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1369, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,40,37,38,42,44,42],
[45,0,34,40,45,42,49,41],
[40,46,0,39,48,43,48,52],
[43,40,41,0,36,38,49,39],
[42,35,32,44,0,41,44,38],
[38,38,37,42,39,0,44,45],
[36,31,32,31,36,36,0,35],
[38,39,28,41,42,35,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1370, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,54,47,42,39,47],
[37,0,43,47,46,42,43,57],
[35,37,0,45,39,26,40,44],
[26,33,35,0,42,25,28,36],
[33,34,41,38,0,28,26,34],
[38,38,54,55,52,0,45,51],
[41,37,40,52,54,35,0,45],
[33,23,36,44,46,29,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1371, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,44,35,39,37,43],
[39,0,28,44,37,39,32,39],
[49,52,0,54,34,46,41,49],
[36,36,26,0,22,27,31,40],
[45,43,46,58,0,42,36,51],
[41,41,34,53,38,0,45,41],
[43,48,39,49,44,35,0,40],
[37,41,31,40,29,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1372, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,41,47,42,37,40,35],
[22,0,18,40,28,17,27,36],
[39,62,0,51,45,36,45,45],
[33,40,29,0,35,37,29,36],
[38,52,35,45,0,35,38,45],
[43,63,44,43,45,0,35,39],
[40,53,35,51,42,45,0,40],
[45,44,35,44,35,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1373, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,49,36,34,40,44],
[36,0,34,55,44,33,44,47],
[48,46,0,56,54,37,43,55],
[31,25,24,0,31,29,22,34],
[44,36,26,49,0,40,34,44],
[46,47,43,51,40,0,48,46],
[40,36,37,58,46,32,0,41],
[36,33,25,46,36,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1374, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,42,43,40,39,39,44],
[28,0,18,35,31,19,29,32],
[38,62,0,39,49,45,42,45],
[37,45,41,0,37,38,34,37],
[40,49,31,43,0,38,37,44],
[41,61,35,42,42,0,41,49],
[41,51,38,46,43,39,0,43],
[36,48,35,43,36,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1375, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,41,42,49,40,42],
[38,0,42,31,43,41,37,39],
[40,38,0,32,42,37,40,34],
[39,49,48,0,39,33,42,46],
[38,37,38,41,0,30,42,38],
[31,39,43,47,50,0,36,40],
[40,43,40,38,38,44,0,40],
[38,41,46,34,42,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1376, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,52,42,48,44,43],
[39,0,44,49,46,42,45,46],
[43,36,0,47,40,45,43,42],
[28,31,33,0,31,39,34,35],
[38,34,40,49,0,42,40,30],
[32,38,35,41,38,0,38,37],
[36,35,37,46,40,42,0,36],
[37,34,38,45,50,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1377, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,44,38,36,37,37,40],
[39,0,47,42,37,42,41,46],
[36,33,0,34,33,35,28,34],
[42,38,46,0,41,45,38,40],
[44,43,47,39,0,44,40,40],
[43,38,45,35,36,0,38,42],
[43,39,52,42,40,42,0,45],
[40,34,46,40,40,38,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1378, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,36,40,38,37,43],
[41,0,42,44,48,42,38,44],
[42,38,0,39,49,40,40,43],
[44,36,41,0,40,41,43,41],
[40,32,31,40,0,36,33,43],
[42,38,40,39,44,0,40,43],
[43,42,40,37,47,40,0,45],
[37,36,37,39,37,37,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1379, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,33,35,42,46,37],
[42,0,39,43,42,43,51,37],
[46,41,0,42,39,43,52,45],
[47,37,38,0,45,48,51,42],
[45,38,41,35,0,41,44,39],
[38,37,37,32,39,0,43,33],
[34,29,28,29,36,37,0,36],
[43,43,35,38,41,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1380, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,53,56,40,43,64,46],
[29,0,44,55,35,40,60,36],
[27,36,0,46,28,34,57,38],
[24,25,34,0,36,38,50,33],
[40,45,52,44,0,38,55,37],
[37,40,46,42,42,0,58,43],
[16,20,23,30,25,22,0,30],
[34,44,42,47,43,37,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1381, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,32,35,40,46,37,33],
[45,0,35,38,38,49,38,41],
[48,45,0,43,40,47,41,45],
[45,42,37,0,48,46,36,37],
[40,42,40,32,0,44,39,41],
[34,31,33,34,36,0,36,37],
[43,42,39,44,41,44,0,33],
[47,39,35,43,39,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1382, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,35,39,42,45,43],
[43,0,36,40,41,41,41,42],
[39,44,0,39,39,42,34,45],
[45,40,41,0,39,39,33,45],
[41,39,41,41,0,39,39,49],
[38,39,38,41,41,0,43,40],
[35,39,46,47,41,37,0,36],
[37,38,35,35,31,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1383, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,46,50,41,40,41],
[41,0,42,43,39,47,39,42],
[39,38,0,44,38,46,36,35],
[34,37,36,0,48,47,44,50],
[30,41,42,32,0,41,41,35],
[39,33,34,33,39,0,37,38],
[40,41,44,36,39,43,0,42],
[39,38,45,30,45,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1384, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,35,34,42,41,37],
[42,0,40,44,40,43,45,49],
[36,40,0,33,37,37,38,34],
[45,36,47,0,39,39,46,42],
[46,40,43,41,0,40,45,45],
[38,37,43,41,40,0,42,43],
[39,35,42,34,35,38,0,35],
[43,31,46,38,35,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1385, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,40,36,31,31,34],
[53,0,41,43,42,45,44,39],
[50,39,0,41,43,37,30,38],
[40,37,39,0,42,38,29,35],
[44,38,37,38,0,41,35,34],
[49,35,43,42,39,0,40,48],
[49,36,50,51,45,40,0,51],
[46,41,42,45,46,32,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1386, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,29,34,38,32,33,33],
[44,0,36,42,51,41,43,41],
[51,44,0,38,55,50,42,36],
[46,38,42,0,38,37,46,35],
[42,29,25,42,0,42,39,31],
[48,39,30,43,38,0,38,37],
[47,37,38,34,41,42,0,41],
[47,39,44,45,49,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1387, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,29,37,53,40,35],
[43,0,30,25,32,54,21,37],
[46,50,0,30,48,59,42,46],
[51,55,50,0,54,58,30,52],
[43,48,32,26,0,68,37,32],
[27,26,21,22,12,0,22,17],
[40,59,38,50,43,58,0,64],
[45,43,34,28,48,63,16,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1388, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,24,39,42,31,39,35],
[35,0,20,38,44,36,35,38],
[56,60,0,52,55,45,40,53],
[41,42,28,0,60,32,27,53],
[38,36,25,20,0,40,36,27],
[49,44,35,48,40,0,34,51],
[41,45,40,53,44,46,0,45],
[45,42,27,27,53,29,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1389, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,42,33,35,38,42],
[36,0,31,43,29,35,43,38],
[45,49,0,42,47,40,50,40],
[38,37,38,0,35,32,35,27],
[47,51,33,45,0,28,56,38],
[45,45,40,48,52,0,46,37],
[42,37,30,45,24,34,0,26],
[38,42,40,53,42,43,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1390, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,37,35,34,40,35],
[36,0,43,45,38,38,41,37],
[42,37,0,41,33,39,40,40],
[43,35,39,0,27,29,34,33],
[45,42,47,53,0,48,56,40],
[46,42,41,51,32,0,47,39],
[40,39,40,46,24,33,0,35],
[45,43,40,47,40,41,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1391, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,38,44,37,33,46],
[41,0,42,44,46,33,37,48],
[40,38,0,41,46,45,38,36],
[42,36,39,0,48,37,41,29],
[36,34,34,32,0,30,32,38],
[43,47,35,43,50,0,35,41],
[47,43,42,39,48,45,0,36],
[34,32,44,51,42,39,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1392, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,43,39,42,40,43],
[33,0,37,32,34,36,36,38],
[36,43,0,35,43,39,37,31],
[37,48,45,0,41,46,44,39],
[41,46,37,39,0,41,38,41],
[38,44,41,34,39,0,35,40],
[40,44,43,36,42,45,0,40],
[37,42,49,41,39,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1393, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,40,36,37,42,34],
[45,0,39,42,41,39,48,36],
[42,41,0,42,40,41,44,39],
[40,38,38,0,36,38,38,38],
[44,39,40,44,0,42,42,38],
[43,41,39,42,38,0,42,40],
[38,32,36,42,38,38,0,36],
[46,44,41,42,42,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1394, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,41,47,33,40,39,37],
[47,0,38,41,33,40,39,38],
[39,42,0,49,34,33,30,30],
[33,39,31,0,34,29,33,31],
[47,47,46,46,0,32,42,33],
[40,40,47,51,48,0,39,38],
[41,41,50,47,38,41,0,48],
[43,42,50,49,47,42,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1395, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,30,36,35,33,43,41],
[46,0,39,42,33,29,46,42],
[50,41,0,38,48,38,46,44],
[44,38,42,0,40,45,55,45],
[45,47,32,40,0,35,38,38],
[47,51,42,35,45,0,60,56],
[37,34,34,25,42,20,0,34],
[39,38,36,35,42,24,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1396, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,42,44,34,42,32,48],
[55,0,43,47,36,45,35,45],
[38,37,0,45,41,38,47,38],
[36,33,35,0,35,40,29,45],
[46,44,39,45,0,48,23,46],
[38,35,42,40,32,0,35,51],
[48,45,33,51,57,45,0,41],
[32,35,42,35,34,29,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1397, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,33,33,37,37,43],
[44,0,41,42,43,38,44,41],
[43,39,0,42,38,38,49,39],
[47,38,38,0,47,40,48,36],
[47,37,42,33,0,44,52,40],
[43,42,42,40,36,0,54,41],
[43,36,31,32,28,26,0,32],
[37,39,41,44,40,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1398, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,38,50,41,38,33],
[35,0,40,39,53,38,32,43],
[36,40,0,36,50,30,37,34],
[42,41,44,0,45,43,37,40],
[30,27,30,35,0,33,27,32],
[39,42,50,37,47,0,30,39],
[42,48,43,43,53,50,0,38],
[47,37,46,40,48,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1399, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,38,40,49,71,46,38],
[49,0,32,41,58,49,57,40],
[42,48,0,32,66,64,47,31],
[40,39,48,0,48,55,48,46],
[31,22,14,32,0,38,22,23],
[9,31,16,25,42,0,16,24],
[34,23,33,32,58,64,0,16],
[42,40,49,34,57,56,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1400, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,44,32,41,34,42],
[42,0,34,50,36,40,37,49],
[42,46,0,49,35,38,43,36],
[36,30,31,0,30,35,24,23],
[48,44,45,50,0,48,36,51],
[39,40,42,45,32,0,38,41],
[46,43,37,56,44,42,0,48],
[38,31,44,57,29,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1401, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,26,36,38,37,62],
[39,0,24,36,53,31,24,54],
[46,56,0,31,53,42,41,55],
[54,44,49,0,35,48,42,53],
[44,27,27,45,0,53,36,44],
[42,49,38,32,27,0,43,41],
[43,56,39,38,44,37,0,47],
[18,26,25,27,36,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1402, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,24,37,27,41,26,33],
[47,0,32,43,33,41,42,47],
[56,48,0,42,33,54,37,56],
[43,37,38,0,38,42,44,39],
[53,47,47,42,0,48,39,60],
[39,39,26,38,32,0,37,38],
[54,38,43,36,41,43,0,50],
[47,33,24,41,20,42,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1403, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,32,42,38,35,45,43],
[32,0,24,40,34,29,39,34],
[48,56,0,41,53,38,50,40],
[38,40,39,0,41,32,40,28],
[42,46,27,39,0,40,45,38],
[45,51,42,48,40,0,41,41],
[35,41,30,40,35,39,0,29],
[37,46,40,52,42,39,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1404, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,42,41,35,47,40],
[40,0,39,44,38,42,39,49],
[37,41,0,38,43,40,44,48],
[38,36,42,0,48,43,40,46],
[39,42,37,32,0,42,40,46],
[45,38,40,37,38,0,44,45],
[33,41,36,40,40,36,0,43],
[40,31,32,34,34,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1405, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,33,37,44,49,30,55],
[40,0,41,38,45,35,30,45],
[47,39,0,45,47,38,44,50],
[43,42,35,0,34,43,20,49],
[36,35,33,46,0,43,40,52],
[31,45,42,37,37,0,24,42],
[50,50,36,60,40,56,0,48],
[25,35,30,31,28,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1406, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,34,26,27,27,33,31],
[55,0,37,40,39,37,39,48],
[46,43,0,37,36,51,44,41],
[54,40,43,0,39,40,38,42],
[53,41,44,41,0,53,42,38],
[53,43,29,40,27,0,40,37],
[47,41,36,42,38,40,0,42],
[49,32,39,38,42,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1407, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,33,49,35,40,44,36],
[40,0,42,54,36,36,36,47],
[47,38,0,61,41,55,52,40],
[31,26,19,0,21,36,24,30],
[45,44,39,59,0,45,48,44],
[40,44,25,44,35,0,40,39],
[36,44,28,56,32,40,0,41],
[44,33,40,50,36,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1408, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,46,45,43,56,50],
[38,0,27,39,35,35,46,37],
[42,53,0,45,49,39,54,53],
[34,41,35,0,39,42,52,38],
[35,45,31,41,0,29,50,44],
[37,45,41,38,51,0,46,52],
[24,34,26,28,30,34,0,34],
[30,43,27,42,36,28,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1409, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,43,43,41,46,40],
[38,0,37,43,41,38,45,35],
[40,43,0,36,52,39,37,33],
[37,37,44,0,49,40,48,33],
[37,39,28,31,0,38,40,30],
[39,42,41,40,42,0,43,47],
[34,35,43,32,40,37,0,42],
[40,45,47,47,50,33,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1410, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,30,27,34,45,32,35],
[44,0,35,35,37,41,38,39],
[50,45,0,40,44,48,38,47],
[53,45,40,0,42,47,38,43],
[46,43,36,38,0,47,30,32],
[35,39,32,33,33,0,32,31],
[48,42,42,42,50,48,0,38],
[45,41,33,37,48,49,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1411, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,42,28,33,27,31,32],
[47,0,38,32,43,33,34,39],
[38,42,0,42,42,37,40,39],
[52,48,38,0,45,42,46,41],
[47,37,38,35,0,32,38,36],
[53,47,43,38,48,0,42,44],
[49,46,40,34,42,38,0,44],
[48,41,41,39,44,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1412, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,32,26,41,11,31,34],
[55,0,53,39,53,39,53,51],
[48,27,0,29,27,27,26,49],
[54,41,51,0,55,38,48,45],
[39,27,53,25,0,34,36,41],
[69,41,53,42,46,0,54,40],
[49,27,54,32,44,26,0,47],
[46,29,31,35,39,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1413, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,53,34,36,45,9,35],
[43,0,43,26,45,62,18,26],
[27,37,0,17,19,44,8,26],
[46,54,63,0,39,55,47,46],
[44,35,61,41,0,52,27,43],
[35,18,36,25,28,0,9,18],
[71,62,72,33,53,71,0,43],
[45,54,54,34,37,62,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1414, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,39,23,38,48,40,25],
[24,0,39,40,41,49,35,42],
[41,41,0,48,48,56,41,33],
[57,40,32,0,34,51,41,35],
[42,39,32,46,0,56,39,41],
[32,31,24,29,24,0,33,24],
[40,45,39,39,41,47,0,24],
[55,38,47,45,39,56,56,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1415, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,44,40,32,34,35,33],
[48,0,52,43,40,41,39,38],
[36,28,0,40,33,33,28,27],
[40,37,40,0,36,35,43,32],
[48,40,47,44,0,45,43,40],
[46,39,47,45,35,0,43,41],
[45,41,52,37,37,37,0,38],
[47,42,53,48,40,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1416, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,32,37,41,39,37,41],
[40,0,43,31,31,34,29,35],
[48,37,0,39,43,41,34,45],
[43,49,41,0,42,44,40,38],
[39,49,37,38,0,38,37,39],
[41,46,39,36,42,0,40,41],
[43,51,46,40,43,40,0,39],
[39,45,35,42,41,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1417, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,47,32,41,45,27],
[38,0,39,42,31,38,37,39],
[42,41,0,43,37,42,45,33],
[33,38,37,0,41,43,40,30],
[48,49,43,39,0,43,41,40],
[39,42,38,37,37,0,35,29],
[35,43,35,40,39,45,0,38],
[53,41,47,50,40,51,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1418, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,26,25,39,26,43,42],
[44,0,33,40,50,37,44,40],
[54,47,0,37,55,41,43,51],
[55,40,43,0,51,48,50,52],
[41,30,25,29,0,28,43,42],
[54,43,39,32,52,0,47,42],
[37,36,37,30,37,33,0,34],
[38,40,29,28,38,38,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1419, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,42,42,54,38,36],
[35,0,45,43,43,39,34,42],
[38,35,0,36,51,36,42,39],
[38,37,44,0,48,38,30,30],
[38,37,29,32,0,32,30,30],
[26,41,44,42,48,0,22,37],
[42,46,38,50,50,58,0,42],
[44,38,41,50,50,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1420, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,54,42,45,39,43,43],
[42,0,50,41,38,43,55,49],
[26,30,0,33,31,28,33,27],
[38,39,47,0,43,40,43,45],
[35,42,49,37,0,36,41,43],
[41,37,52,40,44,0,48,47],
[37,25,47,37,39,32,0,35],
[37,31,53,35,37,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1421, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,40,40,80,80,80],
[0,0,40,40,40,40,0,40],
[0,40,0,0,0,0,0,0],
[40,40,80,0,80,40,40,40],
[40,40,80,0,0,40,40,40],
[0,40,80,40,40,0,40,80],
[0,80,80,40,40,40,0,40],
[0,40,80,40,40,0,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1422, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,47,41,38,53,43],
[38,0,38,47,47,40,47,39],
[38,42,0,46,41,37,49,42],
[33,33,34,0,34,29,42,39],
[39,33,39,46,0,36,48,36],
[42,40,43,51,44,0,52,48],
[27,33,31,38,32,28,0,30],
[37,41,38,41,44,32,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1423, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,44,35,39,43,39],
[42,0,38,44,42,40,44,39],
[41,42,0,47,37,40,49,41],
[36,36,33,0,37,35,43,42],
[45,38,43,43,0,45,47,40],
[41,40,40,45,35,0,47,41],
[37,36,31,37,33,33,0,32],
[41,41,39,38,40,39,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1424, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,36,33,35,32,35,41],
[48,0,38,38,36,35,31,38],
[44,42,0,37,44,37,41,44],
[47,42,43,0,43,45,39,51],
[45,44,36,37,0,35,42,42],
[48,45,43,35,45,0,45,46],
[45,49,39,41,38,35,0,50],
[39,42,36,29,38,34,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1425, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,32,38,34,40,35,43],
[44,0,42,41,37,47,48,47],
[48,38,0,47,42,41,41,45],
[42,39,33,0,37,34,36,45],
[46,43,38,43,0,43,40,42],
[40,33,39,46,37,0,37,41],
[45,32,39,44,40,43,0,44],
[37,33,35,35,38,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1426, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,24,28,36,28,29,37],
[52,0,39,47,43,45,32,53],
[56,41,0,44,38,47,32,44],
[52,33,36,0,39,41,41,46],
[44,37,42,41,0,37,28,53],
[52,35,33,39,43,0,28,45],
[51,48,48,39,52,52,0,45],
[43,27,36,34,27,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1427, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,34,39,42,38,40,34],
[50,0,35,34,38,33,38,38],
[46,45,0,37,34,42,45,38],
[41,46,43,0,37,36,46,46],
[38,42,46,43,0,41,42,45],
[42,47,38,44,39,0,46,44],
[40,42,35,34,38,34,0,34],
[46,42,42,34,35,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1428, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,35,38,35,44,45,45],
[37,0,44,40,43,37,38,51],
[45,36,0,31,44,44,35,49],
[42,40,49,0,41,39,41,46],
[45,37,36,39,0,39,40,39],
[36,43,36,41,41,0,39,52],
[35,42,45,39,40,41,0,53],
[35,29,31,34,41,28,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1429, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,38,43,37,41,40],
[39,0,37,37,45,50,41,44],
[39,43,0,33,43,35,38,34],
[42,43,47,0,43,40,46,45],
[37,35,37,37,0,38,38,39],
[43,30,45,40,42,0,39,40],
[39,39,42,34,42,41,0,35],
[40,36,46,35,41,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1430, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,47,43,40,39,37],
[43,0,47,44,47,37,46,38],
[37,33,0,41,37,35,38,35],
[33,36,39,0,34,36,33,33],
[37,33,43,46,0,35,36,33],
[40,43,45,44,45,0,39,43],
[41,34,42,47,44,41,0,43],
[43,42,45,47,47,37,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1431, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,41,53,53,68,40,39],
[27,0,26,51,66,68,53,51],
[39,54,0,65,52,54,53,25],
[27,29,15,0,27,54,26,13],
[27,14,28,53,0,54,40,25],
[12,12,26,26,26,0,28,12],
[40,27,27,54,40,52,0,40],
[41,29,55,67,55,68,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1432, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,80,60,60,40,60],
[40,0,20,60,60,80,0,40],
[40,60,0,60,80,60,60,60],
[0,20,20,0,60,60,20,40],
[20,20,0,20,0,60,0,40],
[20,0,20,20,20,0,0,20],
[40,80,20,60,80,80,0,40],
[20,40,20,40,40,60,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1433, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,44,37,44,38,40,42],
[30,0,32,29,40,39,25,34],
[36,48,0,22,32,37,44,34],
[43,51,58,0,52,41,37,53],
[36,40,48,28,0,41,29,37],
[42,41,43,39,39,0,35,34],
[40,55,36,43,51,45,0,44],
[38,46,46,27,43,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1434, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,37,37,35,31,43],
[41,0,43,44,43,34,42,44],
[35,37,0,33,36,26,29,36],
[43,36,47,0,40,36,34,43],
[43,37,44,40,0,33,38,41],
[45,46,54,44,47,0,40,47],
[49,38,51,46,42,40,0,41],
[37,36,44,37,39,33,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1435, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,39,31,24,31,40],
[40,0,31,39,38,15,32,47],
[41,49,0,49,48,34,25,24],
[41,41,31,0,39,24,48,23],
[49,42,32,41,0,24,26,16],
[56,65,46,56,56,0,32,40],
[49,48,55,32,54,48,0,47],
[40,33,56,57,64,40,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1436, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,27,32,30,34,42,35],
[45,0,43,33,54,44,46,44],
[53,37,0,43,48,41,49,40],
[48,47,37,0,49,48,49,45],
[50,26,32,31,0,37,45,43],
[46,36,39,32,43,0,52,45],
[38,34,31,31,35,28,0,39],
[45,36,40,35,37,35,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1437, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,51,45,37,41,52],
[39,0,46,57,44,48,31,42],
[40,34,0,59,57,40,40,57],
[29,23,21,0,37,27,23,51],
[35,36,23,43,0,32,45,51],
[43,32,40,53,48,0,38,44],
[39,49,40,57,35,42,0,44],
[28,38,23,29,29,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1438, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,51,48,35,56,54,48],
[31,0,34,37,44,41,33,38],
[29,46,0,44,39,58,43,39],
[32,43,36,0,52,53,42,39],
[45,36,41,28,0,52,38,33],
[24,39,22,27,28,0,32,20],
[26,47,37,38,42,48,0,36],
[32,42,41,41,47,60,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1439, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,41,44,41,44,45],
[40,0,33,42,41,41,43,43],
[41,47,0,45,39,42,44,41],
[39,38,35,0,45,47,44,44],
[36,39,41,35,0,38,40,37],
[39,39,38,33,42,0,44,41],
[36,37,36,36,40,36,0,38],
[35,37,39,36,43,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1440, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,44,48,42,37,45],
[38,0,49,41,49,46,41,40],
[39,31,0,37,43,39,39,40],
[36,39,43,0,49,42,40,48],
[32,31,37,31,0,34,36,40],
[38,34,41,38,46,0,38,39],
[43,39,41,40,44,42,0,42],
[35,40,40,32,40,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1441, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,40,41,47,50,39],
[34,0,34,29,31,27,44,33],
[39,46,0,37,35,34,43,43],
[40,51,43,0,42,52,47,41],
[39,49,45,38,0,43,47,40],
[33,53,46,28,37,0,51,39],
[30,36,37,33,33,29,0,33],
[41,47,37,39,40,41,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1442, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,37,39,38,38,44],
[37,0,43,42,40,38,34,36],
[35,37,0,40,31,33,38,40],
[43,38,40,0,41,36,33,34],
[41,40,49,39,0,43,37,36],
[42,42,47,44,37,0,41,39],
[42,46,42,47,43,39,0,47],
[36,44,40,46,44,41,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1443, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,31,44,42,44,47],
[41,0,38,35,36,41,46,41],
[39,42,0,31,37,47,49,43],
[49,45,49,0,49,45,40,52],
[36,44,43,31,0,42,50,39],
[38,39,33,35,38,0,36,43],
[36,34,31,40,30,44,0,44],
[33,39,37,28,41,37,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1444, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,42,33,39,50,45,42],
[23,0,31,29,34,49,37,34],
[38,49,0,27,34,44,36,34],
[47,51,53,0,40,54,51,51],
[41,46,46,40,0,50,53,47],
[30,31,36,26,30,0,44,40],
[35,43,44,29,27,36,0,32],
[38,46,46,29,33,40,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1445, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,57,37,42,49,49],
[36,0,45,46,30,34,50,46],
[39,35,0,44,37,40,51,49],
[23,34,36,0,30,25,32,45],
[43,50,43,50,0,42,35,55],
[38,46,40,55,38,0,37,54],
[31,30,29,48,45,43,0,42],
[31,34,31,35,25,26,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1446, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,41,42,39,51,47],
[37,0,37,35,38,32,39,39],
[36,43,0,34,38,36,47,47],
[39,45,46,0,46,41,39,41],
[38,42,42,34,0,31,35,44],
[41,48,44,39,49,0,47,46],
[29,41,33,41,45,33,0,42],
[33,41,33,39,36,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1447, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,45,45,42,48,34],
[42,0,50,49,37,51,43,40],
[42,30,0,47,41,41,51,33],
[35,31,33,0,37,40,43,33],
[35,43,39,43,0,35,31,32],
[38,29,39,40,45,0,39,31],
[32,37,29,37,49,41,0,34],
[46,40,47,47,48,49,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1448, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,42,53,46,46,40],
[39,0,43,32,51,50,33,45],
[32,37,0,32,48,57,52,39],
[38,48,48,0,39,51,52,38],
[27,29,32,41,0,44,35,34],
[34,30,23,29,36,0,39,30],
[34,47,28,28,45,41,0,31],
[40,35,41,42,46,50,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1449, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,16,24,18,31,16,50],
[55,0,49,29,25,31,56,65],
[64,31,0,39,33,54,24,49],
[56,51,41,0,36,40,34,57],
[62,55,47,44,0,47,38,72],
[49,49,26,40,33,0,25,51],
[64,24,56,46,42,55,0,65],
[30,15,31,23,8,29,15,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1450, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,44,42,32,41,39],
[45,0,36,37,50,41,36,48],
[41,44,0,44,39,41,35,38],
[36,43,36,0,42,36,37,42],
[38,30,41,38,0,39,25,38],
[48,39,39,44,41,0,37,38],
[39,44,45,43,55,43,0,57],
[41,32,42,38,42,42,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1451, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,31,36,33,30,35],
[52,0,42,35,55,26,42,41],
[54,38,0,49,43,41,48,30],
[49,45,31,0,46,35,43,41],
[44,25,37,34,0,24,27,18],
[47,54,39,45,56,0,45,42],
[50,38,32,37,53,35,0,28],
[45,39,50,39,62,38,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1452, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,43,39,25,35,50,22],
[55,0,56,55,39,48,50,46],
[37,24,0,32,26,34,48,32],
[41,25,48,0,29,32,42,26],
[55,41,54,51,0,46,54,31],
[45,32,46,48,34,0,45,35],
[30,30,32,38,26,35,0,26],
[58,34,48,54,49,45,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1453, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,49,32,41,41,41],
[32,0,48,35,49,34,24,51],
[34,32,0,49,41,25,40,34],
[31,45,31,0,47,39,30,41],
[48,31,39,33,0,32,40,42],
[39,46,55,41,48,0,39,41],
[39,56,40,50,40,41,0,42],
[39,29,46,39,38,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1454, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,45,40,44,41,52],
[38,0,34,38,48,35,50,42],
[49,46,0,36,45,35,46,40],
[35,42,44,0,42,28,44,48],
[40,32,35,38,0,27,45,40],
[36,45,45,52,53,0,51,53],
[39,30,34,36,35,29,0,40],
[28,38,40,32,40,27,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1455, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,42,45,44,37,44],
[40,0,42,35,39,39,45,45],
[39,38,0,37,33,37,37,40],
[38,45,43,0,49,37,41,41],
[35,41,47,31,0,36,40,34],
[36,41,43,43,44,0,41,42],
[43,35,43,39,40,39,0,37],
[36,35,40,39,46,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1456, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,40,44,43,51,48,34],
[41,0,33,44,45,55,51,40],
[40,47,0,38,53,47,44,41],
[36,36,42,0,41,50,48,37],
[37,35,27,39,0,46,45,35],
[29,25,33,30,34,0,38,31],
[32,29,36,32,35,42,0,32],
[46,40,39,43,45,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1457, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,42,36,34,30,42],
[36,0,41,46,41,34,41,40],
[41,39,0,41,52,33,47,37],
[38,34,39,0,42,37,38,47],
[44,39,28,38,0,37,40,40],
[46,46,47,43,43,0,47,34],
[50,39,33,42,40,33,0,45],
[38,40,43,33,40,46,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1458, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,40,68,55,55,41,55],
[25,0,12,51,41,66,40,39],
[40,68,0,68,43,68,40,55],
[12,29,12,0,29,27,15,39],
[25,39,37,51,0,40,40,52],
[25,14,12,53,40,0,25,26],
[39,40,40,65,40,55,0,67],
[25,41,25,41,28,54,13,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1459, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,37,50,42,35,41],
[32,0,39,36,45,38,32,37],
[32,41,0,36,41,35,42,42],
[43,44,44,0,42,31,42,31],
[30,35,39,38,0,34,27,31],
[38,42,45,49,46,0,39,37],
[45,48,38,38,53,41,0,43],
[39,43,38,49,49,43,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1460, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,44,56,20,31,21,56],
[46,0,56,34,46,43,34,46],
[36,24,0,25,22,34,12,25],
[24,46,55,0,44,55,45,46],
[60,34,58,36,0,33,23,36],
[49,37,46,25,47,0,25,48],
[59,46,68,35,57,55,0,58],
[24,34,55,34,44,32,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1461, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,48,42,39,38,51],
[36,0,33,42,40,34,40,45],
[43,47,0,51,47,39,48,51],
[32,38,29,0,33,36,33,41],
[38,40,33,47,0,36,29,54],
[41,46,41,44,44,0,40,51],
[42,40,32,47,51,40,0,57],
[29,35,29,39,26,29,23,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1462, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,37,37,42,31,36,48],
[37,0,38,40,50,41,38,42],
[43,42,0,46,38,33,49,51],
[43,40,34,0,38,34,29,43],
[38,30,42,42,0,34,40,40],
[49,39,47,46,46,0,42,47],
[44,42,31,51,40,38,0,42],
[32,38,29,37,40,33,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1463, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,37,47,45,44,35],
[41,0,35,41,49,42,42,37],
[42,45,0,48,48,45,49,40],
[43,39,32,0,38,39,42,29],
[33,31,32,42,0,35,35,28],
[35,38,35,41,45,0,40,35],
[36,38,31,38,45,40,0,31],
[45,43,40,51,52,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1464, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,41,34,44,48,44,35],
[49,0,35,48,56,47,41,38],
[39,45,0,38,48,35,45,35],
[46,32,42,0,59,46,53,37],
[36,24,32,21,0,42,35,37],
[32,33,45,34,38,0,29,37],
[36,39,35,27,45,51,0,42],
[45,42,45,43,43,43,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1465, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,44,47,55,36,39,34],
[49,0,51,53,48,47,44,39],
[36,29,0,45,34,36,36,42],
[33,27,35,0,48,23,28,25],
[25,32,46,32,0,15,30,37],
[44,33,44,57,65,0,43,34],
[41,36,44,52,50,37,0,39],
[46,41,38,55,43,46,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1466, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,36,44,44,37,43,40],
[37,0,37,37,46,48,42,42],
[44,43,0,38,49,46,53,44],
[36,43,42,0,48,47,42,46],
[36,34,31,32,0,36,34,38],
[43,32,34,33,44,0,37,38],
[37,38,27,38,46,43,0,36],
[40,38,36,34,42,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1467, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,43,40,40,42,42,44],
[34,0,36,44,41,37,33,34],
[37,44,0,33,42,40,47,34],
[40,36,47,0,34,45,53,43],
[40,39,38,46,0,44,35,51],
[38,43,40,35,36,0,30,46],
[38,47,33,27,45,50,0,39],
[36,46,46,37,29,34,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1468, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,32,43,42,39,41,38],
[42,0,41,46,56,43,45,35],
[48,39,0,47,61,46,58,43],
[37,34,33,0,48,38,37,42],
[38,24,19,32,0,31,32,28],
[41,37,34,42,49,0,42,49],
[39,35,22,43,48,38,0,34],
[42,45,37,38,52,31,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1469, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,37,42,43,34,39],
[47,0,47,40,44,46,47,45],
[52,33,0,45,47,46,39,41],
[43,40,35,0,48,49,46,50],
[38,36,33,32,0,44,40,43],
[37,34,34,31,36,0,38,41],
[46,33,41,34,40,42,0,40],
[41,35,39,30,37,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1470, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,60,80,60,80,60,40],
[0,0,40,60,40,80,20,20],
[20,40,0,80,20,60,40,20],
[0,20,0,0,0,40,0,0],
[20,40,60,80,0,60,40,20],
[0,0,20,40,20,0,0,0],
[20,60,40,80,40,80,0,0],
[40,60,60,80,60,80,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1471, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,45,39,41,44,37],
[42,0,44,40,40,40,44,34],
[38,36,0,46,45,46,45,37],
[35,40,34,0,37,39,35,34],
[41,40,35,43,0,46,42,39],
[39,40,34,41,34,0,37,39],
[36,36,35,45,38,43,0,42],
[43,46,43,46,41,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1472, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,43,39,27,29,35,35],
[48,0,47,36,33,37,31,34],
[37,33,0,39,28,35,36,37],
[41,44,41,0,25,37,38,48],
[53,47,52,55,0,47,39,47],
[51,43,45,43,33,0,43,36],
[45,49,44,42,41,37,0,44],
[45,46,43,32,33,44,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1473, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,43,44,51,29,67,43],
[22,0,30,29,45,29,60,37],
[37,50,0,37,58,42,60,52],
[36,51,43,0,59,35,60,66],
[29,35,22,21,0,29,61,36],
[51,51,38,45,51,0,54,52],
[13,20,20,20,19,26,0,27],
[37,43,28,14,44,28,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1474, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,40,46,50,53,49,43],
[32,0,33,35,32,50,44,24],
[40,47,0,41,35,52,40,28],
[34,45,39,0,33,44,48,39],
[30,48,45,47,0,47,44,39],
[27,30,28,36,33,0,35,25],
[31,36,40,32,36,45,0,39],
[37,56,52,41,41,55,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1475, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,55,33,33,44,42],
[36,0,37,50,43,28,35,46],
[39,43,0,42,32,41,42,46],
[25,30,38,0,36,28,29,27],
[47,37,48,44,0,34,42,43],
[47,52,39,52,46,0,45,50],
[36,45,38,51,38,35,0,50],
[38,34,34,53,37,30,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1476, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,43,36,42,34,38],
[39,0,37,43,39,43,41,37],
[37,43,0,33,33,46,37,37],
[37,37,47,0,36,42,33,36],
[44,41,47,44,0,45,35,39],
[38,37,34,38,35,0,36,35],
[46,39,43,47,45,44,0,40],
[42,43,43,44,41,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1477, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,39,39,51,39,41,40],
[38,0,37,38,43,35,40,40],
[41,43,0,42,49,35,50,43],
[41,42,38,0,52,44,37,45],
[29,37,31,28,0,35,35,42],
[41,45,45,36,45,0,41,44],
[39,40,30,43,45,39,0,47],
[40,40,37,35,38,36,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1478, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,37,30,29,35,36,37],
[47,0,41,42,43,40,50,43],
[43,39,0,39,37,35,35,42],
[50,38,41,0,36,38,42,41],
[51,37,43,44,0,39,40,40],
[45,40,45,42,41,0,49,44],
[44,30,45,38,40,31,0,48],
[43,37,38,39,40,36,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1479, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,42,38,46,55,36,34],
[27,0,40,23,32,42,36,36],
[38,40,0,34,30,28,40,34],
[42,57,46,0,40,47,41,43],
[34,48,50,40,0,33,36,26],
[25,38,52,33,47,0,37,34],
[44,44,40,39,44,43,0,32],
[46,44,46,37,54,46,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1480, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,45,39,34,49,50],
[32,0,35,39,35,31,32,36],
[34,45,0,44,38,33,42,50],
[35,41,36,0,34,43,39,46],
[41,45,42,46,0,40,40,46],
[46,49,47,37,40,0,42,51],
[31,48,38,41,40,38,0,48],
[30,44,30,34,34,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1481, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,35,28,34,34,39,34],
[46,0,42,37,37,39,43,37],
[45,38,0,35,38,34,34,34],
[52,43,45,0,46,39,40,44],
[46,43,42,34,0,36,37,44],
[46,41,46,41,44,0,43,35],
[41,37,46,40,43,37,0,41],
[46,43,46,36,36,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1482, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,45,53,36,42,39],
[31,0,34,28,44,29,23,29],
[38,46,0,34,52,40,43,41],
[35,52,46,0,56,40,46,48],
[27,36,28,24,0,27,32,32],
[44,51,40,40,53,0,41,43],
[38,57,37,34,48,39,0,36],
[41,51,39,32,48,37,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1483, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,57,45,57,34,43,38],
[29,0,59,45,45,47,44,45],
[23,21,0,29,45,28,33,28],
[35,35,51,0,39,33,38,33],
[23,35,35,41,0,24,29,33],
[46,33,52,47,56,0,37,48],
[37,36,47,42,51,43,0,47],
[42,35,52,47,47,32,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1484, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,37,53,39,37,46],
[42,0,42,26,43,32,31,43],
[32,38,0,31,43,40,33,47],
[43,54,49,0,55,45,40,44],
[27,37,37,25,0,25,35,34],
[41,48,40,35,55,0,38,46],
[43,49,47,40,45,42,0,47],
[34,37,33,36,46,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1485, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,39,38,43,38,45],
[35,0,34,41,38,42,37,43],
[42,46,0,44,38,36,42,44],
[41,39,36,0,36,44,36,42],
[42,42,42,44,0,44,36,41],
[37,38,44,36,36,0,38,37],
[42,43,38,44,44,42,0,40],
[35,37,36,38,39,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1486, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,46,44,40,46,40,48],
[33,0,38,39,38,45,34,39],
[34,42,0,42,38,36,40,44],
[36,41,38,0,43,47,44,42],
[40,42,42,37,0,46,40,41],
[34,35,44,33,34,0,39,38],
[40,46,40,36,40,41,0,42],
[32,41,36,38,39,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1487, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,42,36,39,38,38,51],
[50,0,51,48,43,47,47,40],
[38,29,0,32,32,31,41,32],
[44,32,48,0,34,40,41,53],
[41,37,48,46,0,44,41,48],
[42,33,49,40,36,0,41,45],
[42,33,39,39,39,39,0,50],
[29,40,48,27,32,35,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1488, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,41,47,46,40,50,50],
[30,0,31,41,33,37,36,40],
[39,49,0,45,41,39,36,36],
[33,39,35,0,28,40,29,36],
[34,47,39,52,0,40,42,47],
[40,43,41,40,40,0,37,42],
[30,44,44,51,38,43,0,38],
[30,40,44,44,33,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1489, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,40,39,45,45,39],
[40,0,43,37,42,41,40,41],
[38,37,0,35,37,41,38,40],
[40,43,45,0,34,43,39,40],
[41,38,43,46,0,47,42,44],
[35,39,39,37,33,0,41,39],
[35,40,42,41,38,39,0,37],
[41,39,40,40,36,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1490, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,40,34,65,52,45,43],
[30,0,34,35,62,47,32,50],
[40,46,0,53,57,52,50,45],
[46,45,27,0,64,48,30,55],
[15,18,23,16,0,30,22,27],
[28,33,28,32,50,0,31,35],
[35,48,30,50,58,49,0,50],
[37,30,35,25,53,45,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1491, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,46,43,37,37,33,37],
[43,0,45,44,38,35,38,43],
[34,35,0,39,34,33,36,37],
[37,36,41,0,39,33,34,38],
[43,42,46,41,0,41,42,40],
[43,45,47,47,39,0,38,47],
[47,42,44,46,38,42,0,41],
[43,37,43,42,40,33,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1492, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,43,57,46,52,51,39],
[47,0,40,60,54,47,47,42],
[37,40,0,56,49,38,55,34],
[23,20,24,0,34,21,33,28],
[34,26,31,46,0,46,43,35],
[28,33,42,59,34,0,37,41],
[29,33,25,47,37,43,0,29],
[41,38,46,52,45,39,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1493, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,50,40,46,41,39,40],
[45,0,48,49,41,40,35,31],
[30,32,0,35,39,40,37,28],
[40,31,45,0,36,34,33,34],
[34,39,41,44,0,37,36,36],
[39,40,40,46,43,0,33,36],
[41,45,43,47,44,47,0,32],
[40,49,52,46,44,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1494, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,63,59,39,68,63,61],
[24,0,45,31,35,36,24,30],
[17,35,0,29,24,29,30,35],
[21,49,51,0,44,62,42,47],
[41,45,56,36,0,55,48,54],
[12,44,51,18,25,0,25,25],
[17,56,50,38,32,55,0,54],
[19,50,45,33,26,55,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1495, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,45,35,55,39,39],
[38,0,43,41,40,53,32,49],
[42,37,0,32,39,48,34,37],
[35,39,48,0,33,51,35,45],
[45,40,41,47,0,54,48,51],
[25,27,32,29,26,0,30,33],
[41,48,46,45,32,50,0,46],
[41,31,43,35,29,47,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1496, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,40,80,80,80,40],
[0,0,80,0,80,80,40,40],
[0,0,0,0,40,40,40,0],
[40,80,80,0,80,80,80,40],
[0,0,40,0,0,0,40,0],
[0,0,40,0,80,0,40,0],
[0,40,40,0,40,40,0,0],
[40,40,80,40,80,80,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1497, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,38,36,43,35,37],
[43,0,46,42,34,36,36,36],
[37,34,0,33,33,38,34,33],
[42,38,47,0,37,46,37,41],
[44,46,47,43,0,43,43,39],
[37,44,42,34,37,0,37,32],
[45,44,46,43,37,43,0,35],
[43,44,47,39,41,48,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1498, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,41,47,49,41,40],
[41,0,32,40,43,39,38,43],
[38,48,0,47,46,47,42,45],
[39,40,33,0,40,45,40,36],
[33,37,34,40,0,36,35,37],
[31,41,33,35,44,0,35,40],
[39,42,38,40,45,45,0,42],
[40,37,35,44,43,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1499, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,35,38,55,40,40],
[39,0,36,37,38,47,38,36],
[38,44,0,34,36,49,47,39],
[45,43,46,0,47,54,45,38],
[42,42,44,33,0,52,45,39],
[25,33,31,26,28,0,33,27],
[40,42,33,35,35,47,0,37],
[40,44,41,42,41,53,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1500, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,36,43,45,46,39,41],
[40,0,46,42,49,44,41,45],
[44,34,0,41,42,42,37,35],
[37,38,39,0,44,41,40,33],
[35,31,38,36,0,41,36,31],
[34,36,38,39,39,0,40,37],
[41,39,43,40,44,40,0,36],
[39,35,45,47,49,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1501, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,44,49,43,41,40],
[36,0,38,42,45,31,42,41],
[42,42,0,49,50,34,50,50],
[36,38,31,0,40,31,35,31],
[31,35,30,40,0,25,37,38],
[37,49,46,49,55,0,45,51],
[39,38,30,45,43,35,0,36],
[40,39,30,49,42,29,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1502, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,40,45,35,38,26,25],
[57,0,49,50,38,49,30,28],
[40,31,0,49,33,39,36,20],
[35,30,31,0,27,37,26,24],
[45,42,47,53,0,44,29,35],
[42,31,41,43,36,0,25,26],
[54,50,44,54,51,55,0,40],
[55,52,60,56,45,54,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1503, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,38,49,37,44,26,32],
[39,0,41,41,36,31,28,37],
[42,39,0,44,41,39,26,43],
[31,39,36,0,30,25,17,25],
[43,44,39,50,0,29,35,36],
[36,49,41,55,51,0,28,41],
[54,52,54,63,45,52,0,39],
[48,43,37,55,44,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1504, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,41,37,44,42,37],
[41,0,47,46,46,45,50,39],
[43,33,0,41,33,33,42,34],
[39,34,39,0,39,35,47,31],
[43,34,47,41,0,37,47,39],
[36,35,47,45,43,0,48,44],
[38,30,38,33,33,32,0,28],
[43,41,46,49,41,36,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1505, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,41,46,42,39,43],
[42,0,47,44,48,47,39,52],
[41,33,0,43,50,45,42,46],
[39,36,37,0,44,42,36,44],
[34,32,30,36,0,37,31,41],
[38,33,35,38,43,0,37,41],
[41,41,38,44,49,43,0,53],
[37,28,34,36,39,39,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1506, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,25,41,42,15,66,33],
[39,0,26,34,27,29,58,40],
[55,54,0,42,33,45,73,54],
[39,46,38,0,40,30,55,31],
[38,53,47,40,0,29,64,48],
[65,51,35,50,51,0,59,33],
[14,22,7,25,16,21,0,15],
[47,40,26,49,32,47,65,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1507, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,54,49,42,41,42,36],
[32,0,32,43,41,45,31,38],
[26,48,0,48,33,37,30,37],
[31,37,32,0,43,34,29,32],
[38,39,47,37,0,50,31,38],
[39,35,43,46,30,0,37,30],
[38,49,50,51,49,43,0,51],
[44,42,43,48,42,50,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1508, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,55,34,35,34,52,49],
[40,0,53,33,44,37,48,38],
[25,27,0,26,26,28,34,34],
[46,47,54,0,34,47,56,56],
[45,36,54,46,0,41,48,44],
[46,43,52,33,39,0,48,49],
[28,32,46,24,32,32,0,34],
[31,42,46,24,36,31,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1509, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,28,33,32,34,32,34],
[44,0,36,30,45,44,41,32],
[52,44,0,41,44,39,37,44],
[47,50,39,0,46,38,45,32],
[48,35,36,34,0,36,35,41],
[46,36,41,42,44,0,36,33],
[48,39,43,35,45,44,0,36],
[46,48,36,48,39,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1510, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,0,19,0,21,40,20],
[61,0,20,20,20,41,60,20],
[80,60,0,40,80,41,40,80],
[61,60,40,0,40,61,60,61],
[80,60,0,40,0,21,40,41],
[59,39,39,19,59,0,39,59],
[40,20,40,20,40,41,0,40],
[60,60,0,19,39,21,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1511, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,67,40,40,26,42],
[40,0,55,40,40,40,55,55],
[38,25,0,52,38,38,24,42],
[13,40,28,0,40,29,39,42],
[40,40,42,40,0,40,26,29],
[40,40,42,51,40,0,52,55],
[54,25,56,41,54,28,0,55],
[38,25,38,38,51,25,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1512, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,34,37,31,39,48,35],
[38,0,42,26,40,47,50,37],
[46,38,0,46,40,45,52,40],
[43,54,34,0,39,38,59,49],
[49,40,40,41,0,42,49,44],
[41,33,35,42,38,0,47,36],
[32,30,28,21,31,33,0,20],
[45,43,40,31,36,44,60,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1513, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,65,72,46,48,57,22,37],
[15,0,38,39,41,42,30,30],
[8,42,0,39,41,35,30,23],
[34,41,41,0,49,41,33,41],
[32,39,39,31,0,34,39,32],
[23,38,45,39,46,0,30,38],
[58,50,50,47,41,50,0,40],
[43,50,57,39,48,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1514, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,61,40,21,80,40,39,39],
[19,0,0,21,40,0,21,58],
[40,80,0,40,40,40,21,58],
[59,59,40,0,80,59,61,80],
[0,40,40,0,0,0,39,18],
[40,80,40,21,80,0,39,58],
[41,59,59,19,41,41,0,59],
[41,22,22,0,62,22,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1515, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,40,52,41,51,43,52],
[42,0,39,45,40,55,30,59],
[40,41,0,46,40,47,32,49],
[28,35,34,0,23,44,19,39],
[39,40,40,57,0,59,28,53],
[29,25,33,36,21,0,22,43],
[37,50,48,61,52,58,0,60],
[28,21,31,41,27,37,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1516, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,42,30,36,29,37],
[44,0,37,44,43,41,36,48],
[46,43,0,46,40,38,33,47],
[38,36,34,0,29,43,34,45],
[50,37,40,51,0,53,40,54],
[44,39,42,37,27,0,34,40],
[51,44,47,46,40,46,0,50],
[43,32,33,35,26,40,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1517, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,45,44,41,40,40],
[37,0,41,40,47,37,34,33],
[34,39,0,47,46,36,35,32],
[35,40,33,0,40,33,35,41],
[36,33,34,40,0,33,28,37],
[39,43,44,47,47,0,40,36],
[40,46,45,45,52,40,0,46],
[40,47,48,39,43,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1518, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,0,40,40,0,0],
[40,0,40,40,80,40,40,40],
[40,40,0,40,40,40,40,40],
[80,40,40,0,40,80,40,40],
[40,0,40,40,0,40,40,40],
[40,40,40,0,40,0,0,0],
[80,40,40,40,40,80,0,40],
[80,40,40,40,40,80,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1519, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,38,43,34,46,43,40],
[46,0,41,36,40,48,40,45],
[42,39,0,29,36,43,42,41],
[37,44,51,0,38,53,43,48],
[46,40,44,42,0,44,41,45],
[34,32,37,27,36,0,35,42],
[37,40,38,37,39,45,0,48],
[40,35,39,32,35,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1520, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,37,36,42,35,31,35],
[48,0,50,46,48,45,33,45],
[43,30,0,43,47,34,29,39],
[44,34,37,0,42,43,35,41],
[38,32,33,38,0,35,29,38],
[45,35,46,37,45,0,40,43],
[49,47,51,45,51,40,0,46],
[45,35,41,39,42,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1521, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,51,45,35,43,53,43],
[34,0,55,57,47,39,57,42],
[29,25,0,42,30,21,33,33],
[35,23,38,0,42,24,42,35],
[45,33,50,38,0,23,49,41],
[37,41,59,56,57,0,52,44],
[27,23,47,38,31,28,0,25],
[37,38,47,45,39,36,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1522, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,44,23,34,22,31],
[42,0,29,40,24,47,29,24],
[36,51,0,27,38,33,30,24],
[36,40,53,0,27,35,32,17],
[57,56,42,53,0,52,36,43],
[46,33,47,45,28,0,46,28],
[58,51,50,48,44,34,0,44],
[49,56,56,63,37,52,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1523, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,30,27,25,37,40,25],
[39,0,39,31,34,34,34,34],
[50,41,0,41,32,32,45,36],
[53,49,39,0,47,40,39,39],
[55,46,48,33,0,34,42,42],
[43,46,48,40,46,0,53,41],
[40,46,35,41,38,27,0,39],
[55,46,44,41,38,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1524, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,49,39,31,60,40,51],
[30,0,41,29,30,39,39,30],
[31,39,0,49,40,49,49,29],
[41,51,31,0,41,41,30,21],
[49,50,40,39,0,69,48,51],
[20,41,31,39,11,0,29,31],
[40,41,31,50,32,51,0,51],
[29,50,51,59,29,49,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1525, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,53,40,48,62,44,46],
[41,0,49,33,40,54,48,40],
[27,31,0,28,32,38,37,43],
[40,47,52,0,44,53,45,45],
[32,40,48,36,0,49,48,45],
[18,26,42,27,31,0,37,43],
[36,32,43,35,32,43,0,34],
[34,40,37,35,35,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1526, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,42,52,34,41,41],
[33,0,39,25,36,21,37,43],
[31,41,0,29,41,26,33,44],
[38,55,51,0,51,40,44,44],
[28,44,39,29,0,30,46,37],
[46,59,54,40,50,0,39,53],
[39,43,47,36,34,41,0,47],
[39,37,36,36,43,27,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1527, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,31,31,40,25,32,39],
[28,0,20,22,40,22,21,43],
[49,60,0,32,43,51,47,49],
[49,58,48,0,51,44,56,39],
[40,40,37,29,0,33,33,35],
[55,58,29,36,47,0,47,47],
[48,59,33,24,47,33,0,43],
[41,37,31,41,45,33,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1528, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,21,41,21,20,41,39],
[59,0,40,20,20,20,40,59],
[59,40,0,20,20,20,20,39],
[39,60,60,0,60,59,80,39],
[59,60,60,20,0,40,59,59],
[60,60,60,21,40,0,80,60],
[39,40,60,0,21,0,0,39],
[41,21,41,41,21,20,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1529, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,35,40,42,34,41],
[43,0,25,39,39,42,39,42],
[46,55,0,37,44,40,35,41],
[45,41,43,0,43,37,29,36],
[40,41,36,37,0,32,40,39],
[38,38,40,43,48,0,42,38],
[46,41,45,51,40,38,0,39],
[39,38,39,44,41,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1530, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,44,38,58,42,37,28],
[45,0,46,29,43,48,50,47],
[36,34,0,29,54,52,43,43],
[42,51,51,0,51,50,53,37],
[22,37,26,29,0,30,17,33],
[38,32,28,30,50,0,35,39],
[43,30,37,27,63,45,0,36],
[52,33,37,43,47,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1531, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,32,40,40,49,38],
[42,0,41,29,30,40,47,41],
[44,39,0,36,36,40,46,41],
[48,51,44,0,38,47,57,48],
[40,50,44,42,0,36,46,43],
[40,40,40,33,44,0,45,35],
[31,33,34,23,34,35,0,33],
[42,39,39,32,37,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1532, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,45,42,29,39,39,37],
[32,0,50,39,36,43,40,39],
[35,30,0,40,31,32,43,31],
[38,41,40,0,35,29,44,27],
[51,44,49,45,0,34,42,40],
[41,37,48,51,46,0,46,37],
[41,40,37,36,38,34,0,36],
[43,41,49,53,40,43,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1533, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,41,43,47,40,43,41],
[47,0,40,40,45,39,38,42],
[39,40,0,34,40,32,40,33],
[37,40,46,0,40,34,40,49],
[33,35,40,40,0,36,37,38],
[40,41,48,46,44,0,44,39],
[37,42,40,40,43,36,0,39],
[39,38,47,31,42,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1534, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,48,37,36,28,38,37],
[37,0,46,39,45,35,35,40],
[32,34,0,28,31,30,29,30],
[43,41,52,0,41,34,38,37],
[44,35,49,39,0,43,42,43],
[52,45,50,46,37,0,38,39],
[42,45,51,42,38,42,0,37],
[43,40,50,43,37,41,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1535, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,50,40,45,47,41,47],
[37,0,40,39,42,40,36,33],
[30,40,0,38,35,35,40,35],
[40,41,42,0,38,44,37,36],
[35,38,45,42,0,40,37,28],
[33,40,45,36,40,0,41,39],
[39,44,40,43,43,39,0,40],
[33,47,45,44,52,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1536, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,49,33,41,35,41,38],
[43,0,45,29,36,28,30,32],
[31,35,0,32,33,27,31,31],
[47,51,48,0,46,43,40,38],
[39,44,47,34,0,35,37,32],
[45,52,53,37,45,0,44,46],
[39,50,49,40,43,36,0,33],
[42,48,49,42,48,34,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1537, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,32,36,33,42,44],
[40,0,46,41,41,39,38,49],
[45,34,0,39,38,33,47,53],
[48,39,41,0,43,43,32,41],
[44,39,42,37,0,42,42,50],
[47,41,47,37,38,0,42,52],
[38,42,33,48,38,38,0,37],
[36,31,27,39,30,28,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1538, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,37,38,39,28,37],
[39,0,43,37,40,34,35,33],
[40,37,0,38,36,41,39,34],
[43,43,42,0,44,38,35,36],
[42,40,44,36,0,41,42,37],
[41,46,39,42,39,0,38,35],
[52,45,41,45,38,42,0,44],
[43,47,46,44,43,45,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1539, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,42,41,33,31,35,43],
[49,0,43,46,43,42,35,44],
[38,37,0,38,35,34,34,39],
[39,34,42,0,34,36,36,45],
[47,37,45,46,0,42,37,50],
[49,38,46,44,38,0,46,40],
[45,45,46,44,43,34,0,53],
[37,36,41,35,30,40,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1540, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,39,56,61,46,45,53],
[17,0,9,19,34,29,29,42],
[41,71,0,47,42,37,53,60],
[24,61,33,0,32,36,35,42],
[19,46,38,48,0,45,46,52],
[34,51,43,44,35,0,35,50],
[35,51,27,45,34,45,0,42],
[27,38,20,38,28,30,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1541, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,25,27,20,32,32,39],
[47,0,36,43,32,46,46,44],
[55,44,0,40,39,55,42,43],
[53,37,40,0,32,44,36,46],
[60,48,41,48,0,56,40,57],
[48,34,25,36,24,0,36,47],
[48,34,38,44,40,44,0,40],
[41,36,37,34,23,33,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1542, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,48,45,33,41,40],
[35,0,35,27,53,34,44,37],
[37,45,0,47,49,37,36,40],
[32,53,33,0,47,38,37,38],
[35,27,31,33,0,25,27,36],
[47,46,43,42,55,0,40,43],
[39,36,44,43,53,40,0,38],
[40,43,40,42,44,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1543, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,32,44,46,47,36],
[37,0,51,38,35,35,38,39],
[34,29,0,38,31,31,34,28],
[48,42,42,0,39,42,42,26],
[36,45,49,41,0,34,45,37],
[34,45,49,38,46,0,37,40],
[33,42,46,38,35,43,0,35],
[44,41,52,54,43,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1544, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,35,41,43,42,46,42],
[37,0,33,29,26,30,41,35],
[45,47,0,41,43,36,43,36],
[39,51,39,0,39,39,39,39],
[37,54,37,41,0,41,43,40],
[38,50,44,41,39,0,50,42],
[34,39,37,41,37,30,0,37],
[38,45,44,41,40,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1545, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,31,36,37,33,39],
[46,0,34,39,39,31,34,46],
[44,46,0,48,38,37,34,32],
[49,41,32,0,33,32,32,46],
[44,41,42,47,0,40,44,41],
[43,49,43,48,40,0,34,49],
[47,46,46,48,36,46,0,43],
[41,34,48,34,39,31,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1546, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,40,30,34,32,34],
[45,0,40,56,56,47,47,53],
[45,40,0,44,39,36,49,50],
[40,24,36,0,27,38,39,43],
[50,24,41,53,0,37,39,43],
[46,33,44,42,43,0,45,44],
[48,33,31,41,41,35,0,41],
[46,27,30,37,37,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1547, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,48,40,44,42,40,47],
[33,0,37,30,42,39,35,42],
[32,43,0,36,40,39,36,38],
[40,50,44,0,43,42,36,41],
[36,38,40,37,0,39,37,46],
[38,41,41,38,41,0,41,40],
[40,45,44,44,43,39,0,36],
[33,38,42,39,34,40,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1548, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,33,50,45,43,40,48],
[32,0,38,40,36,38,35,39],
[47,42,0,50,44,39,48,49],
[30,40,30,0,44,37,37,39],
[35,44,36,36,0,36,36,43],
[37,42,41,43,44,0,36,36],
[40,45,32,43,44,44,0,40],
[32,41,31,41,37,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1549, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,38,44,34,43,45,42],
[37,0,37,31,25,43,42,40],
[42,43,0,36,37,40,38,45],
[36,49,44,0,41,44,45,40],
[46,55,43,39,0,47,41,45],
[37,37,40,36,33,0,39,38],
[35,38,42,35,39,41,0,34],
[38,40,35,40,35,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1550, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,34,29,26,40,41],
[37,0,57,32,42,29,50,41],
[40,23,0,33,37,30,50,31],
[46,48,47,0,34,42,54,40],
[51,38,43,46,0,47,46,38],
[54,51,50,38,33,0,43,43],
[40,30,30,26,34,37,0,40],
[39,39,49,40,42,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1551, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,29,33,35,37,30,44],
[36,0,42,38,34,40,32,52],
[51,38,0,42,46,37,33,53],
[47,42,38,0,40,45,41,57],
[45,46,34,40,0,45,44,53],
[43,40,43,35,35,0,38,45],
[50,48,47,39,36,42,0,49],
[36,28,27,23,27,35,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1552, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,43,43,40,42,41],
[38,0,33,35,33,28,36,38],
[49,47,0,37,40,39,41,46],
[37,45,43,0,37,34,39,40],
[37,47,40,43,0,31,40,45],
[40,52,41,46,49,0,41,41],
[38,44,39,41,40,39,0,41],
[39,42,34,40,35,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1553, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,34,37,37,42,41],
[37,0,38,36,39,33,42,41],
[38,42,0,34,42,45,45,48],
[46,44,46,0,37,49,52,45],
[43,41,38,43,0,53,45,43],
[43,47,35,31,27,0,50,35],
[38,38,35,28,35,30,0,36],
[39,39,32,35,37,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1554, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,54,42,40,41,42,47],
[40,0,54,43,44,29,36,42],
[26,26,0,28,26,30,26,34],
[38,37,52,0,46,29,35,42],
[40,36,54,34,0,32,41,52],
[39,51,50,51,48,0,40,40],
[38,44,54,45,39,40,0,40],
[33,38,46,38,28,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1555, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,40,21,40,20,0,21],
[60,0,40,41,61,41,41,41],
[40,40,0,20,40,40,40,40],
[59,39,60,0,40,20,39,80],
[40,19,40,40,0,40,19,40],
[60,39,40,60,40,0,19,60],
[80,39,40,41,61,61,0,60],
[59,39,40,0,40,20,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1556, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,32,43,39,36,36,37],
[43,0,33,39,42,47,42,36],
[48,47,0,39,34,44,49,56],
[37,41,41,0,48,46,42,48],
[41,38,46,32,0,45,42,54],
[44,33,36,34,35,0,33,39],
[44,38,31,38,38,47,0,52],
[43,44,24,32,26,41,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1557, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,43,41,33,37,29,34],
[41,0,45,44,34,42,31,48],
[37,35,0,38,30,39,33,39],
[39,36,42,0,28,34,36,35],
[47,46,50,52,0,42,40,46],
[43,38,41,46,38,0,38,51],
[51,49,47,44,40,42,0,48],
[46,32,41,45,34,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1558, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,36,42,41,36,33],
[50,0,47,39,43,47,42,45],
[41,33,0,42,44,43,37,36],
[44,41,38,0,39,47,37,37],
[38,37,36,41,0,42,31,36],
[39,33,37,33,38,0,34,34],
[44,38,43,43,49,46,0,44],
[47,35,44,43,44,46,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1559, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,41,32,38,36,28,37],
[49,0,50,40,39,44,33,42],
[39,30,0,35,30,33,31,35],
[48,40,45,0,37,40,38,42],
[42,41,50,43,0,42,46,39],
[44,36,47,40,38,0,35,38],
[52,47,49,42,34,45,0,39],
[43,38,45,38,41,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1560, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,45,56,36,39,44,46],
[36,0,45,52,48,47,41,48],
[35,35,0,42,36,52,45,53],
[24,28,38,0,27,41,33,31],
[44,32,44,53,0,46,41,57],
[41,33,28,39,34,0,31,30],
[36,39,35,47,39,49,0,43],
[34,32,27,49,23,50,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1561, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,42,56,54,39,53,44],
[22,0,33,39,49,30,46,46],
[38,47,0,57,55,45,40,48],
[24,41,23,0,46,36,40,39],
[26,31,25,34,0,28,40,30],
[41,50,35,44,52,0,45,42],
[27,34,40,40,40,35,0,37],
[36,34,32,41,50,38,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1562, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,42,34,36,41,21],
[38,0,30,38,28,41,38,38],
[49,50,0,44,43,38,40,41],
[38,42,36,0,30,40,38,28],
[46,52,37,50,0,37,46,39],
[44,39,42,40,43,0,37,26],
[39,42,40,42,34,43,0,32],
[59,42,39,52,41,54,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1563, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,35,39,38,34,39],
[34,0,34,36,38,39,35,36],
[38,46,0,39,38,39,42,43],
[45,44,41,0,45,42,40,46],
[41,42,42,35,0,37,40,38],
[42,41,41,38,43,0,40,36],
[46,45,38,40,40,40,0,40],
[41,44,37,34,42,44,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1564, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,44,45,42,39,26,31],
[55,0,52,48,44,44,28,39],
[36,28,0,29,35,34,31,27],
[35,32,51,0,36,40,32,36],
[38,36,45,44,0,46,34,47],
[41,36,46,40,34,0,46,50],
[54,52,49,48,46,34,0,44],
[49,41,53,44,33,30,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1565, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,35,45,45,42,40,51],
[26,0,32,39,43,39,41,42],
[45,48,0,40,44,38,41,54],
[35,41,40,0,46,40,43,42],
[35,37,36,34,0,35,34,50],
[38,41,42,40,45,0,35,47],
[40,39,39,37,46,45,0,46],
[29,38,26,38,30,33,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1566, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,33,36,44,35,25,40],
[54,0,41,54,45,31,53,36],
[47,39,0,50,50,29,36,26],
[44,26,30,0,45,38,39,33],
[36,35,30,35,0,39,45,29],
[45,49,51,42,41,0,43,27],
[55,27,44,41,35,37,0,39],
[40,44,54,47,51,53,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1567, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,24,29,45,26,45],
[45,0,48,42,44,35,40,26],
[39,32,0,35,37,43,39,29],
[56,38,45,0,44,46,46,36],
[51,36,43,36,0,41,39,25],
[35,45,37,34,39,0,41,26],
[54,40,41,34,41,39,0,35],
[35,54,51,44,55,54,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1568, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,46,47,32,43,43,40],
[39,0,62,48,35,47,36,35],
[34,18,0,35,24,25,21,25],
[33,32,45,0,22,38,35,26],
[48,45,56,58,0,51,35,39],
[37,33,55,42,29,0,42,27],
[37,44,59,45,45,38,0,34],
[40,45,55,54,41,53,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1569, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,43,50,45,45,34,45],
[45,0,39,50,36,49,40,44],
[37,41,0,52,29,40,34,39],
[30,30,28,0,16,35,15,25],
[35,44,51,64,0,52,38,39],
[35,31,40,45,28,0,27,40],
[46,40,46,65,42,53,0,45],
[35,36,41,55,41,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1570, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,36,48,42,41,43],
[36,0,31,32,31,31,35,40],
[42,49,0,32,35,42,43,40],
[44,48,48,0,43,40,41,50],
[32,49,45,37,0,38,34,41],
[38,49,38,40,42,0,46,44],
[39,45,37,39,46,34,0,44],
[37,40,40,30,39,36,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1571, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,30,39,47,39,37],
[39,0,41,39,43,35,46,39],
[38,39,0,32,36,36,45,37],
[50,41,48,0,39,43,45,43],
[41,37,44,41,0,38,43,37],
[33,45,44,37,42,0,43,34],
[41,34,35,35,37,37,0,42],
[43,41,43,37,43,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1572, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,30,37,34,30,40,37],
[37,0,34,40,37,38,46,37],
[50,46,0,38,39,47,53,35],
[43,40,42,0,35,45,53,38],
[46,43,41,45,0,39,42,46],
[50,42,33,35,41,0,43,37],
[40,34,27,27,38,37,0,33],
[43,43,45,42,34,43,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1573, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,41,17,50,38,40],
[36,0,22,25,26,48,57,32],
[46,58,0,31,27,53,63,54],
[39,55,49,0,46,64,57,60],
[63,54,53,34,0,52,54,46],
[30,32,27,16,28,0,36,43],
[42,23,17,23,26,44,0,39],
[40,48,26,20,34,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1574, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,46,42,42,43,51,47],
[48,0,39,38,48,41,53,50],
[34,41,0,27,37,40,45,47],
[38,42,53,0,46,43,50,39],
[38,32,43,34,0,40,36,38],
[37,39,40,37,40,0,43,39],
[29,27,35,30,44,37,0,29],
[33,30,33,41,42,41,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1575, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,40,38,45,36,33,33],
[49,0,39,46,45,40,45,42],
[40,41,0,49,49,43,44,50],
[42,34,31,0,41,32,30,41],
[35,35,31,39,0,30,25,34],
[44,40,37,48,50,0,40,47],
[47,35,36,50,55,40,0,45],
[47,38,30,39,46,33,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1576, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,40,40,46,46,43],
[38,0,37,37,43,44,45,43],
[38,43,0,42,44,46,43,47],
[40,43,38,0,42,45,40,43],
[40,37,36,38,0,44,45,45],
[34,36,34,35,36,0,40,35],
[34,35,37,40,35,40,0,38],
[37,37,33,37,35,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1577, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,57,41,35,35,35,43],
[38,0,48,41,32,24,35,29],
[23,32,0,34,29,18,28,32],
[39,39,46,0,42,21,47,39],
[45,48,51,38,0,38,38,40],
[45,56,62,59,42,0,42,38],
[45,45,52,33,42,38,0,46],
[37,51,48,41,40,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1578, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,31,26,47,50,35,36],
[36,0,32,34,54,49,34,43],
[49,48,0,41,61,43,40,55],
[54,46,39,0,61,56,48,43],
[33,26,19,19,0,38,30,45],
[30,31,37,24,42,0,36,31],
[45,46,40,32,50,44,0,51],
[44,37,25,37,35,49,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1579, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,37,42,39,42,48,44],
[53,0,32,42,34,39,52,47],
[43,48,0,49,46,44,57,38],
[38,38,31,0,46,34,44,39],
[41,46,34,34,0,36,33,35],
[38,41,36,46,44,0,47,41],
[32,28,23,36,47,33,0,41],
[36,33,42,41,45,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1580, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,46,44,34,48,33],
[40,0,25,32,29,34,30,30],
[36,55,0,40,47,41,40,37],
[34,48,40,0,39,42,39,35],
[36,51,33,41,0,40,39,35],
[46,46,39,38,40,0,31,35],
[32,50,40,41,41,49,0,40],
[47,50,43,45,45,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1581, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,34,32,33,41,44,35],
[47,0,40,31,40,47,45,37],
[46,40,0,42,40,50,45,41],
[48,49,38,0,48,52,50,39],
[47,40,40,32,0,40,45,36],
[39,33,30,28,40,0,44,33],
[36,35,35,30,35,36,0,36],
[45,43,39,41,44,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1582, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,39,48,36,47,42],
[41,0,39,28,38,37,32,33],
[35,41,0,40,42,32,43,34],
[41,52,40,0,45,40,42,45],
[32,42,38,35,0,34,41,40],
[44,43,48,40,46,0,39,35],
[33,48,37,38,39,41,0,41],
[38,47,46,35,40,45,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1583, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,44,36,42,36,42],
[40,0,35,44,38,35,36,39],
[41,45,0,42,44,41,39,44],
[36,36,38,0,43,41,31,43],
[44,42,36,37,0,42,42,38],
[38,45,39,39,38,0,44,45],
[44,44,41,49,38,36,0,43],
[38,41,36,37,42,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1584, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,50,34,38,45,31,42],
[35,0,54,40,40,43,41,41],
[30,26,0,34,27,31,25,45],
[46,40,46,0,41,39,41,49],
[42,40,53,39,0,36,29,53],
[35,37,49,41,44,0,42,42],
[49,39,55,39,51,38,0,56],
[38,39,35,31,27,38,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1585, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,41,43,41,43,33],
[40,0,36,41,42,36,39,31],
[36,44,0,35,45,33,42,27],
[39,39,45,0,46,44,42,38],
[37,38,35,34,0,38,40,33],
[39,44,47,36,42,0,32,42],
[37,41,38,38,40,48,0,32],
[47,49,53,42,47,38,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1586, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,30,35,34,27,39],
[43,0,47,40,42,36,40,46],
[46,33,0,37,45,39,38,39],
[50,40,43,0,43,35,35,39],
[45,38,35,37,0,37,38,37],
[46,44,41,45,43,0,37,39],
[53,40,42,45,42,43,0,46],
[41,34,41,41,43,41,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1587, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,43,38,40,46,36,51],
[44,0,46,43,43,48,34,47],
[37,34,0,37,37,41,36,44],
[42,37,43,0,42,54,47,55],
[40,37,43,38,0,42,37,46],
[34,32,39,26,38,0,34,48],
[44,46,44,33,43,46,0,49],
[29,33,36,25,34,32,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1588, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,37,44,44,43,43],
[37,0,35,40,36,33,37,41],
[38,45,0,38,41,43,45,40],
[43,40,42,0,38,41,37,41],
[36,44,39,42,0,41,43,38],
[36,47,37,39,39,0,41,38],
[37,43,35,43,37,39,0,37],
[37,39,40,39,42,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1589, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,46,43,41,48,37,40],
[47,0,49,33,47,43,44,41],
[34,31,0,34,44,41,30,34],
[37,47,46,0,45,48,40,45],
[39,33,36,35,0,43,31,37],
[32,37,39,32,37,0,42,38],
[43,36,50,40,49,38,0,36],
[40,39,46,35,43,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1590, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,40,31,37,45,39],
[38,0,39,42,38,41,43,36],
[43,41,0,44,37,41,43,45],
[40,38,36,0,39,44,40,31],
[49,42,43,41,0,39,47,45],
[43,39,39,36,41,0,48,32],
[35,37,37,40,33,32,0,33],
[41,44,35,49,35,48,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1591, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,47,38,45,46,42,44],
[34,0,37,44,38,43,45,41],
[33,43,0,36,44,44,40,37],
[42,36,44,0,43,43,42,47],
[35,42,36,37,0,44,42,35],
[34,37,36,37,36,0,40,40],
[38,35,40,38,38,40,0,39],
[36,39,43,33,45,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1592, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,41,32,37,32,29],
[40,0,43,41,37,40,36,30],
[37,37,0,40,36,40,36,32],
[39,39,40,0,34,46,30,39],
[48,43,44,46,0,44,37,40],
[43,40,40,34,36,0,28,32],
[48,44,44,50,43,52,0,38],
[51,50,48,41,40,48,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1593, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,37,40,43,36,37],
[36,0,40,45,37,38,36,41],
[42,40,0,40,40,44,43,43],
[43,35,40,0,39,44,44,41],
[40,43,40,41,0,46,40,38],
[37,42,36,36,34,0,37,34],
[44,44,37,36,40,43,0,41],
[43,39,37,39,42,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1594, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,32,41,44,32,37,39],
[51,0,35,35,49,36,36,43],
[48,45,0,39,44,30,49,50],
[39,45,41,0,41,49,48,48],
[36,31,36,39,0,29,32,47],
[48,44,50,31,51,0,50,46],
[43,44,31,32,48,30,0,47],
[41,37,30,32,33,34,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1595, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,58,25,29,38,44,34,38],
[22,0,18,12,23,42,24,23],
[55,62,0,30,45,43,44,45],
[51,68,50,0,38,49,34,51],
[42,57,35,42,0,31,24,44],
[36,38,37,31,49,0,36,41],
[46,56,36,46,56,44,0,38],
[42,57,35,29,36,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1596, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,41,38,36,39,40,38],
[40,0,43,35,41,43,44,40],
[39,37,0,33,34,39,34,36],
[42,45,47,0,41,42,45,39],
[44,39,46,39,0,40,40,38],
[41,37,41,38,40,0,38,35],
[40,36,46,35,40,42,0,38],
[42,40,44,41,42,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1597, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,39,37,34,41,37],
[43,0,39,40,37,36,40,41],
[43,41,0,44,41,40,51,37],
[41,40,36,0,36,39,47,38],
[43,43,39,44,0,39,47,33],
[46,44,40,41,41,0,53,46],
[39,40,29,33,33,27,0,33],
[43,39,43,42,47,34,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1598, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,40,46,29,43,34,42],
[44,0,44,37,33,45,42,45],
[40,36,0,42,33,36,34,42],
[34,43,38,0,30,41,37,42],
[51,47,47,50,0,48,39,47],
[37,35,44,39,32,0,31,44],
[46,38,46,43,41,49,0,45],
[38,35,38,38,33,36,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1599, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,51,36,40,44,44],
[35,0,44,42,36,49,37,51],
[40,36,0,48,50,43,48,49],
[29,38,32,0,45,32,45,40],
[44,44,30,35,0,45,46,49],
[40,31,37,48,35,0,34,43],
[36,43,32,35,34,46,0,39],
[36,29,31,40,31,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1600, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,27,42,38,30,37,40],
[40,0,36,39,49,28,37,35],
[53,44,0,56,51,52,39,49],
[38,41,24,0,42,35,31,31],
[42,31,29,38,0,32,28,36],
[50,52,28,45,48,0,35,46],
[43,43,41,49,52,45,0,40],
[40,45,31,49,44,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1601, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,43,36,38,39,36,34],
[48,0,44,47,40,46,39,42],
[37,36,0,32,35,44,43,43],
[44,33,48,0,32,45,50,50],
[42,40,45,48,0,48,43,39],
[41,34,36,35,32,0,33,31],
[44,41,37,30,37,47,0,44],
[46,38,37,30,41,49,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1602, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,44,49,36,34,32],
[36,0,35,32,36,29,45,33],
[40,45,0,40,39,36,39,30],
[36,48,40,0,41,41,39,30],
[31,44,41,39,0,35,42,34],
[44,51,44,39,45,0,43,40],
[46,35,41,41,38,37,0,30],
[48,47,50,50,46,40,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1603, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,36,45,34,40,44],
[41,0,39,45,46,44,40,43],
[38,41,0,39,44,36,39,41],
[44,35,41,0,42,31,39,37],
[35,34,36,38,0,35,37,45],
[46,36,44,49,45,0,46,43],
[40,40,41,41,43,34,0,41],
[36,37,39,43,35,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1604, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,35,45,50,43,41],
[42,0,42,44,48,43,39,44],
[42,38,0,35,37,44,34,48],
[45,36,45,0,47,44,41,41],
[35,32,43,33,0,35,36,40],
[30,37,36,36,45,0,30,37],
[37,41,46,39,44,50,0,41],
[39,36,32,39,40,43,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1605, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,41,37,50,51,41],
[35,0,40,36,34,51,45,33],
[42,40,0,39,42,45,48,35],
[39,44,41,0,43,48,42,42],
[43,46,38,37,0,58,55,45],
[30,29,35,32,22,0,34,29],
[29,35,32,38,25,46,0,31],
[39,47,45,38,35,51,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1606, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,39,46,44,34,49,48],
[33,0,46,47,38,46,43,42],
[41,34,0,40,46,39,41,42],
[34,33,40,0,40,34,47,42],
[36,42,34,40,0,37,48,34],
[46,34,41,46,43,0,48,44],
[31,37,39,33,32,32,0,31],
[32,38,38,38,46,36,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1607, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,55,39,33,45,47,44],
[38,0,53,38,30,39,41,37],
[25,27,0,39,25,38,35,29],
[41,42,41,0,38,39,41,41],
[47,50,55,42,0,51,51,38],
[35,41,42,41,29,0,45,35],
[33,39,45,39,29,35,0,36],
[36,43,51,39,42,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1608, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,33,51,36,53,44,41],
[37,0,30,38,38,38,41,42],
[47,50,0,39,43,34,43,45],
[29,42,41,0,47,48,51,34],
[44,42,37,33,0,47,42,36],
[27,42,46,32,33,0,50,27],
[36,39,37,29,38,30,0,35],
[39,38,35,46,44,53,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1609, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,27,36,40,43,46,31],
[51,0,35,41,54,55,54,48],
[53,45,0,34,54,53,62,44],
[44,39,46,0,52,52,54,46],
[40,26,26,28,0,38,44,31],
[37,25,27,28,42,0,50,32],
[34,26,18,26,36,30,0,39],
[49,32,36,34,49,48,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1610, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,44,42,47,37,39,45],
[33,0,36,47,33,33,37,41],
[36,44,0,47,40,36,40,41],
[38,33,33,0,39,37,37,45],
[33,47,40,41,0,37,31,42],
[43,47,44,43,43,0,35,46],
[41,43,40,43,49,45,0,43],
[35,39,39,35,38,34,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1611, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,34,45,47,31,29,29],
[28,0,28,42,23,28,37,22],
[46,52,0,47,40,40,38,49],
[35,38,33,0,33,27,27,22],
[33,57,40,47,0,30,29,37],
[49,52,40,53,50,0,40,41],
[51,43,42,53,51,40,0,37],
[51,58,31,58,43,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1612, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,25,34,35,31,40,33],
[38,0,25,31,38,31,35,41],
[55,55,0,44,39,41,53,41],
[46,49,36,0,39,36,40,40],
[45,42,41,41,0,34,49,43],
[49,49,39,44,46,0,46,39],
[40,45,27,40,31,34,0,38],
[47,39,39,40,37,41,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1613, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,34,22,57,47,45],
[36,0,44,23,34,69,48,34],
[48,36,0,36,35,69,59,25],
[46,57,44,0,33,69,69,34],
[58,46,45,47,0,69,57,34],
[23,11,11,11,11,0,11,11],
[33,32,21,11,23,69,0,21],
[35,46,55,46,46,69,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1614, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,39,36,41,40,41],
[43,0,34,41,40,52,39,43],
[47,46,0,41,31,50,48,49],
[41,39,39,0,37,46,41,54],
[44,40,49,43,0,47,47,52],
[39,28,30,34,33,0,39,40],
[40,41,32,39,33,41,0,33],
[39,37,31,26,28,40,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1615, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,41,34,33,39,50,35],
[29,0,35,24,23,31,35,19],
[39,45,0,38,28,42,39,29],
[46,56,42,0,39,47,53,44],
[47,57,52,41,0,53,54,40],
[41,49,38,33,27,0,43,35],
[30,45,41,27,26,37,0,38],
[45,61,51,36,40,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1616, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,34,39,40,31,41,34],
[55,0,47,53,55,40,54,47],
[46,33,0,37,49,32,40,36],
[41,27,43,0,52,35,46,42],
[40,25,31,28,0,24,43,37],
[49,40,48,45,56,0,50,43],
[39,26,40,34,37,30,0,30],
[46,33,44,38,43,37,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1617, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,26,26,26,26,52,80],
[52,0,26,26,26,26,52,52],
[54,54,0,54,54,54,26,54],
[54,54,26,0,54,54,52,80],
[54,54,26,26,0,52,26,80],
[54,54,26,26,28,0,26,54],
[28,28,54,28,54,54,0,54],
[0,28,26,0,0,26,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1618, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,45,34,40,37,34,44],
[38,0,40,39,42,35,39,42],
[35,40,0,35,32,35,38,37],
[46,41,45,0,39,44,39,49],
[40,38,48,41,0,42,33,38],
[43,45,45,36,38,0,40,46],
[46,41,42,41,47,40,0,40],
[36,38,43,31,42,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1619, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,47,45,42,35,45],
[40,0,39,42,41,42,40,48],
[42,41,0,45,41,45,34,44],
[33,38,35,0,40,37,33,36],
[35,39,39,40,0,40,33,40],
[38,38,35,43,40,0,40,38],
[45,40,46,47,47,40,0,42],
[35,32,36,44,40,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1620, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,40,36,35,48,36],
[49,0,39,39,36,39,48,31],
[48,41,0,47,35,46,55,39],
[40,41,33,0,29,45,45,31],
[44,44,45,51,0,46,53,40],
[45,41,34,35,34,0,42,34],
[32,32,25,35,27,38,0,23],
[44,49,41,49,40,46,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1621, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,40,40,37,35,28,37],
[48,0,49,56,42,52,40,58],
[40,31,0,52,28,38,29,45],
[40,24,28,0,29,30,31,35],
[43,38,52,51,0,43,51,55],
[45,28,42,50,37,0,47,37],
[52,40,51,49,29,33,0,45],
[43,22,35,45,25,43,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1622, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,50,36,39,37,40],
[42,0,40,49,43,45,41,47],
[44,40,0,43,37,36,44,36],
[30,31,37,0,35,31,33,37],
[44,37,43,45,0,42,41,42],
[41,35,44,49,38,0,43,40],
[43,39,36,47,39,37,0,41],
[40,33,44,43,38,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1623, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,46,42,43,43,41],
[41,0,47,47,41,35,45,36],
[35,33,0,49,36,39,39,37],
[34,33,31,0,32,30,34,37],
[38,39,44,48,0,35,47,43],
[37,45,41,50,45,0,42,52],
[37,35,41,46,33,38,0,41],
[39,44,43,43,37,28,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1624, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,35,22,41,38,42,36],
[60,0,39,43,67,38,48,41],
[45,41,0,40,55,50,40,48],
[58,37,40,0,47,53,38,50],
[39,13,25,33,0,30,36,28],
[42,42,30,27,50,0,38,35],
[38,32,40,42,44,42,0,32],
[44,39,32,30,52,45,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1625, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,45,43,53,36,49,48],
[40,0,31,42,51,35,39,39],
[35,49,0,33,40,37,38,37],
[37,38,47,0,44,44,40,41],
[27,29,40,36,0,35,31,36],
[44,45,43,36,45,0,34,38],
[31,41,42,40,49,46,0,43],
[32,41,43,39,44,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1626, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,31,37,40,39,47,43],
[44,0,38,38,46,36,53,46],
[49,42,0,40,48,33,47,45],
[43,42,40,0,50,44,54,42],
[40,34,32,30,0,33,36,33],
[41,44,47,36,47,0,54,44],
[33,27,33,26,44,26,0,33],
[37,34,35,38,47,36,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1627, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,45,29,31,32,32],
[48,0,38,40,39,33,41,42],
[48,42,0,47,40,43,49,44],
[35,40,33,0,42,31,34,38],
[51,41,40,38,0,38,42,45],
[49,47,37,49,42,0,46,45],
[48,39,31,46,38,34,0,45],
[48,38,36,42,35,35,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1628, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,41,42,44,47,49],
[36,0,39,42,43,43,40,42],
[41,41,0,45,38,45,40,39],
[39,38,35,0,37,36,34,33],
[38,37,42,43,0,45,38,38],
[36,37,35,44,35,0,34,40],
[33,40,40,46,42,46,0,43],
[31,38,41,47,42,40,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1629, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,39,43,37,43,34],
[41,0,38,38,35,37,40,40],
[42,42,0,36,44,32,42,40],
[41,42,44,0,46,36,42,43],
[37,45,36,34,0,40,43,41],
[43,43,48,44,40,0,40,38],
[37,40,38,38,37,40,0,37],
[46,40,40,37,39,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1630, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,47,43,38,47,46],
[39,0,49,41,36,35,44,45],
[32,31,0,43,34,32,48,44],
[33,39,37,0,35,44,36,43],
[37,44,46,45,0,47,48,39],
[42,45,48,36,33,0,41,45],
[33,36,32,44,32,39,0,33],
[34,35,36,37,41,35,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1631, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,42,36,43,39,44,35],
[44,0,45,39,42,42,37,47],
[38,35,0,38,35,45,33,39],
[44,41,42,0,42,45,40,35],
[37,38,45,38,0,40,41,45],
[41,38,35,35,40,0,40,34],
[36,43,47,40,39,40,0,41],
[45,33,41,45,35,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1632, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,47,34,36,43,48,40],
[39,0,48,39,43,48,39,35],
[33,32,0,28,36,43,46,32],
[46,41,52,0,43,54,51,39],
[44,37,44,37,0,34,41,36],
[37,32,37,26,46,0,41,33],
[32,41,34,29,39,39,0,33],
[40,45,48,41,44,47,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1633, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,46,48,35,43,46],
[42,0,40,47,45,42,53,52],
[41,40,0,48,43,38,46,44],
[34,33,32,0,42,31,39,38],
[32,35,37,38,0,26,45,39],
[45,38,42,49,54,0,44,39],
[37,27,34,41,35,36,0,45],
[34,28,36,42,41,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1634, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,47,49,43,36,45,47],
[42,0,39,37,39,42,43,40],
[33,41,0,40,42,35,44,38],
[31,43,40,0,36,36,44,46],
[37,41,38,44,0,30,50,46],
[44,38,45,44,50,0,46,47],
[35,37,36,36,30,34,0,44],
[33,40,42,34,34,33,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1635, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,36,37,39,39,39,33],
[46,0,44,39,44,37,49,38],
[44,36,0,36,40,34,43,46],
[43,41,44,0,45,35,42,35],
[41,36,40,35,0,33,43,37],
[41,43,46,45,47,0,47,35],
[41,31,37,38,37,33,0,30],
[47,42,34,45,43,45,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1636, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,25,30,51,28,38,49],
[36,0,43,29,52,41,33,34],
[55,37,0,27,57,35,36,40],
[50,51,53,0,52,43,35,44],
[29,28,23,28,0,21,29,31],
[52,39,45,37,59,0,40,48],
[42,47,44,45,51,40,0,43],
[31,46,40,36,49,32,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1637, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,43,38,33,39,38,29],
[49,0,34,37,37,50,50,50],
[37,46,0,44,37,46,43,36],
[42,43,36,0,38,56,51,50],
[47,43,43,42,0,52,42,38],
[41,30,34,24,28,0,41,32],
[42,30,37,29,38,39,0,28],
[51,30,44,30,42,48,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1638, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,44,45,48,40,41],
[39,0,42,43,47,46,44,37],
[38,38,0,45,44,43,45,40],
[36,37,35,0,44,47,43,37],
[35,33,36,36,0,42,38,35],
[32,34,37,33,38,0,38,35],
[40,36,35,37,42,42,0,44],
[39,43,40,43,45,45,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1639, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,34,38,43,38,51,31],
[40,0,38,33,35,38,43,28],
[46,42,0,43,47,37,56,33],
[42,47,37,0,43,47,57,40],
[37,45,33,37,0,26,50,34],
[42,42,43,33,54,0,53,38],
[29,37,24,23,30,27,0,30],
[49,52,47,40,46,42,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1640, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,38,36,32,42,43],
[37,0,34,38,38,30,38,40],
[36,46,0,37,38,32,38,40],
[42,42,43,0,39,39,45,41],
[44,42,42,41,0,33,43,39],
[48,50,48,41,47,0,41,40],
[38,42,42,35,37,39,0,35],
[37,40,40,39,41,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1641, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,38,47,56,60,45,45],
[36,0,30,50,54,56,32,35],
[42,50,0,47,58,53,38,52],
[33,30,33,0,41,38,33,37],
[24,26,22,39,0,31,23,27],
[20,24,27,42,49,0,30,31],
[35,48,42,47,57,50,0,44],
[35,45,28,43,53,49,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1642, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,17,32,17,46,17,14],
[80,0,49,63,31,63,51,48],
[63,31,0,46,31,63,48,31],
[48,17,34,0,31,48,34,31],
[63,49,49,49,0,46,49,31],
[34,17,17,32,34,0,34,14],
[63,29,32,46,31,46,0,14],
[66,32,49,49,49,66,66,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1643, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,34,36,33,25,34],
[46,0,36,41,31,32,27,33],
[46,44,0,42,40,47,26,37],
[46,39,38,0,47,44,38,36],
[44,49,40,33,0,26,27,28],
[47,48,33,36,54,0,31,54],
[55,53,54,42,53,49,0,37],
[46,47,43,44,52,26,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1644, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,46,52,32,38,31,33],
[47,0,40,61,46,47,47,41],
[34,40,0,47,47,39,40,33],
[28,19,33,0,32,29,34,32],
[48,34,33,48,0,34,34,32],
[42,33,41,51,46,0,47,31],
[49,33,40,46,46,33,0,33],
[47,39,47,48,48,49,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1645, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,50,43,44,36,37,40],
[44,0,44,42,48,35,38,44],
[30,36,0,32,43,34,30,31],
[37,38,48,0,41,37,38,35],
[36,32,37,39,0,40,38,35],
[44,45,46,43,40,0,37,35],
[43,42,50,42,42,43,0,40],
[40,36,49,45,45,45,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1646, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,42,13,42,42,55,42],
[55,0,42,40,42,55,55,42],
[38,38,0,38,38,25,26,25],
[67,40,42,0,42,55,55,42],
[38,38,42,38,0,55,54,55],
[38,25,55,25,25,0,54,40],
[25,25,54,25,26,26,0,39],
[38,38,55,38,25,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1647, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,53,40,46,45,43],
[37,0,40,42,34,42,46,42],
[36,40,0,43,39,41,49,37],
[27,38,37,0,32,38,39,33],
[40,46,41,48,0,49,51,40],
[34,38,39,42,31,0,39,35],
[35,34,31,41,29,41,0,31],
[37,38,43,47,40,45,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1648, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,44,44,48,37,43,59],
[35,0,40,43,39,44,43,45],
[36,40,0,40,36,40,29,41],
[36,37,40,0,43,39,43,47],
[32,41,44,37,0,48,39,44],
[43,36,40,41,32,0,34,55],
[37,37,51,37,41,46,0,51],
[21,35,39,33,36,25,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1649, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,46,39,43,47,49],
[38,0,41,41,42,43,44,47],
[34,39,0,32,38,38,42,45],
[34,39,48,0,36,39,42,39],
[41,38,42,44,0,42,47,49],
[37,37,42,41,38,0,43,42],
[33,36,38,38,33,37,0,40],
[31,33,35,41,31,38,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1650, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,50,38,48,46,48,44],
[30,0,38,28,37,43,32,40],
[30,42,0,34,34,41,31,41],
[42,52,46,0,40,49,38,47],
[32,43,46,40,0,42,38,40],
[34,37,39,31,38,0,30,40],
[32,48,49,42,42,50,0,42],
[36,40,39,33,40,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1651, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,27,19,27,26,36,21],
[57,0,31,50,30,32,36,43],
[53,49,0,50,38,46,39,56],
[61,30,30,0,29,33,41,50],
[53,50,42,51,0,52,55,37],
[54,48,34,47,28,0,36,46],
[44,44,41,39,25,44,0,44],
[59,37,24,30,43,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1652, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,38,42,43,37,29],
[41,0,31,47,35,43,35,31],
[39,49,0,40,47,40,46,43],
[42,33,40,0,37,47,48,40],
[38,45,33,43,0,43,44,31],
[37,37,40,33,37,0,33,19],
[43,45,34,32,36,47,0,35],
[51,49,37,40,49,61,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1653, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,29,35,22,51,45,26],
[51,0,46,40,39,60,44,35],
[51,34,0,35,51,54,43,49],
[45,40,45,0,39,50,45,45],
[58,41,29,41,0,59,45,41],
[29,20,26,30,21,0,11,25],
[35,36,37,35,35,69,0,40],
[54,45,31,35,39,55,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1654, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,39,43,41,41,41],
[45,0,46,43,41,41,39,48],
[39,34,0,40,41,34,43,44],
[41,37,40,0,42,40,48,43],
[37,39,39,38,0,35,37,53],
[39,39,46,40,45,0,41,41],
[39,41,37,32,43,39,0,44],
[39,32,36,37,27,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1655, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,42,44,51,39,41,36],
[50,0,50,48,48,39,44,49],
[38,30,0,39,36,37,45,41],
[36,32,41,0,34,31,32,31],
[29,32,44,46,0,42,41,42],
[41,41,43,49,38,0,40,51],
[39,36,35,48,39,40,0,40],
[44,31,39,49,38,29,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1656, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,26,34,43,42,34,41],
[30,0,25,27,34,33,24,39],
[54,55,0,35,51,42,40,54],
[46,53,45,0,40,44,38,45],
[37,46,29,40,0,39,32,44],
[38,47,38,36,41,0,36,43],
[46,56,40,42,48,44,0,48],
[39,41,26,35,36,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1657, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,51,39,43,43,49,44],
[32,0,42,39,36,40,38,45],
[29,38,0,32,36,36,39,37],
[41,41,48,0,46,40,45,43],
[37,44,44,34,0,40,42,42],
[37,40,44,40,40,0,40,42],
[31,42,41,35,38,40,0,39],
[36,35,43,37,38,38,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1658, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,25,36,43,33,33,46],
[43,0,39,46,41,36,42,50],
[55,41,0,50,46,47,36,49],
[44,34,30,0,37,35,38,45],
[37,39,34,43,0,38,44,49],
[47,44,33,45,42,0,43,54],
[47,38,44,42,36,37,0,56],
[34,30,31,35,31,26,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1659, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,30,39,32,44,42,35],
[34,0,38,37,35,45,36,46],
[50,42,0,49,44,37,48,53],
[41,43,31,0,35,40,47,31],
[48,45,36,45,0,54,45,49],
[36,35,43,40,26,0,32,35],
[38,44,32,33,35,48,0,35],
[45,34,27,49,31,45,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1660, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,50,34,49,25,33,44],
[44,0,45,39,44,33,32,41],
[30,35,0,33,46,22,30,43],
[46,41,47,0,50,41,40,53],
[31,36,34,30,0,32,20,37],
[55,47,58,39,48,0,35,52],
[47,48,50,40,60,45,0,48],
[36,39,37,27,43,28,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1661, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,45,51,36,45,59,51],
[31,0,36,48,41,36,55,46],
[35,44,0,41,29,36,47,49],
[29,32,39,0,28,37,46,37],
[44,39,51,52,0,33,46,43],
[35,44,44,43,47,0,50,42],
[21,25,33,34,34,30,0,35],
[29,34,31,43,37,38,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1662, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,44,39,38,37,32,47],
[27,0,31,36,29,32,25,32],
[36,49,0,38,41,51,38,41],
[41,44,42,0,39,39,39,43],
[42,51,39,41,0,42,38,40],
[43,48,29,41,38,0,34,38],
[48,55,42,41,42,46,0,37],
[33,48,39,37,40,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1663, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,40,32,42,38,45],
[41,0,43,44,40,39,48,48],
[42,37,0,41,41,41,45,39],
[40,36,39,0,34,43,46,41],
[48,40,39,46,0,44,44,42],
[38,41,39,37,36,0,44,43],
[42,32,35,34,36,36,0,35],
[35,32,41,39,38,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1664, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,33,38,48,46,45],
[37,0,37,32,47,44,34,28],
[38,43,0,36,39,48,36,41],
[47,48,44,0,49,50,42,39],
[42,33,41,31,0,38,36,36],
[32,36,32,30,42,0,37,34],
[34,46,44,38,44,43,0,35],
[35,52,39,41,44,46,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1665, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,35,38,44,30,40],
[41,0,47,31,38,41,33,37],
[45,33,0,44,44,41,46,37],
[45,49,36,0,35,41,41,44],
[42,42,36,45,0,32,42,44],
[36,39,39,39,48,0,43,47],
[50,47,34,39,38,37,0,36],
[40,43,43,36,36,33,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1666, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,46,45,49,42,34,43],
[37,0,43,35,44,39,34,40],
[34,37,0,32,37,33,35,37],
[35,45,48,0,39,39,37,42],
[31,36,43,41,0,33,36,38],
[38,41,47,41,47,0,48,46],
[46,46,45,43,44,32,0,41],
[37,40,43,38,42,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1667, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,31,40,41,38,31,40],
[43,0,39,46,41,41,31,43],
[49,41,0,43,48,40,49,51],
[40,34,37,0,40,36,37,36],
[39,39,32,40,0,30,28,39],
[42,39,40,44,50,0,47,39],
[49,49,31,43,52,33,0,48],
[40,37,29,44,41,41,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1668, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,32,34,31,28,36],
[43,0,45,38,38,40,40,45],
[40,35,0,30,39,42,34,40],
[48,42,50,0,47,40,41,49],
[46,42,41,33,0,43,37,42],
[49,40,38,40,37,0,39,40],
[52,40,46,39,43,41,0,42],
[44,35,40,31,38,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1669, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,41,40,49,51,52,51],
[38,0,39,42,49,45,49,52],
[39,41,0,42,50,49,50,58],
[40,38,38,0,42,36,40,42],
[31,31,30,38,0,42,41,39],
[29,35,31,44,38,0,42,49],
[28,31,30,40,39,38,0,47],
[29,28,22,38,41,31,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1670, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,39,42,37,49,43],
[35,0,32,29,47,31,39,43],
[37,48,0,34,53,45,42,36],
[41,51,46,0,52,42,54,39],
[38,33,27,28,0,37,42,39],
[43,49,35,38,43,0,44,47],
[31,41,38,26,38,36,0,35],
[37,37,44,41,41,33,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1671, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,29,29,32,41,42,43],
[48,0,34,36,34,40,46,42],
[51,46,0,38,40,48,54,49],
[51,44,42,0,37,44,43,43],
[48,46,40,43,0,43,56,56],
[39,40,32,36,37,0,39,38],
[38,34,26,37,24,41,0,38],
[37,38,31,37,24,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1672, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,39,37,36,34,32,39],
[44,0,37,39,37,35,35,37],
[41,43,0,47,43,38,37,38],
[43,41,33,0,37,32,35,34],
[44,43,37,43,0,37,40,39],
[46,45,42,48,43,0,39,40],
[48,45,43,45,40,41,0,45],
[41,43,42,46,41,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1673, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,33,32,45,40,47],
[40,0,52,28,35,34,34,47],
[42,28,0,22,42,26,36,34],
[47,52,58,0,58,30,37,43],
[48,45,38,22,0,27,41,47],
[35,46,54,50,53,0,37,49],
[40,46,44,43,39,43,0,42],
[33,33,46,37,33,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1674, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,37,39,36,39,33,40],
[43,0,40,41,47,40,35,39],
[43,40,0,39,38,37,36,42],
[41,39,41,0,40,33,30,43],
[44,33,42,40,0,38,36,42],
[41,40,43,47,42,0,42,44],
[47,45,44,50,44,38,0,48],
[40,41,38,37,38,36,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1675, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,55,35,49,36,29],
[42,0,49,45,52,49,41,37],
[34,31,0,55,38,49,25,20],
[25,35,25,0,37,40,30,22],
[45,28,42,43,0,52,31,30],
[31,31,31,40,28,0,37,41],
[44,39,55,50,49,43,0,45],
[51,43,60,58,50,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1676, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,39,35,39,46,33,47],
[29,0,29,35,41,41,29,29],
[41,51,0,42,36,52,29,41],
[45,45,38,0,34,58,27,46],
[41,39,44,46,0,51,47,47],
[34,39,28,22,29,0,33,34],
[47,51,51,53,33,47,0,58],
[33,51,39,34,33,46,22,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1677, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,29,39,39,32,38,35],
[42,0,35,36,32,37,38,39],
[51,45,0,45,46,36,46,42],
[41,44,35,0,35,44,41,36],
[41,48,34,45,0,39,41,39],
[48,43,44,36,41,0,42,39],
[42,42,34,39,39,38,0,36],
[45,41,38,44,41,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1678, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,41,41,40,21,40,60],
[41,0,41,61,21,21,21,41],
[39,39,0,39,19,39,19,39],
[39,19,41,0,19,0,40,60],
[40,59,61,61,0,41,41,61],
[59,59,41,80,39,0,60,80],
[40,59,61,40,39,20,0,40],
[20,39,41,20,19,0,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1679, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,47,49,42,50,42,39],
[31,0,36,41,28,30,26,36],
[33,44,0,44,36,44,28,41],
[31,39,36,0,30,41,31,37],
[38,52,44,50,0,49,42,45],
[30,50,36,39,31,0,26,38],
[38,54,52,49,38,54,0,50],
[41,44,39,43,35,42,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1680, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,35,45,33,49,31,42],
[42,0,45,53,45,50,39,47],
[45,35,0,53,38,46,32,41],
[35,27,27,0,30,36,24,29],
[47,35,42,50,0,48,43,39],
[31,30,34,44,32,0,44,32],
[49,41,48,56,37,36,0,46],
[38,33,39,51,41,48,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1681, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,40,42,45,44,34,35],
[35,0,40,51,38,38,36,36],
[40,40,0,47,34,40,35,33],
[38,29,33,0,31,32,30,29],
[35,42,46,49,0,41,37,38],
[36,42,40,48,39,0,42,34],
[46,44,45,50,43,38,0,41],
[45,44,47,51,42,46,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1682, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,33,31,36,35,32,35],
[43,0,42,38,37,41,37,46],
[47,38,0,42,41,42,37,44],
[49,42,38,0,41,41,40,45],
[44,43,39,39,0,39,35,39],
[45,39,38,39,41,0,42,41],
[48,43,43,40,45,38,0,45],
[45,34,36,35,41,39,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1683, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,34,32,39,34,33],
[45,0,45,48,37,41,41,40],
[41,35,0,37,32,37,37,37],
[46,32,43,0,37,41,35,36],
[48,43,48,43,0,44,40,45],
[41,39,43,39,36,0,33,41],
[46,39,43,45,40,47,0,40],
[47,40,43,44,35,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1684, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,37,47,31,39,46],
[36,0,33,24,44,28,40,37],
[34,47,0,39,39,41,50,42],
[43,56,41,0,56,31,45,45],
[33,36,41,24,0,25,32,34],
[49,52,39,49,55,0,54,52],
[41,40,30,35,48,26,0,42],
[34,43,38,35,46,28,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1685, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,46,44,44,38,41],
[30,0,38,44,39,35,34,36],
[37,42,0,43,40,44,40,44],
[34,36,37,0,44,35,37,38],
[36,41,40,36,0,40,38,39],
[36,45,36,45,40,0,34,45],
[42,46,40,43,42,46,0,41],
[39,44,36,42,41,35,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1686, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,54,34,42,32,49,54],
[40,0,56,36,38,36,36,43],
[26,24,0,38,33,26,45,45],
[46,44,42,0,38,44,36,43],
[38,42,47,42,0,38,36,52],
[48,44,54,36,42,0,42,49],
[31,44,35,44,44,38,0,49],
[26,37,35,37,28,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1687, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,52,43,56,48,36,38],
[35,0,37,34,40,47,44,39],
[28,43,0,35,48,46,45,32],
[37,46,45,0,49,51,44,34],
[24,40,32,31,0,37,42,28],
[32,33,34,29,43,0,38,34],
[44,36,35,36,38,42,0,40],
[42,41,48,46,52,46,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1688, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,30,26,24,28,30,33],
[53,0,49,30,39,40,45,53],
[50,31,0,39,40,37,34,40],
[54,50,41,0,36,42,51,50],
[56,41,40,44,0,50,38,51],
[52,40,43,38,30,0,40,43],
[50,35,46,29,42,40,0,41],
[47,27,40,30,29,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1689, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,28,28,30,29,45,35],
[51,0,40,42,42,45,46,35],
[52,40,0,32,36,42,39,44],
[52,38,48,0,41,48,41,37],
[50,38,44,39,0,41,50,34],
[51,35,38,32,39,0,43,36],
[35,34,41,39,30,37,0,29],
[45,45,36,43,46,44,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1690, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,37,37,43,34,40],
[36,0,40,32,43,48,38,41],
[45,40,0,41,35,42,38,37],
[43,48,39,0,33,46,37,40],
[43,37,45,47,0,47,42,39],
[37,32,38,34,33,0,35,37],
[46,42,42,43,38,45,0,49],
[40,39,43,40,41,43,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1691, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,39,47,48,36,46,46],
[42,0,31,42,38,28,37,43],
[41,49,0,51,42,36,38,42],
[33,38,29,0,35,34,39,37],
[32,42,38,45,0,40,40,44],
[44,52,44,46,40,0,47,51],
[34,43,42,41,40,33,0,48],
[34,37,38,43,36,29,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1692, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,44,38,33,42,43,38],
[48,0,45,43,32,40,46,37],
[36,35,0,33,29,35,43,37],
[42,37,47,0,37,43,46,36],
[47,48,51,43,0,39,44,40],
[38,40,45,37,41,0,48,40],
[37,34,37,34,36,32,0,31],
[42,43,43,44,40,40,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1693, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,49,53,28,42,47,47],
[53,0,50,53,40,53,55,59],
[31,30,0,42,25,40,41,27],
[27,27,38,0,20,43,36,32],
[52,40,55,60,0,60,48,53],
[38,27,40,37,20,0,47,32],
[33,25,39,44,32,33,0,37],
[33,21,53,48,27,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1694, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,46,41,43,31,51,46],
[34,0,29,35,42,40,52,43],
[34,51,0,30,41,35,49,38],
[39,45,50,0,34,56,56,57],
[37,38,39,46,0,45,61,56],
[49,40,45,24,35,0,60,55],
[29,28,31,24,19,20,0,23],
[34,37,42,23,24,25,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1695, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,42,28,42,56,42],
[38,0,38,39,66,24,28,28],
[38,42,0,39,39,38,28,14],
[38,41,41,0,41,52,55,27],
[52,14,41,39,0,38,42,28],
[38,56,42,28,42,0,42,28],
[24,52,52,25,38,38,0,38],
[38,52,66,53,52,52,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1696, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,57,45,49,43,46,40],
[34,0,35,28,36,34,33,29],
[23,45,0,38,27,36,27,28],
[35,52,42,0,38,37,38,34],
[31,44,53,42,0,38,38,31],
[37,46,44,43,42,0,35,36],
[34,47,53,42,42,45,0,38],
[40,51,52,46,49,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1697, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,32,36,29,36,26,31],
[50,0,44,41,41,39,35,44],
[48,36,0,41,47,44,35,44],
[44,39,39,0,31,45,41,44],
[51,39,33,49,0,48,42,42],
[44,41,36,35,32,0,33,45],
[54,45,45,39,38,47,0,48],
[49,36,36,36,38,35,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1698, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,38,35,43,41,36,40],
[45,0,41,40,45,45,42,37],
[42,39,0,39,39,40,39,42],
[45,40,41,0,40,44,38,45],
[37,35,41,40,0,38,35,34],
[39,35,40,36,42,0,38,39],
[44,38,41,42,45,42,0,44],
[40,43,38,35,46,41,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1699, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,28,20,37,42,39,31],
[47,0,43,28,40,51,47,50],
[52,37,0,34,39,53,41,40],
[60,52,46,0,43,60,39,42],
[43,40,41,37,0,48,47,38],
[38,29,27,20,32,0,38,36],
[41,33,39,41,33,42,0,35],
[49,30,40,38,42,44,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1700, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,43,45,44,40,49,40],
[39,0,40,39,40,44,45,43],
[37,40,0,38,42,38,46,38],
[35,41,42,0,42,37,46,41],
[36,40,38,38,0,43,49,46],
[40,36,42,43,37,0,47,36],
[31,35,34,34,31,33,0,36],
[40,37,42,39,34,44,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1701, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,64,64,48,31,47,64],
[0,0,16,16,17,0,31,0],
[16,64,0,49,33,32,31,32],
[16,64,31,0,32,15,15,48],
[32,63,47,48,0,47,47,47],
[49,80,48,65,33,0,64,48],
[33,49,49,65,33,16,0,33],
[16,80,48,32,33,32,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1702, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,19,41,29,35,32,33,33],
[61,0,51,38,48,57,53,40],
[39,29,0,28,33,33,32,32],
[51,42,52,0,48,45,39,33],
[45,32,47,32,0,42,43,36],
[48,23,47,35,38,0,42,35],
[47,27,48,41,37,38,0,51],
[47,40,48,47,44,45,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1703, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,44,50,48,35,36,50],
[45,0,38,50,48,51,52,35],
[36,42,0,49,41,44,52,36],
[30,30,31,0,41,38,45,43],
[32,32,39,39,0,32,39,16],
[45,29,36,42,48,0,35,49],
[44,28,28,35,41,45,0,28],
[30,45,44,37,64,31,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1704, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,28,49,43,46,35,52],
[36,0,34,53,44,55,41,43],
[52,46,0,56,40,63,46,45],
[31,27,24,0,38,51,36,43],
[37,36,40,42,0,47,38,47],
[34,25,17,29,33,0,38,42],
[45,39,34,44,42,42,0,38],
[28,37,35,37,33,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1705, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,41,48,37,43,64,49],
[27,0,34,34,28,34,49,49],
[39,46,0,50,24,38,59,50],
[32,46,30,0,47,54,61,54],
[43,52,56,33,0,57,64,63],
[37,46,42,26,23,0,57,49],
[16,31,21,19,16,23,0,42],
[31,31,30,26,17,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1706, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,27,36,35,37,20,34],
[48,0,28,40,44,39,27,36],
[53,52,0,37,41,43,17,36],
[44,40,43,0,45,40,42,30],
[45,36,39,35,0,49,31,31],
[43,41,37,40,31,0,32,39],
[60,53,63,38,49,48,0,45],
[46,44,44,50,49,41,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1707, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,34,47,36,39,45,38],
[35,0,42,48,40,47,44,49],
[46,38,0,48,40,50,38,36],
[33,32,32,0,34,41,37,41],
[44,40,40,46,0,47,39,45],
[41,33,30,39,33,0,32,38],
[35,36,42,43,41,48,0,43],
[42,31,44,39,35,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1708, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,34,27,39,42,40,34],
[42,0,42,38,41,51,47,49],
[46,38,0,31,31,51,57,45],
[53,42,49,0,40,50,59,39],
[41,39,49,40,0,47,47,39],
[38,29,29,30,33,0,41,33],
[40,33,23,21,33,39,0,31],
[46,31,35,41,41,47,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1709, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,43,33,41,39,50,44],
[49,0,35,37,41,35,49,49],
[37,45,0,38,46,41,48,55],
[47,43,42,0,40,32,54,56],
[39,39,34,40,0,35,49,46],
[41,45,39,48,45,0,54,45],
[30,31,32,26,31,26,0,38],
[36,31,25,24,34,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1710, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,48,41,39,33,35],
[31,0,31,36,39,40,33,33],
[38,49,0,50,35,39,36,36],
[32,44,30,0,39,40,38,33],
[39,41,45,41,0,42,36,41],
[41,40,41,40,38,0,39,40],
[47,47,44,42,44,41,0,40],
[45,47,44,47,39,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1711, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,23,49,57,51,40,50,25],
[57,0,55,64,57,40,58,31],
[31,25,0,33,57,40,42,40],
[23,16,47,0,57,42,49,31],
[29,23,23,23,0,38,49,22],
[40,40,40,38,42,0,49,15],
[30,22,38,31,31,31,0,22],
[55,49,40,49,58,65,58,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1712, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,43,45,40,43,45],
[39,0,42,37,46,41,42,43],
[35,38,0,35,38,35,34,33],
[37,43,45,0,43,39,39,42],
[35,34,42,37,0,34,36,41],
[40,39,45,41,46,0,38,47],
[37,38,46,41,44,42,0,42],
[35,37,47,38,39,33,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1713, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,43,36,42,33,41,33],
[46,0,35,37,50,38,43,38],
[37,45,0,35,43,35,39,27],
[44,43,45,0,54,43,40,43],
[38,30,37,26,0,27,34,35],
[47,42,45,37,53,0,40,43],
[39,37,41,40,46,40,0,34],
[47,42,53,37,45,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1714, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,32,54,33,47,36,42],
[38,0,35,45,43,38,42,42],
[48,45,0,49,46,42,39,48],
[26,35,31,0,29,32,28,37],
[47,37,34,51,0,42,31,51],
[33,42,38,48,38,0,30,45],
[44,38,41,52,49,50,0,52],
[38,38,32,43,29,35,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1715, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,40,38,49,46,39,41],
[43,0,31,44,42,48,41,42],
[40,49,0,47,37,50,46,37],
[42,36,33,0,33,35,35,38],
[31,38,43,47,0,39,42,38],
[34,32,30,45,41,0,38,38],
[41,39,34,45,38,42,0,32],
[39,38,43,42,42,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1716, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,45,38,46,39,39],
[37,0,46,43,40,52,45,40],
[36,34,0,45,41,49,43,37],
[35,37,35,0,41,40,35,39],
[42,40,39,39,0,47,50,43],
[34,28,31,40,33,0,38,31],
[41,35,37,45,30,42,0,32],
[41,40,43,41,37,49,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1717, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,80,80,80,80,80,40],
[0,0,40,80,40,80,40,40],
[0,40,0,40,40,40,40,40],
[0,0,40,0,40,0,40,0],
[0,40,40,40,0,40,40,0],
[0,0,40,80,40,0,40,0],
[0,40,40,40,40,40,0,0],
[40,40,40,80,80,80,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1718, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,68,45,54,43,31,43],
[23,0,32,46,23,10,33,23],
[12,48,0,36,35,12,33,24],
[35,34,44,0,35,12,33,34],
[26,57,45,45,0,45,57,57],
[37,70,68,68,35,0,68,60],
[49,47,47,47,23,12,0,23],
[37,57,56,46,23,20,57,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1719, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,22,41,34,40,42,24],
[33,0,33,30,30,36,42,19],
[58,47,0,52,42,44,61,20],
[39,50,28,0,33,47,36,16],
[46,50,38,47,0,53,38,41],
[40,44,36,33,27,0,29,23],
[38,38,19,44,42,51,0,39],
[56,61,60,64,39,57,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1720, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,36,36,39,40,36],
[40,0,38,39,35,42,43,36],
[43,42,0,37,37,43,42,40],
[44,41,43,0,37,40,46,47],
[44,45,43,43,0,41,39,36],
[41,38,37,40,39,0,40,40],
[40,37,38,34,41,40,0,44],
[44,44,40,33,44,40,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1721, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,30,36,46,46,42,40],
[51,0,46,55,38,40,47,46],
[50,34,0,40,34,43,45,44],
[44,25,40,0,39,36,43,37],
[34,42,46,41,0,39,47,47],
[34,40,37,44,41,0,47,37],
[38,33,35,37,33,33,0,39],
[40,34,36,43,33,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1722, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,39,47,39,54,35],
[41,0,38,39,42,45,45,34],
[35,42,0,50,43,57,45,32],
[41,41,30,0,53,48,56,46],
[33,38,37,27,0,35,35,27],
[41,35,23,32,45,0,37,31],
[26,35,35,24,45,43,0,35],
[45,46,48,34,53,49,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1723, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,43,42,41,41,36],
[39,0,41,36,40,36,40,45],
[39,39,0,37,45,39,42,38],
[37,44,43,0,35,43,44,43],
[38,40,35,45,0,43,34,38],
[39,44,41,37,37,0,40,42],
[39,40,38,36,46,40,0,38],
[44,35,42,37,42,38,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1724, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,37,30,36,31,32],
[39,0,32,33,30,38,35,34],
[46,48,0,49,41,50,47,33],
[43,47,31,0,37,45,35,33],
[50,50,39,43,0,46,37,38],
[44,42,30,35,34,0,36,29],
[49,45,33,45,43,44,0,41],
[48,46,47,47,42,51,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1725, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,32,34,29,37,31,35],
[49,0,36,44,40,47,44,43],
[48,44,0,39,38,45,41,45],
[46,36,41,0,42,49,39,50],
[51,40,42,38,0,44,33,38],
[43,33,35,31,36,0,35,43],
[49,36,39,41,47,45,0,41],
[45,37,35,30,42,37,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1726, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,34,49,44,39,35,41],
[40,0,33,33,43,39,39,35],
[46,47,0,43,43,51,44,32],
[31,47,37,0,41,40,32,41],
[36,37,37,39,0,36,40,41],
[41,41,29,40,44,0,49,49],
[45,41,36,48,40,31,0,36],
[39,45,48,39,39,31,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1727, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,38,39,39,43,45,54],
[43,0,44,40,49,45,47,55],
[42,36,0,49,47,41,48,63],
[41,40,31,0,43,29,37,52],
[41,31,33,37,0,35,34,47],
[37,35,39,51,45,0,41,60],
[35,33,32,43,46,39,0,47],
[26,25,17,28,33,20,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1728, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,32,32,32,41,35,30],
[37,0,34,29,27,30,33,27],
[48,46,0,31,35,44,39,36],
[48,51,49,0,38,49,40,38],
[48,53,45,42,0,47,37,43],
[39,50,36,31,33,0,35,38],
[45,47,41,40,43,45,0,39],
[50,53,44,42,37,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1729, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,37,38,39,37,33],
[45,0,40,45,52,34,47,42],
[45,40,0,47,49,37,46,43],
[43,35,33,0,34,41,37,45],
[42,28,31,46,0,34,38,34],
[41,46,43,39,46,0,39,39],
[43,33,34,43,42,41,0,41],
[47,38,37,35,46,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1730, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,46,39,40,45,40],
[35,0,34,43,34,38,31,39],
[37,46,0,41,43,42,41,39],
[34,37,39,0,33,37,37,30],
[41,46,37,47,0,49,47,39],
[40,42,38,43,31,0,40,33],
[35,49,39,43,33,40,0,37],
[40,41,41,50,41,47,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1731, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,37,51,58,46,49,43],
[27,0,29,33,49,44,36,39],
[43,51,0,46,55,47,40,35],
[29,47,34,0,50,40,36,38],
[22,31,25,30,0,36,31,31],
[34,36,33,40,44,0,30,36],
[31,44,40,44,49,50,0,47],
[37,41,45,42,49,44,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1732, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,29,35,31,24,38,25],
[43,0,46,46,43,37,39,33],
[51,34,0,36,38,43,39,38],
[45,34,44,0,27,26,33,35],
[49,37,42,53,0,30,54,41],
[56,43,37,54,50,0,45,48],
[42,41,41,47,26,35,0,18],
[55,47,42,45,39,32,62,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1733, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,43,34,50,51,40,42],
[24,0,39,35,45,31,36,35],
[37,41,0,31,44,45,35,40],
[46,45,49,0,47,34,30,40],
[30,35,36,33,0,27,39,33],
[29,49,35,46,53,0,38,35],
[40,44,45,50,41,42,0,36],
[38,45,40,40,47,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1734, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,44,48,43,43,42,40],
[37,0,41,44,40,33,38,45],
[36,39,0,43,35,36,41,43],
[32,36,37,0,33,28,36,39],
[37,40,45,47,0,38,42,42],
[37,47,44,52,42,0,43,38],
[38,42,39,44,38,37,0,42],
[40,35,37,41,38,42,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1735, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,44,51,46,42,37,42],
[34,0,44,39,43,31,37,45],
[36,36,0,35,43,32,32,47],
[29,41,45,0,37,31,36,43],
[34,37,37,43,0,38,38,42],
[38,49,48,49,42,0,43,50],
[43,43,48,44,42,37,0,47],
[38,35,33,37,38,30,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1736, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,34,37,42,35,35,44],
[43,0,40,34,48,37,38,40],
[46,40,0,36,41,36,36,32],
[43,46,44,0,46,48,39,48],
[38,32,39,34,0,31,32,36],
[45,43,44,32,49,0,42,41],
[45,42,44,41,48,38,0,38],
[36,40,48,32,44,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1737, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,29,40,44,29,42,42],
[38,0,29,31,40,29,50,53],
[51,51,0,35,62,46,51,52],
[40,49,45,0,57,43,60,54],
[36,40,18,23,0,21,38,34],
[51,51,34,37,59,0,49,50],
[38,30,29,20,42,31,0,35],
[38,27,28,26,46,30,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1738, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,40,39,42,37,37,40],
[47,0,43,47,39,42,39,51],
[40,37,0,38,43,36,35,38],
[41,33,42,0,36,36,41,44],
[38,41,37,44,0,45,38,34],
[43,38,44,44,35,0,39,43],
[43,41,45,39,42,41,0,49],
[40,29,42,36,46,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1739, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,51,37,40,38,42,34],
[39,0,42,31,30,26,32,30],
[29,38,0,28,37,36,32,32],
[43,49,52,0,38,44,34,42],
[40,50,43,42,0,41,35,36],
[42,54,44,36,39,0,43,39],
[38,48,48,46,45,37,0,42],
[46,50,48,38,44,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1740, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,39,44,34,37,32],
[37,0,36,25,36,36,31,35],
[46,44,0,42,44,41,33,37],
[41,55,38,0,46,42,45,46],
[36,44,36,34,0,35,38,24],
[46,44,39,38,45,0,45,41],
[43,49,47,35,42,35,0,35],
[48,45,43,34,56,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1741, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,33,36,37,38,35],
[44,0,42,44,44,42,34,32],
[45,38,0,37,41,39,39,40],
[47,36,43,0,43,41,41,46],
[44,36,39,37,0,40,41,34],
[43,38,41,39,40,0,36,38],
[42,46,41,39,39,44,0,34],
[45,48,40,34,46,42,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1742, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,42,40,34,42,42],
[44,0,40,37,45,42,40,39],
[36,40,0,31,38,38,39,38],
[38,43,49,0,41,35,41,44],
[40,35,42,39,0,36,42,39],
[46,38,42,45,44,0,47,47],
[38,40,41,39,38,33,0,42],
[38,41,42,36,41,33,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1743, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,34,44,41,37,41],
[39,0,44,34,41,40,36,42],
[43,36,0,39,39,40,41,43],
[46,46,41,0,39,44,41,38],
[36,39,41,41,0,46,40,39],
[39,40,40,36,34,0,39,41],
[43,44,39,39,40,41,0,38],
[39,38,37,42,41,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1744, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,59,40,42,40,70,40],
[42,0,60,40,62,51,61,41],
[21,20,0,31,52,31,41,31],
[40,40,49,0,42,11,49,51],
[38,18,28,38,0,31,48,31],
[40,29,49,69,49,0,58,49],
[10,19,39,31,32,22,0,30],
[40,39,49,29,49,31,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1745, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,48,42,41,33,48,35],
[39,0,57,36,47,43,46,40],
[32,23,0,41,32,34,37,28],
[38,44,39,0,49,45,55,33],
[39,33,48,31,0,43,46,40],
[47,37,46,35,37,0,46,37],
[32,34,43,25,34,34,0,37],
[45,40,52,47,40,43,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1746, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,32,48,40,37,48,47],
[27,0,31,27,21,32,41,41],
[48,49,0,41,39,45,46,50],
[32,53,39,0,38,39,43,53],
[40,59,41,42,0,38,46,49],
[43,48,35,41,42,0,29,60],
[32,39,34,37,34,51,0,55],
[33,39,30,27,31,20,25,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1747, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,51,51,40,56,45,38],
[29,0,25,37,31,46,33,31],
[29,55,0,44,51,58,38,44],
[29,43,36,0,37,49,40,43],
[40,49,29,43,0,49,37,36],
[24,34,22,31,31,0,32,22],
[35,47,42,40,43,48,0,34],
[42,49,36,37,44,58,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1748, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,44,41,44,43,37],
[44,0,40,41,40,45,43,46],
[35,40,0,38,38,46,41,44],
[36,39,42,0,37,42,43,40],
[39,40,42,43,0,40,38,38],
[36,35,34,38,40,0,35,38],
[37,37,39,37,42,45,0,38],
[43,34,36,40,42,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1749, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,28,40,33,38,43,39],
[45,0,42,40,40,36,40,42],
[52,38,0,40,40,43,49,40],
[40,40,40,0,40,43,49,41],
[47,40,40,40,0,44,47,41],
[42,44,37,37,36,0,48,39],
[37,40,31,31,33,32,0,36],
[41,38,40,39,39,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1750, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,41,39,47,39,40,33],
[45,0,39,38,46,41,41,40],
[39,41,0,40,42,37,36,36],
[41,42,40,0,45,42,31,33],
[33,34,38,35,0,38,39,28],
[41,39,43,38,42,0,37,30],
[40,39,44,49,41,43,0,41],
[47,40,44,47,52,50,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1751, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,42,46,42,36,34],
[40,0,34,38,34,39,40,33],
[43,46,0,52,37,42,39,32],
[38,42,28,0,32,38,40,29],
[34,46,43,48,0,34,40,37],
[38,41,38,42,46,0,36,37],
[44,40,41,40,40,44,0,40],
[46,47,48,51,43,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1752, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,43,38,41,43,44,45],
[43,0,32,45,42,41,45,41],
[37,48,0,49,43,52,44,41],
[42,35,31,0,39,42,47,45],
[39,38,37,41,0,39,44,42],
[37,39,28,38,41,0,44,41],
[36,35,36,33,36,36,0,39],
[35,39,39,35,38,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1753, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,54,52,40,54,41,54],
[34,0,41,44,34,43,36,36],
[26,39,0,37,29,41,29,32],
[28,36,43,0,24,46,35,33],
[40,46,51,56,0,50,46,43],
[26,37,39,34,30,0,30,30],
[39,44,51,45,34,50,0,43],
[26,44,48,47,37,50,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1754, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,38,45,41,48,65,44],
[42,0,40,45,47,40,59,38],
[42,40,0,40,34,49,46,46],
[35,35,40,0,38,42,51,36],
[39,33,46,42,0,46,50,47],
[32,40,31,38,34,0,49,34],
[15,21,34,29,30,31,0,27],
[36,42,34,44,33,46,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1755, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,36,38,38,41,32,33],
[47,0,47,37,51,46,56,47],
[44,33,0,37,40,24,35,28],
[42,43,43,0,31,43,48,43],
[42,29,40,49,0,41,40,39],
[39,34,56,37,39,0,40,41],
[48,24,45,32,40,40,0,37],
[47,33,52,37,41,39,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1756, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,42,44,36,46,47,42],
[38,0,42,44,40,44,47,43],
[38,38,0,49,34,42,43,39],
[36,36,31,0,30,39,42,38],
[44,40,46,50,0,45,44,46],
[34,36,38,41,35,0,39,38],
[33,33,37,38,36,41,0,33],
[38,37,41,42,34,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1757, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,31,36,39,36,25,36,32],
[49,0,44,44,43,40,42,44],
[44,36,0,51,41,31,37,32],
[41,36,29,0,44,29,34,31],
[44,37,39,36,0,35,43,37],
[55,40,49,51,45,0,50,44],
[44,38,43,46,37,30,0,37],
[48,36,48,49,43,36,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1758, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,48,36,41,44,33,37],
[42,0,44,41,42,37,43,42],
[32,36,0,47,44,34,31,41],
[44,39,33,0,41,37,26,43],
[39,38,36,39,0,43,32,38],
[36,43,46,43,37,0,33,37],
[47,37,49,54,48,47,0,45],
[43,38,39,37,42,43,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1759, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,30,33,34,32,40,23],
[45,0,38,37,39,33,41,39],
[50,42,0,33,38,35,31,36],
[47,43,47,0,40,36,47,41],
[46,41,42,40,0,44,46,36],
[48,47,45,44,36,0,48,46],
[40,39,49,33,34,32,0,42],
[57,41,44,39,44,34,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1760, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,37,38,41,47,36,39],
[36,0,30,42,34,38,41,36],
[43,50,0,46,40,40,34,50],
[42,38,34,0,25,37,28,39],
[39,46,40,55,0,52,33,48],
[33,42,40,43,28,0,40,38],
[44,39,46,52,47,40,0,46],
[41,44,30,41,32,42,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1761, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,36,49,40,39,37],
[45,0,49,40,40,47,41,42],
[44,31,0,41,35,40,32,36],
[44,40,39,0,42,43,38,42],
[31,40,45,38,0,38,28,38],
[40,33,40,37,42,0,36,35],
[41,39,48,42,52,44,0,43],
[43,38,44,38,42,45,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1762, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,40,32,46,34,42,49],
[28,0,32,32,45,35,34,33],
[40,48,0,41,46,47,59,50],
[48,48,39,0,49,32,46,46],
[34,35,34,31,0,35,36,41],
[46,45,33,48,45,0,47,52],
[38,46,21,34,44,33,0,41],
[31,47,30,34,39,28,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1763, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,41,50,41,43,36],
[40,0,40,47,49,37,37,36],
[36,40,0,44,34,38,39,33],
[39,33,36,0,40,31,35,26],
[30,31,46,40,0,30,33,42],
[39,43,42,49,50,0,45,34],
[37,43,41,45,47,35,0,35],
[44,44,47,54,38,46,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1764, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,47,48,39,46,42,46],
[41,0,46,35,35,40,35,39],
[33,34,0,41,40,29,43,42],
[32,45,39,0,40,39,46,38],
[41,45,40,40,0,40,51,44],
[34,40,51,41,40,0,44,46],
[38,45,37,34,29,36,0,29],
[34,41,38,42,36,34,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1765, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,32,48,38,33,39,34],
[56,0,40,56,50,54,46,48],
[48,40,0,36,38,45,46,39],
[32,24,44,0,25,42,39,30],
[42,30,42,55,0,45,43,29],
[47,26,35,38,35,0,42,29],
[41,34,34,41,37,38,0,28],
[46,32,41,50,51,51,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1766, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,40,33,45,36,36],
[41,0,33,42,38,45,32,32],
[45,47,0,36,43,46,41,37],
[40,38,44,0,38,41,36,36],
[47,42,37,42,0,43,40,36],
[35,35,34,39,37,0,34,36],
[44,48,39,44,40,46,0,47],
[44,48,43,44,44,44,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1767, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,43,36,34,36,41,34],
[48,0,43,44,39,39,47,44],
[37,37,0,38,31,32,49,35],
[44,36,42,0,40,33,44,34],
[46,41,49,40,0,36,50,34],
[44,41,48,47,44,0,54,37],
[39,33,31,36,30,26,0,32],
[46,36,45,46,46,43,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1768, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,36,48,39,34,37],
[41,0,50,47,45,42,39,49],
[34,30,0,40,41,38,41,33],
[44,33,40,0,40,38,35,44],
[32,35,39,40,0,28,27,43],
[41,38,42,42,52,0,53,49],
[46,41,39,45,53,27,0,49],
[43,31,47,36,37,31,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1769, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,38,46,41,39,37,39],
[28,0,38,35,41,37,35,42],
[42,42,0,49,41,37,38,43],
[34,45,31,0,32,29,33,29],
[39,39,39,48,0,35,37,47],
[41,43,43,51,45,0,40,41],
[43,45,42,47,43,40,0,35],
[41,38,37,51,33,39,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1770, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,42,41,29,37,41],
[40,0,41,46,52,45,58,39],
[45,39,0,57,52,50,52,45],
[38,34,23,0,44,46,40,40],
[39,28,28,36,0,51,47,40],
[51,35,30,34,29,0,36,28],
[43,22,28,40,33,44,0,27],
[39,41,35,40,40,52,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1771, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,38,31,34,42,39,44],
[40,0,40,44,31,45,32,45],
[42,40,0,29,37,42,27,40],
[49,36,51,0,38,46,47,47],
[46,49,43,42,0,42,40,46],
[38,35,38,34,38,0,41,41],
[41,48,53,33,40,39,0,44],
[36,35,40,33,34,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1772, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,39,46,46,46,46,40],
[48,0,47,42,58,40,44,49],
[41,33,0,37,39,34,48,48],
[34,38,43,0,49,31,47,36],
[34,22,41,31,0,28,30,32],
[34,40,46,49,52,0,54,34],
[34,36,32,33,50,26,0,37],
[40,31,32,44,48,46,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1773, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,34,41,42,39,40,43],
[46,0,31,37,43,46,41,41],
[46,49,0,38,44,38,45,46],
[39,43,42,0,47,38,38,48],
[38,37,36,33,0,29,33,47],
[41,34,42,42,51,0,39,45],
[40,39,35,42,47,41,0,38],
[37,39,34,32,33,35,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1774, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,41,43,42,45,42,36],
[32,0,40,32,43,39,43,42],
[39,40,0,40,51,39,44,41],
[37,48,40,0,41,40,40,39],
[38,37,29,39,0,35,38,40],
[35,41,41,40,45,0,43,41],
[38,37,36,40,42,37,0,42],
[44,38,39,41,40,39,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1775, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,48,38,35,40,41,42],
[32,0,41,43,40,42,32,32],
[32,39,0,41,36,36,38,34],
[42,37,39,0,37,40,40,40],
[45,40,44,43,0,38,40,42],
[40,38,44,40,42,0,36,40],
[39,48,42,40,40,44,0,40],
[38,48,46,40,38,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1776, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,32,41,41,40,41],
[39,0,46,32,42,41,37,40],
[38,34,0,35,41,35,35,39],
[48,48,45,0,45,43,44,39],
[39,38,39,35,0,36,35,34],
[39,39,45,37,44,0,40,40],
[40,43,45,36,45,40,0,40],
[39,40,41,41,46,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1777, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,32,37,42,34,37],
[41,0,39,43,32,35,30,39],
[43,41,0,36,38,37,34,41],
[48,37,44,0,39,42,38,38],
[43,48,42,41,0,45,40,43],
[38,45,43,38,35,0,40,42],
[46,50,46,42,40,40,0,48],
[43,41,39,42,37,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1778, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,13,41,21,27,53,27,30],
[67,0,45,41,38,46,27,38],
[39,35,0,27,21,47,34,30],
[59,39,53,0,52,46,33,27],
[53,42,59,28,0,53,34,30],
[27,34,33,34,27,0,33,41],
[53,53,46,47,46,47,0,28],
[50,42,50,53,50,39,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1779, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,35,41,49,40,34,44],
[28,0,29,34,35,41,29,35],
[45,51,0,38,47,47,38,43],
[39,46,42,0,47,47,40,49],
[31,45,33,33,0,34,28,36],
[40,39,33,33,46,0,43,42],
[46,51,42,40,52,37,0,48],
[36,45,37,31,44,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1780, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,63,52,40,42,50,47,48],
[17,0,30,23,24,33,30,19],
[28,50,0,41,36,32,32,27],
[40,57,39,0,42,46,34,44],
[38,56,44,38,0,50,29,42],
[30,47,48,34,30,0,34,30],
[33,50,48,46,51,46,0,39],
[32,61,53,36,38,50,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1781, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,46,37,36,39,31,39],
[44,0,40,31,42,40,33,39],
[34,40,0,34,40,41,46,38],
[43,49,46,0,39,39,47,48],
[44,38,40,41,0,45,40,43],
[41,40,39,41,35,0,42,41],
[49,47,34,33,40,38,0,41],
[41,41,42,32,37,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1782, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,40,43,34,36,35],
[34,0,40,37,27,36,36,32],
[39,40,0,41,43,31,44,28],
[40,43,39,0,29,32,35,49],
[37,53,37,51,0,47,44,40],
[46,44,49,48,33,0,43,43],
[44,44,36,45,36,37,0,39],
[45,48,52,31,40,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1783, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,34,35,37,27,41,33],
[36,0,27,32,30,34,32,25],
[46,53,0,46,44,43,41,33],
[45,48,34,0,34,37,38,30],
[43,50,36,46,0,42,40,36],
[53,46,37,43,38,0,44,41],
[39,48,39,42,40,36,0,41],
[47,55,47,50,44,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1784, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,38,39,38,43,42,39],
[38,0,32,40,33,39,35,40],
[42,48,0,46,48,37,49,51],
[41,40,34,0,44,35,38,43],
[42,47,32,36,0,38,41,48],
[37,41,43,45,42,0,45,47],
[38,45,31,42,39,35,0,48],
[41,40,29,37,32,33,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1785, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,20,20,20,20,20,20,20],
[60,0,41,21,21,62,41,59],
[60,39,0,60,39,80,42,59],
[60,59,20,0,20,41,20,38],
[60,59,41,60,0,62,62,38],
[60,18,0,39,18,0,21,38],
[60,39,38,60,18,59,0,38],
[60,21,21,42,42,42,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1786, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,53,27,54,27,27,27],
[26,0,26,27,54,27,27,0],
[27,54,0,54,54,54,27,27],
[53,53,26,0,53,27,53,53],
[26,26,26,27,0,0,0,26],
[53,53,26,53,80,0,53,26],
[53,53,53,27,80,27,0,53],
[53,80,53,27,54,54,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1787, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,46,40,37,29,43,41],
[41,0,55,45,56,50,53,37],
[34,25,0,33,38,32,30,26],
[40,35,47,0,57,46,32,44],
[43,24,42,23,0,41,36,41],
[51,30,48,34,39,0,29,32],
[37,27,50,48,44,51,0,47],
[39,43,54,36,39,48,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1788, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,35,32,40,30,36,36],
[43,0,47,47,40,49,44,50],
[45,33,0,36,45,43,34,33],
[48,33,44,0,48,47,41,49],
[40,40,35,32,0,38,36,36],
[50,31,37,33,42,0,32,45],
[44,36,46,39,44,48,0,44],
[44,30,47,31,44,35,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1789, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,39,45,39,45,38],
[39,0,42,47,45,44,45,41],
[35,38,0,46,42,43,41,33],
[41,33,34,0,40,38,47,35],
[35,35,38,40,0,33,39,34],
[41,36,37,42,47,0,51,39],
[35,35,39,33,41,29,0,34],
[42,39,47,45,46,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1790, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,31,31,39,35,32,41],
[39,0,31,29,35,32,30,36],
[49,49,0,41,47,36,47,43],
[49,51,39,0,42,37,37,43],
[41,45,33,38,0,42,41,48],
[45,48,44,43,38,0,46,45],
[48,50,33,43,39,34,0,42],
[39,44,37,37,32,35,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1791, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,80,80,80,80,80],
[40,0,80,80,80,80,80,80],
[40,0,0,40,80,80,80,40],
[0,0,40,0,40,80,40,80],
[0,0,0,40,0,80,80,40],
[0,0,0,0,0,0,40,40],
[0,0,0,40,0,40,0,40],
[0,0,40,0,40,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1792, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,37,38,52,37,35,42],
[44,0,39,35,47,43,37,40],
[43,41,0,36,43,34,31,40],
[42,45,44,0,50,39,41,47],
[28,33,37,30,0,26,31,38],
[43,37,46,41,54,0,37,43],
[45,43,49,39,49,43,0,49],
[38,40,40,33,42,37,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1793, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,36,30,38,29,35,42],
[52,0,51,50,45,34,65,57],
[44,29,0,24,19,36,35,38],
[50,30,56,0,33,44,55,44],
[42,35,61,47,0,43,60,65],
[51,46,44,36,37,0,44,54],
[45,15,45,25,20,36,0,38],
[38,23,42,36,15,26,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1794, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,53,52,37,56,45,40],
[45,0,45,42,39,49,46,42],
[27,35,0,40,30,40,42,32],
[28,38,40,0,42,44,36,35],
[43,41,50,38,0,42,45,36],
[24,31,40,36,38,0,49,36],
[35,34,38,44,35,31,0,34],
[40,38,48,45,44,44,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1795, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,45,42,39,39,41,40],
[35,0,37,41,39,29,35,46],
[35,43,0,38,38,33,39,42],
[38,39,42,0,37,43,43,42],
[41,41,42,43,0,36,40,42],
[41,51,47,37,44,0,41,45],
[39,45,41,37,40,39,0,46],
[40,34,38,38,38,35,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1796, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,48,43,36,37,45,55],
[38,0,46,43,30,41,37,46],
[32,34,0,27,32,43,33,40],
[37,37,53,0,38,45,34,41],
[44,50,48,42,0,45,40,51],
[43,39,37,35,35,0,37,44],
[35,43,47,46,40,43,0,52],
[25,34,40,39,29,36,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1797, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,48,47,48,36,36,41],
[45,0,56,50,53,43,35,42],
[32,24,0,38,48,27,17,33],
[33,30,42,0,40,27,35,40],
[32,27,32,40,0,26,25,34],
[44,37,53,53,54,0,49,34],
[44,45,63,45,55,31,0,46],
[39,38,47,40,46,46,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1798, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,35,35,42,38,40,38],
[44,0,36,41,44,43,41,41],
[45,44,0,32,45,43,41,41],
[45,39,48,0,47,44,41,42],
[38,36,35,33,0,44,36,37],
[42,37,37,36,36,0,36,39],
[40,39,39,39,44,44,0,42],
[42,39,39,38,43,41,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1799, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,47,36,48,69,46,35],
[47,0,47,45,57,57,23,47],
[33,33,0,46,46,67,25,33],
[44,35,34,0,36,57,36,23],
[32,23,34,44,0,67,23,36],
[11,23,13,23,13,0,12,25],
[34,57,55,44,57,68,0,56],
[45,33,47,57,44,55,24,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1800, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,30,34,49,30,40,32],
[37,0,41,46,49,39,45,37],
[50,39,0,41,45,35,43,43],
[46,34,39,0,50,42,41,33],
[31,31,35,30,0,33,30,26],
[50,41,45,38,47,0,40,33],
[40,35,37,39,50,40,0,38],
[48,43,37,47,54,47,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1801, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,0,61,60,40,80,41,80],
[80,0,61,80,40,80,60,80],
[19,19,0,40,19,19,19,39],
[20,0,40,0,20,39,20,20],
[40,40,61,60,0,60,40,60],
[0,0,61,41,20,0,41,20],
[39,20,61,60,40,39,0,59],
[0,0,41,60,20,60,21,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1802, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,38,38,34,39,44],
[40,0,39,36,36,36,44,40],
[38,41,0,45,40,39,43,46],
[42,44,35,0,33,36,39,36],
[42,44,40,47,0,42,45,50],
[46,44,41,44,38,0,44,50],
[41,36,37,41,35,36,0,40],
[36,40,34,44,30,30,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1803, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,47,34,50,33,28,30],
[45,0,41,47,58,41,40,46],
[33,39,0,32,47,29,30,29],
[46,33,48,0,47,45,37,36],
[30,22,33,33,0,32,25,29],
[47,39,51,35,48,0,37,33],
[52,40,50,43,55,43,0,43],
[50,34,51,44,51,47,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1804, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,45,38,41,41,40,43],
[44,0,37,33,34,34,41,34],
[35,43,0,46,45,43,40,46],
[42,47,34,0,40,45,45,44],
[39,46,35,40,0,38,47,36],
[39,46,37,35,42,0,46,37],
[40,39,40,35,33,34,0,27],
[37,46,34,36,44,43,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1805, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,39,47,40,37,37],
[38,0,24,39,24,25,35,25],
[43,56,0,37,41,40,45,45],
[41,41,43,0,41,40,40,34],
[33,56,39,39,0,34,42,43],
[40,55,40,40,46,0,47,43],
[43,45,35,40,38,33,0,37],
[43,55,35,46,37,37,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1806, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,40,38,40,49,50,44],
[39,0,41,38,33,51,49,40],
[40,39,0,42,38,42,49,41],
[42,42,38,0,33,46,45,43],
[40,47,42,47,0,44,53,41],
[31,29,38,34,36,0,42,34],
[30,31,31,35,27,38,0,33],
[36,40,39,37,39,46,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1807, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,38,44,44,34,34],
[44,0,46,40,36,46,45,45],
[46,34,0,42,39,47,35,41],
[42,40,38,0,43,52,40,41],
[36,44,41,37,0,43,33,43],
[36,34,33,28,37,0,29,35],
[46,35,45,40,47,51,0,37],
[46,35,39,39,37,45,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1808, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,44,40,38,47,45],
[37,0,36,28,38,41,36,49],
[41,44,0,39,36,35,42,40],
[36,52,41,0,38,34,42,47],
[40,42,44,42,0,42,40,43],
[42,39,45,46,38,0,43,43],
[33,44,38,38,40,37,0,48],
[35,31,40,33,37,37,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1809, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,36,41,43,42,41],
[40,0,44,40,41,44,44,38],
[43,36,0,38,39,37,39,40],
[44,40,42,0,47,48,44,42],
[39,39,41,33,0,40,40,36],
[37,36,43,32,40,0,42,41],
[38,36,41,36,40,38,0,38],
[39,42,40,38,44,39,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1810, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,25,38,24,40,36,35,49],
[55,0,30,31,40,39,35,47],
[42,50,0,49,49,40,42,33],
[56,49,31,0,49,38,44,51],
[40,40,31,31,0,43,34,45],
[44,41,40,42,37,0,28,41],
[45,45,38,36,46,52,0,44],
[31,33,47,29,35,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1811, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,42,45,49,42,40],
[43,0,44,42,41,43,35,35],
[36,36,0,38,32,38,34,30],
[38,38,42,0,42,46,38,38],
[35,39,48,38,0,40,37,31],
[31,37,42,34,40,0,33,27],
[38,45,46,42,43,47,0,43],
[40,45,50,42,49,53,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1812, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,33,41,34,44,44,40],
[41,0,37,45,35,48,47,44],
[47,43,0,39,41,45,42,37],
[39,35,41,0,30,47,47,39],
[46,45,39,50,0,43,43,43],
[36,32,35,33,37,0,40,35],
[36,33,38,33,37,40,0,38],
[40,36,43,41,37,45,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1813, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,47,39,41,46,34,38],
[37,0,41,42,41,43,34,39],
[33,39,0,41,42,45,34,35],
[41,38,39,0,43,44,31,44],
[39,39,38,37,0,37,35,39],
[34,37,35,36,43,0,32,35],
[46,46,46,49,45,48,0,39],
[42,41,45,36,41,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1814, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,32,35,35,36,43],
[34,0,43,40,32,35,42,36],
[38,37,0,34,34,33,45,37],
[48,40,46,0,34,36,42,38],
[45,48,46,46,0,30,47,35],
[45,45,47,44,50,0,54,39],
[44,38,35,38,33,26,0,29],
[37,44,43,42,45,41,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1815, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,41,57,46,36,39,35],
[34,0,34,49,46,36,40,41],
[39,46,0,61,48,41,46,39],
[23,31,19,0,45,23,24,29],
[34,34,32,35,0,30,34,20],
[44,44,39,57,50,0,46,41],
[41,40,34,56,46,34,0,47],
[45,39,41,51,60,39,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1816, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,42,33,50,44,50],
[36,0,29,47,42,37,32,33],
[40,51,0,57,49,40,48,43],
[38,33,23,0,44,35,39,41],
[47,38,31,36,0,47,42,48],
[30,43,40,45,33,0,43,47],
[36,48,32,41,38,37,0,41],
[30,47,37,39,32,33,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1817, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,41,44,45,44,43],
[40,0,34,36,37,46,41,37],
[38,46,0,43,47,42,43,45],
[39,44,37,0,46,47,41,40],
[36,43,33,34,0,45,40,41],
[35,34,38,33,35,0,37,36],
[36,39,37,39,40,43,0,37],
[37,43,35,40,39,44,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1818, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,39,38,35,35,36],
[41,0,35,39,47,48,39,46],
[45,45,0,34,40,36,36,50],
[41,41,46,0,44,38,50,44],
[42,33,40,36,0,29,36,45],
[45,32,44,42,51,0,41,47],
[45,41,44,30,44,39,0,46],
[44,34,30,36,35,33,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1819, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,47,40,40,51,38,42],
[50,0,51,39,40,48,41,36],
[33,29,0,35,37,39,39,29],
[40,41,45,0,45,45,36,38],
[40,40,43,35,0,42,39,31],
[29,32,41,35,38,0,35,32],
[42,39,41,44,41,45,0,41],
[38,44,51,42,49,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1820, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,54,34,49,32,39,30],
[42,0,43,29,40,26,29,34],
[26,37,0,27,39,24,24,31],
[46,51,53,0,50,37,38,45],
[31,40,41,30,0,23,35,36],
[48,54,56,43,57,0,48,39],
[41,51,56,42,45,32,0,36],
[50,46,49,35,44,41,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1821, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,45,38,41,42,45],
[41,0,46,42,38,37,40,42],
[43,34,0,43,35,41,44,39],
[35,38,37,0,33,37,36,39],
[42,42,45,47,0,38,42,39],
[39,43,39,43,42,0,45,45],
[38,40,36,44,38,35,0,43],
[35,38,41,41,41,35,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1822, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,45,43,50,34,51,35],
[28,0,48,42,28,32,47,47],
[35,32,0,30,35,34,44,39],
[37,38,50,0,30,40,47,52],
[30,52,45,50,0,41,46,42],
[46,48,46,40,39,0,52,39],
[29,33,36,33,34,28,0,32],
[45,33,41,28,38,41,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1823, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,40,35,37,47,44],
[43,0,39,37,40,46,40,44],
[35,41,0,38,35,41,36,43],
[40,43,42,0,32,39,38,37],
[45,40,45,48,0,44,46,40],
[43,34,39,41,36,0,41,36],
[33,40,44,42,34,39,0,46],
[36,36,37,43,40,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1824, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,46,43,37,44,39],
[42,0,42,31,38,41,40,38],
[44,38,0,44,36,37,43,31],
[34,49,36,0,39,36,56,40],
[37,42,44,41,0,38,48,30],
[43,39,43,44,42,0,44,45],
[36,40,37,24,32,36,0,31],
[41,42,49,40,50,35,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1825, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,45,37,46,37,38,34],
[48,0,44,49,50,39,43,33],
[35,36,0,45,46,44,30,34],
[43,31,35,0,37,38,36,36],
[34,30,34,43,0,37,31,25],
[43,41,36,42,43,0,41,38],
[42,37,50,44,49,39,0,40],
[46,47,46,44,55,42,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1826, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,55,31,25,37,32,26],
[45,0,62,42,42,42,44,34],
[25,18,0,28,26,38,27,20],
[49,38,52,0,36,49,41,34],
[55,38,54,44,0,36,43,40],
[43,38,42,31,44,0,35,30],
[48,36,53,39,37,45,0,31],
[54,46,60,46,40,50,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1827, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,43,36,32,30,47,41],
[40,0,54,49,47,42,50,51],
[37,26,0,35,35,30,39,30],
[44,31,45,0,39,35,49,44],
[48,33,45,41,0,37,44,40],
[50,38,50,45,43,0,49,47],
[33,30,41,31,36,31,0,37],
[39,29,50,36,40,33,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1828, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,43,40,46,41,43,46],
[30,0,34,33,31,33,30,37],
[37,46,0,47,45,39,44,44],
[40,47,33,0,45,39,35,42],
[34,49,35,35,0,40,40,42],
[39,47,41,41,40,0,39,41],
[37,50,36,45,40,41,0,41],
[34,43,36,38,38,39,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1829, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,40,39,43,44,48],
[38,0,49,42,40,47,42,43],
[34,31,0,29,42,41,40,37],
[40,38,51,0,43,47,43,46],
[41,40,38,37,0,39,33,34],
[37,33,39,33,41,0,39,40],
[36,38,40,37,47,41,0,39],
[32,37,43,34,46,40,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1830, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,39,43,35,45,39,49],
[40,0,42,47,45,53,43,44],
[41,38,0,37,41,45,43,47],
[37,33,43,0,36,48,40,41],
[45,35,39,44,0,47,41,47],
[35,27,35,32,33,0,37,35],
[41,37,37,40,39,43,0,36],
[31,36,33,39,33,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1831, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,19,29,10,29,19,29],
[46,0,46,46,37,37,45,36],
[61,34,0,46,43,45,62,45],
[51,34,34,0,42,52,50,62],
[70,43,37,38,0,38,44,37],
[51,43,35,28,42,0,42,35],
[61,35,18,30,36,38,0,28],
[51,44,35,18,43,45,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1832, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,43,44,40,36,44,42],
[38,0,36,46,34,38,45,36],
[37,44,0,40,34,45,41,41],
[36,34,40,0,31,37,44,35],
[40,46,46,49,0,46,46,45],
[44,42,35,43,34,0,47,39],
[36,35,39,36,34,33,0,41],
[38,44,39,45,35,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1833, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,50,56,46,39,43,49],
[28,0,42,59,39,44,45,47],
[30,38,0,49,33,40,46,45],
[24,21,31,0,32,20,25,33],
[34,41,47,48,0,36,44,48],
[41,36,40,60,44,0,36,46],
[37,35,34,55,36,44,0,41],
[31,33,35,47,32,34,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1834, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,32,38,34,30,50,40],
[36,0,32,45,28,31,46,36],
[48,48,0,43,38,44,43,44],
[42,35,37,0,33,38,39,38],
[46,52,42,47,0,42,50,39],
[50,49,36,42,38,0,49,35],
[30,34,37,41,30,31,0,34],
[40,44,36,42,41,45,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1835, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,26,23,18,40,49],
[35,0,46,24,33,28,41,34],
[42,34,0,25,25,20,33,42],
[54,56,55,0,44,32,55,50],
[57,47,55,36,0,51,50,42],
[62,52,60,48,29,0,46,57],
[40,39,47,25,30,34,0,43],
[31,46,38,30,38,23,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1836, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,22,29,28,28,34],
[48,0,31,34,37,43,38,35],
[47,49,0,40,49,43,46,40],
[58,46,40,0,47,43,47,45],
[51,43,31,33,0,39,42,35],
[52,37,37,37,41,0,47,40],
[52,42,34,33,38,33,0,37],
[46,45,40,35,45,40,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1837, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,40,50,41,42,42,40],
[54,0,43,54,39,50,48,40],
[40,37,0,39,29,31,38,37],
[30,26,41,0,33,39,35,34],
[39,41,51,47,0,42,42,36],
[38,30,49,41,38,0,43,44],
[38,32,42,45,38,37,0,34],
[40,40,43,46,44,36,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1838, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,51,50,43,55,48,39],
[37,0,35,37,34,41,33,37],
[29,45,0,44,41,51,42,36],
[30,43,36,0,37,48,34,36],
[37,46,39,43,0,43,40,40],
[25,39,29,32,37,0,30,30],
[32,47,38,46,40,50,0,37],
[41,43,44,44,40,50,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1839, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,37,37,39,40,42],
[37,0,44,36,43,37,43,40],
[35,36,0,28,38,32,41,36],
[43,44,52,0,47,44,49,40],
[43,37,42,33,0,32,38,42],
[41,43,48,36,48,0,45,37],
[40,37,39,31,42,35,0,40],
[38,40,44,40,38,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1840, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,41,47,34,44,45],
[35,0,38,32,33,34,35,41],
[37,42,0,36,33,37,42,40],
[39,48,44,0,38,38,41,50],
[33,47,47,42,0,39,40,47],
[46,46,43,42,41,0,40,49],
[36,45,38,39,40,40,0,45],
[35,39,40,30,33,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1841, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,53,80,53,27,53,27],
[53,0,53,53,26,53,53,53],
[27,27,0,54,26,27,53,27],
[0,27,26,0,26,0,26,27],
[27,54,54,54,0,27,53,27],
[53,27,53,80,53,0,80,27],
[27,27,27,54,27,0,0,27],
[53,27,53,53,53,53,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1842, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,42,38,44,46,44],
[40,0,35,40,36,41,46,42],
[43,45,0,40,40,44,42,38],
[38,40,40,0,34,41,47,36],
[42,44,40,46,0,47,50,41],
[36,39,36,39,33,0,39,34],
[34,34,38,33,30,41,0,36],
[36,38,42,44,39,46,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1843, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,52,54,45,46,50,46],
[40,0,46,48,43,48,45,40],
[28,34,0,47,37,46,40,44],
[26,32,33,0,34,42,32,32],
[35,37,43,46,0,44,40,32],
[34,32,34,38,36,0,42,35],
[30,35,40,48,40,38,0,36],
[34,40,36,48,48,45,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1844, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,54,38,35,35,46,43],
[40,0,54,42,42,39,45,42],
[26,26,0,32,26,29,26,30],
[42,38,48,0,35,37,46,47],
[45,38,54,45,0,43,42,39],
[45,41,51,43,37,0,41,33],
[34,35,54,34,38,39,0,42],
[37,38,50,33,41,47,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1845, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,45,44,44,51,36,48],
[37,0,44,44,39,46,39,41],
[35,36,0,40,34,43,37,46],
[36,36,40,0,40,36,35,50],
[36,41,46,40,0,39,40,44],
[29,34,37,44,41,0,41,45],
[44,41,43,45,40,39,0,53],
[32,39,34,30,36,35,27,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1846, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,45,38,42,42,47],
[41,0,35,31,32,38,39,34],
[35,45,0,52,27,38,33,27],
[35,49,28,0,38,38,40,26],
[42,48,53,42,0,44,45,31],
[38,42,42,42,36,0,36,33],
[38,41,47,40,35,44,0,36],
[33,46,53,54,49,47,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1847, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,40,43,35,51,47],
[41,0,25,39,40,43,41,34],
[45,55,0,31,41,41,41,34],
[40,41,49,0,47,44,44,41],
[37,40,39,33,0,40,39,35],
[45,37,39,36,40,0,35,26],
[29,39,39,36,41,45,0,49],
[33,46,46,39,45,54,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1848, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,35,40,37,38,42,42],
[36,0,40,35,41,37,35,44],
[45,40,0,35,39,43,39,39],
[40,45,45,0,39,44,42,42],
[43,39,41,41,0,36,40,38],
[42,43,37,36,44,0,38,40],
[38,45,41,38,40,42,0,45],
[38,36,41,38,42,40,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1849, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,40,37,43,40,27],
[43,0,49,44,41,52,41,34],
[36,31,0,32,43,40,43,26],
[40,36,48,0,31,48,40,40],
[43,39,37,49,0,50,45,28],
[37,28,40,32,30,0,38,31],
[40,39,37,40,35,42,0,40],
[53,46,54,40,52,49,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1850, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,44,46,43,32,30,42],
[47,0,49,51,41,35,46,48],
[36,31,0,42,31,36,42,50],
[34,29,38,0,30,26,30,46],
[37,39,49,50,0,43,41,48],
[48,45,44,54,37,0,43,46],
[50,34,38,50,39,37,0,46],
[38,32,30,34,32,34,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1851, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,30,36,34,42,27],
[43,0,39,37,38,41,46,36],
[44,41,0,38,52,43,36,36],
[50,43,42,0,41,48,43,36],
[44,42,28,39,0,38,40,46],
[46,39,37,32,42,0,37,33],
[38,34,44,37,40,43,0,30],
[53,44,44,44,34,47,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1852, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,51,42,40,35,37,39,41],
[29,0,32,34,33,45,39,39],
[38,48,0,44,40,54,41,46],
[40,46,36,0,35,50,37,48],
[45,47,40,45,0,48,42,43],
[43,35,26,30,32,0,37,43],
[41,41,39,43,38,43,0,42],
[39,41,34,32,37,37,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1853, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,46,40,41,40,39,41],
[40,0,39,36,36,40,43,39],
[34,41,0,38,35,37,37,38],
[40,44,42,0,38,39,32,41],
[39,44,45,42,0,43,40,39],
[40,40,43,41,37,0,39,44],
[41,37,43,48,40,41,0,38],
[39,41,42,39,41,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1854, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,33,33,30,39,29,35],
[48,0,43,46,38,47,42,47],
[47,37,0,42,44,45,43,42],
[47,34,38,0,36,42,42,42],
[50,42,36,44,0,54,41,42],
[41,33,35,38,26,0,32,30],
[51,38,37,38,39,48,0,40],
[45,33,38,38,38,50,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1855, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,42,43,34,39,39],
[43,0,44,42,38,37,38,40],
[39,36,0,43,40,35,35,43],
[38,38,37,0,37,30,36,40],
[37,42,40,43,0,40,40,44],
[46,43,45,50,40,0,43,46],
[41,42,45,44,40,37,0,40],
[41,40,37,40,36,34,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1856, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,33,37,42,40,44],
[44,0,43,38,41,44,38,47],
[36,37,0,39,38,41,37,45],
[47,42,41,0,38,36,38,52],
[43,39,42,42,0,46,44,44],
[38,36,39,44,34,0,41,50],
[40,42,43,42,36,39,0,60],
[36,33,35,28,36,30,20,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1857, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,34,43,44,36,38,33],
[39,0,40,39,46,37,41,36],
[46,40,0,44,44,39,40,31],
[37,41,36,0,42,33,45,36],
[36,34,36,38,0,36,35,32],
[44,43,41,47,44,0,43,40],
[42,39,40,35,45,37,0,35],
[47,44,49,44,48,40,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1858, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,39,47,45,47,39,44],
[37,0,31,42,33,37,26,47],
[41,49,0,50,43,54,30,49],
[33,38,30,0,40,43,29,31],
[35,47,37,40,0,45,40,32],
[33,43,26,37,35,0,26,28],
[41,54,50,51,40,54,0,49],
[36,33,31,49,48,52,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1859, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,18,41,41,49,49],
[42,0,34,32,44,33,42,42],
[39,46,0,47,40,48,58,41],
[62,48,33,0,41,41,49,41],
[39,36,40,39,0,49,59,51],
[39,47,32,39,31,0,59,50],
[31,38,22,31,21,21,0,19],
[31,38,39,39,29,30,61,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1860, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,43,49,38,30,49,41],
[32,0,53,53,39,39,45,38],
[37,27,0,54,29,34,37,34],
[31,27,26,0,25,26,31,32],
[42,41,51,55,0,34,39,38],
[50,41,46,54,46,0,35,39],
[31,35,43,49,41,45,0,39],
[39,42,46,48,42,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1861, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,49,45,53,25,64,41],
[35,0,47,47,50,45,39,32],
[31,33,0,32,40,33,49,28],
[35,33,48,0,48,28,43,31],
[27,30,40,32,0,23,56,25],
[55,35,47,52,57,0,49,45],
[16,41,31,37,24,31,0,21],
[39,48,52,49,55,35,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1862, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,50,34,37,48,50,33],
[39,0,46,26,33,42,43,28],
[30,34,0,26,30,32,33,34],
[46,54,54,0,37,48,54,41],
[43,47,50,43,0,54,51,40],
[32,38,48,32,26,0,40,29],
[30,37,47,26,29,40,0,36],
[47,52,46,39,40,51,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1863, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,31,28,40,29,32],
[48,0,42,32,40,38,31,34],
[48,38,0,43,39,42,43,41],
[49,48,37,0,40,40,38,39],
[52,40,41,40,0,36,39,34],
[40,42,38,40,44,0,36,38],
[51,49,37,42,41,44,0,37],
[48,46,39,41,46,42,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1864, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,42,57,29,36,38,38],
[37,0,58,42,43,47,36,51],
[38,22,0,32,23,36,42,28],
[23,38,48,0,37,42,37,37],
[51,37,57,43,0,42,37,40],
[44,33,44,38,38,0,33,26],
[42,44,38,43,43,47,0,26],
[42,29,52,43,40,54,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1865, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,36,42,48,37,43,42],
[43,0,34,43,47,50,38,43],
[44,46,0,45,47,44,39,43],
[38,37,35,0,41,32,38,44],
[32,33,33,39,0,59,34,46],
[43,30,36,48,21,0,29,43],
[37,42,41,42,46,51,0,30],
[38,37,37,36,34,37,50,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1866, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,42,37,38,45,43,51],
[39,0,35,50,43,49,44,50],
[38,45,0,37,47,51,46,49],
[43,30,43,0,37,39,42,48],
[42,37,33,43,0,44,33,41],
[35,31,29,41,36,0,30,49],
[37,36,34,38,47,50,0,50],
[29,30,31,32,39,31,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1867, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,39,43,51,45,47,42],
[28,0,34,43,35,43,40,35],
[41,46,0,35,50,36,29,37],
[37,37,45,0,46,48,33,35],
[29,45,30,34,0,34,26,29],
[35,37,44,32,46,0,36,37],
[33,40,51,47,54,44,0,39],
[38,45,43,45,51,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1868, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,24,56,23,23,16,33,23],
[56,0,70,47,30,37,58,47],
[24,10,0,31,23,31,26,38],
[57,33,49,0,40,31,33,7],
[57,50,57,40,0,48,50,47],
[64,43,49,49,32,0,52,33],
[47,22,54,47,30,28,0,21],
[57,33,42,73,33,47,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1869, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,45,49,49,48,44,41],
[43,0,39,44,39,46,42,47],
[35,41,0,38,44,42,38,31],
[31,36,42,0,37,42,42,40],
[31,41,36,43,0,41,36,38],
[32,34,38,38,39,0,34,29],
[36,38,42,38,44,46,0,26],
[39,33,49,40,42,51,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1870, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,26,13,40,27,53,33,39],
[54,0,35,40,39,46,41,38],
[67,45,0,60,59,66,40,52],
[40,40,20,0,46,41,27,40],
[53,41,21,34,0,55,40,46],
[27,34,14,39,25,0,27,12],
[47,39,40,53,40,53,0,47],
[41,42,28,40,34,68,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1871, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,50,52,39,47,50,45],
[34,0,48,46,45,56,38,40],
[30,32,0,36,37,42,39,35],
[28,34,44,0,33,41,37,34],
[41,35,43,47,0,49,45,30],
[33,24,38,39,31,0,36,29],
[30,42,41,43,35,44,0,35],
[35,40,45,46,50,51,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1872, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,45,50,48,37,53],
[40,0,37,47,55,46,45,53],
[45,43,0,45,47,50,39,37],
[35,33,35,0,47,44,43,40],
[30,25,33,33,0,39,26,36],
[32,34,30,36,41,0,33,44],
[43,35,41,37,54,47,0,50],
[27,27,43,40,44,36,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1873, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,49,31,34,23,32,23],
[44,0,42,40,54,40,39,35],
[31,38,0,42,35,26,47,31],
[49,40,38,0,51,47,42,48],
[46,26,45,29,0,39,45,33],
[57,40,54,33,41,0,41,35],
[48,41,33,38,35,39,0,39],
[57,45,49,32,47,45,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1874, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,38,40,35,40,40],
[36,0,38,39,39,35,39,35],
[41,42,0,36,34,36,41,39],
[42,41,44,0,36,32,41,44],
[40,41,46,44,0,39,44,42],
[45,45,44,48,41,0,43,37],
[40,41,39,39,36,37,0,39],
[40,45,41,36,38,43,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1875, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,37,55,43,32,39,48],
[24,0,28,46,32,31,24,36],
[43,52,0,52,47,40,41,44],
[25,34,28,0,36,25,35,31],
[37,48,33,44,0,31,32,37],
[48,49,40,55,49,0,33,61],
[41,56,39,45,48,47,0,50],
[32,44,36,49,43,19,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1876, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,33,42,49,48,47,46],
[28,0,30,38,36,42,37,48],
[47,50,0,44,43,52,40,37],
[38,42,36,0,48,33,39,39],
[31,44,37,32,0,36,31,35],
[32,38,28,47,44,0,31,48],
[33,43,40,41,49,49,0,37],
[34,32,43,41,45,32,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1877, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,34,44,41,30,29,38],
[52,0,47,41,40,40,41,41],
[46,33,0,36,31,29,41,40],
[36,39,44,0,28,34,35,35],
[39,40,49,52,0,32,45,38],
[50,40,51,46,48,0,43,50],
[51,39,39,45,35,37,0,36],
[42,39,40,45,42,30,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1878, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,41,52,50,42,48],
[38,0,33,35,51,30,29,34],
[40,47,0,48,53,48,36,36],
[39,45,32,0,51,47,39,43],
[28,29,27,29,0,29,28,34],
[30,50,32,33,51,0,22,27],
[38,51,44,41,52,58,0,49],
[32,46,44,37,46,53,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1879, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,49,36,42,43,40,39],
[30,0,40,33,38,38,35,31],
[31,40,0,34,41,44,38,38],
[44,47,46,0,38,44,43,44],
[38,42,39,42,0,43,39,42],
[37,42,36,36,37,0,34,39],
[40,45,42,37,41,46,0,39],
[41,49,42,36,38,41,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1880, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,42,39,38,54,40,49],
[43,0,40,37,30,48,35,47],
[38,40,0,32,37,45,28,38],
[41,43,48,0,41,44,32,39],
[42,50,43,39,0,43,33,46],
[26,32,35,36,37,0,25,29],
[40,45,52,48,47,55,0,43],
[31,33,42,41,34,51,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1881, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,41,26,46,28,44,41],
[39,0,52,34,45,43,41,47],
[39,28,0,40,43,35,34,53],
[54,46,40,0,48,40,50,50],
[34,35,37,32,0,31,33,39],
[52,37,45,40,49,0,50,43],
[36,39,46,30,47,30,0,39],
[39,33,27,30,41,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1882, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,36,27,45,46,26],
[45,0,53,26,26,36,37,25],
[44,27,0,37,26,45,47,36],
[44,54,43,0,35,27,45,45],
[53,54,54,45,0,27,38,45],
[35,44,35,53,53,0,54,52],
[34,43,33,35,42,26,0,26],
[54,55,44,35,35,28,54,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1883, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,36,36,34,41,40,50],
[42,0,42,43,36,36,41,51],
[44,38,0,47,41,42,45,46],
[44,37,33,0,35,41,39,42],
[46,44,39,45,0,52,39,55],
[39,44,38,39,28,0,38,45],
[40,39,35,41,41,42,0,47],
[30,29,34,38,25,35,33,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1884, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,32,42,34,39,35,40],
[41,0,31,41,30,44,30,42],
[48,49,0,45,42,47,40,41],
[38,39,35,0,35,44,37,37],
[46,50,38,45,0,50,36,45],
[41,36,33,36,30,0,32,42],
[45,50,40,43,44,48,0,41],
[40,38,39,43,35,38,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1885, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,33,38,28,29,39,33],
[47,0,41,43,30,37,42,40],
[47,39,0,49,32,38,37,32],
[42,37,31,0,30,26,36,33],
[52,50,48,50,0,41,42,34],
[51,43,42,54,39,0,40,42],
[41,38,43,44,38,40,0,29],
[47,40,48,47,46,38,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1886, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,37,40,33,33,44,37],
[39,0,44,47,46,30,41,53],
[43,36,0,37,33,30,50,44],
[40,33,43,0,41,40,36,39],
[47,34,47,39,0,39,43,42],
[47,50,50,40,41,0,45,45],
[36,39,30,44,37,35,0,25],
[43,27,36,41,38,35,55,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1887, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,49,36,44,28,35,42],
[38,0,37,26,33,26,23,43],
[31,43,0,35,30,29,31,45],
[44,54,45,0,38,35,33,35],
[36,47,50,42,0,37,43,42],
[52,54,51,45,43,0,36,57],
[45,57,49,47,37,44,0,50],
[38,37,35,45,38,23,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1888, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,65,66,55,67,41,39],
[27,0,39,53,27,42,28,40],
[15,41,0,41,42,55,28,28],
[14,27,39,0,14,14,13,27],
[25,53,38,66,0,66,28,26],
[13,38,25,66,14,0,28,26],
[39,52,52,67,52,52,0,52],
[41,40,52,53,54,54,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1889, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,43,41,36,38,48,32],
[47,0,44,40,38,50,50,45],
[37,36,0,30,37,26,33,36],
[39,40,50,0,37,24,54,43],
[44,42,43,43,0,36,43,41],
[42,30,54,56,44,0,52,43],
[32,30,47,26,37,28,0,35],
[48,35,44,37,39,37,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1890, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,45,51,44,43,33,52],
[39,0,44,44,41,44,40,53],
[35,36,0,44,40,38,42,43],
[29,36,36,0,33,24,33,43],
[36,39,40,47,0,34,32,49],
[37,36,42,56,46,0,39,55],
[47,40,38,47,48,41,0,48],
[28,27,37,37,31,25,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1891, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,54,52,45,66,54,44],
[42,0,44,53,44,64,42,38],
[26,36,0,37,35,57,42,14],
[28,27,43,0,34,50,36,27],
[35,36,45,46,0,65,43,22],
[14,16,23,30,15,0,29,8],
[26,38,38,44,37,51,0,29],
[36,42,66,53,58,72,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1892, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,80,40,80,80,40,80,40],
[0,0,40,40,40,40,40,40],
[40,40,0,40,40,40,40,40],
[0,40,40,0,0,0,40,0],
[0,40,40,80,0,0,80,40],
[40,40,40,80,80,0,80,40],
[0,40,40,40,0,0,0,0],
[40,40,40,80,40,40,80,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1893, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,44,45,43,36,41,42],
[42,0,42,40,42,34,40,37],
[36,38,0,45,41,35,38,34],
[35,40,35,0,47,38,38,32],
[37,38,39,33,0,33,38,26],
[44,46,45,42,47,0,42,39],
[39,40,42,42,42,38,0,40],
[38,43,46,48,54,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1894, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,49,33,46,46,49,24],
[34,0,37,39,14,39,28,42],
[31,43,0,50,27,41,36,47],
[47,41,30,0,33,41,36,36],
[34,66,53,47,0,42,45,42],
[34,41,39,39,38,0,36,30],
[31,52,44,44,35,44,0,43],
[56,38,33,44,38,50,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1895, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,42,46,41,44,43,46],
[41,0,49,45,44,36,37,49],
[38,31,0,34,37,42,44,46],
[34,35,46,0,40,38,38,50],
[39,36,43,40,0,38,40,35],
[36,44,38,42,42,0,45,44],
[37,43,36,42,40,35,0,38],
[34,31,34,30,45,36,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1896, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,33,52,25,44,44,53],
[34,0,29,40,21,31,54,41],
[47,51,0,50,43,37,57,45],
[28,40,30,0,41,27,42,62],
[55,59,37,39,0,31,55,53],
[36,49,43,53,49,0,56,50],
[36,26,23,38,25,24,0,48],
[27,39,35,18,27,30,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1897, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,38,33,35,39,37,39],
[44,0,44,41,40,42,37,40],
[42,36,0,37,35,40,43,39],
[47,39,43,0,36,38,42,43],
[45,40,45,44,0,48,48,37],
[41,38,40,42,32,0,41,40],
[43,43,37,38,32,39,0,41],
[41,40,41,37,43,40,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1898, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,21,59,0,21,0,0,19],
[59,0,59,40,59,59,59,39],
[21,21,0,0,21,0,0,19],
[80,40,80,0,60,39,59,40],
[59,21,59,20,0,20,59,19],
[80,21,80,41,60,0,59,40],
[80,21,80,21,21,21,0,40],
[61,41,61,40,61,40,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1899, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,30,55,45,55,48,45],
[23,0,37,24,27,25,38,24],
[50,43,0,34,24,49,42,51],
[25,56,46,0,29,46,39,36],
[35,53,56,51,0,44,55,69],
[25,55,31,34,36,0,39,52],
[32,42,38,41,25,41,0,51],
[35,56,29,44,11,28,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1900, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,41,48,38,40,34,49],
[43,0,35,47,44,38,41,46],
[39,45,0,42,33,40,37,35],
[32,33,38,0,34,28,32,41],
[42,36,47,46,0,41,39,41],
[40,42,40,52,39,0,38,55],
[46,39,43,48,41,42,0,54],
[31,34,45,39,39,25,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1901, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,38,33,33,32,44,27],
[44,0,43,35,25,38,37,37],
[42,37,0,35,36,38,42,29],
[47,45,45,0,40,47,51,42],
[47,55,44,40,0,46,48,39],
[48,42,42,33,34,0,42,39],
[36,43,38,29,32,38,0,34],
[53,43,51,38,41,41,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1902, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,26,37,30,49,28,27],
[48,0,40,45,44,51,46,46],
[54,40,0,43,34,49,36,49],
[43,35,37,0,28,36,40,34],
[50,36,46,52,0,45,38,41],
[31,29,31,44,35,0,46,22],
[52,34,44,40,42,34,0,48],
[53,34,31,46,39,58,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1903, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,46,38,42,37,46,43],
[47,0,44,44,40,36,32,41],
[34,36,0,34,33,31,38,31],
[42,36,46,0,48,37,36,38],
[38,40,47,32,0,32,38,38],
[43,44,49,43,48,0,40,39],
[34,48,42,44,42,40,0,41],
[37,39,49,42,42,41,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1904, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,46,43,39,34,44,45],
[45,0,46,45,35,40,49,47],
[34,34,0,39,33,23,38,38],
[37,35,41,0,36,33,41,40],
[41,45,47,44,0,42,43,38],
[46,40,57,47,38,0,47,44],
[36,31,42,39,37,33,0,42],
[35,33,42,40,42,36,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1905, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,46,56,50,38,55,54],
[27,0,38,39,44,34,46,36],
[34,42,0,41,45,50,46,35],
[24,41,39,0,45,46,51,48],
[30,36,35,35,0,32,48,38],
[42,46,30,34,48,0,42,43],
[25,34,34,29,32,38,0,39],
[26,44,45,32,42,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1906, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,42,40,44,46,40,45],
[46,0,41,45,45,46,39,43],
[38,39,0,37,41,38,36,37],
[40,35,43,0,42,37,35,40],
[36,35,39,38,0,44,44,39],
[34,34,42,43,36,0,46,44],
[40,41,44,45,36,34,0,41],
[35,37,43,40,41,36,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1907, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,41,41,43,47,41],
[36,0,27,35,39,38,41,43],
[40,53,0,41,32,49,47,53],
[39,45,39,0,41,44,47,49],
[39,41,48,39,0,42,43,47],
[37,42,31,36,38,0,45,36],
[33,39,33,33,37,35,0,38],
[39,37,27,31,33,44,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1908, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,46,37,35,42,43,45],
[46,0,46,44,34,38,54,41],
[34,34,0,32,30,19,37,36],
[43,36,48,0,38,30,45,52],
[45,46,50,42,0,37,44,50],
[38,42,61,50,43,0,48,47],
[37,26,43,35,36,32,0,39],
[35,39,44,28,30,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1909, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,39,49,41,47,38,41],
[45,0,43,47,46,47,36,49],
[41,37,0,44,39,45,42,43],
[31,33,36,0,44,35,34,36],
[39,34,41,36,0,47,33,35],
[33,33,35,45,33,0,31,36],
[42,44,38,46,47,49,0,48],
[39,31,37,44,45,44,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1910, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,38,31,34,31,39,31],
[44,0,43,42,46,48,34,49],
[42,37,0,37,34,39,30,43],
[49,38,43,0,30,31,42,37],
[46,34,46,50,0,37,38,42],
[49,32,41,49,43,0,34,49],
[41,46,50,38,42,46,0,45],
[49,31,37,43,38,31,35,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1911, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,60,60,40,60,59,51],
[40,0,50,39,50,59,70,69],
[20,30,0,40,39,40,39,39],
[20,41,40,0,30,70,69,40],
[40,30,41,50,0,50,49,51],
[20,21,40,10,30,0,49,30],
[21,10,41,11,31,31,0,21],
[29,11,41,40,29,50,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1912, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,32,32,48,32,17,32,16],
[48,0,49,64,49,33,48,49],
[48,31,0,64,47,48,48,64],
[32,16,16,0,32,16,49,32],
[48,31,33,48,0,17,32,48],
[63,47,32,64,63,0,64,47],
[48,32,32,31,48,16,0,16],
[64,31,16,48,32,33,64,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1913, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,27,31,33,48,59,31,41],
[53,0,40,40,61,58,40,54],
[49,40,0,59,63,53,53,50],
[47,40,21,0,45,54,37,48],
[32,19,17,35,0,42,31,28],
[21,22,27,26,38,0,33,23],
[49,40,27,43,49,47,0,44],
[39,26,30,32,52,57,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1914, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,27,39,38,40,54,35],
[44,0,32,43,42,40,48,41],
[53,48,0,60,35,57,68,56],
[41,37,20,0,25,31,44,27],
[42,38,45,55,0,41,55,37],
[40,40,23,49,39,0,53,43],
[26,32,12,36,25,27,0,34],
[45,39,24,53,43,37,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1915, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,37,38,47,37,40,35],
[45,0,36,29,42,34,44,34],
[43,44,0,40,47,32,42,39],
[42,51,40,0,54,35,44,46],
[33,38,33,26,0,28,31,32],
[43,46,48,45,52,0,40,51],
[40,36,38,36,49,40,0,32],
[45,46,41,34,48,29,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1916, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,39,50,43,38,38],
[42,0,41,43,55,51,45,40],
[39,39,0,37,47,42,37,37],
[41,37,43,0,46,37,36,36],
[30,25,33,34,0,34,35,35],
[37,29,38,43,46,0,37,40],
[42,35,43,44,45,43,0,38],
[42,40,43,44,45,40,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1917, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,40,38,35,40,42,41],
[37,0,37,38,37,42,41,34],
[40,43,0,41,44,42,35,36],
[42,42,39,0,41,42,43,38],
[45,43,36,39,0,46,38,36],
[40,38,38,38,34,0,30,29],
[38,39,45,37,42,50,0,39],
[39,46,44,42,44,51,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1918, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,42,43,49,25,42,39],
[31,0,36,37,41,31,37,34],
[38,44,0,41,38,34,32,34],
[37,43,39,0,45,34,38,43],
[31,39,42,35,0,22,27,28],
[55,49,46,46,58,0,48,38],
[38,43,48,42,53,32,0,32],
[41,46,46,37,52,42,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1919, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,46,38,45,36,49,42],
[42,0,36,38,41,42,38,33],
[34,44,0,44,34,35,34,42],
[42,42,36,0,41,34,45,31],
[35,39,46,39,0,37,39,41],
[44,38,45,46,43,0,39,41],
[31,42,46,35,41,41,0,39],
[38,47,38,49,39,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1920, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,32,43,36,37,39,42],
[42,0,39,45,33,35,34,32],
[48,41,0,43,40,42,36,42],
[37,35,37,0,30,31,28,33],
[44,47,40,50,0,35,42,41],
[43,45,38,49,45,0,46,43],
[41,46,44,52,38,34,0,40],
[38,48,38,47,39,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1921, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,42,39,51,40,45,45],
[42,0,42,33,45,39,46,37],
[38,38,0,36,41,37,40,42],
[41,47,44,0,47,40,42,47],
[29,35,39,33,0,40,35,36],
[40,41,43,40,40,0,48,49],
[35,34,40,38,45,32,0,40],
[35,43,38,33,44,31,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1922, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,49,46,45,52,38,48],
[33,0,43,44,39,53,37,52],
[31,37,0,29,40,49,31,46],
[34,36,51,0,37,51,40,39],
[35,41,40,43,0,48,38,49],
[28,27,31,29,32,0,25,40],
[42,43,49,40,42,55,0,42],
[32,28,34,41,31,40,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1923, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,32,41,39,37,45,36],
[45,0,41,38,29,36,45,36],
[48,39,0,39,40,44,47,39],
[39,42,41,0,36,33,43,29],
[41,51,40,44,0,40,54,48],
[43,44,36,47,40,0,39,38],
[35,35,33,37,26,41,0,36],
[44,44,41,51,32,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1924, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,29,32,42,37,28,40],
[34,0,35,41,44,26,9,34],
[51,45,0,46,51,45,40,39],
[48,39,34,0,53,40,27,56],
[38,36,29,27,0,26,14,30],
[43,54,35,40,54,0,33,44],
[52,71,40,53,66,47,0,43],
[40,46,41,24,50,36,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1925, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,21,24,34,34,38,34],
[52,0,30,39,35,34,34,40],
[59,50,0,43,39,39,43,37],
[56,41,37,0,41,40,41,36],
[46,45,41,39,0,45,31,40],
[46,46,41,40,35,0,36,46],
[42,46,37,39,49,44,0,44],
[46,40,43,44,40,34,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1926, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,56,40,38,28,44,47,48],
[24,0,35,37,27,34,41,38],
[40,45,0,42,36,39,50,52],
[42,43,38,0,40,39,46,47],
[52,53,44,40,0,31,54,49],
[36,46,41,41,49,0,50,57],
[33,39,30,34,26,30,0,46],
[32,42,28,33,31,23,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1927, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,38,47,43,38,39,35],
[35,0,29,48,38,36,41,33],
[42,51,0,48,42,42,38,33],
[33,32,32,0,37,38,30,31],
[37,42,38,43,0,36,42,33],
[42,44,38,42,44,0,47,42],
[41,39,42,50,38,33,0,33],
[45,47,47,49,47,38,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1928, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,40,40,43,37,43],
[41,0,34,33,36,40,38,39],
[41,46,0,41,40,42,42,44],
[40,47,39,0,40,46,40,46],
[40,44,40,40,0,44,42,43],
[37,40,38,34,36,0,41,41],
[43,42,38,40,38,39,0,48],
[37,41,36,34,37,39,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1929, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,40,40,80,80,80,80],
[40,0,80,80,80,40,80,80],
[40,0,0,80,80,40,80,80],
[40,0,0,0,80,40,40,80],
[0,0,0,0,0,40,0,80],
[0,40,40,40,40,0,40,40],
[0,0,0,40,80,40,0,80],
[0,0,0,0,0,40,0,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1930, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,41,39,38,42,38,42,34],
[39,0,35,32,31,37,38,31],
[41,45,0,39,39,42,42,35],
[42,48,41,0,40,39,46,40],
[38,49,41,40,0,42,44,39],
[42,43,38,41,38,0,41,38],
[38,42,38,34,36,39,0,36],
[46,49,45,40,41,42,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1931, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,41,34,37,30,51,37],
[36,0,30,31,42,26,33,41],
[39,50,0,35,48,36,49,51],
[46,49,45,0,50,42,44,38],
[43,38,32,30,0,32,46,34],
[50,54,44,38,48,0,49,54],
[29,47,31,36,34,31,0,36],
[43,39,29,42,46,26,44,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1932, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,30,39,38,41,50,35,41],
[50,0,43,40,42,52,42,39],
[41,37,0,45,44,49,38,39],
[42,40,35,0,40,50,34,38],
[39,38,36,40,0,53,35,42],
[30,28,31,30,27,0,32,30],
[45,38,42,46,45,48,0,44],
[39,41,41,42,38,50,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1933, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,40,67,67,52,54,54],
[27,0,40,52,39,52,27,40],
[40,40,0,54,53,53,41,40],
[13,28,26,0,27,39,27,26],
[13,41,27,53,0,39,27,53],
[28,28,27,41,41,0,41,28],
[26,53,39,53,53,39,0,54],
[26,40,40,54,27,52,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1934, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,34,45,59,50,50,36],
[26,0,32,39,36,48,27,33],
[46,48,0,41,47,49,25,47],
[35,41,39,0,44,48,41,40],
[21,44,33,36,0,38,32,31],
[30,32,31,32,42,0,34,37],
[30,53,55,39,48,46,0,49],
[44,47,33,40,49,43,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1935, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,37,46,46,42,40,50],
[41,0,37,48,39,38,39,44],
[43,43,0,49,49,45,40,50],
[34,32,31,0,33,36,32,40],
[34,41,31,47,0,41,37,45],
[38,42,35,44,39,0,35,42],
[40,41,40,48,43,45,0,42],
[30,36,30,40,35,38,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1936, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,57,35,32,45,36,42,42],
[23,0,35,26,23,24,41,30],
[45,45,0,37,36,24,34,31],
[48,54,43,0,47,43,49,35],
[35,57,44,33,0,35,50,37],
[44,56,56,37,45,0,59,41],
[38,39,46,31,30,21,0,21],
[38,50,49,45,43,39,59,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1937, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,27,40,40,55,69,40],
[38,0,24,24,24,26,51,37],
[53,56,0,26,55,55,69,52],
[40,56,54,0,42,56,69,53],
[40,56,25,38,0,55,69,66],
[25,54,25,24,25,0,67,11],
[11,29,11,11,11,13,0,11],
[40,43,28,27,14,69,69,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1938, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,39,41,40,37,36],
[38,0,39,51,42,36,39,46],
[43,41,0,45,44,33,36,48],
[41,29,35,0,39,37,40,43],
[39,38,36,41,0,32,40,46],
[40,44,47,43,48,0,42,50],
[43,41,44,40,40,38,0,50],
[44,34,32,37,34,30,30,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1939, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,37,44,30,50,47,41,44],
[43,0,39,42,44,38,41,40],
[36,41,0,29,42,39,43,35],
[50,38,51,0,52,45,51,45],
[30,36,38,28,0,36,44,33],
[33,42,41,35,44,0,40,43],
[39,39,37,29,36,40,0,38],
[36,40,45,35,47,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1940, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,43,47,30,43,36,38],
[37,0,37,38,34,38,38,31],
[37,43,0,46,36,46,44,41],
[33,42,34,0,36,37,36,42],
[50,46,44,44,0,40,39,40],
[37,42,34,43,40,0,36,43],
[44,42,36,44,41,44,0,39],
[42,49,39,38,40,37,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1941, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,43,34,46,38,39,38,35],
[37,0,39,45,37,38,44,41],
[46,41,0,49,39,38,46,40],
[34,35,31,0,35,34,42,38],
[42,43,41,45,0,41,40,39],
[41,42,42,46,39,0,40,41],
[42,36,34,38,40,40,0,39],
[45,39,40,42,41,39,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1942, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,42,34,42,42,44],
[41,0,41,40,31,40,38,46],
[35,39,0,45,36,41,43,42],
[38,40,35,0,36,40,40,39],
[46,49,44,44,0,39,50,49],
[38,40,39,40,41,0,37,49],
[38,42,37,40,30,43,0,42],
[36,34,38,41,31,31,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1943, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,38,42,42,39,41,36],
[41,0,42,46,46,46,40,39],
[42,38,0,44,50,41,39,42],
[38,34,36,0,41,35,38,35],
[38,34,30,39,0,34,41,33],
[41,34,39,45,46,0,39,30],
[39,40,41,42,39,41,0,32],
[44,41,38,45,47,50,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1944, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,32,34,40,37,39,37],
[41,0,36,35,38,41,37,38],
[48,44,0,46,42,36,40,39],
[46,45,34,0,44,38,42,38],
[40,42,38,36,0,34,40,42],
[43,39,44,42,46,0,40,43],
[41,43,40,38,40,40,0,40],
[43,42,41,42,38,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1945, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,46,39,39,44,40,42],
[32,0,42,36,36,35,41,42],
[34,38,0,36,31,41,35,36],
[41,44,44,0,33,42,45,35],
[41,44,49,47,0,41,42,40],
[36,45,39,38,39,0,39,42],
[40,39,45,35,38,41,0,31],
[38,38,44,45,40,38,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1946, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,52,47,36,41,41,65,50],
[28,0,44,33,33,34,49,31],
[33,36,0,48,37,32,48,40],
[44,47,32,0,29,35,38,38],
[39,47,43,51,0,42,49,50],
[39,46,48,45,38,0,49,36],
[15,31,32,42,31,31,0,32],
[30,49,40,42,30,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1947, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,41,43,41,35,47,36],
[44,0,50,47,39,40,44,38],
[39,30,0,39,34,34,40,31],
[37,33,41,0,39,34,45,44],
[39,41,46,41,0,35,40,33],
[45,40,46,46,45,0,44,43],
[33,36,40,35,40,36,0,29],
[44,42,49,36,47,37,51,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1948, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,42,36,45,41,40],
[35,0,45,40,41,44,33,40],
[37,35,0,33,38,34,33,39],
[38,40,47,0,37,34,32,36],
[44,39,42,43,0,43,43,44],
[35,36,46,46,37,0,32,38],
[39,47,47,48,37,48,0,43],
[40,40,41,44,36,42,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1949, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,46,42,48,48,49,40],
[26,0,30,24,33,43,42,29],
[34,50,0,45,50,48,49,32],
[38,56,35,0,41,44,47,44],
[32,47,30,39,0,46,40,39],
[32,37,32,36,34,0,39,30],
[31,38,31,33,40,41,0,38],
[40,51,48,36,41,50,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1950, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,37,41,36,41,39,42],
[40,0,40,39,48,54,37,42],
[43,40,0,42,51,47,37,47],
[39,41,38,0,42,43,45,46],
[44,32,29,38,0,44,32,37],
[39,26,33,37,36,0,35,26],
[41,43,43,35,48,45,0,46],
[38,38,33,34,43,54,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1951, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,35,42,34,42,43,35],
[45,0,37,45,42,37,43,38],
[45,43,0,44,42,38,42,45],
[38,35,36,0,38,35,39,37],
[46,38,38,42,0,43,40,36],
[38,43,42,45,37,0,44,41],
[37,37,38,41,40,36,0,44],
[45,42,35,43,44,39,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1952, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,44,42,44,47,40,42],
[44,0,48,38,45,46,41,45],
[36,32,0,37,41,39,39,38],
[38,42,43,0,50,45,42,43],
[36,35,39,30,0,41,31,40],
[33,34,41,35,39,0,43,44],
[40,39,41,38,49,37,0,46],
[38,35,42,37,40,36,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1953, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,53,52,51,44,51,42,37],
[27,0,52,52,55,42,43,36],
[28,28,0,25,55,36,35,46],
[29,28,55,0,46,37,45,47],
[36,25,25,34,0,34,43,18],
[29,38,44,43,46,0,18,37],
[38,37,45,35,37,62,0,38],
[43,44,34,33,62,43,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1954, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,39,44,44,37,42,39],
[41,0,39,36,34,33,30,38],
[41,41,0,43,34,37,38,32],
[36,44,37,0,35,39,39,35],
[36,46,46,45,0,40,44,42],
[43,47,43,41,40,0,35,41],
[38,50,42,41,36,45,0,40],
[41,42,48,45,38,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1955, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,39,35,51,47,37,44],
[32,0,38,39,38,42,32,44],
[41,42,0,37,36,40,43,48],
[45,41,43,0,43,40,36,45],
[29,42,44,37,0,41,39,38],
[33,38,40,40,39,0,37,43],
[43,48,37,44,41,43,0,46],
[36,36,32,35,42,37,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1956, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,35,38,40,40,36],
[46,0,40,42,45,45,49,37],
[39,40,0,41,39,37,45,37],
[45,38,39,0,29,40,44,38],
[42,35,41,51,0,48,48,43],
[40,35,43,40,32,0,51,36],
[40,31,35,36,32,29,0,32],
[44,43,43,42,37,44,48,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1957, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,41,43,46,38,43,40],
[46,0,48,43,48,40,38,45],
[39,32,0,37,40,31,42,40],
[37,37,43,0,44,40,42,38],
[34,32,40,36,0,38,32,33],
[42,40,49,40,42,0,46,43],
[37,42,38,38,48,34,0,38],
[40,35,40,42,47,37,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1958, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,57,44,36,53,48,48],
[38,0,49,37,40,50,39,42],
[23,31,0,28,19,26,30,32],
[36,43,52,0,32,32,45,42],
[44,40,61,48,0,53,52,45],
[27,30,54,48,27,0,34,31],
[32,41,50,35,28,46,0,49],
[32,38,48,38,35,49,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1959, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,53,47,40,37,39],
[44,0,27,45,52,48,43,40],
[44,53,0,52,53,45,42,40],
[27,35,28,0,37,47,26,34],
[33,28,27,43,0,44,30,39],
[40,32,35,33,36,0,35,32],
[43,37,38,54,50,45,0,41],
[41,40,40,46,41,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1960, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,40,39,35,43,40,41],
[36,0,39,36,34,41,38,34],
[40,41,0,39,41,47,42,40],
[41,44,41,0,41,47,41,35],
[45,46,39,39,0,50,45,42],
[37,39,33,33,30,0,39,37],
[40,42,38,39,35,41,0,40],
[39,46,40,45,38,43,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1961, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,43,47,48,38,41,43],
[35,0,43,44,49,42,37,39],
[37,37,0,39,44,38,39,34],
[33,36,41,0,41,42,44,43],
[32,31,36,39,0,35,36,35],
[42,38,42,38,45,0,35,38],
[39,43,41,36,44,45,0,35],
[37,41,46,37,45,42,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1962, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,50,39,49,41,46,36],
[32,0,43,27,29,30,31,28],
[30,37,0,38,41,24,40,26],
[41,53,42,0,48,36,38,31],
[31,51,39,32,0,31,44,23],
[39,50,56,44,49,0,43,41],
[34,49,40,42,36,37,0,28],
[44,52,54,49,57,39,52,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1963, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,48,42,39,40,45,39,38],
[32,0,38,38,30,41,35,40],
[38,42,0,37,27,41,38,39],
[41,42,43,0,31,37,36,44],
[40,50,53,49,0,42,49,46],
[35,39,39,43,38,0,44,50],
[41,45,42,44,31,36,0,49],
[42,40,41,36,34,30,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1964, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,52,38,38,33,49,41],
[31,0,38,35,31,29,40,36],
[28,42,0,30,27,31,33,23],
[42,45,50,0,41,30,47,40],
[42,49,53,39,0,41,56,38],
[47,51,49,50,39,0,53,44],
[31,40,47,33,24,27,0,33],
[39,44,57,40,42,36,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1965, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,38,41,53,44,40,44,39],
[42,0,39,41,30,48,30,39],
[39,41,0,40,39,48,48,41],
[27,39,40,0,38,40,40,28],
[36,50,41,42,0,49,44,35],
[40,32,32,40,31,0,42,27],
[36,50,32,40,36,38,0,35],
[41,41,39,52,45,53,45,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1966, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,37,31,33,37,44,34],
[45,0,43,36,45,37,42,46],
[43,37,0,42,46,40,38,45],
[49,44,38,0,43,42,47,37],
[47,35,34,37,0,44,39,42],
[43,43,40,38,36,0,43,43],
[36,38,42,33,41,37,0,33],
[46,34,35,43,38,37,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1967, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,33,33,27,40,33],
[35,0,40,30,29,30,38,38],
[38,40,0,35,29,37,33,41],
[47,50,45,0,41,31,41,47],
[47,51,51,39,0,42,46,50],
[53,50,43,49,38,0,52,52],
[40,42,47,39,34,28,0,43],
[47,42,39,33,30,28,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1968, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,34,32,40,39,36,35],
[44,0,38,36,39,39,39,39],
[46,42,0,44,46,41,42,40],
[48,44,36,0,39,38,40,40],
[40,41,34,41,0,37,40,32],
[41,41,39,42,43,0,45,39],
[44,41,38,40,40,35,0,40],
[45,41,40,40,48,41,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1969, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,34,29,25,48,35,37,23],
[46,0,45,36,48,41,56,31],
[51,35,0,60,58,46,51,52],
[55,44,20,0,48,35,42,40],
[32,32,22,32,0,28,35,44],
[45,39,34,45,52,0,51,40],
[43,24,29,38,45,29,0,49],
[57,49,28,40,36,40,31,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1970, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,45,42,40,36,44,36,41],
[35,0,39,39,31,39,40,39],
[38,41,0,43,30,37,39,44],
[40,41,37,0,31,38,31,35],
[44,49,50,49,0,47,37,41],
[36,41,43,42,33,0,39,41],
[44,40,41,49,43,41,0,40],
[39,41,36,45,39,39,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1971, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,39,44,43,42,34],
[38,0,34,40,41,41,40,40],
[40,46,0,46,42,42,39,41],
[41,40,34,0,44,42,38,33],
[36,39,38,36,0,37,40,33],
[37,39,38,38,43,0,42,35],
[38,40,41,42,40,38,0,33],
[46,40,39,47,47,45,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1972, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,36,36,43,41,41,45,44],
[44,0,30,36,28,38,36,43],
[44,50,0,39,31,47,44,40],
[37,44,41,0,45,43,44,38],
[39,52,49,35,0,41,53,48],
[39,42,33,37,39,0,41,47],
[35,44,36,36,27,39,0,42],
[36,37,40,42,32,33,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1973, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,37,43,25,42,31,33],
[38,0,40,39,35,41,35,29],
[43,40,0,45,38,42,35,35],
[37,41,35,0,25,42,26,34],
[55,45,42,55,0,46,46,40],
[38,39,38,38,34,0,43,32],
[49,45,45,54,34,37,0,41],
[47,51,45,46,40,48,39,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1974, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,31,49,40,28,38,44],
[45,0,43,60,42,34,43,43],
[49,37,0,47,37,58,43,47],
[31,20,33,0,42,33,42,33],
[40,38,43,38,0,47,29,44],
[52,46,22,47,33,0,32,48],
[42,37,37,38,51,48,0,44],
[36,37,33,47,36,32,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1975, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,44,46,38,40,49,36],
[40,0,33,36,38,37,42,43],
[36,47,0,45,36,36,44,32],
[34,44,35,0,35,32,39,34],
[42,42,44,45,0,37,55,30],
[40,43,44,48,43,0,53,45],
[31,38,36,41,25,27,0,27],
[44,37,48,46,50,35,53,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1976, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,46,42,44,44,50,42,37],
[34,0,40,32,39,43,38,31],
[38,40,0,38,43,42,39,40],
[36,48,42,0,39,40,35,36],
[36,41,37,41,0,50,34,34],
[30,37,38,40,30,0,35,32],
[38,42,41,45,46,45,0,37],
[43,49,40,44,46,48,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1977, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,35,42,38,43,35,33],
[40,0,35,41,40,44,43,39],
[45,45,0,42,41,50,50,38],
[38,39,38,0,41,45,40,41],
[42,40,39,39,0,47,42,35],
[37,36,30,35,33,0,35,29],
[45,37,30,40,38,45,0,38],
[47,41,42,39,45,51,42,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1978, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,35,36,41,42,38,28,47],
[45,0,51,41,58,37,40,53],
[44,29,0,38,37,22,19,32],
[39,39,42,0,47,36,36,46],
[38,22,43,33,0,25,17,41],
[42,43,58,44,55,0,44,40],
[52,40,61,44,63,36,0,52],
[33,27,48,34,39,40,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1979, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,51,50,42,48,37,43],
[33,0,41,41,35,39,34,27],
[29,39,0,43,34,42,36,28],
[30,39,37,0,33,39,40,41],
[38,45,46,47,0,45,35,38],
[32,41,38,41,35,0,30,30],
[43,46,44,40,45,50,0,34],
[37,53,52,39,42,50,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1980, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,28,39,46,41,30,32,48],
[52,0,42,52,50,44,29,57],
[41,38,0,46,53,44,45,42],
[34,28,34,0,31,35,37,41],
[39,30,27,49,0,42,36,44],
[50,36,36,45,38,0,37,49],
[48,51,35,43,44,43,0,52],
[32,23,38,39,36,31,28,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1981, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,45,51,39,45,45,60],
[41,0,42,42,42,35,33,39],
[35,38,0,33,30,42,25,35],
[29,38,47,0,27,34,30,30],
[41,38,50,53,0,38,40,44],
[35,45,38,46,42,0,40,47],
[35,47,55,50,40,40,0,39],
[20,41,45,50,36,33,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1982, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,55,40,47,41,48,48,39],
[25,0,27,40,31,46,47,37],
[40,53,0,46,41,56,40,45],
[33,40,34,0,32,41,39,46],
[39,49,39,48,0,43,40,50],
[32,34,24,39,37,0,35,49],
[32,33,40,41,40,45,0,39],
[41,43,35,34,30,31,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1983, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,46,53,46,36,44,37],
[38,0,48,52,46,42,44,40],
[34,32,0,40,37,37,35,22],
[27,28,40,0,40,24,35,29],
[34,34,43,40,0,37,37,32],
[44,38,43,56,43,0,46,34],
[36,36,45,45,43,34,0,42],
[43,40,58,51,48,46,38,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1984, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,47,36,36,52,58,38,32],
[33,0,33,33,48,48,49,35],
[44,47,0,44,38,44,38,38],
[44,47,36,0,59,45,46,40],
[28,32,42,21,0,38,30,24],
[22,32,36,35,42,0,29,32],
[42,31,42,34,50,51,0,31],
[48,45,42,40,56,48,49,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1985, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,52,45,42,45,42],
[40,0,32,41,42,41,33,32],
[38,48,0,46,38,44,39,41],
[28,39,34,0,39,34,46,31],
[35,38,42,41,0,44,41,34],
[38,39,36,46,36,0,38,38],
[35,47,41,34,39,42,0,39],
[38,48,39,49,46,42,41,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1986, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,39,35,36,30,41,37,34],
[41,0,41,43,33,42,47,39],
[45,39,0,45,35,46,45,40],
[44,37,35,0,38,45,46,39],
[50,47,45,42,0,47,41,39],
[39,38,34,35,33,0,40,40],
[43,33,35,34,39,40,0,34],
[46,41,40,41,41,40,46,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1987, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,52,41,47,29,40,42],
[31,0,42,44,41,42,39,44],
[28,38,0,46,42,38,50,47],
[39,36,34,0,44,35,39,44],
[33,39,38,36,0,27,39,36],
[51,38,42,45,53,0,40,49],
[40,41,30,41,41,40,0,51],
[38,36,33,36,44,31,29,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1988, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,59,51,40,52,68,49,59],
[21,0,30,40,40,60,59,19],
[29,50,0,40,52,40,49,50],
[40,40,40,0,59,60,69,40],
[28,40,28,21,0,49,30,29],
[12,20,40,20,31,0,38,20],
[31,21,31,11,50,42,0,10],
[21,61,30,40,51,60,70,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1989, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,39,41,46,46,40,40],
[36,0,37,36,34,38,39,40],
[41,43,0,43,38,48,43,40],
[39,44,37,0,45,48,35,38],
[34,46,42,35,0,40,36,35],
[34,42,32,32,40,0,35,39],
[40,41,37,45,44,45,0,43],
[40,40,40,42,45,41,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1990, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,40,42,42,49,44,45,49],
[40,0,35,32,38,36,42,37],
[38,45,0,34,49,46,40,41],
[38,48,46,0,53,43,50,44],
[31,42,31,27,0,34,36,32],
[36,44,34,37,46,0,41,36],
[35,38,40,30,44,39,0,46],
[31,43,39,36,48,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1991, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,49,40,35,47,38,37,41],
[31,0,43,37,49,38,38,46],
[40,37,0,41,44,43,34,41],
[45,43,39,0,42,42,39,40],
[33,31,36,38,0,36,34,35],
[42,42,37,38,44,0,38,43],
[43,42,46,41,46,42,0,40],
[39,34,39,40,45,37,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1992, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,44,46,43,40,47,50,45],
[36,0,43,39,36,44,40,46],
[34,37,0,39,31,38,35,40],
[37,41,41,0,42,48,41,51],
[40,44,49,38,0,45,42,45],
[33,36,42,32,35,0,39,42],
[30,40,45,39,38,41,0,48],
[35,34,40,29,35,38,32,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1993, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,50,51,40,51,44,40,41],
[30,0,36,39,34,37,33,35],
[29,44,0,35,42,47,41,39],
[40,41,45,0,41,40,40,44],
[29,46,38,39,0,35,39,37],
[36,43,33,40,45,0,44,46],
[40,47,39,40,41,36,0,37],
[39,45,41,36,43,34,43,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1994, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,36,44,33,31,36,38],
[47,0,46,54,37,42,36,43],
[44,34,0,50,36,42,32,49],
[36,26,30,0,34,35,25,26],
[47,43,44,46,0,39,46,42],
[49,38,38,45,41,0,42,37],
[44,44,48,55,34,38,0,44],
[42,37,31,54,38,43,36,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1995, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,31,41,29,39,16,31],
[38,0,41,49,38,40,33,26],
[49,39,0,58,31,54,33,39],
[39,31,22,0,26,36,29,32],
[51,42,49,54,0,55,40,36],
[41,40,26,44,25,0,28,25],
[64,47,47,51,40,52,0,40],
[49,54,41,48,44,55,40,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1996, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,54,54,26,80,52,54,54],
[26,0,54,26,54,26,54,54],
[26,26,0,26,52,52,26,26],
[54,54,54,0,80,54,54,28],
[0,26,28,0,0,26,0,28],
[28,54,28,26,54,0,54,28],
[26,26,54,26,80,26,0,54],
[26,26,54,52,52,52,26,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1997, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,42,40,38,32,36,42,40],
[38,0,30,46,33,41,45,33],
[40,50,0,38,44,42,40,43],
[42,34,42,0,40,45,42,41],
[48,47,36,40,0,38,50,45],
[44,39,38,35,42,0,54,38],
[38,35,40,38,30,26,0,33],
[40,47,37,39,35,42,47,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1998, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,33,41,32,31,39,36,32],
[47,0,41,45,38,42,42,42],
[39,39,0,41,36,37,40,36],
[48,35,39,0,44,42,41,43],
[49,42,44,36,0,38,34,44],
[41,38,43,38,42,0,31,30],
[44,38,40,39,46,49,0,43],
[48,38,44,37,36,50,37,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 1999, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

##############################################################
om = np.array([
[0,29,35,41,35,39,35,36],
[51,0,38,56,36,47,45,33],
[45,42,0,41,29,44,36,46],
[39,24,39,0,40,32,28,36],
[45,44,51,40,0,36,40,46],
[41,33,36,48,44,0,36,36],
[45,35,44,52,40,44,0,46],
[44,47,34,44,34,44,34,0]])



times = np.zeros(rep)
for i in range(rep):
    # Algorithm with Condorcet winner
    algorithm = am3.AzziniMunda3(om) 
    start_time = time.time()
    sol = algorithm.execute()
    t = (time.time() - start_time)
    times[i] = t
    #print(t)
exec_time = np.median(times)
result = np.append(np.array([8, 80, 2000, "ME-RCW", exec_time, sol.shape[0], algorithm.ntentative], dtype=np.dtype(object)), times)
print(result[:7])
results = np.vstack((results, result))

 
pd.DataFrame(results).to_csv("predictTime_8_80.csv", index=False, header=False)